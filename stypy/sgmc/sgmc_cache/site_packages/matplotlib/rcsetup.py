
# -*- coding: utf-8 -*-

"""
ORIGINAL PROGRAM SOURCE CODE:
1: '''
2: The rcsetup module contains the default values and the validation code for
3: customization using matplotlib's rc settings.
4: 
5: Each rc setting is assigned a default value and a function used to validate
6: any attempted changes to that setting. The default values and validation
7: functions are defined in the rcsetup module, and are used to construct the
8: rcParams global object which stores the settings and is referenced throughout
9: matplotlib.
10: 
11: These default values should be consistent with the default matplotlibrc file
12: that actually reflects the values given here. Any additions or deletions to the
13: parameter set listed here should also be visited to the
14: :file:`matplotlibrc.template` in matplotlib's root source directory.
15: '''
16: from __future__ import (absolute_import, division, print_function,
17:                         unicode_literals)
18: 
19: import six
20: 
21: from collections import Iterable, Mapping
22: from functools import reduce
23: import operator
24: import os
25: import warnings
26: import re
27: 
28: from matplotlib.cbook import mplDeprecation, deprecated, ls_mapper
29: from matplotlib.fontconfig_pattern import parse_fontconfig_pattern
30: from matplotlib.colors import is_color_like
31: 
32: 
33: # Don't let the original cycler collide with our validating cycler
34: from cycler import Cycler, cycler as ccycler
35: 
36: # interactive_bk = ['gtk', 'gtkagg', 'gtkcairo', 'qt4agg',
37: #                  'tkagg', 'wx', 'wxagg', 'webagg']
38: # The capitalized forms are needed for ipython at present; this may
39: # change for later versions.
40: 
41: interactive_bk = ['GTK', 'GTKAgg', 'GTKCairo', 'MacOSX',
42:                   'Qt4Agg', 'Qt5Agg', 'TkAgg', 'WX', 'WXAgg',
43:                   'GTK3Cairo', 'GTK3Agg', 'WebAgg', 'nbAgg']
44: 
45: 
46: non_interactive_bk = ['agg', 'cairo', 'gdk',
47:                       'pdf', 'pgf', 'ps', 'svg', 'template']
48: all_backends = interactive_bk + non_interactive_bk
49: 
50: 
51: class ValidateInStrings(object):
52:     def __init__(self, key, valid, ignorecase=False):
53:         'valid is a list of legal strings'
54:         self.key = key
55:         self.ignorecase = ignorecase
56: 
57:         def func(s):
58:             if ignorecase:
59:                 return s.lower()
60:             else:
61:                 return s
62:         self.valid = {func(k): k for k in valid}
63: 
64:     def __call__(self, s):
65:         if self.ignorecase:
66:             s = s.lower()
67:         if s in self.valid:
68:             return self.valid[s]
69:         raise ValueError('Unrecognized %s string "%s": valid strings are %s'
70:                          % (self.key, s, list(six.itervalues(self.valid))))
71: 
72: 
73: def _listify_validator(scalar_validator, allow_stringlist=False):
74:     def f(s):
75:         if isinstance(s, six.string_types):
76:             try:
77:                 return [scalar_validator(v.strip()) for v in s.split(',')
78:                         if v.strip()]
79:             except Exception:
80:                 if allow_stringlist:
81:                     # Sometimes, a list of colors might be a single string
82:                     # of single-letter colornames. So give that a shot.
83:                     return [scalar_validator(v.strip()) for v in s if v.strip()]
84:                 else:
85:                     raise
86:         # We should allow any generic sequence type, including generators,
87:         # Numpy ndarrays, and pandas data structures.  However, unordered
88:         # sequences, such as sets, should be allowed but discouraged unless the
89:         # user desires pseudorandom behavior.
90:         elif isinstance(s, Iterable) and not isinstance(s, Mapping):
91:             # The condition on this list comprehension will preserve the
92:             # behavior of filtering out any empty strings (behavior was
93:             # from the original validate_stringlist()), while allowing
94:             # any non-string/text scalar values such as numbers and arrays.
95:             return [scalar_validator(v) for v in s
96:                     if not isinstance(v, six.string_types) or v]
97:         else:
98:             raise ValueError("{!r} must be of type: string or non-dictionary "
99:                              "iterable".format(s))
100:     # Cast `str` to keep Py2 happy despite `unicode_literals`.
101:     try:
102:         f.__name__ = str("{}list".format(scalar_validator.__name__))
103:     except AttributeError:  # class instance.
104:         f.__name__ = str("{}List".format(type(scalar_validator).__name__))
105:     f.__doc__ = scalar_validator.__doc__
106:     return f
107: 
108: 
109: def validate_any(s):
110:     return s
111: validate_anylist = _listify_validator(validate_any)
112: 
113: 
114: def validate_path_exists(s):
115:     '''If s is a path, return s, else False'''
116:     if s is None:
117:         return None
118:     if os.path.exists(s):
119:         return s
120:     else:
121:         raise RuntimeError('"%s" should be a path but it does not exist' % s)
122: 
123: 
124: def validate_bool(b):
125:     '''Convert b to a boolean or raise'''
126:     if isinstance(b, six.string_types):
127:         b = b.lower()
128:     if b in ('t', 'y', 'yes', 'on', 'true', '1', 1, True):
129:         return True
130:     elif b in ('f', 'n', 'no', 'off', 'false', '0', 0, False):
131:         return False
132:     else:
133:         raise ValueError('Could not convert "%s" to boolean' % b)
134: 
135: 
136: def validate_bool_maybe_none(b):
137:     'Convert b to a boolean or raise'
138:     if isinstance(b, six.string_types):
139:         b = b.lower()
140:     if b is None or b == 'none':
141:         return None
142:     if b in ('t', 'y', 'yes', 'on', 'true', '1', 1, True):
143:         return True
144:     elif b in ('f', 'n', 'no', 'off', 'false', '0', 0, False):
145:         return False
146:     else:
147:         raise ValueError('Could not convert "%s" to boolean' % b)
148: 
149: 
150: def deprecate_axes_hold(value):
151:     if value is None:
152:         return None  # converted to True where accessed in figure.py,
153:                      # axes/_base.py
154:     warnings.warn("axes.hold is deprecated, will be removed in 3.0",
155:                   mplDeprecation)
156:     return validate_bool(value)
157: 
158: 
159: def validate_float(s):
160:     '''convert s to float or raise'''
161:     try:
162:         return float(s)
163:     except ValueError:
164:         raise ValueError('Could not convert "%s" to float' % s)
165: validate_floatlist = _listify_validator(validate_float)
166: 
167: 
168: def validate_float_or_None(s):
169:     '''convert s to float, None or raise'''
170:     # values directly from the rc file can only be strings,
171:     # so we need to recognize the string "None" and convert
172:     # it into the object. We will be case-sensitive here to
173:     # avoid confusion between string values of 'none', which
174:     # can be a valid string value for some other parameters.
175:     if s is None or s == 'None':
176:         return None
177:     try:
178:         return float(s)
179:     except ValueError:
180:         raise ValueError('Could not convert "%s" to float or None' % s)
181: 
182: 
183: def validate_string_or_None(s):
184:     '''convert s to string or raise'''
185:     if s is None:
186:         return None
187:     try:
188:         return six.text_type(s)
189:     except ValueError:
190:         raise ValueError('Could not convert "%s" to string' % s)
191: 
192: 
193: def validate_axisbelow(s):
194:     try:
195:         return validate_bool(s)
196:     except ValueError:
197:         if isinstance(s, six.string_types):
198:             s = s.lower()
199:             if s.startswith('line'):
200:                 return 'line'
201:     raise ValueError('%s cannot be interpreted as'
202:                      ' True, False, or "line"' % s)
203: 
204: 
205: def validate_dpi(s):
206:     '''confirm s is string 'figure' or convert s to float or raise'''
207:     if s == 'figure':
208:         return s
209:     try:
210:         return float(s)
211:     except ValueError:
212:         raise ValueError('"%s" is not string "figure" or'
213:             ' could not convert "%s" to float' % (s, s))
214: 
215: 
216: def validate_int(s):
217:     '''convert s to int or raise'''
218:     try:
219:         return int(s)
220:     except ValueError:
221:         raise ValueError('Could not convert "%s" to int' % s)
222: 
223: 
224: def validate_int_or_None(s):
225:     '''if not None, tries to validate as an int'''
226:     if s=='None':
227:         s = None
228:     if s is None:
229:         return None
230:     try:
231:         return int(s)
232:     except ValueError:
233:         raise ValueError('Could not convert "%s" to int' % s)
234: 
235: 
236: def validate_fonttype(s):
237:     '''
238:     confirm that this is a Postscript of PDF font type that we know how to
239:     convert to
240:     '''
241:     fonttypes = {'type3':    3,
242:                  'truetype': 42}
243:     try:
244:         fonttype = validate_int(s)
245:     except ValueError:
246:         try:
247:             return fonttypes[s.lower()]
248:         except KeyError:
249:             raise ValueError(
250:                 'Supported Postscript/PDF font types are %s' % list(fonttypes))
251:     else:
252:         if fonttype not in six.itervalues(fonttypes):
253:             raise ValueError(
254:                 'Supported Postscript/PDF font types are %s' %
255:                 list(six.itervalues(fonttypes)))
256:         return fonttype
257: 
258: 
259: _validate_standard_backends = ValidateInStrings(
260:     'backend', all_backends, ignorecase=True)
261: 
262: 
263: def validate_backend(s):
264:     if s.startswith('module://'):
265:         return s
266:     else:
267:         return _validate_standard_backends(s)
268: 
269: 
270: validate_qt4 = ValidateInStrings('backend.qt4', ['PyQt4', 'PySide', 'PyQt4v2'])
271: validate_qt5 = ValidateInStrings('backend.qt5', ['PyQt5', 'PySide2'])
272: 
273: 
274: def validate_toolbar(s):
275:     validator = ValidateInStrings(
276:                 'toolbar',
277:                 ['None', 'toolbar2', 'toolmanager'],
278:                 ignorecase=True)
279:     return validator(s)
280: 
281: 
282: _seq_err_msg = ('You must supply exactly {n} values, you provided {num} '
283:                 'values: {s}')
284: 
285: _str_err_msg = ('You must supply exactly {n} comma-separated values, you '
286:                 'provided {num} comma-separated values: {s}')
287: 
288: 
289: class validate_nseq_float(object):
290:     def __init__(self, n=None, allow_none=False):
291:         self.n = n
292:         self.allow_none = allow_none
293: 
294:     def __call__(self, s):
295:         '''return a seq of n floats or raise'''
296:         if isinstance(s, six.string_types):
297:             s = [x.strip() for x in s.split(',')]
298:             err_msg = _str_err_msg
299:         else:
300:             err_msg = _seq_err_msg
301: 
302:         if self.n is not None and len(s) != self.n:
303:             raise ValueError(err_msg.format(n=self.n, num=len(s), s=s))
304: 
305:         try:
306:             return [float(val)
307:                     if not self.allow_none or val is not None
308:                     else val
309:                     for val in s]
310:         except ValueError:
311:             raise ValueError('Could not convert all entries to floats')
312: 
313: 
314: class validate_nseq_int(object):
315:     def __init__(self, n=None):
316:         self.n = n
317: 
318:     def __call__(self, s):
319:         '''return a seq of n ints or raise'''
320:         if isinstance(s, six.string_types):
321:             s = [x.strip() for x in s.split(',')]
322:             err_msg = _str_err_msg
323:         else:
324:             err_msg = _seq_err_msg
325: 
326:         if self.n is not None and len(s) != self.n:
327:             raise ValueError(err_msg.format(n=self.n, num=len(s), s=s))
328: 
329:         try:
330:             return [int(val) for val in s]
331:         except ValueError:
332:             raise ValueError('Could not convert all entries to ints')
333: 
334: 
335: def validate_color_or_inherit(s):
336:     'return a valid color arg'
337:     if s == 'inherit':
338:         return s
339:     return validate_color(s)
340: 
341: 
342: def validate_color_or_auto(s):
343:     if s == 'auto':
344:         return s
345:     return validate_color(s)
346: 
347: 
348: def validate_color_for_prop_cycle(s):
349:     # Special-case the N-th color cycle syntax, this obviously can not
350:     # go in the color cycle.
351:     if isinstance(s, bytes):
352:         match = re.match(b'^C[0-9]$', s)
353:         if match is not None:
354:             raise ValueError('Can not put cycle reference ({cn!r}) in '
355:                              'prop_cycler'.format(cn=s))
356:     elif isinstance(s, six.string_types):
357:         match = re.match('^C[0-9]$', s)
358:         if match is not None:
359:             raise ValueError('Can not put cycle reference ({cn!r}) in '
360:                              'prop_cycler'.format(cn=s))
361:     return validate_color(s)
362: 
363: 
364: def validate_color(s):
365:     'return a valid color arg'
366:     try:
367:         if s.lower() == 'none':
368:             return 'none'
369:     except AttributeError:
370:         pass
371: 
372:     if isinstance(s, six.string_types):
373:         if len(s) == 6 or len(s) == 8:
374:             stmp = '#' + s
375:             if is_color_like(stmp):
376:                 return stmp
377: 
378:     if is_color_like(s):
379:         return s
380: 
381:     # If it is still valid, it must be a tuple.
382:     colorarg = s
383:     msg = ''
384:     if s.find(',') >= 0:
385:         # get rid of grouping symbols
386:         stmp = ''.join([c for c in s if c.isdigit() or c == '.' or c == ','])
387:         vals = stmp.split(',')
388:         if len(vals) not in [3, 4]:
389:             msg = '\nColor tuples must be of length 3 or 4'
390:         else:
391:             try:
392:                 colorarg = [float(val) for val in vals]
393:             except ValueError:
394:                 msg = '\nCould not convert all entries to floats'
395: 
396:     if not msg and is_color_like(colorarg):
397:         return colorarg
398: 
399:     raise ValueError('%s does not look like a color arg%s' % (s, msg))
400: 
401: 
402: def deprecate_axes_colorcycle(value):
403:     warnings.warn("axes.color_cycle is deprecated.  Use axes.prop_cycle "
404:                   "instead. Will be removed in 2.1.0",
405:                   mplDeprecation)
406:     return validate_colorlist(value)
407: 
408: 
409: validate_colorlist = _listify_validator(validate_color, allow_stringlist=True)
410: validate_colorlist.__doc__ = 'return a list of colorspecs'
411: 
412: validate_stringlist = _listify_validator(six.text_type)
413: validate_stringlist.__doc__ = 'return a list'
414: 
415: validate_orientation = ValidateInStrings(
416:     'orientation', ['landscape', 'portrait'])
417: 
418: 
419: def validate_aspect(s):
420:     if s in ('auto', 'equal'):
421:         return s
422:     try:
423:         return float(s)
424:     except ValueError:
425:         raise ValueError('not a valid aspect specification')
426: 
427: 
428: def validate_fontsize(s):
429:     fontsizes = ['xx-small', 'x-small', 'small', 'medium', 'large',
430:                  'x-large', 'xx-large', 'smaller', 'larger']
431:     if isinstance(s, six.string_types):
432:         s = s.lower()
433:     if s in fontsizes:
434:         return s
435:     try:
436:         return float(s)
437:     except ValueError:
438:         raise ValueError("%s is not a valid font size. Valid font sizes "
439:                          "are %s." % (s, ", ".join(fontsizes)))
440: 
441: 
442: validate_fontsizelist = _listify_validator(validate_fontsize)
443: 
444: 
445: def validate_font_properties(s):
446:     parse_fontconfig_pattern(s)
447:     return s
448: 
449: 
450: validate_fontset = ValidateInStrings(
451:     'fontset',
452:     ['dejavusans', 'dejavuserif', 'cm', 'stix', 'stixsans', 'custom'])
453: 
454: validate_mathtext_default = ValidateInStrings(
455:     'default',
456:     "rm cal it tt sf bf default bb frak circled scr regular".split())
457: 
458: validate_verbose = ValidateInStrings(
459:     'verbose',
460:     ['silent', 'helpful', 'debug', 'debug-annoying'])
461: 
462: _validate_alignment = ValidateInStrings(
463:     'alignment',
464:     ['center', 'top', 'bottom', 'baseline',
465:      'center_baseline'])
466: 
467: def validate_whiskers(s):
468:     if s == 'range':
469:         return 'range'
470:     else:
471:         try:
472:             v = validate_nseq_float(2)(s)
473:             return v
474:         except (TypeError, ValueError):
475:             try:
476:                 v = float(s)
477:                 return v
478:             except ValueError:
479:                 raise ValueError("Not a valid whisker value ['range', float, "
480:                                  "(float, float)]")
481: 
482: 
483: def update_savefig_format(value):
484:     # The old savefig.extension could also have a value of "auto", but
485:     # the new savefig.format does not.  We need to fix this here.
486:     value = six.text_type(value)
487:     if value == 'auto':
488:         value = 'png'
489:     return value
490: 
491: 
492: validate_ps_papersize = ValidateInStrings(
493:     'ps_papersize',
494:     ['auto', 'letter', 'legal', 'ledger',
495:     'a0', 'a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7', 'a8', 'a9', 'a10',
496:     'b0', 'b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 'b8', 'b9', 'b10',
497:     ], ignorecase=True)
498: 
499: 
500: def validate_ps_distiller(s):
501:     if isinstance(s, six.string_types):
502:         s = s.lower()
503:     if s in ('none', None):
504:         return None
505:     elif s in ('false', False):
506:         return False
507:     elif s in ('ghostscript', 'xpdf'):
508:         return s
509:     else:
510:         raise ValueError('matplotlibrc ps.usedistiller must either be none, '
511:                          'ghostscript or xpdf')
512: 
513: validate_joinstyle = ValidateInStrings('joinstyle',
514:                                        ['miter', 'round', 'bevel'],
515:                                        ignorecase=True)
516: validate_joinstylelist = _listify_validator(validate_joinstyle)
517: 
518: validate_capstyle = ValidateInStrings('capstyle',
519:                                       ['butt', 'round', 'projecting'],
520:                                       ignorecase=True)
521: validate_capstylelist = _listify_validator(validate_capstyle)
522: 
523: validate_fillstyle = ValidateInStrings('markers.fillstyle',
524:                                        ['full', 'left', 'right', 'bottom',
525:                                         'top', 'none'])
526: validate_fillstylelist = _listify_validator(validate_fillstyle)
527: 
528: _validate_negative_linestyle = ValidateInStrings('negative_linestyle',
529:                                                  ['solid', 'dashed'],
530:                                                  ignorecase=True)
531: 
532: 
533: @deprecated('2.1',
534:             addendum=(" See 'validate_negative_linestyle_legacy' " +
535:                       "deprecation warning for more information."))
536: def validate_negative_linestyle(s):
537:     return _validate_negative_linestyle(s)
538: 
539: 
540: @deprecated('2.1',
541:             addendum=(" The 'contour.negative_linestyle' rcParam now " +
542:                       "follows the same validation as the other rcParams " +
543:                       "that are related to line style."))
544: def validate_negative_linestyle_legacy(s):
545:     try:
546:         res = validate_negative_linestyle(s)
547:         return res
548:     except ValueError:
549:         dashes = validate_nseq_float(2)(s)
550:         return (0, dashes)  # (offset, (solid, blank))
551: 
552: 
553: def validate_corner_mask(s):
554:     if s == 'legacy':
555:         return s
556:     else:
557:         return validate_bool(s)
558: 
559: 
560: validate_legend_loc = ValidateInStrings(
561:     'legend_loc',
562:     ['best',
563:      'upper right',
564:      'upper left',
565:      'lower left',
566:      'lower right',
567:      'right',
568:      'center left',
569:      'center right',
570:      'lower center',
571:      'upper center',
572:      'center'], ignorecase=True)
573: 
574: 
575: def deprecate_svg_image_noscale(value):
576:     warnings.warn("svg.image_noscale is deprecated. Set "
577:                   "image.interpolation to 'none' instead.",
578:                   mplDeprecation)
579: 
580: 
581: def deprecate_svg_embed_char_paths(value):
582:     warnings.warn("svg.embed_char_paths is deprecated.  Use "
583:                   "svg.fonttype instead.",
584:                   mplDeprecation)
585: 
586: 
587: validate_svg_fonttype = ValidateInStrings('svg.fonttype',
588:                                           ['none', 'path', 'svgfont'])
589: 
590: 
591: def validate_hinting(s):
592:     if s in (True, False):
593:         return s
594:     if s.lower() in ('auto', 'native', 'either', 'none'):
595:         return s.lower()
596:     raise ValueError("hinting should be 'auto', 'native', 'either' or 'none'")
597: 
598: validate_pgf_texsystem = ValidateInStrings('pgf.texsystem',
599:                                            ['xelatex', 'lualatex', 'pdflatex'])
600: 
601: validate_movie_writer = ValidateInStrings('animation.writer',
602:     ['ffmpeg', 'ffmpeg_file',
603:      'avconv', 'avconv_file',
604:      'mencoder', 'mencoder_file',
605:      'imagemagick', 'imagemagick_file',
606:      'html'])
607: 
608: validate_movie_frame_fmt = ValidateInStrings('animation.frame_format',
609:     ['png', 'jpeg', 'tiff', 'raw', 'rgba'])
610: 
611: validate_axis_locator = ValidateInStrings('major', ['minor', 'both', 'major'])
612: 
613: validate_movie_html_fmt = ValidateInStrings('animation.html',
614:     ['html5', 'jshtml', 'none'])
615: 
616: def validate_bbox(s):
617:     if isinstance(s, six.string_types):
618:         s = s.lower()
619:         if s == 'tight':
620:             return s
621:         if s == 'standard':
622:             return None
623:         raise ValueError("bbox should be 'tight' or 'standard'")
624:     elif s is not None:
625:         # Backwards compatibility. None is equivalent to 'standard'.
626:         raise ValueError("bbox should be 'tight' or 'standard'")
627:     return s
628: 
629: def validate_sketch(s):
630:     if isinstance(s, six.string_types):
631:         s = s.lower()
632:     if s == 'none' or s is None:
633:         return None
634:     if isinstance(s, six.string_types):
635:         result = tuple([float(v.strip()) for v in s.split(',')])
636:     elif isinstance(s, (list, tuple)):
637:         result = tuple([float(v) for v in s])
638:     if len(result) != 3:
639:         raise ValueError("path.sketch must be a tuple (scale, length, randomness)")
640:     return result
641: 
642: class ValidateInterval(object):
643:     '''
644:     Value must be in interval
645:     '''
646:     def __init__(self, vmin, vmax, closedmin=True, closedmax=True):
647:         self.vmin = vmin
648:         self.vmax = vmax
649:         self.cmin = closedmin
650:         self.cmax = closedmax
651: 
652:     def __call__(self, s):
653:         try:
654:             s = float(s)
655:         except ValueError:
656:             raise RuntimeError('Value must be a float; found "%s"' % s)
657: 
658:         if self.cmin and s < self.vmin:
659:             raise RuntimeError('Value must be >= %f; found "%f"' %
660:                                (self.vmin, s))
661:         elif not self.cmin and s <= self.vmin:
662:             raise RuntimeError('Value must be > %f; found "%f"' %
663:                                (self.vmin, s))
664: 
665:         if self.cmax and s > self.vmax:
666:             raise RuntimeError('Value must be <= %f; found "%f"' %
667:                                (self.vmax, s))
668:         elif not self.cmax and s >= self.vmax:
669:             raise RuntimeError('Value must be < %f; found "%f"' %
670:                                (self.vmax, s))
671:         return s
672: 
673: validate_grid_axis = ValidateInStrings('axes.grid.axis', ['x', 'y', 'both'])
674: 
675: 
676: def validate_hatch(s):
677:     '''
678:     Validate a hatch pattern.
679:     A hatch pattern string can have any sequence of the following
680:     characters: ``\\ / | - + * . x o O``.
681: 
682:     '''
683:     if not isinstance(s, six.string_types):
684:         raise ValueError("Hatch pattern must be a string")
685:     unknown = set(s) - {'\\', '/', '|', '-', '+', '*', '.', 'x', 'o', 'O'}
686:     if unknown:
687:         raise ValueError("Unknown hatch symbol(s): %s" % list(unknown))
688:     return s
689: validate_hatchlist = _listify_validator(validate_hatch)
690: validate_dashlist = _listify_validator(validate_nseq_float(allow_none=True))
691: 
692: _prop_validators = {
693:         'color': _listify_validator(validate_color_for_prop_cycle,
694:                                     allow_stringlist=True),
695:         'linewidth': validate_floatlist,
696:         'linestyle': validate_stringlist,
697:         'facecolor': validate_colorlist,
698:         'edgecolor': validate_colorlist,
699:         'joinstyle': validate_joinstylelist,
700:         'capstyle': validate_capstylelist,
701:         'fillstyle': validate_fillstylelist,
702:         'markerfacecolor': validate_colorlist,
703:         'markersize': validate_floatlist,
704:         'markeredgewidth': validate_floatlist,
705:         'markeredgecolor': validate_colorlist,
706:         'alpha': validate_floatlist,
707:         'marker': validate_stringlist,
708:         'hatch': validate_hatchlist,
709:         'dashes': validate_dashlist,
710:     }
711: _prop_aliases = {
712:         'c': 'color',
713:         'lw': 'linewidth',
714:         'ls': 'linestyle',
715:         'fc': 'facecolor',
716:         'ec': 'edgecolor',
717:         'mfc': 'markerfacecolor',
718:         'mec': 'markeredgecolor',
719:         'mew': 'markeredgewidth',
720:         'ms': 'markersize',
721:     }
722: 
723: 
724: def cycler(*args, **kwargs):
725:     '''
726:     Creates a :class:`cycler.Cycler` object much like :func:`cycler.cycler`,
727:     but includes input validation.
728: 
729:     cycler(arg)
730:     cycler(label, itr)
731:     cycler(label1=itr1[, label2=itr2[, ...]])
732: 
733:     Form 1 simply copies a given `Cycler` object.
734: 
735:     Form 2 creates a `Cycler` from a label and an iterable.
736: 
737:     Form 3 composes a `Cycler` as an inner product of the
738:     pairs of keyword arguments. In other words, all of the
739:     iterables are cycled simultaneously, as if through zip().
740: 
741:     Parameters
742:     ----------
743:     arg : Cycler
744:         Copy constructor for Cycler.
745: 
746:     label : name
747:         The property key. Must be a valid `Artist` property.
748:         For example, 'color' or 'linestyle'. Aliases are allowed,
749:         such as 'c' for 'color' and 'lw' for 'linewidth'.
750: 
751:     itr : iterable
752:         Finite-length iterable of the property values. These values
753:         are validated and will raise a ValueError if invalid.
754: 
755:     Returns
756:     -------
757:     cycler : Cycler
758:         New :class:`cycler.Cycler` for the given properties
759: 
760:     '''
761:     if args and kwargs:
762:         raise TypeError("cycler() can only accept positional OR keyword "
763:                         "arguments -- not both.")
764:     elif not args and not kwargs:
765:         raise TypeError("cycler() must have positional OR keyword arguments")
766: 
767:     if len(args) == 1:
768:         if not isinstance(args[0], Cycler):
769:             raise TypeError("If only one positional argument given, it must "
770:                             " be a Cycler instance.")
771:         return validate_cycler(args[0])
772:     elif len(args) == 2:
773:         pairs = [(args[0], args[1])]
774:     elif len(args) > 2:
775:         raise TypeError("No more than 2 positional arguments allowed")
776:     else:
777:         pairs = six.iteritems(kwargs)
778: 
779:     validated = []
780:     for prop, vals in pairs:
781:         norm_prop = _prop_aliases.get(prop, prop)
782:         validator = _prop_validators.get(norm_prop, None)
783:         if validator is None:
784:             raise TypeError("Unknown artist property: %s" % prop)
785:         vals = validator(vals)
786:         # We will normalize the property names as well to reduce
787:         # the amount of alias handling code elsewhere.
788:         validated.append((norm_prop, vals))
789: 
790:     return reduce(operator.add, (ccycler(k, v) for k, v in validated))
791: 
792: 
793: def validate_cycler(s):
794:     'return a Cycler object from a string repr or the object itself'
795:     if isinstance(s, six.string_types):
796:         try:
797:             # TODO: We might want to rethink this...
798:             # While I think I have it quite locked down,
799:             # it is execution of arbitrary code without
800:             # sanitation.
801:             # Combine this with the possibility that rcparams
802:             # might come from the internet (future plans), this
803:             # could be downright dangerous.
804:             # I locked it down by only having the 'cycler()' function
805:             # available.
806:             # UPDATE: Partly plugging a security hole.
807:             # I really should have read this:
808:             # http://nedbatchelder.com/blog/201206/eval_really_is_dangerous.html
809:             # We should replace this eval with a combo of PyParsing and
810:             # ast.literal_eval()
811:             if '.__' in s.replace(' ', ''):
812:                 raise ValueError("'%s' seems to have dunder methods. Raising"
813:                                  " an exception for your safety")
814:             s = eval(s, {'cycler': cycler, '__builtins__': {}})
815:         except BaseException as e:
816:             raise ValueError("'%s' is not a valid cycler construction: %s" %
817:                              (s, e))
818:     # Should make sure what comes from the above eval()
819:     # is a Cycler object.
820:     if isinstance(s, Cycler):
821:         cycler_inst = s
822:     else:
823:         raise ValueError("object was not a string or Cycler instance: %s" % s)
824: 
825:     unknowns = cycler_inst.keys - (set(_prop_validators) | set(_prop_aliases))
826:     if unknowns:
827:         raise ValueError("Unknown artist properties: %s" % unknowns)
828: 
829:     # Not a full validation, but it'll at least normalize property names
830:     # A fuller validation would require v0.10 of cycler.
831:     checker = set()
832:     for prop in cycler_inst.keys:
833:         norm_prop = _prop_aliases.get(prop, prop)
834:         if norm_prop != prop and norm_prop in cycler_inst.keys:
835:             raise ValueError("Cannot specify both '{0}' and alias '{1}'"
836:                              " in the same prop_cycle".format(norm_prop, prop))
837:         if norm_prop in checker:
838:             raise ValueError("Another property was already aliased to '{0}'."
839:                              " Collision normalizing '{1}'.".format(norm_prop,
840:                                                                     prop))
841:         checker.update([norm_prop])
842: 
843:     # This is just an extra-careful check, just in case there is some
844:     # edge-case I haven't thought of.
845:     assert len(checker) == len(cycler_inst.keys)
846: 
847:     # Now, it should be safe to mutate this cycler
848:     for prop in cycler_inst.keys:
849:         norm_prop = _prop_aliases.get(prop, prop)
850:         cycler_inst.change_key(prop, norm_prop)
851: 
852:     for key, vals in cycler_inst.by_key().items():
853:         _prop_validators[key](vals)
854: 
855:     return cycler_inst
856: 
857: 
858: def validate_hist_bins(s):
859:     if isinstance(s, six.string_types) and s == 'auto':
860:         return s
861:     try:
862:         return int(s)
863:     except (TypeError, ValueError):
864:         pass
865: 
866:     try:
867:         return validate_floatlist(s)
868:     except ValueError:
869:         pass
870: 
871:     raise ValueError("'hist.bins' must be 'auto', an int or " +
872:                      "a sequence of floats")
873: 
874: def validate_animation_writer_path(p):
875:     # Make sure it's a string and then figure out if the animations
876:     # are already loaded and reset the writers (which will validate
877:     # the path on next call)
878:     if not isinstance(p, six.string_types):
879:         raise ValueError("path must be a (unicode) string")
880:     from sys import modules
881:     # set dirty, so that the next call to the registry will re-evaluate
882:     # the state.
883:     # only set dirty if already loaded. If not loaded, the load will
884:     # trigger the checks.
885:     if "matplotlib.animation" in modules:
886:         modules["matplotlib.animation"].writers.set_dirty()
887:     return p
888: 
889: # A validator dedicated to the named line styles, based on the items in
890: # ls_mapper, and a list of possible strings read from Line2D.set_linestyle
891: _validate_named_linestyle = ValidateInStrings('linestyle',
892:                                               list(six.iterkeys(ls_mapper)) +
893:                                               list(six.itervalues(ls_mapper)) +
894:                                               ['None', 'none', ' ', ''],
895:                                               ignorecase=True)
896: 
897: 
898: def _validate_linestyle(ls):
899:     '''
900:     A validator for all possible line styles, the named ones *and*
901:     the on-off ink sequences.
902:     '''
903:     # Look first for a valid named line style, like '--' or 'solid'
904:     if isinstance(ls, six.string_types):
905:         try:
906:             return _validate_named_linestyle(ls)
907:         except (UnicodeDecodeError, KeyError):
908:             # On Python 2, string-like *ls*, like for example
909:             # 'solid'.encode('utf-16'), may raise a unicode error.
910:             raise ValueError("the linestyle string {!r} is not a valid "
911:                              "string.".format(ls))
912: 
913:     if isinstance(ls, (bytes, bytearray)):
914:         # On Python 2, a string-like *ls* should already have lead to a
915:         # successful return or to raising an exception. On Python 3, we have
916:         # to manually raise an exception in the case of a byte-like *ls*.
917:         # Otherwise, if *ls* is of even-length, it will be passed to the
918:         # instance of validate_nseq_float, which will return an absurd on-off
919:         # ink sequence...
920:         raise ValueError("linestyle {!r} neither looks like an on-off ink "
921:                          "sequence nor a valid string.".format(ls))
922: 
923:     # Look for an on-off ink sequence (in points) *of even length*.
924:     # Offset is set to None.
925:     try:
926:         if len(ls) % 2 != 0:
927:             raise ValueError("the linestyle sequence {!r} is not of even "
928:                              "length.".format(ls))
929: 
930:         return (None, validate_nseq_float()(ls))
931: 
932:     except (ValueError, TypeError):
933:         # TypeError can be raised inside the instance of validate_nseq_float,
934:         # by wrong types passed to float(), like NoneType.
935:         raise ValueError("linestyle {!r} is not a valid on-off ink "
936:                          "sequence.".format(ls))
937: 
938: 
939: # a map from key -> value, converter
940: defaultParams = {
941:     'backend':           ['Agg', validate_backend],  # agg is certainly
942:                                                       # present
943:     'backend_fallback':  [True, validate_bool],  # agg is certainly present
944:     'backend.qt4':       ['PyQt4', validate_qt4],
945:     'backend.qt5':       ['PyQt5', validate_qt5],
946:     'webagg.port':       [8988, validate_int],
947:     'webagg.open_in_browser': [True, validate_bool],
948:     'webagg.port_retries': [50, validate_int],
949:     'nbagg.transparent':       [True, validate_bool],
950:     'toolbar':           ['toolbar2', validate_toolbar],
951:     'datapath':          [None, validate_path_exists],  # handled by
952:                                                         # _get_data_path_cached
953:     'interactive':       [False, validate_bool],
954:     'timezone':          ['UTC', six.text_type],
955: 
956:     # the verbosity setting
957:     'verbose.level': ['silent', validate_verbose],
958:     'verbose.fileo': ['sys.stdout', six.text_type],
959: 
960:     # line props
961:     'lines.linewidth':       [1.5, validate_float],  # line width in points
962:     'lines.linestyle':       ['-', _validate_linestyle],  # solid line
963:     'lines.color':           ['C0', validate_color],  # first color in color cycle
964:     'lines.marker':          ['None', six.text_type],  # marker name
965:     'lines.markeredgewidth': [1.0, validate_float],
966:     'lines.markersize':      [6, validate_float],    # markersize, in points
967:     'lines.antialiased':     [True, validate_bool],  # antialiased (no jaggies)
968:     'lines.dash_joinstyle':  ['round', validate_joinstyle],
969:     'lines.solid_joinstyle': ['round', validate_joinstyle],
970:     'lines.dash_capstyle':   ['butt', validate_capstyle],
971:     'lines.solid_capstyle':  ['projecting', validate_capstyle],
972:     'lines.dashed_pattern':  [[3.7, 1.6], validate_nseq_float(allow_none=True)],
973:     'lines.dashdot_pattern': [[6.4, 1.6, 1, 1.6],
974:                               validate_nseq_float(allow_none=True)],
975:     'lines.dotted_pattern':  [[1, 1.65], validate_nseq_float(allow_none=True)],
976:     'lines.scale_dashes':  [True, validate_bool],
977: 
978:     # marker props
979:     'markers.fillstyle': ['full', validate_fillstyle],
980: 
981:     ## patch props
982:     'patch.linewidth':   [1.0, validate_float],     # line width in points
983:     'patch.edgecolor':   ['k', validate_color],
984:     'patch.force_edgecolor' : [False, validate_bool],
985:     'patch.facecolor':   ['C0', validate_color],    # first color in cycle
986:     'patch.antialiased': [True, validate_bool],     # antialiased (no jaggies)
987: 
988:     ## hatch props
989:     'hatch.color': ['k', validate_color],
990:     'hatch.linewidth': [1.0, validate_float],
991: 
992:     ## Histogram properties
993:     'hist.bins': [10, validate_hist_bins],
994: 
995:     ## Boxplot properties
996:     'boxplot.notch': [False, validate_bool],
997:     'boxplot.vertical': [True, validate_bool],
998:     'boxplot.whiskers': [1.5, validate_whiskers],
999:     'boxplot.bootstrap': [None, validate_int_or_None],
1000:     'boxplot.patchartist': [False, validate_bool],
1001:     'boxplot.showmeans': [False, validate_bool],
1002:     'boxplot.showcaps': [True, validate_bool],
1003:     'boxplot.showbox': [True, validate_bool],
1004:     'boxplot.showfliers': [True, validate_bool],
1005:     'boxplot.meanline': [False, validate_bool],
1006: 
1007:     'boxplot.flierprops.color': ['k', validate_color],
1008:     'boxplot.flierprops.marker': ['o', six.text_type],
1009:     'boxplot.flierprops.markerfacecolor': ['none', validate_color_or_auto],
1010:     'boxplot.flierprops.markeredgecolor': ['k', validate_color],
1011:     'boxplot.flierprops.markersize': [6, validate_float],
1012:     'boxplot.flierprops.linestyle': ['none', _validate_linestyle],
1013:     'boxplot.flierprops.linewidth': [1.0, validate_float],
1014: 
1015:     'boxplot.boxprops.color': ['k', validate_color],
1016:     'boxplot.boxprops.linewidth': [1.0, validate_float],
1017:     'boxplot.boxprops.linestyle': ['-', _validate_linestyle],
1018: 
1019:     'boxplot.whiskerprops.color': ['k', validate_color],
1020:     'boxplot.whiskerprops.linewidth': [1.0, validate_float],
1021:     'boxplot.whiskerprops.linestyle': ['-', _validate_linestyle],
1022: 
1023:     'boxplot.capprops.color': ['k', validate_color],
1024:     'boxplot.capprops.linewidth': [1.0, validate_float],
1025:     'boxplot.capprops.linestyle': ['-', _validate_linestyle],
1026: 
1027:     'boxplot.medianprops.color': ['C1', validate_color],
1028:     'boxplot.medianprops.linewidth': [1.0, validate_float],
1029:     'boxplot.medianprops.linestyle': ['-', _validate_linestyle],
1030: 
1031:     'boxplot.meanprops.color': ['C2', validate_color],
1032:     'boxplot.meanprops.marker': ['^', six.text_type],
1033:     'boxplot.meanprops.markerfacecolor': ['C2', validate_color],
1034:     'boxplot.meanprops.markeredgecolor': ['C2', validate_color],
1035:     'boxplot.meanprops.markersize': [6, validate_float],
1036:     'boxplot.meanprops.linestyle': ['--', _validate_linestyle],
1037:     'boxplot.meanprops.linewidth': [1.0, validate_float],
1038: 
1039:     ## font props
1040:     'font.family':     [['sans-serif'], validate_stringlist],  # used by text object
1041:     'font.style':      ['normal', six.text_type],
1042:     'font.variant':    ['normal', six.text_type],
1043:     'font.stretch':    ['normal', six.text_type],
1044:     'font.weight':     ['normal', six.text_type],
1045:     'font.size':       [10, validate_float],      # Base font size in points
1046:     'font.serif':      [['DejaVu Serif', 'Bitstream Vera Serif',
1047:                          'Computer Modern Roman',
1048:                          'New Century Schoolbook', 'Century Schoolbook L',
1049:                          'Utopia', 'ITC Bookman', 'Bookman',
1050:                          'Nimbus Roman No9 L', 'Times New Roman',
1051:                          'Times', 'Palatino', 'Charter', 'serif'],
1052:                         validate_stringlist],
1053:     'font.sans-serif': [['DejaVu Sans', 'Bitstream Vera Sans',
1054:                          'Computer Modern Sans Serif',
1055:                          'Lucida Grande', 'Verdana', 'Geneva', 'Lucid',
1056:                          'Arial', 'Helvetica', 'Avant Garde', 'sans-serif'],
1057:                         validate_stringlist],
1058:     'font.cursive':    [['Apple Chancery', 'Textile', 'Zapf Chancery',
1059:                          'Sand', 'Script MT', 'Felipa', 'cursive'],
1060:                         validate_stringlist],
1061:     'font.fantasy':    [['Comic Sans MS', 'Chicago', 'Charcoal', 'Impact'
1062:                          'Western', 'Humor Sans', 'xkcd', 'fantasy'],
1063:                         validate_stringlist],
1064:     'font.monospace':  [['DejaVu Sans Mono', 'Bitstream Vera Sans Mono',
1065:                          'Computer Modern Typewriter',
1066:                          'Andale Mono', 'Nimbus Mono L', 'Courier New',
1067:                          'Courier', 'Fixed', 'Terminal', 'monospace'],
1068:                         validate_stringlist],
1069: 
1070:     # text props
1071:     'text.color':          ['k', validate_color],     # black
1072:     'text.usetex':         [False, validate_bool],
1073:     'text.latex.unicode':  [False, validate_bool],
1074:     'text.latex.preamble': [[''], validate_stringlist],
1075:     'text.latex.preview':  [False, validate_bool],
1076:     'text.dvipnghack':     [None, validate_bool_maybe_none],
1077:     'text.hinting':        ['auto', validate_hinting],
1078:     'text.hinting_factor': [8, validate_int],
1079:     'text.antialiased':    [True, validate_bool],
1080: 
1081:     'mathtext.cal':            ['cursive', validate_font_properties],
1082:     'mathtext.rm':             ['sans', validate_font_properties],
1083:     'mathtext.tt':             ['monospace', validate_font_properties],
1084:     'mathtext.it':             ['sans:italic', validate_font_properties],
1085:     'mathtext.bf':             ['sans:bold', validate_font_properties],
1086:     'mathtext.sf':             ['sans', validate_font_properties],
1087:     'mathtext.fontset':        ['dejavusans', validate_fontset],
1088:     'mathtext.default':        ['it', validate_mathtext_default],
1089:     'mathtext.fallback_to_cm': [True, validate_bool],
1090: 
1091:     'image.aspect':        ['equal', validate_aspect],  # equal, auto, a number
1092:     'image.interpolation': ['nearest', six.text_type],
1093:     'image.cmap':          ['viridis', six.text_type],        # one of gray, jet, etc
1094:     'image.lut':           [256, validate_int],  # lookup table
1095:     'image.origin':        ['upper', six.text_type],  # lookup table
1096:     'image.resample':      [True, validate_bool],
1097:     # Specify whether vector graphics backends will combine all images on a
1098:     # set of axes into a single composite image
1099:     'image.composite_image': [True, validate_bool],
1100: 
1101:     # contour props
1102:     'contour.negative_linestyle': ['dashed', _validate_linestyle],
1103:     'contour.corner_mask':        [True, validate_corner_mask],
1104: 
1105:     # errorbar props
1106:     'errorbar.capsize':      [0, validate_float],
1107: 
1108:     # axes props
1109:     'axes.axisbelow':        ['line', validate_axisbelow],
1110:     'axes.hold':             [None, deprecate_axes_hold],
1111:     'axes.facecolor':        ['w', validate_color],  # background color; white
1112:     'axes.edgecolor':        ['k', validate_color],  # edge color; black
1113:     'axes.linewidth':        [0.8, validate_float],  # edge linewidth
1114: 
1115:     'axes.spines.left':      [True, validate_bool],  # Set visibility of axes
1116:     'axes.spines.right':     [True, validate_bool],  # 'spines', the lines
1117:     'axes.spines.bottom':    [True, validate_bool],  # around the chart
1118:     'axes.spines.top':       [True, validate_bool],  # denoting data boundary
1119: 
1120:     'axes.titlesize':        ['large', validate_fontsize],  # fontsize of the
1121:                                                             # axes title
1122:     'axes.titleweight':      ['normal', six.text_type],  # font weight of axes title
1123:     'axes.titlepad':         [6.0, validate_float],  # pad from axes top to title in points
1124:     'axes.grid':             [False, validate_bool],   # display grid or not
1125:     'axes.grid.which':       ['major', validate_axis_locator],  # set wether the gid are by
1126:                                                                 # default draw on 'major'
1127:                                                                 # 'minor' or 'both' kind of
1128:                                                                 # axis locator
1129:     'axes.grid.axis':        ['both', validate_grid_axis], # grid type.
1130:                                                       # Can be 'x', 'y', 'both'
1131:     'axes.labelsize':        ['medium', validate_fontsize],  # fontsize of the
1132:                                                              # x any y labels
1133:     'axes.labelpad':         [4.0, validate_float], # space between label and axis
1134:     'axes.labelweight':      ['normal', six.text_type],  # fontsize of the x any y labels
1135:     'axes.labelcolor':       ['k', validate_color],    # color of axis label
1136:     'axes.formatter.limits': [[-7, 7], validate_nseq_int(2)],
1137:                                # use scientific notation if log10
1138:                                # of the axis range is smaller than the
1139:                                # first or larger than the second
1140:     'axes.formatter.use_locale': [False, validate_bool],
1141:                                # Use the current locale to format ticks
1142:     'axes.formatter.use_mathtext': [False, validate_bool],
1143:     'axes.formatter.min_exponent': [0, validate_int],  # minimum exponent to format in scientific notation
1144:     'axes.formatter.useoffset': [True, validate_bool],
1145:     'axes.formatter.offset_threshold': [4, validate_int],
1146:     'axes.unicode_minus': [True, validate_bool],
1147:     'axes.color_cycle': [
1148:         ['#1f77b4', '#ff7f0e', '#2ca02c', '#d62728',
1149:          '#9467bd', '#8c564b', '#e377c2', '#7f7f7f',
1150:          '#bcbd22', '#17becf'],
1151:                          deprecate_axes_colorcycle],  # cycle of plot
1152:                                                       # line colors
1153:     # This entry can be either a cycler object or a
1154:     # string repr of a cycler-object, which gets eval()'ed
1155:     # to create the object.
1156:     'axes.prop_cycle': [
1157:         ccycler('color',
1158:                 ['#1f77b4', '#ff7f0e', '#2ca02c', '#d62728',
1159:                  '#9467bd', '#8c564b', '#e377c2', '#7f7f7f',
1160:                  '#bcbd22', '#17becf']),
1161:         validate_cycler],
1162:     # If 'data', axes limits are set close to the data.
1163:     # If 'round_numbers' axes limits are set to the nearest round numbers.
1164:     'axes.autolimit_mode': [
1165:         'data',
1166:         ValidateInStrings('autolimit_mode', ['data', 'round_numbers'])],
1167:     'axes.xmargin': [0.05, ValidateInterval(0, 1,
1168:                                             closedmin=True,
1169:                                             closedmax=True)],  # margin added to xaxis
1170:     'axes.ymargin': [0.05, ValidateInterval(0, 1,
1171:                                             closedmin=True,
1172:                                             closedmax=True)],# margin added to yaxis
1173: 
1174:     'polaraxes.grid': [True, validate_bool],  # display polar grid or
1175:                                                      # not
1176:     'axes3d.grid': [True, validate_bool],  # display 3d grid
1177: 
1178:     # scatter props
1179:     'scatter.marker': ['o', six.text_type],
1180: 
1181:     # TODO validate that these are valid datetime format strings
1182:     'date.autoformatter.year': ['%Y', six.text_type],
1183:     'date.autoformatter.month': ['%Y-%m', six.text_type],
1184:     'date.autoformatter.day': ['%Y-%m-%d', six.text_type],
1185:     'date.autoformatter.hour': ['%m-%d %H', six.text_type],
1186:     'date.autoformatter.minute': ['%d %H:%M', six.text_type],
1187:     'date.autoformatter.second': ['%H:%M:%S', six.text_type],
1188:     'date.autoformatter.microsecond': ['%M:%S.%f', six.text_type],
1189: 
1190:     #legend properties
1191:     'legend.fancybox': [True, validate_bool],
1192:     'legend.loc': ['best', validate_legend_loc],
1193:     # the number of points in the legend line
1194:     'legend.numpoints': [1, validate_int],
1195:     # the number of points in the legend line for scatter
1196:     'legend.scatterpoints': [1, validate_int],
1197:     'legend.fontsize': ['medium', validate_fontsize],
1198:      # the relative size of legend markers vs. original
1199:     'legend.markerscale': [1.0, validate_float],
1200:     'legend.shadow': [False, validate_bool],
1201:      # whether or not to draw a frame around legend
1202:     'legend.frameon': [True, validate_bool],
1203:      # alpha value of the legend frame
1204:     'legend.framealpha': [0.8, validate_float_or_None],
1205: 
1206:     ## the following dimensions are in fraction of the font size
1207:     'legend.borderpad': [0.4, validate_float],  # units are fontsize
1208:     # the vertical space between the legend entries
1209:     'legend.labelspacing': [0.5, validate_float],
1210:     # the length of the legend lines
1211:     'legend.handlelength': [2., validate_float],
1212:     # the length of the legend lines
1213:     'legend.handleheight': [0.7, validate_float],
1214:     # the space between the legend line and legend text
1215:     'legend.handletextpad': [.8, validate_float],
1216:     # the border between the axes and legend edge
1217:     'legend.borderaxespad': [0.5, validate_float],
1218:     # the border between the axes and legend edge
1219:     'legend.columnspacing': [2., validate_float],
1220:     'legend.facecolor': ['inherit', validate_color_or_inherit],
1221:     'legend.edgecolor': ['0.8', validate_color_or_inherit],
1222: 
1223:     # tick properties
1224:     'xtick.top':         [False, validate_bool],   # draw ticks on the top side
1225:     'xtick.bottom':      [True, validate_bool],   # draw ticks on the bottom side
1226:     'xtick.major.size':  [3.5, validate_float],    # major xtick size in points
1227:     'xtick.minor.size':  [2, validate_float],    # minor xtick size in points
1228:     'xtick.major.width': [0.8, validate_float],  # major xtick width in points
1229:     'xtick.minor.width': [0.6, validate_float],  # minor xtick width in points
1230:     'xtick.major.pad':   [3.5, validate_float],    # distance to label in points
1231:     'xtick.minor.pad':   [3.4, validate_float],    # distance to label in points
1232:     'xtick.color':       ['k', validate_color],  # color of the xtick labels
1233:     'xtick.minor.visible':   [False, validate_bool],    # visibility of the x axis minor ticks
1234:     'xtick.minor.top':   [True, validate_bool],  # draw x axis top minor ticks
1235:     'xtick.minor.bottom':    [True, validate_bool],    # draw x axis bottom minor ticks
1236:     'xtick.major.top':   [True, validate_bool],  # draw x axis top major ticks
1237:     'xtick.major.bottom':    [True, validate_bool],    # draw x axis bottom major ticks
1238: 
1239:     # fontsize of the xtick labels
1240:     'xtick.labelsize':   ['medium', validate_fontsize],
1241:     'xtick.direction':   ['out', six.text_type],            # direction of xticks
1242:     'xtick.alignment': ["center", _validate_alignment],
1243: 
1244:     'ytick.left':        [True, validate_bool],  # draw ticks on the left side
1245:     'ytick.right':       [False, validate_bool],  # draw ticks on the right side
1246:     'ytick.major.size':  [3.5, validate_float],     # major ytick size in points
1247:     'ytick.minor.size':  [2, validate_float],     # minor ytick size in points
1248:     'ytick.major.width': [0.8, validate_float],   # major ytick width in points
1249:     'ytick.minor.width': [0.6, validate_float],   # minor ytick width in points
1250:     'ytick.major.pad':   [3.5, validate_float],     # distance to label in points
1251:     'ytick.minor.pad':   [3.4, validate_float],     # distance to label in points
1252:     'ytick.color':       ['k', validate_color],   # color of the ytick labels
1253:     'ytick.minor.visible':   [False, validate_bool],    # visibility of the y axis minor ticks
1254:     'ytick.minor.left':   [True, validate_bool],  # draw y axis left minor ticks
1255:     'ytick.minor.right':    [True, validate_bool],    # draw y axis right minor ticks
1256:     'ytick.major.left':   [True, validate_bool],  # draw y axis left major ticks
1257:     'ytick.major.right':    [True, validate_bool],    # draw y axis right major ticks
1258: 
1259:     # fontsize of the ytick labels
1260:     'ytick.labelsize':   ['medium', validate_fontsize],
1261:     'ytick.direction':   ['out', six.text_type],            # direction of yticks
1262:     'ytick.alignment': ["center_baseline", _validate_alignment],
1263: 
1264: 
1265:     'grid.color':        ['#b0b0b0', validate_color],  # grid color
1266:     'grid.linestyle':    ['-', _validate_linestyle],  # solid
1267:     'grid.linewidth':    [0.8, validate_float],     # in points
1268:     'grid.alpha':        [1.0, validate_float],
1269: 
1270: 
1271:     ## figure props
1272:     # figure title
1273:     'figure.titlesize':   ['large', validate_fontsize],
1274:     'figure.titleweight': ['normal', six.text_type],
1275: 
1276:     # figure size in inches: width by height
1277:     'figure.figsize':    [[6.4, 4.8], validate_nseq_float(2)],
1278:     'figure.dpi':        [100, validate_float],  # DPI
1279:     'figure.facecolor':  ['w', validate_color],  # facecolor; white
1280:     'figure.edgecolor':  ['w', validate_color],  # edgecolor; white
1281:     'figure.frameon':    [True, validate_bool],
1282:     'figure.autolayout': [False, validate_bool],
1283:     'figure.max_open_warning': [20, validate_int],
1284: 
1285:     'figure.subplot.left': [0.125, ValidateInterval(0, 1, closedmin=True,
1286:                                                        closedmax=True)],
1287:     'figure.subplot.right': [0.9, ValidateInterval(0, 1, closedmin=True,
1288:                                                      closedmax=True)],
1289:     'figure.subplot.bottom': [0.11, ValidateInterval(0, 1, closedmin=True,
1290:                                                      closedmax=True)],
1291:     'figure.subplot.top': [0.88, ValidateInterval(0, 1, closedmin=True,
1292:                                                      closedmax=True)],
1293:     'figure.subplot.wspace': [0.2, ValidateInterval(0, 1, closedmin=True,
1294:                                                      closedmax=False)],
1295:     'figure.subplot.hspace': [0.2, ValidateInterval(0, 1, closedmin=True,
1296:                                                      closedmax=False)],
1297: 
1298:     ## Saving figure's properties
1299:     'savefig.dpi':         ['figure', validate_dpi],  # DPI
1300:     'savefig.facecolor':   ['w', validate_color],  # facecolor; white
1301:     'savefig.edgecolor':   ['w', validate_color],  # edgecolor; white
1302:     'savefig.frameon':     [True, validate_bool],
1303:     'savefig.orientation': ['portrait', validate_orientation],  # edgecolor;
1304:                                                                  #white
1305:     'savefig.jpeg_quality': [95, validate_int],
1306:     # value checked by backend at runtime
1307:     'savefig.format':     ['png', update_savefig_format],
1308:     # options are 'tight', or 'standard'. 'standard' validates to None.
1309:     'savefig.bbox':       ['standard', validate_bbox],
1310:     'savefig.pad_inches': [0.1, validate_float],
1311:     # default directory in savefig dialog box
1312:     'savefig.directory': ['~', six.text_type],
1313:     'savefig.transparent': [False, validate_bool],
1314: 
1315:     # Maintain shell focus for TkAgg
1316:     'tk.window_focus':  [False, validate_bool],
1317: 
1318:     # Set the papersize/type
1319:     'ps.papersize':     ['letter', validate_ps_papersize],
1320:     'ps.useafm':        [False, validate_bool],  # Set PYTHONINSPECT
1321:     # use ghostscript or xpdf to distill ps output
1322:     'ps.usedistiller':  [False, validate_ps_distiller],
1323:     'ps.distiller.res': [6000, validate_int],     # dpi
1324:     'ps.fonttype':      [3, validate_fonttype],  # 3 (Type3) or 42 (Truetype)
1325:     # compression level from 0 to 9; 0 to disable
1326:     'pdf.compression':  [6, validate_int],
1327:     # ignore any color-setting commands from the frontend
1328:     'pdf.inheritcolor': [False, validate_bool],
1329:     # use only the 14 PDF core fonts embedded in every PDF viewing application
1330:     'pdf.use14corefonts': [False, validate_bool],
1331:     'pdf.fonttype':     [3, validate_fonttype],  # 3 (Type3) or 42 (Truetype)
1332: 
1333:     'pgf.debug':     [False, validate_bool],  # output debug information
1334:     # choose latex application for creating pdf files (xelatex/lualatex)
1335:     'pgf.texsystem': ['xelatex', validate_pgf_texsystem],
1336:     # use matplotlib rc settings for font configuration
1337:     'pgf.rcfonts':   [True, validate_bool],
1338:     # provide a custom preamble for the latex process
1339:     'pgf.preamble':  [[''], validate_stringlist],
1340: 
1341:     # write raster image data directly into the svg file
1342:     'svg.image_inline':     [True, validate_bool],
1343:     # suppress scaling of raster data embedded in SVG
1344:     'svg.image_noscale':    [False, deprecate_svg_image_noscale],
1345:     # True to save all characters as paths in the SVG
1346:     'svg.embed_char_paths': [True, deprecate_svg_embed_char_paths],
1347:     'svg.fonttype':         ['path', validate_svg_fonttype],
1348:     'svg.hashsalt':         [None, validate_string_or_None],
1349: 
1350:     # set this when you want to generate hardcopy docstring
1351:     'docstring.hardcopy': [False, validate_bool],
1352:     # where plugin directory is locate
1353:     'plugins.directory':  ['.matplotlib_plugins', six.text_type],
1354: 
1355:     'path.simplify': [True, validate_bool],
1356:     'path.simplify_threshold': [1.0 / 9.0, ValidateInterval(0.0, 1.0)],
1357:     'path.snap': [True, validate_bool],
1358:     'path.sketch': [None, validate_sketch],
1359:     'path.effects': [[], validate_any],
1360:     'agg.path.chunksize': [0, validate_int],       # 0 to disable chunking;
1361: 
1362:     # key-mappings (multi-character mappings should be a list/tuple)
1363:     'keymap.fullscreen':   [('f', 'ctrl+f'), validate_stringlist],
1364:     'keymap.home':         [['h', 'r', 'home'], validate_stringlist],
1365:     'keymap.back':         [['left', 'c', 'backspace'], validate_stringlist],
1366:     'keymap.forward':      [['right', 'v'], validate_stringlist],
1367:     'keymap.pan':          [['p'], validate_stringlist],
1368:     'keymap.zoom':         [['o'], validate_stringlist],
1369:     'keymap.save':         [['s', 'ctrl+s'], validate_stringlist],
1370:     'keymap.quit':         [['ctrl+w', 'cmd+w', 'q'], validate_stringlist],
1371:     'keymap.quit_all':     [['W', 'cmd+W', 'Q'], validate_stringlist],
1372:     'keymap.grid':         [['g'], validate_stringlist],
1373:     'keymap.grid_minor':   [['G'], validate_stringlist],
1374:     'keymap.yscale':       [['l'], validate_stringlist],
1375:     'keymap.xscale':       [['k', 'L'], validate_stringlist],
1376:     'keymap.all_axes':     [['a'], validate_stringlist],
1377: 
1378:     # sample data
1379:     'examples.directory': ['', six.text_type],
1380: 
1381:     # Animation settings
1382:     'animation.html':         ['none', validate_movie_html_fmt],
1383:     # Limit, in MB, of size of base64 encoded animation in HTML
1384:     # (i.e. IPython notebook)
1385:     'animation.embed_limit':  [20, validate_float],
1386:     'animation.writer':       ['ffmpeg', validate_movie_writer],
1387:     'animation.codec':        ['h264', six.text_type],
1388:     'animation.bitrate':      [-1, validate_int],
1389:     # Controls image format when frames are written to disk
1390:     'animation.frame_format': ['png', validate_movie_frame_fmt],
1391:     # Additional arguments for HTML writer
1392:     'animation.html_args':    [[], validate_stringlist],
1393:     # Path to FFMPEG binary. If just binary name, subprocess uses $PATH.
1394:     'animation.ffmpeg_path':  ['ffmpeg', validate_animation_writer_path],
1395: 
1396:     # Additional arguments for ffmpeg movie writer (using pipes)
1397:     'animation.ffmpeg_args':   [[], validate_stringlist],
1398:     # Path to AVConv binary. If just binary name, subprocess uses $PATH.
1399:     'animation.avconv_path':   ['avconv', validate_animation_writer_path],
1400:     # Additional arguments for avconv movie writer (using pipes)
1401:     'animation.avconv_args':   [[], validate_stringlist],
1402:     # Path to MENCODER binary. If just binary name, subprocess uses $PATH.
1403:     'animation.mencoder_path': ['mencoder', validate_animation_writer_path],
1404:     # Additional arguments for mencoder movie writer (using pipes)
1405:     'animation.mencoder_args': [[], validate_stringlist],
1406:      # Path to convert binary. If just binary name, subprocess uses $PATH
1407:     'animation.convert_path':  ['convert', validate_animation_writer_path],
1408:      # Additional arguments for mencoder movie writer (using pipes)
1409: 
1410:     'animation.convert_args':  [[], validate_stringlist],
1411: 
1412:     # Classic (pre 2.0) compatibility mode
1413:     # This is used for things that are hard to make backward compatible
1414:     # with a sane rcParam alone.  This does *not* turn on classic mode
1415:     # altogether.  For that use `matplotlib.style.use('classic')`.
1416:     '_internal.classic_mode': [False, validate_bool]
1417: }
1418: 
1419: 
1420: if __name__ == '__main__':
1421:     rc = defaultParams
1422:     rc['datapath'][0] = '/'
1423:     for key in rc:
1424:         if not rc[key][1](rc[key][0]) == rc[key][0]:
1425:             print("%s: %s != %s" % (key, rc[key][1](rc[key][0]), rc[key][0]))
1426: 

"""

# Import the stypy library necessary elements
from stypy.type_inference_programs.type_inference_programs_imports import *

# Create the module type store
module_type_store = Context(None, __file__)

# ################# Begin of the type inference program ##################

unicode_123824 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 15, (-1)), 'unicode', u"\nThe rcsetup module contains the default values and the validation code for\ncustomization using matplotlib's rc settings.\n\nEach rc setting is assigned a default value and a function used to validate\nany attempted changes to that setting. The default values and validation\nfunctions are defined in the rcsetup module, and are used to construct the\nrcParams global object which stores the settings and is referenced throughout\nmatplotlib.\n\nThese default values should be consistent with the default matplotlibrc file\nthat actually reflects the values given here. Any additions or deletions to the\nparameter set listed here should also be visited to the\n:file:`matplotlibrc.template` in matplotlib's root source directory.\n")
stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 19, 0))

# 'import six' statement (line 19)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/')
import_123825 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 19, 0), 'six')

if (type(import_123825) is not StypyTypeError):

    if (import_123825 != 'pyd_module'):
        __import__(import_123825)
        sys_modules_123826 = sys.modules[import_123825]
        import_module(stypy.reporting.localization.Localization(__file__, 19, 0), 'six', sys_modules_123826.module_type_store, module_type_store)
    else:
        import six

        import_module(stypy.reporting.localization.Localization(__file__, 19, 0), 'six', six, module_type_store)

else:
    # Assigning a type to the variable 'six' (line 19)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 19, 0), 'six', import_123825)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 21, 0))

# 'from collections import Iterable, Mapping' statement (line 21)
try:
    from collections import Iterable, Mapping

except:
    Iterable = UndefinedType
    Mapping = UndefinedType
import_from_module(stypy.reporting.localization.Localization(__file__, 21, 0), 'collections', None, module_type_store, ['Iterable', 'Mapping'], [Iterable, Mapping])

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 22, 0))

# 'from functools import reduce' statement (line 22)
try:
    from functools import reduce

except:
    reduce = UndefinedType
import_from_module(stypy.reporting.localization.Localization(__file__, 22, 0), 'functools', None, module_type_store, ['reduce'], [reduce])

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 23, 0))

# 'import operator' statement (line 23)
import operator

import_module(stypy.reporting.localization.Localization(__file__, 23, 0), 'operator', operator, module_type_store)

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 24, 0))

# 'import os' statement (line 24)
import os

import_module(stypy.reporting.localization.Localization(__file__, 24, 0), 'os', os, module_type_store)

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 25, 0))

# 'import warnings' statement (line 25)
import warnings

import_module(stypy.reporting.localization.Localization(__file__, 25, 0), 'warnings', warnings, module_type_store)

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 26, 0))

# 'import re' statement (line 26)
import re

import_module(stypy.reporting.localization.Localization(__file__, 26, 0), 're', re, module_type_store)

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 28, 0))

# 'from matplotlib.cbook import mplDeprecation, deprecated, ls_mapper' statement (line 28)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/')
import_123827 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 28, 0), 'matplotlib.cbook')

if (type(import_123827) is not StypyTypeError):

    if (import_123827 != 'pyd_module'):
        __import__(import_123827)
        sys_modules_123828 = sys.modules[import_123827]
        import_from_module(stypy.reporting.localization.Localization(__file__, 28, 0), 'matplotlib.cbook', sys_modules_123828.module_type_store, module_type_store, ['mplDeprecation', 'deprecated', 'ls_mapper'])
        nest_module(stypy.reporting.localization.Localization(__file__, 28, 0), __file__, sys_modules_123828, sys_modules_123828.module_type_store, module_type_store)
    else:
        from matplotlib.cbook import mplDeprecation, deprecated, ls_mapper

        import_from_module(stypy.reporting.localization.Localization(__file__, 28, 0), 'matplotlib.cbook', None, module_type_store, ['mplDeprecation', 'deprecated', 'ls_mapper'], [mplDeprecation, deprecated, ls_mapper])

else:
    # Assigning a type to the variable 'matplotlib.cbook' (line 28)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 28, 0), 'matplotlib.cbook', import_123827)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 29, 0))

# 'from matplotlib.fontconfig_pattern import parse_fontconfig_pattern' statement (line 29)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/')
import_123829 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 29, 0), 'matplotlib.fontconfig_pattern')

if (type(import_123829) is not StypyTypeError):

    if (import_123829 != 'pyd_module'):
        __import__(import_123829)
        sys_modules_123830 = sys.modules[import_123829]
        import_from_module(stypy.reporting.localization.Localization(__file__, 29, 0), 'matplotlib.fontconfig_pattern', sys_modules_123830.module_type_store, module_type_store, ['parse_fontconfig_pattern'])
        nest_module(stypy.reporting.localization.Localization(__file__, 29, 0), __file__, sys_modules_123830, sys_modules_123830.module_type_store, module_type_store)
    else:
        from matplotlib.fontconfig_pattern import parse_fontconfig_pattern

        import_from_module(stypy.reporting.localization.Localization(__file__, 29, 0), 'matplotlib.fontconfig_pattern', None, module_type_store, ['parse_fontconfig_pattern'], [parse_fontconfig_pattern])

else:
    # Assigning a type to the variable 'matplotlib.fontconfig_pattern' (line 29)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 29, 0), 'matplotlib.fontconfig_pattern', import_123829)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 30, 0))

# 'from matplotlib.colors import is_color_like' statement (line 30)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/')
import_123831 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 30, 0), 'matplotlib.colors')

if (type(import_123831) is not StypyTypeError):

    if (import_123831 != 'pyd_module'):
        __import__(import_123831)
        sys_modules_123832 = sys.modules[import_123831]
        import_from_module(stypy.reporting.localization.Localization(__file__, 30, 0), 'matplotlib.colors', sys_modules_123832.module_type_store, module_type_store, ['is_color_like'])
        nest_module(stypy.reporting.localization.Localization(__file__, 30, 0), __file__, sys_modules_123832, sys_modules_123832.module_type_store, module_type_store)
    else:
        from matplotlib.colors import is_color_like

        import_from_module(stypy.reporting.localization.Localization(__file__, 30, 0), 'matplotlib.colors', None, module_type_store, ['is_color_like'], [is_color_like])

else:
    # Assigning a type to the variable 'matplotlib.colors' (line 30)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 30, 0), 'matplotlib.colors', import_123831)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 34, 0))

# 'from cycler import Cycler, ccycler' statement (line 34)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/')
import_123833 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 34, 0), 'cycler')

if (type(import_123833) is not StypyTypeError):

    if (import_123833 != 'pyd_module'):
        __import__(import_123833)
        sys_modules_123834 = sys.modules[import_123833]
        import_from_module(stypy.reporting.localization.Localization(__file__, 34, 0), 'cycler', sys_modules_123834.module_type_store, module_type_store, ['Cycler', 'cycler'])
        nest_module(stypy.reporting.localization.Localization(__file__, 34, 0), __file__, sys_modules_123834, sys_modules_123834.module_type_store, module_type_store)
    else:
        from cycler import Cycler, cycler as ccycler

        import_from_module(stypy.reporting.localization.Localization(__file__, 34, 0), 'cycler', None, module_type_store, ['Cycler', 'cycler'], [Cycler, ccycler])

else:
    # Assigning a type to the variable 'cycler' (line 34)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 34, 0), 'cycler', import_123833)

# Adding an alias
module_type_store.add_alias('ccycler', 'cycler')
remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/')


# Assigning a List to a Name (line 41):

# Obtaining an instance of the builtin type 'list' (line 41)
list_123835 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 41, 17), 'list')
# Adding type elements to the builtin type 'list' instance (line 41)
# Adding element type (line 41)
unicode_123836 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 41, 18), 'unicode', u'GTK')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 41, 17), list_123835, unicode_123836)
# Adding element type (line 41)
unicode_123837 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 41, 25), 'unicode', u'GTKAgg')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 41, 17), list_123835, unicode_123837)
# Adding element type (line 41)
unicode_123838 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 41, 35), 'unicode', u'GTKCairo')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 41, 17), list_123835, unicode_123838)
# Adding element type (line 41)
unicode_123839 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 41, 47), 'unicode', u'MacOSX')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 41, 17), list_123835, unicode_123839)
# Adding element type (line 41)
unicode_123840 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 42, 18), 'unicode', u'Qt4Agg')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 41, 17), list_123835, unicode_123840)
# Adding element type (line 41)
unicode_123841 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 42, 28), 'unicode', u'Qt5Agg')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 41, 17), list_123835, unicode_123841)
# Adding element type (line 41)
unicode_123842 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 42, 38), 'unicode', u'TkAgg')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 41, 17), list_123835, unicode_123842)
# Adding element type (line 41)
unicode_123843 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 42, 47), 'unicode', u'WX')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 41, 17), list_123835, unicode_123843)
# Adding element type (line 41)
unicode_123844 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 42, 53), 'unicode', u'WXAgg')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 41, 17), list_123835, unicode_123844)
# Adding element type (line 41)
unicode_123845 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 43, 18), 'unicode', u'GTK3Cairo')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 41, 17), list_123835, unicode_123845)
# Adding element type (line 41)
unicode_123846 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 43, 31), 'unicode', u'GTK3Agg')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 41, 17), list_123835, unicode_123846)
# Adding element type (line 41)
unicode_123847 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 43, 42), 'unicode', u'WebAgg')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 41, 17), list_123835, unicode_123847)
# Adding element type (line 41)
unicode_123848 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 43, 52), 'unicode', u'nbAgg')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 41, 17), list_123835, unicode_123848)

# Assigning a type to the variable 'interactive_bk' (line 41)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 41, 0), 'interactive_bk', list_123835)

# Assigning a List to a Name (line 46):

# Obtaining an instance of the builtin type 'list' (line 46)
list_123849 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 46, 21), 'list')
# Adding type elements to the builtin type 'list' instance (line 46)
# Adding element type (line 46)
unicode_123850 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 46, 22), 'unicode', u'agg')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 46, 21), list_123849, unicode_123850)
# Adding element type (line 46)
unicode_123851 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 46, 29), 'unicode', u'cairo')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 46, 21), list_123849, unicode_123851)
# Adding element type (line 46)
unicode_123852 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 46, 38), 'unicode', u'gdk')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 46, 21), list_123849, unicode_123852)
# Adding element type (line 46)
unicode_123853 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 47, 22), 'unicode', u'pdf')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 46, 21), list_123849, unicode_123853)
# Adding element type (line 46)
unicode_123854 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 47, 29), 'unicode', u'pgf')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 46, 21), list_123849, unicode_123854)
# Adding element type (line 46)
unicode_123855 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 47, 36), 'unicode', u'ps')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 46, 21), list_123849, unicode_123855)
# Adding element type (line 46)
unicode_123856 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 47, 42), 'unicode', u'svg')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 46, 21), list_123849, unicode_123856)
# Adding element type (line 46)
unicode_123857 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 47, 49), 'unicode', u'template')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 46, 21), list_123849, unicode_123857)

# Assigning a type to the variable 'non_interactive_bk' (line 46)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 46, 0), 'non_interactive_bk', list_123849)

# Assigning a BinOp to a Name (line 48):
# Getting the type of 'interactive_bk' (line 48)
interactive_bk_123858 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 48, 15), 'interactive_bk')
# Getting the type of 'non_interactive_bk' (line 48)
non_interactive_bk_123859 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 48, 32), 'non_interactive_bk')
# Applying the binary operator '+' (line 48)
result_add_123860 = python_operator(stypy.reporting.localization.Localization(__file__, 48, 15), '+', interactive_bk_123858, non_interactive_bk_123859)

# Assigning a type to the variable 'all_backends' (line 48)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 48, 0), 'all_backends', result_add_123860)
# Declaration of the 'ValidateInStrings' class

class ValidateInStrings(object, ):

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'False' (line 52)
        False_123861 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 52, 46), 'False')
        defaults = [False_123861]
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 52, 4, False)
        # Assigning a type to the variable 'self' (line 53)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 53, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'ValidateInStrings.__init__', ['key', 'valid', 'ignorecase'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['key', 'valid', 'ignorecase'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        unicode_123862 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 53, 8), 'unicode', u'valid is a list of legal strings')
        
        # Assigning a Name to a Attribute (line 54):
        # Getting the type of 'key' (line 54)
        key_123863 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 54, 19), 'key')
        # Getting the type of 'self' (line 54)
        self_123864 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 54, 8), 'self')
        # Setting the type of the member 'key' of a type (line 54)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 54, 8), self_123864, 'key', key_123863)
        
        # Assigning a Name to a Attribute (line 55):
        # Getting the type of 'ignorecase' (line 55)
        ignorecase_123865 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 55, 26), 'ignorecase')
        # Getting the type of 'self' (line 55)
        self_123866 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 55, 8), 'self')
        # Setting the type of the member 'ignorecase' of a type (line 55)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 55, 8), self_123866, 'ignorecase', ignorecase_123865)

        @norecursion
        def func(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'func'
            module_type_store = module_type_store.open_function_context('func', 57, 8, False)
            
            # Passed parameters checking function
            func.stypy_localization = localization
            func.stypy_type_of_self = None
            func.stypy_type_store = module_type_store
            func.stypy_function_name = 'func'
            func.stypy_param_names_list = ['s']
            func.stypy_varargs_param_name = None
            func.stypy_kwargs_param_name = None
            func.stypy_call_defaults = defaults
            func.stypy_call_varargs = varargs
            func.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'func', ['s'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'func', localization, ['s'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'func(...)' code ##################

            
            # Getting the type of 'ignorecase' (line 58)
            ignorecase_123867 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 58, 15), 'ignorecase')
            # Testing the type of an if condition (line 58)
            if_condition_123868 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 58, 12), ignorecase_123867)
            # Assigning a type to the variable 'if_condition_123868' (line 58)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 58, 12), 'if_condition_123868', if_condition_123868)
            # SSA begins for if statement (line 58)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Call to lower(...): (line 59)
            # Processing the call keyword arguments (line 59)
            kwargs_123871 = {}
            # Getting the type of 's' (line 59)
            s_123869 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 59, 23), 's', False)
            # Obtaining the member 'lower' of a type (line 59)
            lower_123870 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 59, 23), s_123869, 'lower')
            # Calling lower(args, kwargs) (line 59)
            lower_call_result_123872 = invoke(stypy.reporting.localization.Localization(__file__, 59, 23), lower_123870, *[], **kwargs_123871)
            
            # Assigning a type to the variable 'stypy_return_type' (line 59)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 59, 16), 'stypy_return_type', lower_call_result_123872)
            # SSA branch for the else part of an if statement (line 58)
            module_type_store.open_ssa_branch('else')
            # Getting the type of 's' (line 61)
            s_123873 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 61, 23), 's')
            # Assigning a type to the variable 'stypy_return_type' (line 61)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 61, 16), 'stypy_return_type', s_123873)
            # SSA join for if statement (line 58)
            module_type_store = module_type_store.join_ssa_context()
            
            
            # ################# End of 'func(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'func' in the type store
            # Getting the type of 'stypy_return_type' (line 57)
            stypy_return_type_123874 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 57, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_123874)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'func'
            return stypy_return_type_123874

        # Assigning a type to the variable 'func' (line 57)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 57, 8), 'func', func)
        
        # Assigning a DictComp to a Attribute (line 62):
        # Calculating dict comprehension
        module_type_store = module_type_store.open_function_context('dict comprehension expression', 62, 22, True)
        # Calculating comprehension expression
        # Getting the type of 'valid' (line 62)
        valid_123880 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 62, 42), 'valid')
        comprehension_123881 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 62, 22), valid_123880)
        # Assigning a type to the variable 'k' (line 62)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 62, 22), 'k', comprehension_123881)
        
        # Call to func(...): (line 62)
        # Processing the call arguments (line 62)
        # Getting the type of 'k' (line 62)
        k_123876 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 62, 27), 'k', False)
        # Processing the call keyword arguments (line 62)
        kwargs_123877 = {}
        # Getting the type of 'func' (line 62)
        func_123875 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 62, 22), 'func', False)
        # Calling func(args, kwargs) (line 62)
        func_call_result_123878 = invoke(stypy.reporting.localization.Localization(__file__, 62, 22), func_123875, *[k_123876], **kwargs_123877)
        
        # Getting the type of 'k' (line 62)
        k_123879 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 62, 31), 'k')
        dict_123882 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 62, 22), 'dict')
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 62, 22), dict_123882, (func_call_result_123878, k_123879))
        # Getting the type of 'self' (line 62)
        self_123883 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 62, 8), 'self')
        # Setting the type of the member 'valid' of a type (line 62)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 62, 8), self_123883, 'valid', dict_123882)
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def __call__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__call__'
        module_type_store = module_type_store.open_function_context('__call__', 64, 4, False)
        # Assigning a type to the variable 'self' (line 65)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 65, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        ValidateInStrings.__call__.__dict__.__setitem__('stypy_localization', localization)
        ValidateInStrings.__call__.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        ValidateInStrings.__call__.__dict__.__setitem__('stypy_type_store', module_type_store)
        ValidateInStrings.__call__.__dict__.__setitem__('stypy_function_name', 'ValidateInStrings.__call__')
        ValidateInStrings.__call__.__dict__.__setitem__('stypy_param_names_list', ['s'])
        ValidateInStrings.__call__.__dict__.__setitem__('stypy_varargs_param_name', None)
        ValidateInStrings.__call__.__dict__.__setitem__('stypy_kwargs_param_name', None)
        ValidateInStrings.__call__.__dict__.__setitem__('stypy_call_defaults', defaults)
        ValidateInStrings.__call__.__dict__.__setitem__('stypy_call_varargs', varargs)
        ValidateInStrings.__call__.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        ValidateInStrings.__call__.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'ValidateInStrings.__call__', ['s'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '__call__', localization, ['s'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__call__(...)' code ##################

        
        # Getting the type of 'self' (line 65)
        self_123884 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 65, 11), 'self')
        # Obtaining the member 'ignorecase' of a type (line 65)
        ignorecase_123885 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 65, 11), self_123884, 'ignorecase')
        # Testing the type of an if condition (line 65)
        if_condition_123886 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 65, 8), ignorecase_123885)
        # Assigning a type to the variable 'if_condition_123886' (line 65)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 65, 8), 'if_condition_123886', if_condition_123886)
        # SSA begins for if statement (line 65)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 66):
        
        # Call to lower(...): (line 66)
        # Processing the call keyword arguments (line 66)
        kwargs_123889 = {}
        # Getting the type of 's' (line 66)
        s_123887 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 66, 16), 's', False)
        # Obtaining the member 'lower' of a type (line 66)
        lower_123888 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 66, 16), s_123887, 'lower')
        # Calling lower(args, kwargs) (line 66)
        lower_call_result_123890 = invoke(stypy.reporting.localization.Localization(__file__, 66, 16), lower_123888, *[], **kwargs_123889)
        
        # Assigning a type to the variable 's' (line 66)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 66, 12), 's', lower_call_result_123890)
        # SSA join for if statement (line 65)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 's' (line 67)
        s_123891 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 67, 11), 's')
        # Getting the type of 'self' (line 67)
        self_123892 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 67, 16), 'self')
        # Obtaining the member 'valid' of a type (line 67)
        valid_123893 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 67, 16), self_123892, 'valid')
        # Applying the binary operator 'in' (line 67)
        result_contains_123894 = python_operator(stypy.reporting.localization.Localization(__file__, 67, 11), 'in', s_123891, valid_123893)
        
        # Testing the type of an if condition (line 67)
        if_condition_123895 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 67, 8), result_contains_123894)
        # Assigning a type to the variable 'if_condition_123895' (line 67)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 67, 8), 'if_condition_123895', if_condition_123895)
        # SSA begins for if statement (line 67)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Obtaining the type of the subscript
        # Getting the type of 's' (line 68)
        s_123896 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 68, 30), 's')
        # Getting the type of 'self' (line 68)
        self_123897 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 68, 19), 'self')
        # Obtaining the member 'valid' of a type (line 68)
        valid_123898 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 68, 19), self_123897, 'valid')
        # Obtaining the member '__getitem__' of a type (line 68)
        getitem___123899 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 68, 19), valid_123898, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 68)
        subscript_call_result_123900 = invoke(stypy.reporting.localization.Localization(__file__, 68, 19), getitem___123899, s_123896)
        
        # Assigning a type to the variable 'stypy_return_type' (line 68)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 68, 12), 'stypy_return_type', subscript_call_result_123900)
        # SSA join for if statement (line 67)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to ValueError(...): (line 69)
        # Processing the call arguments (line 69)
        unicode_123902 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 69, 25), 'unicode', u'Unrecognized %s string "%s": valid strings are %s')
        
        # Obtaining an instance of the builtin type 'tuple' (line 70)
        tuple_123903 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 70, 28), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 70)
        # Adding element type (line 70)
        # Getting the type of 'self' (line 70)
        self_123904 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 70, 28), 'self', False)
        # Obtaining the member 'key' of a type (line 70)
        key_123905 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 70, 28), self_123904, 'key')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 70, 28), tuple_123903, key_123905)
        # Adding element type (line 70)
        # Getting the type of 's' (line 70)
        s_123906 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 70, 38), 's', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 70, 28), tuple_123903, s_123906)
        # Adding element type (line 70)
        
        # Call to list(...): (line 70)
        # Processing the call arguments (line 70)
        
        # Call to itervalues(...): (line 70)
        # Processing the call arguments (line 70)
        # Getting the type of 'self' (line 70)
        self_123910 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 70, 61), 'self', False)
        # Obtaining the member 'valid' of a type (line 70)
        valid_123911 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 70, 61), self_123910, 'valid')
        # Processing the call keyword arguments (line 70)
        kwargs_123912 = {}
        # Getting the type of 'six' (line 70)
        six_123908 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 70, 46), 'six', False)
        # Obtaining the member 'itervalues' of a type (line 70)
        itervalues_123909 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 70, 46), six_123908, 'itervalues')
        # Calling itervalues(args, kwargs) (line 70)
        itervalues_call_result_123913 = invoke(stypy.reporting.localization.Localization(__file__, 70, 46), itervalues_123909, *[valid_123911], **kwargs_123912)
        
        # Processing the call keyword arguments (line 70)
        kwargs_123914 = {}
        # Getting the type of 'list' (line 70)
        list_123907 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 70, 41), 'list', False)
        # Calling list(args, kwargs) (line 70)
        list_call_result_123915 = invoke(stypy.reporting.localization.Localization(__file__, 70, 41), list_123907, *[itervalues_call_result_123913], **kwargs_123914)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 70, 28), tuple_123903, list_call_result_123915)
        
        # Applying the binary operator '%' (line 69)
        result_mod_123916 = python_operator(stypy.reporting.localization.Localization(__file__, 69, 25), '%', unicode_123902, tuple_123903)
        
        # Processing the call keyword arguments (line 69)
        kwargs_123917 = {}
        # Getting the type of 'ValueError' (line 69)
        ValueError_123901 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 69, 14), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 69)
        ValueError_call_result_123918 = invoke(stypy.reporting.localization.Localization(__file__, 69, 14), ValueError_123901, *[result_mod_123916], **kwargs_123917)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 69, 8), ValueError_call_result_123918, 'raise parameter', BaseException)
        
        # ################# End of '__call__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '__call__' in the type store
        # Getting the type of 'stypy_return_type' (line 64)
        stypy_return_type_123919 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 64, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_123919)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '__call__'
        return stypy_return_type_123919


# Assigning a type to the variable 'ValidateInStrings' (line 51)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 51, 0), 'ValidateInStrings', ValidateInStrings)

@norecursion
def _listify_validator(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    # Getting the type of 'False' (line 73)
    False_123920 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 73, 58), 'False')
    defaults = [False_123920]
    # Create a new context for function '_listify_validator'
    module_type_store = module_type_store.open_function_context('_listify_validator', 73, 0, False)
    
    # Passed parameters checking function
    _listify_validator.stypy_localization = localization
    _listify_validator.stypy_type_of_self = None
    _listify_validator.stypy_type_store = module_type_store
    _listify_validator.stypy_function_name = '_listify_validator'
    _listify_validator.stypy_param_names_list = ['scalar_validator', 'allow_stringlist']
    _listify_validator.stypy_varargs_param_name = None
    _listify_validator.stypy_kwargs_param_name = None
    _listify_validator.stypy_call_defaults = defaults
    _listify_validator.stypy_call_varargs = varargs
    _listify_validator.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, '_listify_validator', ['scalar_validator', 'allow_stringlist'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, '_listify_validator', localization, ['scalar_validator', 'allow_stringlist'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of '_listify_validator(...)' code ##################


    @norecursion
    def f(localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'f'
        module_type_store = module_type_store.open_function_context('f', 74, 4, False)
        
        # Passed parameters checking function
        f.stypy_localization = localization
        f.stypy_type_of_self = None
        f.stypy_type_store = module_type_store
        f.stypy_function_name = 'f'
        f.stypy_param_names_list = ['s']
        f.stypy_varargs_param_name = None
        f.stypy_kwargs_param_name = None
        f.stypy_call_defaults = defaults
        f.stypy_call_varargs = varargs
        f.stypy_call_kwargs = kwargs
        arguments = process_argument_values(localization, None, module_type_store, 'f', ['s'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'f', localization, ['s'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'f(...)' code ##################

        
        
        # Call to isinstance(...): (line 75)
        # Processing the call arguments (line 75)
        # Getting the type of 's' (line 75)
        s_123922 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 75, 22), 's', False)
        # Getting the type of 'six' (line 75)
        six_123923 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 75, 25), 'six', False)
        # Obtaining the member 'string_types' of a type (line 75)
        string_types_123924 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 75, 25), six_123923, 'string_types')
        # Processing the call keyword arguments (line 75)
        kwargs_123925 = {}
        # Getting the type of 'isinstance' (line 75)
        isinstance_123921 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 75, 11), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 75)
        isinstance_call_result_123926 = invoke(stypy.reporting.localization.Localization(__file__, 75, 11), isinstance_123921, *[s_123922, string_types_123924], **kwargs_123925)
        
        # Testing the type of an if condition (line 75)
        if_condition_123927 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 75, 8), isinstance_call_result_123926)
        # Assigning a type to the variable 'if_condition_123927' (line 75)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 75, 8), 'if_condition_123927', if_condition_123927)
        # SSA begins for if statement (line 75)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        
        # SSA begins for try-except statement (line 76)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
        # Calculating list comprehension
        # Calculating comprehension expression
        
        # Call to split(...): (line 77)
        # Processing the call arguments (line 77)
        unicode_123941 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 77, 69), 'unicode', u',')
        # Processing the call keyword arguments (line 77)
        kwargs_123942 = {}
        # Getting the type of 's' (line 77)
        s_123939 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 77, 61), 's', False)
        # Obtaining the member 'split' of a type (line 77)
        split_123940 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 77, 61), s_123939, 'split')
        # Calling split(args, kwargs) (line 77)
        split_call_result_123943 = invoke(stypy.reporting.localization.Localization(__file__, 77, 61), split_123940, *[unicode_123941], **kwargs_123942)
        
        comprehension_123944 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 77, 24), split_call_result_123943)
        # Assigning a type to the variable 'v' (line 77)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 77, 24), 'v', comprehension_123944)
        
        # Call to strip(...): (line 78)
        # Processing the call keyword arguments (line 78)
        kwargs_123937 = {}
        # Getting the type of 'v' (line 78)
        v_123935 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 78, 27), 'v', False)
        # Obtaining the member 'strip' of a type (line 78)
        strip_123936 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 78, 27), v_123935, 'strip')
        # Calling strip(args, kwargs) (line 78)
        strip_call_result_123938 = invoke(stypy.reporting.localization.Localization(__file__, 78, 27), strip_123936, *[], **kwargs_123937)
        
        
        # Call to scalar_validator(...): (line 77)
        # Processing the call arguments (line 77)
        
        # Call to strip(...): (line 77)
        # Processing the call keyword arguments (line 77)
        kwargs_123931 = {}
        # Getting the type of 'v' (line 77)
        v_123929 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 77, 41), 'v', False)
        # Obtaining the member 'strip' of a type (line 77)
        strip_123930 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 77, 41), v_123929, 'strip')
        # Calling strip(args, kwargs) (line 77)
        strip_call_result_123932 = invoke(stypy.reporting.localization.Localization(__file__, 77, 41), strip_123930, *[], **kwargs_123931)
        
        # Processing the call keyword arguments (line 77)
        kwargs_123933 = {}
        # Getting the type of 'scalar_validator' (line 77)
        scalar_validator_123928 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 77, 24), 'scalar_validator', False)
        # Calling scalar_validator(args, kwargs) (line 77)
        scalar_validator_call_result_123934 = invoke(stypy.reporting.localization.Localization(__file__, 77, 24), scalar_validator_123928, *[strip_call_result_123932], **kwargs_123933)
        
        list_123945 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 77, 24), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 77, 24), list_123945, scalar_validator_call_result_123934)
        # Assigning a type to the variable 'stypy_return_type' (line 77)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 77, 16), 'stypy_return_type', list_123945)
        # SSA branch for the except part of a try statement (line 76)
        # SSA branch for the except 'Exception' branch of a try statement (line 76)
        module_type_store.open_ssa_branch('except')
        
        # Getting the type of 'allow_stringlist' (line 80)
        allow_stringlist_123946 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 80, 19), 'allow_stringlist')
        # Testing the type of an if condition (line 80)
        if_condition_123947 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 80, 16), allow_stringlist_123946)
        # Assigning a type to the variable 'if_condition_123947' (line 80)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 80, 16), 'if_condition_123947', if_condition_123947)
        # SSA begins for if statement (line 80)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        # Calculating list comprehension
        # Calculating comprehension expression
        # Getting the type of 's' (line 83)
        s_123959 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 83, 65), 's')
        comprehension_123960 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 83, 28), s_123959)
        # Assigning a type to the variable 'v' (line 83)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 83, 28), 'v', comprehension_123960)
        
        # Call to strip(...): (line 83)
        # Processing the call keyword arguments (line 83)
        kwargs_123957 = {}
        # Getting the type of 'v' (line 83)
        v_123955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 83, 70), 'v', False)
        # Obtaining the member 'strip' of a type (line 83)
        strip_123956 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 83, 70), v_123955, 'strip')
        # Calling strip(args, kwargs) (line 83)
        strip_call_result_123958 = invoke(stypy.reporting.localization.Localization(__file__, 83, 70), strip_123956, *[], **kwargs_123957)
        
        
        # Call to scalar_validator(...): (line 83)
        # Processing the call arguments (line 83)
        
        # Call to strip(...): (line 83)
        # Processing the call keyword arguments (line 83)
        kwargs_123951 = {}
        # Getting the type of 'v' (line 83)
        v_123949 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 83, 45), 'v', False)
        # Obtaining the member 'strip' of a type (line 83)
        strip_123950 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 83, 45), v_123949, 'strip')
        # Calling strip(args, kwargs) (line 83)
        strip_call_result_123952 = invoke(stypy.reporting.localization.Localization(__file__, 83, 45), strip_123950, *[], **kwargs_123951)
        
        # Processing the call keyword arguments (line 83)
        kwargs_123953 = {}
        # Getting the type of 'scalar_validator' (line 83)
        scalar_validator_123948 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 83, 28), 'scalar_validator', False)
        # Calling scalar_validator(args, kwargs) (line 83)
        scalar_validator_call_result_123954 = invoke(stypy.reporting.localization.Localization(__file__, 83, 28), scalar_validator_123948, *[strip_call_result_123952], **kwargs_123953)
        
        list_123961 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 83, 28), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 83, 28), list_123961, scalar_validator_call_result_123954)
        # Assigning a type to the variable 'stypy_return_type' (line 83)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 83, 20), 'stypy_return_type', list_123961)
        # SSA branch for the else part of an if statement (line 80)
        module_type_store.open_ssa_branch('else')
        # SSA join for if statement (line 80)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for try-except statement (line 76)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA branch for the else part of an if statement (line 75)
        module_type_store.open_ssa_branch('else')
        
        
        # Evaluating a boolean operation
        
        # Call to isinstance(...): (line 90)
        # Processing the call arguments (line 90)
        # Getting the type of 's' (line 90)
        s_123963 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 90, 24), 's', False)
        # Getting the type of 'Iterable' (line 90)
        Iterable_123964 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 90, 27), 'Iterable', False)
        # Processing the call keyword arguments (line 90)
        kwargs_123965 = {}
        # Getting the type of 'isinstance' (line 90)
        isinstance_123962 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 90, 13), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 90)
        isinstance_call_result_123966 = invoke(stypy.reporting.localization.Localization(__file__, 90, 13), isinstance_123962, *[s_123963, Iterable_123964], **kwargs_123965)
        
        
        
        # Call to isinstance(...): (line 90)
        # Processing the call arguments (line 90)
        # Getting the type of 's' (line 90)
        s_123968 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 90, 56), 's', False)
        # Getting the type of 'Mapping' (line 90)
        Mapping_123969 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 90, 59), 'Mapping', False)
        # Processing the call keyword arguments (line 90)
        kwargs_123970 = {}
        # Getting the type of 'isinstance' (line 90)
        isinstance_123967 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 90, 45), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 90)
        isinstance_call_result_123971 = invoke(stypy.reporting.localization.Localization(__file__, 90, 45), isinstance_123967, *[s_123968, Mapping_123969], **kwargs_123970)
        
        # Applying the 'not' unary operator (line 90)
        result_not__123972 = python_operator(stypy.reporting.localization.Localization(__file__, 90, 41), 'not', isinstance_call_result_123971)
        
        # Applying the binary operator 'and' (line 90)
        result_and_keyword_123973 = python_operator(stypy.reporting.localization.Localization(__file__, 90, 13), 'and', isinstance_call_result_123966, result_not__123972)
        
        # Testing the type of an if condition (line 90)
        if_condition_123974 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 90, 13), result_and_keyword_123973)
        # Assigning a type to the variable 'if_condition_123974' (line 90)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 90, 13), 'if_condition_123974', if_condition_123974)
        # SSA begins for if statement (line 90)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        # Calculating list comprehension
        # Calculating comprehension expression
        # Getting the type of 's' (line 95)
        s_123988 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 95, 49), 's')
        comprehension_123989 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 95, 20), s_123988)
        # Assigning a type to the variable 'v' (line 95)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 95, 20), 'v', comprehension_123989)
        
        # Evaluating a boolean operation
        
        
        # Call to isinstance(...): (line 96)
        # Processing the call arguments (line 96)
        # Getting the type of 'v' (line 96)
        v_123980 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 96, 38), 'v', False)
        # Getting the type of 'six' (line 96)
        six_123981 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 96, 41), 'six', False)
        # Obtaining the member 'string_types' of a type (line 96)
        string_types_123982 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 96, 41), six_123981, 'string_types')
        # Processing the call keyword arguments (line 96)
        kwargs_123983 = {}
        # Getting the type of 'isinstance' (line 96)
        isinstance_123979 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 96, 27), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 96)
        isinstance_call_result_123984 = invoke(stypy.reporting.localization.Localization(__file__, 96, 27), isinstance_123979, *[v_123980, string_types_123982], **kwargs_123983)
        
        # Applying the 'not' unary operator (line 96)
        result_not__123985 = python_operator(stypy.reporting.localization.Localization(__file__, 96, 23), 'not', isinstance_call_result_123984)
        
        # Getting the type of 'v' (line 96)
        v_123986 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 96, 62), 'v')
        # Applying the binary operator 'or' (line 96)
        result_or_keyword_123987 = python_operator(stypy.reporting.localization.Localization(__file__, 96, 23), 'or', result_not__123985, v_123986)
        
        
        # Call to scalar_validator(...): (line 95)
        # Processing the call arguments (line 95)
        # Getting the type of 'v' (line 95)
        v_123976 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 95, 37), 'v', False)
        # Processing the call keyword arguments (line 95)
        kwargs_123977 = {}
        # Getting the type of 'scalar_validator' (line 95)
        scalar_validator_123975 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 95, 20), 'scalar_validator', False)
        # Calling scalar_validator(args, kwargs) (line 95)
        scalar_validator_call_result_123978 = invoke(stypy.reporting.localization.Localization(__file__, 95, 20), scalar_validator_123975, *[v_123976], **kwargs_123977)
        
        list_123990 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 95, 20), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 95, 20), list_123990, scalar_validator_call_result_123978)
        # Assigning a type to the variable 'stypy_return_type' (line 95)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 95, 12), 'stypy_return_type', list_123990)
        # SSA branch for the else part of an if statement (line 90)
        module_type_store.open_ssa_branch('else')
        
        # Call to ValueError(...): (line 98)
        # Processing the call arguments (line 98)
        
        # Call to format(...): (line 98)
        # Processing the call arguments (line 98)
        # Getting the type of 's' (line 99)
        s_123994 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 99, 47), 's', False)
        # Processing the call keyword arguments (line 98)
        kwargs_123995 = {}
        unicode_123992 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 98, 29), 'unicode', u'{!r} must be of type: string or non-dictionary iterable')
        # Obtaining the member 'format' of a type (line 98)
        format_123993 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 98, 29), unicode_123992, 'format')
        # Calling format(args, kwargs) (line 98)
        format_call_result_123996 = invoke(stypy.reporting.localization.Localization(__file__, 98, 29), format_123993, *[s_123994], **kwargs_123995)
        
        # Processing the call keyword arguments (line 98)
        kwargs_123997 = {}
        # Getting the type of 'ValueError' (line 98)
        ValueError_123991 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 98, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 98)
        ValueError_call_result_123998 = invoke(stypy.reporting.localization.Localization(__file__, 98, 18), ValueError_123991, *[format_call_result_123996], **kwargs_123997)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 98, 12), ValueError_call_result_123998, 'raise parameter', BaseException)
        # SSA join for if statement (line 90)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 75)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'f(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'f' in the type store
        # Getting the type of 'stypy_return_type' (line 74)
        stypy_return_type_123999 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 74, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_123999)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'f'
        return stypy_return_type_123999

    # Assigning a type to the variable 'f' (line 74)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 74, 4), 'f', f)
    
    
    # SSA begins for try-except statement (line 101)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
    
    # Assigning a Call to a Attribute (line 102):
    
    # Call to str(...): (line 102)
    # Processing the call arguments (line 102)
    
    # Call to format(...): (line 102)
    # Processing the call arguments (line 102)
    # Getting the type of 'scalar_validator' (line 102)
    scalar_validator_124003 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 102, 41), 'scalar_validator', False)
    # Obtaining the member '__name__' of a type (line 102)
    name___124004 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 102, 41), scalar_validator_124003, '__name__')
    # Processing the call keyword arguments (line 102)
    kwargs_124005 = {}
    unicode_124001 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 102, 25), 'unicode', u'{}list')
    # Obtaining the member 'format' of a type (line 102)
    format_124002 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 102, 25), unicode_124001, 'format')
    # Calling format(args, kwargs) (line 102)
    format_call_result_124006 = invoke(stypy.reporting.localization.Localization(__file__, 102, 25), format_124002, *[name___124004], **kwargs_124005)
    
    # Processing the call keyword arguments (line 102)
    kwargs_124007 = {}
    # Getting the type of 'str' (line 102)
    str_124000 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 102, 21), 'str', False)
    # Calling str(args, kwargs) (line 102)
    str_call_result_124008 = invoke(stypy.reporting.localization.Localization(__file__, 102, 21), str_124000, *[format_call_result_124006], **kwargs_124007)
    
    # Getting the type of 'f' (line 102)
    f_124009 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 102, 8), 'f')
    # Setting the type of the member '__name__' of a type (line 102)
    module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 102, 8), f_124009, '__name__', str_call_result_124008)
    # SSA branch for the except part of a try statement (line 101)
    # SSA branch for the except 'AttributeError' branch of a try statement (line 101)
    module_type_store.open_ssa_branch('except')
    
    # Assigning a Call to a Attribute (line 104):
    
    # Call to str(...): (line 104)
    # Processing the call arguments (line 104)
    
    # Call to format(...): (line 104)
    # Processing the call arguments (line 104)
    
    # Call to type(...): (line 104)
    # Processing the call arguments (line 104)
    # Getting the type of 'scalar_validator' (line 104)
    scalar_validator_124014 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 104, 46), 'scalar_validator', False)
    # Processing the call keyword arguments (line 104)
    kwargs_124015 = {}
    # Getting the type of 'type' (line 104)
    type_124013 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 104, 41), 'type', False)
    # Calling type(args, kwargs) (line 104)
    type_call_result_124016 = invoke(stypy.reporting.localization.Localization(__file__, 104, 41), type_124013, *[scalar_validator_124014], **kwargs_124015)
    
    # Obtaining the member '__name__' of a type (line 104)
    name___124017 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 104, 41), type_call_result_124016, '__name__')
    # Processing the call keyword arguments (line 104)
    kwargs_124018 = {}
    unicode_124011 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 104, 25), 'unicode', u'{}List')
    # Obtaining the member 'format' of a type (line 104)
    format_124012 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 104, 25), unicode_124011, 'format')
    # Calling format(args, kwargs) (line 104)
    format_call_result_124019 = invoke(stypy.reporting.localization.Localization(__file__, 104, 25), format_124012, *[name___124017], **kwargs_124018)
    
    # Processing the call keyword arguments (line 104)
    kwargs_124020 = {}
    # Getting the type of 'str' (line 104)
    str_124010 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 104, 21), 'str', False)
    # Calling str(args, kwargs) (line 104)
    str_call_result_124021 = invoke(stypy.reporting.localization.Localization(__file__, 104, 21), str_124010, *[format_call_result_124019], **kwargs_124020)
    
    # Getting the type of 'f' (line 104)
    f_124022 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 104, 8), 'f')
    # Setting the type of the member '__name__' of a type (line 104)
    module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 104, 8), f_124022, '__name__', str_call_result_124021)
    # SSA join for try-except statement (line 101)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Attribute to a Attribute (line 105):
    # Getting the type of 'scalar_validator' (line 105)
    scalar_validator_124023 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 105, 16), 'scalar_validator')
    # Obtaining the member '__doc__' of a type (line 105)
    doc___124024 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 105, 16), scalar_validator_124023, '__doc__')
    # Getting the type of 'f' (line 105)
    f_124025 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 105, 4), 'f')
    # Setting the type of the member '__doc__' of a type (line 105)
    module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 105, 4), f_124025, '__doc__', doc___124024)
    # Getting the type of 'f' (line 106)
    f_124026 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 106, 11), 'f')
    # Assigning a type to the variable 'stypy_return_type' (line 106)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 106, 4), 'stypy_return_type', f_124026)
    
    # ################# End of '_listify_validator(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function '_listify_validator' in the type store
    # Getting the type of 'stypy_return_type' (line 73)
    stypy_return_type_124027 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 73, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_124027)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function '_listify_validator'
    return stypy_return_type_124027

# Assigning a type to the variable '_listify_validator' (line 73)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 73, 0), '_listify_validator', _listify_validator)

@norecursion
def validate_any(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'validate_any'
    module_type_store = module_type_store.open_function_context('validate_any', 109, 0, False)
    
    # Passed parameters checking function
    validate_any.stypy_localization = localization
    validate_any.stypy_type_of_self = None
    validate_any.stypy_type_store = module_type_store
    validate_any.stypy_function_name = 'validate_any'
    validate_any.stypy_param_names_list = ['s']
    validate_any.stypy_varargs_param_name = None
    validate_any.stypy_kwargs_param_name = None
    validate_any.stypy_call_defaults = defaults
    validate_any.stypy_call_varargs = varargs
    validate_any.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'validate_any', ['s'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'validate_any', localization, ['s'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'validate_any(...)' code ##################

    # Getting the type of 's' (line 110)
    s_124028 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 110, 11), 's')
    # Assigning a type to the variable 'stypy_return_type' (line 110)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 110, 4), 'stypy_return_type', s_124028)
    
    # ################# End of 'validate_any(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'validate_any' in the type store
    # Getting the type of 'stypy_return_type' (line 109)
    stypy_return_type_124029 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 109, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_124029)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'validate_any'
    return stypy_return_type_124029

# Assigning a type to the variable 'validate_any' (line 109)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 109, 0), 'validate_any', validate_any)

# Assigning a Call to a Name (line 111):

# Call to _listify_validator(...): (line 111)
# Processing the call arguments (line 111)
# Getting the type of 'validate_any' (line 111)
validate_any_124031 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 111, 38), 'validate_any', False)
# Processing the call keyword arguments (line 111)
kwargs_124032 = {}
# Getting the type of '_listify_validator' (line 111)
_listify_validator_124030 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 111, 19), '_listify_validator', False)
# Calling _listify_validator(args, kwargs) (line 111)
_listify_validator_call_result_124033 = invoke(stypy.reporting.localization.Localization(__file__, 111, 19), _listify_validator_124030, *[validate_any_124031], **kwargs_124032)

# Assigning a type to the variable 'validate_anylist' (line 111)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 111, 0), 'validate_anylist', _listify_validator_call_result_124033)

@norecursion
def validate_path_exists(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'validate_path_exists'
    module_type_store = module_type_store.open_function_context('validate_path_exists', 114, 0, False)
    
    # Passed parameters checking function
    validate_path_exists.stypy_localization = localization
    validate_path_exists.stypy_type_of_self = None
    validate_path_exists.stypy_type_store = module_type_store
    validate_path_exists.stypy_function_name = 'validate_path_exists'
    validate_path_exists.stypy_param_names_list = ['s']
    validate_path_exists.stypy_varargs_param_name = None
    validate_path_exists.stypy_kwargs_param_name = None
    validate_path_exists.stypy_call_defaults = defaults
    validate_path_exists.stypy_call_varargs = varargs
    validate_path_exists.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'validate_path_exists', ['s'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'validate_path_exists', localization, ['s'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'validate_path_exists(...)' code ##################

    unicode_124034 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 115, 4), 'unicode', u'If s is a path, return s, else False')
    
    # Type idiom detected: calculating its left and rigth part (line 116)
    # Getting the type of 's' (line 116)
    s_124035 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 116, 7), 's')
    # Getting the type of 'None' (line 116)
    None_124036 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 116, 12), 'None')
    
    (may_be_124037, more_types_in_union_124038) = may_be_none(s_124035, None_124036)

    if may_be_124037:

        if more_types_in_union_124038:
            # Runtime conditional SSA (line 116)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        # Getting the type of 'None' (line 117)
        None_124039 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 117, 15), 'None')
        # Assigning a type to the variable 'stypy_return_type' (line 117)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 117, 8), 'stypy_return_type', None_124039)

        if more_types_in_union_124038:
            # SSA join for if statement (line 116)
            module_type_store = module_type_store.join_ssa_context()


    
    
    
    # Call to exists(...): (line 118)
    # Processing the call arguments (line 118)
    # Getting the type of 's' (line 118)
    s_124043 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 118, 22), 's', False)
    # Processing the call keyword arguments (line 118)
    kwargs_124044 = {}
    # Getting the type of 'os' (line 118)
    os_124040 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 118, 7), 'os', False)
    # Obtaining the member 'path' of a type (line 118)
    path_124041 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 118, 7), os_124040, 'path')
    # Obtaining the member 'exists' of a type (line 118)
    exists_124042 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 118, 7), path_124041, 'exists')
    # Calling exists(args, kwargs) (line 118)
    exists_call_result_124045 = invoke(stypy.reporting.localization.Localization(__file__, 118, 7), exists_124042, *[s_124043], **kwargs_124044)
    
    # Testing the type of an if condition (line 118)
    if_condition_124046 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 118, 4), exists_call_result_124045)
    # Assigning a type to the variable 'if_condition_124046' (line 118)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 118, 4), 'if_condition_124046', if_condition_124046)
    # SSA begins for if statement (line 118)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Getting the type of 's' (line 119)
    s_124047 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 119, 15), 's')
    # Assigning a type to the variable 'stypy_return_type' (line 119)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 119, 8), 'stypy_return_type', s_124047)
    # SSA branch for the else part of an if statement (line 118)
    module_type_store.open_ssa_branch('else')
    
    # Call to RuntimeError(...): (line 121)
    # Processing the call arguments (line 121)
    unicode_124049 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 121, 27), 'unicode', u'"%s" should be a path but it does not exist')
    # Getting the type of 's' (line 121)
    s_124050 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 121, 75), 's', False)
    # Applying the binary operator '%' (line 121)
    result_mod_124051 = python_operator(stypy.reporting.localization.Localization(__file__, 121, 27), '%', unicode_124049, s_124050)
    
    # Processing the call keyword arguments (line 121)
    kwargs_124052 = {}
    # Getting the type of 'RuntimeError' (line 121)
    RuntimeError_124048 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 121, 14), 'RuntimeError', False)
    # Calling RuntimeError(args, kwargs) (line 121)
    RuntimeError_call_result_124053 = invoke(stypy.reporting.localization.Localization(__file__, 121, 14), RuntimeError_124048, *[result_mod_124051], **kwargs_124052)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 121, 8), RuntimeError_call_result_124053, 'raise parameter', BaseException)
    # SSA join for if statement (line 118)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # ################# End of 'validate_path_exists(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'validate_path_exists' in the type store
    # Getting the type of 'stypy_return_type' (line 114)
    stypy_return_type_124054 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 114, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_124054)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'validate_path_exists'
    return stypy_return_type_124054

# Assigning a type to the variable 'validate_path_exists' (line 114)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 114, 0), 'validate_path_exists', validate_path_exists)

@norecursion
def validate_bool(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'validate_bool'
    module_type_store = module_type_store.open_function_context('validate_bool', 124, 0, False)
    
    # Passed parameters checking function
    validate_bool.stypy_localization = localization
    validate_bool.stypy_type_of_self = None
    validate_bool.stypy_type_store = module_type_store
    validate_bool.stypy_function_name = 'validate_bool'
    validate_bool.stypy_param_names_list = ['b']
    validate_bool.stypy_varargs_param_name = None
    validate_bool.stypy_kwargs_param_name = None
    validate_bool.stypy_call_defaults = defaults
    validate_bool.stypy_call_varargs = varargs
    validate_bool.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'validate_bool', ['b'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'validate_bool', localization, ['b'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'validate_bool(...)' code ##################

    unicode_124055 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 125, 4), 'unicode', u'Convert b to a boolean or raise')
    
    
    # Call to isinstance(...): (line 126)
    # Processing the call arguments (line 126)
    # Getting the type of 'b' (line 126)
    b_124057 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 126, 18), 'b', False)
    # Getting the type of 'six' (line 126)
    six_124058 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 126, 21), 'six', False)
    # Obtaining the member 'string_types' of a type (line 126)
    string_types_124059 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 126, 21), six_124058, 'string_types')
    # Processing the call keyword arguments (line 126)
    kwargs_124060 = {}
    # Getting the type of 'isinstance' (line 126)
    isinstance_124056 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 126, 7), 'isinstance', False)
    # Calling isinstance(args, kwargs) (line 126)
    isinstance_call_result_124061 = invoke(stypy.reporting.localization.Localization(__file__, 126, 7), isinstance_124056, *[b_124057, string_types_124059], **kwargs_124060)
    
    # Testing the type of an if condition (line 126)
    if_condition_124062 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 126, 4), isinstance_call_result_124061)
    # Assigning a type to the variable 'if_condition_124062' (line 126)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 126, 4), 'if_condition_124062', if_condition_124062)
    # SSA begins for if statement (line 126)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 127):
    
    # Call to lower(...): (line 127)
    # Processing the call keyword arguments (line 127)
    kwargs_124065 = {}
    # Getting the type of 'b' (line 127)
    b_124063 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 127, 12), 'b', False)
    # Obtaining the member 'lower' of a type (line 127)
    lower_124064 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 127, 12), b_124063, 'lower')
    # Calling lower(args, kwargs) (line 127)
    lower_call_result_124066 = invoke(stypy.reporting.localization.Localization(__file__, 127, 12), lower_124064, *[], **kwargs_124065)
    
    # Assigning a type to the variable 'b' (line 127)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 127, 8), 'b', lower_call_result_124066)
    # SSA join for if statement (line 126)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'b' (line 128)
    b_124067 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 128, 7), 'b')
    
    # Obtaining an instance of the builtin type 'tuple' (line 128)
    tuple_124068 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 128, 13), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 128)
    # Adding element type (line 128)
    unicode_124069 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 128, 13), 'unicode', u't')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 128, 13), tuple_124068, unicode_124069)
    # Adding element type (line 128)
    unicode_124070 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 128, 18), 'unicode', u'y')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 128, 13), tuple_124068, unicode_124070)
    # Adding element type (line 128)
    unicode_124071 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 128, 23), 'unicode', u'yes')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 128, 13), tuple_124068, unicode_124071)
    # Adding element type (line 128)
    unicode_124072 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 128, 30), 'unicode', u'on')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 128, 13), tuple_124068, unicode_124072)
    # Adding element type (line 128)
    unicode_124073 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 128, 36), 'unicode', u'true')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 128, 13), tuple_124068, unicode_124073)
    # Adding element type (line 128)
    unicode_124074 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 128, 44), 'unicode', u'1')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 128, 13), tuple_124068, unicode_124074)
    # Adding element type (line 128)
    int_124075 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 128, 49), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 128, 13), tuple_124068, int_124075)
    # Adding element type (line 128)
    # Getting the type of 'True' (line 128)
    True_124076 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 128, 52), 'True')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 128, 13), tuple_124068, True_124076)
    
    # Applying the binary operator 'in' (line 128)
    result_contains_124077 = python_operator(stypy.reporting.localization.Localization(__file__, 128, 7), 'in', b_124067, tuple_124068)
    
    # Testing the type of an if condition (line 128)
    if_condition_124078 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 128, 4), result_contains_124077)
    # Assigning a type to the variable 'if_condition_124078' (line 128)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 128, 4), 'if_condition_124078', if_condition_124078)
    # SSA begins for if statement (line 128)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Getting the type of 'True' (line 129)
    True_124079 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 129, 15), 'True')
    # Assigning a type to the variable 'stypy_return_type' (line 129)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 129, 8), 'stypy_return_type', True_124079)
    # SSA branch for the else part of an if statement (line 128)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'b' (line 130)
    b_124080 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 130, 9), 'b')
    
    # Obtaining an instance of the builtin type 'tuple' (line 130)
    tuple_124081 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 130, 15), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 130)
    # Adding element type (line 130)
    unicode_124082 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 130, 15), 'unicode', u'f')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 130, 15), tuple_124081, unicode_124082)
    # Adding element type (line 130)
    unicode_124083 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 130, 20), 'unicode', u'n')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 130, 15), tuple_124081, unicode_124083)
    # Adding element type (line 130)
    unicode_124084 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 130, 25), 'unicode', u'no')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 130, 15), tuple_124081, unicode_124084)
    # Adding element type (line 130)
    unicode_124085 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 130, 31), 'unicode', u'off')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 130, 15), tuple_124081, unicode_124085)
    # Adding element type (line 130)
    unicode_124086 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 130, 38), 'unicode', u'false')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 130, 15), tuple_124081, unicode_124086)
    # Adding element type (line 130)
    unicode_124087 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 130, 47), 'unicode', u'0')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 130, 15), tuple_124081, unicode_124087)
    # Adding element type (line 130)
    int_124088 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 130, 52), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 130, 15), tuple_124081, int_124088)
    # Adding element type (line 130)
    # Getting the type of 'False' (line 130)
    False_124089 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 130, 55), 'False')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 130, 15), tuple_124081, False_124089)
    
    # Applying the binary operator 'in' (line 130)
    result_contains_124090 = python_operator(stypy.reporting.localization.Localization(__file__, 130, 9), 'in', b_124080, tuple_124081)
    
    # Testing the type of an if condition (line 130)
    if_condition_124091 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 130, 9), result_contains_124090)
    # Assigning a type to the variable 'if_condition_124091' (line 130)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 130, 9), 'if_condition_124091', if_condition_124091)
    # SSA begins for if statement (line 130)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Getting the type of 'False' (line 131)
    False_124092 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 131, 15), 'False')
    # Assigning a type to the variable 'stypy_return_type' (line 131)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 131, 8), 'stypy_return_type', False_124092)
    # SSA branch for the else part of an if statement (line 130)
    module_type_store.open_ssa_branch('else')
    
    # Call to ValueError(...): (line 133)
    # Processing the call arguments (line 133)
    unicode_124094 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 133, 25), 'unicode', u'Could not convert "%s" to boolean')
    # Getting the type of 'b' (line 133)
    b_124095 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 133, 63), 'b', False)
    # Applying the binary operator '%' (line 133)
    result_mod_124096 = python_operator(stypy.reporting.localization.Localization(__file__, 133, 25), '%', unicode_124094, b_124095)
    
    # Processing the call keyword arguments (line 133)
    kwargs_124097 = {}
    # Getting the type of 'ValueError' (line 133)
    ValueError_124093 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 133, 14), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 133)
    ValueError_call_result_124098 = invoke(stypy.reporting.localization.Localization(__file__, 133, 14), ValueError_124093, *[result_mod_124096], **kwargs_124097)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 133, 8), ValueError_call_result_124098, 'raise parameter', BaseException)
    # SSA join for if statement (line 130)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 128)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # ################# End of 'validate_bool(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'validate_bool' in the type store
    # Getting the type of 'stypy_return_type' (line 124)
    stypy_return_type_124099 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 124, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_124099)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'validate_bool'
    return stypy_return_type_124099

# Assigning a type to the variable 'validate_bool' (line 124)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 124, 0), 'validate_bool', validate_bool)

@norecursion
def validate_bool_maybe_none(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'validate_bool_maybe_none'
    module_type_store = module_type_store.open_function_context('validate_bool_maybe_none', 136, 0, False)
    
    # Passed parameters checking function
    validate_bool_maybe_none.stypy_localization = localization
    validate_bool_maybe_none.stypy_type_of_self = None
    validate_bool_maybe_none.stypy_type_store = module_type_store
    validate_bool_maybe_none.stypy_function_name = 'validate_bool_maybe_none'
    validate_bool_maybe_none.stypy_param_names_list = ['b']
    validate_bool_maybe_none.stypy_varargs_param_name = None
    validate_bool_maybe_none.stypy_kwargs_param_name = None
    validate_bool_maybe_none.stypy_call_defaults = defaults
    validate_bool_maybe_none.stypy_call_varargs = varargs
    validate_bool_maybe_none.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'validate_bool_maybe_none', ['b'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'validate_bool_maybe_none', localization, ['b'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'validate_bool_maybe_none(...)' code ##################

    unicode_124100 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 137, 4), 'unicode', u'Convert b to a boolean or raise')
    
    
    # Call to isinstance(...): (line 138)
    # Processing the call arguments (line 138)
    # Getting the type of 'b' (line 138)
    b_124102 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 138, 18), 'b', False)
    # Getting the type of 'six' (line 138)
    six_124103 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 138, 21), 'six', False)
    # Obtaining the member 'string_types' of a type (line 138)
    string_types_124104 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 138, 21), six_124103, 'string_types')
    # Processing the call keyword arguments (line 138)
    kwargs_124105 = {}
    # Getting the type of 'isinstance' (line 138)
    isinstance_124101 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 138, 7), 'isinstance', False)
    # Calling isinstance(args, kwargs) (line 138)
    isinstance_call_result_124106 = invoke(stypy.reporting.localization.Localization(__file__, 138, 7), isinstance_124101, *[b_124102, string_types_124104], **kwargs_124105)
    
    # Testing the type of an if condition (line 138)
    if_condition_124107 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 138, 4), isinstance_call_result_124106)
    # Assigning a type to the variable 'if_condition_124107' (line 138)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 138, 4), 'if_condition_124107', if_condition_124107)
    # SSA begins for if statement (line 138)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 139):
    
    # Call to lower(...): (line 139)
    # Processing the call keyword arguments (line 139)
    kwargs_124110 = {}
    # Getting the type of 'b' (line 139)
    b_124108 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 139, 12), 'b', False)
    # Obtaining the member 'lower' of a type (line 139)
    lower_124109 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 139, 12), b_124108, 'lower')
    # Calling lower(args, kwargs) (line 139)
    lower_call_result_124111 = invoke(stypy.reporting.localization.Localization(__file__, 139, 12), lower_124109, *[], **kwargs_124110)
    
    # Assigning a type to the variable 'b' (line 139)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 139, 8), 'b', lower_call_result_124111)
    # SSA join for if statement (line 138)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'b' (line 140)
    b_124112 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 140, 7), 'b')
    # Getting the type of 'None' (line 140)
    None_124113 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 140, 12), 'None')
    # Applying the binary operator 'is' (line 140)
    result_is__124114 = python_operator(stypy.reporting.localization.Localization(__file__, 140, 7), 'is', b_124112, None_124113)
    
    
    # Getting the type of 'b' (line 140)
    b_124115 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 140, 20), 'b')
    unicode_124116 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 140, 25), 'unicode', u'none')
    # Applying the binary operator '==' (line 140)
    result_eq_124117 = python_operator(stypy.reporting.localization.Localization(__file__, 140, 20), '==', b_124115, unicode_124116)
    
    # Applying the binary operator 'or' (line 140)
    result_or_keyword_124118 = python_operator(stypy.reporting.localization.Localization(__file__, 140, 7), 'or', result_is__124114, result_eq_124117)
    
    # Testing the type of an if condition (line 140)
    if_condition_124119 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 140, 4), result_or_keyword_124118)
    # Assigning a type to the variable 'if_condition_124119' (line 140)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 140, 4), 'if_condition_124119', if_condition_124119)
    # SSA begins for if statement (line 140)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Getting the type of 'None' (line 141)
    None_124120 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 141, 15), 'None')
    # Assigning a type to the variable 'stypy_return_type' (line 141)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 141, 8), 'stypy_return_type', None_124120)
    # SSA join for if statement (line 140)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'b' (line 142)
    b_124121 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 142, 7), 'b')
    
    # Obtaining an instance of the builtin type 'tuple' (line 142)
    tuple_124122 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 142, 13), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 142)
    # Adding element type (line 142)
    unicode_124123 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 142, 13), 'unicode', u't')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 142, 13), tuple_124122, unicode_124123)
    # Adding element type (line 142)
    unicode_124124 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 142, 18), 'unicode', u'y')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 142, 13), tuple_124122, unicode_124124)
    # Adding element type (line 142)
    unicode_124125 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 142, 23), 'unicode', u'yes')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 142, 13), tuple_124122, unicode_124125)
    # Adding element type (line 142)
    unicode_124126 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 142, 30), 'unicode', u'on')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 142, 13), tuple_124122, unicode_124126)
    # Adding element type (line 142)
    unicode_124127 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 142, 36), 'unicode', u'true')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 142, 13), tuple_124122, unicode_124127)
    # Adding element type (line 142)
    unicode_124128 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 142, 44), 'unicode', u'1')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 142, 13), tuple_124122, unicode_124128)
    # Adding element type (line 142)
    int_124129 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 142, 49), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 142, 13), tuple_124122, int_124129)
    # Adding element type (line 142)
    # Getting the type of 'True' (line 142)
    True_124130 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 142, 52), 'True')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 142, 13), tuple_124122, True_124130)
    
    # Applying the binary operator 'in' (line 142)
    result_contains_124131 = python_operator(stypy.reporting.localization.Localization(__file__, 142, 7), 'in', b_124121, tuple_124122)
    
    # Testing the type of an if condition (line 142)
    if_condition_124132 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 142, 4), result_contains_124131)
    # Assigning a type to the variable 'if_condition_124132' (line 142)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 142, 4), 'if_condition_124132', if_condition_124132)
    # SSA begins for if statement (line 142)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Getting the type of 'True' (line 143)
    True_124133 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 143, 15), 'True')
    # Assigning a type to the variable 'stypy_return_type' (line 143)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 143, 8), 'stypy_return_type', True_124133)
    # SSA branch for the else part of an if statement (line 142)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'b' (line 144)
    b_124134 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 144, 9), 'b')
    
    # Obtaining an instance of the builtin type 'tuple' (line 144)
    tuple_124135 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 144, 15), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 144)
    # Adding element type (line 144)
    unicode_124136 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 144, 15), 'unicode', u'f')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 144, 15), tuple_124135, unicode_124136)
    # Adding element type (line 144)
    unicode_124137 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 144, 20), 'unicode', u'n')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 144, 15), tuple_124135, unicode_124137)
    # Adding element type (line 144)
    unicode_124138 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 144, 25), 'unicode', u'no')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 144, 15), tuple_124135, unicode_124138)
    # Adding element type (line 144)
    unicode_124139 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 144, 31), 'unicode', u'off')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 144, 15), tuple_124135, unicode_124139)
    # Adding element type (line 144)
    unicode_124140 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 144, 38), 'unicode', u'false')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 144, 15), tuple_124135, unicode_124140)
    # Adding element type (line 144)
    unicode_124141 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 144, 47), 'unicode', u'0')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 144, 15), tuple_124135, unicode_124141)
    # Adding element type (line 144)
    int_124142 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 144, 52), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 144, 15), tuple_124135, int_124142)
    # Adding element type (line 144)
    # Getting the type of 'False' (line 144)
    False_124143 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 144, 55), 'False')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 144, 15), tuple_124135, False_124143)
    
    # Applying the binary operator 'in' (line 144)
    result_contains_124144 = python_operator(stypy.reporting.localization.Localization(__file__, 144, 9), 'in', b_124134, tuple_124135)
    
    # Testing the type of an if condition (line 144)
    if_condition_124145 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 144, 9), result_contains_124144)
    # Assigning a type to the variable 'if_condition_124145' (line 144)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 144, 9), 'if_condition_124145', if_condition_124145)
    # SSA begins for if statement (line 144)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Getting the type of 'False' (line 145)
    False_124146 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 145, 15), 'False')
    # Assigning a type to the variable 'stypy_return_type' (line 145)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 145, 8), 'stypy_return_type', False_124146)
    # SSA branch for the else part of an if statement (line 144)
    module_type_store.open_ssa_branch('else')
    
    # Call to ValueError(...): (line 147)
    # Processing the call arguments (line 147)
    unicode_124148 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 147, 25), 'unicode', u'Could not convert "%s" to boolean')
    # Getting the type of 'b' (line 147)
    b_124149 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 147, 63), 'b', False)
    # Applying the binary operator '%' (line 147)
    result_mod_124150 = python_operator(stypy.reporting.localization.Localization(__file__, 147, 25), '%', unicode_124148, b_124149)
    
    # Processing the call keyword arguments (line 147)
    kwargs_124151 = {}
    # Getting the type of 'ValueError' (line 147)
    ValueError_124147 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 147, 14), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 147)
    ValueError_call_result_124152 = invoke(stypy.reporting.localization.Localization(__file__, 147, 14), ValueError_124147, *[result_mod_124150], **kwargs_124151)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 147, 8), ValueError_call_result_124152, 'raise parameter', BaseException)
    # SSA join for if statement (line 144)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 142)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # ################# End of 'validate_bool_maybe_none(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'validate_bool_maybe_none' in the type store
    # Getting the type of 'stypy_return_type' (line 136)
    stypy_return_type_124153 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 136, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_124153)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'validate_bool_maybe_none'
    return stypy_return_type_124153

# Assigning a type to the variable 'validate_bool_maybe_none' (line 136)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 136, 0), 'validate_bool_maybe_none', validate_bool_maybe_none)

@norecursion
def deprecate_axes_hold(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'deprecate_axes_hold'
    module_type_store = module_type_store.open_function_context('deprecate_axes_hold', 150, 0, False)
    
    # Passed parameters checking function
    deprecate_axes_hold.stypy_localization = localization
    deprecate_axes_hold.stypy_type_of_self = None
    deprecate_axes_hold.stypy_type_store = module_type_store
    deprecate_axes_hold.stypy_function_name = 'deprecate_axes_hold'
    deprecate_axes_hold.stypy_param_names_list = ['value']
    deprecate_axes_hold.stypy_varargs_param_name = None
    deprecate_axes_hold.stypy_kwargs_param_name = None
    deprecate_axes_hold.stypy_call_defaults = defaults
    deprecate_axes_hold.stypy_call_varargs = varargs
    deprecate_axes_hold.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'deprecate_axes_hold', ['value'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'deprecate_axes_hold', localization, ['value'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'deprecate_axes_hold(...)' code ##################

    
    # Type idiom detected: calculating its left and rigth part (line 151)
    # Getting the type of 'value' (line 151)
    value_124154 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 151, 7), 'value')
    # Getting the type of 'None' (line 151)
    None_124155 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 151, 16), 'None')
    
    (may_be_124156, more_types_in_union_124157) = may_be_none(value_124154, None_124155)

    if may_be_124156:

        if more_types_in_union_124157:
            # Runtime conditional SSA (line 151)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        # Getting the type of 'None' (line 152)
        None_124158 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 152, 15), 'None')
        # Assigning a type to the variable 'stypy_return_type' (line 152)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 152, 8), 'stypy_return_type', None_124158)

        if more_types_in_union_124157:
            # SSA join for if statement (line 151)
            module_type_store = module_type_store.join_ssa_context()


    
    
    # Call to warn(...): (line 154)
    # Processing the call arguments (line 154)
    unicode_124161 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 154, 18), 'unicode', u'axes.hold is deprecated, will be removed in 3.0')
    # Getting the type of 'mplDeprecation' (line 155)
    mplDeprecation_124162 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 155, 18), 'mplDeprecation', False)
    # Processing the call keyword arguments (line 154)
    kwargs_124163 = {}
    # Getting the type of 'warnings' (line 154)
    warnings_124159 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 154, 4), 'warnings', False)
    # Obtaining the member 'warn' of a type (line 154)
    warn_124160 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 154, 4), warnings_124159, 'warn')
    # Calling warn(args, kwargs) (line 154)
    warn_call_result_124164 = invoke(stypy.reporting.localization.Localization(__file__, 154, 4), warn_124160, *[unicode_124161, mplDeprecation_124162], **kwargs_124163)
    
    
    # Call to validate_bool(...): (line 156)
    # Processing the call arguments (line 156)
    # Getting the type of 'value' (line 156)
    value_124166 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 156, 25), 'value', False)
    # Processing the call keyword arguments (line 156)
    kwargs_124167 = {}
    # Getting the type of 'validate_bool' (line 156)
    validate_bool_124165 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 156, 11), 'validate_bool', False)
    # Calling validate_bool(args, kwargs) (line 156)
    validate_bool_call_result_124168 = invoke(stypy.reporting.localization.Localization(__file__, 156, 11), validate_bool_124165, *[value_124166], **kwargs_124167)
    
    # Assigning a type to the variable 'stypy_return_type' (line 156)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 156, 4), 'stypy_return_type', validate_bool_call_result_124168)
    
    # ################# End of 'deprecate_axes_hold(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'deprecate_axes_hold' in the type store
    # Getting the type of 'stypy_return_type' (line 150)
    stypy_return_type_124169 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 150, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_124169)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'deprecate_axes_hold'
    return stypy_return_type_124169

# Assigning a type to the variable 'deprecate_axes_hold' (line 150)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 150, 0), 'deprecate_axes_hold', deprecate_axes_hold)

@norecursion
def validate_float(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'validate_float'
    module_type_store = module_type_store.open_function_context('validate_float', 159, 0, False)
    
    # Passed parameters checking function
    validate_float.stypy_localization = localization
    validate_float.stypy_type_of_self = None
    validate_float.stypy_type_store = module_type_store
    validate_float.stypy_function_name = 'validate_float'
    validate_float.stypy_param_names_list = ['s']
    validate_float.stypy_varargs_param_name = None
    validate_float.stypy_kwargs_param_name = None
    validate_float.stypy_call_defaults = defaults
    validate_float.stypy_call_varargs = varargs
    validate_float.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'validate_float', ['s'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'validate_float', localization, ['s'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'validate_float(...)' code ##################

    unicode_124170 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 160, 4), 'unicode', u'convert s to float or raise')
    
    
    # SSA begins for try-except statement (line 161)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
    
    # Call to float(...): (line 162)
    # Processing the call arguments (line 162)
    # Getting the type of 's' (line 162)
    s_124172 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 162, 21), 's', False)
    # Processing the call keyword arguments (line 162)
    kwargs_124173 = {}
    # Getting the type of 'float' (line 162)
    float_124171 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 162, 15), 'float', False)
    # Calling float(args, kwargs) (line 162)
    float_call_result_124174 = invoke(stypy.reporting.localization.Localization(__file__, 162, 15), float_124171, *[s_124172], **kwargs_124173)
    
    # Assigning a type to the variable 'stypy_return_type' (line 162)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 162, 8), 'stypy_return_type', float_call_result_124174)
    # SSA branch for the except part of a try statement (line 161)
    # SSA branch for the except 'ValueError' branch of a try statement (line 161)
    module_type_store.open_ssa_branch('except')
    
    # Call to ValueError(...): (line 164)
    # Processing the call arguments (line 164)
    unicode_124176 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 164, 25), 'unicode', u'Could not convert "%s" to float')
    # Getting the type of 's' (line 164)
    s_124177 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 164, 61), 's', False)
    # Applying the binary operator '%' (line 164)
    result_mod_124178 = python_operator(stypy.reporting.localization.Localization(__file__, 164, 25), '%', unicode_124176, s_124177)
    
    # Processing the call keyword arguments (line 164)
    kwargs_124179 = {}
    # Getting the type of 'ValueError' (line 164)
    ValueError_124175 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 164, 14), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 164)
    ValueError_call_result_124180 = invoke(stypy.reporting.localization.Localization(__file__, 164, 14), ValueError_124175, *[result_mod_124178], **kwargs_124179)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 164, 8), ValueError_call_result_124180, 'raise parameter', BaseException)
    # SSA join for try-except statement (line 161)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # ################# End of 'validate_float(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'validate_float' in the type store
    # Getting the type of 'stypy_return_type' (line 159)
    stypy_return_type_124181 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 159, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_124181)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'validate_float'
    return stypy_return_type_124181

# Assigning a type to the variable 'validate_float' (line 159)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 159, 0), 'validate_float', validate_float)

# Assigning a Call to a Name (line 165):

# Call to _listify_validator(...): (line 165)
# Processing the call arguments (line 165)
# Getting the type of 'validate_float' (line 165)
validate_float_124183 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 165, 40), 'validate_float', False)
# Processing the call keyword arguments (line 165)
kwargs_124184 = {}
# Getting the type of '_listify_validator' (line 165)
_listify_validator_124182 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 165, 21), '_listify_validator', False)
# Calling _listify_validator(args, kwargs) (line 165)
_listify_validator_call_result_124185 = invoke(stypy.reporting.localization.Localization(__file__, 165, 21), _listify_validator_124182, *[validate_float_124183], **kwargs_124184)

# Assigning a type to the variable 'validate_floatlist' (line 165)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 165, 0), 'validate_floatlist', _listify_validator_call_result_124185)

@norecursion
def validate_float_or_None(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'validate_float_or_None'
    module_type_store = module_type_store.open_function_context('validate_float_or_None', 168, 0, False)
    
    # Passed parameters checking function
    validate_float_or_None.stypy_localization = localization
    validate_float_or_None.stypy_type_of_self = None
    validate_float_or_None.stypy_type_store = module_type_store
    validate_float_or_None.stypy_function_name = 'validate_float_or_None'
    validate_float_or_None.stypy_param_names_list = ['s']
    validate_float_or_None.stypy_varargs_param_name = None
    validate_float_or_None.stypy_kwargs_param_name = None
    validate_float_or_None.stypy_call_defaults = defaults
    validate_float_or_None.stypy_call_varargs = varargs
    validate_float_or_None.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'validate_float_or_None', ['s'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'validate_float_or_None', localization, ['s'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'validate_float_or_None(...)' code ##################

    unicode_124186 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 169, 4), 'unicode', u'convert s to float, None or raise')
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 's' (line 175)
    s_124187 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 175, 7), 's')
    # Getting the type of 'None' (line 175)
    None_124188 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 175, 12), 'None')
    # Applying the binary operator 'is' (line 175)
    result_is__124189 = python_operator(stypy.reporting.localization.Localization(__file__, 175, 7), 'is', s_124187, None_124188)
    
    
    # Getting the type of 's' (line 175)
    s_124190 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 175, 20), 's')
    unicode_124191 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 175, 25), 'unicode', u'None')
    # Applying the binary operator '==' (line 175)
    result_eq_124192 = python_operator(stypy.reporting.localization.Localization(__file__, 175, 20), '==', s_124190, unicode_124191)
    
    # Applying the binary operator 'or' (line 175)
    result_or_keyword_124193 = python_operator(stypy.reporting.localization.Localization(__file__, 175, 7), 'or', result_is__124189, result_eq_124192)
    
    # Testing the type of an if condition (line 175)
    if_condition_124194 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 175, 4), result_or_keyword_124193)
    # Assigning a type to the variable 'if_condition_124194' (line 175)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 175, 4), 'if_condition_124194', if_condition_124194)
    # SSA begins for if statement (line 175)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Getting the type of 'None' (line 176)
    None_124195 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 176, 15), 'None')
    # Assigning a type to the variable 'stypy_return_type' (line 176)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 176, 8), 'stypy_return_type', None_124195)
    # SSA join for if statement (line 175)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # SSA begins for try-except statement (line 177)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
    
    # Call to float(...): (line 178)
    # Processing the call arguments (line 178)
    # Getting the type of 's' (line 178)
    s_124197 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 178, 21), 's', False)
    # Processing the call keyword arguments (line 178)
    kwargs_124198 = {}
    # Getting the type of 'float' (line 178)
    float_124196 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 178, 15), 'float', False)
    # Calling float(args, kwargs) (line 178)
    float_call_result_124199 = invoke(stypy.reporting.localization.Localization(__file__, 178, 15), float_124196, *[s_124197], **kwargs_124198)
    
    # Assigning a type to the variable 'stypy_return_type' (line 178)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 178, 8), 'stypy_return_type', float_call_result_124199)
    # SSA branch for the except part of a try statement (line 177)
    # SSA branch for the except 'ValueError' branch of a try statement (line 177)
    module_type_store.open_ssa_branch('except')
    
    # Call to ValueError(...): (line 180)
    # Processing the call arguments (line 180)
    unicode_124201 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 180, 25), 'unicode', u'Could not convert "%s" to float or None')
    # Getting the type of 's' (line 180)
    s_124202 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 180, 69), 's', False)
    # Applying the binary operator '%' (line 180)
    result_mod_124203 = python_operator(stypy.reporting.localization.Localization(__file__, 180, 25), '%', unicode_124201, s_124202)
    
    # Processing the call keyword arguments (line 180)
    kwargs_124204 = {}
    # Getting the type of 'ValueError' (line 180)
    ValueError_124200 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 180, 14), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 180)
    ValueError_call_result_124205 = invoke(stypy.reporting.localization.Localization(__file__, 180, 14), ValueError_124200, *[result_mod_124203], **kwargs_124204)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 180, 8), ValueError_call_result_124205, 'raise parameter', BaseException)
    # SSA join for try-except statement (line 177)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # ################# End of 'validate_float_or_None(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'validate_float_or_None' in the type store
    # Getting the type of 'stypy_return_type' (line 168)
    stypy_return_type_124206 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 168, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_124206)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'validate_float_or_None'
    return stypy_return_type_124206

# Assigning a type to the variable 'validate_float_or_None' (line 168)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 168, 0), 'validate_float_or_None', validate_float_or_None)

@norecursion
def validate_string_or_None(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'validate_string_or_None'
    module_type_store = module_type_store.open_function_context('validate_string_or_None', 183, 0, False)
    
    # Passed parameters checking function
    validate_string_or_None.stypy_localization = localization
    validate_string_or_None.stypy_type_of_self = None
    validate_string_or_None.stypy_type_store = module_type_store
    validate_string_or_None.stypy_function_name = 'validate_string_or_None'
    validate_string_or_None.stypy_param_names_list = ['s']
    validate_string_or_None.stypy_varargs_param_name = None
    validate_string_or_None.stypy_kwargs_param_name = None
    validate_string_or_None.stypy_call_defaults = defaults
    validate_string_or_None.stypy_call_varargs = varargs
    validate_string_or_None.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'validate_string_or_None', ['s'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'validate_string_or_None', localization, ['s'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'validate_string_or_None(...)' code ##################

    unicode_124207 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 184, 4), 'unicode', u'convert s to string or raise')
    
    # Type idiom detected: calculating its left and rigth part (line 185)
    # Getting the type of 's' (line 185)
    s_124208 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 185, 7), 's')
    # Getting the type of 'None' (line 185)
    None_124209 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 185, 12), 'None')
    
    (may_be_124210, more_types_in_union_124211) = may_be_none(s_124208, None_124209)

    if may_be_124210:

        if more_types_in_union_124211:
            # Runtime conditional SSA (line 185)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        # Getting the type of 'None' (line 186)
        None_124212 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 186, 15), 'None')
        # Assigning a type to the variable 'stypy_return_type' (line 186)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 186, 8), 'stypy_return_type', None_124212)

        if more_types_in_union_124211:
            # SSA join for if statement (line 185)
            module_type_store = module_type_store.join_ssa_context()


    
    
    
    # SSA begins for try-except statement (line 187)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
    
    # Call to text_type(...): (line 188)
    # Processing the call arguments (line 188)
    # Getting the type of 's' (line 188)
    s_124215 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 188, 29), 's', False)
    # Processing the call keyword arguments (line 188)
    kwargs_124216 = {}
    # Getting the type of 'six' (line 188)
    six_124213 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 188, 15), 'six', False)
    # Obtaining the member 'text_type' of a type (line 188)
    text_type_124214 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 188, 15), six_124213, 'text_type')
    # Calling text_type(args, kwargs) (line 188)
    text_type_call_result_124217 = invoke(stypy.reporting.localization.Localization(__file__, 188, 15), text_type_124214, *[s_124215], **kwargs_124216)
    
    # Assigning a type to the variable 'stypy_return_type' (line 188)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 188, 8), 'stypy_return_type', text_type_call_result_124217)
    # SSA branch for the except part of a try statement (line 187)
    # SSA branch for the except 'ValueError' branch of a try statement (line 187)
    module_type_store.open_ssa_branch('except')
    
    # Call to ValueError(...): (line 190)
    # Processing the call arguments (line 190)
    unicode_124219 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 190, 25), 'unicode', u'Could not convert "%s" to string')
    # Getting the type of 's' (line 190)
    s_124220 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 190, 62), 's', False)
    # Applying the binary operator '%' (line 190)
    result_mod_124221 = python_operator(stypy.reporting.localization.Localization(__file__, 190, 25), '%', unicode_124219, s_124220)
    
    # Processing the call keyword arguments (line 190)
    kwargs_124222 = {}
    # Getting the type of 'ValueError' (line 190)
    ValueError_124218 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 190, 14), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 190)
    ValueError_call_result_124223 = invoke(stypy.reporting.localization.Localization(__file__, 190, 14), ValueError_124218, *[result_mod_124221], **kwargs_124222)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 190, 8), ValueError_call_result_124223, 'raise parameter', BaseException)
    # SSA join for try-except statement (line 187)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # ################# End of 'validate_string_or_None(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'validate_string_or_None' in the type store
    # Getting the type of 'stypy_return_type' (line 183)
    stypy_return_type_124224 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 183, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_124224)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'validate_string_or_None'
    return stypy_return_type_124224

# Assigning a type to the variable 'validate_string_or_None' (line 183)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 183, 0), 'validate_string_or_None', validate_string_or_None)

@norecursion
def validate_axisbelow(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'validate_axisbelow'
    module_type_store = module_type_store.open_function_context('validate_axisbelow', 193, 0, False)
    
    # Passed parameters checking function
    validate_axisbelow.stypy_localization = localization
    validate_axisbelow.stypy_type_of_self = None
    validate_axisbelow.stypy_type_store = module_type_store
    validate_axisbelow.stypy_function_name = 'validate_axisbelow'
    validate_axisbelow.stypy_param_names_list = ['s']
    validate_axisbelow.stypy_varargs_param_name = None
    validate_axisbelow.stypy_kwargs_param_name = None
    validate_axisbelow.stypy_call_defaults = defaults
    validate_axisbelow.stypy_call_varargs = varargs
    validate_axisbelow.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'validate_axisbelow', ['s'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'validate_axisbelow', localization, ['s'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'validate_axisbelow(...)' code ##################

    
    
    # SSA begins for try-except statement (line 194)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
    
    # Call to validate_bool(...): (line 195)
    # Processing the call arguments (line 195)
    # Getting the type of 's' (line 195)
    s_124226 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 195, 29), 's', False)
    # Processing the call keyword arguments (line 195)
    kwargs_124227 = {}
    # Getting the type of 'validate_bool' (line 195)
    validate_bool_124225 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 195, 15), 'validate_bool', False)
    # Calling validate_bool(args, kwargs) (line 195)
    validate_bool_call_result_124228 = invoke(stypy.reporting.localization.Localization(__file__, 195, 15), validate_bool_124225, *[s_124226], **kwargs_124227)
    
    # Assigning a type to the variable 'stypy_return_type' (line 195)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 195, 8), 'stypy_return_type', validate_bool_call_result_124228)
    # SSA branch for the except part of a try statement (line 194)
    # SSA branch for the except 'ValueError' branch of a try statement (line 194)
    module_type_store.open_ssa_branch('except')
    
    
    # Call to isinstance(...): (line 197)
    # Processing the call arguments (line 197)
    # Getting the type of 's' (line 197)
    s_124230 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 197, 22), 's', False)
    # Getting the type of 'six' (line 197)
    six_124231 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 197, 25), 'six', False)
    # Obtaining the member 'string_types' of a type (line 197)
    string_types_124232 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 197, 25), six_124231, 'string_types')
    # Processing the call keyword arguments (line 197)
    kwargs_124233 = {}
    # Getting the type of 'isinstance' (line 197)
    isinstance_124229 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 197, 11), 'isinstance', False)
    # Calling isinstance(args, kwargs) (line 197)
    isinstance_call_result_124234 = invoke(stypy.reporting.localization.Localization(__file__, 197, 11), isinstance_124229, *[s_124230, string_types_124232], **kwargs_124233)
    
    # Testing the type of an if condition (line 197)
    if_condition_124235 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 197, 8), isinstance_call_result_124234)
    # Assigning a type to the variable 'if_condition_124235' (line 197)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 197, 8), 'if_condition_124235', if_condition_124235)
    # SSA begins for if statement (line 197)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 198):
    
    # Call to lower(...): (line 198)
    # Processing the call keyword arguments (line 198)
    kwargs_124238 = {}
    # Getting the type of 's' (line 198)
    s_124236 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 198, 16), 's', False)
    # Obtaining the member 'lower' of a type (line 198)
    lower_124237 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 198, 16), s_124236, 'lower')
    # Calling lower(args, kwargs) (line 198)
    lower_call_result_124239 = invoke(stypy.reporting.localization.Localization(__file__, 198, 16), lower_124237, *[], **kwargs_124238)
    
    # Assigning a type to the variable 's' (line 198)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 198, 12), 's', lower_call_result_124239)
    
    
    # Call to startswith(...): (line 199)
    # Processing the call arguments (line 199)
    unicode_124242 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 199, 28), 'unicode', u'line')
    # Processing the call keyword arguments (line 199)
    kwargs_124243 = {}
    # Getting the type of 's' (line 199)
    s_124240 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 199, 15), 's', False)
    # Obtaining the member 'startswith' of a type (line 199)
    startswith_124241 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 199, 15), s_124240, 'startswith')
    # Calling startswith(args, kwargs) (line 199)
    startswith_call_result_124244 = invoke(stypy.reporting.localization.Localization(__file__, 199, 15), startswith_124241, *[unicode_124242], **kwargs_124243)
    
    # Testing the type of an if condition (line 199)
    if_condition_124245 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 199, 12), startswith_call_result_124244)
    # Assigning a type to the variable 'if_condition_124245' (line 199)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 199, 12), 'if_condition_124245', if_condition_124245)
    # SSA begins for if statement (line 199)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    unicode_124246 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 200, 23), 'unicode', u'line')
    # Assigning a type to the variable 'stypy_return_type' (line 200)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 200, 16), 'stypy_return_type', unicode_124246)
    # SSA join for if statement (line 199)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 197)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for try-except statement (line 194)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Call to ValueError(...): (line 201)
    # Processing the call arguments (line 201)
    unicode_124248 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 201, 21), 'unicode', u'%s cannot be interpreted as True, False, or "line"')
    # Getting the type of 's' (line 202)
    s_124249 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 202, 49), 's', False)
    # Applying the binary operator '%' (line 201)
    result_mod_124250 = python_operator(stypy.reporting.localization.Localization(__file__, 201, 21), '%', unicode_124248, s_124249)
    
    # Processing the call keyword arguments (line 201)
    kwargs_124251 = {}
    # Getting the type of 'ValueError' (line 201)
    ValueError_124247 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 201, 10), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 201)
    ValueError_call_result_124252 = invoke(stypy.reporting.localization.Localization(__file__, 201, 10), ValueError_124247, *[result_mod_124250], **kwargs_124251)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 201, 4), ValueError_call_result_124252, 'raise parameter', BaseException)
    
    # ################# End of 'validate_axisbelow(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'validate_axisbelow' in the type store
    # Getting the type of 'stypy_return_type' (line 193)
    stypy_return_type_124253 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 193, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_124253)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'validate_axisbelow'
    return stypy_return_type_124253

# Assigning a type to the variable 'validate_axisbelow' (line 193)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 193, 0), 'validate_axisbelow', validate_axisbelow)

@norecursion
def validate_dpi(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'validate_dpi'
    module_type_store = module_type_store.open_function_context('validate_dpi', 205, 0, False)
    
    # Passed parameters checking function
    validate_dpi.stypy_localization = localization
    validate_dpi.stypy_type_of_self = None
    validate_dpi.stypy_type_store = module_type_store
    validate_dpi.stypy_function_name = 'validate_dpi'
    validate_dpi.stypy_param_names_list = ['s']
    validate_dpi.stypy_varargs_param_name = None
    validate_dpi.stypy_kwargs_param_name = None
    validate_dpi.stypy_call_defaults = defaults
    validate_dpi.stypy_call_varargs = varargs
    validate_dpi.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'validate_dpi', ['s'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'validate_dpi', localization, ['s'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'validate_dpi(...)' code ##################

    unicode_124254 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 206, 4), 'unicode', u"confirm s is string 'figure' or convert s to float or raise")
    
    
    # Getting the type of 's' (line 207)
    s_124255 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 207, 7), 's')
    unicode_124256 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 207, 12), 'unicode', u'figure')
    # Applying the binary operator '==' (line 207)
    result_eq_124257 = python_operator(stypy.reporting.localization.Localization(__file__, 207, 7), '==', s_124255, unicode_124256)
    
    # Testing the type of an if condition (line 207)
    if_condition_124258 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 207, 4), result_eq_124257)
    # Assigning a type to the variable 'if_condition_124258' (line 207)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 207, 4), 'if_condition_124258', if_condition_124258)
    # SSA begins for if statement (line 207)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Getting the type of 's' (line 208)
    s_124259 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 208, 15), 's')
    # Assigning a type to the variable 'stypy_return_type' (line 208)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 208, 8), 'stypy_return_type', s_124259)
    # SSA join for if statement (line 207)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # SSA begins for try-except statement (line 209)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
    
    # Call to float(...): (line 210)
    # Processing the call arguments (line 210)
    # Getting the type of 's' (line 210)
    s_124261 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 210, 21), 's', False)
    # Processing the call keyword arguments (line 210)
    kwargs_124262 = {}
    # Getting the type of 'float' (line 210)
    float_124260 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 210, 15), 'float', False)
    # Calling float(args, kwargs) (line 210)
    float_call_result_124263 = invoke(stypy.reporting.localization.Localization(__file__, 210, 15), float_124260, *[s_124261], **kwargs_124262)
    
    # Assigning a type to the variable 'stypy_return_type' (line 210)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 210, 8), 'stypy_return_type', float_call_result_124263)
    # SSA branch for the except part of a try statement (line 209)
    # SSA branch for the except 'ValueError' branch of a try statement (line 209)
    module_type_store.open_ssa_branch('except')
    
    # Call to ValueError(...): (line 212)
    # Processing the call arguments (line 212)
    unicode_124265 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 212, 25), 'unicode', u'"%s" is not string "figure" or could not convert "%s" to float')
    
    # Obtaining an instance of the builtin type 'tuple' (line 213)
    tuple_124266 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 213, 50), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 213)
    # Adding element type (line 213)
    # Getting the type of 's' (line 213)
    s_124267 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 213, 50), 's', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 213, 50), tuple_124266, s_124267)
    # Adding element type (line 213)
    # Getting the type of 's' (line 213)
    s_124268 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 213, 53), 's', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 213, 50), tuple_124266, s_124268)
    
    # Applying the binary operator '%' (line 212)
    result_mod_124269 = python_operator(stypy.reporting.localization.Localization(__file__, 212, 25), '%', unicode_124265, tuple_124266)
    
    # Processing the call keyword arguments (line 212)
    kwargs_124270 = {}
    # Getting the type of 'ValueError' (line 212)
    ValueError_124264 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 212, 14), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 212)
    ValueError_call_result_124271 = invoke(stypy.reporting.localization.Localization(__file__, 212, 14), ValueError_124264, *[result_mod_124269], **kwargs_124270)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 212, 8), ValueError_call_result_124271, 'raise parameter', BaseException)
    # SSA join for try-except statement (line 209)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # ################# End of 'validate_dpi(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'validate_dpi' in the type store
    # Getting the type of 'stypy_return_type' (line 205)
    stypy_return_type_124272 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 205, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_124272)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'validate_dpi'
    return stypy_return_type_124272

# Assigning a type to the variable 'validate_dpi' (line 205)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 205, 0), 'validate_dpi', validate_dpi)

@norecursion
def validate_int(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'validate_int'
    module_type_store = module_type_store.open_function_context('validate_int', 216, 0, False)
    
    # Passed parameters checking function
    validate_int.stypy_localization = localization
    validate_int.stypy_type_of_self = None
    validate_int.stypy_type_store = module_type_store
    validate_int.stypy_function_name = 'validate_int'
    validate_int.stypy_param_names_list = ['s']
    validate_int.stypy_varargs_param_name = None
    validate_int.stypy_kwargs_param_name = None
    validate_int.stypy_call_defaults = defaults
    validate_int.stypy_call_varargs = varargs
    validate_int.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'validate_int', ['s'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'validate_int', localization, ['s'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'validate_int(...)' code ##################

    unicode_124273 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 217, 4), 'unicode', u'convert s to int or raise')
    
    
    # SSA begins for try-except statement (line 218)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
    
    # Call to int(...): (line 219)
    # Processing the call arguments (line 219)
    # Getting the type of 's' (line 219)
    s_124275 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 219, 19), 's', False)
    # Processing the call keyword arguments (line 219)
    kwargs_124276 = {}
    # Getting the type of 'int' (line 219)
    int_124274 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 219, 15), 'int', False)
    # Calling int(args, kwargs) (line 219)
    int_call_result_124277 = invoke(stypy.reporting.localization.Localization(__file__, 219, 15), int_124274, *[s_124275], **kwargs_124276)
    
    # Assigning a type to the variable 'stypy_return_type' (line 219)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 219, 8), 'stypy_return_type', int_call_result_124277)
    # SSA branch for the except part of a try statement (line 218)
    # SSA branch for the except 'ValueError' branch of a try statement (line 218)
    module_type_store.open_ssa_branch('except')
    
    # Call to ValueError(...): (line 221)
    # Processing the call arguments (line 221)
    unicode_124279 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 221, 25), 'unicode', u'Could not convert "%s" to int')
    # Getting the type of 's' (line 221)
    s_124280 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 221, 59), 's', False)
    # Applying the binary operator '%' (line 221)
    result_mod_124281 = python_operator(stypy.reporting.localization.Localization(__file__, 221, 25), '%', unicode_124279, s_124280)
    
    # Processing the call keyword arguments (line 221)
    kwargs_124282 = {}
    # Getting the type of 'ValueError' (line 221)
    ValueError_124278 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 221, 14), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 221)
    ValueError_call_result_124283 = invoke(stypy.reporting.localization.Localization(__file__, 221, 14), ValueError_124278, *[result_mod_124281], **kwargs_124282)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 221, 8), ValueError_call_result_124283, 'raise parameter', BaseException)
    # SSA join for try-except statement (line 218)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # ################# End of 'validate_int(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'validate_int' in the type store
    # Getting the type of 'stypy_return_type' (line 216)
    stypy_return_type_124284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 216, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_124284)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'validate_int'
    return stypy_return_type_124284

# Assigning a type to the variable 'validate_int' (line 216)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 216, 0), 'validate_int', validate_int)

@norecursion
def validate_int_or_None(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'validate_int_or_None'
    module_type_store = module_type_store.open_function_context('validate_int_or_None', 224, 0, False)
    
    # Passed parameters checking function
    validate_int_or_None.stypy_localization = localization
    validate_int_or_None.stypy_type_of_self = None
    validate_int_or_None.stypy_type_store = module_type_store
    validate_int_or_None.stypy_function_name = 'validate_int_or_None'
    validate_int_or_None.stypy_param_names_list = ['s']
    validate_int_or_None.stypy_varargs_param_name = None
    validate_int_or_None.stypy_kwargs_param_name = None
    validate_int_or_None.stypy_call_defaults = defaults
    validate_int_or_None.stypy_call_varargs = varargs
    validate_int_or_None.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'validate_int_or_None', ['s'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'validate_int_or_None', localization, ['s'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'validate_int_or_None(...)' code ##################

    unicode_124285 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 225, 4), 'unicode', u'if not None, tries to validate as an int')
    
    
    # Getting the type of 's' (line 226)
    s_124286 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 226, 7), 's')
    unicode_124287 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 226, 10), 'unicode', u'None')
    # Applying the binary operator '==' (line 226)
    result_eq_124288 = python_operator(stypy.reporting.localization.Localization(__file__, 226, 7), '==', s_124286, unicode_124287)
    
    # Testing the type of an if condition (line 226)
    if_condition_124289 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 226, 4), result_eq_124288)
    # Assigning a type to the variable 'if_condition_124289' (line 226)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 226, 4), 'if_condition_124289', if_condition_124289)
    # SSA begins for if statement (line 226)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Name to a Name (line 227):
    # Getting the type of 'None' (line 227)
    None_124290 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 227, 12), 'None')
    # Assigning a type to the variable 's' (line 227)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 227, 8), 's', None_124290)
    # SSA join for if statement (line 226)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Type idiom detected: calculating its left and rigth part (line 228)
    # Getting the type of 's' (line 228)
    s_124291 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 228, 7), 's')
    # Getting the type of 'None' (line 228)
    None_124292 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 228, 12), 'None')
    
    (may_be_124293, more_types_in_union_124294) = may_be_none(s_124291, None_124292)

    if may_be_124293:

        if more_types_in_union_124294:
            # Runtime conditional SSA (line 228)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        # Getting the type of 'None' (line 229)
        None_124295 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 229, 15), 'None')
        # Assigning a type to the variable 'stypy_return_type' (line 229)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 229, 8), 'stypy_return_type', None_124295)

        if more_types_in_union_124294:
            # SSA join for if statement (line 228)
            module_type_store = module_type_store.join_ssa_context()


    
    
    
    # SSA begins for try-except statement (line 230)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
    
    # Call to int(...): (line 231)
    # Processing the call arguments (line 231)
    # Getting the type of 's' (line 231)
    s_124297 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 231, 19), 's', False)
    # Processing the call keyword arguments (line 231)
    kwargs_124298 = {}
    # Getting the type of 'int' (line 231)
    int_124296 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 231, 15), 'int', False)
    # Calling int(args, kwargs) (line 231)
    int_call_result_124299 = invoke(stypy.reporting.localization.Localization(__file__, 231, 15), int_124296, *[s_124297], **kwargs_124298)
    
    # Assigning a type to the variable 'stypy_return_type' (line 231)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 231, 8), 'stypy_return_type', int_call_result_124299)
    # SSA branch for the except part of a try statement (line 230)
    # SSA branch for the except 'ValueError' branch of a try statement (line 230)
    module_type_store.open_ssa_branch('except')
    
    # Call to ValueError(...): (line 233)
    # Processing the call arguments (line 233)
    unicode_124301 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 233, 25), 'unicode', u'Could not convert "%s" to int')
    # Getting the type of 's' (line 233)
    s_124302 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 233, 59), 's', False)
    # Applying the binary operator '%' (line 233)
    result_mod_124303 = python_operator(stypy.reporting.localization.Localization(__file__, 233, 25), '%', unicode_124301, s_124302)
    
    # Processing the call keyword arguments (line 233)
    kwargs_124304 = {}
    # Getting the type of 'ValueError' (line 233)
    ValueError_124300 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 233, 14), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 233)
    ValueError_call_result_124305 = invoke(stypy.reporting.localization.Localization(__file__, 233, 14), ValueError_124300, *[result_mod_124303], **kwargs_124304)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 233, 8), ValueError_call_result_124305, 'raise parameter', BaseException)
    # SSA join for try-except statement (line 230)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # ################# End of 'validate_int_or_None(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'validate_int_or_None' in the type store
    # Getting the type of 'stypy_return_type' (line 224)
    stypy_return_type_124306 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 224, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_124306)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'validate_int_or_None'
    return stypy_return_type_124306

# Assigning a type to the variable 'validate_int_or_None' (line 224)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 224, 0), 'validate_int_or_None', validate_int_or_None)

@norecursion
def validate_fonttype(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'validate_fonttype'
    module_type_store = module_type_store.open_function_context('validate_fonttype', 236, 0, False)
    
    # Passed parameters checking function
    validate_fonttype.stypy_localization = localization
    validate_fonttype.stypy_type_of_self = None
    validate_fonttype.stypy_type_store = module_type_store
    validate_fonttype.stypy_function_name = 'validate_fonttype'
    validate_fonttype.stypy_param_names_list = ['s']
    validate_fonttype.stypy_varargs_param_name = None
    validate_fonttype.stypy_kwargs_param_name = None
    validate_fonttype.stypy_call_defaults = defaults
    validate_fonttype.stypy_call_varargs = varargs
    validate_fonttype.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'validate_fonttype', ['s'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'validate_fonttype', localization, ['s'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'validate_fonttype(...)' code ##################

    unicode_124307 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 240, (-1)), 'unicode', u'\n    confirm that this is a Postscript of PDF font type that we know how to\n    convert to\n    ')
    
    # Assigning a Dict to a Name (line 241):
    
    # Obtaining an instance of the builtin type 'dict' (line 241)
    dict_124308 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 241, 16), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 241)
    # Adding element type (key, value) (line 241)
    unicode_124309 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 241, 17), 'unicode', u'type3')
    int_124310 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 241, 29), 'int')
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 241, 16), dict_124308, (unicode_124309, int_124310))
    # Adding element type (key, value) (line 241)
    unicode_124311 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 242, 17), 'unicode', u'truetype')
    int_124312 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 242, 29), 'int')
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 241, 16), dict_124308, (unicode_124311, int_124312))
    
    # Assigning a type to the variable 'fonttypes' (line 241)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 241, 4), 'fonttypes', dict_124308)
    
    
    # SSA begins for try-except statement (line 243)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
    
    # Assigning a Call to a Name (line 244):
    
    # Call to validate_int(...): (line 244)
    # Processing the call arguments (line 244)
    # Getting the type of 's' (line 244)
    s_124314 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 244, 32), 's', False)
    # Processing the call keyword arguments (line 244)
    kwargs_124315 = {}
    # Getting the type of 'validate_int' (line 244)
    validate_int_124313 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 244, 19), 'validate_int', False)
    # Calling validate_int(args, kwargs) (line 244)
    validate_int_call_result_124316 = invoke(stypy.reporting.localization.Localization(__file__, 244, 19), validate_int_124313, *[s_124314], **kwargs_124315)
    
    # Assigning a type to the variable 'fonttype' (line 244)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 244, 8), 'fonttype', validate_int_call_result_124316)
    # SSA branch for the except part of a try statement (line 243)
    # SSA branch for the except 'ValueError' branch of a try statement (line 243)
    module_type_store.open_ssa_branch('except')
    
    
    # SSA begins for try-except statement (line 246)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
    
    # Obtaining the type of the subscript
    
    # Call to lower(...): (line 247)
    # Processing the call keyword arguments (line 247)
    kwargs_124319 = {}
    # Getting the type of 's' (line 247)
    s_124317 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 247, 29), 's', False)
    # Obtaining the member 'lower' of a type (line 247)
    lower_124318 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 247, 29), s_124317, 'lower')
    # Calling lower(args, kwargs) (line 247)
    lower_call_result_124320 = invoke(stypy.reporting.localization.Localization(__file__, 247, 29), lower_124318, *[], **kwargs_124319)
    
    # Getting the type of 'fonttypes' (line 247)
    fonttypes_124321 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 247, 19), 'fonttypes')
    # Obtaining the member '__getitem__' of a type (line 247)
    getitem___124322 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 247, 19), fonttypes_124321, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 247)
    subscript_call_result_124323 = invoke(stypy.reporting.localization.Localization(__file__, 247, 19), getitem___124322, lower_call_result_124320)
    
    # Assigning a type to the variable 'stypy_return_type' (line 247)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 247, 12), 'stypy_return_type', subscript_call_result_124323)
    # SSA branch for the except part of a try statement (line 246)
    # SSA branch for the except 'KeyError' branch of a try statement (line 246)
    module_type_store.open_ssa_branch('except')
    
    # Call to ValueError(...): (line 249)
    # Processing the call arguments (line 249)
    unicode_124325 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 250, 16), 'unicode', u'Supported Postscript/PDF font types are %s')
    
    # Call to list(...): (line 250)
    # Processing the call arguments (line 250)
    # Getting the type of 'fonttypes' (line 250)
    fonttypes_124327 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 250, 68), 'fonttypes', False)
    # Processing the call keyword arguments (line 250)
    kwargs_124328 = {}
    # Getting the type of 'list' (line 250)
    list_124326 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 250, 63), 'list', False)
    # Calling list(args, kwargs) (line 250)
    list_call_result_124329 = invoke(stypy.reporting.localization.Localization(__file__, 250, 63), list_124326, *[fonttypes_124327], **kwargs_124328)
    
    # Applying the binary operator '%' (line 250)
    result_mod_124330 = python_operator(stypy.reporting.localization.Localization(__file__, 250, 16), '%', unicode_124325, list_call_result_124329)
    
    # Processing the call keyword arguments (line 249)
    kwargs_124331 = {}
    # Getting the type of 'ValueError' (line 249)
    ValueError_124324 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 249, 18), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 249)
    ValueError_call_result_124332 = invoke(stypy.reporting.localization.Localization(__file__, 249, 18), ValueError_124324, *[result_mod_124330], **kwargs_124331)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 249, 12), ValueError_call_result_124332, 'raise parameter', BaseException)
    # SSA join for try-except statement (line 246)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else branch of a try statement (line 243)
    module_type_store.open_ssa_branch('except else')
    
    
    # Getting the type of 'fonttype' (line 252)
    fonttype_124333 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 252, 11), 'fonttype')
    
    # Call to itervalues(...): (line 252)
    # Processing the call arguments (line 252)
    # Getting the type of 'fonttypes' (line 252)
    fonttypes_124336 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 252, 42), 'fonttypes', False)
    # Processing the call keyword arguments (line 252)
    kwargs_124337 = {}
    # Getting the type of 'six' (line 252)
    six_124334 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 252, 27), 'six', False)
    # Obtaining the member 'itervalues' of a type (line 252)
    itervalues_124335 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 252, 27), six_124334, 'itervalues')
    # Calling itervalues(args, kwargs) (line 252)
    itervalues_call_result_124338 = invoke(stypy.reporting.localization.Localization(__file__, 252, 27), itervalues_124335, *[fonttypes_124336], **kwargs_124337)
    
    # Applying the binary operator 'notin' (line 252)
    result_contains_124339 = python_operator(stypy.reporting.localization.Localization(__file__, 252, 11), 'notin', fonttype_124333, itervalues_call_result_124338)
    
    # Testing the type of an if condition (line 252)
    if_condition_124340 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 252, 8), result_contains_124339)
    # Assigning a type to the variable 'if_condition_124340' (line 252)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 252, 8), 'if_condition_124340', if_condition_124340)
    # SSA begins for if statement (line 252)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to ValueError(...): (line 253)
    # Processing the call arguments (line 253)
    unicode_124342 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 254, 16), 'unicode', u'Supported Postscript/PDF font types are %s')
    
    # Call to list(...): (line 255)
    # Processing the call arguments (line 255)
    
    # Call to itervalues(...): (line 255)
    # Processing the call arguments (line 255)
    # Getting the type of 'fonttypes' (line 255)
    fonttypes_124346 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 255, 36), 'fonttypes', False)
    # Processing the call keyword arguments (line 255)
    kwargs_124347 = {}
    # Getting the type of 'six' (line 255)
    six_124344 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 255, 21), 'six', False)
    # Obtaining the member 'itervalues' of a type (line 255)
    itervalues_124345 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 255, 21), six_124344, 'itervalues')
    # Calling itervalues(args, kwargs) (line 255)
    itervalues_call_result_124348 = invoke(stypy.reporting.localization.Localization(__file__, 255, 21), itervalues_124345, *[fonttypes_124346], **kwargs_124347)
    
    # Processing the call keyword arguments (line 255)
    kwargs_124349 = {}
    # Getting the type of 'list' (line 255)
    list_124343 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 255, 16), 'list', False)
    # Calling list(args, kwargs) (line 255)
    list_call_result_124350 = invoke(stypy.reporting.localization.Localization(__file__, 255, 16), list_124343, *[itervalues_call_result_124348], **kwargs_124349)
    
    # Applying the binary operator '%' (line 254)
    result_mod_124351 = python_operator(stypy.reporting.localization.Localization(__file__, 254, 16), '%', unicode_124342, list_call_result_124350)
    
    # Processing the call keyword arguments (line 253)
    kwargs_124352 = {}
    # Getting the type of 'ValueError' (line 253)
    ValueError_124341 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 253, 18), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 253)
    ValueError_call_result_124353 = invoke(stypy.reporting.localization.Localization(__file__, 253, 18), ValueError_124341, *[result_mod_124351], **kwargs_124352)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 253, 12), ValueError_call_result_124353, 'raise parameter', BaseException)
    # SSA join for if statement (line 252)
    module_type_store = module_type_store.join_ssa_context()
    
    # Getting the type of 'fonttype' (line 256)
    fonttype_124354 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 256, 15), 'fonttype')
    # Assigning a type to the variable 'stypy_return_type' (line 256)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 256, 8), 'stypy_return_type', fonttype_124354)
    # SSA join for try-except statement (line 243)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # ################# End of 'validate_fonttype(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'validate_fonttype' in the type store
    # Getting the type of 'stypy_return_type' (line 236)
    stypy_return_type_124355 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 236, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_124355)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'validate_fonttype'
    return stypy_return_type_124355

# Assigning a type to the variable 'validate_fonttype' (line 236)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 236, 0), 'validate_fonttype', validate_fonttype)

# Assigning a Call to a Name (line 259):

# Call to ValidateInStrings(...): (line 259)
# Processing the call arguments (line 259)
unicode_124357 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 260, 4), 'unicode', u'backend')
# Getting the type of 'all_backends' (line 260)
all_backends_124358 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 260, 15), 'all_backends', False)
# Processing the call keyword arguments (line 259)
# Getting the type of 'True' (line 260)
True_124359 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 260, 40), 'True', False)
keyword_124360 = True_124359
kwargs_124361 = {'ignorecase': keyword_124360}
# Getting the type of 'ValidateInStrings' (line 259)
ValidateInStrings_124356 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 259, 30), 'ValidateInStrings', False)
# Calling ValidateInStrings(args, kwargs) (line 259)
ValidateInStrings_call_result_124362 = invoke(stypy.reporting.localization.Localization(__file__, 259, 30), ValidateInStrings_124356, *[unicode_124357, all_backends_124358], **kwargs_124361)

# Assigning a type to the variable '_validate_standard_backends' (line 259)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 259, 0), '_validate_standard_backends', ValidateInStrings_call_result_124362)

@norecursion
def validate_backend(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'validate_backend'
    module_type_store = module_type_store.open_function_context('validate_backend', 263, 0, False)
    
    # Passed parameters checking function
    validate_backend.stypy_localization = localization
    validate_backend.stypy_type_of_self = None
    validate_backend.stypy_type_store = module_type_store
    validate_backend.stypy_function_name = 'validate_backend'
    validate_backend.stypy_param_names_list = ['s']
    validate_backend.stypy_varargs_param_name = None
    validate_backend.stypy_kwargs_param_name = None
    validate_backend.stypy_call_defaults = defaults
    validate_backend.stypy_call_varargs = varargs
    validate_backend.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'validate_backend', ['s'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'validate_backend', localization, ['s'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'validate_backend(...)' code ##################

    
    
    # Call to startswith(...): (line 264)
    # Processing the call arguments (line 264)
    unicode_124365 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 264, 20), 'unicode', u'module://')
    # Processing the call keyword arguments (line 264)
    kwargs_124366 = {}
    # Getting the type of 's' (line 264)
    s_124363 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 264, 7), 's', False)
    # Obtaining the member 'startswith' of a type (line 264)
    startswith_124364 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 264, 7), s_124363, 'startswith')
    # Calling startswith(args, kwargs) (line 264)
    startswith_call_result_124367 = invoke(stypy.reporting.localization.Localization(__file__, 264, 7), startswith_124364, *[unicode_124365], **kwargs_124366)
    
    # Testing the type of an if condition (line 264)
    if_condition_124368 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 264, 4), startswith_call_result_124367)
    # Assigning a type to the variable 'if_condition_124368' (line 264)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 264, 4), 'if_condition_124368', if_condition_124368)
    # SSA begins for if statement (line 264)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Getting the type of 's' (line 265)
    s_124369 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 265, 15), 's')
    # Assigning a type to the variable 'stypy_return_type' (line 265)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 265, 8), 'stypy_return_type', s_124369)
    # SSA branch for the else part of an if statement (line 264)
    module_type_store.open_ssa_branch('else')
    
    # Call to _validate_standard_backends(...): (line 267)
    # Processing the call arguments (line 267)
    # Getting the type of 's' (line 267)
    s_124371 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 267, 43), 's', False)
    # Processing the call keyword arguments (line 267)
    kwargs_124372 = {}
    # Getting the type of '_validate_standard_backends' (line 267)
    _validate_standard_backends_124370 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 267, 15), '_validate_standard_backends', False)
    # Calling _validate_standard_backends(args, kwargs) (line 267)
    _validate_standard_backends_call_result_124373 = invoke(stypy.reporting.localization.Localization(__file__, 267, 15), _validate_standard_backends_124370, *[s_124371], **kwargs_124372)
    
    # Assigning a type to the variable 'stypy_return_type' (line 267)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 267, 8), 'stypy_return_type', _validate_standard_backends_call_result_124373)
    # SSA join for if statement (line 264)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # ################# End of 'validate_backend(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'validate_backend' in the type store
    # Getting the type of 'stypy_return_type' (line 263)
    stypy_return_type_124374 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 263, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_124374)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'validate_backend'
    return stypy_return_type_124374

# Assigning a type to the variable 'validate_backend' (line 263)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 263, 0), 'validate_backend', validate_backend)

# Assigning a Call to a Name (line 270):

# Call to ValidateInStrings(...): (line 270)
# Processing the call arguments (line 270)
unicode_124376 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 270, 33), 'unicode', u'backend.qt4')

# Obtaining an instance of the builtin type 'list' (line 270)
list_124377 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 270, 48), 'list')
# Adding type elements to the builtin type 'list' instance (line 270)
# Adding element type (line 270)
unicode_124378 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 270, 49), 'unicode', u'PyQt4')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 270, 48), list_124377, unicode_124378)
# Adding element type (line 270)
unicode_124379 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 270, 58), 'unicode', u'PySide')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 270, 48), list_124377, unicode_124379)
# Adding element type (line 270)
unicode_124380 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 270, 68), 'unicode', u'PyQt4v2')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 270, 48), list_124377, unicode_124380)

# Processing the call keyword arguments (line 270)
kwargs_124381 = {}
# Getting the type of 'ValidateInStrings' (line 270)
ValidateInStrings_124375 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 270, 15), 'ValidateInStrings', False)
# Calling ValidateInStrings(args, kwargs) (line 270)
ValidateInStrings_call_result_124382 = invoke(stypy.reporting.localization.Localization(__file__, 270, 15), ValidateInStrings_124375, *[unicode_124376, list_124377], **kwargs_124381)

# Assigning a type to the variable 'validate_qt4' (line 270)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 270, 0), 'validate_qt4', ValidateInStrings_call_result_124382)

# Assigning a Call to a Name (line 271):

# Call to ValidateInStrings(...): (line 271)
# Processing the call arguments (line 271)
unicode_124384 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 33), 'unicode', u'backend.qt5')

# Obtaining an instance of the builtin type 'list' (line 271)
list_124385 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 48), 'list')
# Adding type elements to the builtin type 'list' instance (line 271)
# Adding element type (line 271)
unicode_124386 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 49), 'unicode', u'PyQt5')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 48), list_124385, unicode_124386)
# Adding element type (line 271)
unicode_124387 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 58), 'unicode', u'PySide2')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 48), list_124385, unicode_124387)

# Processing the call keyword arguments (line 271)
kwargs_124388 = {}
# Getting the type of 'ValidateInStrings' (line 271)
ValidateInStrings_124383 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 15), 'ValidateInStrings', False)
# Calling ValidateInStrings(args, kwargs) (line 271)
ValidateInStrings_call_result_124389 = invoke(stypy.reporting.localization.Localization(__file__, 271, 15), ValidateInStrings_124383, *[unicode_124384, list_124385], **kwargs_124388)

# Assigning a type to the variable 'validate_qt5' (line 271)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 271, 0), 'validate_qt5', ValidateInStrings_call_result_124389)

@norecursion
def validate_toolbar(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'validate_toolbar'
    module_type_store = module_type_store.open_function_context('validate_toolbar', 274, 0, False)
    
    # Passed parameters checking function
    validate_toolbar.stypy_localization = localization
    validate_toolbar.stypy_type_of_self = None
    validate_toolbar.stypy_type_store = module_type_store
    validate_toolbar.stypy_function_name = 'validate_toolbar'
    validate_toolbar.stypy_param_names_list = ['s']
    validate_toolbar.stypy_varargs_param_name = None
    validate_toolbar.stypy_kwargs_param_name = None
    validate_toolbar.stypy_call_defaults = defaults
    validate_toolbar.stypy_call_varargs = varargs
    validate_toolbar.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'validate_toolbar', ['s'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'validate_toolbar', localization, ['s'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'validate_toolbar(...)' code ##################

    
    # Assigning a Call to a Name (line 275):
    
    # Call to ValidateInStrings(...): (line 275)
    # Processing the call arguments (line 275)
    unicode_124391 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 276, 16), 'unicode', u'toolbar')
    
    # Obtaining an instance of the builtin type 'list' (line 277)
    list_124392 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 277, 16), 'list')
    # Adding type elements to the builtin type 'list' instance (line 277)
    # Adding element type (line 277)
    unicode_124393 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 277, 17), 'unicode', u'None')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 277, 16), list_124392, unicode_124393)
    # Adding element type (line 277)
    unicode_124394 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 277, 25), 'unicode', u'toolbar2')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 277, 16), list_124392, unicode_124394)
    # Adding element type (line 277)
    unicode_124395 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 277, 37), 'unicode', u'toolmanager')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 277, 16), list_124392, unicode_124395)
    
    # Processing the call keyword arguments (line 275)
    # Getting the type of 'True' (line 278)
    True_124396 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 278, 27), 'True', False)
    keyword_124397 = True_124396
    kwargs_124398 = {'ignorecase': keyword_124397}
    # Getting the type of 'ValidateInStrings' (line 275)
    ValidateInStrings_124390 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 16), 'ValidateInStrings', False)
    # Calling ValidateInStrings(args, kwargs) (line 275)
    ValidateInStrings_call_result_124399 = invoke(stypy.reporting.localization.Localization(__file__, 275, 16), ValidateInStrings_124390, *[unicode_124391, list_124392], **kwargs_124398)
    
    # Assigning a type to the variable 'validator' (line 275)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 275, 4), 'validator', ValidateInStrings_call_result_124399)
    
    # Call to validator(...): (line 279)
    # Processing the call arguments (line 279)
    # Getting the type of 's' (line 279)
    s_124401 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 279, 21), 's', False)
    # Processing the call keyword arguments (line 279)
    kwargs_124402 = {}
    # Getting the type of 'validator' (line 279)
    validator_124400 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 279, 11), 'validator', False)
    # Calling validator(args, kwargs) (line 279)
    validator_call_result_124403 = invoke(stypy.reporting.localization.Localization(__file__, 279, 11), validator_124400, *[s_124401], **kwargs_124402)
    
    # Assigning a type to the variable 'stypy_return_type' (line 279)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 279, 4), 'stypy_return_type', validator_call_result_124403)
    
    # ################# End of 'validate_toolbar(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'validate_toolbar' in the type store
    # Getting the type of 'stypy_return_type' (line 274)
    stypy_return_type_124404 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 274, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_124404)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'validate_toolbar'
    return stypy_return_type_124404

# Assigning a type to the variable 'validate_toolbar' (line 274)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 274, 0), 'validate_toolbar', validate_toolbar)

# Assigning a Str to a Name (line 282):
unicode_124405 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 282, 16), 'unicode', u'You must supply exactly {n} values, you provided {num} values: {s}')
# Assigning a type to the variable '_seq_err_msg' (line 282)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 282, 0), '_seq_err_msg', unicode_124405)

# Assigning a Str to a Name (line 285):
unicode_124406 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 285, 16), 'unicode', u'You must supply exactly {n} comma-separated values, you provided {num} comma-separated values: {s}')
# Assigning a type to the variable '_str_err_msg' (line 285)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 285, 0), '_str_err_msg', unicode_124406)
# Declaration of the 'validate_nseq_float' class

class validate_nseq_float(object, ):

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'None' (line 290)
        None_124407 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 290, 25), 'None')
        # Getting the type of 'False' (line 290)
        False_124408 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 290, 42), 'False')
        defaults = [None_124407, False_124408]
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 290, 4, False)
        # Assigning a type to the variable 'self' (line 291)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 291, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'validate_nseq_float.__init__', ['n', 'allow_none'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['n', 'allow_none'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Assigning a Name to a Attribute (line 291):
        # Getting the type of 'n' (line 291)
        n_124409 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 291, 17), 'n')
        # Getting the type of 'self' (line 291)
        self_124410 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 291, 8), 'self')
        # Setting the type of the member 'n' of a type (line 291)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 291, 8), self_124410, 'n', n_124409)
        
        # Assigning a Name to a Attribute (line 292):
        # Getting the type of 'allow_none' (line 292)
        allow_none_124411 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 292, 26), 'allow_none')
        # Getting the type of 'self' (line 292)
        self_124412 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 292, 8), 'self')
        # Setting the type of the member 'allow_none' of a type (line 292)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 292, 8), self_124412, 'allow_none', allow_none_124411)
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def __call__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__call__'
        module_type_store = module_type_store.open_function_context('__call__', 294, 4, False)
        # Assigning a type to the variable 'self' (line 295)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 295, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        validate_nseq_float.__call__.__dict__.__setitem__('stypy_localization', localization)
        validate_nseq_float.__call__.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        validate_nseq_float.__call__.__dict__.__setitem__('stypy_type_store', module_type_store)
        validate_nseq_float.__call__.__dict__.__setitem__('stypy_function_name', 'validate_nseq_float.__call__')
        validate_nseq_float.__call__.__dict__.__setitem__('stypy_param_names_list', ['s'])
        validate_nseq_float.__call__.__dict__.__setitem__('stypy_varargs_param_name', None)
        validate_nseq_float.__call__.__dict__.__setitem__('stypy_kwargs_param_name', None)
        validate_nseq_float.__call__.__dict__.__setitem__('stypy_call_defaults', defaults)
        validate_nseq_float.__call__.__dict__.__setitem__('stypy_call_varargs', varargs)
        validate_nseq_float.__call__.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        validate_nseq_float.__call__.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'validate_nseq_float.__call__', ['s'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '__call__', localization, ['s'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__call__(...)' code ##################

        unicode_124413 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 295, 8), 'unicode', u'return a seq of n floats or raise')
        
        
        # Call to isinstance(...): (line 296)
        # Processing the call arguments (line 296)
        # Getting the type of 's' (line 296)
        s_124415 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 296, 22), 's', False)
        # Getting the type of 'six' (line 296)
        six_124416 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 296, 25), 'six', False)
        # Obtaining the member 'string_types' of a type (line 296)
        string_types_124417 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 296, 25), six_124416, 'string_types')
        # Processing the call keyword arguments (line 296)
        kwargs_124418 = {}
        # Getting the type of 'isinstance' (line 296)
        isinstance_124414 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 296, 11), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 296)
        isinstance_call_result_124419 = invoke(stypy.reporting.localization.Localization(__file__, 296, 11), isinstance_124414, *[s_124415, string_types_124417], **kwargs_124418)
        
        # Testing the type of an if condition (line 296)
        if_condition_124420 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 296, 8), isinstance_call_result_124419)
        # Assigning a type to the variable 'if_condition_124420' (line 296)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 296, 8), 'if_condition_124420', if_condition_124420)
        # SSA begins for if statement (line 296)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a ListComp to a Name (line 297):
        # Calculating list comprehension
        # Calculating comprehension expression
        
        # Call to split(...): (line 297)
        # Processing the call arguments (line 297)
        unicode_124427 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 297, 44), 'unicode', u',')
        # Processing the call keyword arguments (line 297)
        kwargs_124428 = {}
        # Getting the type of 's' (line 297)
        s_124425 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 297, 36), 's', False)
        # Obtaining the member 'split' of a type (line 297)
        split_124426 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 297, 36), s_124425, 'split')
        # Calling split(args, kwargs) (line 297)
        split_call_result_124429 = invoke(stypy.reporting.localization.Localization(__file__, 297, 36), split_124426, *[unicode_124427], **kwargs_124428)
        
        comprehension_124430 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 297, 17), split_call_result_124429)
        # Assigning a type to the variable 'x' (line 297)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 297, 17), 'x', comprehension_124430)
        
        # Call to strip(...): (line 297)
        # Processing the call keyword arguments (line 297)
        kwargs_124423 = {}
        # Getting the type of 'x' (line 297)
        x_124421 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 297, 17), 'x', False)
        # Obtaining the member 'strip' of a type (line 297)
        strip_124422 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 297, 17), x_124421, 'strip')
        # Calling strip(args, kwargs) (line 297)
        strip_call_result_124424 = invoke(stypy.reporting.localization.Localization(__file__, 297, 17), strip_124422, *[], **kwargs_124423)
        
        list_124431 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 297, 17), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 297, 17), list_124431, strip_call_result_124424)
        # Assigning a type to the variable 's' (line 297)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 297, 12), 's', list_124431)
        
        # Assigning a Name to a Name (line 298):
        # Getting the type of '_str_err_msg' (line 298)
        _str_err_msg_124432 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 298, 22), '_str_err_msg')
        # Assigning a type to the variable 'err_msg' (line 298)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 298, 12), 'err_msg', _str_err_msg_124432)
        # SSA branch for the else part of an if statement (line 296)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Name to a Name (line 300):
        # Getting the type of '_seq_err_msg' (line 300)
        _seq_err_msg_124433 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 300, 22), '_seq_err_msg')
        # Assigning a type to the variable 'err_msg' (line 300)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 300, 12), 'err_msg', _seq_err_msg_124433)
        # SSA join for if statement (line 296)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Evaluating a boolean operation
        
        # Getting the type of 'self' (line 302)
        self_124434 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 302, 11), 'self')
        # Obtaining the member 'n' of a type (line 302)
        n_124435 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 302, 11), self_124434, 'n')
        # Getting the type of 'None' (line 302)
        None_124436 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 302, 25), 'None')
        # Applying the binary operator 'isnot' (line 302)
        result_is_not_124437 = python_operator(stypy.reporting.localization.Localization(__file__, 302, 11), 'isnot', n_124435, None_124436)
        
        
        
        # Call to len(...): (line 302)
        # Processing the call arguments (line 302)
        # Getting the type of 's' (line 302)
        s_124439 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 302, 38), 's', False)
        # Processing the call keyword arguments (line 302)
        kwargs_124440 = {}
        # Getting the type of 'len' (line 302)
        len_124438 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 302, 34), 'len', False)
        # Calling len(args, kwargs) (line 302)
        len_call_result_124441 = invoke(stypy.reporting.localization.Localization(__file__, 302, 34), len_124438, *[s_124439], **kwargs_124440)
        
        # Getting the type of 'self' (line 302)
        self_124442 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 302, 44), 'self')
        # Obtaining the member 'n' of a type (line 302)
        n_124443 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 302, 44), self_124442, 'n')
        # Applying the binary operator '!=' (line 302)
        result_ne_124444 = python_operator(stypy.reporting.localization.Localization(__file__, 302, 34), '!=', len_call_result_124441, n_124443)
        
        # Applying the binary operator 'and' (line 302)
        result_and_keyword_124445 = python_operator(stypy.reporting.localization.Localization(__file__, 302, 11), 'and', result_is_not_124437, result_ne_124444)
        
        # Testing the type of an if condition (line 302)
        if_condition_124446 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 302, 8), result_and_keyword_124445)
        # Assigning a type to the variable 'if_condition_124446' (line 302)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 302, 8), 'if_condition_124446', if_condition_124446)
        # SSA begins for if statement (line 302)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 303)
        # Processing the call arguments (line 303)
        
        # Call to format(...): (line 303)
        # Processing the call keyword arguments (line 303)
        # Getting the type of 'self' (line 303)
        self_124450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 303, 46), 'self', False)
        # Obtaining the member 'n' of a type (line 303)
        n_124451 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 303, 46), self_124450, 'n')
        keyword_124452 = n_124451
        
        # Call to len(...): (line 303)
        # Processing the call arguments (line 303)
        # Getting the type of 's' (line 303)
        s_124454 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 303, 62), 's', False)
        # Processing the call keyword arguments (line 303)
        kwargs_124455 = {}
        # Getting the type of 'len' (line 303)
        len_124453 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 303, 58), 'len', False)
        # Calling len(args, kwargs) (line 303)
        len_call_result_124456 = invoke(stypy.reporting.localization.Localization(__file__, 303, 58), len_124453, *[s_124454], **kwargs_124455)
        
        keyword_124457 = len_call_result_124456
        # Getting the type of 's' (line 303)
        s_124458 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 303, 68), 's', False)
        keyword_124459 = s_124458
        kwargs_124460 = {'s': keyword_124459, 'num': keyword_124457, 'n': keyword_124452}
        # Getting the type of 'err_msg' (line 303)
        err_msg_124448 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 303, 29), 'err_msg', False)
        # Obtaining the member 'format' of a type (line 303)
        format_124449 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 303, 29), err_msg_124448, 'format')
        # Calling format(args, kwargs) (line 303)
        format_call_result_124461 = invoke(stypy.reporting.localization.Localization(__file__, 303, 29), format_124449, *[], **kwargs_124460)
        
        # Processing the call keyword arguments (line 303)
        kwargs_124462 = {}
        # Getting the type of 'ValueError' (line 303)
        ValueError_124447 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 303, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 303)
        ValueError_call_result_124463 = invoke(stypy.reporting.localization.Localization(__file__, 303, 18), ValueError_124447, *[format_call_result_124461], **kwargs_124462)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 303, 12), ValueError_call_result_124463, 'raise parameter', BaseException)
        # SSA join for if statement (line 302)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # SSA begins for try-except statement (line 305)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
        # Calculating list comprehension
        # Calculating comprehension expression
        # Getting the type of 's' (line 309)
        s_124477 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 309, 31), 's')
        comprehension_124478 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 306, 20), s_124477)
        # Assigning a type to the variable 'val' (line 306)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 306, 20), 'val', comprehension_124478)
        
        
        # Evaluating a boolean operation
        
        # Getting the type of 'self' (line 307)
        self_124464 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 307, 27), 'self')
        # Obtaining the member 'allow_none' of a type (line 307)
        allow_none_124465 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 307, 27), self_124464, 'allow_none')
        # Applying the 'not' unary operator (line 307)
        result_not__124466 = python_operator(stypy.reporting.localization.Localization(__file__, 307, 23), 'not', allow_none_124465)
        
        
        # Getting the type of 'val' (line 307)
        val_124467 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 307, 46), 'val')
        # Getting the type of 'None' (line 307)
        None_124468 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 307, 57), 'None')
        # Applying the binary operator 'isnot' (line 307)
        result_is_not_124469 = python_operator(stypy.reporting.localization.Localization(__file__, 307, 46), 'isnot', val_124467, None_124468)
        
        # Applying the binary operator 'or' (line 307)
        result_or_keyword_124470 = python_operator(stypy.reporting.localization.Localization(__file__, 307, 23), 'or', result_not__124466, result_is_not_124469)
        
        # Testing the type of an if expression (line 306)
        is_suitable_condition(stypy.reporting.localization.Localization(__file__, 306, 20), result_or_keyword_124470)
        # SSA begins for if expression (line 306)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if expression')
        
        # Call to float(...): (line 306)
        # Processing the call arguments (line 306)
        # Getting the type of 'val' (line 306)
        val_124472 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 306, 26), 'val', False)
        # Processing the call keyword arguments (line 306)
        kwargs_124473 = {}
        # Getting the type of 'float' (line 306)
        float_124471 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 306, 20), 'float', False)
        # Calling float(args, kwargs) (line 306)
        float_call_result_124474 = invoke(stypy.reporting.localization.Localization(__file__, 306, 20), float_124471, *[val_124472], **kwargs_124473)
        
        # SSA branch for the else part of an if expression (line 306)
        module_type_store.open_ssa_branch('if expression else')
        # Getting the type of 'val' (line 308)
        val_124475 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 308, 25), 'val')
        # SSA join for if expression (line 306)
        module_type_store = module_type_store.join_ssa_context()
        if_exp_124476 = union_type.UnionType.add(float_call_result_124474, val_124475)
        
        list_124479 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 306, 20), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 306, 20), list_124479, if_exp_124476)
        # Assigning a type to the variable 'stypy_return_type' (line 306)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 306, 12), 'stypy_return_type', list_124479)
        # SSA branch for the except part of a try statement (line 305)
        # SSA branch for the except 'ValueError' branch of a try statement (line 305)
        module_type_store.open_ssa_branch('except')
        
        # Call to ValueError(...): (line 311)
        # Processing the call arguments (line 311)
        unicode_124481 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 311, 29), 'unicode', u'Could not convert all entries to floats')
        # Processing the call keyword arguments (line 311)
        kwargs_124482 = {}
        # Getting the type of 'ValueError' (line 311)
        ValueError_124480 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 311, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 311)
        ValueError_call_result_124483 = invoke(stypy.reporting.localization.Localization(__file__, 311, 18), ValueError_124480, *[unicode_124481], **kwargs_124482)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 311, 12), ValueError_call_result_124483, 'raise parameter', BaseException)
        # SSA join for try-except statement (line 305)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of '__call__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '__call__' in the type store
        # Getting the type of 'stypy_return_type' (line 294)
        stypy_return_type_124484 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 294, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_124484)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '__call__'
        return stypy_return_type_124484


# Assigning a type to the variable 'validate_nseq_float' (line 289)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 289, 0), 'validate_nseq_float', validate_nseq_float)
# Declaration of the 'validate_nseq_int' class

class validate_nseq_int(object, ):

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'None' (line 315)
        None_124485 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 315, 25), 'None')
        defaults = [None_124485]
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 315, 4, False)
        # Assigning a type to the variable 'self' (line 316)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 316, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'validate_nseq_int.__init__', ['n'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['n'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Assigning a Name to a Attribute (line 316):
        # Getting the type of 'n' (line 316)
        n_124486 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 316, 17), 'n')
        # Getting the type of 'self' (line 316)
        self_124487 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 316, 8), 'self')
        # Setting the type of the member 'n' of a type (line 316)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 316, 8), self_124487, 'n', n_124486)
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def __call__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__call__'
        module_type_store = module_type_store.open_function_context('__call__', 318, 4, False)
        # Assigning a type to the variable 'self' (line 319)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 319, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        validate_nseq_int.__call__.__dict__.__setitem__('stypy_localization', localization)
        validate_nseq_int.__call__.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        validate_nseq_int.__call__.__dict__.__setitem__('stypy_type_store', module_type_store)
        validate_nseq_int.__call__.__dict__.__setitem__('stypy_function_name', 'validate_nseq_int.__call__')
        validate_nseq_int.__call__.__dict__.__setitem__('stypy_param_names_list', ['s'])
        validate_nseq_int.__call__.__dict__.__setitem__('stypy_varargs_param_name', None)
        validate_nseq_int.__call__.__dict__.__setitem__('stypy_kwargs_param_name', None)
        validate_nseq_int.__call__.__dict__.__setitem__('stypy_call_defaults', defaults)
        validate_nseq_int.__call__.__dict__.__setitem__('stypy_call_varargs', varargs)
        validate_nseq_int.__call__.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        validate_nseq_int.__call__.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'validate_nseq_int.__call__', ['s'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '__call__', localization, ['s'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__call__(...)' code ##################

        unicode_124488 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 319, 8), 'unicode', u'return a seq of n ints or raise')
        
        
        # Call to isinstance(...): (line 320)
        # Processing the call arguments (line 320)
        # Getting the type of 's' (line 320)
        s_124490 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 320, 22), 's', False)
        # Getting the type of 'six' (line 320)
        six_124491 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 320, 25), 'six', False)
        # Obtaining the member 'string_types' of a type (line 320)
        string_types_124492 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 320, 25), six_124491, 'string_types')
        # Processing the call keyword arguments (line 320)
        kwargs_124493 = {}
        # Getting the type of 'isinstance' (line 320)
        isinstance_124489 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 320, 11), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 320)
        isinstance_call_result_124494 = invoke(stypy.reporting.localization.Localization(__file__, 320, 11), isinstance_124489, *[s_124490, string_types_124492], **kwargs_124493)
        
        # Testing the type of an if condition (line 320)
        if_condition_124495 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 320, 8), isinstance_call_result_124494)
        # Assigning a type to the variable 'if_condition_124495' (line 320)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 320, 8), 'if_condition_124495', if_condition_124495)
        # SSA begins for if statement (line 320)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a ListComp to a Name (line 321):
        # Calculating list comprehension
        # Calculating comprehension expression
        
        # Call to split(...): (line 321)
        # Processing the call arguments (line 321)
        unicode_124502 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 321, 44), 'unicode', u',')
        # Processing the call keyword arguments (line 321)
        kwargs_124503 = {}
        # Getting the type of 's' (line 321)
        s_124500 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 321, 36), 's', False)
        # Obtaining the member 'split' of a type (line 321)
        split_124501 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 321, 36), s_124500, 'split')
        # Calling split(args, kwargs) (line 321)
        split_call_result_124504 = invoke(stypy.reporting.localization.Localization(__file__, 321, 36), split_124501, *[unicode_124502], **kwargs_124503)
        
        comprehension_124505 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 321, 17), split_call_result_124504)
        # Assigning a type to the variable 'x' (line 321)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 321, 17), 'x', comprehension_124505)
        
        # Call to strip(...): (line 321)
        # Processing the call keyword arguments (line 321)
        kwargs_124498 = {}
        # Getting the type of 'x' (line 321)
        x_124496 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 321, 17), 'x', False)
        # Obtaining the member 'strip' of a type (line 321)
        strip_124497 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 321, 17), x_124496, 'strip')
        # Calling strip(args, kwargs) (line 321)
        strip_call_result_124499 = invoke(stypy.reporting.localization.Localization(__file__, 321, 17), strip_124497, *[], **kwargs_124498)
        
        list_124506 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 321, 17), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 321, 17), list_124506, strip_call_result_124499)
        # Assigning a type to the variable 's' (line 321)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 321, 12), 's', list_124506)
        
        # Assigning a Name to a Name (line 322):
        # Getting the type of '_str_err_msg' (line 322)
        _str_err_msg_124507 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 322, 22), '_str_err_msg')
        # Assigning a type to the variable 'err_msg' (line 322)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 322, 12), 'err_msg', _str_err_msg_124507)
        # SSA branch for the else part of an if statement (line 320)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Name to a Name (line 324):
        # Getting the type of '_seq_err_msg' (line 324)
        _seq_err_msg_124508 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 22), '_seq_err_msg')
        # Assigning a type to the variable 'err_msg' (line 324)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 324, 12), 'err_msg', _seq_err_msg_124508)
        # SSA join for if statement (line 320)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Evaluating a boolean operation
        
        # Getting the type of 'self' (line 326)
        self_124509 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 326, 11), 'self')
        # Obtaining the member 'n' of a type (line 326)
        n_124510 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 326, 11), self_124509, 'n')
        # Getting the type of 'None' (line 326)
        None_124511 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 326, 25), 'None')
        # Applying the binary operator 'isnot' (line 326)
        result_is_not_124512 = python_operator(stypy.reporting.localization.Localization(__file__, 326, 11), 'isnot', n_124510, None_124511)
        
        
        
        # Call to len(...): (line 326)
        # Processing the call arguments (line 326)
        # Getting the type of 's' (line 326)
        s_124514 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 326, 38), 's', False)
        # Processing the call keyword arguments (line 326)
        kwargs_124515 = {}
        # Getting the type of 'len' (line 326)
        len_124513 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 326, 34), 'len', False)
        # Calling len(args, kwargs) (line 326)
        len_call_result_124516 = invoke(stypy.reporting.localization.Localization(__file__, 326, 34), len_124513, *[s_124514], **kwargs_124515)
        
        # Getting the type of 'self' (line 326)
        self_124517 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 326, 44), 'self')
        # Obtaining the member 'n' of a type (line 326)
        n_124518 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 326, 44), self_124517, 'n')
        # Applying the binary operator '!=' (line 326)
        result_ne_124519 = python_operator(stypy.reporting.localization.Localization(__file__, 326, 34), '!=', len_call_result_124516, n_124518)
        
        # Applying the binary operator 'and' (line 326)
        result_and_keyword_124520 = python_operator(stypy.reporting.localization.Localization(__file__, 326, 11), 'and', result_is_not_124512, result_ne_124519)
        
        # Testing the type of an if condition (line 326)
        if_condition_124521 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 326, 8), result_and_keyword_124520)
        # Assigning a type to the variable 'if_condition_124521' (line 326)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 326, 8), 'if_condition_124521', if_condition_124521)
        # SSA begins for if statement (line 326)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 327)
        # Processing the call arguments (line 327)
        
        # Call to format(...): (line 327)
        # Processing the call keyword arguments (line 327)
        # Getting the type of 'self' (line 327)
        self_124525 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 327, 46), 'self', False)
        # Obtaining the member 'n' of a type (line 327)
        n_124526 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 327, 46), self_124525, 'n')
        keyword_124527 = n_124526
        
        # Call to len(...): (line 327)
        # Processing the call arguments (line 327)
        # Getting the type of 's' (line 327)
        s_124529 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 327, 62), 's', False)
        # Processing the call keyword arguments (line 327)
        kwargs_124530 = {}
        # Getting the type of 'len' (line 327)
        len_124528 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 327, 58), 'len', False)
        # Calling len(args, kwargs) (line 327)
        len_call_result_124531 = invoke(stypy.reporting.localization.Localization(__file__, 327, 58), len_124528, *[s_124529], **kwargs_124530)
        
        keyword_124532 = len_call_result_124531
        # Getting the type of 's' (line 327)
        s_124533 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 327, 68), 's', False)
        keyword_124534 = s_124533
        kwargs_124535 = {'s': keyword_124534, 'num': keyword_124532, 'n': keyword_124527}
        # Getting the type of 'err_msg' (line 327)
        err_msg_124523 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 327, 29), 'err_msg', False)
        # Obtaining the member 'format' of a type (line 327)
        format_124524 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 327, 29), err_msg_124523, 'format')
        # Calling format(args, kwargs) (line 327)
        format_call_result_124536 = invoke(stypy.reporting.localization.Localization(__file__, 327, 29), format_124524, *[], **kwargs_124535)
        
        # Processing the call keyword arguments (line 327)
        kwargs_124537 = {}
        # Getting the type of 'ValueError' (line 327)
        ValueError_124522 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 327, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 327)
        ValueError_call_result_124538 = invoke(stypy.reporting.localization.Localization(__file__, 327, 18), ValueError_124522, *[format_call_result_124536], **kwargs_124537)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 327, 12), ValueError_call_result_124538, 'raise parameter', BaseException)
        # SSA join for if statement (line 326)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # SSA begins for try-except statement (line 329)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
        # Calculating list comprehension
        # Calculating comprehension expression
        # Getting the type of 's' (line 330)
        s_124543 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 330, 40), 's')
        comprehension_124544 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 330, 20), s_124543)
        # Assigning a type to the variable 'val' (line 330)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 330, 20), 'val', comprehension_124544)
        
        # Call to int(...): (line 330)
        # Processing the call arguments (line 330)
        # Getting the type of 'val' (line 330)
        val_124540 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 330, 24), 'val', False)
        # Processing the call keyword arguments (line 330)
        kwargs_124541 = {}
        # Getting the type of 'int' (line 330)
        int_124539 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 330, 20), 'int', False)
        # Calling int(args, kwargs) (line 330)
        int_call_result_124542 = invoke(stypy.reporting.localization.Localization(__file__, 330, 20), int_124539, *[val_124540], **kwargs_124541)
        
        list_124545 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 330, 20), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 330, 20), list_124545, int_call_result_124542)
        # Assigning a type to the variable 'stypy_return_type' (line 330)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 330, 12), 'stypy_return_type', list_124545)
        # SSA branch for the except part of a try statement (line 329)
        # SSA branch for the except 'ValueError' branch of a try statement (line 329)
        module_type_store.open_ssa_branch('except')
        
        # Call to ValueError(...): (line 332)
        # Processing the call arguments (line 332)
        unicode_124547 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 332, 29), 'unicode', u'Could not convert all entries to ints')
        # Processing the call keyword arguments (line 332)
        kwargs_124548 = {}
        # Getting the type of 'ValueError' (line 332)
        ValueError_124546 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 332, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 332)
        ValueError_call_result_124549 = invoke(stypy.reporting.localization.Localization(__file__, 332, 18), ValueError_124546, *[unicode_124547], **kwargs_124548)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 332, 12), ValueError_call_result_124549, 'raise parameter', BaseException)
        # SSA join for try-except statement (line 329)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of '__call__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '__call__' in the type store
        # Getting the type of 'stypy_return_type' (line 318)
        stypy_return_type_124550 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 318, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_124550)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '__call__'
        return stypy_return_type_124550


# Assigning a type to the variable 'validate_nseq_int' (line 314)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 314, 0), 'validate_nseq_int', validate_nseq_int)

@norecursion
def validate_color_or_inherit(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'validate_color_or_inherit'
    module_type_store = module_type_store.open_function_context('validate_color_or_inherit', 335, 0, False)
    
    # Passed parameters checking function
    validate_color_or_inherit.stypy_localization = localization
    validate_color_or_inherit.stypy_type_of_self = None
    validate_color_or_inherit.stypy_type_store = module_type_store
    validate_color_or_inherit.stypy_function_name = 'validate_color_or_inherit'
    validate_color_or_inherit.stypy_param_names_list = ['s']
    validate_color_or_inherit.stypy_varargs_param_name = None
    validate_color_or_inherit.stypy_kwargs_param_name = None
    validate_color_or_inherit.stypy_call_defaults = defaults
    validate_color_or_inherit.stypy_call_varargs = varargs
    validate_color_or_inherit.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'validate_color_or_inherit', ['s'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'validate_color_or_inherit', localization, ['s'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'validate_color_or_inherit(...)' code ##################

    unicode_124551 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 336, 4), 'unicode', u'return a valid color arg')
    
    
    # Getting the type of 's' (line 337)
    s_124552 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 337, 7), 's')
    unicode_124553 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 337, 12), 'unicode', u'inherit')
    # Applying the binary operator '==' (line 337)
    result_eq_124554 = python_operator(stypy.reporting.localization.Localization(__file__, 337, 7), '==', s_124552, unicode_124553)
    
    # Testing the type of an if condition (line 337)
    if_condition_124555 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 337, 4), result_eq_124554)
    # Assigning a type to the variable 'if_condition_124555' (line 337)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 337, 4), 'if_condition_124555', if_condition_124555)
    # SSA begins for if statement (line 337)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Getting the type of 's' (line 338)
    s_124556 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 338, 15), 's')
    # Assigning a type to the variable 'stypy_return_type' (line 338)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 338, 8), 'stypy_return_type', s_124556)
    # SSA join for if statement (line 337)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Call to validate_color(...): (line 339)
    # Processing the call arguments (line 339)
    # Getting the type of 's' (line 339)
    s_124558 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 339, 26), 's', False)
    # Processing the call keyword arguments (line 339)
    kwargs_124559 = {}
    # Getting the type of 'validate_color' (line 339)
    validate_color_124557 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 339, 11), 'validate_color', False)
    # Calling validate_color(args, kwargs) (line 339)
    validate_color_call_result_124560 = invoke(stypy.reporting.localization.Localization(__file__, 339, 11), validate_color_124557, *[s_124558], **kwargs_124559)
    
    # Assigning a type to the variable 'stypy_return_type' (line 339)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 339, 4), 'stypy_return_type', validate_color_call_result_124560)
    
    # ################# End of 'validate_color_or_inherit(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'validate_color_or_inherit' in the type store
    # Getting the type of 'stypy_return_type' (line 335)
    stypy_return_type_124561 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 335, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_124561)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'validate_color_or_inherit'
    return stypy_return_type_124561

# Assigning a type to the variable 'validate_color_or_inherit' (line 335)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 335, 0), 'validate_color_or_inherit', validate_color_or_inherit)

@norecursion
def validate_color_or_auto(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'validate_color_or_auto'
    module_type_store = module_type_store.open_function_context('validate_color_or_auto', 342, 0, False)
    
    # Passed parameters checking function
    validate_color_or_auto.stypy_localization = localization
    validate_color_or_auto.stypy_type_of_self = None
    validate_color_or_auto.stypy_type_store = module_type_store
    validate_color_or_auto.stypy_function_name = 'validate_color_or_auto'
    validate_color_or_auto.stypy_param_names_list = ['s']
    validate_color_or_auto.stypy_varargs_param_name = None
    validate_color_or_auto.stypy_kwargs_param_name = None
    validate_color_or_auto.stypy_call_defaults = defaults
    validate_color_or_auto.stypy_call_varargs = varargs
    validate_color_or_auto.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'validate_color_or_auto', ['s'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'validate_color_or_auto', localization, ['s'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'validate_color_or_auto(...)' code ##################

    
    
    # Getting the type of 's' (line 343)
    s_124562 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 343, 7), 's')
    unicode_124563 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 343, 12), 'unicode', u'auto')
    # Applying the binary operator '==' (line 343)
    result_eq_124564 = python_operator(stypy.reporting.localization.Localization(__file__, 343, 7), '==', s_124562, unicode_124563)
    
    # Testing the type of an if condition (line 343)
    if_condition_124565 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 343, 4), result_eq_124564)
    # Assigning a type to the variable 'if_condition_124565' (line 343)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 343, 4), 'if_condition_124565', if_condition_124565)
    # SSA begins for if statement (line 343)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Getting the type of 's' (line 344)
    s_124566 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 344, 15), 's')
    # Assigning a type to the variable 'stypy_return_type' (line 344)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 344, 8), 'stypy_return_type', s_124566)
    # SSA join for if statement (line 343)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Call to validate_color(...): (line 345)
    # Processing the call arguments (line 345)
    # Getting the type of 's' (line 345)
    s_124568 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 345, 26), 's', False)
    # Processing the call keyword arguments (line 345)
    kwargs_124569 = {}
    # Getting the type of 'validate_color' (line 345)
    validate_color_124567 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 345, 11), 'validate_color', False)
    # Calling validate_color(args, kwargs) (line 345)
    validate_color_call_result_124570 = invoke(stypy.reporting.localization.Localization(__file__, 345, 11), validate_color_124567, *[s_124568], **kwargs_124569)
    
    # Assigning a type to the variable 'stypy_return_type' (line 345)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 345, 4), 'stypy_return_type', validate_color_call_result_124570)
    
    # ################# End of 'validate_color_or_auto(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'validate_color_or_auto' in the type store
    # Getting the type of 'stypy_return_type' (line 342)
    stypy_return_type_124571 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 342, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_124571)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'validate_color_or_auto'
    return stypy_return_type_124571

# Assigning a type to the variable 'validate_color_or_auto' (line 342)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 342, 0), 'validate_color_or_auto', validate_color_or_auto)

@norecursion
def validate_color_for_prop_cycle(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'validate_color_for_prop_cycle'
    module_type_store = module_type_store.open_function_context('validate_color_for_prop_cycle', 348, 0, False)
    
    # Passed parameters checking function
    validate_color_for_prop_cycle.stypy_localization = localization
    validate_color_for_prop_cycle.stypy_type_of_self = None
    validate_color_for_prop_cycle.stypy_type_store = module_type_store
    validate_color_for_prop_cycle.stypy_function_name = 'validate_color_for_prop_cycle'
    validate_color_for_prop_cycle.stypy_param_names_list = ['s']
    validate_color_for_prop_cycle.stypy_varargs_param_name = None
    validate_color_for_prop_cycle.stypy_kwargs_param_name = None
    validate_color_for_prop_cycle.stypy_call_defaults = defaults
    validate_color_for_prop_cycle.stypy_call_varargs = varargs
    validate_color_for_prop_cycle.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'validate_color_for_prop_cycle', ['s'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'validate_color_for_prop_cycle', localization, ['s'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'validate_color_for_prop_cycle(...)' code ##################

    
    # Type idiom detected: calculating its left and rigth part (line 351)
    # Getting the type of 'bytes' (line 351)
    bytes_124572 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 351, 21), 'bytes')
    # Getting the type of 's' (line 351)
    s_124573 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 351, 18), 's')
    
    (may_be_124574, more_types_in_union_124575) = may_be_subtype(bytes_124572, s_124573)

    if may_be_124574:

        if more_types_in_union_124575:
            # Runtime conditional SSA (line 351)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        # Assigning a type to the variable 's' (line 351)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 351, 4), 's', remove_not_subtype_from_union(s_124573, bytes))
        
        # Assigning a Call to a Name (line 352):
        
        # Call to match(...): (line 352)
        # Processing the call arguments (line 352)
        str_124578 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 352, 25), 'str', '^C[0-9]$')
        # Getting the type of 's' (line 352)
        s_124579 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 352, 38), 's', False)
        # Processing the call keyword arguments (line 352)
        kwargs_124580 = {}
        # Getting the type of 're' (line 352)
        re_124576 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 352, 16), 're', False)
        # Obtaining the member 'match' of a type (line 352)
        match_124577 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 352, 16), re_124576, 'match')
        # Calling match(args, kwargs) (line 352)
        match_call_result_124581 = invoke(stypy.reporting.localization.Localization(__file__, 352, 16), match_124577, *[str_124578, s_124579], **kwargs_124580)
        
        # Assigning a type to the variable 'match' (line 352)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 352, 8), 'match', match_call_result_124581)
        
        # Type idiom detected: calculating its left and rigth part (line 353)
        # Getting the type of 'match' (line 353)
        match_124582 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 353, 8), 'match')
        # Getting the type of 'None' (line 353)
        None_124583 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 353, 24), 'None')
        
        (may_be_124584, more_types_in_union_124585) = may_not_be_none(match_124582, None_124583)

        if may_be_124584:

            if more_types_in_union_124585:
                # Runtime conditional SSA (line 353)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Call to ValueError(...): (line 354)
            # Processing the call arguments (line 354)
            
            # Call to format(...): (line 354)
            # Processing the call keyword arguments (line 354)
            # Getting the type of 's' (line 355)
            s_124589 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 355, 53), 's', False)
            keyword_124590 = s_124589
            kwargs_124591 = {'cn': keyword_124590}
            unicode_124587 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 354, 29), 'unicode', u'Can not put cycle reference ({cn!r}) in prop_cycler')
            # Obtaining the member 'format' of a type (line 354)
            format_124588 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 29), unicode_124587, 'format')
            # Calling format(args, kwargs) (line 354)
            format_call_result_124592 = invoke(stypy.reporting.localization.Localization(__file__, 354, 29), format_124588, *[], **kwargs_124591)
            
            # Processing the call keyword arguments (line 354)
            kwargs_124593 = {}
            # Getting the type of 'ValueError' (line 354)
            ValueError_124586 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 18), 'ValueError', False)
            # Calling ValueError(args, kwargs) (line 354)
            ValueError_call_result_124594 = invoke(stypy.reporting.localization.Localization(__file__, 354, 18), ValueError_124586, *[format_call_result_124592], **kwargs_124593)
            
            ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 354, 12), ValueError_call_result_124594, 'raise parameter', BaseException)

            if more_types_in_union_124585:
                # SSA join for if statement (line 353)
                module_type_store = module_type_store.join_ssa_context()


        

        if more_types_in_union_124575:
            # Runtime conditional SSA for else branch (line 351)
            module_type_store.open_ssa_branch('idiom else')



    if ((not may_be_124574) or more_types_in_union_124575):
        # Assigning a type to the variable 's' (line 351)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 351, 4), 's', remove_subtype_from_union(s_124573, bytes))
        
        
        # Call to isinstance(...): (line 356)
        # Processing the call arguments (line 356)
        # Getting the type of 's' (line 356)
        s_124596 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 356, 20), 's', False)
        # Getting the type of 'six' (line 356)
        six_124597 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 356, 23), 'six', False)
        # Obtaining the member 'string_types' of a type (line 356)
        string_types_124598 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 356, 23), six_124597, 'string_types')
        # Processing the call keyword arguments (line 356)
        kwargs_124599 = {}
        # Getting the type of 'isinstance' (line 356)
        isinstance_124595 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 356, 9), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 356)
        isinstance_call_result_124600 = invoke(stypy.reporting.localization.Localization(__file__, 356, 9), isinstance_124595, *[s_124596, string_types_124598], **kwargs_124599)
        
        # Testing the type of an if condition (line 356)
        if_condition_124601 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 356, 9), isinstance_call_result_124600)
        # Assigning a type to the variable 'if_condition_124601' (line 356)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 356, 9), 'if_condition_124601', if_condition_124601)
        # SSA begins for if statement (line 356)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 357):
        
        # Call to match(...): (line 357)
        # Processing the call arguments (line 357)
        unicode_124604 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 357, 25), 'unicode', u'^C[0-9]$')
        # Getting the type of 's' (line 357)
        s_124605 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 37), 's', False)
        # Processing the call keyword arguments (line 357)
        kwargs_124606 = {}
        # Getting the type of 're' (line 357)
        re_124602 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 16), 're', False)
        # Obtaining the member 'match' of a type (line 357)
        match_124603 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 16), re_124602, 'match')
        # Calling match(args, kwargs) (line 357)
        match_call_result_124607 = invoke(stypy.reporting.localization.Localization(__file__, 357, 16), match_124603, *[unicode_124604, s_124605], **kwargs_124606)
        
        # Assigning a type to the variable 'match' (line 357)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 357, 8), 'match', match_call_result_124607)
        
        # Type idiom detected: calculating its left and rigth part (line 358)
        # Getting the type of 'match' (line 358)
        match_124608 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 358, 8), 'match')
        # Getting the type of 'None' (line 358)
        None_124609 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 358, 24), 'None')
        
        (may_be_124610, more_types_in_union_124611) = may_not_be_none(match_124608, None_124609)

        if may_be_124610:

            if more_types_in_union_124611:
                # Runtime conditional SSA (line 358)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Call to ValueError(...): (line 359)
            # Processing the call arguments (line 359)
            
            # Call to format(...): (line 359)
            # Processing the call keyword arguments (line 359)
            # Getting the type of 's' (line 360)
            s_124615 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 360, 53), 's', False)
            keyword_124616 = s_124615
            kwargs_124617 = {'cn': keyword_124616}
            unicode_124613 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 359, 29), 'unicode', u'Can not put cycle reference ({cn!r}) in prop_cycler')
            # Obtaining the member 'format' of a type (line 359)
            format_124614 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 359, 29), unicode_124613, 'format')
            # Calling format(args, kwargs) (line 359)
            format_call_result_124618 = invoke(stypy.reporting.localization.Localization(__file__, 359, 29), format_124614, *[], **kwargs_124617)
            
            # Processing the call keyword arguments (line 359)
            kwargs_124619 = {}
            # Getting the type of 'ValueError' (line 359)
            ValueError_124612 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 359, 18), 'ValueError', False)
            # Calling ValueError(args, kwargs) (line 359)
            ValueError_call_result_124620 = invoke(stypy.reporting.localization.Localization(__file__, 359, 18), ValueError_124612, *[format_call_result_124618], **kwargs_124619)
            
            ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 359, 12), ValueError_call_result_124620, 'raise parameter', BaseException)

            if more_types_in_union_124611:
                # SSA join for if statement (line 358)
                module_type_store = module_type_store.join_ssa_context()


        
        # SSA join for if statement (line 356)
        module_type_store = module_type_store.join_ssa_context()
        

        if (may_be_124574 and more_types_in_union_124575):
            # SSA join for if statement (line 351)
            module_type_store = module_type_store.join_ssa_context()


    
    
    # Call to validate_color(...): (line 361)
    # Processing the call arguments (line 361)
    # Getting the type of 's' (line 361)
    s_124622 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 361, 26), 's', False)
    # Processing the call keyword arguments (line 361)
    kwargs_124623 = {}
    # Getting the type of 'validate_color' (line 361)
    validate_color_124621 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 361, 11), 'validate_color', False)
    # Calling validate_color(args, kwargs) (line 361)
    validate_color_call_result_124624 = invoke(stypy.reporting.localization.Localization(__file__, 361, 11), validate_color_124621, *[s_124622], **kwargs_124623)
    
    # Assigning a type to the variable 'stypy_return_type' (line 361)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 361, 4), 'stypy_return_type', validate_color_call_result_124624)
    
    # ################# End of 'validate_color_for_prop_cycle(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'validate_color_for_prop_cycle' in the type store
    # Getting the type of 'stypy_return_type' (line 348)
    stypy_return_type_124625 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 348, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_124625)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'validate_color_for_prop_cycle'
    return stypy_return_type_124625

# Assigning a type to the variable 'validate_color_for_prop_cycle' (line 348)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 348, 0), 'validate_color_for_prop_cycle', validate_color_for_prop_cycle)

@norecursion
def validate_color(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'validate_color'
    module_type_store = module_type_store.open_function_context('validate_color', 364, 0, False)
    
    # Passed parameters checking function
    validate_color.stypy_localization = localization
    validate_color.stypy_type_of_self = None
    validate_color.stypy_type_store = module_type_store
    validate_color.stypy_function_name = 'validate_color'
    validate_color.stypy_param_names_list = ['s']
    validate_color.stypy_varargs_param_name = None
    validate_color.stypy_kwargs_param_name = None
    validate_color.stypy_call_defaults = defaults
    validate_color.stypy_call_varargs = varargs
    validate_color.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'validate_color', ['s'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'validate_color', localization, ['s'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'validate_color(...)' code ##################

    unicode_124626 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 365, 4), 'unicode', u'return a valid color arg')
    
    
    # SSA begins for try-except statement (line 366)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
    
    
    
    # Call to lower(...): (line 367)
    # Processing the call keyword arguments (line 367)
    kwargs_124629 = {}
    # Getting the type of 's' (line 367)
    s_124627 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 367, 11), 's', False)
    # Obtaining the member 'lower' of a type (line 367)
    lower_124628 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 367, 11), s_124627, 'lower')
    # Calling lower(args, kwargs) (line 367)
    lower_call_result_124630 = invoke(stypy.reporting.localization.Localization(__file__, 367, 11), lower_124628, *[], **kwargs_124629)
    
    unicode_124631 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 367, 24), 'unicode', u'none')
    # Applying the binary operator '==' (line 367)
    result_eq_124632 = python_operator(stypy.reporting.localization.Localization(__file__, 367, 11), '==', lower_call_result_124630, unicode_124631)
    
    # Testing the type of an if condition (line 367)
    if_condition_124633 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 367, 8), result_eq_124632)
    # Assigning a type to the variable 'if_condition_124633' (line 367)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 367, 8), 'if_condition_124633', if_condition_124633)
    # SSA begins for if statement (line 367)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    unicode_124634 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 368, 19), 'unicode', u'none')
    # Assigning a type to the variable 'stypy_return_type' (line 368)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 368, 12), 'stypy_return_type', unicode_124634)
    # SSA join for if statement (line 367)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the except part of a try statement (line 366)
    # SSA branch for the except 'AttributeError' branch of a try statement (line 366)
    module_type_store.open_ssa_branch('except')
    pass
    # SSA join for try-except statement (line 366)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Call to isinstance(...): (line 372)
    # Processing the call arguments (line 372)
    # Getting the type of 's' (line 372)
    s_124636 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 372, 18), 's', False)
    # Getting the type of 'six' (line 372)
    six_124637 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 372, 21), 'six', False)
    # Obtaining the member 'string_types' of a type (line 372)
    string_types_124638 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 372, 21), six_124637, 'string_types')
    # Processing the call keyword arguments (line 372)
    kwargs_124639 = {}
    # Getting the type of 'isinstance' (line 372)
    isinstance_124635 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 372, 7), 'isinstance', False)
    # Calling isinstance(args, kwargs) (line 372)
    isinstance_call_result_124640 = invoke(stypy.reporting.localization.Localization(__file__, 372, 7), isinstance_124635, *[s_124636, string_types_124638], **kwargs_124639)
    
    # Testing the type of an if condition (line 372)
    if_condition_124641 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 372, 4), isinstance_call_result_124640)
    # Assigning a type to the variable 'if_condition_124641' (line 372)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 372, 4), 'if_condition_124641', if_condition_124641)
    # SSA begins for if statement (line 372)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Evaluating a boolean operation
    
    
    # Call to len(...): (line 373)
    # Processing the call arguments (line 373)
    # Getting the type of 's' (line 373)
    s_124643 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 373, 15), 's', False)
    # Processing the call keyword arguments (line 373)
    kwargs_124644 = {}
    # Getting the type of 'len' (line 373)
    len_124642 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 373, 11), 'len', False)
    # Calling len(args, kwargs) (line 373)
    len_call_result_124645 = invoke(stypy.reporting.localization.Localization(__file__, 373, 11), len_124642, *[s_124643], **kwargs_124644)
    
    int_124646 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 373, 21), 'int')
    # Applying the binary operator '==' (line 373)
    result_eq_124647 = python_operator(stypy.reporting.localization.Localization(__file__, 373, 11), '==', len_call_result_124645, int_124646)
    
    
    
    # Call to len(...): (line 373)
    # Processing the call arguments (line 373)
    # Getting the type of 's' (line 373)
    s_124649 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 373, 30), 's', False)
    # Processing the call keyword arguments (line 373)
    kwargs_124650 = {}
    # Getting the type of 'len' (line 373)
    len_124648 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 373, 26), 'len', False)
    # Calling len(args, kwargs) (line 373)
    len_call_result_124651 = invoke(stypy.reporting.localization.Localization(__file__, 373, 26), len_124648, *[s_124649], **kwargs_124650)
    
    int_124652 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 373, 36), 'int')
    # Applying the binary operator '==' (line 373)
    result_eq_124653 = python_operator(stypy.reporting.localization.Localization(__file__, 373, 26), '==', len_call_result_124651, int_124652)
    
    # Applying the binary operator 'or' (line 373)
    result_or_keyword_124654 = python_operator(stypy.reporting.localization.Localization(__file__, 373, 11), 'or', result_eq_124647, result_eq_124653)
    
    # Testing the type of an if condition (line 373)
    if_condition_124655 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 373, 8), result_or_keyword_124654)
    # Assigning a type to the variable 'if_condition_124655' (line 373)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 373, 8), 'if_condition_124655', if_condition_124655)
    # SSA begins for if statement (line 373)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 374):
    unicode_124656 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 374, 19), 'unicode', u'#')
    # Getting the type of 's' (line 374)
    s_124657 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 374, 25), 's')
    # Applying the binary operator '+' (line 374)
    result_add_124658 = python_operator(stypy.reporting.localization.Localization(__file__, 374, 19), '+', unicode_124656, s_124657)
    
    # Assigning a type to the variable 'stmp' (line 374)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 374, 12), 'stmp', result_add_124658)
    
    
    # Call to is_color_like(...): (line 375)
    # Processing the call arguments (line 375)
    # Getting the type of 'stmp' (line 375)
    stmp_124660 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 375, 29), 'stmp', False)
    # Processing the call keyword arguments (line 375)
    kwargs_124661 = {}
    # Getting the type of 'is_color_like' (line 375)
    is_color_like_124659 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 375, 15), 'is_color_like', False)
    # Calling is_color_like(args, kwargs) (line 375)
    is_color_like_call_result_124662 = invoke(stypy.reporting.localization.Localization(__file__, 375, 15), is_color_like_124659, *[stmp_124660], **kwargs_124661)
    
    # Testing the type of an if condition (line 375)
    if_condition_124663 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 375, 12), is_color_like_call_result_124662)
    # Assigning a type to the variable 'if_condition_124663' (line 375)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 375, 12), 'if_condition_124663', if_condition_124663)
    # SSA begins for if statement (line 375)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Getting the type of 'stmp' (line 376)
    stmp_124664 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 376, 23), 'stmp')
    # Assigning a type to the variable 'stypy_return_type' (line 376)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 376, 16), 'stypy_return_type', stmp_124664)
    # SSA join for if statement (line 375)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 373)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 372)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Call to is_color_like(...): (line 378)
    # Processing the call arguments (line 378)
    # Getting the type of 's' (line 378)
    s_124666 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 378, 21), 's', False)
    # Processing the call keyword arguments (line 378)
    kwargs_124667 = {}
    # Getting the type of 'is_color_like' (line 378)
    is_color_like_124665 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 378, 7), 'is_color_like', False)
    # Calling is_color_like(args, kwargs) (line 378)
    is_color_like_call_result_124668 = invoke(stypy.reporting.localization.Localization(__file__, 378, 7), is_color_like_124665, *[s_124666], **kwargs_124667)
    
    # Testing the type of an if condition (line 378)
    if_condition_124669 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 378, 4), is_color_like_call_result_124668)
    # Assigning a type to the variable 'if_condition_124669' (line 378)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 378, 4), 'if_condition_124669', if_condition_124669)
    # SSA begins for if statement (line 378)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Getting the type of 's' (line 379)
    s_124670 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 15), 's')
    # Assigning a type to the variable 'stypy_return_type' (line 379)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 379, 8), 'stypy_return_type', s_124670)
    # SSA join for if statement (line 378)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Name to a Name (line 382):
    # Getting the type of 's' (line 382)
    s_124671 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 382, 15), 's')
    # Assigning a type to the variable 'colorarg' (line 382)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 382, 4), 'colorarg', s_124671)
    
    # Assigning a Str to a Name (line 383):
    unicode_124672 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 383, 10), 'unicode', u'')
    # Assigning a type to the variable 'msg' (line 383)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 383, 4), 'msg', unicode_124672)
    
    
    
    # Call to find(...): (line 384)
    # Processing the call arguments (line 384)
    unicode_124675 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 384, 14), 'unicode', u',')
    # Processing the call keyword arguments (line 384)
    kwargs_124676 = {}
    # Getting the type of 's' (line 384)
    s_124673 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 384, 7), 's', False)
    # Obtaining the member 'find' of a type (line 384)
    find_124674 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 384, 7), s_124673, 'find')
    # Calling find(args, kwargs) (line 384)
    find_call_result_124677 = invoke(stypy.reporting.localization.Localization(__file__, 384, 7), find_124674, *[unicode_124675], **kwargs_124676)
    
    int_124678 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 384, 22), 'int')
    # Applying the binary operator '>=' (line 384)
    result_ge_124679 = python_operator(stypy.reporting.localization.Localization(__file__, 384, 7), '>=', find_call_result_124677, int_124678)
    
    # Testing the type of an if condition (line 384)
    if_condition_124680 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 384, 4), result_ge_124679)
    # Assigning a type to the variable 'if_condition_124680' (line 384)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 384, 4), 'if_condition_124680', if_condition_124680)
    # SSA begins for if statement (line 384)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 386):
    
    # Call to join(...): (line 386)
    # Processing the call arguments (line 386)
    # Calculating list comprehension
    # Calculating comprehension expression
    # Getting the type of 's' (line 386)
    s_124696 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 386, 35), 's', False)
    comprehension_124697 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 386, 24), s_124696)
    # Assigning a type to the variable 'c' (line 386)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 386, 24), 'c', comprehension_124697)
    
    # Evaluating a boolean operation
    
    # Call to isdigit(...): (line 386)
    # Processing the call keyword arguments (line 386)
    kwargs_124686 = {}
    # Getting the type of 'c' (line 386)
    c_124684 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 386, 40), 'c', False)
    # Obtaining the member 'isdigit' of a type (line 386)
    isdigit_124685 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 386, 40), c_124684, 'isdigit')
    # Calling isdigit(args, kwargs) (line 386)
    isdigit_call_result_124687 = invoke(stypy.reporting.localization.Localization(__file__, 386, 40), isdigit_124685, *[], **kwargs_124686)
    
    
    # Getting the type of 'c' (line 386)
    c_124688 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 386, 55), 'c', False)
    unicode_124689 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 386, 60), 'unicode', u'.')
    # Applying the binary operator '==' (line 386)
    result_eq_124690 = python_operator(stypy.reporting.localization.Localization(__file__, 386, 55), '==', c_124688, unicode_124689)
    
    # Applying the binary operator 'or' (line 386)
    result_or_keyword_124691 = python_operator(stypy.reporting.localization.Localization(__file__, 386, 40), 'or', isdigit_call_result_124687, result_eq_124690)
    
    # Getting the type of 'c' (line 386)
    c_124692 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 386, 67), 'c', False)
    unicode_124693 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 386, 72), 'unicode', u',')
    # Applying the binary operator '==' (line 386)
    result_eq_124694 = python_operator(stypy.reporting.localization.Localization(__file__, 386, 67), '==', c_124692, unicode_124693)
    
    # Applying the binary operator 'or' (line 386)
    result_or_keyword_124695 = python_operator(stypy.reporting.localization.Localization(__file__, 386, 40), 'or', result_or_keyword_124691, result_eq_124694)
    
    # Getting the type of 'c' (line 386)
    c_124683 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 386, 24), 'c', False)
    list_124698 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 386, 24), 'list')
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 386, 24), list_124698, c_124683)
    # Processing the call keyword arguments (line 386)
    kwargs_124699 = {}
    unicode_124681 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 386, 15), 'unicode', u'')
    # Obtaining the member 'join' of a type (line 386)
    join_124682 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 386, 15), unicode_124681, 'join')
    # Calling join(args, kwargs) (line 386)
    join_call_result_124700 = invoke(stypy.reporting.localization.Localization(__file__, 386, 15), join_124682, *[list_124698], **kwargs_124699)
    
    # Assigning a type to the variable 'stmp' (line 386)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 386, 8), 'stmp', join_call_result_124700)
    
    # Assigning a Call to a Name (line 387):
    
    # Call to split(...): (line 387)
    # Processing the call arguments (line 387)
    unicode_124703 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 387, 26), 'unicode', u',')
    # Processing the call keyword arguments (line 387)
    kwargs_124704 = {}
    # Getting the type of 'stmp' (line 387)
    stmp_124701 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 387, 15), 'stmp', False)
    # Obtaining the member 'split' of a type (line 387)
    split_124702 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 387, 15), stmp_124701, 'split')
    # Calling split(args, kwargs) (line 387)
    split_call_result_124705 = invoke(stypy.reporting.localization.Localization(__file__, 387, 15), split_124702, *[unicode_124703], **kwargs_124704)
    
    # Assigning a type to the variable 'vals' (line 387)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 387, 8), 'vals', split_call_result_124705)
    
    
    
    # Call to len(...): (line 388)
    # Processing the call arguments (line 388)
    # Getting the type of 'vals' (line 388)
    vals_124707 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 388, 15), 'vals', False)
    # Processing the call keyword arguments (line 388)
    kwargs_124708 = {}
    # Getting the type of 'len' (line 388)
    len_124706 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 388, 11), 'len', False)
    # Calling len(args, kwargs) (line 388)
    len_call_result_124709 = invoke(stypy.reporting.localization.Localization(__file__, 388, 11), len_124706, *[vals_124707], **kwargs_124708)
    
    
    # Obtaining an instance of the builtin type 'list' (line 388)
    list_124710 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 388, 28), 'list')
    # Adding type elements to the builtin type 'list' instance (line 388)
    # Adding element type (line 388)
    int_124711 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 388, 29), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 388, 28), list_124710, int_124711)
    # Adding element type (line 388)
    int_124712 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 388, 32), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 388, 28), list_124710, int_124712)
    
    # Applying the binary operator 'notin' (line 388)
    result_contains_124713 = python_operator(stypy.reporting.localization.Localization(__file__, 388, 11), 'notin', len_call_result_124709, list_124710)
    
    # Testing the type of an if condition (line 388)
    if_condition_124714 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 388, 8), result_contains_124713)
    # Assigning a type to the variable 'if_condition_124714' (line 388)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 388, 8), 'if_condition_124714', if_condition_124714)
    # SSA begins for if statement (line 388)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Str to a Name (line 389):
    unicode_124715 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 389, 18), 'unicode', u'\nColor tuples must be of length 3 or 4')
    # Assigning a type to the variable 'msg' (line 389)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 389, 12), 'msg', unicode_124715)
    # SSA branch for the else part of an if statement (line 388)
    module_type_store.open_ssa_branch('else')
    
    
    # SSA begins for try-except statement (line 391)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
    
    # Assigning a ListComp to a Name (line 392):
    # Calculating list comprehension
    # Calculating comprehension expression
    # Getting the type of 'vals' (line 392)
    vals_124720 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 50), 'vals')
    comprehension_124721 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 392, 28), vals_124720)
    # Assigning a type to the variable 'val' (line 392)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 392, 28), 'val', comprehension_124721)
    
    # Call to float(...): (line 392)
    # Processing the call arguments (line 392)
    # Getting the type of 'val' (line 392)
    val_124717 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 34), 'val', False)
    # Processing the call keyword arguments (line 392)
    kwargs_124718 = {}
    # Getting the type of 'float' (line 392)
    float_124716 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 28), 'float', False)
    # Calling float(args, kwargs) (line 392)
    float_call_result_124719 = invoke(stypy.reporting.localization.Localization(__file__, 392, 28), float_124716, *[val_124717], **kwargs_124718)
    
    list_124722 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 392, 28), 'list')
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 392, 28), list_124722, float_call_result_124719)
    # Assigning a type to the variable 'colorarg' (line 392)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 392, 16), 'colorarg', list_124722)
    # SSA branch for the except part of a try statement (line 391)
    # SSA branch for the except 'ValueError' branch of a try statement (line 391)
    module_type_store.open_ssa_branch('except')
    
    # Assigning a Str to a Name (line 394):
    unicode_124723 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 394, 22), 'unicode', u'\nCould not convert all entries to floats')
    # Assigning a type to the variable 'msg' (line 394)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 394, 16), 'msg', unicode_124723)
    # SSA join for try-except statement (line 391)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 388)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 384)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'msg' (line 396)
    msg_124724 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 396, 11), 'msg')
    # Applying the 'not' unary operator (line 396)
    result_not__124725 = python_operator(stypy.reporting.localization.Localization(__file__, 396, 7), 'not', msg_124724)
    
    
    # Call to is_color_like(...): (line 396)
    # Processing the call arguments (line 396)
    # Getting the type of 'colorarg' (line 396)
    colorarg_124727 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 396, 33), 'colorarg', False)
    # Processing the call keyword arguments (line 396)
    kwargs_124728 = {}
    # Getting the type of 'is_color_like' (line 396)
    is_color_like_124726 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 396, 19), 'is_color_like', False)
    # Calling is_color_like(args, kwargs) (line 396)
    is_color_like_call_result_124729 = invoke(stypy.reporting.localization.Localization(__file__, 396, 19), is_color_like_124726, *[colorarg_124727], **kwargs_124728)
    
    # Applying the binary operator 'and' (line 396)
    result_and_keyword_124730 = python_operator(stypy.reporting.localization.Localization(__file__, 396, 7), 'and', result_not__124725, is_color_like_call_result_124729)
    
    # Testing the type of an if condition (line 396)
    if_condition_124731 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 396, 4), result_and_keyword_124730)
    # Assigning a type to the variable 'if_condition_124731' (line 396)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 396, 4), 'if_condition_124731', if_condition_124731)
    # SSA begins for if statement (line 396)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Getting the type of 'colorarg' (line 397)
    colorarg_124732 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 397, 15), 'colorarg')
    # Assigning a type to the variable 'stypy_return_type' (line 397)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 397, 8), 'stypy_return_type', colorarg_124732)
    # SSA join for if statement (line 396)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Call to ValueError(...): (line 399)
    # Processing the call arguments (line 399)
    unicode_124734 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 399, 21), 'unicode', u'%s does not look like a color arg%s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 399)
    tuple_124735 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 399, 62), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 399)
    # Adding element type (line 399)
    # Getting the type of 's' (line 399)
    s_124736 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 399, 62), 's', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 399, 62), tuple_124735, s_124736)
    # Adding element type (line 399)
    # Getting the type of 'msg' (line 399)
    msg_124737 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 399, 65), 'msg', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 399, 62), tuple_124735, msg_124737)
    
    # Applying the binary operator '%' (line 399)
    result_mod_124738 = python_operator(stypy.reporting.localization.Localization(__file__, 399, 21), '%', unicode_124734, tuple_124735)
    
    # Processing the call keyword arguments (line 399)
    kwargs_124739 = {}
    # Getting the type of 'ValueError' (line 399)
    ValueError_124733 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 399, 10), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 399)
    ValueError_call_result_124740 = invoke(stypy.reporting.localization.Localization(__file__, 399, 10), ValueError_124733, *[result_mod_124738], **kwargs_124739)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 399, 4), ValueError_call_result_124740, 'raise parameter', BaseException)
    
    # ################# End of 'validate_color(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'validate_color' in the type store
    # Getting the type of 'stypy_return_type' (line 364)
    stypy_return_type_124741 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 364, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_124741)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'validate_color'
    return stypy_return_type_124741

# Assigning a type to the variable 'validate_color' (line 364)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 364, 0), 'validate_color', validate_color)

@norecursion
def deprecate_axes_colorcycle(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'deprecate_axes_colorcycle'
    module_type_store = module_type_store.open_function_context('deprecate_axes_colorcycle', 402, 0, False)
    
    # Passed parameters checking function
    deprecate_axes_colorcycle.stypy_localization = localization
    deprecate_axes_colorcycle.stypy_type_of_self = None
    deprecate_axes_colorcycle.stypy_type_store = module_type_store
    deprecate_axes_colorcycle.stypy_function_name = 'deprecate_axes_colorcycle'
    deprecate_axes_colorcycle.stypy_param_names_list = ['value']
    deprecate_axes_colorcycle.stypy_varargs_param_name = None
    deprecate_axes_colorcycle.stypy_kwargs_param_name = None
    deprecate_axes_colorcycle.stypy_call_defaults = defaults
    deprecate_axes_colorcycle.stypy_call_varargs = varargs
    deprecate_axes_colorcycle.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'deprecate_axes_colorcycle', ['value'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'deprecate_axes_colorcycle', localization, ['value'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'deprecate_axes_colorcycle(...)' code ##################

    
    # Call to warn(...): (line 403)
    # Processing the call arguments (line 403)
    unicode_124744 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 403, 18), 'unicode', u'axes.color_cycle is deprecated.  Use axes.prop_cycle instead. Will be removed in 2.1.0')
    # Getting the type of 'mplDeprecation' (line 405)
    mplDeprecation_124745 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 405, 18), 'mplDeprecation', False)
    # Processing the call keyword arguments (line 403)
    kwargs_124746 = {}
    # Getting the type of 'warnings' (line 403)
    warnings_124742 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 403, 4), 'warnings', False)
    # Obtaining the member 'warn' of a type (line 403)
    warn_124743 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 403, 4), warnings_124742, 'warn')
    # Calling warn(args, kwargs) (line 403)
    warn_call_result_124747 = invoke(stypy.reporting.localization.Localization(__file__, 403, 4), warn_124743, *[unicode_124744, mplDeprecation_124745], **kwargs_124746)
    
    
    # Call to validate_colorlist(...): (line 406)
    # Processing the call arguments (line 406)
    # Getting the type of 'value' (line 406)
    value_124749 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 406, 30), 'value', False)
    # Processing the call keyword arguments (line 406)
    kwargs_124750 = {}
    # Getting the type of 'validate_colorlist' (line 406)
    validate_colorlist_124748 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 406, 11), 'validate_colorlist', False)
    # Calling validate_colorlist(args, kwargs) (line 406)
    validate_colorlist_call_result_124751 = invoke(stypy.reporting.localization.Localization(__file__, 406, 11), validate_colorlist_124748, *[value_124749], **kwargs_124750)
    
    # Assigning a type to the variable 'stypy_return_type' (line 406)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 406, 4), 'stypy_return_type', validate_colorlist_call_result_124751)
    
    # ################# End of 'deprecate_axes_colorcycle(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'deprecate_axes_colorcycle' in the type store
    # Getting the type of 'stypy_return_type' (line 402)
    stypy_return_type_124752 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 402, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_124752)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'deprecate_axes_colorcycle'
    return stypy_return_type_124752

# Assigning a type to the variable 'deprecate_axes_colorcycle' (line 402)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 402, 0), 'deprecate_axes_colorcycle', deprecate_axes_colorcycle)

# Assigning a Call to a Name (line 409):

# Call to _listify_validator(...): (line 409)
# Processing the call arguments (line 409)
# Getting the type of 'validate_color' (line 409)
validate_color_124754 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 409, 40), 'validate_color', False)
# Processing the call keyword arguments (line 409)
# Getting the type of 'True' (line 409)
True_124755 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 409, 73), 'True', False)
keyword_124756 = True_124755
kwargs_124757 = {'allow_stringlist': keyword_124756}
# Getting the type of '_listify_validator' (line 409)
_listify_validator_124753 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 409, 21), '_listify_validator', False)
# Calling _listify_validator(args, kwargs) (line 409)
_listify_validator_call_result_124758 = invoke(stypy.reporting.localization.Localization(__file__, 409, 21), _listify_validator_124753, *[validate_color_124754], **kwargs_124757)

# Assigning a type to the variable 'validate_colorlist' (line 409)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 409, 0), 'validate_colorlist', _listify_validator_call_result_124758)

# Assigning a Str to a Attribute (line 410):
unicode_124759 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 410, 29), 'unicode', u'return a list of colorspecs')
# Getting the type of 'validate_colorlist' (line 410)
validate_colorlist_124760 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 410, 0), 'validate_colorlist')
# Setting the type of the member '__doc__' of a type (line 410)
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 410, 0), validate_colorlist_124760, '__doc__', unicode_124759)

# Assigning a Call to a Name (line 412):

# Call to _listify_validator(...): (line 412)
# Processing the call arguments (line 412)
# Getting the type of 'six' (line 412)
six_124762 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 412, 41), 'six', False)
# Obtaining the member 'text_type' of a type (line 412)
text_type_124763 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 412, 41), six_124762, 'text_type')
# Processing the call keyword arguments (line 412)
kwargs_124764 = {}
# Getting the type of '_listify_validator' (line 412)
_listify_validator_124761 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 412, 22), '_listify_validator', False)
# Calling _listify_validator(args, kwargs) (line 412)
_listify_validator_call_result_124765 = invoke(stypy.reporting.localization.Localization(__file__, 412, 22), _listify_validator_124761, *[text_type_124763], **kwargs_124764)

# Assigning a type to the variable 'validate_stringlist' (line 412)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 412, 0), 'validate_stringlist', _listify_validator_call_result_124765)

# Assigning a Str to a Attribute (line 413):
unicode_124766 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 413, 30), 'unicode', u'return a list')
# Getting the type of 'validate_stringlist' (line 413)
validate_stringlist_124767 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 413, 0), 'validate_stringlist')
# Setting the type of the member '__doc__' of a type (line 413)
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 413, 0), validate_stringlist_124767, '__doc__', unicode_124766)

# Assigning a Call to a Name (line 415):

# Call to ValidateInStrings(...): (line 415)
# Processing the call arguments (line 415)
unicode_124769 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 416, 4), 'unicode', u'orientation')

# Obtaining an instance of the builtin type 'list' (line 416)
list_124770 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 416, 19), 'list')
# Adding type elements to the builtin type 'list' instance (line 416)
# Adding element type (line 416)
unicode_124771 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 416, 20), 'unicode', u'landscape')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 416, 19), list_124770, unicode_124771)
# Adding element type (line 416)
unicode_124772 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 416, 33), 'unicode', u'portrait')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 416, 19), list_124770, unicode_124772)

# Processing the call keyword arguments (line 415)
kwargs_124773 = {}
# Getting the type of 'ValidateInStrings' (line 415)
ValidateInStrings_124768 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 415, 23), 'ValidateInStrings', False)
# Calling ValidateInStrings(args, kwargs) (line 415)
ValidateInStrings_call_result_124774 = invoke(stypy.reporting.localization.Localization(__file__, 415, 23), ValidateInStrings_124768, *[unicode_124769, list_124770], **kwargs_124773)

# Assigning a type to the variable 'validate_orientation' (line 415)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 415, 0), 'validate_orientation', ValidateInStrings_call_result_124774)

@norecursion
def validate_aspect(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'validate_aspect'
    module_type_store = module_type_store.open_function_context('validate_aspect', 419, 0, False)
    
    # Passed parameters checking function
    validate_aspect.stypy_localization = localization
    validate_aspect.stypy_type_of_self = None
    validate_aspect.stypy_type_store = module_type_store
    validate_aspect.stypy_function_name = 'validate_aspect'
    validate_aspect.stypy_param_names_list = ['s']
    validate_aspect.stypy_varargs_param_name = None
    validate_aspect.stypy_kwargs_param_name = None
    validate_aspect.stypy_call_defaults = defaults
    validate_aspect.stypy_call_varargs = varargs
    validate_aspect.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'validate_aspect', ['s'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'validate_aspect', localization, ['s'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'validate_aspect(...)' code ##################

    
    
    # Getting the type of 's' (line 420)
    s_124775 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 420, 7), 's')
    
    # Obtaining an instance of the builtin type 'tuple' (line 420)
    tuple_124776 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 420, 13), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 420)
    # Adding element type (line 420)
    unicode_124777 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 420, 13), 'unicode', u'auto')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 420, 13), tuple_124776, unicode_124777)
    # Adding element type (line 420)
    unicode_124778 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 420, 21), 'unicode', u'equal')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 420, 13), tuple_124776, unicode_124778)
    
    # Applying the binary operator 'in' (line 420)
    result_contains_124779 = python_operator(stypy.reporting.localization.Localization(__file__, 420, 7), 'in', s_124775, tuple_124776)
    
    # Testing the type of an if condition (line 420)
    if_condition_124780 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 420, 4), result_contains_124779)
    # Assigning a type to the variable 'if_condition_124780' (line 420)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 420, 4), 'if_condition_124780', if_condition_124780)
    # SSA begins for if statement (line 420)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Getting the type of 's' (line 421)
    s_124781 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 421, 15), 's')
    # Assigning a type to the variable 'stypy_return_type' (line 421)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 421, 8), 'stypy_return_type', s_124781)
    # SSA join for if statement (line 420)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # SSA begins for try-except statement (line 422)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
    
    # Call to float(...): (line 423)
    # Processing the call arguments (line 423)
    # Getting the type of 's' (line 423)
    s_124783 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 423, 21), 's', False)
    # Processing the call keyword arguments (line 423)
    kwargs_124784 = {}
    # Getting the type of 'float' (line 423)
    float_124782 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 423, 15), 'float', False)
    # Calling float(args, kwargs) (line 423)
    float_call_result_124785 = invoke(stypy.reporting.localization.Localization(__file__, 423, 15), float_124782, *[s_124783], **kwargs_124784)
    
    # Assigning a type to the variable 'stypy_return_type' (line 423)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 423, 8), 'stypy_return_type', float_call_result_124785)
    # SSA branch for the except part of a try statement (line 422)
    # SSA branch for the except 'ValueError' branch of a try statement (line 422)
    module_type_store.open_ssa_branch('except')
    
    # Call to ValueError(...): (line 425)
    # Processing the call arguments (line 425)
    unicode_124787 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 425, 25), 'unicode', u'not a valid aspect specification')
    # Processing the call keyword arguments (line 425)
    kwargs_124788 = {}
    # Getting the type of 'ValueError' (line 425)
    ValueError_124786 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 425, 14), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 425)
    ValueError_call_result_124789 = invoke(stypy.reporting.localization.Localization(__file__, 425, 14), ValueError_124786, *[unicode_124787], **kwargs_124788)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 425, 8), ValueError_call_result_124789, 'raise parameter', BaseException)
    # SSA join for try-except statement (line 422)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # ################# End of 'validate_aspect(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'validate_aspect' in the type store
    # Getting the type of 'stypy_return_type' (line 419)
    stypy_return_type_124790 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 419, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_124790)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'validate_aspect'
    return stypy_return_type_124790

# Assigning a type to the variable 'validate_aspect' (line 419)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 419, 0), 'validate_aspect', validate_aspect)

@norecursion
def validate_fontsize(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'validate_fontsize'
    module_type_store = module_type_store.open_function_context('validate_fontsize', 428, 0, False)
    
    # Passed parameters checking function
    validate_fontsize.stypy_localization = localization
    validate_fontsize.stypy_type_of_self = None
    validate_fontsize.stypy_type_store = module_type_store
    validate_fontsize.stypy_function_name = 'validate_fontsize'
    validate_fontsize.stypy_param_names_list = ['s']
    validate_fontsize.stypy_varargs_param_name = None
    validate_fontsize.stypy_kwargs_param_name = None
    validate_fontsize.stypy_call_defaults = defaults
    validate_fontsize.stypy_call_varargs = varargs
    validate_fontsize.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'validate_fontsize', ['s'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'validate_fontsize', localization, ['s'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'validate_fontsize(...)' code ##################

    
    # Assigning a List to a Name (line 429):
    
    # Obtaining an instance of the builtin type 'list' (line 429)
    list_124791 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 429, 16), 'list')
    # Adding type elements to the builtin type 'list' instance (line 429)
    # Adding element type (line 429)
    unicode_124792 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 429, 17), 'unicode', u'xx-small')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 429, 16), list_124791, unicode_124792)
    # Adding element type (line 429)
    unicode_124793 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 429, 29), 'unicode', u'x-small')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 429, 16), list_124791, unicode_124793)
    # Adding element type (line 429)
    unicode_124794 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 429, 40), 'unicode', u'small')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 429, 16), list_124791, unicode_124794)
    # Adding element type (line 429)
    unicode_124795 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 429, 49), 'unicode', u'medium')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 429, 16), list_124791, unicode_124795)
    # Adding element type (line 429)
    unicode_124796 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 429, 59), 'unicode', u'large')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 429, 16), list_124791, unicode_124796)
    # Adding element type (line 429)
    unicode_124797 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 430, 17), 'unicode', u'x-large')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 429, 16), list_124791, unicode_124797)
    # Adding element type (line 429)
    unicode_124798 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 430, 28), 'unicode', u'xx-large')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 429, 16), list_124791, unicode_124798)
    # Adding element type (line 429)
    unicode_124799 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 430, 40), 'unicode', u'smaller')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 429, 16), list_124791, unicode_124799)
    # Adding element type (line 429)
    unicode_124800 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 430, 51), 'unicode', u'larger')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 429, 16), list_124791, unicode_124800)
    
    # Assigning a type to the variable 'fontsizes' (line 429)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 429, 4), 'fontsizes', list_124791)
    
    
    # Call to isinstance(...): (line 431)
    # Processing the call arguments (line 431)
    # Getting the type of 's' (line 431)
    s_124802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 431, 18), 's', False)
    # Getting the type of 'six' (line 431)
    six_124803 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 431, 21), 'six', False)
    # Obtaining the member 'string_types' of a type (line 431)
    string_types_124804 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 431, 21), six_124803, 'string_types')
    # Processing the call keyword arguments (line 431)
    kwargs_124805 = {}
    # Getting the type of 'isinstance' (line 431)
    isinstance_124801 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 431, 7), 'isinstance', False)
    # Calling isinstance(args, kwargs) (line 431)
    isinstance_call_result_124806 = invoke(stypy.reporting.localization.Localization(__file__, 431, 7), isinstance_124801, *[s_124802, string_types_124804], **kwargs_124805)
    
    # Testing the type of an if condition (line 431)
    if_condition_124807 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 431, 4), isinstance_call_result_124806)
    # Assigning a type to the variable 'if_condition_124807' (line 431)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 431, 4), 'if_condition_124807', if_condition_124807)
    # SSA begins for if statement (line 431)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 432):
    
    # Call to lower(...): (line 432)
    # Processing the call keyword arguments (line 432)
    kwargs_124810 = {}
    # Getting the type of 's' (line 432)
    s_124808 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 432, 12), 's', False)
    # Obtaining the member 'lower' of a type (line 432)
    lower_124809 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 432, 12), s_124808, 'lower')
    # Calling lower(args, kwargs) (line 432)
    lower_call_result_124811 = invoke(stypy.reporting.localization.Localization(__file__, 432, 12), lower_124809, *[], **kwargs_124810)
    
    # Assigning a type to the variable 's' (line 432)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 432, 8), 's', lower_call_result_124811)
    # SSA join for if statement (line 431)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 's' (line 433)
    s_124812 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 433, 7), 's')
    # Getting the type of 'fontsizes' (line 433)
    fontsizes_124813 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 433, 12), 'fontsizes')
    # Applying the binary operator 'in' (line 433)
    result_contains_124814 = python_operator(stypy.reporting.localization.Localization(__file__, 433, 7), 'in', s_124812, fontsizes_124813)
    
    # Testing the type of an if condition (line 433)
    if_condition_124815 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 433, 4), result_contains_124814)
    # Assigning a type to the variable 'if_condition_124815' (line 433)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 433, 4), 'if_condition_124815', if_condition_124815)
    # SSA begins for if statement (line 433)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Getting the type of 's' (line 434)
    s_124816 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 434, 15), 's')
    # Assigning a type to the variable 'stypy_return_type' (line 434)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 434, 8), 'stypy_return_type', s_124816)
    # SSA join for if statement (line 433)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # SSA begins for try-except statement (line 435)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
    
    # Call to float(...): (line 436)
    # Processing the call arguments (line 436)
    # Getting the type of 's' (line 436)
    s_124818 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 436, 21), 's', False)
    # Processing the call keyword arguments (line 436)
    kwargs_124819 = {}
    # Getting the type of 'float' (line 436)
    float_124817 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 436, 15), 'float', False)
    # Calling float(args, kwargs) (line 436)
    float_call_result_124820 = invoke(stypy.reporting.localization.Localization(__file__, 436, 15), float_124817, *[s_124818], **kwargs_124819)
    
    # Assigning a type to the variable 'stypy_return_type' (line 436)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 436, 8), 'stypy_return_type', float_call_result_124820)
    # SSA branch for the except part of a try statement (line 435)
    # SSA branch for the except 'ValueError' branch of a try statement (line 435)
    module_type_store.open_ssa_branch('except')
    
    # Call to ValueError(...): (line 438)
    # Processing the call arguments (line 438)
    unicode_124822 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 438, 25), 'unicode', u'%s is not a valid font size. Valid font sizes are %s.')
    
    # Obtaining an instance of the builtin type 'tuple' (line 439)
    tuple_124823 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 439, 38), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 439)
    # Adding element type (line 439)
    # Getting the type of 's' (line 439)
    s_124824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 439, 38), 's', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 439, 38), tuple_124823, s_124824)
    # Adding element type (line 439)
    
    # Call to join(...): (line 439)
    # Processing the call arguments (line 439)
    # Getting the type of 'fontsizes' (line 439)
    fontsizes_124827 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 439, 51), 'fontsizes', False)
    # Processing the call keyword arguments (line 439)
    kwargs_124828 = {}
    unicode_124825 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 439, 41), 'unicode', u', ')
    # Obtaining the member 'join' of a type (line 439)
    join_124826 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 439, 41), unicode_124825, 'join')
    # Calling join(args, kwargs) (line 439)
    join_call_result_124829 = invoke(stypy.reporting.localization.Localization(__file__, 439, 41), join_124826, *[fontsizes_124827], **kwargs_124828)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 439, 38), tuple_124823, join_call_result_124829)
    
    # Applying the binary operator '%' (line 438)
    result_mod_124830 = python_operator(stypy.reporting.localization.Localization(__file__, 438, 25), '%', unicode_124822, tuple_124823)
    
    # Processing the call keyword arguments (line 438)
    kwargs_124831 = {}
    # Getting the type of 'ValueError' (line 438)
    ValueError_124821 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 438, 14), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 438)
    ValueError_call_result_124832 = invoke(stypy.reporting.localization.Localization(__file__, 438, 14), ValueError_124821, *[result_mod_124830], **kwargs_124831)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 438, 8), ValueError_call_result_124832, 'raise parameter', BaseException)
    # SSA join for try-except statement (line 435)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # ################# End of 'validate_fontsize(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'validate_fontsize' in the type store
    # Getting the type of 'stypy_return_type' (line 428)
    stypy_return_type_124833 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 428, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_124833)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'validate_fontsize'
    return stypy_return_type_124833

# Assigning a type to the variable 'validate_fontsize' (line 428)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 428, 0), 'validate_fontsize', validate_fontsize)

# Assigning a Call to a Name (line 442):

# Call to _listify_validator(...): (line 442)
# Processing the call arguments (line 442)
# Getting the type of 'validate_fontsize' (line 442)
validate_fontsize_124835 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 442, 43), 'validate_fontsize', False)
# Processing the call keyword arguments (line 442)
kwargs_124836 = {}
# Getting the type of '_listify_validator' (line 442)
_listify_validator_124834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 442, 24), '_listify_validator', False)
# Calling _listify_validator(args, kwargs) (line 442)
_listify_validator_call_result_124837 = invoke(stypy.reporting.localization.Localization(__file__, 442, 24), _listify_validator_124834, *[validate_fontsize_124835], **kwargs_124836)

# Assigning a type to the variable 'validate_fontsizelist' (line 442)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 442, 0), 'validate_fontsizelist', _listify_validator_call_result_124837)

@norecursion
def validate_font_properties(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'validate_font_properties'
    module_type_store = module_type_store.open_function_context('validate_font_properties', 445, 0, False)
    
    # Passed parameters checking function
    validate_font_properties.stypy_localization = localization
    validate_font_properties.stypy_type_of_self = None
    validate_font_properties.stypy_type_store = module_type_store
    validate_font_properties.stypy_function_name = 'validate_font_properties'
    validate_font_properties.stypy_param_names_list = ['s']
    validate_font_properties.stypy_varargs_param_name = None
    validate_font_properties.stypy_kwargs_param_name = None
    validate_font_properties.stypy_call_defaults = defaults
    validate_font_properties.stypy_call_varargs = varargs
    validate_font_properties.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'validate_font_properties', ['s'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'validate_font_properties', localization, ['s'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'validate_font_properties(...)' code ##################

    
    # Call to parse_fontconfig_pattern(...): (line 446)
    # Processing the call arguments (line 446)
    # Getting the type of 's' (line 446)
    s_124839 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 446, 29), 's', False)
    # Processing the call keyword arguments (line 446)
    kwargs_124840 = {}
    # Getting the type of 'parse_fontconfig_pattern' (line 446)
    parse_fontconfig_pattern_124838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 446, 4), 'parse_fontconfig_pattern', False)
    # Calling parse_fontconfig_pattern(args, kwargs) (line 446)
    parse_fontconfig_pattern_call_result_124841 = invoke(stypy.reporting.localization.Localization(__file__, 446, 4), parse_fontconfig_pattern_124838, *[s_124839], **kwargs_124840)
    
    # Getting the type of 's' (line 447)
    s_124842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 447, 11), 's')
    # Assigning a type to the variable 'stypy_return_type' (line 447)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 447, 4), 'stypy_return_type', s_124842)
    
    # ################# End of 'validate_font_properties(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'validate_font_properties' in the type store
    # Getting the type of 'stypy_return_type' (line 445)
    stypy_return_type_124843 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 445, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_124843)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'validate_font_properties'
    return stypy_return_type_124843

# Assigning a type to the variable 'validate_font_properties' (line 445)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 445, 0), 'validate_font_properties', validate_font_properties)

# Assigning a Call to a Name (line 450):

# Call to ValidateInStrings(...): (line 450)
# Processing the call arguments (line 450)
unicode_124845 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 451, 4), 'unicode', u'fontset')

# Obtaining an instance of the builtin type 'list' (line 452)
list_124846 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 452, 4), 'list')
# Adding type elements to the builtin type 'list' instance (line 452)
# Adding element type (line 452)
unicode_124847 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 452, 5), 'unicode', u'dejavusans')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 452, 4), list_124846, unicode_124847)
# Adding element type (line 452)
unicode_124848 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 452, 19), 'unicode', u'dejavuserif')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 452, 4), list_124846, unicode_124848)
# Adding element type (line 452)
unicode_124849 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 452, 34), 'unicode', u'cm')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 452, 4), list_124846, unicode_124849)
# Adding element type (line 452)
unicode_124850 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 452, 40), 'unicode', u'stix')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 452, 4), list_124846, unicode_124850)
# Adding element type (line 452)
unicode_124851 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 452, 48), 'unicode', u'stixsans')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 452, 4), list_124846, unicode_124851)
# Adding element type (line 452)
unicode_124852 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 452, 60), 'unicode', u'custom')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 452, 4), list_124846, unicode_124852)

# Processing the call keyword arguments (line 450)
kwargs_124853 = {}
# Getting the type of 'ValidateInStrings' (line 450)
ValidateInStrings_124844 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 450, 19), 'ValidateInStrings', False)
# Calling ValidateInStrings(args, kwargs) (line 450)
ValidateInStrings_call_result_124854 = invoke(stypy.reporting.localization.Localization(__file__, 450, 19), ValidateInStrings_124844, *[unicode_124845, list_124846], **kwargs_124853)

# Assigning a type to the variable 'validate_fontset' (line 450)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 450, 0), 'validate_fontset', ValidateInStrings_call_result_124854)

# Assigning a Call to a Name (line 454):

# Call to ValidateInStrings(...): (line 454)
# Processing the call arguments (line 454)
unicode_124856 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 455, 4), 'unicode', u'default')

# Call to split(...): (line 456)
# Processing the call keyword arguments (line 456)
kwargs_124859 = {}
unicode_124857 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 456, 4), 'unicode', u'rm cal it tt sf bf default bb frak circled scr regular')
# Obtaining the member 'split' of a type (line 456)
split_124858 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 456, 4), unicode_124857, 'split')
# Calling split(args, kwargs) (line 456)
split_call_result_124860 = invoke(stypy.reporting.localization.Localization(__file__, 456, 4), split_124858, *[], **kwargs_124859)

# Processing the call keyword arguments (line 454)
kwargs_124861 = {}
# Getting the type of 'ValidateInStrings' (line 454)
ValidateInStrings_124855 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 454, 28), 'ValidateInStrings', False)
# Calling ValidateInStrings(args, kwargs) (line 454)
ValidateInStrings_call_result_124862 = invoke(stypy.reporting.localization.Localization(__file__, 454, 28), ValidateInStrings_124855, *[unicode_124856, split_call_result_124860], **kwargs_124861)

# Assigning a type to the variable 'validate_mathtext_default' (line 454)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 454, 0), 'validate_mathtext_default', ValidateInStrings_call_result_124862)

# Assigning a Call to a Name (line 458):

# Call to ValidateInStrings(...): (line 458)
# Processing the call arguments (line 458)
unicode_124864 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 459, 4), 'unicode', u'verbose')

# Obtaining an instance of the builtin type 'list' (line 460)
list_124865 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 460, 4), 'list')
# Adding type elements to the builtin type 'list' instance (line 460)
# Adding element type (line 460)
unicode_124866 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 460, 5), 'unicode', u'silent')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 460, 4), list_124865, unicode_124866)
# Adding element type (line 460)
unicode_124867 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 460, 15), 'unicode', u'helpful')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 460, 4), list_124865, unicode_124867)
# Adding element type (line 460)
unicode_124868 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 460, 26), 'unicode', u'debug')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 460, 4), list_124865, unicode_124868)
# Adding element type (line 460)
unicode_124869 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 460, 35), 'unicode', u'debug-annoying')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 460, 4), list_124865, unicode_124869)

# Processing the call keyword arguments (line 458)
kwargs_124870 = {}
# Getting the type of 'ValidateInStrings' (line 458)
ValidateInStrings_124863 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 458, 19), 'ValidateInStrings', False)
# Calling ValidateInStrings(args, kwargs) (line 458)
ValidateInStrings_call_result_124871 = invoke(stypy.reporting.localization.Localization(__file__, 458, 19), ValidateInStrings_124863, *[unicode_124864, list_124865], **kwargs_124870)

# Assigning a type to the variable 'validate_verbose' (line 458)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 458, 0), 'validate_verbose', ValidateInStrings_call_result_124871)

# Assigning a Call to a Name (line 462):

# Call to ValidateInStrings(...): (line 462)
# Processing the call arguments (line 462)
unicode_124873 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 463, 4), 'unicode', u'alignment')

# Obtaining an instance of the builtin type 'list' (line 464)
list_124874 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 464, 4), 'list')
# Adding type elements to the builtin type 'list' instance (line 464)
# Adding element type (line 464)
unicode_124875 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 464, 5), 'unicode', u'center')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 464, 4), list_124874, unicode_124875)
# Adding element type (line 464)
unicode_124876 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 464, 15), 'unicode', u'top')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 464, 4), list_124874, unicode_124876)
# Adding element type (line 464)
unicode_124877 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 464, 22), 'unicode', u'bottom')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 464, 4), list_124874, unicode_124877)
# Adding element type (line 464)
unicode_124878 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 464, 32), 'unicode', u'baseline')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 464, 4), list_124874, unicode_124878)
# Adding element type (line 464)
unicode_124879 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 465, 5), 'unicode', u'center_baseline')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 464, 4), list_124874, unicode_124879)

# Processing the call keyword arguments (line 462)
kwargs_124880 = {}
# Getting the type of 'ValidateInStrings' (line 462)
ValidateInStrings_124872 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 462, 22), 'ValidateInStrings', False)
# Calling ValidateInStrings(args, kwargs) (line 462)
ValidateInStrings_call_result_124881 = invoke(stypy.reporting.localization.Localization(__file__, 462, 22), ValidateInStrings_124872, *[unicode_124873, list_124874], **kwargs_124880)

# Assigning a type to the variable '_validate_alignment' (line 462)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 462, 0), '_validate_alignment', ValidateInStrings_call_result_124881)

@norecursion
def validate_whiskers(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'validate_whiskers'
    module_type_store = module_type_store.open_function_context('validate_whiskers', 467, 0, False)
    
    # Passed parameters checking function
    validate_whiskers.stypy_localization = localization
    validate_whiskers.stypy_type_of_self = None
    validate_whiskers.stypy_type_store = module_type_store
    validate_whiskers.stypy_function_name = 'validate_whiskers'
    validate_whiskers.stypy_param_names_list = ['s']
    validate_whiskers.stypy_varargs_param_name = None
    validate_whiskers.stypy_kwargs_param_name = None
    validate_whiskers.stypy_call_defaults = defaults
    validate_whiskers.stypy_call_varargs = varargs
    validate_whiskers.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'validate_whiskers', ['s'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'validate_whiskers', localization, ['s'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'validate_whiskers(...)' code ##################

    
    
    # Getting the type of 's' (line 468)
    s_124882 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 468, 7), 's')
    unicode_124883 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 468, 12), 'unicode', u'range')
    # Applying the binary operator '==' (line 468)
    result_eq_124884 = python_operator(stypy.reporting.localization.Localization(__file__, 468, 7), '==', s_124882, unicode_124883)
    
    # Testing the type of an if condition (line 468)
    if_condition_124885 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 468, 4), result_eq_124884)
    # Assigning a type to the variable 'if_condition_124885' (line 468)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 468, 4), 'if_condition_124885', if_condition_124885)
    # SSA begins for if statement (line 468)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    unicode_124886 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 469, 15), 'unicode', u'range')
    # Assigning a type to the variable 'stypy_return_type' (line 469)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 469, 8), 'stypy_return_type', unicode_124886)
    # SSA branch for the else part of an if statement (line 468)
    module_type_store.open_ssa_branch('else')
    
    
    # SSA begins for try-except statement (line 471)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
    
    # Assigning a Call to a Name (line 472):
    
    # Call to (...): (line 472)
    # Processing the call arguments (line 472)
    # Getting the type of 's' (line 472)
    s_124891 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 472, 39), 's', False)
    # Processing the call keyword arguments (line 472)
    kwargs_124892 = {}
    
    # Call to validate_nseq_float(...): (line 472)
    # Processing the call arguments (line 472)
    int_124888 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 472, 36), 'int')
    # Processing the call keyword arguments (line 472)
    kwargs_124889 = {}
    # Getting the type of 'validate_nseq_float' (line 472)
    validate_nseq_float_124887 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 472, 16), 'validate_nseq_float', False)
    # Calling validate_nseq_float(args, kwargs) (line 472)
    validate_nseq_float_call_result_124890 = invoke(stypy.reporting.localization.Localization(__file__, 472, 16), validate_nseq_float_124887, *[int_124888], **kwargs_124889)
    
    # Calling (args, kwargs) (line 472)
    _call_result_124893 = invoke(stypy.reporting.localization.Localization(__file__, 472, 16), validate_nseq_float_call_result_124890, *[s_124891], **kwargs_124892)
    
    # Assigning a type to the variable 'v' (line 472)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 472, 12), 'v', _call_result_124893)
    # Getting the type of 'v' (line 473)
    v_124894 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 473, 19), 'v')
    # Assigning a type to the variable 'stypy_return_type' (line 473)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 473, 12), 'stypy_return_type', v_124894)
    # SSA branch for the except part of a try statement (line 471)
    # SSA branch for the except 'Tuple' branch of a try statement (line 471)
    module_type_store.open_ssa_branch('except')
    
    
    # SSA begins for try-except statement (line 475)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
    
    # Assigning a Call to a Name (line 476):
    
    # Call to float(...): (line 476)
    # Processing the call arguments (line 476)
    # Getting the type of 's' (line 476)
    s_124896 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 476, 26), 's', False)
    # Processing the call keyword arguments (line 476)
    kwargs_124897 = {}
    # Getting the type of 'float' (line 476)
    float_124895 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 476, 20), 'float', False)
    # Calling float(args, kwargs) (line 476)
    float_call_result_124898 = invoke(stypy.reporting.localization.Localization(__file__, 476, 20), float_124895, *[s_124896], **kwargs_124897)
    
    # Assigning a type to the variable 'v' (line 476)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 476, 16), 'v', float_call_result_124898)
    # Getting the type of 'v' (line 477)
    v_124899 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 477, 23), 'v')
    # Assigning a type to the variable 'stypy_return_type' (line 477)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 477, 16), 'stypy_return_type', v_124899)
    # SSA branch for the except part of a try statement (line 475)
    # SSA branch for the except 'ValueError' branch of a try statement (line 475)
    module_type_store.open_ssa_branch('except')
    
    # Call to ValueError(...): (line 479)
    # Processing the call arguments (line 479)
    unicode_124901 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 479, 33), 'unicode', u"Not a valid whisker value ['range', float, (float, float)]")
    # Processing the call keyword arguments (line 479)
    kwargs_124902 = {}
    # Getting the type of 'ValueError' (line 479)
    ValueError_124900 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 479, 22), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 479)
    ValueError_call_result_124903 = invoke(stypy.reporting.localization.Localization(__file__, 479, 22), ValueError_124900, *[unicode_124901], **kwargs_124902)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 479, 16), ValueError_call_result_124903, 'raise parameter', BaseException)
    # SSA join for try-except statement (line 475)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for try-except statement (line 471)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 468)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # ################# End of 'validate_whiskers(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'validate_whiskers' in the type store
    # Getting the type of 'stypy_return_type' (line 467)
    stypy_return_type_124904 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 467, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_124904)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'validate_whiskers'
    return stypy_return_type_124904

# Assigning a type to the variable 'validate_whiskers' (line 467)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 467, 0), 'validate_whiskers', validate_whiskers)

@norecursion
def update_savefig_format(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'update_savefig_format'
    module_type_store = module_type_store.open_function_context('update_savefig_format', 483, 0, False)
    
    # Passed parameters checking function
    update_savefig_format.stypy_localization = localization
    update_savefig_format.stypy_type_of_self = None
    update_savefig_format.stypy_type_store = module_type_store
    update_savefig_format.stypy_function_name = 'update_savefig_format'
    update_savefig_format.stypy_param_names_list = ['value']
    update_savefig_format.stypy_varargs_param_name = None
    update_savefig_format.stypy_kwargs_param_name = None
    update_savefig_format.stypy_call_defaults = defaults
    update_savefig_format.stypy_call_varargs = varargs
    update_savefig_format.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'update_savefig_format', ['value'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'update_savefig_format', localization, ['value'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'update_savefig_format(...)' code ##################

    
    # Assigning a Call to a Name (line 486):
    
    # Call to text_type(...): (line 486)
    # Processing the call arguments (line 486)
    # Getting the type of 'value' (line 486)
    value_124907 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 486, 26), 'value', False)
    # Processing the call keyword arguments (line 486)
    kwargs_124908 = {}
    # Getting the type of 'six' (line 486)
    six_124905 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 486, 12), 'six', False)
    # Obtaining the member 'text_type' of a type (line 486)
    text_type_124906 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 486, 12), six_124905, 'text_type')
    # Calling text_type(args, kwargs) (line 486)
    text_type_call_result_124909 = invoke(stypy.reporting.localization.Localization(__file__, 486, 12), text_type_124906, *[value_124907], **kwargs_124908)
    
    # Assigning a type to the variable 'value' (line 486)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 486, 4), 'value', text_type_call_result_124909)
    
    
    # Getting the type of 'value' (line 487)
    value_124910 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 487, 7), 'value')
    unicode_124911 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 487, 16), 'unicode', u'auto')
    # Applying the binary operator '==' (line 487)
    result_eq_124912 = python_operator(stypy.reporting.localization.Localization(__file__, 487, 7), '==', value_124910, unicode_124911)
    
    # Testing the type of an if condition (line 487)
    if_condition_124913 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 487, 4), result_eq_124912)
    # Assigning a type to the variable 'if_condition_124913' (line 487)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 487, 4), 'if_condition_124913', if_condition_124913)
    # SSA begins for if statement (line 487)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Str to a Name (line 488):
    unicode_124914 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 488, 16), 'unicode', u'png')
    # Assigning a type to the variable 'value' (line 488)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 488, 8), 'value', unicode_124914)
    # SSA join for if statement (line 487)
    module_type_store = module_type_store.join_ssa_context()
    
    # Getting the type of 'value' (line 489)
    value_124915 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 489, 11), 'value')
    # Assigning a type to the variable 'stypy_return_type' (line 489)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 489, 4), 'stypy_return_type', value_124915)
    
    # ################# End of 'update_savefig_format(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'update_savefig_format' in the type store
    # Getting the type of 'stypy_return_type' (line 483)
    stypy_return_type_124916 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 483, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_124916)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'update_savefig_format'
    return stypy_return_type_124916

# Assigning a type to the variable 'update_savefig_format' (line 483)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 483, 0), 'update_savefig_format', update_savefig_format)

# Assigning a Call to a Name (line 492):

# Call to ValidateInStrings(...): (line 492)
# Processing the call arguments (line 492)
unicode_124918 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 493, 4), 'unicode', u'ps_papersize')

# Obtaining an instance of the builtin type 'list' (line 494)
list_124919 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 494, 4), 'list')
# Adding type elements to the builtin type 'list' instance (line 494)
# Adding element type (line 494)
unicode_124920 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 494, 5), 'unicode', u'auto')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 494, 4), list_124919, unicode_124920)
# Adding element type (line 494)
unicode_124921 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 494, 13), 'unicode', u'letter')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 494, 4), list_124919, unicode_124921)
# Adding element type (line 494)
unicode_124922 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 494, 23), 'unicode', u'legal')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 494, 4), list_124919, unicode_124922)
# Adding element type (line 494)
unicode_124923 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 494, 32), 'unicode', u'ledger')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 494, 4), list_124919, unicode_124923)
# Adding element type (line 494)
unicode_124924 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 495, 4), 'unicode', u'a0')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 494, 4), list_124919, unicode_124924)
# Adding element type (line 494)
unicode_124925 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 495, 10), 'unicode', u'a1')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 494, 4), list_124919, unicode_124925)
# Adding element type (line 494)
unicode_124926 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 495, 16), 'unicode', u'a2')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 494, 4), list_124919, unicode_124926)
# Adding element type (line 494)
unicode_124927 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 495, 22), 'unicode', u'a3')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 494, 4), list_124919, unicode_124927)
# Adding element type (line 494)
unicode_124928 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 495, 28), 'unicode', u'a4')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 494, 4), list_124919, unicode_124928)
# Adding element type (line 494)
unicode_124929 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 495, 34), 'unicode', u'a5')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 494, 4), list_124919, unicode_124929)
# Adding element type (line 494)
unicode_124930 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 495, 40), 'unicode', u'a6')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 494, 4), list_124919, unicode_124930)
# Adding element type (line 494)
unicode_124931 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 495, 46), 'unicode', u'a7')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 494, 4), list_124919, unicode_124931)
# Adding element type (line 494)
unicode_124932 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 495, 52), 'unicode', u'a8')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 494, 4), list_124919, unicode_124932)
# Adding element type (line 494)
unicode_124933 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 495, 58), 'unicode', u'a9')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 494, 4), list_124919, unicode_124933)
# Adding element type (line 494)
unicode_124934 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 495, 64), 'unicode', u'a10')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 494, 4), list_124919, unicode_124934)
# Adding element type (line 494)
unicode_124935 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 496, 4), 'unicode', u'b0')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 494, 4), list_124919, unicode_124935)
# Adding element type (line 494)
unicode_124936 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 496, 10), 'unicode', u'b1')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 494, 4), list_124919, unicode_124936)
# Adding element type (line 494)
unicode_124937 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 496, 16), 'unicode', u'b2')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 494, 4), list_124919, unicode_124937)
# Adding element type (line 494)
unicode_124938 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 496, 22), 'unicode', u'b3')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 494, 4), list_124919, unicode_124938)
# Adding element type (line 494)
unicode_124939 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 496, 28), 'unicode', u'b4')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 494, 4), list_124919, unicode_124939)
# Adding element type (line 494)
unicode_124940 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 496, 34), 'unicode', u'b5')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 494, 4), list_124919, unicode_124940)
# Adding element type (line 494)
unicode_124941 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 496, 40), 'unicode', u'b6')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 494, 4), list_124919, unicode_124941)
# Adding element type (line 494)
unicode_124942 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 496, 46), 'unicode', u'b7')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 494, 4), list_124919, unicode_124942)
# Adding element type (line 494)
unicode_124943 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 496, 52), 'unicode', u'b8')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 494, 4), list_124919, unicode_124943)
# Adding element type (line 494)
unicode_124944 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 496, 58), 'unicode', u'b9')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 494, 4), list_124919, unicode_124944)
# Adding element type (line 494)
unicode_124945 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 496, 64), 'unicode', u'b10')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 494, 4), list_124919, unicode_124945)

# Processing the call keyword arguments (line 492)
# Getting the type of 'True' (line 497)
True_124946 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 497, 18), 'True', False)
keyword_124947 = True_124946
kwargs_124948 = {'ignorecase': keyword_124947}
# Getting the type of 'ValidateInStrings' (line 492)
ValidateInStrings_124917 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 492, 24), 'ValidateInStrings', False)
# Calling ValidateInStrings(args, kwargs) (line 492)
ValidateInStrings_call_result_124949 = invoke(stypy.reporting.localization.Localization(__file__, 492, 24), ValidateInStrings_124917, *[unicode_124918, list_124919], **kwargs_124948)

# Assigning a type to the variable 'validate_ps_papersize' (line 492)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 492, 0), 'validate_ps_papersize', ValidateInStrings_call_result_124949)

@norecursion
def validate_ps_distiller(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'validate_ps_distiller'
    module_type_store = module_type_store.open_function_context('validate_ps_distiller', 500, 0, False)
    
    # Passed parameters checking function
    validate_ps_distiller.stypy_localization = localization
    validate_ps_distiller.stypy_type_of_self = None
    validate_ps_distiller.stypy_type_store = module_type_store
    validate_ps_distiller.stypy_function_name = 'validate_ps_distiller'
    validate_ps_distiller.stypy_param_names_list = ['s']
    validate_ps_distiller.stypy_varargs_param_name = None
    validate_ps_distiller.stypy_kwargs_param_name = None
    validate_ps_distiller.stypy_call_defaults = defaults
    validate_ps_distiller.stypy_call_varargs = varargs
    validate_ps_distiller.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'validate_ps_distiller', ['s'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'validate_ps_distiller', localization, ['s'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'validate_ps_distiller(...)' code ##################

    
    
    # Call to isinstance(...): (line 501)
    # Processing the call arguments (line 501)
    # Getting the type of 's' (line 501)
    s_124951 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 501, 18), 's', False)
    # Getting the type of 'six' (line 501)
    six_124952 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 501, 21), 'six', False)
    # Obtaining the member 'string_types' of a type (line 501)
    string_types_124953 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 501, 21), six_124952, 'string_types')
    # Processing the call keyword arguments (line 501)
    kwargs_124954 = {}
    # Getting the type of 'isinstance' (line 501)
    isinstance_124950 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 501, 7), 'isinstance', False)
    # Calling isinstance(args, kwargs) (line 501)
    isinstance_call_result_124955 = invoke(stypy.reporting.localization.Localization(__file__, 501, 7), isinstance_124950, *[s_124951, string_types_124953], **kwargs_124954)
    
    # Testing the type of an if condition (line 501)
    if_condition_124956 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 501, 4), isinstance_call_result_124955)
    # Assigning a type to the variable 'if_condition_124956' (line 501)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 501, 4), 'if_condition_124956', if_condition_124956)
    # SSA begins for if statement (line 501)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 502):
    
    # Call to lower(...): (line 502)
    # Processing the call keyword arguments (line 502)
    kwargs_124959 = {}
    # Getting the type of 's' (line 502)
    s_124957 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 502, 12), 's', False)
    # Obtaining the member 'lower' of a type (line 502)
    lower_124958 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 502, 12), s_124957, 'lower')
    # Calling lower(args, kwargs) (line 502)
    lower_call_result_124960 = invoke(stypy.reporting.localization.Localization(__file__, 502, 12), lower_124958, *[], **kwargs_124959)
    
    # Assigning a type to the variable 's' (line 502)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 502, 8), 's', lower_call_result_124960)
    # SSA join for if statement (line 501)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 's' (line 503)
    s_124961 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 503, 7), 's')
    
    # Obtaining an instance of the builtin type 'tuple' (line 503)
    tuple_124962 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 503, 13), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 503)
    # Adding element type (line 503)
    unicode_124963 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 503, 13), 'unicode', u'none')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 503, 13), tuple_124962, unicode_124963)
    # Adding element type (line 503)
    # Getting the type of 'None' (line 503)
    None_124964 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 503, 21), 'None')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 503, 13), tuple_124962, None_124964)
    
    # Applying the binary operator 'in' (line 503)
    result_contains_124965 = python_operator(stypy.reporting.localization.Localization(__file__, 503, 7), 'in', s_124961, tuple_124962)
    
    # Testing the type of an if condition (line 503)
    if_condition_124966 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 503, 4), result_contains_124965)
    # Assigning a type to the variable 'if_condition_124966' (line 503)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 503, 4), 'if_condition_124966', if_condition_124966)
    # SSA begins for if statement (line 503)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Getting the type of 'None' (line 504)
    None_124967 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 504, 15), 'None')
    # Assigning a type to the variable 'stypy_return_type' (line 504)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 504, 8), 'stypy_return_type', None_124967)
    # SSA branch for the else part of an if statement (line 503)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 's' (line 505)
    s_124968 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 505, 9), 's')
    
    # Obtaining an instance of the builtin type 'tuple' (line 505)
    tuple_124969 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 505, 15), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 505)
    # Adding element type (line 505)
    unicode_124970 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 505, 15), 'unicode', u'false')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 505, 15), tuple_124969, unicode_124970)
    # Adding element type (line 505)
    # Getting the type of 'False' (line 505)
    False_124971 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 505, 24), 'False')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 505, 15), tuple_124969, False_124971)
    
    # Applying the binary operator 'in' (line 505)
    result_contains_124972 = python_operator(stypy.reporting.localization.Localization(__file__, 505, 9), 'in', s_124968, tuple_124969)
    
    # Testing the type of an if condition (line 505)
    if_condition_124973 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 505, 9), result_contains_124972)
    # Assigning a type to the variable 'if_condition_124973' (line 505)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 505, 9), 'if_condition_124973', if_condition_124973)
    # SSA begins for if statement (line 505)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Getting the type of 'False' (line 506)
    False_124974 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 506, 15), 'False')
    # Assigning a type to the variable 'stypy_return_type' (line 506)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 506, 8), 'stypy_return_type', False_124974)
    # SSA branch for the else part of an if statement (line 505)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 's' (line 507)
    s_124975 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 507, 9), 's')
    
    # Obtaining an instance of the builtin type 'tuple' (line 507)
    tuple_124976 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 507, 15), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 507)
    # Adding element type (line 507)
    unicode_124977 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 507, 15), 'unicode', u'ghostscript')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 507, 15), tuple_124976, unicode_124977)
    # Adding element type (line 507)
    unicode_124978 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 507, 30), 'unicode', u'xpdf')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 507, 15), tuple_124976, unicode_124978)
    
    # Applying the binary operator 'in' (line 507)
    result_contains_124979 = python_operator(stypy.reporting.localization.Localization(__file__, 507, 9), 'in', s_124975, tuple_124976)
    
    # Testing the type of an if condition (line 507)
    if_condition_124980 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 507, 9), result_contains_124979)
    # Assigning a type to the variable 'if_condition_124980' (line 507)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 507, 9), 'if_condition_124980', if_condition_124980)
    # SSA begins for if statement (line 507)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Getting the type of 's' (line 508)
    s_124981 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 508, 15), 's')
    # Assigning a type to the variable 'stypy_return_type' (line 508)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 508, 8), 'stypy_return_type', s_124981)
    # SSA branch for the else part of an if statement (line 507)
    module_type_store.open_ssa_branch('else')
    
    # Call to ValueError(...): (line 510)
    # Processing the call arguments (line 510)
    unicode_124983 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 510, 25), 'unicode', u'matplotlibrc ps.usedistiller must either be none, ghostscript or xpdf')
    # Processing the call keyword arguments (line 510)
    kwargs_124984 = {}
    # Getting the type of 'ValueError' (line 510)
    ValueError_124982 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 510, 14), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 510)
    ValueError_call_result_124985 = invoke(stypy.reporting.localization.Localization(__file__, 510, 14), ValueError_124982, *[unicode_124983], **kwargs_124984)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 510, 8), ValueError_call_result_124985, 'raise parameter', BaseException)
    # SSA join for if statement (line 507)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 505)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 503)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # ################# End of 'validate_ps_distiller(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'validate_ps_distiller' in the type store
    # Getting the type of 'stypy_return_type' (line 500)
    stypy_return_type_124986 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 500, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_124986)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'validate_ps_distiller'
    return stypy_return_type_124986

# Assigning a type to the variable 'validate_ps_distiller' (line 500)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 500, 0), 'validate_ps_distiller', validate_ps_distiller)

# Assigning a Call to a Name (line 513):

# Call to ValidateInStrings(...): (line 513)
# Processing the call arguments (line 513)
unicode_124988 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 513, 39), 'unicode', u'joinstyle')

# Obtaining an instance of the builtin type 'list' (line 514)
list_124989 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 514, 39), 'list')
# Adding type elements to the builtin type 'list' instance (line 514)
# Adding element type (line 514)
unicode_124990 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 514, 40), 'unicode', u'miter')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 514, 39), list_124989, unicode_124990)
# Adding element type (line 514)
unicode_124991 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 514, 49), 'unicode', u'round')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 514, 39), list_124989, unicode_124991)
# Adding element type (line 514)
unicode_124992 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 514, 58), 'unicode', u'bevel')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 514, 39), list_124989, unicode_124992)

# Processing the call keyword arguments (line 513)
# Getting the type of 'True' (line 515)
True_124993 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 515, 50), 'True', False)
keyword_124994 = True_124993
kwargs_124995 = {'ignorecase': keyword_124994}
# Getting the type of 'ValidateInStrings' (line 513)
ValidateInStrings_124987 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 513, 21), 'ValidateInStrings', False)
# Calling ValidateInStrings(args, kwargs) (line 513)
ValidateInStrings_call_result_124996 = invoke(stypy.reporting.localization.Localization(__file__, 513, 21), ValidateInStrings_124987, *[unicode_124988, list_124989], **kwargs_124995)

# Assigning a type to the variable 'validate_joinstyle' (line 513)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 513, 0), 'validate_joinstyle', ValidateInStrings_call_result_124996)

# Assigning a Call to a Name (line 516):

# Call to _listify_validator(...): (line 516)
# Processing the call arguments (line 516)
# Getting the type of 'validate_joinstyle' (line 516)
validate_joinstyle_124998 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 516, 44), 'validate_joinstyle', False)
# Processing the call keyword arguments (line 516)
kwargs_124999 = {}
# Getting the type of '_listify_validator' (line 516)
_listify_validator_124997 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 516, 25), '_listify_validator', False)
# Calling _listify_validator(args, kwargs) (line 516)
_listify_validator_call_result_125000 = invoke(stypy.reporting.localization.Localization(__file__, 516, 25), _listify_validator_124997, *[validate_joinstyle_124998], **kwargs_124999)

# Assigning a type to the variable 'validate_joinstylelist' (line 516)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 516, 0), 'validate_joinstylelist', _listify_validator_call_result_125000)

# Assigning a Call to a Name (line 518):

# Call to ValidateInStrings(...): (line 518)
# Processing the call arguments (line 518)
unicode_125002 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 518, 38), 'unicode', u'capstyle')

# Obtaining an instance of the builtin type 'list' (line 519)
list_125003 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 519, 38), 'list')
# Adding type elements to the builtin type 'list' instance (line 519)
# Adding element type (line 519)
unicode_125004 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 519, 39), 'unicode', u'butt')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 519, 38), list_125003, unicode_125004)
# Adding element type (line 519)
unicode_125005 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 519, 47), 'unicode', u'round')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 519, 38), list_125003, unicode_125005)
# Adding element type (line 519)
unicode_125006 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 519, 56), 'unicode', u'projecting')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 519, 38), list_125003, unicode_125006)

# Processing the call keyword arguments (line 518)
# Getting the type of 'True' (line 520)
True_125007 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 520, 49), 'True', False)
keyword_125008 = True_125007
kwargs_125009 = {'ignorecase': keyword_125008}
# Getting the type of 'ValidateInStrings' (line 518)
ValidateInStrings_125001 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 518, 20), 'ValidateInStrings', False)
# Calling ValidateInStrings(args, kwargs) (line 518)
ValidateInStrings_call_result_125010 = invoke(stypy.reporting.localization.Localization(__file__, 518, 20), ValidateInStrings_125001, *[unicode_125002, list_125003], **kwargs_125009)

# Assigning a type to the variable 'validate_capstyle' (line 518)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 518, 0), 'validate_capstyle', ValidateInStrings_call_result_125010)

# Assigning a Call to a Name (line 521):

# Call to _listify_validator(...): (line 521)
# Processing the call arguments (line 521)
# Getting the type of 'validate_capstyle' (line 521)
validate_capstyle_125012 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 521, 43), 'validate_capstyle', False)
# Processing the call keyword arguments (line 521)
kwargs_125013 = {}
# Getting the type of '_listify_validator' (line 521)
_listify_validator_125011 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 521, 24), '_listify_validator', False)
# Calling _listify_validator(args, kwargs) (line 521)
_listify_validator_call_result_125014 = invoke(stypy.reporting.localization.Localization(__file__, 521, 24), _listify_validator_125011, *[validate_capstyle_125012], **kwargs_125013)

# Assigning a type to the variable 'validate_capstylelist' (line 521)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 521, 0), 'validate_capstylelist', _listify_validator_call_result_125014)

# Assigning a Call to a Name (line 523):

# Call to ValidateInStrings(...): (line 523)
# Processing the call arguments (line 523)
unicode_125016 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 523, 39), 'unicode', u'markers.fillstyle')

# Obtaining an instance of the builtin type 'list' (line 524)
list_125017 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 524, 39), 'list')
# Adding type elements to the builtin type 'list' instance (line 524)
# Adding element type (line 524)
unicode_125018 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 524, 40), 'unicode', u'full')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 524, 39), list_125017, unicode_125018)
# Adding element type (line 524)
unicode_125019 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 524, 48), 'unicode', u'left')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 524, 39), list_125017, unicode_125019)
# Adding element type (line 524)
unicode_125020 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 524, 56), 'unicode', u'right')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 524, 39), list_125017, unicode_125020)
# Adding element type (line 524)
unicode_125021 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 524, 65), 'unicode', u'bottom')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 524, 39), list_125017, unicode_125021)
# Adding element type (line 524)
unicode_125022 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 525, 40), 'unicode', u'top')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 524, 39), list_125017, unicode_125022)
# Adding element type (line 524)
unicode_125023 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 525, 47), 'unicode', u'none')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 524, 39), list_125017, unicode_125023)

# Processing the call keyword arguments (line 523)
kwargs_125024 = {}
# Getting the type of 'ValidateInStrings' (line 523)
ValidateInStrings_125015 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 523, 21), 'ValidateInStrings', False)
# Calling ValidateInStrings(args, kwargs) (line 523)
ValidateInStrings_call_result_125025 = invoke(stypy.reporting.localization.Localization(__file__, 523, 21), ValidateInStrings_125015, *[unicode_125016, list_125017], **kwargs_125024)

# Assigning a type to the variable 'validate_fillstyle' (line 523)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 523, 0), 'validate_fillstyle', ValidateInStrings_call_result_125025)

# Assigning a Call to a Name (line 526):

# Call to _listify_validator(...): (line 526)
# Processing the call arguments (line 526)
# Getting the type of 'validate_fillstyle' (line 526)
validate_fillstyle_125027 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 526, 44), 'validate_fillstyle', False)
# Processing the call keyword arguments (line 526)
kwargs_125028 = {}
# Getting the type of '_listify_validator' (line 526)
_listify_validator_125026 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 526, 25), '_listify_validator', False)
# Calling _listify_validator(args, kwargs) (line 526)
_listify_validator_call_result_125029 = invoke(stypy.reporting.localization.Localization(__file__, 526, 25), _listify_validator_125026, *[validate_fillstyle_125027], **kwargs_125028)

# Assigning a type to the variable 'validate_fillstylelist' (line 526)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 526, 0), 'validate_fillstylelist', _listify_validator_call_result_125029)

# Assigning a Call to a Name (line 528):

# Call to ValidateInStrings(...): (line 528)
# Processing the call arguments (line 528)
unicode_125031 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 528, 49), 'unicode', u'negative_linestyle')

# Obtaining an instance of the builtin type 'list' (line 529)
list_125032 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 529, 49), 'list')
# Adding type elements to the builtin type 'list' instance (line 529)
# Adding element type (line 529)
unicode_125033 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 529, 50), 'unicode', u'solid')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 529, 49), list_125032, unicode_125033)
# Adding element type (line 529)
unicode_125034 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 529, 59), 'unicode', u'dashed')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 529, 49), list_125032, unicode_125034)

# Processing the call keyword arguments (line 528)
# Getting the type of 'True' (line 530)
True_125035 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 530, 60), 'True', False)
keyword_125036 = True_125035
kwargs_125037 = {'ignorecase': keyword_125036}
# Getting the type of 'ValidateInStrings' (line 528)
ValidateInStrings_125030 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 528, 31), 'ValidateInStrings', False)
# Calling ValidateInStrings(args, kwargs) (line 528)
ValidateInStrings_call_result_125038 = invoke(stypy.reporting.localization.Localization(__file__, 528, 31), ValidateInStrings_125030, *[unicode_125031, list_125032], **kwargs_125037)

# Assigning a type to the variable '_validate_negative_linestyle' (line 528)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 528, 0), '_validate_negative_linestyle', ValidateInStrings_call_result_125038)

@norecursion
def validate_negative_linestyle(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'validate_negative_linestyle'
    module_type_store = module_type_store.open_function_context('validate_negative_linestyle', 533, 0, False)
    
    # Passed parameters checking function
    validate_negative_linestyle.stypy_localization = localization
    validate_negative_linestyle.stypy_type_of_self = None
    validate_negative_linestyle.stypy_type_store = module_type_store
    validate_negative_linestyle.stypy_function_name = 'validate_negative_linestyle'
    validate_negative_linestyle.stypy_param_names_list = ['s']
    validate_negative_linestyle.stypy_varargs_param_name = None
    validate_negative_linestyle.stypy_kwargs_param_name = None
    validate_negative_linestyle.stypy_call_defaults = defaults
    validate_negative_linestyle.stypy_call_varargs = varargs
    validate_negative_linestyle.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'validate_negative_linestyle', ['s'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'validate_negative_linestyle', localization, ['s'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'validate_negative_linestyle(...)' code ##################

    
    # Call to _validate_negative_linestyle(...): (line 537)
    # Processing the call arguments (line 537)
    # Getting the type of 's' (line 537)
    s_125040 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 537, 40), 's', False)
    # Processing the call keyword arguments (line 537)
    kwargs_125041 = {}
    # Getting the type of '_validate_negative_linestyle' (line 537)
    _validate_negative_linestyle_125039 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 537, 11), '_validate_negative_linestyle', False)
    # Calling _validate_negative_linestyle(args, kwargs) (line 537)
    _validate_negative_linestyle_call_result_125042 = invoke(stypy.reporting.localization.Localization(__file__, 537, 11), _validate_negative_linestyle_125039, *[s_125040], **kwargs_125041)
    
    # Assigning a type to the variable 'stypy_return_type' (line 537)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 537, 4), 'stypy_return_type', _validate_negative_linestyle_call_result_125042)
    
    # ################# End of 'validate_negative_linestyle(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'validate_negative_linestyle' in the type store
    # Getting the type of 'stypy_return_type' (line 533)
    stypy_return_type_125043 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 533, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_125043)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'validate_negative_linestyle'
    return stypy_return_type_125043

# Assigning a type to the variable 'validate_negative_linestyle' (line 533)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 533, 0), 'validate_negative_linestyle', validate_negative_linestyle)

@norecursion
def validate_negative_linestyle_legacy(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'validate_negative_linestyle_legacy'
    module_type_store = module_type_store.open_function_context('validate_negative_linestyle_legacy', 540, 0, False)
    
    # Passed parameters checking function
    validate_negative_linestyle_legacy.stypy_localization = localization
    validate_negative_linestyle_legacy.stypy_type_of_self = None
    validate_negative_linestyle_legacy.stypy_type_store = module_type_store
    validate_negative_linestyle_legacy.stypy_function_name = 'validate_negative_linestyle_legacy'
    validate_negative_linestyle_legacy.stypy_param_names_list = ['s']
    validate_negative_linestyle_legacy.stypy_varargs_param_name = None
    validate_negative_linestyle_legacy.stypy_kwargs_param_name = None
    validate_negative_linestyle_legacy.stypy_call_defaults = defaults
    validate_negative_linestyle_legacy.stypy_call_varargs = varargs
    validate_negative_linestyle_legacy.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'validate_negative_linestyle_legacy', ['s'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'validate_negative_linestyle_legacy', localization, ['s'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'validate_negative_linestyle_legacy(...)' code ##################

    
    
    # SSA begins for try-except statement (line 545)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
    
    # Assigning a Call to a Name (line 546):
    
    # Call to validate_negative_linestyle(...): (line 546)
    # Processing the call arguments (line 546)
    # Getting the type of 's' (line 546)
    s_125045 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 546, 42), 's', False)
    # Processing the call keyword arguments (line 546)
    kwargs_125046 = {}
    # Getting the type of 'validate_negative_linestyle' (line 546)
    validate_negative_linestyle_125044 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 546, 14), 'validate_negative_linestyle', False)
    # Calling validate_negative_linestyle(args, kwargs) (line 546)
    validate_negative_linestyle_call_result_125047 = invoke(stypy.reporting.localization.Localization(__file__, 546, 14), validate_negative_linestyle_125044, *[s_125045], **kwargs_125046)
    
    # Assigning a type to the variable 'res' (line 546)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 546, 8), 'res', validate_negative_linestyle_call_result_125047)
    # Getting the type of 'res' (line 547)
    res_125048 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 547, 15), 'res')
    # Assigning a type to the variable 'stypy_return_type' (line 547)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 547, 8), 'stypy_return_type', res_125048)
    # SSA branch for the except part of a try statement (line 545)
    # SSA branch for the except 'ValueError' branch of a try statement (line 545)
    module_type_store.open_ssa_branch('except')
    
    # Assigning a Call to a Name (line 549):
    
    # Call to (...): (line 549)
    # Processing the call arguments (line 549)
    # Getting the type of 's' (line 549)
    s_125053 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 549, 40), 's', False)
    # Processing the call keyword arguments (line 549)
    kwargs_125054 = {}
    
    # Call to validate_nseq_float(...): (line 549)
    # Processing the call arguments (line 549)
    int_125050 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 549, 37), 'int')
    # Processing the call keyword arguments (line 549)
    kwargs_125051 = {}
    # Getting the type of 'validate_nseq_float' (line 549)
    validate_nseq_float_125049 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 549, 17), 'validate_nseq_float', False)
    # Calling validate_nseq_float(args, kwargs) (line 549)
    validate_nseq_float_call_result_125052 = invoke(stypy.reporting.localization.Localization(__file__, 549, 17), validate_nseq_float_125049, *[int_125050], **kwargs_125051)
    
    # Calling (args, kwargs) (line 549)
    _call_result_125055 = invoke(stypy.reporting.localization.Localization(__file__, 549, 17), validate_nseq_float_call_result_125052, *[s_125053], **kwargs_125054)
    
    # Assigning a type to the variable 'dashes' (line 549)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 549, 8), 'dashes', _call_result_125055)
    
    # Obtaining an instance of the builtin type 'tuple' (line 550)
    tuple_125056 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 550, 16), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 550)
    # Adding element type (line 550)
    int_125057 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 550, 16), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 550, 16), tuple_125056, int_125057)
    # Adding element type (line 550)
    # Getting the type of 'dashes' (line 550)
    dashes_125058 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 550, 19), 'dashes')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 550, 16), tuple_125056, dashes_125058)
    
    # Assigning a type to the variable 'stypy_return_type' (line 550)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 550, 8), 'stypy_return_type', tuple_125056)
    # SSA join for try-except statement (line 545)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # ################# End of 'validate_negative_linestyle_legacy(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'validate_negative_linestyle_legacy' in the type store
    # Getting the type of 'stypy_return_type' (line 540)
    stypy_return_type_125059 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 540, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_125059)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'validate_negative_linestyle_legacy'
    return stypy_return_type_125059

# Assigning a type to the variable 'validate_negative_linestyle_legacy' (line 540)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 540, 0), 'validate_negative_linestyle_legacy', validate_negative_linestyle_legacy)

@norecursion
def validate_corner_mask(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'validate_corner_mask'
    module_type_store = module_type_store.open_function_context('validate_corner_mask', 553, 0, False)
    
    # Passed parameters checking function
    validate_corner_mask.stypy_localization = localization
    validate_corner_mask.stypy_type_of_self = None
    validate_corner_mask.stypy_type_store = module_type_store
    validate_corner_mask.stypy_function_name = 'validate_corner_mask'
    validate_corner_mask.stypy_param_names_list = ['s']
    validate_corner_mask.stypy_varargs_param_name = None
    validate_corner_mask.stypy_kwargs_param_name = None
    validate_corner_mask.stypy_call_defaults = defaults
    validate_corner_mask.stypy_call_varargs = varargs
    validate_corner_mask.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'validate_corner_mask', ['s'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'validate_corner_mask', localization, ['s'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'validate_corner_mask(...)' code ##################

    
    
    # Getting the type of 's' (line 554)
    s_125060 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 554, 7), 's')
    unicode_125061 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 554, 12), 'unicode', u'legacy')
    # Applying the binary operator '==' (line 554)
    result_eq_125062 = python_operator(stypy.reporting.localization.Localization(__file__, 554, 7), '==', s_125060, unicode_125061)
    
    # Testing the type of an if condition (line 554)
    if_condition_125063 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 554, 4), result_eq_125062)
    # Assigning a type to the variable 'if_condition_125063' (line 554)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 554, 4), 'if_condition_125063', if_condition_125063)
    # SSA begins for if statement (line 554)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Getting the type of 's' (line 555)
    s_125064 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 555, 15), 's')
    # Assigning a type to the variable 'stypy_return_type' (line 555)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 555, 8), 'stypy_return_type', s_125064)
    # SSA branch for the else part of an if statement (line 554)
    module_type_store.open_ssa_branch('else')
    
    # Call to validate_bool(...): (line 557)
    # Processing the call arguments (line 557)
    # Getting the type of 's' (line 557)
    s_125066 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 557, 29), 's', False)
    # Processing the call keyword arguments (line 557)
    kwargs_125067 = {}
    # Getting the type of 'validate_bool' (line 557)
    validate_bool_125065 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 557, 15), 'validate_bool', False)
    # Calling validate_bool(args, kwargs) (line 557)
    validate_bool_call_result_125068 = invoke(stypy.reporting.localization.Localization(__file__, 557, 15), validate_bool_125065, *[s_125066], **kwargs_125067)
    
    # Assigning a type to the variable 'stypy_return_type' (line 557)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 557, 8), 'stypy_return_type', validate_bool_call_result_125068)
    # SSA join for if statement (line 554)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # ################# End of 'validate_corner_mask(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'validate_corner_mask' in the type store
    # Getting the type of 'stypy_return_type' (line 553)
    stypy_return_type_125069 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 553, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_125069)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'validate_corner_mask'
    return stypy_return_type_125069

# Assigning a type to the variable 'validate_corner_mask' (line 553)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 553, 0), 'validate_corner_mask', validate_corner_mask)

# Assigning a Call to a Name (line 560):

# Call to ValidateInStrings(...): (line 560)
# Processing the call arguments (line 560)
unicode_125071 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 561, 4), 'unicode', u'legend_loc')

# Obtaining an instance of the builtin type 'list' (line 562)
list_125072 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 562, 4), 'list')
# Adding type elements to the builtin type 'list' instance (line 562)
# Adding element type (line 562)
unicode_125073 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 562, 5), 'unicode', u'best')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 562, 4), list_125072, unicode_125073)
# Adding element type (line 562)
unicode_125074 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 563, 5), 'unicode', u'upper right')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 562, 4), list_125072, unicode_125074)
# Adding element type (line 562)
unicode_125075 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 564, 5), 'unicode', u'upper left')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 562, 4), list_125072, unicode_125075)
# Adding element type (line 562)
unicode_125076 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 565, 5), 'unicode', u'lower left')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 562, 4), list_125072, unicode_125076)
# Adding element type (line 562)
unicode_125077 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 566, 5), 'unicode', u'lower right')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 562, 4), list_125072, unicode_125077)
# Adding element type (line 562)
unicode_125078 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 567, 5), 'unicode', u'right')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 562, 4), list_125072, unicode_125078)
# Adding element type (line 562)
unicode_125079 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 568, 5), 'unicode', u'center left')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 562, 4), list_125072, unicode_125079)
# Adding element type (line 562)
unicode_125080 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 569, 5), 'unicode', u'center right')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 562, 4), list_125072, unicode_125080)
# Adding element type (line 562)
unicode_125081 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 570, 5), 'unicode', u'lower center')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 562, 4), list_125072, unicode_125081)
# Adding element type (line 562)
unicode_125082 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 571, 5), 'unicode', u'upper center')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 562, 4), list_125072, unicode_125082)
# Adding element type (line 562)
unicode_125083 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 572, 5), 'unicode', u'center')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 562, 4), list_125072, unicode_125083)

# Processing the call keyword arguments (line 560)
# Getting the type of 'True' (line 572)
True_125084 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 572, 27), 'True', False)
keyword_125085 = True_125084
kwargs_125086 = {'ignorecase': keyword_125085}
# Getting the type of 'ValidateInStrings' (line 560)
ValidateInStrings_125070 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 560, 22), 'ValidateInStrings', False)
# Calling ValidateInStrings(args, kwargs) (line 560)
ValidateInStrings_call_result_125087 = invoke(stypy.reporting.localization.Localization(__file__, 560, 22), ValidateInStrings_125070, *[unicode_125071, list_125072], **kwargs_125086)

# Assigning a type to the variable 'validate_legend_loc' (line 560)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 560, 0), 'validate_legend_loc', ValidateInStrings_call_result_125087)

@norecursion
def deprecate_svg_image_noscale(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'deprecate_svg_image_noscale'
    module_type_store = module_type_store.open_function_context('deprecate_svg_image_noscale', 575, 0, False)
    
    # Passed parameters checking function
    deprecate_svg_image_noscale.stypy_localization = localization
    deprecate_svg_image_noscale.stypy_type_of_self = None
    deprecate_svg_image_noscale.stypy_type_store = module_type_store
    deprecate_svg_image_noscale.stypy_function_name = 'deprecate_svg_image_noscale'
    deprecate_svg_image_noscale.stypy_param_names_list = ['value']
    deprecate_svg_image_noscale.stypy_varargs_param_name = None
    deprecate_svg_image_noscale.stypy_kwargs_param_name = None
    deprecate_svg_image_noscale.stypy_call_defaults = defaults
    deprecate_svg_image_noscale.stypy_call_varargs = varargs
    deprecate_svg_image_noscale.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'deprecate_svg_image_noscale', ['value'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'deprecate_svg_image_noscale', localization, ['value'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'deprecate_svg_image_noscale(...)' code ##################

    
    # Call to warn(...): (line 576)
    # Processing the call arguments (line 576)
    unicode_125090 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 576, 18), 'unicode', u"svg.image_noscale is deprecated. Set image.interpolation to 'none' instead.")
    # Getting the type of 'mplDeprecation' (line 578)
    mplDeprecation_125091 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 578, 18), 'mplDeprecation', False)
    # Processing the call keyword arguments (line 576)
    kwargs_125092 = {}
    # Getting the type of 'warnings' (line 576)
    warnings_125088 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 576, 4), 'warnings', False)
    # Obtaining the member 'warn' of a type (line 576)
    warn_125089 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 576, 4), warnings_125088, 'warn')
    # Calling warn(args, kwargs) (line 576)
    warn_call_result_125093 = invoke(stypy.reporting.localization.Localization(__file__, 576, 4), warn_125089, *[unicode_125090, mplDeprecation_125091], **kwargs_125092)
    
    
    # ################# End of 'deprecate_svg_image_noscale(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'deprecate_svg_image_noscale' in the type store
    # Getting the type of 'stypy_return_type' (line 575)
    stypy_return_type_125094 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 575, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_125094)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'deprecate_svg_image_noscale'
    return stypy_return_type_125094

# Assigning a type to the variable 'deprecate_svg_image_noscale' (line 575)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 575, 0), 'deprecate_svg_image_noscale', deprecate_svg_image_noscale)

@norecursion
def deprecate_svg_embed_char_paths(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'deprecate_svg_embed_char_paths'
    module_type_store = module_type_store.open_function_context('deprecate_svg_embed_char_paths', 581, 0, False)
    
    # Passed parameters checking function
    deprecate_svg_embed_char_paths.stypy_localization = localization
    deprecate_svg_embed_char_paths.stypy_type_of_self = None
    deprecate_svg_embed_char_paths.stypy_type_store = module_type_store
    deprecate_svg_embed_char_paths.stypy_function_name = 'deprecate_svg_embed_char_paths'
    deprecate_svg_embed_char_paths.stypy_param_names_list = ['value']
    deprecate_svg_embed_char_paths.stypy_varargs_param_name = None
    deprecate_svg_embed_char_paths.stypy_kwargs_param_name = None
    deprecate_svg_embed_char_paths.stypy_call_defaults = defaults
    deprecate_svg_embed_char_paths.stypy_call_varargs = varargs
    deprecate_svg_embed_char_paths.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'deprecate_svg_embed_char_paths', ['value'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'deprecate_svg_embed_char_paths', localization, ['value'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'deprecate_svg_embed_char_paths(...)' code ##################

    
    # Call to warn(...): (line 582)
    # Processing the call arguments (line 582)
    unicode_125097 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 582, 18), 'unicode', u'svg.embed_char_paths is deprecated.  Use svg.fonttype instead.')
    # Getting the type of 'mplDeprecation' (line 584)
    mplDeprecation_125098 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 584, 18), 'mplDeprecation', False)
    # Processing the call keyword arguments (line 582)
    kwargs_125099 = {}
    # Getting the type of 'warnings' (line 582)
    warnings_125095 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 582, 4), 'warnings', False)
    # Obtaining the member 'warn' of a type (line 582)
    warn_125096 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 582, 4), warnings_125095, 'warn')
    # Calling warn(args, kwargs) (line 582)
    warn_call_result_125100 = invoke(stypy.reporting.localization.Localization(__file__, 582, 4), warn_125096, *[unicode_125097, mplDeprecation_125098], **kwargs_125099)
    
    
    # ################# End of 'deprecate_svg_embed_char_paths(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'deprecate_svg_embed_char_paths' in the type store
    # Getting the type of 'stypy_return_type' (line 581)
    stypy_return_type_125101 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 581, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_125101)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'deprecate_svg_embed_char_paths'
    return stypy_return_type_125101

# Assigning a type to the variable 'deprecate_svg_embed_char_paths' (line 581)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 581, 0), 'deprecate_svg_embed_char_paths', deprecate_svg_embed_char_paths)

# Assigning a Call to a Name (line 587):

# Call to ValidateInStrings(...): (line 587)
# Processing the call arguments (line 587)
unicode_125103 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 587, 42), 'unicode', u'svg.fonttype')

# Obtaining an instance of the builtin type 'list' (line 588)
list_125104 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 588, 42), 'list')
# Adding type elements to the builtin type 'list' instance (line 588)
# Adding element type (line 588)
unicode_125105 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 588, 43), 'unicode', u'none')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 588, 42), list_125104, unicode_125105)
# Adding element type (line 588)
unicode_125106 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 588, 51), 'unicode', u'path')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 588, 42), list_125104, unicode_125106)
# Adding element type (line 588)
unicode_125107 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 588, 59), 'unicode', u'svgfont')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 588, 42), list_125104, unicode_125107)

# Processing the call keyword arguments (line 587)
kwargs_125108 = {}
# Getting the type of 'ValidateInStrings' (line 587)
ValidateInStrings_125102 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 587, 24), 'ValidateInStrings', False)
# Calling ValidateInStrings(args, kwargs) (line 587)
ValidateInStrings_call_result_125109 = invoke(stypy.reporting.localization.Localization(__file__, 587, 24), ValidateInStrings_125102, *[unicode_125103, list_125104], **kwargs_125108)

# Assigning a type to the variable 'validate_svg_fonttype' (line 587)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 587, 0), 'validate_svg_fonttype', ValidateInStrings_call_result_125109)

@norecursion
def validate_hinting(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'validate_hinting'
    module_type_store = module_type_store.open_function_context('validate_hinting', 591, 0, False)
    
    # Passed parameters checking function
    validate_hinting.stypy_localization = localization
    validate_hinting.stypy_type_of_self = None
    validate_hinting.stypy_type_store = module_type_store
    validate_hinting.stypy_function_name = 'validate_hinting'
    validate_hinting.stypy_param_names_list = ['s']
    validate_hinting.stypy_varargs_param_name = None
    validate_hinting.stypy_kwargs_param_name = None
    validate_hinting.stypy_call_defaults = defaults
    validate_hinting.stypy_call_varargs = varargs
    validate_hinting.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'validate_hinting', ['s'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'validate_hinting', localization, ['s'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'validate_hinting(...)' code ##################

    
    
    # Getting the type of 's' (line 592)
    s_125110 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 592, 7), 's')
    
    # Obtaining an instance of the builtin type 'tuple' (line 592)
    tuple_125111 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 592, 13), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 592)
    # Adding element type (line 592)
    # Getting the type of 'True' (line 592)
    True_125112 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 592, 13), 'True')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 592, 13), tuple_125111, True_125112)
    # Adding element type (line 592)
    # Getting the type of 'False' (line 592)
    False_125113 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 592, 19), 'False')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 592, 13), tuple_125111, False_125113)
    
    # Applying the binary operator 'in' (line 592)
    result_contains_125114 = python_operator(stypy.reporting.localization.Localization(__file__, 592, 7), 'in', s_125110, tuple_125111)
    
    # Testing the type of an if condition (line 592)
    if_condition_125115 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 592, 4), result_contains_125114)
    # Assigning a type to the variable 'if_condition_125115' (line 592)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 592, 4), 'if_condition_125115', if_condition_125115)
    # SSA begins for if statement (line 592)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Getting the type of 's' (line 593)
    s_125116 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 593, 15), 's')
    # Assigning a type to the variable 'stypy_return_type' (line 593)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 593, 8), 'stypy_return_type', s_125116)
    # SSA join for if statement (line 592)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    
    # Call to lower(...): (line 594)
    # Processing the call keyword arguments (line 594)
    kwargs_125119 = {}
    # Getting the type of 's' (line 594)
    s_125117 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 594, 7), 's', False)
    # Obtaining the member 'lower' of a type (line 594)
    lower_125118 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 594, 7), s_125117, 'lower')
    # Calling lower(args, kwargs) (line 594)
    lower_call_result_125120 = invoke(stypy.reporting.localization.Localization(__file__, 594, 7), lower_125118, *[], **kwargs_125119)
    
    
    # Obtaining an instance of the builtin type 'tuple' (line 594)
    tuple_125121 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 594, 21), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 594)
    # Adding element type (line 594)
    unicode_125122 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 594, 21), 'unicode', u'auto')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 594, 21), tuple_125121, unicode_125122)
    # Adding element type (line 594)
    unicode_125123 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 594, 29), 'unicode', u'native')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 594, 21), tuple_125121, unicode_125123)
    # Adding element type (line 594)
    unicode_125124 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 594, 39), 'unicode', u'either')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 594, 21), tuple_125121, unicode_125124)
    # Adding element type (line 594)
    unicode_125125 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 594, 49), 'unicode', u'none')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 594, 21), tuple_125121, unicode_125125)
    
    # Applying the binary operator 'in' (line 594)
    result_contains_125126 = python_operator(stypy.reporting.localization.Localization(__file__, 594, 7), 'in', lower_call_result_125120, tuple_125121)
    
    # Testing the type of an if condition (line 594)
    if_condition_125127 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 594, 4), result_contains_125126)
    # Assigning a type to the variable 'if_condition_125127' (line 594)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 594, 4), 'if_condition_125127', if_condition_125127)
    # SSA begins for if statement (line 594)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to lower(...): (line 595)
    # Processing the call keyword arguments (line 595)
    kwargs_125130 = {}
    # Getting the type of 's' (line 595)
    s_125128 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 595, 15), 's', False)
    # Obtaining the member 'lower' of a type (line 595)
    lower_125129 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 595, 15), s_125128, 'lower')
    # Calling lower(args, kwargs) (line 595)
    lower_call_result_125131 = invoke(stypy.reporting.localization.Localization(__file__, 595, 15), lower_125129, *[], **kwargs_125130)
    
    # Assigning a type to the variable 'stypy_return_type' (line 595)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 595, 8), 'stypy_return_type', lower_call_result_125131)
    # SSA join for if statement (line 594)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Call to ValueError(...): (line 596)
    # Processing the call arguments (line 596)
    unicode_125133 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 596, 21), 'unicode', u"hinting should be 'auto', 'native', 'either' or 'none'")
    # Processing the call keyword arguments (line 596)
    kwargs_125134 = {}
    # Getting the type of 'ValueError' (line 596)
    ValueError_125132 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 596, 10), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 596)
    ValueError_call_result_125135 = invoke(stypy.reporting.localization.Localization(__file__, 596, 10), ValueError_125132, *[unicode_125133], **kwargs_125134)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 596, 4), ValueError_call_result_125135, 'raise parameter', BaseException)
    
    # ################# End of 'validate_hinting(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'validate_hinting' in the type store
    # Getting the type of 'stypy_return_type' (line 591)
    stypy_return_type_125136 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 591, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_125136)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'validate_hinting'
    return stypy_return_type_125136

# Assigning a type to the variable 'validate_hinting' (line 591)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 591, 0), 'validate_hinting', validate_hinting)

# Assigning a Call to a Name (line 598):

# Call to ValidateInStrings(...): (line 598)
# Processing the call arguments (line 598)
unicode_125138 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 598, 43), 'unicode', u'pgf.texsystem')

# Obtaining an instance of the builtin type 'list' (line 599)
list_125139 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 599, 43), 'list')
# Adding type elements to the builtin type 'list' instance (line 599)
# Adding element type (line 599)
unicode_125140 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 599, 44), 'unicode', u'xelatex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 599, 43), list_125139, unicode_125140)
# Adding element type (line 599)
unicode_125141 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 599, 55), 'unicode', u'lualatex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 599, 43), list_125139, unicode_125141)
# Adding element type (line 599)
unicode_125142 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 599, 67), 'unicode', u'pdflatex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 599, 43), list_125139, unicode_125142)

# Processing the call keyword arguments (line 598)
kwargs_125143 = {}
# Getting the type of 'ValidateInStrings' (line 598)
ValidateInStrings_125137 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 598, 25), 'ValidateInStrings', False)
# Calling ValidateInStrings(args, kwargs) (line 598)
ValidateInStrings_call_result_125144 = invoke(stypy.reporting.localization.Localization(__file__, 598, 25), ValidateInStrings_125137, *[unicode_125138, list_125139], **kwargs_125143)

# Assigning a type to the variable 'validate_pgf_texsystem' (line 598)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 598, 0), 'validate_pgf_texsystem', ValidateInStrings_call_result_125144)

# Assigning a Call to a Name (line 601):

# Call to ValidateInStrings(...): (line 601)
# Processing the call arguments (line 601)
unicode_125146 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 601, 42), 'unicode', u'animation.writer')

# Obtaining an instance of the builtin type 'list' (line 602)
list_125147 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 602, 4), 'list')
# Adding type elements to the builtin type 'list' instance (line 602)
# Adding element type (line 602)
unicode_125148 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 602, 5), 'unicode', u'ffmpeg')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 602, 4), list_125147, unicode_125148)
# Adding element type (line 602)
unicode_125149 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 602, 15), 'unicode', u'ffmpeg_file')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 602, 4), list_125147, unicode_125149)
# Adding element type (line 602)
unicode_125150 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 603, 5), 'unicode', u'avconv')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 602, 4), list_125147, unicode_125150)
# Adding element type (line 602)
unicode_125151 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 603, 15), 'unicode', u'avconv_file')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 602, 4), list_125147, unicode_125151)
# Adding element type (line 602)
unicode_125152 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 604, 5), 'unicode', u'mencoder')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 602, 4), list_125147, unicode_125152)
# Adding element type (line 602)
unicode_125153 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 604, 17), 'unicode', u'mencoder_file')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 602, 4), list_125147, unicode_125153)
# Adding element type (line 602)
unicode_125154 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 605, 5), 'unicode', u'imagemagick')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 602, 4), list_125147, unicode_125154)
# Adding element type (line 602)
unicode_125155 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 605, 20), 'unicode', u'imagemagick_file')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 602, 4), list_125147, unicode_125155)
# Adding element type (line 602)
unicode_125156 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 606, 5), 'unicode', u'html')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 602, 4), list_125147, unicode_125156)

# Processing the call keyword arguments (line 601)
kwargs_125157 = {}
# Getting the type of 'ValidateInStrings' (line 601)
ValidateInStrings_125145 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 601, 24), 'ValidateInStrings', False)
# Calling ValidateInStrings(args, kwargs) (line 601)
ValidateInStrings_call_result_125158 = invoke(stypy.reporting.localization.Localization(__file__, 601, 24), ValidateInStrings_125145, *[unicode_125146, list_125147], **kwargs_125157)

# Assigning a type to the variable 'validate_movie_writer' (line 601)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 601, 0), 'validate_movie_writer', ValidateInStrings_call_result_125158)

# Assigning a Call to a Name (line 608):

# Call to ValidateInStrings(...): (line 608)
# Processing the call arguments (line 608)
unicode_125160 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 608, 45), 'unicode', u'animation.frame_format')

# Obtaining an instance of the builtin type 'list' (line 609)
list_125161 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 609, 4), 'list')
# Adding type elements to the builtin type 'list' instance (line 609)
# Adding element type (line 609)
unicode_125162 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 609, 5), 'unicode', u'png')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 609, 4), list_125161, unicode_125162)
# Adding element type (line 609)
unicode_125163 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 609, 12), 'unicode', u'jpeg')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 609, 4), list_125161, unicode_125163)
# Adding element type (line 609)
unicode_125164 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 609, 20), 'unicode', u'tiff')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 609, 4), list_125161, unicode_125164)
# Adding element type (line 609)
unicode_125165 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 609, 28), 'unicode', u'raw')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 609, 4), list_125161, unicode_125165)
# Adding element type (line 609)
unicode_125166 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 609, 35), 'unicode', u'rgba')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 609, 4), list_125161, unicode_125166)

# Processing the call keyword arguments (line 608)
kwargs_125167 = {}
# Getting the type of 'ValidateInStrings' (line 608)
ValidateInStrings_125159 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 608, 27), 'ValidateInStrings', False)
# Calling ValidateInStrings(args, kwargs) (line 608)
ValidateInStrings_call_result_125168 = invoke(stypy.reporting.localization.Localization(__file__, 608, 27), ValidateInStrings_125159, *[unicode_125160, list_125161], **kwargs_125167)

# Assigning a type to the variable 'validate_movie_frame_fmt' (line 608)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 608, 0), 'validate_movie_frame_fmt', ValidateInStrings_call_result_125168)

# Assigning a Call to a Name (line 611):

# Call to ValidateInStrings(...): (line 611)
# Processing the call arguments (line 611)
unicode_125170 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 611, 42), 'unicode', u'major')

# Obtaining an instance of the builtin type 'list' (line 611)
list_125171 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 611, 51), 'list')
# Adding type elements to the builtin type 'list' instance (line 611)
# Adding element type (line 611)
unicode_125172 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 611, 52), 'unicode', u'minor')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 611, 51), list_125171, unicode_125172)
# Adding element type (line 611)
unicode_125173 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 611, 61), 'unicode', u'both')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 611, 51), list_125171, unicode_125173)
# Adding element type (line 611)
unicode_125174 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 611, 69), 'unicode', u'major')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 611, 51), list_125171, unicode_125174)

# Processing the call keyword arguments (line 611)
kwargs_125175 = {}
# Getting the type of 'ValidateInStrings' (line 611)
ValidateInStrings_125169 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 611, 24), 'ValidateInStrings', False)
# Calling ValidateInStrings(args, kwargs) (line 611)
ValidateInStrings_call_result_125176 = invoke(stypy.reporting.localization.Localization(__file__, 611, 24), ValidateInStrings_125169, *[unicode_125170, list_125171], **kwargs_125175)

# Assigning a type to the variable 'validate_axis_locator' (line 611)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 611, 0), 'validate_axis_locator', ValidateInStrings_call_result_125176)

# Assigning a Call to a Name (line 613):

# Call to ValidateInStrings(...): (line 613)
# Processing the call arguments (line 613)
unicode_125178 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 613, 44), 'unicode', u'animation.html')

# Obtaining an instance of the builtin type 'list' (line 614)
list_125179 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 614, 4), 'list')
# Adding type elements to the builtin type 'list' instance (line 614)
# Adding element type (line 614)
unicode_125180 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 614, 5), 'unicode', u'html5')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 614, 4), list_125179, unicode_125180)
# Adding element type (line 614)
unicode_125181 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 614, 14), 'unicode', u'jshtml')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 614, 4), list_125179, unicode_125181)
# Adding element type (line 614)
unicode_125182 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 614, 24), 'unicode', u'none')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 614, 4), list_125179, unicode_125182)

# Processing the call keyword arguments (line 613)
kwargs_125183 = {}
# Getting the type of 'ValidateInStrings' (line 613)
ValidateInStrings_125177 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 613, 26), 'ValidateInStrings', False)
# Calling ValidateInStrings(args, kwargs) (line 613)
ValidateInStrings_call_result_125184 = invoke(stypy.reporting.localization.Localization(__file__, 613, 26), ValidateInStrings_125177, *[unicode_125178, list_125179], **kwargs_125183)

# Assigning a type to the variable 'validate_movie_html_fmt' (line 613)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 613, 0), 'validate_movie_html_fmt', ValidateInStrings_call_result_125184)

@norecursion
def validate_bbox(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'validate_bbox'
    module_type_store = module_type_store.open_function_context('validate_bbox', 616, 0, False)
    
    # Passed parameters checking function
    validate_bbox.stypy_localization = localization
    validate_bbox.stypy_type_of_self = None
    validate_bbox.stypy_type_store = module_type_store
    validate_bbox.stypy_function_name = 'validate_bbox'
    validate_bbox.stypy_param_names_list = ['s']
    validate_bbox.stypy_varargs_param_name = None
    validate_bbox.stypy_kwargs_param_name = None
    validate_bbox.stypy_call_defaults = defaults
    validate_bbox.stypy_call_varargs = varargs
    validate_bbox.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'validate_bbox', ['s'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'validate_bbox', localization, ['s'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'validate_bbox(...)' code ##################

    
    
    # Call to isinstance(...): (line 617)
    # Processing the call arguments (line 617)
    # Getting the type of 's' (line 617)
    s_125186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 617, 18), 's', False)
    # Getting the type of 'six' (line 617)
    six_125187 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 617, 21), 'six', False)
    # Obtaining the member 'string_types' of a type (line 617)
    string_types_125188 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 617, 21), six_125187, 'string_types')
    # Processing the call keyword arguments (line 617)
    kwargs_125189 = {}
    # Getting the type of 'isinstance' (line 617)
    isinstance_125185 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 617, 7), 'isinstance', False)
    # Calling isinstance(args, kwargs) (line 617)
    isinstance_call_result_125190 = invoke(stypy.reporting.localization.Localization(__file__, 617, 7), isinstance_125185, *[s_125186, string_types_125188], **kwargs_125189)
    
    # Testing the type of an if condition (line 617)
    if_condition_125191 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 617, 4), isinstance_call_result_125190)
    # Assigning a type to the variable 'if_condition_125191' (line 617)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 617, 4), 'if_condition_125191', if_condition_125191)
    # SSA begins for if statement (line 617)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 618):
    
    # Call to lower(...): (line 618)
    # Processing the call keyword arguments (line 618)
    kwargs_125194 = {}
    # Getting the type of 's' (line 618)
    s_125192 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 618, 12), 's', False)
    # Obtaining the member 'lower' of a type (line 618)
    lower_125193 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 618, 12), s_125192, 'lower')
    # Calling lower(args, kwargs) (line 618)
    lower_call_result_125195 = invoke(stypy.reporting.localization.Localization(__file__, 618, 12), lower_125193, *[], **kwargs_125194)
    
    # Assigning a type to the variable 's' (line 618)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 618, 8), 's', lower_call_result_125195)
    
    
    # Getting the type of 's' (line 619)
    s_125196 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 619, 11), 's')
    unicode_125197 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 619, 16), 'unicode', u'tight')
    # Applying the binary operator '==' (line 619)
    result_eq_125198 = python_operator(stypy.reporting.localization.Localization(__file__, 619, 11), '==', s_125196, unicode_125197)
    
    # Testing the type of an if condition (line 619)
    if_condition_125199 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 619, 8), result_eq_125198)
    # Assigning a type to the variable 'if_condition_125199' (line 619)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 619, 8), 'if_condition_125199', if_condition_125199)
    # SSA begins for if statement (line 619)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Getting the type of 's' (line 620)
    s_125200 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 620, 19), 's')
    # Assigning a type to the variable 'stypy_return_type' (line 620)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 620, 12), 'stypy_return_type', s_125200)
    # SSA join for if statement (line 619)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 's' (line 621)
    s_125201 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 621, 11), 's')
    unicode_125202 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 621, 16), 'unicode', u'standard')
    # Applying the binary operator '==' (line 621)
    result_eq_125203 = python_operator(stypy.reporting.localization.Localization(__file__, 621, 11), '==', s_125201, unicode_125202)
    
    # Testing the type of an if condition (line 621)
    if_condition_125204 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 621, 8), result_eq_125203)
    # Assigning a type to the variable 'if_condition_125204' (line 621)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 621, 8), 'if_condition_125204', if_condition_125204)
    # SSA begins for if statement (line 621)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Getting the type of 'None' (line 622)
    None_125205 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 622, 19), 'None')
    # Assigning a type to the variable 'stypy_return_type' (line 622)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 622, 12), 'stypy_return_type', None_125205)
    # SSA join for if statement (line 621)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Call to ValueError(...): (line 623)
    # Processing the call arguments (line 623)
    unicode_125207 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 623, 25), 'unicode', u"bbox should be 'tight' or 'standard'")
    # Processing the call keyword arguments (line 623)
    kwargs_125208 = {}
    # Getting the type of 'ValueError' (line 623)
    ValueError_125206 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 623, 14), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 623)
    ValueError_call_result_125209 = invoke(stypy.reporting.localization.Localization(__file__, 623, 14), ValueError_125206, *[unicode_125207], **kwargs_125208)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 623, 8), ValueError_call_result_125209, 'raise parameter', BaseException)
    # SSA branch for the else part of an if statement (line 617)
    module_type_store.open_ssa_branch('else')
    
    # Type idiom detected: calculating its left and rigth part (line 624)
    # Getting the type of 's' (line 624)
    s_125210 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 624, 9), 's')
    # Getting the type of 'None' (line 624)
    None_125211 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 624, 18), 'None')
    
    (may_be_125212, more_types_in_union_125213) = may_not_be_none(s_125210, None_125211)

    if may_be_125212:

        if more_types_in_union_125213:
            # Runtime conditional SSA (line 624)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        
        # Call to ValueError(...): (line 626)
        # Processing the call arguments (line 626)
        unicode_125215 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 626, 25), 'unicode', u"bbox should be 'tight' or 'standard'")
        # Processing the call keyword arguments (line 626)
        kwargs_125216 = {}
        # Getting the type of 'ValueError' (line 626)
        ValueError_125214 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 626, 14), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 626)
        ValueError_call_result_125217 = invoke(stypy.reporting.localization.Localization(__file__, 626, 14), ValueError_125214, *[unicode_125215], **kwargs_125216)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 626, 8), ValueError_call_result_125217, 'raise parameter', BaseException)

        if more_types_in_union_125213:
            # SSA join for if statement (line 624)
            module_type_store = module_type_store.join_ssa_context()


    
    # SSA join for if statement (line 617)
    module_type_store = module_type_store.join_ssa_context()
    
    # Getting the type of 's' (line 627)
    s_125218 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 627, 11), 's')
    # Assigning a type to the variable 'stypy_return_type' (line 627)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 627, 4), 'stypy_return_type', s_125218)
    
    # ################# End of 'validate_bbox(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'validate_bbox' in the type store
    # Getting the type of 'stypy_return_type' (line 616)
    stypy_return_type_125219 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 616, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_125219)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'validate_bbox'
    return stypy_return_type_125219

# Assigning a type to the variable 'validate_bbox' (line 616)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 616, 0), 'validate_bbox', validate_bbox)

@norecursion
def validate_sketch(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'validate_sketch'
    module_type_store = module_type_store.open_function_context('validate_sketch', 629, 0, False)
    
    # Passed parameters checking function
    validate_sketch.stypy_localization = localization
    validate_sketch.stypy_type_of_self = None
    validate_sketch.stypy_type_store = module_type_store
    validate_sketch.stypy_function_name = 'validate_sketch'
    validate_sketch.stypy_param_names_list = ['s']
    validate_sketch.stypy_varargs_param_name = None
    validate_sketch.stypy_kwargs_param_name = None
    validate_sketch.stypy_call_defaults = defaults
    validate_sketch.stypy_call_varargs = varargs
    validate_sketch.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'validate_sketch', ['s'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'validate_sketch', localization, ['s'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'validate_sketch(...)' code ##################

    
    
    # Call to isinstance(...): (line 630)
    # Processing the call arguments (line 630)
    # Getting the type of 's' (line 630)
    s_125221 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 630, 18), 's', False)
    # Getting the type of 'six' (line 630)
    six_125222 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 630, 21), 'six', False)
    # Obtaining the member 'string_types' of a type (line 630)
    string_types_125223 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 630, 21), six_125222, 'string_types')
    # Processing the call keyword arguments (line 630)
    kwargs_125224 = {}
    # Getting the type of 'isinstance' (line 630)
    isinstance_125220 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 630, 7), 'isinstance', False)
    # Calling isinstance(args, kwargs) (line 630)
    isinstance_call_result_125225 = invoke(stypy.reporting.localization.Localization(__file__, 630, 7), isinstance_125220, *[s_125221, string_types_125223], **kwargs_125224)
    
    # Testing the type of an if condition (line 630)
    if_condition_125226 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 630, 4), isinstance_call_result_125225)
    # Assigning a type to the variable 'if_condition_125226' (line 630)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 630, 4), 'if_condition_125226', if_condition_125226)
    # SSA begins for if statement (line 630)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 631):
    
    # Call to lower(...): (line 631)
    # Processing the call keyword arguments (line 631)
    kwargs_125229 = {}
    # Getting the type of 's' (line 631)
    s_125227 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 631, 12), 's', False)
    # Obtaining the member 'lower' of a type (line 631)
    lower_125228 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 631, 12), s_125227, 'lower')
    # Calling lower(args, kwargs) (line 631)
    lower_call_result_125230 = invoke(stypy.reporting.localization.Localization(__file__, 631, 12), lower_125228, *[], **kwargs_125229)
    
    # Assigning a type to the variable 's' (line 631)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 631, 8), 's', lower_call_result_125230)
    # SSA join for if statement (line 630)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 's' (line 632)
    s_125231 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 632, 7), 's')
    unicode_125232 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 632, 12), 'unicode', u'none')
    # Applying the binary operator '==' (line 632)
    result_eq_125233 = python_operator(stypy.reporting.localization.Localization(__file__, 632, 7), '==', s_125231, unicode_125232)
    
    
    # Getting the type of 's' (line 632)
    s_125234 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 632, 22), 's')
    # Getting the type of 'None' (line 632)
    None_125235 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 632, 27), 'None')
    # Applying the binary operator 'is' (line 632)
    result_is__125236 = python_operator(stypy.reporting.localization.Localization(__file__, 632, 22), 'is', s_125234, None_125235)
    
    # Applying the binary operator 'or' (line 632)
    result_or_keyword_125237 = python_operator(stypy.reporting.localization.Localization(__file__, 632, 7), 'or', result_eq_125233, result_is__125236)
    
    # Testing the type of an if condition (line 632)
    if_condition_125238 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 632, 4), result_or_keyword_125237)
    # Assigning a type to the variable 'if_condition_125238' (line 632)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 632, 4), 'if_condition_125238', if_condition_125238)
    # SSA begins for if statement (line 632)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Getting the type of 'None' (line 633)
    None_125239 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 633, 15), 'None')
    # Assigning a type to the variable 'stypy_return_type' (line 633)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 633, 8), 'stypy_return_type', None_125239)
    # SSA join for if statement (line 632)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Call to isinstance(...): (line 634)
    # Processing the call arguments (line 634)
    # Getting the type of 's' (line 634)
    s_125241 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 634, 18), 's', False)
    # Getting the type of 'six' (line 634)
    six_125242 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 634, 21), 'six', False)
    # Obtaining the member 'string_types' of a type (line 634)
    string_types_125243 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 634, 21), six_125242, 'string_types')
    # Processing the call keyword arguments (line 634)
    kwargs_125244 = {}
    # Getting the type of 'isinstance' (line 634)
    isinstance_125240 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 634, 7), 'isinstance', False)
    # Calling isinstance(args, kwargs) (line 634)
    isinstance_call_result_125245 = invoke(stypy.reporting.localization.Localization(__file__, 634, 7), isinstance_125240, *[s_125241, string_types_125243], **kwargs_125244)
    
    # Testing the type of an if condition (line 634)
    if_condition_125246 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 634, 4), isinstance_call_result_125245)
    # Assigning a type to the variable 'if_condition_125246' (line 634)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 634, 4), 'if_condition_125246', if_condition_125246)
    # SSA begins for if statement (line 634)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 635):
    
    # Call to tuple(...): (line 635)
    # Processing the call arguments (line 635)
    # Calculating list comprehension
    # Calculating comprehension expression
    
    # Call to split(...): (line 635)
    # Processing the call arguments (line 635)
    unicode_125257 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 635, 58), 'unicode', u',')
    # Processing the call keyword arguments (line 635)
    kwargs_125258 = {}
    # Getting the type of 's' (line 635)
    s_125255 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 635, 50), 's', False)
    # Obtaining the member 'split' of a type (line 635)
    split_125256 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 635, 50), s_125255, 'split')
    # Calling split(args, kwargs) (line 635)
    split_call_result_125259 = invoke(stypy.reporting.localization.Localization(__file__, 635, 50), split_125256, *[unicode_125257], **kwargs_125258)
    
    comprehension_125260 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 635, 24), split_call_result_125259)
    # Assigning a type to the variable 'v' (line 635)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 635, 24), 'v', comprehension_125260)
    
    # Call to float(...): (line 635)
    # Processing the call arguments (line 635)
    
    # Call to strip(...): (line 635)
    # Processing the call keyword arguments (line 635)
    kwargs_125251 = {}
    # Getting the type of 'v' (line 635)
    v_125249 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 635, 30), 'v', False)
    # Obtaining the member 'strip' of a type (line 635)
    strip_125250 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 635, 30), v_125249, 'strip')
    # Calling strip(args, kwargs) (line 635)
    strip_call_result_125252 = invoke(stypy.reporting.localization.Localization(__file__, 635, 30), strip_125250, *[], **kwargs_125251)
    
    # Processing the call keyword arguments (line 635)
    kwargs_125253 = {}
    # Getting the type of 'float' (line 635)
    float_125248 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 635, 24), 'float', False)
    # Calling float(args, kwargs) (line 635)
    float_call_result_125254 = invoke(stypy.reporting.localization.Localization(__file__, 635, 24), float_125248, *[strip_call_result_125252], **kwargs_125253)
    
    list_125261 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 635, 24), 'list')
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 635, 24), list_125261, float_call_result_125254)
    # Processing the call keyword arguments (line 635)
    kwargs_125262 = {}
    # Getting the type of 'tuple' (line 635)
    tuple_125247 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 635, 17), 'tuple', False)
    # Calling tuple(args, kwargs) (line 635)
    tuple_call_result_125263 = invoke(stypy.reporting.localization.Localization(__file__, 635, 17), tuple_125247, *[list_125261], **kwargs_125262)
    
    # Assigning a type to the variable 'result' (line 635)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 635, 8), 'result', tuple_call_result_125263)
    # SSA branch for the else part of an if statement (line 634)
    module_type_store.open_ssa_branch('else')
    
    
    # Call to isinstance(...): (line 636)
    # Processing the call arguments (line 636)
    # Getting the type of 's' (line 636)
    s_125265 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 636, 20), 's', False)
    
    # Obtaining an instance of the builtin type 'tuple' (line 636)
    tuple_125266 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 636, 24), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 636)
    # Adding element type (line 636)
    # Getting the type of 'list' (line 636)
    list_125267 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 636, 24), 'list', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 636, 24), tuple_125266, list_125267)
    # Adding element type (line 636)
    # Getting the type of 'tuple' (line 636)
    tuple_125268 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 636, 30), 'tuple', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 636, 24), tuple_125266, tuple_125268)
    
    # Processing the call keyword arguments (line 636)
    kwargs_125269 = {}
    # Getting the type of 'isinstance' (line 636)
    isinstance_125264 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 636, 9), 'isinstance', False)
    # Calling isinstance(args, kwargs) (line 636)
    isinstance_call_result_125270 = invoke(stypy.reporting.localization.Localization(__file__, 636, 9), isinstance_125264, *[s_125265, tuple_125266], **kwargs_125269)
    
    # Testing the type of an if condition (line 636)
    if_condition_125271 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 636, 9), isinstance_call_result_125270)
    # Assigning a type to the variable 'if_condition_125271' (line 636)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 636, 9), 'if_condition_125271', if_condition_125271)
    # SSA begins for if statement (line 636)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 637):
    
    # Call to tuple(...): (line 637)
    # Processing the call arguments (line 637)
    # Calculating list comprehension
    # Calculating comprehension expression
    # Getting the type of 's' (line 637)
    s_125277 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 637, 42), 's', False)
    comprehension_125278 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 637, 24), s_125277)
    # Assigning a type to the variable 'v' (line 637)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 637, 24), 'v', comprehension_125278)
    
    # Call to float(...): (line 637)
    # Processing the call arguments (line 637)
    # Getting the type of 'v' (line 637)
    v_125274 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 637, 30), 'v', False)
    # Processing the call keyword arguments (line 637)
    kwargs_125275 = {}
    # Getting the type of 'float' (line 637)
    float_125273 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 637, 24), 'float', False)
    # Calling float(args, kwargs) (line 637)
    float_call_result_125276 = invoke(stypy.reporting.localization.Localization(__file__, 637, 24), float_125273, *[v_125274], **kwargs_125275)
    
    list_125279 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 637, 24), 'list')
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 637, 24), list_125279, float_call_result_125276)
    # Processing the call keyword arguments (line 637)
    kwargs_125280 = {}
    # Getting the type of 'tuple' (line 637)
    tuple_125272 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 637, 17), 'tuple', False)
    # Calling tuple(args, kwargs) (line 637)
    tuple_call_result_125281 = invoke(stypy.reporting.localization.Localization(__file__, 637, 17), tuple_125272, *[list_125279], **kwargs_125280)
    
    # Assigning a type to the variable 'result' (line 637)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 637, 8), 'result', tuple_call_result_125281)
    # SSA join for if statement (line 636)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 634)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    
    # Call to len(...): (line 638)
    # Processing the call arguments (line 638)
    # Getting the type of 'result' (line 638)
    result_125283 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 638, 11), 'result', False)
    # Processing the call keyword arguments (line 638)
    kwargs_125284 = {}
    # Getting the type of 'len' (line 638)
    len_125282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 638, 7), 'len', False)
    # Calling len(args, kwargs) (line 638)
    len_call_result_125285 = invoke(stypy.reporting.localization.Localization(__file__, 638, 7), len_125282, *[result_125283], **kwargs_125284)
    
    int_125286 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 638, 22), 'int')
    # Applying the binary operator '!=' (line 638)
    result_ne_125287 = python_operator(stypy.reporting.localization.Localization(__file__, 638, 7), '!=', len_call_result_125285, int_125286)
    
    # Testing the type of an if condition (line 638)
    if_condition_125288 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 638, 4), result_ne_125287)
    # Assigning a type to the variable 'if_condition_125288' (line 638)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 638, 4), 'if_condition_125288', if_condition_125288)
    # SSA begins for if statement (line 638)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to ValueError(...): (line 639)
    # Processing the call arguments (line 639)
    unicode_125290 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 639, 25), 'unicode', u'path.sketch must be a tuple (scale, length, randomness)')
    # Processing the call keyword arguments (line 639)
    kwargs_125291 = {}
    # Getting the type of 'ValueError' (line 639)
    ValueError_125289 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 639, 14), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 639)
    ValueError_call_result_125292 = invoke(stypy.reporting.localization.Localization(__file__, 639, 14), ValueError_125289, *[unicode_125290], **kwargs_125291)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 639, 8), ValueError_call_result_125292, 'raise parameter', BaseException)
    # SSA join for if statement (line 638)
    module_type_store = module_type_store.join_ssa_context()
    
    # Getting the type of 'result' (line 640)
    result_125293 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 640, 11), 'result')
    # Assigning a type to the variable 'stypy_return_type' (line 640)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 640, 4), 'stypy_return_type', result_125293)
    
    # ################# End of 'validate_sketch(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'validate_sketch' in the type store
    # Getting the type of 'stypy_return_type' (line 629)
    stypy_return_type_125294 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 629, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_125294)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'validate_sketch'
    return stypy_return_type_125294

# Assigning a type to the variable 'validate_sketch' (line 629)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 629, 0), 'validate_sketch', validate_sketch)
# Declaration of the 'ValidateInterval' class

class ValidateInterval(object, ):
    unicode_125295 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 645, (-1)), 'unicode', u'\n    Value must be in interval\n    ')

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'True' (line 646)
        True_125296 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 646, 45), 'True')
        # Getting the type of 'True' (line 646)
        True_125297 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 646, 61), 'True')
        defaults = [True_125296, True_125297]
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 646, 4, False)
        # Assigning a type to the variable 'self' (line 647)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 647, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'ValidateInterval.__init__', ['vmin', 'vmax', 'closedmin', 'closedmax'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['vmin', 'vmax', 'closedmin', 'closedmax'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Assigning a Name to a Attribute (line 647):
        # Getting the type of 'vmin' (line 647)
        vmin_125298 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 647, 20), 'vmin')
        # Getting the type of 'self' (line 647)
        self_125299 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 647, 8), 'self')
        # Setting the type of the member 'vmin' of a type (line 647)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 647, 8), self_125299, 'vmin', vmin_125298)
        
        # Assigning a Name to a Attribute (line 648):
        # Getting the type of 'vmax' (line 648)
        vmax_125300 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 648, 20), 'vmax')
        # Getting the type of 'self' (line 648)
        self_125301 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 648, 8), 'self')
        # Setting the type of the member 'vmax' of a type (line 648)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 648, 8), self_125301, 'vmax', vmax_125300)
        
        # Assigning a Name to a Attribute (line 649):
        # Getting the type of 'closedmin' (line 649)
        closedmin_125302 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 649, 20), 'closedmin')
        # Getting the type of 'self' (line 649)
        self_125303 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 649, 8), 'self')
        # Setting the type of the member 'cmin' of a type (line 649)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 649, 8), self_125303, 'cmin', closedmin_125302)
        
        # Assigning a Name to a Attribute (line 650):
        # Getting the type of 'closedmax' (line 650)
        closedmax_125304 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 650, 20), 'closedmax')
        # Getting the type of 'self' (line 650)
        self_125305 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 650, 8), 'self')
        # Setting the type of the member 'cmax' of a type (line 650)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 650, 8), self_125305, 'cmax', closedmax_125304)
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def __call__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__call__'
        module_type_store = module_type_store.open_function_context('__call__', 652, 4, False)
        # Assigning a type to the variable 'self' (line 653)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 653, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        ValidateInterval.__call__.__dict__.__setitem__('stypy_localization', localization)
        ValidateInterval.__call__.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        ValidateInterval.__call__.__dict__.__setitem__('stypy_type_store', module_type_store)
        ValidateInterval.__call__.__dict__.__setitem__('stypy_function_name', 'ValidateInterval.__call__')
        ValidateInterval.__call__.__dict__.__setitem__('stypy_param_names_list', ['s'])
        ValidateInterval.__call__.__dict__.__setitem__('stypy_varargs_param_name', None)
        ValidateInterval.__call__.__dict__.__setitem__('stypy_kwargs_param_name', None)
        ValidateInterval.__call__.__dict__.__setitem__('stypy_call_defaults', defaults)
        ValidateInterval.__call__.__dict__.__setitem__('stypy_call_varargs', varargs)
        ValidateInterval.__call__.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        ValidateInterval.__call__.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'ValidateInterval.__call__', ['s'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '__call__', localization, ['s'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__call__(...)' code ##################

        
        
        # SSA begins for try-except statement (line 653)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
        
        # Assigning a Call to a Name (line 654):
        
        # Call to float(...): (line 654)
        # Processing the call arguments (line 654)
        # Getting the type of 's' (line 654)
        s_125307 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 654, 22), 's', False)
        # Processing the call keyword arguments (line 654)
        kwargs_125308 = {}
        # Getting the type of 'float' (line 654)
        float_125306 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 654, 16), 'float', False)
        # Calling float(args, kwargs) (line 654)
        float_call_result_125309 = invoke(stypy.reporting.localization.Localization(__file__, 654, 16), float_125306, *[s_125307], **kwargs_125308)
        
        # Assigning a type to the variable 's' (line 654)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 654, 12), 's', float_call_result_125309)
        # SSA branch for the except part of a try statement (line 653)
        # SSA branch for the except 'ValueError' branch of a try statement (line 653)
        module_type_store.open_ssa_branch('except')
        
        # Call to RuntimeError(...): (line 656)
        # Processing the call arguments (line 656)
        unicode_125311 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 656, 31), 'unicode', u'Value must be a float; found "%s"')
        # Getting the type of 's' (line 656)
        s_125312 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 656, 69), 's', False)
        # Applying the binary operator '%' (line 656)
        result_mod_125313 = python_operator(stypy.reporting.localization.Localization(__file__, 656, 31), '%', unicode_125311, s_125312)
        
        # Processing the call keyword arguments (line 656)
        kwargs_125314 = {}
        # Getting the type of 'RuntimeError' (line 656)
        RuntimeError_125310 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 656, 18), 'RuntimeError', False)
        # Calling RuntimeError(args, kwargs) (line 656)
        RuntimeError_call_result_125315 = invoke(stypy.reporting.localization.Localization(__file__, 656, 18), RuntimeError_125310, *[result_mod_125313], **kwargs_125314)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 656, 12), RuntimeError_call_result_125315, 'raise parameter', BaseException)
        # SSA join for try-except statement (line 653)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Evaluating a boolean operation
        # Getting the type of 'self' (line 658)
        self_125316 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 658, 11), 'self')
        # Obtaining the member 'cmin' of a type (line 658)
        cmin_125317 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 658, 11), self_125316, 'cmin')
        
        # Getting the type of 's' (line 658)
        s_125318 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 658, 25), 's')
        # Getting the type of 'self' (line 658)
        self_125319 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 658, 29), 'self')
        # Obtaining the member 'vmin' of a type (line 658)
        vmin_125320 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 658, 29), self_125319, 'vmin')
        # Applying the binary operator '<' (line 658)
        result_lt_125321 = python_operator(stypy.reporting.localization.Localization(__file__, 658, 25), '<', s_125318, vmin_125320)
        
        # Applying the binary operator 'and' (line 658)
        result_and_keyword_125322 = python_operator(stypy.reporting.localization.Localization(__file__, 658, 11), 'and', cmin_125317, result_lt_125321)
        
        # Testing the type of an if condition (line 658)
        if_condition_125323 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 658, 8), result_and_keyword_125322)
        # Assigning a type to the variable 'if_condition_125323' (line 658)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 658, 8), 'if_condition_125323', if_condition_125323)
        # SSA begins for if statement (line 658)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to RuntimeError(...): (line 659)
        # Processing the call arguments (line 659)
        unicode_125325 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 659, 31), 'unicode', u'Value must be >= %f; found "%f"')
        
        # Obtaining an instance of the builtin type 'tuple' (line 660)
        tuple_125326 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 660, 32), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 660)
        # Adding element type (line 660)
        # Getting the type of 'self' (line 660)
        self_125327 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 660, 32), 'self', False)
        # Obtaining the member 'vmin' of a type (line 660)
        vmin_125328 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 660, 32), self_125327, 'vmin')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 660, 32), tuple_125326, vmin_125328)
        # Adding element type (line 660)
        # Getting the type of 's' (line 660)
        s_125329 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 660, 43), 's', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 660, 32), tuple_125326, s_125329)
        
        # Applying the binary operator '%' (line 659)
        result_mod_125330 = python_operator(stypy.reporting.localization.Localization(__file__, 659, 31), '%', unicode_125325, tuple_125326)
        
        # Processing the call keyword arguments (line 659)
        kwargs_125331 = {}
        # Getting the type of 'RuntimeError' (line 659)
        RuntimeError_125324 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 659, 18), 'RuntimeError', False)
        # Calling RuntimeError(args, kwargs) (line 659)
        RuntimeError_call_result_125332 = invoke(stypy.reporting.localization.Localization(__file__, 659, 18), RuntimeError_125324, *[result_mod_125330], **kwargs_125331)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 659, 12), RuntimeError_call_result_125332, 'raise parameter', BaseException)
        # SSA branch for the else part of an if statement (line 658)
        module_type_store.open_ssa_branch('else')
        
        
        # Evaluating a boolean operation
        
        # Getting the type of 'self' (line 661)
        self_125333 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 661, 17), 'self')
        # Obtaining the member 'cmin' of a type (line 661)
        cmin_125334 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 661, 17), self_125333, 'cmin')
        # Applying the 'not' unary operator (line 661)
        result_not__125335 = python_operator(stypy.reporting.localization.Localization(__file__, 661, 13), 'not', cmin_125334)
        
        
        # Getting the type of 's' (line 661)
        s_125336 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 661, 31), 's')
        # Getting the type of 'self' (line 661)
        self_125337 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 661, 36), 'self')
        # Obtaining the member 'vmin' of a type (line 661)
        vmin_125338 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 661, 36), self_125337, 'vmin')
        # Applying the binary operator '<=' (line 661)
        result_le_125339 = python_operator(stypy.reporting.localization.Localization(__file__, 661, 31), '<=', s_125336, vmin_125338)
        
        # Applying the binary operator 'and' (line 661)
        result_and_keyword_125340 = python_operator(stypy.reporting.localization.Localization(__file__, 661, 13), 'and', result_not__125335, result_le_125339)
        
        # Testing the type of an if condition (line 661)
        if_condition_125341 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 661, 13), result_and_keyword_125340)
        # Assigning a type to the variable 'if_condition_125341' (line 661)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 661, 13), 'if_condition_125341', if_condition_125341)
        # SSA begins for if statement (line 661)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to RuntimeError(...): (line 662)
        # Processing the call arguments (line 662)
        unicode_125343 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 662, 31), 'unicode', u'Value must be > %f; found "%f"')
        
        # Obtaining an instance of the builtin type 'tuple' (line 663)
        tuple_125344 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 663, 32), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 663)
        # Adding element type (line 663)
        # Getting the type of 'self' (line 663)
        self_125345 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 663, 32), 'self', False)
        # Obtaining the member 'vmin' of a type (line 663)
        vmin_125346 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 663, 32), self_125345, 'vmin')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 663, 32), tuple_125344, vmin_125346)
        # Adding element type (line 663)
        # Getting the type of 's' (line 663)
        s_125347 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 663, 43), 's', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 663, 32), tuple_125344, s_125347)
        
        # Applying the binary operator '%' (line 662)
        result_mod_125348 = python_operator(stypy.reporting.localization.Localization(__file__, 662, 31), '%', unicode_125343, tuple_125344)
        
        # Processing the call keyword arguments (line 662)
        kwargs_125349 = {}
        # Getting the type of 'RuntimeError' (line 662)
        RuntimeError_125342 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 662, 18), 'RuntimeError', False)
        # Calling RuntimeError(args, kwargs) (line 662)
        RuntimeError_call_result_125350 = invoke(stypy.reporting.localization.Localization(__file__, 662, 18), RuntimeError_125342, *[result_mod_125348], **kwargs_125349)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 662, 12), RuntimeError_call_result_125350, 'raise parameter', BaseException)
        # SSA join for if statement (line 661)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 658)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Evaluating a boolean operation
        # Getting the type of 'self' (line 665)
        self_125351 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 665, 11), 'self')
        # Obtaining the member 'cmax' of a type (line 665)
        cmax_125352 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 665, 11), self_125351, 'cmax')
        
        # Getting the type of 's' (line 665)
        s_125353 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 665, 25), 's')
        # Getting the type of 'self' (line 665)
        self_125354 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 665, 29), 'self')
        # Obtaining the member 'vmax' of a type (line 665)
        vmax_125355 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 665, 29), self_125354, 'vmax')
        # Applying the binary operator '>' (line 665)
        result_gt_125356 = python_operator(stypy.reporting.localization.Localization(__file__, 665, 25), '>', s_125353, vmax_125355)
        
        # Applying the binary operator 'and' (line 665)
        result_and_keyword_125357 = python_operator(stypy.reporting.localization.Localization(__file__, 665, 11), 'and', cmax_125352, result_gt_125356)
        
        # Testing the type of an if condition (line 665)
        if_condition_125358 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 665, 8), result_and_keyword_125357)
        # Assigning a type to the variable 'if_condition_125358' (line 665)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 665, 8), 'if_condition_125358', if_condition_125358)
        # SSA begins for if statement (line 665)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to RuntimeError(...): (line 666)
        # Processing the call arguments (line 666)
        unicode_125360 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 666, 31), 'unicode', u'Value must be <= %f; found "%f"')
        
        # Obtaining an instance of the builtin type 'tuple' (line 667)
        tuple_125361 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 667, 32), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 667)
        # Adding element type (line 667)
        # Getting the type of 'self' (line 667)
        self_125362 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 667, 32), 'self', False)
        # Obtaining the member 'vmax' of a type (line 667)
        vmax_125363 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 667, 32), self_125362, 'vmax')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 667, 32), tuple_125361, vmax_125363)
        # Adding element type (line 667)
        # Getting the type of 's' (line 667)
        s_125364 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 667, 43), 's', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 667, 32), tuple_125361, s_125364)
        
        # Applying the binary operator '%' (line 666)
        result_mod_125365 = python_operator(stypy.reporting.localization.Localization(__file__, 666, 31), '%', unicode_125360, tuple_125361)
        
        # Processing the call keyword arguments (line 666)
        kwargs_125366 = {}
        # Getting the type of 'RuntimeError' (line 666)
        RuntimeError_125359 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 666, 18), 'RuntimeError', False)
        # Calling RuntimeError(args, kwargs) (line 666)
        RuntimeError_call_result_125367 = invoke(stypy.reporting.localization.Localization(__file__, 666, 18), RuntimeError_125359, *[result_mod_125365], **kwargs_125366)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 666, 12), RuntimeError_call_result_125367, 'raise parameter', BaseException)
        # SSA branch for the else part of an if statement (line 665)
        module_type_store.open_ssa_branch('else')
        
        
        # Evaluating a boolean operation
        
        # Getting the type of 'self' (line 668)
        self_125368 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 668, 17), 'self')
        # Obtaining the member 'cmax' of a type (line 668)
        cmax_125369 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 668, 17), self_125368, 'cmax')
        # Applying the 'not' unary operator (line 668)
        result_not__125370 = python_operator(stypy.reporting.localization.Localization(__file__, 668, 13), 'not', cmax_125369)
        
        
        # Getting the type of 's' (line 668)
        s_125371 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 668, 31), 's')
        # Getting the type of 'self' (line 668)
        self_125372 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 668, 36), 'self')
        # Obtaining the member 'vmax' of a type (line 668)
        vmax_125373 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 668, 36), self_125372, 'vmax')
        # Applying the binary operator '>=' (line 668)
        result_ge_125374 = python_operator(stypy.reporting.localization.Localization(__file__, 668, 31), '>=', s_125371, vmax_125373)
        
        # Applying the binary operator 'and' (line 668)
        result_and_keyword_125375 = python_operator(stypy.reporting.localization.Localization(__file__, 668, 13), 'and', result_not__125370, result_ge_125374)
        
        # Testing the type of an if condition (line 668)
        if_condition_125376 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 668, 13), result_and_keyword_125375)
        # Assigning a type to the variable 'if_condition_125376' (line 668)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 668, 13), 'if_condition_125376', if_condition_125376)
        # SSA begins for if statement (line 668)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to RuntimeError(...): (line 669)
        # Processing the call arguments (line 669)
        unicode_125378 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 669, 31), 'unicode', u'Value must be < %f; found "%f"')
        
        # Obtaining an instance of the builtin type 'tuple' (line 670)
        tuple_125379 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 670, 32), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 670)
        # Adding element type (line 670)
        # Getting the type of 'self' (line 670)
        self_125380 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 670, 32), 'self', False)
        # Obtaining the member 'vmax' of a type (line 670)
        vmax_125381 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 670, 32), self_125380, 'vmax')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 670, 32), tuple_125379, vmax_125381)
        # Adding element type (line 670)
        # Getting the type of 's' (line 670)
        s_125382 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 670, 43), 's', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 670, 32), tuple_125379, s_125382)
        
        # Applying the binary operator '%' (line 669)
        result_mod_125383 = python_operator(stypy.reporting.localization.Localization(__file__, 669, 31), '%', unicode_125378, tuple_125379)
        
        # Processing the call keyword arguments (line 669)
        kwargs_125384 = {}
        # Getting the type of 'RuntimeError' (line 669)
        RuntimeError_125377 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 669, 18), 'RuntimeError', False)
        # Calling RuntimeError(args, kwargs) (line 669)
        RuntimeError_call_result_125385 = invoke(stypy.reporting.localization.Localization(__file__, 669, 18), RuntimeError_125377, *[result_mod_125383], **kwargs_125384)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 669, 12), RuntimeError_call_result_125385, 'raise parameter', BaseException)
        # SSA join for if statement (line 668)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 665)
        module_type_store = module_type_store.join_ssa_context()
        
        # Getting the type of 's' (line 671)
        s_125386 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 671, 15), 's')
        # Assigning a type to the variable 'stypy_return_type' (line 671)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 671, 8), 'stypy_return_type', s_125386)
        
        # ################# End of '__call__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '__call__' in the type store
        # Getting the type of 'stypy_return_type' (line 652)
        stypy_return_type_125387 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 652, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_125387)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '__call__'
        return stypy_return_type_125387


# Assigning a type to the variable 'ValidateInterval' (line 642)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 642, 0), 'ValidateInterval', ValidateInterval)

# Assigning a Call to a Name (line 673):

# Call to ValidateInStrings(...): (line 673)
# Processing the call arguments (line 673)
unicode_125389 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 673, 39), 'unicode', u'axes.grid.axis')

# Obtaining an instance of the builtin type 'list' (line 673)
list_125390 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 673, 57), 'list')
# Adding type elements to the builtin type 'list' instance (line 673)
# Adding element type (line 673)
unicode_125391 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 673, 58), 'unicode', u'x')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 673, 57), list_125390, unicode_125391)
# Adding element type (line 673)
unicode_125392 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 673, 63), 'unicode', u'y')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 673, 57), list_125390, unicode_125392)
# Adding element type (line 673)
unicode_125393 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 673, 68), 'unicode', u'both')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 673, 57), list_125390, unicode_125393)

# Processing the call keyword arguments (line 673)
kwargs_125394 = {}
# Getting the type of 'ValidateInStrings' (line 673)
ValidateInStrings_125388 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 673, 21), 'ValidateInStrings', False)
# Calling ValidateInStrings(args, kwargs) (line 673)
ValidateInStrings_call_result_125395 = invoke(stypy.reporting.localization.Localization(__file__, 673, 21), ValidateInStrings_125388, *[unicode_125389, list_125390], **kwargs_125394)

# Assigning a type to the variable 'validate_grid_axis' (line 673)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 673, 0), 'validate_grid_axis', ValidateInStrings_call_result_125395)

@norecursion
def validate_hatch(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'validate_hatch'
    module_type_store = module_type_store.open_function_context('validate_hatch', 676, 0, False)
    
    # Passed parameters checking function
    validate_hatch.stypy_localization = localization
    validate_hatch.stypy_type_of_self = None
    validate_hatch.stypy_type_store = module_type_store
    validate_hatch.stypy_function_name = 'validate_hatch'
    validate_hatch.stypy_param_names_list = ['s']
    validate_hatch.stypy_varargs_param_name = None
    validate_hatch.stypy_kwargs_param_name = None
    validate_hatch.stypy_call_defaults = defaults
    validate_hatch.stypy_call_varargs = varargs
    validate_hatch.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'validate_hatch', ['s'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'validate_hatch', localization, ['s'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'validate_hatch(...)' code ##################

    unicode_125396 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 682, (-1)), 'unicode', u'\n    Validate a hatch pattern.\n    A hatch pattern string can have any sequence of the following\n    characters: ``\\ / | - + * . x o O``.\n\n    ')
    
    
    
    # Call to isinstance(...): (line 683)
    # Processing the call arguments (line 683)
    # Getting the type of 's' (line 683)
    s_125398 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 683, 22), 's', False)
    # Getting the type of 'six' (line 683)
    six_125399 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 683, 25), 'six', False)
    # Obtaining the member 'string_types' of a type (line 683)
    string_types_125400 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 683, 25), six_125399, 'string_types')
    # Processing the call keyword arguments (line 683)
    kwargs_125401 = {}
    # Getting the type of 'isinstance' (line 683)
    isinstance_125397 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 683, 11), 'isinstance', False)
    # Calling isinstance(args, kwargs) (line 683)
    isinstance_call_result_125402 = invoke(stypy.reporting.localization.Localization(__file__, 683, 11), isinstance_125397, *[s_125398, string_types_125400], **kwargs_125401)
    
    # Applying the 'not' unary operator (line 683)
    result_not__125403 = python_operator(stypy.reporting.localization.Localization(__file__, 683, 7), 'not', isinstance_call_result_125402)
    
    # Testing the type of an if condition (line 683)
    if_condition_125404 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 683, 4), result_not__125403)
    # Assigning a type to the variable 'if_condition_125404' (line 683)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 683, 4), 'if_condition_125404', if_condition_125404)
    # SSA begins for if statement (line 683)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to ValueError(...): (line 684)
    # Processing the call arguments (line 684)
    unicode_125406 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 684, 25), 'unicode', u'Hatch pattern must be a string')
    # Processing the call keyword arguments (line 684)
    kwargs_125407 = {}
    # Getting the type of 'ValueError' (line 684)
    ValueError_125405 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 684, 14), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 684)
    ValueError_call_result_125408 = invoke(stypy.reporting.localization.Localization(__file__, 684, 14), ValueError_125405, *[unicode_125406], **kwargs_125407)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 684, 8), ValueError_call_result_125408, 'raise parameter', BaseException)
    # SSA join for if statement (line 683)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a BinOp to a Name (line 685):
    
    # Call to set(...): (line 685)
    # Processing the call arguments (line 685)
    # Getting the type of 's' (line 685)
    s_125410 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 685, 18), 's', False)
    # Processing the call keyword arguments (line 685)
    kwargs_125411 = {}
    # Getting the type of 'set' (line 685)
    set_125409 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 685, 14), 'set', False)
    # Calling set(args, kwargs) (line 685)
    set_call_result_125412 = invoke(stypy.reporting.localization.Localization(__file__, 685, 14), set_125409, *[s_125410], **kwargs_125411)
    
    
    # Obtaining an instance of the builtin type 'set' (line 685)
    set_125413 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 685, 23), 'set')
    # Adding type elements to the builtin type 'set' instance (line 685)
    # Adding element type (line 685)
    unicode_125414 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 685, 24), 'unicode', u'\\')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 685, 23), set_125413, unicode_125414)
    # Adding element type (line 685)
    unicode_125415 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 685, 30), 'unicode', u'/')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 685, 23), set_125413, unicode_125415)
    # Adding element type (line 685)
    unicode_125416 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 685, 35), 'unicode', u'|')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 685, 23), set_125413, unicode_125416)
    # Adding element type (line 685)
    unicode_125417 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 685, 40), 'unicode', u'-')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 685, 23), set_125413, unicode_125417)
    # Adding element type (line 685)
    unicode_125418 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 685, 45), 'unicode', u'+')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 685, 23), set_125413, unicode_125418)
    # Adding element type (line 685)
    unicode_125419 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 685, 50), 'unicode', u'*')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 685, 23), set_125413, unicode_125419)
    # Adding element type (line 685)
    unicode_125420 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 685, 55), 'unicode', u'.')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 685, 23), set_125413, unicode_125420)
    # Adding element type (line 685)
    unicode_125421 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 685, 60), 'unicode', u'x')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 685, 23), set_125413, unicode_125421)
    # Adding element type (line 685)
    unicode_125422 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 685, 65), 'unicode', u'o')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 685, 23), set_125413, unicode_125422)
    # Adding element type (line 685)
    unicode_125423 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 685, 70), 'unicode', u'O')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 685, 23), set_125413, unicode_125423)
    
    # Applying the binary operator '-' (line 685)
    result_sub_125424 = python_operator(stypy.reporting.localization.Localization(__file__, 685, 14), '-', set_call_result_125412, set_125413)
    
    # Assigning a type to the variable 'unknown' (line 685)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 685, 4), 'unknown', result_sub_125424)
    
    # Getting the type of 'unknown' (line 686)
    unknown_125425 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 686, 7), 'unknown')
    # Testing the type of an if condition (line 686)
    if_condition_125426 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 686, 4), unknown_125425)
    # Assigning a type to the variable 'if_condition_125426' (line 686)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 686, 4), 'if_condition_125426', if_condition_125426)
    # SSA begins for if statement (line 686)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to ValueError(...): (line 687)
    # Processing the call arguments (line 687)
    unicode_125428 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 687, 25), 'unicode', u'Unknown hatch symbol(s): %s')
    
    # Call to list(...): (line 687)
    # Processing the call arguments (line 687)
    # Getting the type of 'unknown' (line 687)
    unknown_125430 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 687, 62), 'unknown', False)
    # Processing the call keyword arguments (line 687)
    kwargs_125431 = {}
    # Getting the type of 'list' (line 687)
    list_125429 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 687, 57), 'list', False)
    # Calling list(args, kwargs) (line 687)
    list_call_result_125432 = invoke(stypy.reporting.localization.Localization(__file__, 687, 57), list_125429, *[unknown_125430], **kwargs_125431)
    
    # Applying the binary operator '%' (line 687)
    result_mod_125433 = python_operator(stypy.reporting.localization.Localization(__file__, 687, 25), '%', unicode_125428, list_call_result_125432)
    
    # Processing the call keyword arguments (line 687)
    kwargs_125434 = {}
    # Getting the type of 'ValueError' (line 687)
    ValueError_125427 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 687, 14), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 687)
    ValueError_call_result_125435 = invoke(stypy.reporting.localization.Localization(__file__, 687, 14), ValueError_125427, *[result_mod_125433], **kwargs_125434)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 687, 8), ValueError_call_result_125435, 'raise parameter', BaseException)
    # SSA join for if statement (line 686)
    module_type_store = module_type_store.join_ssa_context()
    
    # Getting the type of 's' (line 688)
    s_125436 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 688, 11), 's')
    # Assigning a type to the variable 'stypy_return_type' (line 688)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 688, 4), 'stypy_return_type', s_125436)
    
    # ################# End of 'validate_hatch(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'validate_hatch' in the type store
    # Getting the type of 'stypy_return_type' (line 676)
    stypy_return_type_125437 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 676, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_125437)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'validate_hatch'
    return stypy_return_type_125437

# Assigning a type to the variable 'validate_hatch' (line 676)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 676, 0), 'validate_hatch', validate_hatch)

# Assigning a Call to a Name (line 689):

# Call to _listify_validator(...): (line 689)
# Processing the call arguments (line 689)
# Getting the type of 'validate_hatch' (line 689)
validate_hatch_125439 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 689, 40), 'validate_hatch', False)
# Processing the call keyword arguments (line 689)
kwargs_125440 = {}
# Getting the type of '_listify_validator' (line 689)
_listify_validator_125438 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 689, 21), '_listify_validator', False)
# Calling _listify_validator(args, kwargs) (line 689)
_listify_validator_call_result_125441 = invoke(stypy.reporting.localization.Localization(__file__, 689, 21), _listify_validator_125438, *[validate_hatch_125439], **kwargs_125440)

# Assigning a type to the variable 'validate_hatchlist' (line 689)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 689, 0), 'validate_hatchlist', _listify_validator_call_result_125441)

# Assigning a Call to a Name (line 690):

# Call to _listify_validator(...): (line 690)
# Processing the call arguments (line 690)

# Call to validate_nseq_float(...): (line 690)
# Processing the call keyword arguments (line 690)
# Getting the type of 'True' (line 690)
True_125444 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 690, 70), 'True', False)
keyword_125445 = True_125444
kwargs_125446 = {'allow_none': keyword_125445}
# Getting the type of 'validate_nseq_float' (line 690)
validate_nseq_float_125443 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 690, 39), 'validate_nseq_float', False)
# Calling validate_nseq_float(args, kwargs) (line 690)
validate_nseq_float_call_result_125447 = invoke(stypy.reporting.localization.Localization(__file__, 690, 39), validate_nseq_float_125443, *[], **kwargs_125446)

# Processing the call keyword arguments (line 690)
kwargs_125448 = {}
# Getting the type of '_listify_validator' (line 690)
_listify_validator_125442 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 690, 20), '_listify_validator', False)
# Calling _listify_validator(args, kwargs) (line 690)
_listify_validator_call_result_125449 = invoke(stypy.reporting.localization.Localization(__file__, 690, 20), _listify_validator_125442, *[validate_nseq_float_call_result_125447], **kwargs_125448)

# Assigning a type to the variable 'validate_dashlist' (line 690)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 690, 0), 'validate_dashlist', _listify_validator_call_result_125449)

# Assigning a Dict to a Name (line 692):

# Obtaining an instance of the builtin type 'dict' (line 692)
dict_125450 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 692, 19), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 692)
# Adding element type (key, value) (line 692)
unicode_125451 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 693, 8), 'unicode', u'color')

# Call to _listify_validator(...): (line 693)
# Processing the call arguments (line 693)
# Getting the type of 'validate_color_for_prop_cycle' (line 693)
validate_color_for_prop_cycle_125453 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 693, 36), 'validate_color_for_prop_cycle', False)
# Processing the call keyword arguments (line 693)
# Getting the type of 'True' (line 694)
True_125454 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 694, 53), 'True', False)
keyword_125455 = True_125454
kwargs_125456 = {'allow_stringlist': keyword_125455}
# Getting the type of '_listify_validator' (line 693)
_listify_validator_125452 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 693, 17), '_listify_validator', False)
# Calling _listify_validator(args, kwargs) (line 693)
_listify_validator_call_result_125457 = invoke(stypy.reporting.localization.Localization(__file__, 693, 17), _listify_validator_125452, *[validate_color_for_prop_cycle_125453], **kwargs_125456)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 692, 19), dict_125450, (unicode_125451, _listify_validator_call_result_125457))
# Adding element type (key, value) (line 692)
unicode_125458 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 695, 8), 'unicode', u'linewidth')
# Getting the type of 'validate_floatlist' (line 695)
validate_floatlist_125459 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 695, 21), 'validate_floatlist')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 692, 19), dict_125450, (unicode_125458, validate_floatlist_125459))
# Adding element type (key, value) (line 692)
unicode_125460 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 696, 8), 'unicode', u'linestyle')
# Getting the type of 'validate_stringlist' (line 696)
validate_stringlist_125461 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 696, 21), 'validate_stringlist')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 692, 19), dict_125450, (unicode_125460, validate_stringlist_125461))
# Adding element type (key, value) (line 692)
unicode_125462 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 697, 8), 'unicode', u'facecolor')
# Getting the type of 'validate_colorlist' (line 697)
validate_colorlist_125463 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 697, 21), 'validate_colorlist')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 692, 19), dict_125450, (unicode_125462, validate_colorlist_125463))
# Adding element type (key, value) (line 692)
unicode_125464 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 698, 8), 'unicode', u'edgecolor')
# Getting the type of 'validate_colorlist' (line 698)
validate_colorlist_125465 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 698, 21), 'validate_colorlist')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 692, 19), dict_125450, (unicode_125464, validate_colorlist_125465))
# Adding element type (key, value) (line 692)
unicode_125466 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 699, 8), 'unicode', u'joinstyle')
# Getting the type of 'validate_joinstylelist' (line 699)
validate_joinstylelist_125467 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 699, 21), 'validate_joinstylelist')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 692, 19), dict_125450, (unicode_125466, validate_joinstylelist_125467))
# Adding element type (key, value) (line 692)
unicode_125468 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 700, 8), 'unicode', u'capstyle')
# Getting the type of 'validate_capstylelist' (line 700)
validate_capstylelist_125469 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 700, 20), 'validate_capstylelist')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 692, 19), dict_125450, (unicode_125468, validate_capstylelist_125469))
# Adding element type (key, value) (line 692)
unicode_125470 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 701, 8), 'unicode', u'fillstyle')
# Getting the type of 'validate_fillstylelist' (line 701)
validate_fillstylelist_125471 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 701, 21), 'validate_fillstylelist')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 692, 19), dict_125450, (unicode_125470, validate_fillstylelist_125471))
# Adding element type (key, value) (line 692)
unicode_125472 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 702, 8), 'unicode', u'markerfacecolor')
# Getting the type of 'validate_colorlist' (line 702)
validate_colorlist_125473 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 702, 27), 'validate_colorlist')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 692, 19), dict_125450, (unicode_125472, validate_colorlist_125473))
# Adding element type (key, value) (line 692)
unicode_125474 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 703, 8), 'unicode', u'markersize')
# Getting the type of 'validate_floatlist' (line 703)
validate_floatlist_125475 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 703, 22), 'validate_floatlist')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 692, 19), dict_125450, (unicode_125474, validate_floatlist_125475))
# Adding element type (key, value) (line 692)
unicode_125476 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 704, 8), 'unicode', u'markeredgewidth')
# Getting the type of 'validate_floatlist' (line 704)
validate_floatlist_125477 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 704, 27), 'validate_floatlist')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 692, 19), dict_125450, (unicode_125476, validate_floatlist_125477))
# Adding element type (key, value) (line 692)
unicode_125478 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 705, 8), 'unicode', u'markeredgecolor')
# Getting the type of 'validate_colorlist' (line 705)
validate_colorlist_125479 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 705, 27), 'validate_colorlist')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 692, 19), dict_125450, (unicode_125478, validate_colorlist_125479))
# Adding element type (key, value) (line 692)
unicode_125480 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 706, 8), 'unicode', u'alpha')
# Getting the type of 'validate_floatlist' (line 706)
validate_floatlist_125481 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 706, 17), 'validate_floatlist')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 692, 19), dict_125450, (unicode_125480, validate_floatlist_125481))
# Adding element type (key, value) (line 692)
unicode_125482 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 707, 8), 'unicode', u'marker')
# Getting the type of 'validate_stringlist' (line 707)
validate_stringlist_125483 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 707, 18), 'validate_stringlist')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 692, 19), dict_125450, (unicode_125482, validate_stringlist_125483))
# Adding element type (key, value) (line 692)
unicode_125484 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 708, 8), 'unicode', u'hatch')
# Getting the type of 'validate_hatchlist' (line 708)
validate_hatchlist_125485 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 708, 17), 'validate_hatchlist')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 692, 19), dict_125450, (unicode_125484, validate_hatchlist_125485))
# Adding element type (key, value) (line 692)
unicode_125486 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 709, 8), 'unicode', u'dashes')
# Getting the type of 'validate_dashlist' (line 709)
validate_dashlist_125487 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 709, 18), 'validate_dashlist')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 692, 19), dict_125450, (unicode_125486, validate_dashlist_125487))

# Assigning a type to the variable '_prop_validators' (line 692)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 692, 0), '_prop_validators', dict_125450)

# Assigning a Dict to a Name (line 711):

# Obtaining an instance of the builtin type 'dict' (line 711)
dict_125488 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 711, 16), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 711)
# Adding element type (key, value) (line 711)
unicode_125489 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 712, 8), 'unicode', u'c')
unicode_125490 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 712, 13), 'unicode', u'color')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 711, 16), dict_125488, (unicode_125489, unicode_125490))
# Adding element type (key, value) (line 711)
unicode_125491 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 713, 8), 'unicode', u'lw')
unicode_125492 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 713, 14), 'unicode', u'linewidth')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 711, 16), dict_125488, (unicode_125491, unicode_125492))
# Adding element type (key, value) (line 711)
unicode_125493 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 714, 8), 'unicode', u'ls')
unicode_125494 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 714, 14), 'unicode', u'linestyle')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 711, 16), dict_125488, (unicode_125493, unicode_125494))
# Adding element type (key, value) (line 711)
unicode_125495 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 715, 8), 'unicode', u'fc')
unicode_125496 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 715, 14), 'unicode', u'facecolor')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 711, 16), dict_125488, (unicode_125495, unicode_125496))
# Adding element type (key, value) (line 711)
unicode_125497 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 716, 8), 'unicode', u'ec')
unicode_125498 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 716, 14), 'unicode', u'edgecolor')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 711, 16), dict_125488, (unicode_125497, unicode_125498))
# Adding element type (key, value) (line 711)
unicode_125499 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 717, 8), 'unicode', u'mfc')
unicode_125500 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 717, 15), 'unicode', u'markerfacecolor')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 711, 16), dict_125488, (unicode_125499, unicode_125500))
# Adding element type (key, value) (line 711)
unicode_125501 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 718, 8), 'unicode', u'mec')
unicode_125502 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 718, 15), 'unicode', u'markeredgecolor')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 711, 16), dict_125488, (unicode_125501, unicode_125502))
# Adding element type (key, value) (line 711)
unicode_125503 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 719, 8), 'unicode', u'mew')
unicode_125504 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 719, 15), 'unicode', u'markeredgewidth')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 711, 16), dict_125488, (unicode_125503, unicode_125504))
# Adding element type (key, value) (line 711)
unicode_125505 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 720, 8), 'unicode', u'ms')
unicode_125506 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 720, 14), 'unicode', u'markersize')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 711, 16), dict_125488, (unicode_125505, unicode_125506))

# Assigning a type to the variable '_prop_aliases' (line 711)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 711, 0), '_prop_aliases', dict_125488)

@norecursion
def cycler(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'cycler'
    module_type_store = module_type_store.open_function_context('cycler', 724, 0, False)
    
    # Passed parameters checking function
    cycler.stypy_localization = localization
    cycler.stypy_type_of_self = None
    cycler.stypy_type_store = module_type_store
    cycler.stypy_function_name = 'cycler'
    cycler.stypy_param_names_list = []
    cycler.stypy_varargs_param_name = 'args'
    cycler.stypy_kwargs_param_name = 'kwargs'
    cycler.stypy_call_defaults = defaults
    cycler.stypy_call_varargs = varargs
    cycler.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'cycler', [], 'args', 'kwargs', defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'cycler', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'cycler(...)' code ##################

    unicode_125507 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 760, (-1)), 'unicode', u"\n    Creates a :class:`cycler.Cycler` object much like :func:`cycler.cycler`,\n    but includes input validation.\n\n    cycler(arg)\n    cycler(label, itr)\n    cycler(label1=itr1[, label2=itr2[, ...]])\n\n    Form 1 simply copies a given `Cycler` object.\n\n    Form 2 creates a `Cycler` from a label and an iterable.\n\n    Form 3 composes a `Cycler` as an inner product of the\n    pairs of keyword arguments. In other words, all of the\n    iterables are cycled simultaneously, as if through zip().\n\n    Parameters\n    ----------\n    arg : Cycler\n        Copy constructor for Cycler.\n\n    label : name\n        The property key. Must be a valid `Artist` property.\n        For example, 'color' or 'linestyle'. Aliases are allowed,\n        such as 'c' for 'color' and 'lw' for 'linewidth'.\n\n    itr : iterable\n        Finite-length iterable of the property values. These values\n        are validated and will raise a ValueError if invalid.\n\n    Returns\n    -------\n    cycler : Cycler\n        New :class:`cycler.Cycler` for the given properties\n\n    ")
    
    
    # Evaluating a boolean operation
    # Getting the type of 'args' (line 761)
    args_125508 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 761, 7), 'args')
    # Getting the type of 'kwargs' (line 761)
    kwargs_125509 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 761, 16), 'kwargs')
    # Applying the binary operator 'and' (line 761)
    result_and_keyword_125510 = python_operator(stypy.reporting.localization.Localization(__file__, 761, 7), 'and', args_125508, kwargs_125509)
    
    # Testing the type of an if condition (line 761)
    if_condition_125511 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 761, 4), result_and_keyword_125510)
    # Assigning a type to the variable 'if_condition_125511' (line 761)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 761, 4), 'if_condition_125511', if_condition_125511)
    # SSA begins for if statement (line 761)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to TypeError(...): (line 762)
    # Processing the call arguments (line 762)
    unicode_125513 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 762, 24), 'unicode', u'cycler() can only accept positional OR keyword arguments -- not both.')
    # Processing the call keyword arguments (line 762)
    kwargs_125514 = {}
    # Getting the type of 'TypeError' (line 762)
    TypeError_125512 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 762, 14), 'TypeError', False)
    # Calling TypeError(args, kwargs) (line 762)
    TypeError_call_result_125515 = invoke(stypy.reporting.localization.Localization(__file__, 762, 14), TypeError_125512, *[unicode_125513], **kwargs_125514)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 762, 8), TypeError_call_result_125515, 'raise parameter', BaseException)
    # SSA branch for the else part of an if statement (line 761)
    module_type_store.open_ssa_branch('else')
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'args' (line 764)
    args_125516 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 764, 13), 'args')
    # Applying the 'not' unary operator (line 764)
    result_not__125517 = python_operator(stypy.reporting.localization.Localization(__file__, 764, 9), 'not', args_125516)
    
    
    # Getting the type of 'kwargs' (line 764)
    kwargs_125518 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 764, 26), 'kwargs')
    # Applying the 'not' unary operator (line 764)
    result_not__125519 = python_operator(stypy.reporting.localization.Localization(__file__, 764, 22), 'not', kwargs_125518)
    
    # Applying the binary operator 'and' (line 764)
    result_and_keyword_125520 = python_operator(stypy.reporting.localization.Localization(__file__, 764, 9), 'and', result_not__125517, result_not__125519)
    
    # Testing the type of an if condition (line 764)
    if_condition_125521 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 764, 9), result_and_keyword_125520)
    # Assigning a type to the variable 'if_condition_125521' (line 764)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 764, 9), 'if_condition_125521', if_condition_125521)
    # SSA begins for if statement (line 764)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to TypeError(...): (line 765)
    # Processing the call arguments (line 765)
    unicode_125523 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 765, 24), 'unicode', u'cycler() must have positional OR keyword arguments')
    # Processing the call keyword arguments (line 765)
    kwargs_125524 = {}
    # Getting the type of 'TypeError' (line 765)
    TypeError_125522 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 765, 14), 'TypeError', False)
    # Calling TypeError(args, kwargs) (line 765)
    TypeError_call_result_125525 = invoke(stypy.reporting.localization.Localization(__file__, 765, 14), TypeError_125522, *[unicode_125523], **kwargs_125524)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 765, 8), TypeError_call_result_125525, 'raise parameter', BaseException)
    # SSA join for if statement (line 764)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 761)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    
    # Call to len(...): (line 767)
    # Processing the call arguments (line 767)
    # Getting the type of 'args' (line 767)
    args_125527 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 767, 11), 'args', False)
    # Processing the call keyword arguments (line 767)
    kwargs_125528 = {}
    # Getting the type of 'len' (line 767)
    len_125526 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 767, 7), 'len', False)
    # Calling len(args, kwargs) (line 767)
    len_call_result_125529 = invoke(stypy.reporting.localization.Localization(__file__, 767, 7), len_125526, *[args_125527], **kwargs_125528)
    
    int_125530 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 767, 20), 'int')
    # Applying the binary operator '==' (line 767)
    result_eq_125531 = python_operator(stypy.reporting.localization.Localization(__file__, 767, 7), '==', len_call_result_125529, int_125530)
    
    # Testing the type of an if condition (line 767)
    if_condition_125532 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 767, 4), result_eq_125531)
    # Assigning a type to the variable 'if_condition_125532' (line 767)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 767, 4), 'if_condition_125532', if_condition_125532)
    # SSA begins for if statement (line 767)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    
    # Call to isinstance(...): (line 768)
    # Processing the call arguments (line 768)
    
    # Obtaining the type of the subscript
    int_125534 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 768, 31), 'int')
    # Getting the type of 'args' (line 768)
    args_125535 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 768, 26), 'args', False)
    # Obtaining the member '__getitem__' of a type (line 768)
    getitem___125536 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 768, 26), args_125535, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 768)
    subscript_call_result_125537 = invoke(stypy.reporting.localization.Localization(__file__, 768, 26), getitem___125536, int_125534)
    
    # Getting the type of 'Cycler' (line 768)
    Cycler_125538 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 768, 35), 'Cycler', False)
    # Processing the call keyword arguments (line 768)
    kwargs_125539 = {}
    # Getting the type of 'isinstance' (line 768)
    isinstance_125533 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 768, 15), 'isinstance', False)
    # Calling isinstance(args, kwargs) (line 768)
    isinstance_call_result_125540 = invoke(stypy.reporting.localization.Localization(__file__, 768, 15), isinstance_125533, *[subscript_call_result_125537, Cycler_125538], **kwargs_125539)
    
    # Applying the 'not' unary operator (line 768)
    result_not__125541 = python_operator(stypy.reporting.localization.Localization(__file__, 768, 11), 'not', isinstance_call_result_125540)
    
    # Testing the type of an if condition (line 768)
    if_condition_125542 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 768, 8), result_not__125541)
    # Assigning a type to the variable 'if_condition_125542' (line 768)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 768, 8), 'if_condition_125542', if_condition_125542)
    # SSA begins for if statement (line 768)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to TypeError(...): (line 769)
    # Processing the call arguments (line 769)
    unicode_125544 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 769, 28), 'unicode', u'If only one positional argument given, it must  be a Cycler instance.')
    # Processing the call keyword arguments (line 769)
    kwargs_125545 = {}
    # Getting the type of 'TypeError' (line 769)
    TypeError_125543 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 769, 18), 'TypeError', False)
    # Calling TypeError(args, kwargs) (line 769)
    TypeError_call_result_125546 = invoke(stypy.reporting.localization.Localization(__file__, 769, 18), TypeError_125543, *[unicode_125544], **kwargs_125545)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 769, 12), TypeError_call_result_125546, 'raise parameter', BaseException)
    # SSA join for if statement (line 768)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Call to validate_cycler(...): (line 771)
    # Processing the call arguments (line 771)
    
    # Obtaining the type of the subscript
    int_125548 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 771, 36), 'int')
    # Getting the type of 'args' (line 771)
    args_125549 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 771, 31), 'args', False)
    # Obtaining the member '__getitem__' of a type (line 771)
    getitem___125550 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 771, 31), args_125549, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 771)
    subscript_call_result_125551 = invoke(stypy.reporting.localization.Localization(__file__, 771, 31), getitem___125550, int_125548)
    
    # Processing the call keyword arguments (line 771)
    kwargs_125552 = {}
    # Getting the type of 'validate_cycler' (line 771)
    validate_cycler_125547 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 771, 15), 'validate_cycler', False)
    # Calling validate_cycler(args, kwargs) (line 771)
    validate_cycler_call_result_125553 = invoke(stypy.reporting.localization.Localization(__file__, 771, 15), validate_cycler_125547, *[subscript_call_result_125551], **kwargs_125552)
    
    # Assigning a type to the variable 'stypy_return_type' (line 771)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 771, 8), 'stypy_return_type', validate_cycler_call_result_125553)
    # SSA branch for the else part of an if statement (line 767)
    module_type_store.open_ssa_branch('else')
    
    
    
    # Call to len(...): (line 772)
    # Processing the call arguments (line 772)
    # Getting the type of 'args' (line 772)
    args_125555 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 772, 13), 'args', False)
    # Processing the call keyword arguments (line 772)
    kwargs_125556 = {}
    # Getting the type of 'len' (line 772)
    len_125554 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 772, 9), 'len', False)
    # Calling len(args, kwargs) (line 772)
    len_call_result_125557 = invoke(stypy.reporting.localization.Localization(__file__, 772, 9), len_125554, *[args_125555], **kwargs_125556)
    
    int_125558 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 772, 22), 'int')
    # Applying the binary operator '==' (line 772)
    result_eq_125559 = python_operator(stypy.reporting.localization.Localization(__file__, 772, 9), '==', len_call_result_125557, int_125558)
    
    # Testing the type of an if condition (line 772)
    if_condition_125560 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 772, 9), result_eq_125559)
    # Assigning a type to the variable 'if_condition_125560' (line 772)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 772, 9), 'if_condition_125560', if_condition_125560)
    # SSA begins for if statement (line 772)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a List to a Name (line 773):
    
    # Obtaining an instance of the builtin type 'list' (line 773)
    list_125561 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 773, 16), 'list')
    # Adding type elements to the builtin type 'list' instance (line 773)
    # Adding element type (line 773)
    
    # Obtaining an instance of the builtin type 'tuple' (line 773)
    tuple_125562 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 773, 18), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 773)
    # Adding element type (line 773)
    
    # Obtaining the type of the subscript
    int_125563 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 773, 23), 'int')
    # Getting the type of 'args' (line 773)
    args_125564 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 773, 18), 'args')
    # Obtaining the member '__getitem__' of a type (line 773)
    getitem___125565 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 773, 18), args_125564, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 773)
    subscript_call_result_125566 = invoke(stypy.reporting.localization.Localization(__file__, 773, 18), getitem___125565, int_125563)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 773, 18), tuple_125562, subscript_call_result_125566)
    # Adding element type (line 773)
    
    # Obtaining the type of the subscript
    int_125567 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 773, 32), 'int')
    # Getting the type of 'args' (line 773)
    args_125568 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 773, 27), 'args')
    # Obtaining the member '__getitem__' of a type (line 773)
    getitem___125569 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 773, 27), args_125568, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 773)
    subscript_call_result_125570 = invoke(stypy.reporting.localization.Localization(__file__, 773, 27), getitem___125569, int_125567)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 773, 18), tuple_125562, subscript_call_result_125570)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 773, 16), list_125561, tuple_125562)
    
    # Assigning a type to the variable 'pairs' (line 773)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 773, 8), 'pairs', list_125561)
    # SSA branch for the else part of an if statement (line 772)
    module_type_store.open_ssa_branch('else')
    
    
    
    # Call to len(...): (line 774)
    # Processing the call arguments (line 774)
    # Getting the type of 'args' (line 774)
    args_125572 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 774, 13), 'args', False)
    # Processing the call keyword arguments (line 774)
    kwargs_125573 = {}
    # Getting the type of 'len' (line 774)
    len_125571 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 774, 9), 'len', False)
    # Calling len(args, kwargs) (line 774)
    len_call_result_125574 = invoke(stypy.reporting.localization.Localization(__file__, 774, 9), len_125571, *[args_125572], **kwargs_125573)
    
    int_125575 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 774, 21), 'int')
    # Applying the binary operator '>' (line 774)
    result_gt_125576 = python_operator(stypy.reporting.localization.Localization(__file__, 774, 9), '>', len_call_result_125574, int_125575)
    
    # Testing the type of an if condition (line 774)
    if_condition_125577 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 774, 9), result_gt_125576)
    # Assigning a type to the variable 'if_condition_125577' (line 774)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 774, 9), 'if_condition_125577', if_condition_125577)
    # SSA begins for if statement (line 774)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to TypeError(...): (line 775)
    # Processing the call arguments (line 775)
    unicode_125579 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 775, 24), 'unicode', u'No more than 2 positional arguments allowed')
    # Processing the call keyword arguments (line 775)
    kwargs_125580 = {}
    # Getting the type of 'TypeError' (line 775)
    TypeError_125578 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 775, 14), 'TypeError', False)
    # Calling TypeError(args, kwargs) (line 775)
    TypeError_call_result_125581 = invoke(stypy.reporting.localization.Localization(__file__, 775, 14), TypeError_125578, *[unicode_125579], **kwargs_125580)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 775, 8), TypeError_call_result_125581, 'raise parameter', BaseException)
    # SSA branch for the else part of an if statement (line 774)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a Call to a Name (line 777):
    
    # Call to iteritems(...): (line 777)
    # Processing the call arguments (line 777)
    # Getting the type of 'kwargs' (line 777)
    kwargs_125584 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 777, 30), 'kwargs', False)
    # Processing the call keyword arguments (line 777)
    kwargs_125585 = {}
    # Getting the type of 'six' (line 777)
    six_125582 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 777, 16), 'six', False)
    # Obtaining the member 'iteritems' of a type (line 777)
    iteritems_125583 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 777, 16), six_125582, 'iteritems')
    # Calling iteritems(args, kwargs) (line 777)
    iteritems_call_result_125586 = invoke(stypy.reporting.localization.Localization(__file__, 777, 16), iteritems_125583, *[kwargs_125584], **kwargs_125585)
    
    # Assigning a type to the variable 'pairs' (line 777)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 777, 8), 'pairs', iteritems_call_result_125586)
    # SSA join for if statement (line 774)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 772)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 767)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a List to a Name (line 779):
    
    # Obtaining an instance of the builtin type 'list' (line 779)
    list_125587 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 779, 16), 'list')
    # Adding type elements to the builtin type 'list' instance (line 779)
    
    # Assigning a type to the variable 'validated' (line 779)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 779, 4), 'validated', list_125587)
    
    # Getting the type of 'pairs' (line 780)
    pairs_125588 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 780, 22), 'pairs')
    # Testing the type of a for loop iterable (line 780)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 780, 4), pairs_125588)
    # Getting the type of the for loop variable (line 780)
    for_loop_var_125589 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 780, 4), pairs_125588)
    # Assigning a type to the variable 'prop' (line 780)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 780, 4), 'prop', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 780, 4), for_loop_var_125589))
    # Assigning a type to the variable 'vals' (line 780)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 780, 4), 'vals', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 780, 4), for_loop_var_125589))
    # SSA begins for a for statement (line 780)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Call to a Name (line 781):
    
    # Call to get(...): (line 781)
    # Processing the call arguments (line 781)
    # Getting the type of 'prop' (line 781)
    prop_125592 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 781, 38), 'prop', False)
    # Getting the type of 'prop' (line 781)
    prop_125593 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 781, 44), 'prop', False)
    # Processing the call keyword arguments (line 781)
    kwargs_125594 = {}
    # Getting the type of '_prop_aliases' (line 781)
    _prop_aliases_125590 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 781, 20), '_prop_aliases', False)
    # Obtaining the member 'get' of a type (line 781)
    get_125591 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 781, 20), _prop_aliases_125590, 'get')
    # Calling get(args, kwargs) (line 781)
    get_call_result_125595 = invoke(stypy.reporting.localization.Localization(__file__, 781, 20), get_125591, *[prop_125592, prop_125593], **kwargs_125594)
    
    # Assigning a type to the variable 'norm_prop' (line 781)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 781, 8), 'norm_prop', get_call_result_125595)
    
    # Assigning a Call to a Name (line 782):
    
    # Call to get(...): (line 782)
    # Processing the call arguments (line 782)
    # Getting the type of 'norm_prop' (line 782)
    norm_prop_125598 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 782, 41), 'norm_prop', False)
    # Getting the type of 'None' (line 782)
    None_125599 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 782, 52), 'None', False)
    # Processing the call keyword arguments (line 782)
    kwargs_125600 = {}
    # Getting the type of '_prop_validators' (line 782)
    _prop_validators_125596 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 782, 20), '_prop_validators', False)
    # Obtaining the member 'get' of a type (line 782)
    get_125597 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 782, 20), _prop_validators_125596, 'get')
    # Calling get(args, kwargs) (line 782)
    get_call_result_125601 = invoke(stypy.reporting.localization.Localization(__file__, 782, 20), get_125597, *[norm_prop_125598, None_125599], **kwargs_125600)
    
    # Assigning a type to the variable 'validator' (line 782)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 782, 8), 'validator', get_call_result_125601)
    
    # Type idiom detected: calculating its left and rigth part (line 783)
    # Getting the type of 'validator' (line 783)
    validator_125602 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 783, 11), 'validator')
    # Getting the type of 'None' (line 783)
    None_125603 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 783, 24), 'None')
    
    (may_be_125604, more_types_in_union_125605) = may_be_none(validator_125602, None_125603)

    if may_be_125604:

        if more_types_in_union_125605:
            # Runtime conditional SSA (line 783)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        
        # Call to TypeError(...): (line 784)
        # Processing the call arguments (line 784)
        unicode_125607 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 784, 28), 'unicode', u'Unknown artist property: %s')
        # Getting the type of 'prop' (line 784)
        prop_125608 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 784, 60), 'prop', False)
        # Applying the binary operator '%' (line 784)
        result_mod_125609 = python_operator(stypy.reporting.localization.Localization(__file__, 784, 28), '%', unicode_125607, prop_125608)
        
        # Processing the call keyword arguments (line 784)
        kwargs_125610 = {}
        # Getting the type of 'TypeError' (line 784)
        TypeError_125606 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 784, 18), 'TypeError', False)
        # Calling TypeError(args, kwargs) (line 784)
        TypeError_call_result_125611 = invoke(stypy.reporting.localization.Localization(__file__, 784, 18), TypeError_125606, *[result_mod_125609], **kwargs_125610)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 784, 12), TypeError_call_result_125611, 'raise parameter', BaseException)

        if more_types_in_union_125605:
            # SSA join for if statement (line 783)
            module_type_store = module_type_store.join_ssa_context()


    
    
    # Assigning a Call to a Name (line 785):
    
    # Call to validator(...): (line 785)
    # Processing the call arguments (line 785)
    # Getting the type of 'vals' (line 785)
    vals_125613 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 785, 25), 'vals', False)
    # Processing the call keyword arguments (line 785)
    kwargs_125614 = {}
    # Getting the type of 'validator' (line 785)
    validator_125612 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 785, 15), 'validator', False)
    # Calling validator(args, kwargs) (line 785)
    validator_call_result_125615 = invoke(stypy.reporting.localization.Localization(__file__, 785, 15), validator_125612, *[vals_125613], **kwargs_125614)
    
    # Assigning a type to the variable 'vals' (line 785)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 785, 8), 'vals', validator_call_result_125615)
    
    # Call to append(...): (line 788)
    # Processing the call arguments (line 788)
    
    # Obtaining an instance of the builtin type 'tuple' (line 788)
    tuple_125618 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 788, 26), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 788)
    # Adding element type (line 788)
    # Getting the type of 'norm_prop' (line 788)
    norm_prop_125619 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 788, 26), 'norm_prop', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 788, 26), tuple_125618, norm_prop_125619)
    # Adding element type (line 788)
    # Getting the type of 'vals' (line 788)
    vals_125620 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 788, 37), 'vals', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 788, 26), tuple_125618, vals_125620)
    
    # Processing the call keyword arguments (line 788)
    kwargs_125621 = {}
    # Getting the type of 'validated' (line 788)
    validated_125616 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 788, 8), 'validated', False)
    # Obtaining the member 'append' of a type (line 788)
    append_125617 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 788, 8), validated_125616, 'append')
    # Calling append(args, kwargs) (line 788)
    append_call_result_125622 = invoke(stypy.reporting.localization.Localization(__file__, 788, 8), append_125617, *[tuple_125618], **kwargs_125621)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Call to reduce(...): (line 790)
    # Processing the call arguments (line 790)
    # Getting the type of 'operator' (line 790)
    operator_125624 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 790, 18), 'operator', False)
    # Obtaining the member 'add' of a type (line 790)
    add_125625 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 790, 18), operator_125624, 'add')
    # Calculating generator expression
    module_type_store = module_type_store.open_function_context('list comprehension expression', 790, 33, True)
    # Calculating comprehension expression
    # Getting the type of 'validated' (line 790)
    validated_125631 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 790, 59), 'validated', False)
    comprehension_125632 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 790, 33), validated_125631)
    # Assigning a type to the variable 'k' (line 790)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 790, 33), 'k', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 790, 33), comprehension_125632))
    # Assigning a type to the variable 'v' (line 790)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 790, 33), 'v', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 790, 33), comprehension_125632))
    
    # Call to ccycler(...): (line 790)
    # Processing the call arguments (line 790)
    # Getting the type of 'k' (line 790)
    k_125627 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 790, 41), 'k', False)
    # Getting the type of 'v' (line 790)
    v_125628 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 790, 44), 'v', False)
    # Processing the call keyword arguments (line 790)
    kwargs_125629 = {}
    # Getting the type of 'ccycler' (line 790)
    ccycler_125626 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 790, 33), 'ccycler', False)
    # Calling ccycler(args, kwargs) (line 790)
    ccycler_call_result_125630 = invoke(stypy.reporting.localization.Localization(__file__, 790, 33), ccycler_125626, *[k_125627, v_125628], **kwargs_125629)
    
    list_125633 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 790, 33), 'list')
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 790, 33), list_125633, ccycler_call_result_125630)
    # Processing the call keyword arguments (line 790)
    kwargs_125634 = {}
    # Getting the type of 'reduce' (line 790)
    reduce_125623 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 790, 11), 'reduce', False)
    # Calling reduce(args, kwargs) (line 790)
    reduce_call_result_125635 = invoke(stypy.reporting.localization.Localization(__file__, 790, 11), reduce_125623, *[add_125625, list_125633], **kwargs_125634)
    
    # Assigning a type to the variable 'stypy_return_type' (line 790)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 790, 4), 'stypy_return_type', reduce_call_result_125635)
    
    # ################# End of 'cycler(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'cycler' in the type store
    # Getting the type of 'stypy_return_type' (line 724)
    stypy_return_type_125636 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 724, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_125636)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'cycler'
    return stypy_return_type_125636

# Assigning a type to the variable 'cycler' (line 724)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 724, 0), 'cycler', cycler)

@norecursion
def validate_cycler(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'validate_cycler'
    module_type_store = module_type_store.open_function_context('validate_cycler', 793, 0, False)
    
    # Passed parameters checking function
    validate_cycler.stypy_localization = localization
    validate_cycler.stypy_type_of_self = None
    validate_cycler.stypy_type_store = module_type_store
    validate_cycler.stypy_function_name = 'validate_cycler'
    validate_cycler.stypy_param_names_list = ['s']
    validate_cycler.stypy_varargs_param_name = None
    validate_cycler.stypy_kwargs_param_name = None
    validate_cycler.stypy_call_defaults = defaults
    validate_cycler.stypy_call_varargs = varargs
    validate_cycler.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'validate_cycler', ['s'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'validate_cycler', localization, ['s'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'validate_cycler(...)' code ##################

    unicode_125637 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 794, 4), 'unicode', u'return a Cycler object from a string repr or the object itself')
    
    
    # Call to isinstance(...): (line 795)
    # Processing the call arguments (line 795)
    # Getting the type of 's' (line 795)
    s_125639 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 795, 18), 's', False)
    # Getting the type of 'six' (line 795)
    six_125640 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 795, 21), 'six', False)
    # Obtaining the member 'string_types' of a type (line 795)
    string_types_125641 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 795, 21), six_125640, 'string_types')
    # Processing the call keyword arguments (line 795)
    kwargs_125642 = {}
    # Getting the type of 'isinstance' (line 795)
    isinstance_125638 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 795, 7), 'isinstance', False)
    # Calling isinstance(args, kwargs) (line 795)
    isinstance_call_result_125643 = invoke(stypy.reporting.localization.Localization(__file__, 795, 7), isinstance_125638, *[s_125639, string_types_125641], **kwargs_125642)
    
    # Testing the type of an if condition (line 795)
    if_condition_125644 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 795, 4), isinstance_call_result_125643)
    # Assigning a type to the variable 'if_condition_125644' (line 795)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 795, 4), 'if_condition_125644', if_condition_125644)
    # SSA begins for if statement (line 795)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # SSA begins for try-except statement (line 796)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
    
    
    unicode_125645 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 811, 15), 'unicode', u'.__')
    
    # Call to replace(...): (line 811)
    # Processing the call arguments (line 811)
    unicode_125648 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 811, 34), 'unicode', u' ')
    unicode_125649 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 811, 39), 'unicode', u'')
    # Processing the call keyword arguments (line 811)
    kwargs_125650 = {}
    # Getting the type of 's' (line 811)
    s_125646 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 811, 24), 's', False)
    # Obtaining the member 'replace' of a type (line 811)
    replace_125647 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 811, 24), s_125646, 'replace')
    # Calling replace(args, kwargs) (line 811)
    replace_call_result_125651 = invoke(stypy.reporting.localization.Localization(__file__, 811, 24), replace_125647, *[unicode_125648, unicode_125649], **kwargs_125650)
    
    # Applying the binary operator 'in' (line 811)
    result_contains_125652 = python_operator(stypy.reporting.localization.Localization(__file__, 811, 15), 'in', unicode_125645, replace_call_result_125651)
    
    # Testing the type of an if condition (line 811)
    if_condition_125653 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 811, 12), result_contains_125652)
    # Assigning a type to the variable 'if_condition_125653' (line 811)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 811, 12), 'if_condition_125653', if_condition_125653)
    # SSA begins for if statement (line 811)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to ValueError(...): (line 812)
    # Processing the call arguments (line 812)
    unicode_125655 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 812, 33), 'unicode', u"'%s' seems to have dunder methods. Raising an exception for your safety")
    # Processing the call keyword arguments (line 812)
    kwargs_125656 = {}
    # Getting the type of 'ValueError' (line 812)
    ValueError_125654 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 812, 22), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 812)
    ValueError_call_result_125657 = invoke(stypy.reporting.localization.Localization(__file__, 812, 22), ValueError_125654, *[unicode_125655], **kwargs_125656)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 812, 16), ValueError_call_result_125657, 'raise parameter', BaseException)
    # SSA join for if statement (line 811)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 814):
    
    # Call to eval(...): (line 814)
    # Processing the call arguments (line 814)
    # Getting the type of 's' (line 814)
    s_125659 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 814, 21), 's', False)
    
    # Obtaining an instance of the builtin type 'dict' (line 814)
    dict_125660 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 814, 24), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 814)
    # Adding element type (key, value) (line 814)
    unicode_125661 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 814, 25), 'unicode', u'cycler')
    # Getting the type of 'cycler' (line 814)
    cycler_125662 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 814, 35), 'cycler', False)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 814, 24), dict_125660, (unicode_125661, cycler_125662))
    # Adding element type (key, value) (line 814)
    unicode_125663 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 814, 43), 'unicode', u'__builtins__')
    
    # Obtaining an instance of the builtin type 'dict' (line 814)
    dict_125664 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 814, 59), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 814)
    
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 814, 24), dict_125660, (unicode_125663, dict_125664))
    
    # Processing the call keyword arguments (line 814)
    kwargs_125665 = {}
    # Getting the type of 'eval' (line 814)
    eval_125658 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 814, 16), 'eval', False)
    # Calling eval(args, kwargs) (line 814)
    eval_call_result_125666 = invoke(stypy.reporting.localization.Localization(__file__, 814, 16), eval_125658, *[s_125659, dict_125660], **kwargs_125665)
    
    # Assigning a type to the variable 's' (line 814)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 814, 12), 's', eval_call_result_125666)
    # SSA branch for the except part of a try statement (line 796)
    # SSA branch for the except 'BaseException' branch of a try statement (line 796)
    # Storing handler type
    module_type_store.open_ssa_branch('except')
    # Getting the type of 'BaseException' (line 815)
    BaseException_125667 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 815, 15), 'BaseException')
    # Assigning a type to the variable 'e' (line 815)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 815, 8), 'e', BaseException_125667)
    
    # Call to ValueError(...): (line 816)
    # Processing the call arguments (line 816)
    unicode_125669 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 816, 29), 'unicode', u"'%s' is not a valid cycler construction: %s")
    
    # Obtaining an instance of the builtin type 'tuple' (line 817)
    tuple_125670 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 817, 30), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 817)
    # Adding element type (line 817)
    # Getting the type of 's' (line 817)
    s_125671 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 817, 30), 's', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 817, 30), tuple_125670, s_125671)
    # Adding element type (line 817)
    # Getting the type of 'e' (line 817)
    e_125672 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 817, 33), 'e', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 817, 30), tuple_125670, e_125672)
    
    # Applying the binary operator '%' (line 816)
    result_mod_125673 = python_operator(stypy.reporting.localization.Localization(__file__, 816, 29), '%', unicode_125669, tuple_125670)
    
    # Processing the call keyword arguments (line 816)
    kwargs_125674 = {}
    # Getting the type of 'ValueError' (line 816)
    ValueError_125668 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 816, 18), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 816)
    ValueError_call_result_125675 = invoke(stypy.reporting.localization.Localization(__file__, 816, 18), ValueError_125668, *[result_mod_125673], **kwargs_125674)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 816, 12), ValueError_call_result_125675, 'raise parameter', BaseException)
    # SSA join for try-except statement (line 796)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 795)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Call to isinstance(...): (line 820)
    # Processing the call arguments (line 820)
    # Getting the type of 's' (line 820)
    s_125677 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 820, 18), 's', False)
    # Getting the type of 'Cycler' (line 820)
    Cycler_125678 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 820, 21), 'Cycler', False)
    # Processing the call keyword arguments (line 820)
    kwargs_125679 = {}
    # Getting the type of 'isinstance' (line 820)
    isinstance_125676 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 820, 7), 'isinstance', False)
    # Calling isinstance(args, kwargs) (line 820)
    isinstance_call_result_125680 = invoke(stypy.reporting.localization.Localization(__file__, 820, 7), isinstance_125676, *[s_125677, Cycler_125678], **kwargs_125679)
    
    # Testing the type of an if condition (line 820)
    if_condition_125681 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 820, 4), isinstance_call_result_125680)
    # Assigning a type to the variable 'if_condition_125681' (line 820)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 820, 4), 'if_condition_125681', if_condition_125681)
    # SSA begins for if statement (line 820)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Name to a Name (line 821):
    # Getting the type of 's' (line 821)
    s_125682 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 821, 22), 's')
    # Assigning a type to the variable 'cycler_inst' (line 821)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 821, 8), 'cycler_inst', s_125682)
    # SSA branch for the else part of an if statement (line 820)
    module_type_store.open_ssa_branch('else')
    
    # Call to ValueError(...): (line 823)
    # Processing the call arguments (line 823)
    unicode_125684 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 823, 25), 'unicode', u'object was not a string or Cycler instance: %s')
    # Getting the type of 's' (line 823)
    s_125685 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 823, 76), 's', False)
    # Applying the binary operator '%' (line 823)
    result_mod_125686 = python_operator(stypy.reporting.localization.Localization(__file__, 823, 25), '%', unicode_125684, s_125685)
    
    # Processing the call keyword arguments (line 823)
    kwargs_125687 = {}
    # Getting the type of 'ValueError' (line 823)
    ValueError_125683 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 823, 14), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 823)
    ValueError_call_result_125688 = invoke(stypy.reporting.localization.Localization(__file__, 823, 14), ValueError_125683, *[result_mod_125686], **kwargs_125687)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 823, 8), ValueError_call_result_125688, 'raise parameter', BaseException)
    # SSA join for if statement (line 820)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a BinOp to a Name (line 825):
    # Getting the type of 'cycler_inst' (line 825)
    cycler_inst_125689 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 825, 15), 'cycler_inst')
    # Obtaining the member 'keys' of a type (line 825)
    keys_125690 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 825, 15), cycler_inst_125689, 'keys')
    
    # Call to set(...): (line 825)
    # Processing the call arguments (line 825)
    # Getting the type of '_prop_validators' (line 825)
    _prop_validators_125692 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 825, 39), '_prop_validators', False)
    # Processing the call keyword arguments (line 825)
    kwargs_125693 = {}
    # Getting the type of 'set' (line 825)
    set_125691 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 825, 35), 'set', False)
    # Calling set(args, kwargs) (line 825)
    set_call_result_125694 = invoke(stypy.reporting.localization.Localization(__file__, 825, 35), set_125691, *[_prop_validators_125692], **kwargs_125693)
    
    
    # Call to set(...): (line 825)
    # Processing the call arguments (line 825)
    # Getting the type of '_prop_aliases' (line 825)
    _prop_aliases_125696 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 825, 63), '_prop_aliases', False)
    # Processing the call keyword arguments (line 825)
    kwargs_125697 = {}
    # Getting the type of 'set' (line 825)
    set_125695 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 825, 59), 'set', False)
    # Calling set(args, kwargs) (line 825)
    set_call_result_125698 = invoke(stypy.reporting.localization.Localization(__file__, 825, 59), set_125695, *[_prop_aliases_125696], **kwargs_125697)
    
    # Applying the binary operator '|' (line 825)
    result_or__125699 = python_operator(stypy.reporting.localization.Localization(__file__, 825, 35), '|', set_call_result_125694, set_call_result_125698)
    
    # Applying the binary operator '-' (line 825)
    result_sub_125700 = python_operator(stypy.reporting.localization.Localization(__file__, 825, 15), '-', keys_125690, result_or__125699)
    
    # Assigning a type to the variable 'unknowns' (line 825)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 825, 4), 'unknowns', result_sub_125700)
    
    # Getting the type of 'unknowns' (line 826)
    unknowns_125701 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 826, 7), 'unknowns')
    # Testing the type of an if condition (line 826)
    if_condition_125702 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 826, 4), unknowns_125701)
    # Assigning a type to the variable 'if_condition_125702' (line 826)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 826, 4), 'if_condition_125702', if_condition_125702)
    # SSA begins for if statement (line 826)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to ValueError(...): (line 827)
    # Processing the call arguments (line 827)
    unicode_125704 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 827, 25), 'unicode', u'Unknown artist properties: %s')
    # Getting the type of 'unknowns' (line 827)
    unknowns_125705 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 827, 59), 'unknowns', False)
    # Applying the binary operator '%' (line 827)
    result_mod_125706 = python_operator(stypy.reporting.localization.Localization(__file__, 827, 25), '%', unicode_125704, unknowns_125705)
    
    # Processing the call keyword arguments (line 827)
    kwargs_125707 = {}
    # Getting the type of 'ValueError' (line 827)
    ValueError_125703 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 827, 14), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 827)
    ValueError_call_result_125708 = invoke(stypy.reporting.localization.Localization(__file__, 827, 14), ValueError_125703, *[result_mod_125706], **kwargs_125707)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 827, 8), ValueError_call_result_125708, 'raise parameter', BaseException)
    # SSA join for if statement (line 826)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 831):
    
    # Call to set(...): (line 831)
    # Processing the call keyword arguments (line 831)
    kwargs_125710 = {}
    # Getting the type of 'set' (line 831)
    set_125709 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 831, 14), 'set', False)
    # Calling set(args, kwargs) (line 831)
    set_call_result_125711 = invoke(stypy.reporting.localization.Localization(__file__, 831, 14), set_125709, *[], **kwargs_125710)
    
    # Assigning a type to the variable 'checker' (line 831)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 831, 4), 'checker', set_call_result_125711)
    
    # Getting the type of 'cycler_inst' (line 832)
    cycler_inst_125712 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 832, 16), 'cycler_inst')
    # Obtaining the member 'keys' of a type (line 832)
    keys_125713 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 832, 16), cycler_inst_125712, 'keys')
    # Testing the type of a for loop iterable (line 832)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 832, 4), keys_125713)
    # Getting the type of the for loop variable (line 832)
    for_loop_var_125714 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 832, 4), keys_125713)
    # Assigning a type to the variable 'prop' (line 832)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 832, 4), 'prop', for_loop_var_125714)
    # SSA begins for a for statement (line 832)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Call to a Name (line 833):
    
    # Call to get(...): (line 833)
    # Processing the call arguments (line 833)
    # Getting the type of 'prop' (line 833)
    prop_125717 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 833, 38), 'prop', False)
    # Getting the type of 'prop' (line 833)
    prop_125718 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 833, 44), 'prop', False)
    # Processing the call keyword arguments (line 833)
    kwargs_125719 = {}
    # Getting the type of '_prop_aliases' (line 833)
    _prop_aliases_125715 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 833, 20), '_prop_aliases', False)
    # Obtaining the member 'get' of a type (line 833)
    get_125716 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 833, 20), _prop_aliases_125715, 'get')
    # Calling get(args, kwargs) (line 833)
    get_call_result_125720 = invoke(stypy.reporting.localization.Localization(__file__, 833, 20), get_125716, *[prop_125717, prop_125718], **kwargs_125719)
    
    # Assigning a type to the variable 'norm_prop' (line 833)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 833, 8), 'norm_prop', get_call_result_125720)
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'norm_prop' (line 834)
    norm_prop_125721 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 834, 11), 'norm_prop')
    # Getting the type of 'prop' (line 834)
    prop_125722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 834, 24), 'prop')
    # Applying the binary operator '!=' (line 834)
    result_ne_125723 = python_operator(stypy.reporting.localization.Localization(__file__, 834, 11), '!=', norm_prop_125721, prop_125722)
    
    
    # Getting the type of 'norm_prop' (line 834)
    norm_prop_125724 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 834, 33), 'norm_prop')
    # Getting the type of 'cycler_inst' (line 834)
    cycler_inst_125725 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 834, 46), 'cycler_inst')
    # Obtaining the member 'keys' of a type (line 834)
    keys_125726 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 834, 46), cycler_inst_125725, 'keys')
    # Applying the binary operator 'in' (line 834)
    result_contains_125727 = python_operator(stypy.reporting.localization.Localization(__file__, 834, 33), 'in', norm_prop_125724, keys_125726)
    
    # Applying the binary operator 'and' (line 834)
    result_and_keyword_125728 = python_operator(stypy.reporting.localization.Localization(__file__, 834, 11), 'and', result_ne_125723, result_contains_125727)
    
    # Testing the type of an if condition (line 834)
    if_condition_125729 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 834, 8), result_and_keyword_125728)
    # Assigning a type to the variable 'if_condition_125729' (line 834)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 834, 8), 'if_condition_125729', if_condition_125729)
    # SSA begins for if statement (line 834)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to ValueError(...): (line 835)
    # Processing the call arguments (line 835)
    
    # Call to format(...): (line 835)
    # Processing the call arguments (line 835)
    # Getting the type of 'norm_prop' (line 836)
    norm_prop_125733 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 836, 62), 'norm_prop', False)
    # Getting the type of 'prop' (line 836)
    prop_125734 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 836, 73), 'prop', False)
    # Processing the call keyword arguments (line 835)
    kwargs_125735 = {}
    unicode_125731 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 835, 29), 'unicode', u"Cannot specify both '{0}' and alias '{1}' in the same prop_cycle")
    # Obtaining the member 'format' of a type (line 835)
    format_125732 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 835, 29), unicode_125731, 'format')
    # Calling format(args, kwargs) (line 835)
    format_call_result_125736 = invoke(stypy.reporting.localization.Localization(__file__, 835, 29), format_125732, *[norm_prop_125733, prop_125734], **kwargs_125735)
    
    # Processing the call keyword arguments (line 835)
    kwargs_125737 = {}
    # Getting the type of 'ValueError' (line 835)
    ValueError_125730 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 835, 18), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 835)
    ValueError_call_result_125738 = invoke(stypy.reporting.localization.Localization(__file__, 835, 18), ValueError_125730, *[format_call_result_125736], **kwargs_125737)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 835, 12), ValueError_call_result_125738, 'raise parameter', BaseException)
    # SSA join for if statement (line 834)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'norm_prop' (line 837)
    norm_prop_125739 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 837, 11), 'norm_prop')
    # Getting the type of 'checker' (line 837)
    checker_125740 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 837, 24), 'checker')
    # Applying the binary operator 'in' (line 837)
    result_contains_125741 = python_operator(stypy.reporting.localization.Localization(__file__, 837, 11), 'in', norm_prop_125739, checker_125740)
    
    # Testing the type of an if condition (line 837)
    if_condition_125742 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 837, 8), result_contains_125741)
    # Assigning a type to the variable 'if_condition_125742' (line 837)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 837, 8), 'if_condition_125742', if_condition_125742)
    # SSA begins for if statement (line 837)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to ValueError(...): (line 838)
    # Processing the call arguments (line 838)
    
    # Call to format(...): (line 838)
    # Processing the call arguments (line 838)
    # Getting the type of 'norm_prop' (line 839)
    norm_prop_125746 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 839, 68), 'norm_prop', False)
    # Getting the type of 'prop' (line 840)
    prop_125747 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 840, 68), 'prop', False)
    # Processing the call keyword arguments (line 838)
    kwargs_125748 = {}
    unicode_125744 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 838, 29), 'unicode', u"Another property was already aliased to '{0}'. Collision normalizing '{1}'.")
    # Obtaining the member 'format' of a type (line 838)
    format_125745 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 838, 29), unicode_125744, 'format')
    # Calling format(args, kwargs) (line 838)
    format_call_result_125749 = invoke(stypy.reporting.localization.Localization(__file__, 838, 29), format_125745, *[norm_prop_125746, prop_125747], **kwargs_125748)
    
    # Processing the call keyword arguments (line 838)
    kwargs_125750 = {}
    # Getting the type of 'ValueError' (line 838)
    ValueError_125743 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 838, 18), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 838)
    ValueError_call_result_125751 = invoke(stypy.reporting.localization.Localization(__file__, 838, 18), ValueError_125743, *[format_call_result_125749], **kwargs_125750)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 838, 12), ValueError_call_result_125751, 'raise parameter', BaseException)
    # SSA join for if statement (line 837)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Call to update(...): (line 841)
    # Processing the call arguments (line 841)
    
    # Obtaining an instance of the builtin type 'list' (line 841)
    list_125754 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 841, 23), 'list')
    # Adding type elements to the builtin type 'list' instance (line 841)
    # Adding element type (line 841)
    # Getting the type of 'norm_prop' (line 841)
    norm_prop_125755 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 841, 24), 'norm_prop', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 841, 23), list_125754, norm_prop_125755)
    
    # Processing the call keyword arguments (line 841)
    kwargs_125756 = {}
    # Getting the type of 'checker' (line 841)
    checker_125752 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 841, 8), 'checker', False)
    # Obtaining the member 'update' of a type (line 841)
    update_125753 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 841, 8), checker_125752, 'update')
    # Calling update(args, kwargs) (line 841)
    update_call_result_125757 = invoke(stypy.reporting.localization.Localization(__file__, 841, 8), update_125753, *[list_125754], **kwargs_125756)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # Evaluating assert statement condition
    
    
    # Call to len(...): (line 845)
    # Processing the call arguments (line 845)
    # Getting the type of 'checker' (line 845)
    checker_125759 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 845, 15), 'checker', False)
    # Processing the call keyword arguments (line 845)
    kwargs_125760 = {}
    # Getting the type of 'len' (line 845)
    len_125758 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 845, 11), 'len', False)
    # Calling len(args, kwargs) (line 845)
    len_call_result_125761 = invoke(stypy.reporting.localization.Localization(__file__, 845, 11), len_125758, *[checker_125759], **kwargs_125760)
    
    
    # Call to len(...): (line 845)
    # Processing the call arguments (line 845)
    # Getting the type of 'cycler_inst' (line 845)
    cycler_inst_125763 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 845, 31), 'cycler_inst', False)
    # Obtaining the member 'keys' of a type (line 845)
    keys_125764 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 845, 31), cycler_inst_125763, 'keys')
    # Processing the call keyword arguments (line 845)
    kwargs_125765 = {}
    # Getting the type of 'len' (line 845)
    len_125762 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 845, 27), 'len', False)
    # Calling len(args, kwargs) (line 845)
    len_call_result_125766 = invoke(stypy.reporting.localization.Localization(__file__, 845, 27), len_125762, *[keys_125764], **kwargs_125765)
    
    # Applying the binary operator '==' (line 845)
    result_eq_125767 = python_operator(stypy.reporting.localization.Localization(__file__, 845, 11), '==', len_call_result_125761, len_call_result_125766)
    
    
    # Getting the type of 'cycler_inst' (line 848)
    cycler_inst_125768 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 848, 16), 'cycler_inst')
    # Obtaining the member 'keys' of a type (line 848)
    keys_125769 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 848, 16), cycler_inst_125768, 'keys')
    # Testing the type of a for loop iterable (line 848)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 848, 4), keys_125769)
    # Getting the type of the for loop variable (line 848)
    for_loop_var_125770 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 848, 4), keys_125769)
    # Assigning a type to the variable 'prop' (line 848)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 848, 4), 'prop', for_loop_var_125770)
    # SSA begins for a for statement (line 848)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Call to a Name (line 849):
    
    # Call to get(...): (line 849)
    # Processing the call arguments (line 849)
    # Getting the type of 'prop' (line 849)
    prop_125773 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 849, 38), 'prop', False)
    # Getting the type of 'prop' (line 849)
    prop_125774 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 849, 44), 'prop', False)
    # Processing the call keyword arguments (line 849)
    kwargs_125775 = {}
    # Getting the type of '_prop_aliases' (line 849)
    _prop_aliases_125771 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 849, 20), '_prop_aliases', False)
    # Obtaining the member 'get' of a type (line 849)
    get_125772 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 849, 20), _prop_aliases_125771, 'get')
    # Calling get(args, kwargs) (line 849)
    get_call_result_125776 = invoke(stypy.reporting.localization.Localization(__file__, 849, 20), get_125772, *[prop_125773, prop_125774], **kwargs_125775)
    
    # Assigning a type to the variable 'norm_prop' (line 849)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 849, 8), 'norm_prop', get_call_result_125776)
    
    # Call to change_key(...): (line 850)
    # Processing the call arguments (line 850)
    # Getting the type of 'prop' (line 850)
    prop_125779 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 850, 31), 'prop', False)
    # Getting the type of 'norm_prop' (line 850)
    norm_prop_125780 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 850, 37), 'norm_prop', False)
    # Processing the call keyword arguments (line 850)
    kwargs_125781 = {}
    # Getting the type of 'cycler_inst' (line 850)
    cycler_inst_125777 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 850, 8), 'cycler_inst', False)
    # Obtaining the member 'change_key' of a type (line 850)
    change_key_125778 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 850, 8), cycler_inst_125777, 'change_key')
    # Calling change_key(args, kwargs) (line 850)
    change_key_call_result_125782 = invoke(stypy.reporting.localization.Localization(__file__, 850, 8), change_key_125778, *[prop_125779, norm_prop_125780], **kwargs_125781)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Call to items(...): (line 852)
    # Processing the call keyword arguments (line 852)
    kwargs_125788 = {}
    
    # Call to by_key(...): (line 852)
    # Processing the call keyword arguments (line 852)
    kwargs_125785 = {}
    # Getting the type of 'cycler_inst' (line 852)
    cycler_inst_125783 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 852, 21), 'cycler_inst', False)
    # Obtaining the member 'by_key' of a type (line 852)
    by_key_125784 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 852, 21), cycler_inst_125783, 'by_key')
    # Calling by_key(args, kwargs) (line 852)
    by_key_call_result_125786 = invoke(stypy.reporting.localization.Localization(__file__, 852, 21), by_key_125784, *[], **kwargs_125785)
    
    # Obtaining the member 'items' of a type (line 852)
    items_125787 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 852, 21), by_key_call_result_125786, 'items')
    # Calling items(args, kwargs) (line 852)
    items_call_result_125789 = invoke(stypy.reporting.localization.Localization(__file__, 852, 21), items_125787, *[], **kwargs_125788)
    
    # Testing the type of a for loop iterable (line 852)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 852, 4), items_call_result_125789)
    # Getting the type of the for loop variable (line 852)
    for_loop_var_125790 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 852, 4), items_call_result_125789)
    # Assigning a type to the variable 'key' (line 852)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 852, 4), 'key', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 852, 4), for_loop_var_125790))
    # Assigning a type to the variable 'vals' (line 852)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 852, 4), 'vals', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 852, 4), for_loop_var_125790))
    # SSA begins for a for statement (line 852)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Call to (...): (line 853)
    # Processing the call arguments (line 853)
    # Getting the type of 'vals' (line 853)
    vals_125795 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 853, 30), 'vals', False)
    # Processing the call keyword arguments (line 853)
    kwargs_125796 = {}
    
    # Obtaining the type of the subscript
    # Getting the type of 'key' (line 853)
    key_125791 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 853, 25), 'key', False)
    # Getting the type of '_prop_validators' (line 853)
    _prop_validators_125792 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 853, 8), '_prop_validators', False)
    # Obtaining the member '__getitem__' of a type (line 853)
    getitem___125793 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 853, 8), _prop_validators_125792, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 853)
    subscript_call_result_125794 = invoke(stypy.reporting.localization.Localization(__file__, 853, 8), getitem___125793, key_125791)
    
    # Calling (args, kwargs) (line 853)
    _call_result_125797 = invoke(stypy.reporting.localization.Localization(__file__, 853, 8), subscript_call_result_125794, *[vals_125795], **kwargs_125796)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # Getting the type of 'cycler_inst' (line 855)
    cycler_inst_125798 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 855, 11), 'cycler_inst')
    # Assigning a type to the variable 'stypy_return_type' (line 855)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 855, 4), 'stypy_return_type', cycler_inst_125798)
    
    # ################# End of 'validate_cycler(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'validate_cycler' in the type store
    # Getting the type of 'stypy_return_type' (line 793)
    stypy_return_type_125799 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 793, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_125799)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'validate_cycler'
    return stypy_return_type_125799

# Assigning a type to the variable 'validate_cycler' (line 793)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 793, 0), 'validate_cycler', validate_cycler)

@norecursion
def validate_hist_bins(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'validate_hist_bins'
    module_type_store = module_type_store.open_function_context('validate_hist_bins', 858, 0, False)
    
    # Passed parameters checking function
    validate_hist_bins.stypy_localization = localization
    validate_hist_bins.stypy_type_of_self = None
    validate_hist_bins.stypy_type_store = module_type_store
    validate_hist_bins.stypy_function_name = 'validate_hist_bins'
    validate_hist_bins.stypy_param_names_list = ['s']
    validate_hist_bins.stypy_varargs_param_name = None
    validate_hist_bins.stypy_kwargs_param_name = None
    validate_hist_bins.stypy_call_defaults = defaults
    validate_hist_bins.stypy_call_varargs = varargs
    validate_hist_bins.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'validate_hist_bins', ['s'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'validate_hist_bins', localization, ['s'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'validate_hist_bins(...)' code ##################

    
    
    # Evaluating a boolean operation
    
    # Call to isinstance(...): (line 859)
    # Processing the call arguments (line 859)
    # Getting the type of 's' (line 859)
    s_125801 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 859, 18), 's', False)
    # Getting the type of 'six' (line 859)
    six_125802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 859, 21), 'six', False)
    # Obtaining the member 'string_types' of a type (line 859)
    string_types_125803 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 859, 21), six_125802, 'string_types')
    # Processing the call keyword arguments (line 859)
    kwargs_125804 = {}
    # Getting the type of 'isinstance' (line 859)
    isinstance_125800 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 859, 7), 'isinstance', False)
    # Calling isinstance(args, kwargs) (line 859)
    isinstance_call_result_125805 = invoke(stypy.reporting.localization.Localization(__file__, 859, 7), isinstance_125800, *[s_125801, string_types_125803], **kwargs_125804)
    
    
    # Getting the type of 's' (line 859)
    s_125806 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 859, 43), 's')
    unicode_125807 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 859, 48), 'unicode', u'auto')
    # Applying the binary operator '==' (line 859)
    result_eq_125808 = python_operator(stypy.reporting.localization.Localization(__file__, 859, 43), '==', s_125806, unicode_125807)
    
    # Applying the binary operator 'and' (line 859)
    result_and_keyword_125809 = python_operator(stypy.reporting.localization.Localization(__file__, 859, 7), 'and', isinstance_call_result_125805, result_eq_125808)
    
    # Testing the type of an if condition (line 859)
    if_condition_125810 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 859, 4), result_and_keyword_125809)
    # Assigning a type to the variable 'if_condition_125810' (line 859)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 859, 4), 'if_condition_125810', if_condition_125810)
    # SSA begins for if statement (line 859)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Getting the type of 's' (line 860)
    s_125811 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 860, 15), 's')
    # Assigning a type to the variable 'stypy_return_type' (line 860)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 860, 8), 'stypy_return_type', s_125811)
    # SSA join for if statement (line 859)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # SSA begins for try-except statement (line 861)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
    
    # Call to int(...): (line 862)
    # Processing the call arguments (line 862)
    # Getting the type of 's' (line 862)
    s_125813 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 862, 19), 's', False)
    # Processing the call keyword arguments (line 862)
    kwargs_125814 = {}
    # Getting the type of 'int' (line 862)
    int_125812 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 862, 15), 'int', False)
    # Calling int(args, kwargs) (line 862)
    int_call_result_125815 = invoke(stypy.reporting.localization.Localization(__file__, 862, 15), int_125812, *[s_125813], **kwargs_125814)
    
    # Assigning a type to the variable 'stypy_return_type' (line 862)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 862, 8), 'stypy_return_type', int_call_result_125815)
    # SSA branch for the except part of a try statement (line 861)
    # SSA branch for the except 'Tuple' branch of a try statement (line 861)
    module_type_store.open_ssa_branch('except')
    pass
    # SSA join for try-except statement (line 861)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # SSA begins for try-except statement (line 866)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
    
    # Call to validate_floatlist(...): (line 867)
    # Processing the call arguments (line 867)
    # Getting the type of 's' (line 867)
    s_125817 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 867, 34), 's', False)
    # Processing the call keyword arguments (line 867)
    kwargs_125818 = {}
    # Getting the type of 'validate_floatlist' (line 867)
    validate_floatlist_125816 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 867, 15), 'validate_floatlist', False)
    # Calling validate_floatlist(args, kwargs) (line 867)
    validate_floatlist_call_result_125819 = invoke(stypy.reporting.localization.Localization(__file__, 867, 15), validate_floatlist_125816, *[s_125817], **kwargs_125818)
    
    # Assigning a type to the variable 'stypy_return_type' (line 867)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 867, 8), 'stypy_return_type', validate_floatlist_call_result_125819)
    # SSA branch for the except part of a try statement (line 866)
    # SSA branch for the except 'ValueError' branch of a try statement (line 866)
    module_type_store.open_ssa_branch('except')
    pass
    # SSA join for try-except statement (line 866)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Call to ValueError(...): (line 871)
    # Processing the call arguments (line 871)
    unicode_125821 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 871, 21), 'unicode', u"'hist.bins' must be 'auto', an int or ")
    unicode_125822 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 872, 21), 'unicode', u'a sequence of floats')
    # Applying the binary operator '+' (line 871)
    result_add_125823 = python_operator(stypy.reporting.localization.Localization(__file__, 871, 21), '+', unicode_125821, unicode_125822)
    
    # Processing the call keyword arguments (line 871)
    kwargs_125824 = {}
    # Getting the type of 'ValueError' (line 871)
    ValueError_125820 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 871, 10), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 871)
    ValueError_call_result_125825 = invoke(stypy.reporting.localization.Localization(__file__, 871, 10), ValueError_125820, *[result_add_125823], **kwargs_125824)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 871, 4), ValueError_call_result_125825, 'raise parameter', BaseException)
    
    # ################# End of 'validate_hist_bins(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'validate_hist_bins' in the type store
    # Getting the type of 'stypy_return_type' (line 858)
    stypy_return_type_125826 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 858, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_125826)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'validate_hist_bins'
    return stypy_return_type_125826

# Assigning a type to the variable 'validate_hist_bins' (line 858)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 858, 0), 'validate_hist_bins', validate_hist_bins)

@norecursion
def validate_animation_writer_path(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'validate_animation_writer_path'
    module_type_store = module_type_store.open_function_context('validate_animation_writer_path', 874, 0, False)
    
    # Passed parameters checking function
    validate_animation_writer_path.stypy_localization = localization
    validate_animation_writer_path.stypy_type_of_self = None
    validate_animation_writer_path.stypy_type_store = module_type_store
    validate_animation_writer_path.stypy_function_name = 'validate_animation_writer_path'
    validate_animation_writer_path.stypy_param_names_list = ['p']
    validate_animation_writer_path.stypy_varargs_param_name = None
    validate_animation_writer_path.stypy_kwargs_param_name = None
    validate_animation_writer_path.stypy_call_defaults = defaults
    validate_animation_writer_path.stypy_call_varargs = varargs
    validate_animation_writer_path.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'validate_animation_writer_path', ['p'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'validate_animation_writer_path', localization, ['p'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'validate_animation_writer_path(...)' code ##################

    
    
    
    # Call to isinstance(...): (line 878)
    # Processing the call arguments (line 878)
    # Getting the type of 'p' (line 878)
    p_125828 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 878, 22), 'p', False)
    # Getting the type of 'six' (line 878)
    six_125829 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 878, 25), 'six', False)
    # Obtaining the member 'string_types' of a type (line 878)
    string_types_125830 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 878, 25), six_125829, 'string_types')
    # Processing the call keyword arguments (line 878)
    kwargs_125831 = {}
    # Getting the type of 'isinstance' (line 878)
    isinstance_125827 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 878, 11), 'isinstance', False)
    # Calling isinstance(args, kwargs) (line 878)
    isinstance_call_result_125832 = invoke(stypy.reporting.localization.Localization(__file__, 878, 11), isinstance_125827, *[p_125828, string_types_125830], **kwargs_125831)
    
    # Applying the 'not' unary operator (line 878)
    result_not__125833 = python_operator(stypy.reporting.localization.Localization(__file__, 878, 7), 'not', isinstance_call_result_125832)
    
    # Testing the type of an if condition (line 878)
    if_condition_125834 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 878, 4), result_not__125833)
    # Assigning a type to the variable 'if_condition_125834' (line 878)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 878, 4), 'if_condition_125834', if_condition_125834)
    # SSA begins for if statement (line 878)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to ValueError(...): (line 879)
    # Processing the call arguments (line 879)
    unicode_125836 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 879, 25), 'unicode', u'path must be a (unicode) string')
    # Processing the call keyword arguments (line 879)
    kwargs_125837 = {}
    # Getting the type of 'ValueError' (line 879)
    ValueError_125835 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 879, 14), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 879)
    ValueError_call_result_125838 = invoke(stypy.reporting.localization.Localization(__file__, 879, 14), ValueError_125835, *[unicode_125836], **kwargs_125837)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 879, 8), ValueError_call_result_125838, 'raise parameter', BaseException)
    # SSA join for if statement (line 878)
    module_type_store = module_type_store.join_ssa_context()
    
    stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 880, 4))
    
    # 'from sys import modules' statement (line 880)
    try:
        from sys import modules

    except:
        modules = UndefinedType
    import_from_module(stypy.reporting.localization.Localization(__file__, 880, 4), 'sys', None, module_type_store, ['modules'], [modules])
    
    
    
    unicode_125839 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 885, 7), 'unicode', u'matplotlib.animation')
    # Getting the type of 'modules' (line 885)
    modules_125840 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 885, 33), 'modules')
    # Applying the binary operator 'in' (line 885)
    result_contains_125841 = python_operator(stypy.reporting.localization.Localization(__file__, 885, 7), 'in', unicode_125839, modules_125840)
    
    # Testing the type of an if condition (line 885)
    if_condition_125842 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 885, 4), result_contains_125841)
    # Assigning a type to the variable 'if_condition_125842' (line 885)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 885, 4), 'if_condition_125842', if_condition_125842)
    # SSA begins for if statement (line 885)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to set_dirty(...): (line 886)
    # Processing the call keyword arguments (line 886)
    kwargs_125849 = {}
    
    # Obtaining the type of the subscript
    unicode_125843 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 886, 16), 'unicode', u'matplotlib.animation')
    # Getting the type of 'modules' (line 886)
    modules_125844 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 886, 8), 'modules', False)
    # Obtaining the member '__getitem__' of a type (line 886)
    getitem___125845 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 886, 8), modules_125844, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 886)
    subscript_call_result_125846 = invoke(stypy.reporting.localization.Localization(__file__, 886, 8), getitem___125845, unicode_125843)
    
    # Obtaining the member 'writers' of a type (line 886)
    writers_125847 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 886, 8), subscript_call_result_125846, 'writers')
    # Obtaining the member 'set_dirty' of a type (line 886)
    set_dirty_125848 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 886, 8), writers_125847, 'set_dirty')
    # Calling set_dirty(args, kwargs) (line 886)
    set_dirty_call_result_125850 = invoke(stypy.reporting.localization.Localization(__file__, 886, 8), set_dirty_125848, *[], **kwargs_125849)
    
    # SSA join for if statement (line 885)
    module_type_store = module_type_store.join_ssa_context()
    
    # Getting the type of 'p' (line 887)
    p_125851 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 887, 11), 'p')
    # Assigning a type to the variable 'stypy_return_type' (line 887)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 887, 4), 'stypy_return_type', p_125851)
    
    # ################# End of 'validate_animation_writer_path(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'validate_animation_writer_path' in the type store
    # Getting the type of 'stypy_return_type' (line 874)
    stypy_return_type_125852 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 874, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_125852)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'validate_animation_writer_path'
    return stypy_return_type_125852

# Assigning a type to the variable 'validate_animation_writer_path' (line 874)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 874, 0), 'validate_animation_writer_path', validate_animation_writer_path)

# Assigning a Call to a Name (line 891):

# Call to ValidateInStrings(...): (line 891)
# Processing the call arguments (line 891)
unicode_125854 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 891, 46), 'unicode', u'linestyle')

# Call to list(...): (line 892)
# Processing the call arguments (line 892)

# Call to iterkeys(...): (line 892)
# Processing the call arguments (line 892)
# Getting the type of 'ls_mapper' (line 892)
ls_mapper_125858 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 892, 64), 'ls_mapper', False)
# Processing the call keyword arguments (line 892)
kwargs_125859 = {}
# Getting the type of 'six' (line 892)
six_125856 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 892, 51), 'six', False)
# Obtaining the member 'iterkeys' of a type (line 892)
iterkeys_125857 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 892, 51), six_125856, 'iterkeys')
# Calling iterkeys(args, kwargs) (line 892)
iterkeys_call_result_125860 = invoke(stypy.reporting.localization.Localization(__file__, 892, 51), iterkeys_125857, *[ls_mapper_125858], **kwargs_125859)

# Processing the call keyword arguments (line 892)
kwargs_125861 = {}
# Getting the type of 'list' (line 892)
list_125855 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 892, 46), 'list', False)
# Calling list(args, kwargs) (line 892)
list_call_result_125862 = invoke(stypy.reporting.localization.Localization(__file__, 892, 46), list_125855, *[iterkeys_call_result_125860], **kwargs_125861)


# Call to list(...): (line 893)
# Processing the call arguments (line 893)

# Call to itervalues(...): (line 893)
# Processing the call arguments (line 893)
# Getting the type of 'ls_mapper' (line 893)
ls_mapper_125866 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 893, 66), 'ls_mapper', False)
# Processing the call keyword arguments (line 893)
kwargs_125867 = {}
# Getting the type of 'six' (line 893)
six_125864 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 893, 51), 'six', False)
# Obtaining the member 'itervalues' of a type (line 893)
itervalues_125865 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 893, 51), six_125864, 'itervalues')
# Calling itervalues(args, kwargs) (line 893)
itervalues_call_result_125868 = invoke(stypy.reporting.localization.Localization(__file__, 893, 51), itervalues_125865, *[ls_mapper_125866], **kwargs_125867)

# Processing the call keyword arguments (line 893)
kwargs_125869 = {}
# Getting the type of 'list' (line 893)
list_125863 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 893, 46), 'list', False)
# Calling list(args, kwargs) (line 893)
list_call_result_125870 = invoke(stypy.reporting.localization.Localization(__file__, 893, 46), list_125863, *[itervalues_call_result_125868], **kwargs_125869)

# Applying the binary operator '+' (line 892)
result_add_125871 = python_operator(stypy.reporting.localization.Localization(__file__, 892, 46), '+', list_call_result_125862, list_call_result_125870)


# Obtaining an instance of the builtin type 'list' (line 894)
list_125872 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 894, 46), 'list')
# Adding type elements to the builtin type 'list' instance (line 894)
# Adding element type (line 894)
unicode_125873 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 894, 47), 'unicode', u'None')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 894, 46), list_125872, unicode_125873)
# Adding element type (line 894)
unicode_125874 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 894, 55), 'unicode', u'none')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 894, 46), list_125872, unicode_125874)
# Adding element type (line 894)
unicode_125875 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 894, 63), 'unicode', u' ')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 894, 46), list_125872, unicode_125875)
# Adding element type (line 894)
unicode_125876 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 894, 68), 'unicode', u'')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 894, 46), list_125872, unicode_125876)

# Applying the binary operator '+' (line 893)
result_add_125877 = python_operator(stypy.reporting.localization.Localization(__file__, 893, 78), '+', result_add_125871, list_125872)

# Processing the call keyword arguments (line 891)
# Getting the type of 'True' (line 895)
True_125878 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 895, 57), 'True', False)
keyword_125879 = True_125878
kwargs_125880 = {'ignorecase': keyword_125879}
# Getting the type of 'ValidateInStrings' (line 891)
ValidateInStrings_125853 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 891, 28), 'ValidateInStrings', False)
# Calling ValidateInStrings(args, kwargs) (line 891)
ValidateInStrings_call_result_125881 = invoke(stypy.reporting.localization.Localization(__file__, 891, 28), ValidateInStrings_125853, *[unicode_125854, result_add_125877], **kwargs_125880)

# Assigning a type to the variable '_validate_named_linestyle' (line 891)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 891, 0), '_validate_named_linestyle', ValidateInStrings_call_result_125881)

@norecursion
def _validate_linestyle(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function '_validate_linestyle'
    module_type_store = module_type_store.open_function_context('_validate_linestyle', 898, 0, False)
    
    # Passed parameters checking function
    _validate_linestyle.stypy_localization = localization
    _validate_linestyle.stypy_type_of_self = None
    _validate_linestyle.stypy_type_store = module_type_store
    _validate_linestyle.stypy_function_name = '_validate_linestyle'
    _validate_linestyle.stypy_param_names_list = ['ls']
    _validate_linestyle.stypy_varargs_param_name = None
    _validate_linestyle.stypy_kwargs_param_name = None
    _validate_linestyle.stypy_call_defaults = defaults
    _validate_linestyle.stypy_call_varargs = varargs
    _validate_linestyle.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, '_validate_linestyle', ['ls'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, '_validate_linestyle', localization, ['ls'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of '_validate_linestyle(...)' code ##################

    unicode_125882 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 902, (-1)), 'unicode', u'\n    A validator for all possible line styles, the named ones *and*\n    the on-off ink sequences.\n    ')
    
    
    # Call to isinstance(...): (line 904)
    # Processing the call arguments (line 904)
    # Getting the type of 'ls' (line 904)
    ls_125884 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 904, 18), 'ls', False)
    # Getting the type of 'six' (line 904)
    six_125885 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 904, 22), 'six', False)
    # Obtaining the member 'string_types' of a type (line 904)
    string_types_125886 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 904, 22), six_125885, 'string_types')
    # Processing the call keyword arguments (line 904)
    kwargs_125887 = {}
    # Getting the type of 'isinstance' (line 904)
    isinstance_125883 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 904, 7), 'isinstance', False)
    # Calling isinstance(args, kwargs) (line 904)
    isinstance_call_result_125888 = invoke(stypy.reporting.localization.Localization(__file__, 904, 7), isinstance_125883, *[ls_125884, string_types_125886], **kwargs_125887)
    
    # Testing the type of an if condition (line 904)
    if_condition_125889 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 904, 4), isinstance_call_result_125888)
    # Assigning a type to the variable 'if_condition_125889' (line 904)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 904, 4), 'if_condition_125889', if_condition_125889)
    # SSA begins for if statement (line 904)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # SSA begins for try-except statement (line 905)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
    
    # Call to _validate_named_linestyle(...): (line 906)
    # Processing the call arguments (line 906)
    # Getting the type of 'ls' (line 906)
    ls_125891 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 906, 45), 'ls', False)
    # Processing the call keyword arguments (line 906)
    kwargs_125892 = {}
    # Getting the type of '_validate_named_linestyle' (line 906)
    _validate_named_linestyle_125890 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 906, 19), '_validate_named_linestyle', False)
    # Calling _validate_named_linestyle(args, kwargs) (line 906)
    _validate_named_linestyle_call_result_125893 = invoke(stypy.reporting.localization.Localization(__file__, 906, 19), _validate_named_linestyle_125890, *[ls_125891], **kwargs_125892)
    
    # Assigning a type to the variable 'stypy_return_type' (line 906)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 906, 12), 'stypy_return_type', _validate_named_linestyle_call_result_125893)
    # SSA branch for the except part of a try statement (line 905)
    # SSA branch for the except 'Tuple' branch of a try statement (line 905)
    module_type_store.open_ssa_branch('except')
    
    # Call to ValueError(...): (line 910)
    # Processing the call arguments (line 910)
    
    # Call to format(...): (line 910)
    # Processing the call arguments (line 910)
    # Getting the type of 'ls' (line 911)
    ls_125897 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 911, 46), 'ls', False)
    # Processing the call keyword arguments (line 910)
    kwargs_125898 = {}
    unicode_125895 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 910, 29), 'unicode', u'the linestyle string {!r} is not a valid string.')
    # Obtaining the member 'format' of a type (line 910)
    format_125896 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 910, 29), unicode_125895, 'format')
    # Calling format(args, kwargs) (line 910)
    format_call_result_125899 = invoke(stypy.reporting.localization.Localization(__file__, 910, 29), format_125896, *[ls_125897], **kwargs_125898)
    
    # Processing the call keyword arguments (line 910)
    kwargs_125900 = {}
    # Getting the type of 'ValueError' (line 910)
    ValueError_125894 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 910, 18), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 910)
    ValueError_call_result_125901 = invoke(stypy.reporting.localization.Localization(__file__, 910, 18), ValueError_125894, *[format_call_result_125899], **kwargs_125900)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 910, 12), ValueError_call_result_125901, 'raise parameter', BaseException)
    # SSA join for try-except statement (line 905)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 904)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Call to isinstance(...): (line 913)
    # Processing the call arguments (line 913)
    # Getting the type of 'ls' (line 913)
    ls_125903 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 913, 18), 'ls', False)
    
    # Obtaining an instance of the builtin type 'tuple' (line 913)
    tuple_125904 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 913, 23), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 913)
    # Adding element type (line 913)
    # Getting the type of 'bytes' (line 913)
    bytes_125905 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 913, 23), 'bytes', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 913, 23), tuple_125904, bytes_125905)
    # Adding element type (line 913)
    # Getting the type of 'bytearray' (line 913)
    bytearray_125906 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 913, 30), 'bytearray', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 913, 23), tuple_125904, bytearray_125906)
    
    # Processing the call keyword arguments (line 913)
    kwargs_125907 = {}
    # Getting the type of 'isinstance' (line 913)
    isinstance_125902 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 913, 7), 'isinstance', False)
    # Calling isinstance(args, kwargs) (line 913)
    isinstance_call_result_125908 = invoke(stypy.reporting.localization.Localization(__file__, 913, 7), isinstance_125902, *[ls_125903, tuple_125904], **kwargs_125907)
    
    # Testing the type of an if condition (line 913)
    if_condition_125909 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 913, 4), isinstance_call_result_125908)
    # Assigning a type to the variable 'if_condition_125909' (line 913)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 913, 4), 'if_condition_125909', if_condition_125909)
    # SSA begins for if statement (line 913)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to ValueError(...): (line 920)
    # Processing the call arguments (line 920)
    
    # Call to format(...): (line 920)
    # Processing the call arguments (line 920)
    # Getting the type of 'ls' (line 921)
    ls_125913 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 921, 63), 'ls', False)
    # Processing the call keyword arguments (line 920)
    kwargs_125914 = {}
    unicode_125911 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 920, 25), 'unicode', u'linestyle {!r} neither looks like an on-off ink sequence nor a valid string.')
    # Obtaining the member 'format' of a type (line 920)
    format_125912 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 920, 25), unicode_125911, 'format')
    # Calling format(args, kwargs) (line 920)
    format_call_result_125915 = invoke(stypy.reporting.localization.Localization(__file__, 920, 25), format_125912, *[ls_125913], **kwargs_125914)
    
    # Processing the call keyword arguments (line 920)
    kwargs_125916 = {}
    # Getting the type of 'ValueError' (line 920)
    ValueError_125910 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 920, 14), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 920)
    ValueError_call_result_125917 = invoke(stypy.reporting.localization.Localization(__file__, 920, 14), ValueError_125910, *[format_call_result_125915], **kwargs_125916)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 920, 8), ValueError_call_result_125917, 'raise parameter', BaseException)
    # SSA join for if statement (line 913)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # SSA begins for try-except statement (line 925)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
    
    
    
    # Call to len(...): (line 926)
    # Processing the call arguments (line 926)
    # Getting the type of 'ls' (line 926)
    ls_125919 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 926, 15), 'ls', False)
    # Processing the call keyword arguments (line 926)
    kwargs_125920 = {}
    # Getting the type of 'len' (line 926)
    len_125918 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 926, 11), 'len', False)
    # Calling len(args, kwargs) (line 926)
    len_call_result_125921 = invoke(stypy.reporting.localization.Localization(__file__, 926, 11), len_125918, *[ls_125919], **kwargs_125920)
    
    int_125922 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 926, 21), 'int')
    # Applying the binary operator '%' (line 926)
    result_mod_125923 = python_operator(stypy.reporting.localization.Localization(__file__, 926, 11), '%', len_call_result_125921, int_125922)
    
    int_125924 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 926, 26), 'int')
    # Applying the binary operator '!=' (line 926)
    result_ne_125925 = python_operator(stypy.reporting.localization.Localization(__file__, 926, 11), '!=', result_mod_125923, int_125924)
    
    # Testing the type of an if condition (line 926)
    if_condition_125926 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 926, 8), result_ne_125925)
    # Assigning a type to the variable 'if_condition_125926' (line 926)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 926, 8), 'if_condition_125926', if_condition_125926)
    # SSA begins for if statement (line 926)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to ValueError(...): (line 927)
    # Processing the call arguments (line 927)
    
    # Call to format(...): (line 927)
    # Processing the call arguments (line 927)
    # Getting the type of 'ls' (line 928)
    ls_125930 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 928, 46), 'ls', False)
    # Processing the call keyword arguments (line 927)
    kwargs_125931 = {}
    unicode_125928 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 927, 29), 'unicode', u'the linestyle sequence {!r} is not of even length.')
    # Obtaining the member 'format' of a type (line 927)
    format_125929 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 927, 29), unicode_125928, 'format')
    # Calling format(args, kwargs) (line 927)
    format_call_result_125932 = invoke(stypy.reporting.localization.Localization(__file__, 927, 29), format_125929, *[ls_125930], **kwargs_125931)
    
    # Processing the call keyword arguments (line 927)
    kwargs_125933 = {}
    # Getting the type of 'ValueError' (line 927)
    ValueError_125927 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 927, 18), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 927)
    ValueError_call_result_125934 = invoke(stypy.reporting.localization.Localization(__file__, 927, 18), ValueError_125927, *[format_call_result_125932], **kwargs_125933)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 927, 12), ValueError_call_result_125934, 'raise parameter', BaseException)
    # SSA join for if statement (line 926)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Obtaining an instance of the builtin type 'tuple' (line 930)
    tuple_125935 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 930, 16), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 930)
    # Adding element type (line 930)
    # Getting the type of 'None' (line 930)
    None_125936 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 930, 16), 'None')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 930, 16), tuple_125935, None_125936)
    # Adding element type (line 930)
    
    # Call to (...): (line 930)
    # Processing the call arguments (line 930)
    # Getting the type of 'ls' (line 930)
    ls_125940 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 930, 44), 'ls', False)
    # Processing the call keyword arguments (line 930)
    kwargs_125941 = {}
    
    # Call to validate_nseq_float(...): (line 930)
    # Processing the call keyword arguments (line 930)
    kwargs_125938 = {}
    # Getting the type of 'validate_nseq_float' (line 930)
    validate_nseq_float_125937 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 930, 22), 'validate_nseq_float', False)
    # Calling validate_nseq_float(args, kwargs) (line 930)
    validate_nseq_float_call_result_125939 = invoke(stypy.reporting.localization.Localization(__file__, 930, 22), validate_nseq_float_125937, *[], **kwargs_125938)
    
    # Calling (args, kwargs) (line 930)
    _call_result_125942 = invoke(stypy.reporting.localization.Localization(__file__, 930, 22), validate_nseq_float_call_result_125939, *[ls_125940], **kwargs_125941)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 930, 16), tuple_125935, _call_result_125942)
    
    # Assigning a type to the variable 'stypy_return_type' (line 930)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 930, 8), 'stypy_return_type', tuple_125935)
    # SSA branch for the except part of a try statement (line 925)
    # SSA branch for the except 'Tuple' branch of a try statement (line 925)
    module_type_store.open_ssa_branch('except')
    
    # Call to ValueError(...): (line 935)
    # Processing the call arguments (line 935)
    
    # Call to format(...): (line 935)
    # Processing the call arguments (line 935)
    # Getting the type of 'ls' (line 936)
    ls_125946 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 936, 44), 'ls', False)
    # Processing the call keyword arguments (line 935)
    kwargs_125947 = {}
    unicode_125944 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 935, 25), 'unicode', u'linestyle {!r} is not a valid on-off ink sequence.')
    # Obtaining the member 'format' of a type (line 935)
    format_125945 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 935, 25), unicode_125944, 'format')
    # Calling format(args, kwargs) (line 935)
    format_call_result_125948 = invoke(stypy.reporting.localization.Localization(__file__, 935, 25), format_125945, *[ls_125946], **kwargs_125947)
    
    # Processing the call keyword arguments (line 935)
    kwargs_125949 = {}
    # Getting the type of 'ValueError' (line 935)
    ValueError_125943 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 935, 14), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 935)
    ValueError_call_result_125950 = invoke(stypy.reporting.localization.Localization(__file__, 935, 14), ValueError_125943, *[format_call_result_125948], **kwargs_125949)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 935, 8), ValueError_call_result_125950, 'raise parameter', BaseException)
    # SSA join for try-except statement (line 925)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # ################# End of '_validate_linestyle(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function '_validate_linestyle' in the type store
    # Getting the type of 'stypy_return_type' (line 898)
    stypy_return_type_125951 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 898, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_125951)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function '_validate_linestyle'
    return stypy_return_type_125951

# Assigning a type to the variable '_validate_linestyle' (line 898)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 898, 0), '_validate_linestyle', _validate_linestyle)

# Assigning a Dict to a Name (line 940):

# Obtaining an instance of the builtin type 'dict' (line 940)
dict_125952 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 940, 16), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 940)
# Adding element type (key, value) (line 940)
unicode_125953 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 941, 4), 'unicode', u'backend')

# Obtaining an instance of the builtin type 'list' (line 941)
list_125954 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 941, 25), 'list')
# Adding type elements to the builtin type 'list' instance (line 941)
# Adding element type (line 941)
unicode_125955 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 941, 26), 'unicode', u'Agg')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 941, 25), list_125954, unicode_125955)
# Adding element type (line 941)
# Getting the type of 'validate_backend' (line 941)
validate_backend_125956 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 941, 33), 'validate_backend')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 941, 25), list_125954, validate_backend_125956)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_125953, list_125954))
# Adding element type (key, value) (line 940)
unicode_125957 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 943, 4), 'unicode', u'backend_fallback')

# Obtaining an instance of the builtin type 'list' (line 943)
list_125958 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 943, 25), 'list')
# Adding type elements to the builtin type 'list' instance (line 943)
# Adding element type (line 943)
# Getting the type of 'True' (line 943)
True_125959 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 943, 26), 'True')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 943, 25), list_125958, True_125959)
# Adding element type (line 943)
# Getting the type of 'validate_bool' (line 943)
validate_bool_125960 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 943, 32), 'validate_bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 943, 25), list_125958, validate_bool_125960)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_125957, list_125958))
# Adding element type (key, value) (line 940)
unicode_125961 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 944, 4), 'unicode', u'backend.qt4')

# Obtaining an instance of the builtin type 'list' (line 944)
list_125962 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 944, 25), 'list')
# Adding type elements to the builtin type 'list' instance (line 944)
# Adding element type (line 944)
unicode_125963 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 944, 26), 'unicode', u'PyQt4')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 944, 25), list_125962, unicode_125963)
# Adding element type (line 944)
# Getting the type of 'validate_qt4' (line 944)
validate_qt4_125964 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 944, 35), 'validate_qt4')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 944, 25), list_125962, validate_qt4_125964)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_125961, list_125962))
# Adding element type (key, value) (line 940)
unicode_125965 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 945, 4), 'unicode', u'backend.qt5')

# Obtaining an instance of the builtin type 'list' (line 945)
list_125966 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 945, 25), 'list')
# Adding type elements to the builtin type 'list' instance (line 945)
# Adding element type (line 945)
unicode_125967 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 945, 26), 'unicode', u'PyQt5')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 945, 25), list_125966, unicode_125967)
# Adding element type (line 945)
# Getting the type of 'validate_qt5' (line 945)
validate_qt5_125968 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 945, 35), 'validate_qt5')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 945, 25), list_125966, validate_qt5_125968)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_125965, list_125966))
# Adding element type (key, value) (line 940)
unicode_125969 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 946, 4), 'unicode', u'webagg.port')

# Obtaining an instance of the builtin type 'list' (line 946)
list_125970 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 946, 25), 'list')
# Adding type elements to the builtin type 'list' instance (line 946)
# Adding element type (line 946)
int_125971 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 946, 26), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 946, 25), list_125970, int_125971)
# Adding element type (line 946)
# Getting the type of 'validate_int' (line 946)
validate_int_125972 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 946, 32), 'validate_int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 946, 25), list_125970, validate_int_125972)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_125969, list_125970))
# Adding element type (key, value) (line 940)
unicode_125973 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 947, 4), 'unicode', u'webagg.open_in_browser')

# Obtaining an instance of the builtin type 'list' (line 947)
list_125974 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 947, 30), 'list')
# Adding type elements to the builtin type 'list' instance (line 947)
# Adding element type (line 947)
# Getting the type of 'True' (line 947)
True_125975 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 947, 31), 'True')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 947, 30), list_125974, True_125975)
# Adding element type (line 947)
# Getting the type of 'validate_bool' (line 947)
validate_bool_125976 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 947, 37), 'validate_bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 947, 30), list_125974, validate_bool_125976)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_125973, list_125974))
# Adding element type (key, value) (line 940)
unicode_125977 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 948, 4), 'unicode', u'webagg.port_retries')

# Obtaining an instance of the builtin type 'list' (line 948)
list_125978 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 948, 27), 'list')
# Adding type elements to the builtin type 'list' instance (line 948)
# Adding element type (line 948)
int_125979 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 948, 28), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 948, 27), list_125978, int_125979)
# Adding element type (line 948)
# Getting the type of 'validate_int' (line 948)
validate_int_125980 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 948, 32), 'validate_int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 948, 27), list_125978, validate_int_125980)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_125977, list_125978))
# Adding element type (key, value) (line 940)
unicode_125981 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 949, 4), 'unicode', u'nbagg.transparent')

# Obtaining an instance of the builtin type 'list' (line 949)
list_125982 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 949, 31), 'list')
# Adding type elements to the builtin type 'list' instance (line 949)
# Adding element type (line 949)
# Getting the type of 'True' (line 949)
True_125983 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 949, 32), 'True')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 949, 31), list_125982, True_125983)
# Adding element type (line 949)
# Getting the type of 'validate_bool' (line 949)
validate_bool_125984 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 949, 38), 'validate_bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 949, 31), list_125982, validate_bool_125984)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_125981, list_125982))
# Adding element type (key, value) (line 940)
unicode_125985 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 950, 4), 'unicode', u'toolbar')

# Obtaining an instance of the builtin type 'list' (line 950)
list_125986 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 950, 25), 'list')
# Adding type elements to the builtin type 'list' instance (line 950)
# Adding element type (line 950)
unicode_125987 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 950, 26), 'unicode', u'toolbar2')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 950, 25), list_125986, unicode_125987)
# Adding element type (line 950)
# Getting the type of 'validate_toolbar' (line 950)
validate_toolbar_125988 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 950, 38), 'validate_toolbar')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 950, 25), list_125986, validate_toolbar_125988)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_125985, list_125986))
# Adding element type (key, value) (line 940)
unicode_125989 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 951, 4), 'unicode', u'datapath')

# Obtaining an instance of the builtin type 'list' (line 951)
list_125990 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 951, 25), 'list')
# Adding type elements to the builtin type 'list' instance (line 951)
# Adding element type (line 951)
# Getting the type of 'None' (line 951)
None_125991 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 951, 26), 'None')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 951, 25), list_125990, None_125991)
# Adding element type (line 951)
# Getting the type of 'validate_path_exists' (line 951)
validate_path_exists_125992 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 951, 32), 'validate_path_exists')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 951, 25), list_125990, validate_path_exists_125992)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_125989, list_125990))
# Adding element type (key, value) (line 940)
unicode_125993 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 953, 4), 'unicode', u'interactive')

# Obtaining an instance of the builtin type 'list' (line 953)
list_125994 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 953, 25), 'list')
# Adding type elements to the builtin type 'list' instance (line 953)
# Adding element type (line 953)
# Getting the type of 'False' (line 953)
False_125995 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 953, 26), 'False')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 953, 25), list_125994, False_125995)
# Adding element type (line 953)
# Getting the type of 'validate_bool' (line 953)
validate_bool_125996 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 953, 33), 'validate_bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 953, 25), list_125994, validate_bool_125996)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_125993, list_125994))
# Adding element type (key, value) (line 940)
unicode_125997 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 954, 4), 'unicode', u'timezone')

# Obtaining an instance of the builtin type 'list' (line 954)
list_125998 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 954, 25), 'list')
# Adding type elements to the builtin type 'list' instance (line 954)
# Adding element type (line 954)
unicode_125999 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 954, 26), 'unicode', u'UTC')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 954, 25), list_125998, unicode_125999)
# Adding element type (line 954)
# Getting the type of 'six' (line 954)
six_126000 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 954, 33), 'six')
# Obtaining the member 'text_type' of a type (line 954)
text_type_126001 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 954, 33), six_126000, 'text_type')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 954, 25), list_125998, text_type_126001)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_125997, list_125998))
# Adding element type (key, value) (line 940)
unicode_126002 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 957, 4), 'unicode', u'verbose.level')

# Obtaining an instance of the builtin type 'list' (line 957)
list_126003 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 957, 21), 'list')
# Adding type elements to the builtin type 'list' instance (line 957)
# Adding element type (line 957)
unicode_126004 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 957, 22), 'unicode', u'silent')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 957, 21), list_126003, unicode_126004)
# Adding element type (line 957)
# Getting the type of 'validate_verbose' (line 957)
validate_verbose_126005 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 957, 32), 'validate_verbose')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 957, 21), list_126003, validate_verbose_126005)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126002, list_126003))
# Adding element type (key, value) (line 940)
unicode_126006 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 958, 4), 'unicode', u'verbose.fileo')

# Obtaining an instance of the builtin type 'list' (line 958)
list_126007 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 958, 21), 'list')
# Adding type elements to the builtin type 'list' instance (line 958)
# Adding element type (line 958)
unicode_126008 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 958, 22), 'unicode', u'sys.stdout')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 958, 21), list_126007, unicode_126008)
# Adding element type (line 958)
# Getting the type of 'six' (line 958)
six_126009 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 958, 36), 'six')
# Obtaining the member 'text_type' of a type (line 958)
text_type_126010 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 958, 36), six_126009, 'text_type')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 958, 21), list_126007, text_type_126010)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126006, list_126007))
# Adding element type (key, value) (line 940)
unicode_126011 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 961, 4), 'unicode', u'lines.linewidth')

# Obtaining an instance of the builtin type 'list' (line 961)
list_126012 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 961, 29), 'list')
# Adding type elements to the builtin type 'list' instance (line 961)
# Adding element type (line 961)
float_126013 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 961, 30), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 961, 29), list_126012, float_126013)
# Adding element type (line 961)
# Getting the type of 'validate_float' (line 961)
validate_float_126014 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 961, 35), 'validate_float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 961, 29), list_126012, validate_float_126014)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126011, list_126012))
# Adding element type (key, value) (line 940)
unicode_126015 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 962, 4), 'unicode', u'lines.linestyle')

# Obtaining an instance of the builtin type 'list' (line 962)
list_126016 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 962, 29), 'list')
# Adding type elements to the builtin type 'list' instance (line 962)
# Adding element type (line 962)
unicode_126017 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 962, 30), 'unicode', u'-')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 962, 29), list_126016, unicode_126017)
# Adding element type (line 962)
# Getting the type of '_validate_linestyle' (line 962)
_validate_linestyle_126018 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 962, 35), '_validate_linestyle')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 962, 29), list_126016, _validate_linestyle_126018)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126015, list_126016))
# Adding element type (key, value) (line 940)
unicode_126019 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 963, 4), 'unicode', u'lines.color')

# Obtaining an instance of the builtin type 'list' (line 963)
list_126020 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 963, 29), 'list')
# Adding type elements to the builtin type 'list' instance (line 963)
# Adding element type (line 963)
unicode_126021 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 963, 30), 'unicode', u'C0')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 963, 29), list_126020, unicode_126021)
# Adding element type (line 963)
# Getting the type of 'validate_color' (line 963)
validate_color_126022 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 963, 36), 'validate_color')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 963, 29), list_126020, validate_color_126022)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126019, list_126020))
# Adding element type (key, value) (line 940)
unicode_126023 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 964, 4), 'unicode', u'lines.marker')

# Obtaining an instance of the builtin type 'list' (line 964)
list_126024 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 964, 29), 'list')
# Adding type elements to the builtin type 'list' instance (line 964)
# Adding element type (line 964)
unicode_126025 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 964, 30), 'unicode', u'None')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 964, 29), list_126024, unicode_126025)
# Adding element type (line 964)
# Getting the type of 'six' (line 964)
six_126026 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 964, 38), 'six')
# Obtaining the member 'text_type' of a type (line 964)
text_type_126027 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 964, 38), six_126026, 'text_type')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 964, 29), list_126024, text_type_126027)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126023, list_126024))
# Adding element type (key, value) (line 940)
unicode_126028 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 965, 4), 'unicode', u'lines.markeredgewidth')

# Obtaining an instance of the builtin type 'list' (line 965)
list_126029 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 965, 29), 'list')
# Adding type elements to the builtin type 'list' instance (line 965)
# Adding element type (line 965)
float_126030 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 965, 30), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 965, 29), list_126029, float_126030)
# Adding element type (line 965)
# Getting the type of 'validate_float' (line 965)
validate_float_126031 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 965, 35), 'validate_float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 965, 29), list_126029, validate_float_126031)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126028, list_126029))
# Adding element type (key, value) (line 940)
unicode_126032 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 966, 4), 'unicode', u'lines.markersize')

# Obtaining an instance of the builtin type 'list' (line 966)
list_126033 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 966, 29), 'list')
# Adding type elements to the builtin type 'list' instance (line 966)
# Adding element type (line 966)
int_126034 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 966, 30), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 966, 29), list_126033, int_126034)
# Adding element type (line 966)
# Getting the type of 'validate_float' (line 966)
validate_float_126035 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 966, 33), 'validate_float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 966, 29), list_126033, validate_float_126035)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126032, list_126033))
# Adding element type (key, value) (line 940)
unicode_126036 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 967, 4), 'unicode', u'lines.antialiased')

# Obtaining an instance of the builtin type 'list' (line 967)
list_126037 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 967, 29), 'list')
# Adding type elements to the builtin type 'list' instance (line 967)
# Adding element type (line 967)
# Getting the type of 'True' (line 967)
True_126038 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 967, 30), 'True')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 967, 29), list_126037, True_126038)
# Adding element type (line 967)
# Getting the type of 'validate_bool' (line 967)
validate_bool_126039 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 967, 36), 'validate_bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 967, 29), list_126037, validate_bool_126039)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126036, list_126037))
# Adding element type (key, value) (line 940)
unicode_126040 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 968, 4), 'unicode', u'lines.dash_joinstyle')

# Obtaining an instance of the builtin type 'list' (line 968)
list_126041 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 968, 29), 'list')
# Adding type elements to the builtin type 'list' instance (line 968)
# Adding element type (line 968)
unicode_126042 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 968, 30), 'unicode', u'round')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 968, 29), list_126041, unicode_126042)
# Adding element type (line 968)
# Getting the type of 'validate_joinstyle' (line 968)
validate_joinstyle_126043 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 968, 39), 'validate_joinstyle')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 968, 29), list_126041, validate_joinstyle_126043)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126040, list_126041))
# Adding element type (key, value) (line 940)
unicode_126044 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 969, 4), 'unicode', u'lines.solid_joinstyle')

# Obtaining an instance of the builtin type 'list' (line 969)
list_126045 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 969, 29), 'list')
# Adding type elements to the builtin type 'list' instance (line 969)
# Adding element type (line 969)
unicode_126046 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 969, 30), 'unicode', u'round')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 969, 29), list_126045, unicode_126046)
# Adding element type (line 969)
# Getting the type of 'validate_joinstyle' (line 969)
validate_joinstyle_126047 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 969, 39), 'validate_joinstyle')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 969, 29), list_126045, validate_joinstyle_126047)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126044, list_126045))
# Adding element type (key, value) (line 940)
unicode_126048 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 970, 4), 'unicode', u'lines.dash_capstyle')

# Obtaining an instance of the builtin type 'list' (line 970)
list_126049 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 970, 29), 'list')
# Adding type elements to the builtin type 'list' instance (line 970)
# Adding element type (line 970)
unicode_126050 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 970, 30), 'unicode', u'butt')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 970, 29), list_126049, unicode_126050)
# Adding element type (line 970)
# Getting the type of 'validate_capstyle' (line 970)
validate_capstyle_126051 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 970, 38), 'validate_capstyle')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 970, 29), list_126049, validate_capstyle_126051)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126048, list_126049))
# Adding element type (key, value) (line 940)
unicode_126052 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 971, 4), 'unicode', u'lines.solid_capstyle')

# Obtaining an instance of the builtin type 'list' (line 971)
list_126053 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 971, 29), 'list')
# Adding type elements to the builtin type 'list' instance (line 971)
# Adding element type (line 971)
unicode_126054 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 971, 30), 'unicode', u'projecting')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 971, 29), list_126053, unicode_126054)
# Adding element type (line 971)
# Getting the type of 'validate_capstyle' (line 971)
validate_capstyle_126055 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 971, 44), 'validate_capstyle')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 971, 29), list_126053, validate_capstyle_126055)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126052, list_126053))
# Adding element type (key, value) (line 940)
unicode_126056 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 972, 4), 'unicode', u'lines.dashed_pattern')

# Obtaining an instance of the builtin type 'list' (line 972)
list_126057 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 972, 29), 'list')
# Adding type elements to the builtin type 'list' instance (line 972)
# Adding element type (line 972)

# Obtaining an instance of the builtin type 'list' (line 972)
list_126058 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 972, 30), 'list')
# Adding type elements to the builtin type 'list' instance (line 972)
# Adding element type (line 972)
float_126059 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 972, 31), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 972, 30), list_126058, float_126059)
# Adding element type (line 972)
float_126060 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 972, 36), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 972, 30), list_126058, float_126060)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 972, 29), list_126057, list_126058)
# Adding element type (line 972)

# Call to validate_nseq_float(...): (line 972)
# Processing the call keyword arguments (line 972)
# Getting the type of 'True' (line 972)
True_126062 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 972, 73), 'True', False)
keyword_126063 = True_126062
kwargs_126064 = {'allow_none': keyword_126063}
# Getting the type of 'validate_nseq_float' (line 972)
validate_nseq_float_126061 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 972, 42), 'validate_nseq_float', False)
# Calling validate_nseq_float(args, kwargs) (line 972)
validate_nseq_float_call_result_126065 = invoke(stypy.reporting.localization.Localization(__file__, 972, 42), validate_nseq_float_126061, *[], **kwargs_126064)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 972, 29), list_126057, validate_nseq_float_call_result_126065)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126056, list_126057))
# Adding element type (key, value) (line 940)
unicode_126066 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 973, 4), 'unicode', u'lines.dashdot_pattern')

# Obtaining an instance of the builtin type 'list' (line 973)
list_126067 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 973, 29), 'list')
# Adding type elements to the builtin type 'list' instance (line 973)
# Adding element type (line 973)

# Obtaining an instance of the builtin type 'list' (line 973)
list_126068 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 973, 30), 'list')
# Adding type elements to the builtin type 'list' instance (line 973)
# Adding element type (line 973)
float_126069 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 973, 31), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 973, 30), list_126068, float_126069)
# Adding element type (line 973)
float_126070 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 973, 36), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 973, 30), list_126068, float_126070)
# Adding element type (line 973)
int_126071 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 973, 41), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 973, 30), list_126068, int_126071)
# Adding element type (line 973)
float_126072 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 973, 44), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 973, 30), list_126068, float_126072)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 973, 29), list_126067, list_126068)
# Adding element type (line 973)

# Call to validate_nseq_float(...): (line 974)
# Processing the call keyword arguments (line 974)
# Getting the type of 'True' (line 974)
True_126074 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 974, 61), 'True', False)
keyword_126075 = True_126074
kwargs_126076 = {'allow_none': keyword_126075}
# Getting the type of 'validate_nseq_float' (line 974)
validate_nseq_float_126073 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 974, 30), 'validate_nseq_float', False)
# Calling validate_nseq_float(args, kwargs) (line 974)
validate_nseq_float_call_result_126077 = invoke(stypy.reporting.localization.Localization(__file__, 974, 30), validate_nseq_float_126073, *[], **kwargs_126076)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 973, 29), list_126067, validate_nseq_float_call_result_126077)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126066, list_126067))
# Adding element type (key, value) (line 940)
unicode_126078 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 975, 4), 'unicode', u'lines.dotted_pattern')

# Obtaining an instance of the builtin type 'list' (line 975)
list_126079 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 975, 29), 'list')
# Adding type elements to the builtin type 'list' instance (line 975)
# Adding element type (line 975)

# Obtaining an instance of the builtin type 'list' (line 975)
list_126080 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 975, 30), 'list')
# Adding type elements to the builtin type 'list' instance (line 975)
# Adding element type (line 975)
int_126081 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 975, 31), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 975, 30), list_126080, int_126081)
# Adding element type (line 975)
float_126082 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 975, 34), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 975, 30), list_126080, float_126082)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 975, 29), list_126079, list_126080)
# Adding element type (line 975)

# Call to validate_nseq_float(...): (line 975)
# Processing the call keyword arguments (line 975)
# Getting the type of 'True' (line 975)
True_126084 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 975, 72), 'True', False)
keyword_126085 = True_126084
kwargs_126086 = {'allow_none': keyword_126085}
# Getting the type of 'validate_nseq_float' (line 975)
validate_nseq_float_126083 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 975, 41), 'validate_nseq_float', False)
# Calling validate_nseq_float(args, kwargs) (line 975)
validate_nseq_float_call_result_126087 = invoke(stypy.reporting.localization.Localization(__file__, 975, 41), validate_nseq_float_126083, *[], **kwargs_126086)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 975, 29), list_126079, validate_nseq_float_call_result_126087)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126078, list_126079))
# Adding element type (key, value) (line 940)
unicode_126088 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 976, 4), 'unicode', u'lines.scale_dashes')

# Obtaining an instance of the builtin type 'list' (line 976)
list_126089 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 976, 27), 'list')
# Adding type elements to the builtin type 'list' instance (line 976)
# Adding element type (line 976)
# Getting the type of 'True' (line 976)
True_126090 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 976, 28), 'True')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 976, 27), list_126089, True_126090)
# Adding element type (line 976)
# Getting the type of 'validate_bool' (line 976)
validate_bool_126091 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 976, 34), 'validate_bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 976, 27), list_126089, validate_bool_126091)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126088, list_126089))
# Adding element type (key, value) (line 940)
unicode_126092 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 979, 4), 'unicode', u'markers.fillstyle')

# Obtaining an instance of the builtin type 'list' (line 979)
list_126093 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 979, 25), 'list')
# Adding type elements to the builtin type 'list' instance (line 979)
# Adding element type (line 979)
unicode_126094 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 979, 26), 'unicode', u'full')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 979, 25), list_126093, unicode_126094)
# Adding element type (line 979)
# Getting the type of 'validate_fillstyle' (line 979)
validate_fillstyle_126095 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 979, 34), 'validate_fillstyle')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 979, 25), list_126093, validate_fillstyle_126095)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126092, list_126093))
# Adding element type (key, value) (line 940)
unicode_126096 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 982, 4), 'unicode', u'patch.linewidth')

# Obtaining an instance of the builtin type 'list' (line 982)
list_126097 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 982, 25), 'list')
# Adding type elements to the builtin type 'list' instance (line 982)
# Adding element type (line 982)
float_126098 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 982, 26), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 982, 25), list_126097, float_126098)
# Adding element type (line 982)
# Getting the type of 'validate_float' (line 982)
validate_float_126099 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 982, 31), 'validate_float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 982, 25), list_126097, validate_float_126099)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126096, list_126097))
# Adding element type (key, value) (line 940)
unicode_126100 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 983, 4), 'unicode', u'patch.edgecolor')

# Obtaining an instance of the builtin type 'list' (line 983)
list_126101 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 983, 25), 'list')
# Adding type elements to the builtin type 'list' instance (line 983)
# Adding element type (line 983)
unicode_126102 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 983, 26), 'unicode', u'k')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 983, 25), list_126101, unicode_126102)
# Adding element type (line 983)
# Getting the type of 'validate_color' (line 983)
validate_color_126103 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 983, 31), 'validate_color')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 983, 25), list_126101, validate_color_126103)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126100, list_126101))
# Adding element type (key, value) (line 940)
unicode_126104 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 984, 4), 'unicode', u'patch.force_edgecolor')

# Obtaining an instance of the builtin type 'list' (line 984)
list_126105 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 984, 30), 'list')
# Adding type elements to the builtin type 'list' instance (line 984)
# Adding element type (line 984)
# Getting the type of 'False' (line 984)
False_126106 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 984, 31), 'False')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 984, 30), list_126105, False_126106)
# Adding element type (line 984)
# Getting the type of 'validate_bool' (line 984)
validate_bool_126107 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 984, 38), 'validate_bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 984, 30), list_126105, validate_bool_126107)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126104, list_126105))
# Adding element type (key, value) (line 940)
unicode_126108 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 985, 4), 'unicode', u'patch.facecolor')

# Obtaining an instance of the builtin type 'list' (line 985)
list_126109 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 985, 25), 'list')
# Adding type elements to the builtin type 'list' instance (line 985)
# Adding element type (line 985)
unicode_126110 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 985, 26), 'unicode', u'C0')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 985, 25), list_126109, unicode_126110)
# Adding element type (line 985)
# Getting the type of 'validate_color' (line 985)
validate_color_126111 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 985, 32), 'validate_color')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 985, 25), list_126109, validate_color_126111)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126108, list_126109))
# Adding element type (key, value) (line 940)
unicode_126112 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 986, 4), 'unicode', u'patch.antialiased')

# Obtaining an instance of the builtin type 'list' (line 986)
list_126113 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 986, 25), 'list')
# Adding type elements to the builtin type 'list' instance (line 986)
# Adding element type (line 986)
# Getting the type of 'True' (line 986)
True_126114 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 986, 26), 'True')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 986, 25), list_126113, True_126114)
# Adding element type (line 986)
# Getting the type of 'validate_bool' (line 986)
validate_bool_126115 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 986, 32), 'validate_bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 986, 25), list_126113, validate_bool_126115)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126112, list_126113))
# Adding element type (key, value) (line 940)
unicode_126116 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 989, 4), 'unicode', u'hatch.color')

# Obtaining an instance of the builtin type 'list' (line 989)
list_126117 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 989, 19), 'list')
# Adding type elements to the builtin type 'list' instance (line 989)
# Adding element type (line 989)
unicode_126118 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 989, 20), 'unicode', u'k')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 989, 19), list_126117, unicode_126118)
# Adding element type (line 989)
# Getting the type of 'validate_color' (line 989)
validate_color_126119 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 989, 25), 'validate_color')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 989, 19), list_126117, validate_color_126119)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126116, list_126117))
# Adding element type (key, value) (line 940)
unicode_126120 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 990, 4), 'unicode', u'hatch.linewidth')

# Obtaining an instance of the builtin type 'list' (line 990)
list_126121 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 990, 23), 'list')
# Adding type elements to the builtin type 'list' instance (line 990)
# Adding element type (line 990)
float_126122 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 990, 24), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 990, 23), list_126121, float_126122)
# Adding element type (line 990)
# Getting the type of 'validate_float' (line 990)
validate_float_126123 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 990, 29), 'validate_float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 990, 23), list_126121, validate_float_126123)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126120, list_126121))
# Adding element type (key, value) (line 940)
unicode_126124 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 993, 4), 'unicode', u'hist.bins')

# Obtaining an instance of the builtin type 'list' (line 993)
list_126125 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 993, 17), 'list')
# Adding type elements to the builtin type 'list' instance (line 993)
# Adding element type (line 993)
int_126126 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 993, 18), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 993, 17), list_126125, int_126126)
# Adding element type (line 993)
# Getting the type of 'validate_hist_bins' (line 993)
validate_hist_bins_126127 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 993, 22), 'validate_hist_bins')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 993, 17), list_126125, validate_hist_bins_126127)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126124, list_126125))
# Adding element type (key, value) (line 940)
unicode_126128 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 996, 4), 'unicode', u'boxplot.notch')

# Obtaining an instance of the builtin type 'list' (line 996)
list_126129 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 996, 21), 'list')
# Adding type elements to the builtin type 'list' instance (line 996)
# Adding element type (line 996)
# Getting the type of 'False' (line 996)
False_126130 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 996, 22), 'False')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 996, 21), list_126129, False_126130)
# Adding element type (line 996)
# Getting the type of 'validate_bool' (line 996)
validate_bool_126131 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 996, 29), 'validate_bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 996, 21), list_126129, validate_bool_126131)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126128, list_126129))
# Adding element type (key, value) (line 940)
unicode_126132 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 997, 4), 'unicode', u'boxplot.vertical')

# Obtaining an instance of the builtin type 'list' (line 997)
list_126133 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 997, 24), 'list')
# Adding type elements to the builtin type 'list' instance (line 997)
# Adding element type (line 997)
# Getting the type of 'True' (line 997)
True_126134 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 997, 25), 'True')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 997, 24), list_126133, True_126134)
# Adding element type (line 997)
# Getting the type of 'validate_bool' (line 997)
validate_bool_126135 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 997, 31), 'validate_bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 997, 24), list_126133, validate_bool_126135)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126132, list_126133))
# Adding element type (key, value) (line 940)
unicode_126136 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 998, 4), 'unicode', u'boxplot.whiskers')

# Obtaining an instance of the builtin type 'list' (line 998)
list_126137 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 998, 24), 'list')
# Adding type elements to the builtin type 'list' instance (line 998)
# Adding element type (line 998)
float_126138 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 998, 25), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 998, 24), list_126137, float_126138)
# Adding element type (line 998)
# Getting the type of 'validate_whiskers' (line 998)
validate_whiskers_126139 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 998, 30), 'validate_whiskers')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 998, 24), list_126137, validate_whiskers_126139)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126136, list_126137))
# Adding element type (key, value) (line 940)
unicode_126140 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 999, 4), 'unicode', u'boxplot.bootstrap')

# Obtaining an instance of the builtin type 'list' (line 999)
list_126141 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 999, 25), 'list')
# Adding type elements to the builtin type 'list' instance (line 999)
# Adding element type (line 999)
# Getting the type of 'None' (line 999)
None_126142 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 999, 26), 'None')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 999, 25), list_126141, None_126142)
# Adding element type (line 999)
# Getting the type of 'validate_int_or_None' (line 999)
validate_int_or_None_126143 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 999, 32), 'validate_int_or_None')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 999, 25), list_126141, validate_int_or_None_126143)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126140, list_126141))
# Adding element type (key, value) (line 940)
unicode_126144 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1000, 4), 'unicode', u'boxplot.patchartist')

# Obtaining an instance of the builtin type 'list' (line 1000)
list_126145 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1000, 27), 'list')
# Adding type elements to the builtin type 'list' instance (line 1000)
# Adding element type (line 1000)
# Getting the type of 'False' (line 1000)
False_126146 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1000, 28), 'False')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1000, 27), list_126145, False_126146)
# Adding element type (line 1000)
# Getting the type of 'validate_bool' (line 1000)
validate_bool_126147 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1000, 35), 'validate_bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1000, 27), list_126145, validate_bool_126147)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126144, list_126145))
# Adding element type (key, value) (line 940)
unicode_126148 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1001, 4), 'unicode', u'boxplot.showmeans')

# Obtaining an instance of the builtin type 'list' (line 1001)
list_126149 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1001, 25), 'list')
# Adding type elements to the builtin type 'list' instance (line 1001)
# Adding element type (line 1001)
# Getting the type of 'False' (line 1001)
False_126150 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1001, 26), 'False')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1001, 25), list_126149, False_126150)
# Adding element type (line 1001)
# Getting the type of 'validate_bool' (line 1001)
validate_bool_126151 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1001, 33), 'validate_bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1001, 25), list_126149, validate_bool_126151)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126148, list_126149))
# Adding element type (key, value) (line 940)
unicode_126152 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1002, 4), 'unicode', u'boxplot.showcaps')

# Obtaining an instance of the builtin type 'list' (line 1002)
list_126153 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1002, 24), 'list')
# Adding type elements to the builtin type 'list' instance (line 1002)
# Adding element type (line 1002)
# Getting the type of 'True' (line 1002)
True_126154 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1002, 25), 'True')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1002, 24), list_126153, True_126154)
# Adding element type (line 1002)
# Getting the type of 'validate_bool' (line 1002)
validate_bool_126155 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1002, 31), 'validate_bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1002, 24), list_126153, validate_bool_126155)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126152, list_126153))
# Adding element type (key, value) (line 940)
unicode_126156 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1003, 4), 'unicode', u'boxplot.showbox')

# Obtaining an instance of the builtin type 'list' (line 1003)
list_126157 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1003, 23), 'list')
# Adding type elements to the builtin type 'list' instance (line 1003)
# Adding element type (line 1003)
# Getting the type of 'True' (line 1003)
True_126158 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1003, 24), 'True')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1003, 23), list_126157, True_126158)
# Adding element type (line 1003)
# Getting the type of 'validate_bool' (line 1003)
validate_bool_126159 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1003, 30), 'validate_bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1003, 23), list_126157, validate_bool_126159)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126156, list_126157))
# Adding element type (key, value) (line 940)
unicode_126160 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1004, 4), 'unicode', u'boxplot.showfliers')

# Obtaining an instance of the builtin type 'list' (line 1004)
list_126161 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1004, 26), 'list')
# Adding type elements to the builtin type 'list' instance (line 1004)
# Adding element type (line 1004)
# Getting the type of 'True' (line 1004)
True_126162 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1004, 27), 'True')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1004, 26), list_126161, True_126162)
# Adding element type (line 1004)
# Getting the type of 'validate_bool' (line 1004)
validate_bool_126163 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1004, 33), 'validate_bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1004, 26), list_126161, validate_bool_126163)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126160, list_126161))
# Adding element type (key, value) (line 940)
unicode_126164 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1005, 4), 'unicode', u'boxplot.meanline')

# Obtaining an instance of the builtin type 'list' (line 1005)
list_126165 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1005, 24), 'list')
# Adding type elements to the builtin type 'list' instance (line 1005)
# Adding element type (line 1005)
# Getting the type of 'False' (line 1005)
False_126166 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1005, 25), 'False')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1005, 24), list_126165, False_126166)
# Adding element type (line 1005)
# Getting the type of 'validate_bool' (line 1005)
validate_bool_126167 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1005, 32), 'validate_bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1005, 24), list_126165, validate_bool_126167)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126164, list_126165))
# Adding element type (key, value) (line 940)
unicode_126168 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1007, 4), 'unicode', u'boxplot.flierprops.color')

# Obtaining an instance of the builtin type 'list' (line 1007)
list_126169 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1007, 32), 'list')
# Adding type elements to the builtin type 'list' instance (line 1007)
# Adding element type (line 1007)
unicode_126170 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1007, 33), 'unicode', u'k')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1007, 32), list_126169, unicode_126170)
# Adding element type (line 1007)
# Getting the type of 'validate_color' (line 1007)
validate_color_126171 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1007, 38), 'validate_color')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1007, 32), list_126169, validate_color_126171)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126168, list_126169))
# Adding element type (key, value) (line 940)
unicode_126172 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1008, 4), 'unicode', u'boxplot.flierprops.marker')

# Obtaining an instance of the builtin type 'list' (line 1008)
list_126173 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1008, 33), 'list')
# Adding type elements to the builtin type 'list' instance (line 1008)
# Adding element type (line 1008)
unicode_126174 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1008, 34), 'unicode', u'o')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1008, 33), list_126173, unicode_126174)
# Adding element type (line 1008)
# Getting the type of 'six' (line 1008)
six_126175 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1008, 39), 'six')
# Obtaining the member 'text_type' of a type (line 1008)
text_type_126176 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1008, 39), six_126175, 'text_type')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1008, 33), list_126173, text_type_126176)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126172, list_126173))
# Adding element type (key, value) (line 940)
unicode_126177 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1009, 4), 'unicode', u'boxplot.flierprops.markerfacecolor')

# Obtaining an instance of the builtin type 'list' (line 1009)
list_126178 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1009, 42), 'list')
# Adding type elements to the builtin type 'list' instance (line 1009)
# Adding element type (line 1009)
unicode_126179 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1009, 43), 'unicode', u'none')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1009, 42), list_126178, unicode_126179)
# Adding element type (line 1009)
# Getting the type of 'validate_color_or_auto' (line 1009)
validate_color_or_auto_126180 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1009, 51), 'validate_color_or_auto')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1009, 42), list_126178, validate_color_or_auto_126180)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126177, list_126178))
# Adding element type (key, value) (line 940)
unicode_126181 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1010, 4), 'unicode', u'boxplot.flierprops.markeredgecolor')

# Obtaining an instance of the builtin type 'list' (line 1010)
list_126182 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1010, 42), 'list')
# Adding type elements to the builtin type 'list' instance (line 1010)
# Adding element type (line 1010)
unicode_126183 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1010, 43), 'unicode', u'k')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1010, 42), list_126182, unicode_126183)
# Adding element type (line 1010)
# Getting the type of 'validate_color' (line 1010)
validate_color_126184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1010, 48), 'validate_color')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1010, 42), list_126182, validate_color_126184)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126181, list_126182))
# Adding element type (key, value) (line 940)
unicode_126185 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1011, 4), 'unicode', u'boxplot.flierprops.markersize')

# Obtaining an instance of the builtin type 'list' (line 1011)
list_126186 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1011, 37), 'list')
# Adding type elements to the builtin type 'list' instance (line 1011)
# Adding element type (line 1011)
int_126187 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1011, 38), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1011, 37), list_126186, int_126187)
# Adding element type (line 1011)
# Getting the type of 'validate_float' (line 1011)
validate_float_126188 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1011, 41), 'validate_float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1011, 37), list_126186, validate_float_126188)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126185, list_126186))
# Adding element type (key, value) (line 940)
unicode_126189 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1012, 4), 'unicode', u'boxplot.flierprops.linestyle')

# Obtaining an instance of the builtin type 'list' (line 1012)
list_126190 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1012, 36), 'list')
# Adding type elements to the builtin type 'list' instance (line 1012)
# Adding element type (line 1012)
unicode_126191 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1012, 37), 'unicode', u'none')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1012, 36), list_126190, unicode_126191)
# Adding element type (line 1012)
# Getting the type of '_validate_linestyle' (line 1012)
_validate_linestyle_126192 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1012, 45), '_validate_linestyle')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1012, 36), list_126190, _validate_linestyle_126192)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126189, list_126190))
# Adding element type (key, value) (line 940)
unicode_126193 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1013, 4), 'unicode', u'boxplot.flierprops.linewidth')

# Obtaining an instance of the builtin type 'list' (line 1013)
list_126194 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1013, 36), 'list')
# Adding type elements to the builtin type 'list' instance (line 1013)
# Adding element type (line 1013)
float_126195 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1013, 37), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1013, 36), list_126194, float_126195)
# Adding element type (line 1013)
# Getting the type of 'validate_float' (line 1013)
validate_float_126196 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1013, 42), 'validate_float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1013, 36), list_126194, validate_float_126196)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126193, list_126194))
# Adding element type (key, value) (line 940)
unicode_126197 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1015, 4), 'unicode', u'boxplot.boxprops.color')

# Obtaining an instance of the builtin type 'list' (line 1015)
list_126198 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1015, 30), 'list')
# Adding type elements to the builtin type 'list' instance (line 1015)
# Adding element type (line 1015)
unicode_126199 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1015, 31), 'unicode', u'k')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1015, 30), list_126198, unicode_126199)
# Adding element type (line 1015)
# Getting the type of 'validate_color' (line 1015)
validate_color_126200 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1015, 36), 'validate_color')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1015, 30), list_126198, validate_color_126200)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126197, list_126198))
# Adding element type (key, value) (line 940)
unicode_126201 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1016, 4), 'unicode', u'boxplot.boxprops.linewidth')

# Obtaining an instance of the builtin type 'list' (line 1016)
list_126202 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1016, 34), 'list')
# Adding type elements to the builtin type 'list' instance (line 1016)
# Adding element type (line 1016)
float_126203 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1016, 35), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1016, 34), list_126202, float_126203)
# Adding element type (line 1016)
# Getting the type of 'validate_float' (line 1016)
validate_float_126204 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1016, 40), 'validate_float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1016, 34), list_126202, validate_float_126204)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126201, list_126202))
# Adding element type (key, value) (line 940)
unicode_126205 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1017, 4), 'unicode', u'boxplot.boxprops.linestyle')

# Obtaining an instance of the builtin type 'list' (line 1017)
list_126206 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1017, 34), 'list')
# Adding type elements to the builtin type 'list' instance (line 1017)
# Adding element type (line 1017)
unicode_126207 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1017, 35), 'unicode', u'-')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1017, 34), list_126206, unicode_126207)
# Adding element type (line 1017)
# Getting the type of '_validate_linestyle' (line 1017)
_validate_linestyle_126208 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1017, 40), '_validate_linestyle')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1017, 34), list_126206, _validate_linestyle_126208)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126205, list_126206))
# Adding element type (key, value) (line 940)
unicode_126209 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1019, 4), 'unicode', u'boxplot.whiskerprops.color')

# Obtaining an instance of the builtin type 'list' (line 1019)
list_126210 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1019, 34), 'list')
# Adding type elements to the builtin type 'list' instance (line 1019)
# Adding element type (line 1019)
unicode_126211 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1019, 35), 'unicode', u'k')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1019, 34), list_126210, unicode_126211)
# Adding element type (line 1019)
# Getting the type of 'validate_color' (line 1019)
validate_color_126212 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1019, 40), 'validate_color')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1019, 34), list_126210, validate_color_126212)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126209, list_126210))
# Adding element type (key, value) (line 940)
unicode_126213 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1020, 4), 'unicode', u'boxplot.whiskerprops.linewidth')

# Obtaining an instance of the builtin type 'list' (line 1020)
list_126214 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1020, 38), 'list')
# Adding type elements to the builtin type 'list' instance (line 1020)
# Adding element type (line 1020)
float_126215 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1020, 39), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1020, 38), list_126214, float_126215)
# Adding element type (line 1020)
# Getting the type of 'validate_float' (line 1020)
validate_float_126216 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1020, 44), 'validate_float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1020, 38), list_126214, validate_float_126216)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126213, list_126214))
# Adding element type (key, value) (line 940)
unicode_126217 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1021, 4), 'unicode', u'boxplot.whiskerprops.linestyle')

# Obtaining an instance of the builtin type 'list' (line 1021)
list_126218 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1021, 38), 'list')
# Adding type elements to the builtin type 'list' instance (line 1021)
# Adding element type (line 1021)
unicode_126219 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1021, 39), 'unicode', u'-')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1021, 38), list_126218, unicode_126219)
# Adding element type (line 1021)
# Getting the type of '_validate_linestyle' (line 1021)
_validate_linestyle_126220 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1021, 44), '_validate_linestyle')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1021, 38), list_126218, _validate_linestyle_126220)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126217, list_126218))
# Adding element type (key, value) (line 940)
unicode_126221 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1023, 4), 'unicode', u'boxplot.capprops.color')

# Obtaining an instance of the builtin type 'list' (line 1023)
list_126222 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1023, 30), 'list')
# Adding type elements to the builtin type 'list' instance (line 1023)
# Adding element type (line 1023)
unicode_126223 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1023, 31), 'unicode', u'k')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1023, 30), list_126222, unicode_126223)
# Adding element type (line 1023)
# Getting the type of 'validate_color' (line 1023)
validate_color_126224 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1023, 36), 'validate_color')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1023, 30), list_126222, validate_color_126224)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126221, list_126222))
# Adding element type (key, value) (line 940)
unicode_126225 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1024, 4), 'unicode', u'boxplot.capprops.linewidth')

# Obtaining an instance of the builtin type 'list' (line 1024)
list_126226 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1024, 34), 'list')
# Adding type elements to the builtin type 'list' instance (line 1024)
# Adding element type (line 1024)
float_126227 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1024, 35), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1024, 34), list_126226, float_126227)
# Adding element type (line 1024)
# Getting the type of 'validate_float' (line 1024)
validate_float_126228 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1024, 40), 'validate_float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1024, 34), list_126226, validate_float_126228)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126225, list_126226))
# Adding element type (key, value) (line 940)
unicode_126229 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1025, 4), 'unicode', u'boxplot.capprops.linestyle')

# Obtaining an instance of the builtin type 'list' (line 1025)
list_126230 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1025, 34), 'list')
# Adding type elements to the builtin type 'list' instance (line 1025)
# Adding element type (line 1025)
unicode_126231 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1025, 35), 'unicode', u'-')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1025, 34), list_126230, unicode_126231)
# Adding element type (line 1025)
# Getting the type of '_validate_linestyle' (line 1025)
_validate_linestyle_126232 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1025, 40), '_validate_linestyle')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1025, 34), list_126230, _validate_linestyle_126232)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126229, list_126230))
# Adding element type (key, value) (line 940)
unicode_126233 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1027, 4), 'unicode', u'boxplot.medianprops.color')

# Obtaining an instance of the builtin type 'list' (line 1027)
list_126234 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1027, 33), 'list')
# Adding type elements to the builtin type 'list' instance (line 1027)
# Adding element type (line 1027)
unicode_126235 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1027, 34), 'unicode', u'C1')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1027, 33), list_126234, unicode_126235)
# Adding element type (line 1027)
# Getting the type of 'validate_color' (line 1027)
validate_color_126236 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1027, 40), 'validate_color')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1027, 33), list_126234, validate_color_126236)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126233, list_126234))
# Adding element type (key, value) (line 940)
unicode_126237 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1028, 4), 'unicode', u'boxplot.medianprops.linewidth')

# Obtaining an instance of the builtin type 'list' (line 1028)
list_126238 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1028, 37), 'list')
# Adding type elements to the builtin type 'list' instance (line 1028)
# Adding element type (line 1028)
float_126239 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1028, 38), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1028, 37), list_126238, float_126239)
# Adding element type (line 1028)
# Getting the type of 'validate_float' (line 1028)
validate_float_126240 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1028, 43), 'validate_float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1028, 37), list_126238, validate_float_126240)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126237, list_126238))
# Adding element type (key, value) (line 940)
unicode_126241 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1029, 4), 'unicode', u'boxplot.medianprops.linestyle')

# Obtaining an instance of the builtin type 'list' (line 1029)
list_126242 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1029, 37), 'list')
# Adding type elements to the builtin type 'list' instance (line 1029)
# Adding element type (line 1029)
unicode_126243 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1029, 38), 'unicode', u'-')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1029, 37), list_126242, unicode_126243)
# Adding element type (line 1029)
# Getting the type of '_validate_linestyle' (line 1029)
_validate_linestyle_126244 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1029, 43), '_validate_linestyle')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1029, 37), list_126242, _validate_linestyle_126244)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126241, list_126242))
# Adding element type (key, value) (line 940)
unicode_126245 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1031, 4), 'unicode', u'boxplot.meanprops.color')

# Obtaining an instance of the builtin type 'list' (line 1031)
list_126246 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1031, 31), 'list')
# Adding type elements to the builtin type 'list' instance (line 1031)
# Adding element type (line 1031)
unicode_126247 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1031, 32), 'unicode', u'C2')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1031, 31), list_126246, unicode_126247)
# Adding element type (line 1031)
# Getting the type of 'validate_color' (line 1031)
validate_color_126248 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1031, 38), 'validate_color')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1031, 31), list_126246, validate_color_126248)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126245, list_126246))
# Adding element type (key, value) (line 940)
unicode_126249 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1032, 4), 'unicode', u'boxplot.meanprops.marker')

# Obtaining an instance of the builtin type 'list' (line 1032)
list_126250 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1032, 32), 'list')
# Adding type elements to the builtin type 'list' instance (line 1032)
# Adding element type (line 1032)
unicode_126251 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1032, 33), 'unicode', u'^')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1032, 32), list_126250, unicode_126251)
# Adding element type (line 1032)
# Getting the type of 'six' (line 1032)
six_126252 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1032, 38), 'six')
# Obtaining the member 'text_type' of a type (line 1032)
text_type_126253 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1032, 38), six_126252, 'text_type')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1032, 32), list_126250, text_type_126253)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126249, list_126250))
# Adding element type (key, value) (line 940)
unicode_126254 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1033, 4), 'unicode', u'boxplot.meanprops.markerfacecolor')

# Obtaining an instance of the builtin type 'list' (line 1033)
list_126255 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1033, 41), 'list')
# Adding type elements to the builtin type 'list' instance (line 1033)
# Adding element type (line 1033)
unicode_126256 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1033, 42), 'unicode', u'C2')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1033, 41), list_126255, unicode_126256)
# Adding element type (line 1033)
# Getting the type of 'validate_color' (line 1033)
validate_color_126257 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1033, 48), 'validate_color')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1033, 41), list_126255, validate_color_126257)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126254, list_126255))
# Adding element type (key, value) (line 940)
unicode_126258 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1034, 4), 'unicode', u'boxplot.meanprops.markeredgecolor')

# Obtaining an instance of the builtin type 'list' (line 1034)
list_126259 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1034, 41), 'list')
# Adding type elements to the builtin type 'list' instance (line 1034)
# Adding element type (line 1034)
unicode_126260 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1034, 42), 'unicode', u'C2')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1034, 41), list_126259, unicode_126260)
# Adding element type (line 1034)
# Getting the type of 'validate_color' (line 1034)
validate_color_126261 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1034, 48), 'validate_color')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1034, 41), list_126259, validate_color_126261)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126258, list_126259))
# Adding element type (key, value) (line 940)
unicode_126262 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1035, 4), 'unicode', u'boxplot.meanprops.markersize')

# Obtaining an instance of the builtin type 'list' (line 1035)
list_126263 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1035, 36), 'list')
# Adding type elements to the builtin type 'list' instance (line 1035)
# Adding element type (line 1035)
int_126264 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1035, 37), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1035, 36), list_126263, int_126264)
# Adding element type (line 1035)
# Getting the type of 'validate_float' (line 1035)
validate_float_126265 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 40), 'validate_float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1035, 36), list_126263, validate_float_126265)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126262, list_126263))
# Adding element type (key, value) (line 940)
unicode_126266 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1036, 4), 'unicode', u'boxplot.meanprops.linestyle')

# Obtaining an instance of the builtin type 'list' (line 1036)
list_126267 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1036, 35), 'list')
# Adding type elements to the builtin type 'list' instance (line 1036)
# Adding element type (line 1036)
unicode_126268 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1036, 36), 'unicode', u'--')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1036, 35), list_126267, unicode_126268)
# Adding element type (line 1036)
# Getting the type of '_validate_linestyle' (line 1036)
_validate_linestyle_126269 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1036, 42), '_validate_linestyle')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1036, 35), list_126267, _validate_linestyle_126269)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126266, list_126267))
# Adding element type (key, value) (line 940)
unicode_126270 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1037, 4), 'unicode', u'boxplot.meanprops.linewidth')

# Obtaining an instance of the builtin type 'list' (line 1037)
list_126271 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1037, 35), 'list')
# Adding type elements to the builtin type 'list' instance (line 1037)
# Adding element type (line 1037)
float_126272 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1037, 36), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1037, 35), list_126271, float_126272)
# Adding element type (line 1037)
# Getting the type of 'validate_float' (line 1037)
validate_float_126273 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1037, 41), 'validate_float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1037, 35), list_126271, validate_float_126273)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126270, list_126271))
# Adding element type (key, value) (line 940)
unicode_126274 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1040, 4), 'unicode', u'font.family')

# Obtaining an instance of the builtin type 'list' (line 1040)
list_126275 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1040, 23), 'list')
# Adding type elements to the builtin type 'list' instance (line 1040)
# Adding element type (line 1040)

# Obtaining an instance of the builtin type 'list' (line 1040)
list_126276 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1040, 24), 'list')
# Adding type elements to the builtin type 'list' instance (line 1040)
# Adding element type (line 1040)
unicode_126277 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1040, 25), 'unicode', u'sans-serif')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1040, 24), list_126276, unicode_126277)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1040, 23), list_126275, list_126276)
# Adding element type (line 1040)
# Getting the type of 'validate_stringlist' (line 1040)
validate_stringlist_126278 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1040, 40), 'validate_stringlist')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1040, 23), list_126275, validate_stringlist_126278)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126274, list_126275))
# Adding element type (key, value) (line 940)
unicode_126279 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1041, 4), 'unicode', u'font.style')

# Obtaining an instance of the builtin type 'list' (line 1041)
list_126280 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1041, 23), 'list')
# Adding type elements to the builtin type 'list' instance (line 1041)
# Adding element type (line 1041)
unicode_126281 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1041, 24), 'unicode', u'normal')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1041, 23), list_126280, unicode_126281)
# Adding element type (line 1041)
# Getting the type of 'six' (line 1041)
six_126282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1041, 34), 'six')
# Obtaining the member 'text_type' of a type (line 1041)
text_type_126283 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1041, 34), six_126282, 'text_type')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1041, 23), list_126280, text_type_126283)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126279, list_126280))
# Adding element type (key, value) (line 940)
unicode_126284 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1042, 4), 'unicode', u'font.variant')

# Obtaining an instance of the builtin type 'list' (line 1042)
list_126285 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1042, 23), 'list')
# Adding type elements to the builtin type 'list' instance (line 1042)
# Adding element type (line 1042)
unicode_126286 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1042, 24), 'unicode', u'normal')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1042, 23), list_126285, unicode_126286)
# Adding element type (line 1042)
# Getting the type of 'six' (line 1042)
six_126287 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1042, 34), 'six')
# Obtaining the member 'text_type' of a type (line 1042)
text_type_126288 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1042, 34), six_126287, 'text_type')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1042, 23), list_126285, text_type_126288)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126284, list_126285))
# Adding element type (key, value) (line 940)
unicode_126289 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1043, 4), 'unicode', u'font.stretch')

# Obtaining an instance of the builtin type 'list' (line 1043)
list_126290 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1043, 23), 'list')
# Adding type elements to the builtin type 'list' instance (line 1043)
# Adding element type (line 1043)
unicode_126291 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1043, 24), 'unicode', u'normal')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1043, 23), list_126290, unicode_126291)
# Adding element type (line 1043)
# Getting the type of 'six' (line 1043)
six_126292 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1043, 34), 'six')
# Obtaining the member 'text_type' of a type (line 1043)
text_type_126293 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1043, 34), six_126292, 'text_type')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1043, 23), list_126290, text_type_126293)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126289, list_126290))
# Adding element type (key, value) (line 940)
unicode_126294 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1044, 4), 'unicode', u'font.weight')

# Obtaining an instance of the builtin type 'list' (line 1044)
list_126295 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1044, 23), 'list')
# Adding type elements to the builtin type 'list' instance (line 1044)
# Adding element type (line 1044)
unicode_126296 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1044, 24), 'unicode', u'normal')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1044, 23), list_126295, unicode_126296)
# Adding element type (line 1044)
# Getting the type of 'six' (line 1044)
six_126297 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1044, 34), 'six')
# Obtaining the member 'text_type' of a type (line 1044)
text_type_126298 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1044, 34), six_126297, 'text_type')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1044, 23), list_126295, text_type_126298)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126294, list_126295))
# Adding element type (key, value) (line 940)
unicode_126299 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1045, 4), 'unicode', u'font.size')

# Obtaining an instance of the builtin type 'list' (line 1045)
list_126300 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1045, 23), 'list')
# Adding type elements to the builtin type 'list' instance (line 1045)
# Adding element type (line 1045)
int_126301 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1045, 24), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1045, 23), list_126300, int_126301)
# Adding element type (line 1045)
# Getting the type of 'validate_float' (line 1045)
validate_float_126302 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1045, 28), 'validate_float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1045, 23), list_126300, validate_float_126302)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126299, list_126300))
# Adding element type (key, value) (line 940)
unicode_126303 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1046, 4), 'unicode', u'font.serif')

# Obtaining an instance of the builtin type 'list' (line 1046)
list_126304 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1046, 23), 'list')
# Adding type elements to the builtin type 'list' instance (line 1046)
# Adding element type (line 1046)

# Obtaining an instance of the builtin type 'list' (line 1046)
list_126305 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1046, 24), 'list')
# Adding type elements to the builtin type 'list' instance (line 1046)
# Adding element type (line 1046)
unicode_126306 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1046, 25), 'unicode', u'DejaVu Serif')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1046, 24), list_126305, unicode_126306)
# Adding element type (line 1046)
unicode_126307 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1046, 41), 'unicode', u'Bitstream Vera Serif')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1046, 24), list_126305, unicode_126307)
# Adding element type (line 1046)
unicode_126308 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1047, 25), 'unicode', u'Computer Modern Roman')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1046, 24), list_126305, unicode_126308)
# Adding element type (line 1046)
unicode_126309 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1048, 25), 'unicode', u'New Century Schoolbook')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1046, 24), list_126305, unicode_126309)
# Adding element type (line 1046)
unicode_126310 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1048, 51), 'unicode', u'Century Schoolbook L')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1046, 24), list_126305, unicode_126310)
# Adding element type (line 1046)
unicode_126311 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1049, 25), 'unicode', u'Utopia')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1046, 24), list_126305, unicode_126311)
# Adding element type (line 1046)
unicode_126312 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1049, 35), 'unicode', u'ITC Bookman')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1046, 24), list_126305, unicode_126312)
# Adding element type (line 1046)
unicode_126313 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1049, 50), 'unicode', u'Bookman')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1046, 24), list_126305, unicode_126313)
# Adding element type (line 1046)
unicode_126314 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1050, 25), 'unicode', u'Nimbus Roman No9 L')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1046, 24), list_126305, unicode_126314)
# Adding element type (line 1046)
unicode_126315 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1050, 47), 'unicode', u'Times New Roman')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1046, 24), list_126305, unicode_126315)
# Adding element type (line 1046)
unicode_126316 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1051, 25), 'unicode', u'Times')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1046, 24), list_126305, unicode_126316)
# Adding element type (line 1046)
unicode_126317 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1051, 34), 'unicode', u'Palatino')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1046, 24), list_126305, unicode_126317)
# Adding element type (line 1046)
unicode_126318 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1051, 46), 'unicode', u'Charter')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1046, 24), list_126305, unicode_126318)
# Adding element type (line 1046)
unicode_126319 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1051, 57), 'unicode', u'serif')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1046, 24), list_126305, unicode_126319)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1046, 23), list_126304, list_126305)
# Adding element type (line 1046)
# Getting the type of 'validate_stringlist' (line 1052)
validate_stringlist_126320 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1052, 24), 'validate_stringlist')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1046, 23), list_126304, validate_stringlist_126320)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126303, list_126304))
# Adding element type (key, value) (line 940)
unicode_126321 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1053, 4), 'unicode', u'font.sans-serif')

# Obtaining an instance of the builtin type 'list' (line 1053)
list_126322 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1053, 23), 'list')
# Adding type elements to the builtin type 'list' instance (line 1053)
# Adding element type (line 1053)

# Obtaining an instance of the builtin type 'list' (line 1053)
list_126323 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1053, 24), 'list')
# Adding type elements to the builtin type 'list' instance (line 1053)
# Adding element type (line 1053)
unicode_126324 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1053, 25), 'unicode', u'DejaVu Sans')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1053, 24), list_126323, unicode_126324)
# Adding element type (line 1053)
unicode_126325 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1053, 40), 'unicode', u'Bitstream Vera Sans')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1053, 24), list_126323, unicode_126325)
# Adding element type (line 1053)
unicode_126326 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1054, 25), 'unicode', u'Computer Modern Sans Serif')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1053, 24), list_126323, unicode_126326)
# Adding element type (line 1053)
unicode_126327 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1055, 25), 'unicode', u'Lucida Grande')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1053, 24), list_126323, unicode_126327)
# Adding element type (line 1053)
unicode_126328 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1055, 42), 'unicode', u'Verdana')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1053, 24), list_126323, unicode_126328)
# Adding element type (line 1053)
unicode_126329 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1055, 53), 'unicode', u'Geneva')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1053, 24), list_126323, unicode_126329)
# Adding element type (line 1053)
unicode_126330 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1055, 63), 'unicode', u'Lucid')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1053, 24), list_126323, unicode_126330)
# Adding element type (line 1053)
unicode_126331 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1056, 25), 'unicode', u'Arial')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1053, 24), list_126323, unicode_126331)
# Adding element type (line 1053)
unicode_126332 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1056, 34), 'unicode', u'Helvetica')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1053, 24), list_126323, unicode_126332)
# Adding element type (line 1053)
unicode_126333 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1056, 47), 'unicode', u'Avant Garde')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1053, 24), list_126323, unicode_126333)
# Adding element type (line 1053)
unicode_126334 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1056, 62), 'unicode', u'sans-serif')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1053, 24), list_126323, unicode_126334)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1053, 23), list_126322, list_126323)
# Adding element type (line 1053)
# Getting the type of 'validate_stringlist' (line 1057)
validate_stringlist_126335 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1057, 24), 'validate_stringlist')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1053, 23), list_126322, validate_stringlist_126335)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126321, list_126322))
# Adding element type (key, value) (line 940)
unicode_126336 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1058, 4), 'unicode', u'font.cursive')

# Obtaining an instance of the builtin type 'list' (line 1058)
list_126337 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1058, 23), 'list')
# Adding type elements to the builtin type 'list' instance (line 1058)
# Adding element type (line 1058)

# Obtaining an instance of the builtin type 'list' (line 1058)
list_126338 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1058, 24), 'list')
# Adding type elements to the builtin type 'list' instance (line 1058)
# Adding element type (line 1058)
unicode_126339 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1058, 25), 'unicode', u'Apple Chancery')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1058, 24), list_126338, unicode_126339)
# Adding element type (line 1058)
unicode_126340 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1058, 43), 'unicode', u'Textile')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1058, 24), list_126338, unicode_126340)
# Adding element type (line 1058)
unicode_126341 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1058, 54), 'unicode', u'Zapf Chancery')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1058, 24), list_126338, unicode_126341)
# Adding element type (line 1058)
unicode_126342 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1059, 25), 'unicode', u'Sand')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1058, 24), list_126338, unicode_126342)
# Adding element type (line 1058)
unicode_126343 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1059, 33), 'unicode', u'Script MT')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1058, 24), list_126338, unicode_126343)
# Adding element type (line 1058)
unicode_126344 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1059, 46), 'unicode', u'Felipa')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1058, 24), list_126338, unicode_126344)
# Adding element type (line 1058)
unicode_126345 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1059, 56), 'unicode', u'cursive')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1058, 24), list_126338, unicode_126345)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1058, 23), list_126337, list_126338)
# Adding element type (line 1058)
# Getting the type of 'validate_stringlist' (line 1060)
validate_stringlist_126346 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1060, 24), 'validate_stringlist')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1058, 23), list_126337, validate_stringlist_126346)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126336, list_126337))
# Adding element type (key, value) (line 940)
unicode_126347 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1061, 4), 'unicode', u'font.fantasy')

# Obtaining an instance of the builtin type 'list' (line 1061)
list_126348 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1061, 23), 'list')
# Adding type elements to the builtin type 'list' instance (line 1061)
# Adding element type (line 1061)

# Obtaining an instance of the builtin type 'list' (line 1061)
list_126349 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1061, 24), 'list')
# Adding type elements to the builtin type 'list' instance (line 1061)
# Adding element type (line 1061)
unicode_126350 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1061, 25), 'unicode', u'Comic Sans MS')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1061, 24), list_126349, unicode_126350)
# Adding element type (line 1061)
unicode_126351 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1061, 42), 'unicode', u'Chicago')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1061, 24), list_126349, unicode_126351)
# Adding element type (line 1061)
unicode_126352 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1061, 53), 'unicode', u'Charcoal')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1061, 24), list_126349, unicode_126352)
# Adding element type (line 1061)
unicode_126353 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1061, 65), 'unicode', u'ImpactWestern')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1061, 24), list_126349, unicode_126353)
# Adding element type (line 1061)
unicode_126354 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1062, 36), 'unicode', u'Humor Sans')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1061, 24), list_126349, unicode_126354)
# Adding element type (line 1061)
unicode_126355 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1062, 50), 'unicode', u'xkcd')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1061, 24), list_126349, unicode_126355)
# Adding element type (line 1061)
unicode_126356 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1062, 58), 'unicode', u'fantasy')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1061, 24), list_126349, unicode_126356)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1061, 23), list_126348, list_126349)
# Adding element type (line 1061)
# Getting the type of 'validate_stringlist' (line 1063)
validate_stringlist_126357 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1063, 24), 'validate_stringlist')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1061, 23), list_126348, validate_stringlist_126357)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126347, list_126348))
# Adding element type (key, value) (line 940)
unicode_126358 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1064, 4), 'unicode', u'font.monospace')

# Obtaining an instance of the builtin type 'list' (line 1064)
list_126359 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1064, 23), 'list')
# Adding type elements to the builtin type 'list' instance (line 1064)
# Adding element type (line 1064)

# Obtaining an instance of the builtin type 'list' (line 1064)
list_126360 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1064, 24), 'list')
# Adding type elements to the builtin type 'list' instance (line 1064)
# Adding element type (line 1064)
unicode_126361 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1064, 25), 'unicode', u'DejaVu Sans Mono')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1064, 24), list_126360, unicode_126361)
# Adding element type (line 1064)
unicode_126362 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1064, 45), 'unicode', u'Bitstream Vera Sans Mono')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1064, 24), list_126360, unicode_126362)
# Adding element type (line 1064)
unicode_126363 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1065, 25), 'unicode', u'Computer Modern Typewriter')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1064, 24), list_126360, unicode_126363)
# Adding element type (line 1064)
unicode_126364 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1066, 25), 'unicode', u'Andale Mono')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1064, 24), list_126360, unicode_126364)
# Adding element type (line 1064)
unicode_126365 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1066, 40), 'unicode', u'Nimbus Mono L')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1064, 24), list_126360, unicode_126365)
# Adding element type (line 1064)
unicode_126366 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1066, 57), 'unicode', u'Courier New')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1064, 24), list_126360, unicode_126366)
# Adding element type (line 1064)
unicode_126367 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1067, 25), 'unicode', u'Courier')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1064, 24), list_126360, unicode_126367)
# Adding element type (line 1064)
unicode_126368 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1067, 36), 'unicode', u'Fixed')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1064, 24), list_126360, unicode_126368)
# Adding element type (line 1064)
unicode_126369 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1067, 45), 'unicode', u'Terminal')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1064, 24), list_126360, unicode_126369)
# Adding element type (line 1064)
unicode_126370 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1067, 57), 'unicode', u'monospace')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1064, 24), list_126360, unicode_126370)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1064, 23), list_126359, list_126360)
# Adding element type (line 1064)
# Getting the type of 'validate_stringlist' (line 1068)
validate_stringlist_126371 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1068, 24), 'validate_stringlist')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1064, 23), list_126359, validate_stringlist_126371)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126358, list_126359))
# Adding element type (key, value) (line 940)
unicode_126372 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1071, 4), 'unicode', u'text.color')

# Obtaining an instance of the builtin type 'list' (line 1071)
list_126373 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1071, 27), 'list')
# Adding type elements to the builtin type 'list' instance (line 1071)
# Adding element type (line 1071)
unicode_126374 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1071, 28), 'unicode', u'k')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1071, 27), list_126373, unicode_126374)
# Adding element type (line 1071)
# Getting the type of 'validate_color' (line 1071)
validate_color_126375 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1071, 33), 'validate_color')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1071, 27), list_126373, validate_color_126375)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126372, list_126373))
# Adding element type (key, value) (line 940)
unicode_126376 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1072, 4), 'unicode', u'text.usetex')

# Obtaining an instance of the builtin type 'list' (line 1072)
list_126377 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1072, 27), 'list')
# Adding type elements to the builtin type 'list' instance (line 1072)
# Adding element type (line 1072)
# Getting the type of 'False' (line 1072)
False_126378 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1072, 28), 'False')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1072, 27), list_126377, False_126378)
# Adding element type (line 1072)
# Getting the type of 'validate_bool' (line 1072)
validate_bool_126379 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1072, 35), 'validate_bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1072, 27), list_126377, validate_bool_126379)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126376, list_126377))
# Adding element type (key, value) (line 940)
unicode_126380 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1073, 4), 'unicode', u'text.latex.unicode')

# Obtaining an instance of the builtin type 'list' (line 1073)
list_126381 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1073, 27), 'list')
# Adding type elements to the builtin type 'list' instance (line 1073)
# Adding element type (line 1073)
# Getting the type of 'False' (line 1073)
False_126382 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1073, 28), 'False')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1073, 27), list_126381, False_126382)
# Adding element type (line 1073)
# Getting the type of 'validate_bool' (line 1073)
validate_bool_126383 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1073, 35), 'validate_bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1073, 27), list_126381, validate_bool_126383)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126380, list_126381))
# Adding element type (key, value) (line 940)
unicode_126384 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1074, 4), 'unicode', u'text.latex.preamble')

# Obtaining an instance of the builtin type 'list' (line 1074)
list_126385 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1074, 27), 'list')
# Adding type elements to the builtin type 'list' instance (line 1074)
# Adding element type (line 1074)

# Obtaining an instance of the builtin type 'list' (line 1074)
list_126386 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1074, 28), 'list')
# Adding type elements to the builtin type 'list' instance (line 1074)
# Adding element type (line 1074)
unicode_126387 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1074, 29), 'unicode', u'')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1074, 28), list_126386, unicode_126387)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1074, 27), list_126385, list_126386)
# Adding element type (line 1074)
# Getting the type of 'validate_stringlist' (line 1074)
validate_stringlist_126388 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1074, 34), 'validate_stringlist')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1074, 27), list_126385, validate_stringlist_126388)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126384, list_126385))
# Adding element type (key, value) (line 940)
unicode_126389 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1075, 4), 'unicode', u'text.latex.preview')

# Obtaining an instance of the builtin type 'list' (line 1075)
list_126390 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1075, 27), 'list')
# Adding type elements to the builtin type 'list' instance (line 1075)
# Adding element type (line 1075)
# Getting the type of 'False' (line 1075)
False_126391 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1075, 28), 'False')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1075, 27), list_126390, False_126391)
# Adding element type (line 1075)
# Getting the type of 'validate_bool' (line 1075)
validate_bool_126392 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1075, 35), 'validate_bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1075, 27), list_126390, validate_bool_126392)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126389, list_126390))
# Adding element type (key, value) (line 940)
unicode_126393 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1076, 4), 'unicode', u'text.dvipnghack')

# Obtaining an instance of the builtin type 'list' (line 1076)
list_126394 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1076, 27), 'list')
# Adding type elements to the builtin type 'list' instance (line 1076)
# Adding element type (line 1076)
# Getting the type of 'None' (line 1076)
None_126395 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1076, 28), 'None')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1076, 27), list_126394, None_126395)
# Adding element type (line 1076)
# Getting the type of 'validate_bool_maybe_none' (line 1076)
validate_bool_maybe_none_126396 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1076, 34), 'validate_bool_maybe_none')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1076, 27), list_126394, validate_bool_maybe_none_126396)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126393, list_126394))
# Adding element type (key, value) (line 940)
unicode_126397 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1077, 4), 'unicode', u'text.hinting')

# Obtaining an instance of the builtin type 'list' (line 1077)
list_126398 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1077, 27), 'list')
# Adding type elements to the builtin type 'list' instance (line 1077)
# Adding element type (line 1077)
unicode_126399 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1077, 28), 'unicode', u'auto')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1077, 27), list_126398, unicode_126399)
# Adding element type (line 1077)
# Getting the type of 'validate_hinting' (line 1077)
validate_hinting_126400 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1077, 36), 'validate_hinting')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1077, 27), list_126398, validate_hinting_126400)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126397, list_126398))
# Adding element type (key, value) (line 940)
unicode_126401 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1078, 4), 'unicode', u'text.hinting_factor')

# Obtaining an instance of the builtin type 'list' (line 1078)
list_126402 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1078, 27), 'list')
# Adding type elements to the builtin type 'list' instance (line 1078)
# Adding element type (line 1078)
int_126403 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1078, 28), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1078, 27), list_126402, int_126403)
# Adding element type (line 1078)
# Getting the type of 'validate_int' (line 1078)
validate_int_126404 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1078, 31), 'validate_int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1078, 27), list_126402, validate_int_126404)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126401, list_126402))
# Adding element type (key, value) (line 940)
unicode_126405 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1079, 4), 'unicode', u'text.antialiased')

# Obtaining an instance of the builtin type 'list' (line 1079)
list_126406 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1079, 27), 'list')
# Adding type elements to the builtin type 'list' instance (line 1079)
# Adding element type (line 1079)
# Getting the type of 'True' (line 1079)
True_126407 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1079, 28), 'True')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1079, 27), list_126406, True_126407)
# Adding element type (line 1079)
# Getting the type of 'validate_bool' (line 1079)
validate_bool_126408 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1079, 34), 'validate_bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1079, 27), list_126406, validate_bool_126408)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126405, list_126406))
# Adding element type (key, value) (line 940)
unicode_126409 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1081, 4), 'unicode', u'mathtext.cal')

# Obtaining an instance of the builtin type 'list' (line 1081)
list_126410 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1081, 31), 'list')
# Adding type elements to the builtin type 'list' instance (line 1081)
# Adding element type (line 1081)
unicode_126411 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1081, 32), 'unicode', u'cursive')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1081, 31), list_126410, unicode_126411)
# Adding element type (line 1081)
# Getting the type of 'validate_font_properties' (line 1081)
validate_font_properties_126412 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1081, 43), 'validate_font_properties')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1081, 31), list_126410, validate_font_properties_126412)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126409, list_126410))
# Adding element type (key, value) (line 940)
unicode_126413 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1082, 4), 'unicode', u'mathtext.rm')

# Obtaining an instance of the builtin type 'list' (line 1082)
list_126414 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1082, 31), 'list')
# Adding type elements to the builtin type 'list' instance (line 1082)
# Adding element type (line 1082)
unicode_126415 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1082, 32), 'unicode', u'sans')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1082, 31), list_126414, unicode_126415)
# Adding element type (line 1082)
# Getting the type of 'validate_font_properties' (line 1082)
validate_font_properties_126416 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1082, 40), 'validate_font_properties')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1082, 31), list_126414, validate_font_properties_126416)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126413, list_126414))
# Adding element type (key, value) (line 940)
unicode_126417 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1083, 4), 'unicode', u'mathtext.tt')

# Obtaining an instance of the builtin type 'list' (line 1083)
list_126418 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1083, 31), 'list')
# Adding type elements to the builtin type 'list' instance (line 1083)
# Adding element type (line 1083)
unicode_126419 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1083, 32), 'unicode', u'monospace')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1083, 31), list_126418, unicode_126419)
# Adding element type (line 1083)
# Getting the type of 'validate_font_properties' (line 1083)
validate_font_properties_126420 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1083, 45), 'validate_font_properties')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1083, 31), list_126418, validate_font_properties_126420)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126417, list_126418))
# Adding element type (key, value) (line 940)
unicode_126421 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1084, 4), 'unicode', u'mathtext.it')

# Obtaining an instance of the builtin type 'list' (line 1084)
list_126422 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1084, 31), 'list')
# Adding type elements to the builtin type 'list' instance (line 1084)
# Adding element type (line 1084)
unicode_126423 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1084, 32), 'unicode', u'sans:italic')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1084, 31), list_126422, unicode_126423)
# Adding element type (line 1084)
# Getting the type of 'validate_font_properties' (line 1084)
validate_font_properties_126424 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1084, 47), 'validate_font_properties')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1084, 31), list_126422, validate_font_properties_126424)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126421, list_126422))
# Adding element type (key, value) (line 940)
unicode_126425 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1085, 4), 'unicode', u'mathtext.bf')

# Obtaining an instance of the builtin type 'list' (line 1085)
list_126426 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1085, 31), 'list')
# Adding type elements to the builtin type 'list' instance (line 1085)
# Adding element type (line 1085)
unicode_126427 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1085, 32), 'unicode', u'sans:bold')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1085, 31), list_126426, unicode_126427)
# Adding element type (line 1085)
# Getting the type of 'validate_font_properties' (line 1085)
validate_font_properties_126428 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1085, 45), 'validate_font_properties')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1085, 31), list_126426, validate_font_properties_126428)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126425, list_126426))
# Adding element type (key, value) (line 940)
unicode_126429 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1086, 4), 'unicode', u'mathtext.sf')

# Obtaining an instance of the builtin type 'list' (line 1086)
list_126430 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1086, 31), 'list')
# Adding type elements to the builtin type 'list' instance (line 1086)
# Adding element type (line 1086)
unicode_126431 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1086, 32), 'unicode', u'sans')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1086, 31), list_126430, unicode_126431)
# Adding element type (line 1086)
# Getting the type of 'validate_font_properties' (line 1086)
validate_font_properties_126432 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1086, 40), 'validate_font_properties')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1086, 31), list_126430, validate_font_properties_126432)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126429, list_126430))
# Adding element type (key, value) (line 940)
unicode_126433 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1087, 4), 'unicode', u'mathtext.fontset')

# Obtaining an instance of the builtin type 'list' (line 1087)
list_126434 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1087, 31), 'list')
# Adding type elements to the builtin type 'list' instance (line 1087)
# Adding element type (line 1087)
unicode_126435 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1087, 32), 'unicode', u'dejavusans')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1087, 31), list_126434, unicode_126435)
# Adding element type (line 1087)
# Getting the type of 'validate_fontset' (line 1087)
validate_fontset_126436 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1087, 46), 'validate_fontset')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1087, 31), list_126434, validate_fontset_126436)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126433, list_126434))
# Adding element type (key, value) (line 940)
unicode_126437 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1088, 4), 'unicode', u'mathtext.default')

# Obtaining an instance of the builtin type 'list' (line 1088)
list_126438 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1088, 31), 'list')
# Adding type elements to the builtin type 'list' instance (line 1088)
# Adding element type (line 1088)
unicode_126439 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1088, 32), 'unicode', u'it')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1088, 31), list_126438, unicode_126439)
# Adding element type (line 1088)
# Getting the type of 'validate_mathtext_default' (line 1088)
validate_mathtext_default_126440 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1088, 38), 'validate_mathtext_default')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1088, 31), list_126438, validate_mathtext_default_126440)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126437, list_126438))
# Adding element type (key, value) (line 940)
unicode_126441 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1089, 4), 'unicode', u'mathtext.fallback_to_cm')

# Obtaining an instance of the builtin type 'list' (line 1089)
list_126442 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1089, 31), 'list')
# Adding type elements to the builtin type 'list' instance (line 1089)
# Adding element type (line 1089)
# Getting the type of 'True' (line 1089)
True_126443 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1089, 32), 'True')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1089, 31), list_126442, True_126443)
# Adding element type (line 1089)
# Getting the type of 'validate_bool' (line 1089)
validate_bool_126444 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1089, 38), 'validate_bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1089, 31), list_126442, validate_bool_126444)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126441, list_126442))
# Adding element type (key, value) (line 940)
unicode_126445 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1091, 4), 'unicode', u'image.aspect')

# Obtaining an instance of the builtin type 'list' (line 1091)
list_126446 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1091, 27), 'list')
# Adding type elements to the builtin type 'list' instance (line 1091)
# Adding element type (line 1091)
unicode_126447 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1091, 28), 'unicode', u'equal')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1091, 27), list_126446, unicode_126447)
# Adding element type (line 1091)
# Getting the type of 'validate_aspect' (line 1091)
validate_aspect_126448 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1091, 37), 'validate_aspect')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1091, 27), list_126446, validate_aspect_126448)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126445, list_126446))
# Adding element type (key, value) (line 940)
unicode_126449 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1092, 4), 'unicode', u'image.interpolation')

# Obtaining an instance of the builtin type 'list' (line 1092)
list_126450 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1092, 27), 'list')
# Adding type elements to the builtin type 'list' instance (line 1092)
# Adding element type (line 1092)
unicode_126451 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1092, 28), 'unicode', u'nearest')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1092, 27), list_126450, unicode_126451)
# Adding element type (line 1092)
# Getting the type of 'six' (line 1092)
six_126452 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1092, 39), 'six')
# Obtaining the member 'text_type' of a type (line 1092)
text_type_126453 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1092, 39), six_126452, 'text_type')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1092, 27), list_126450, text_type_126453)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126449, list_126450))
# Adding element type (key, value) (line 940)
unicode_126454 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1093, 4), 'unicode', u'image.cmap')

# Obtaining an instance of the builtin type 'list' (line 1093)
list_126455 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1093, 27), 'list')
# Adding type elements to the builtin type 'list' instance (line 1093)
# Adding element type (line 1093)
unicode_126456 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1093, 28), 'unicode', u'viridis')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1093, 27), list_126455, unicode_126456)
# Adding element type (line 1093)
# Getting the type of 'six' (line 1093)
six_126457 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1093, 39), 'six')
# Obtaining the member 'text_type' of a type (line 1093)
text_type_126458 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1093, 39), six_126457, 'text_type')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1093, 27), list_126455, text_type_126458)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126454, list_126455))
# Adding element type (key, value) (line 940)
unicode_126459 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1094, 4), 'unicode', u'image.lut')

# Obtaining an instance of the builtin type 'list' (line 1094)
list_126460 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1094, 27), 'list')
# Adding type elements to the builtin type 'list' instance (line 1094)
# Adding element type (line 1094)
int_126461 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1094, 28), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1094, 27), list_126460, int_126461)
# Adding element type (line 1094)
# Getting the type of 'validate_int' (line 1094)
validate_int_126462 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1094, 33), 'validate_int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1094, 27), list_126460, validate_int_126462)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126459, list_126460))
# Adding element type (key, value) (line 940)
unicode_126463 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1095, 4), 'unicode', u'image.origin')

# Obtaining an instance of the builtin type 'list' (line 1095)
list_126464 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1095, 27), 'list')
# Adding type elements to the builtin type 'list' instance (line 1095)
# Adding element type (line 1095)
unicode_126465 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1095, 28), 'unicode', u'upper')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1095, 27), list_126464, unicode_126465)
# Adding element type (line 1095)
# Getting the type of 'six' (line 1095)
six_126466 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1095, 37), 'six')
# Obtaining the member 'text_type' of a type (line 1095)
text_type_126467 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1095, 37), six_126466, 'text_type')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1095, 27), list_126464, text_type_126467)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126463, list_126464))
# Adding element type (key, value) (line 940)
unicode_126468 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1096, 4), 'unicode', u'image.resample')

# Obtaining an instance of the builtin type 'list' (line 1096)
list_126469 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1096, 27), 'list')
# Adding type elements to the builtin type 'list' instance (line 1096)
# Adding element type (line 1096)
# Getting the type of 'True' (line 1096)
True_126470 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1096, 28), 'True')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1096, 27), list_126469, True_126470)
# Adding element type (line 1096)
# Getting the type of 'validate_bool' (line 1096)
validate_bool_126471 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1096, 34), 'validate_bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1096, 27), list_126469, validate_bool_126471)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126468, list_126469))
# Adding element type (key, value) (line 940)
unicode_126472 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1099, 4), 'unicode', u'image.composite_image')

# Obtaining an instance of the builtin type 'list' (line 1099)
list_126473 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1099, 29), 'list')
# Adding type elements to the builtin type 'list' instance (line 1099)
# Adding element type (line 1099)
# Getting the type of 'True' (line 1099)
True_126474 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1099, 30), 'True')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1099, 29), list_126473, True_126474)
# Adding element type (line 1099)
# Getting the type of 'validate_bool' (line 1099)
validate_bool_126475 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1099, 36), 'validate_bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1099, 29), list_126473, validate_bool_126475)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126472, list_126473))
# Adding element type (key, value) (line 940)
unicode_126476 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1102, 4), 'unicode', u'contour.negative_linestyle')

# Obtaining an instance of the builtin type 'list' (line 1102)
list_126477 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1102, 34), 'list')
# Adding type elements to the builtin type 'list' instance (line 1102)
# Adding element type (line 1102)
unicode_126478 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1102, 35), 'unicode', u'dashed')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1102, 34), list_126477, unicode_126478)
# Adding element type (line 1102)
# Getting the type of '_validate_linestyle' (line 1102)
_validate_linestyle_126479 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1102, 45), '_validate_linestyle')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1102, 34), list_126477, _validate_linestyle_126479)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126476, list_126477))
# Adding element type (key, value) (line 940)
unicode_126480 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1103, 4), 'unicode', u'contour.corner_mask')

# Obtaining an instance of the builtin type 'list' (line 1103)
list_126481 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1103, 34), 'list')
# Adding type elements to the builtin type 'list' instance (line 1103)
# Adding element type (line 1103)
# Getting the type of 'True' (line 1103)
True_126482 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1103, 35), 'True')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1103, 34), list_126481, True_126482)
# Adding element type (line 1103)
# Getting the type of 'validate_corner_mask' (line 1103)
validate_corner_mask_126483 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1103, 41), 'validate_corner_mask')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1103, 34), list_126481, validate_corner_mask_126483)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126480, list_126481))
# Adding element type (key, value) (line 940)
unicode_126484 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1106, 4), 'unicode', u'errorbar.capsize')

# Obtaining an instance of the builtin type 'list' (line 1106)
list_126485 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1106, 29), 'list')
# Adding type elements to the builtin type 'list' instance (line 1106)
# Adding element type (line 1106)
int_126486 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1106, 30), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1106, 29), list_126485, int_126486)
# Adding element type (line 1106)
# Getting the type of 'validate_float' (line 1106)
validate_float_126487 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1106, 33), 'validate_float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1106, 29), list_126485, validate_float_126487)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126484, list_126485))
# Adding element type (key, value) (line 940)
unicode_126488 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1109, 4), 'unicode', u'axes.axisbelow')

# Obtaining an instance of the builtin type 'list' (line 1109)
list_126489 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1109, 29), 'list')
# Adding type elements to the builtin type 'list' instance (line 1109)
# Adding element type (line 1109)
unicode_126490 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1109, 30), 'unicode', u'line')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1109, 29), list_126489, unicode_126490)
# Adding element type (line 1109)
# Getting the type of 'validate_axisbelow' (line 1109)
validate_axisbelow_126491 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1109, 38), 'validate_axisbelow')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1109, 29), list_126489, validate_axisbelow_126491)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126488, list_126489))
# Adding element type (key, value) (line 940)
unicode_126492 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1110, 4), 'unicode', u'axes.hold')

# Obtaining an instance of the builtin type 'list' (line 1110)
list_126493 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1110, 29), 'list')
# Adding type elements to the builtin type 'list' instance (line 1110)
# Adding element type (line 1110)
# Getting the type of 'None' (line 1110)
None_126494 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1110, 30), 'None')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1110, 29), list_126493, None_126494)
# Adding element type (line 1110)
# Getting the type of 'deprecate_axes_hold' (line 1110)
deprecate_axes_hold_126495 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1110, 36), 'deprecate_axes_hold')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1110, 29), list_126493, deprecate_axes_hold_126495)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126492, list_126493))
# Adding element type (key, value) (line 940)
unicode_126496 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1111, 4), 'unicode', u'axes.facecolor')

# Obtaining an instance of the builtin type 'list' (line 1111)
list_126497 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1111, 29), 'list')
# Adding type elements to the builtin type 'list' instance (line 1111)
# Adding element type (line 1111)
unicode_126498 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1111, 30), 'unicode', u'w')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1111, 29), list_126497, unicode_126498)
# Adding element type (line 1111)
# Getting the type of 'validate_color' (line 1111)
validate_color_126499 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1111, 35), 'validate_color')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1111, 29), list_126497, validate_color_126499)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126496, list_126497))
# Adding element type (key, value) (line 940)
unicode_126500 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1112, 4), 'unicode', u'axes.edgecolor')

# Obtaining an instance of the builtin type 'list' (line 1112)
list_126501 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1112, 29), 'list')
# Adding type elements to the builtin type 'list' instance (line 1112)
# Adding element type (line 1112)
unicode_126502 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1112, 30), 'unicode', u'k')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1112, 29), list_126501, unicode_126502)
# Adding element type (line 1112)
# Getting the type of 'validate_color' (line 1112)
validate_color_126503 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1112, 35), 'validate_color')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1112, 29), list_126501, validate_color_126503)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126500, list_126501))
# Adding element type (key, value) (line 940)
unicode_126504 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1113, 4), 'unicode', u'axes.linewidth')

# Obtaining an instance of the builtin type 'list' (line 1113)
list_126505 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1113, 29), 'list')
# Adding type elements to the builtin type 'list' instance (line 1113)
# Adding element type (line 1113)
float_126506 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1113, 30), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1113, 29), list_126505, float_126506)
# Adding element type (line 1113)
# Getting the type of 'validate_float' (line 1113)
validate_float_126507 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1113, 35), 'validate_float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1113, 29), list_126505, validate_float_126507)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126504, list_126505))
# Adding element type (key, value) (line 940)
unicode_126508 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1115, 4), 'unicode', u'axes.spines.left')

# Obtaining an instance of the builtin type 'list' (line 1115)
list_126509 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1115, 29), 'list')
# Adding type elements to the builtin type 'list' instance (line 1115)
# Adding element type (line 1115)
# Getting the type of 'True' (line 1115)
True_126510 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1115, 30), 'True')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1115, 29), list_126509, True_126510)
# Adding element type (line 1115)
# Getting the type of 'validate_bool' (line 1115)
validate_bool_126511 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1115, 36), 'validate_bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1115, 29), list_126509, validate_bool_126511)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126508, list_126509))
# Adding element type (key, value) (line 940)
unicode_126512 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1116, 4), 'unicode', u'axes.spines.right')

# Obtaining an instance of the builtin type 'list' (line 1116)
list_126513 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1116, 29), 'list')
# Adding type elements to the builtin type 'list' instance (line 1116)
# Adding element type (line 1116)
# Getting the type of 'True' (line 1116)
True_126514 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1116, 30), 'True')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1116, 29), list_126513, True_126514)
# Adding element type (line 1116)
# Getting the type of 'validate_bool' (line 1116)
validate_bool_126515 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1116, 36), 'validate_bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1116, 29), list_126513, validate_bool_126515)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126512, list_126513))
# Adding element type (key, value) (line 940)
unicode_126516 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1117, 4), 'unicode', u'axes.spines.bottom')

# Obtaining an instance of the builtin type 'list' (line 1117)
list_126517 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1117, 29), 'list')
# Adding type elements to the builtin type 'list' instance (line 1117)
# Adding element type (line 1117)
# Getting the type of 'True' (line 1117)
True_126518 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1117, 30), 'True')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1117, 29), list_126517, True_126518)
# Adding element type (line 1117)
# Getting the type of 'validate_bool' (line 1117)
validate_bool_126519 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1117, 36), 'validate_bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1117, 29), list_126517, validate_bool_126519)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126516, list_126517))
# Adding element type (key, value) (line 940)
unicode_126520 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1118, 4), 'unicode', u'axes.spines.top')

# Obtaining an instance of the builtin type 'list' (line 1118)
list_126521 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1118, 29), 'list')
# Adding type elements to the builtin type 'list' instance (line 1118)
# Adding element type (line 1118)
# Getting the type of 'True' (line 1118)
True_126522 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1118, 30), 'True')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1118, 29), list_126521, True_126522)
# Adding element type (line 1118)
# Getting the type of 'validate_bool' (line 1118)
validate_bool_126523 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1118, 36), 'validate_bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1118, 29), list_126521, validate_bool_126523)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126520, list_126521))
# Adding element type (key, value) (line 940)
unicode_126524 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1120, 4), 'unicode', u'axes.titlesize')

# Obtaining an instance of the builtin type 'list' (line 1120)
list_126525 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1120, 29), 'list')
# Adding type elements to the builtin type 'list' instance (line 1120)
# Adding element type (line 1120)
unicode_126526 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1120, 30), 'unicode', u'large')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1120, 29), list_126525, unicode_126526)
# Adding element type (line 1120)
# Getting the type of 'validate_fontsize' (line 1120)
validate_fontsize_126527 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1120, 39), 'validate_fontsize')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1120, 29), list_126525, validate_fontsize_126527)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126524, list_126525))
# Adding element type (key, value) (line 940)
unicode_126528 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1122, 4), 'unicode', u'axes.titleweight')

# Obtaining an instance of the builtin type 'list' (line 1122)
list_126529 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1122, 29), 'list')
# Adding type elements to the builtin type 'list' instance (line 1122)
# Adding element type (line 1122)
unicode_126530 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1122, 30), 'unicode', u'normal')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1122, 29), list_126529, unicode_126530)
# Adding element type (line 1122)
# Getting the type of 'six' (line 1122)
six_126531 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1122, 40), 'six')
# Obtaining the member 'text_type' of a type (line 1122)
text_type_126532 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1122, 40), six_126531, 'text_type')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1122, 29), list_126529, text_type_126532)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126528, list_126529))
# Adding element type (key, value) (line 940)
unicode_126533 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1123, 4), 'unicode', u'axes.titlepad')

# Obtaining an instance of the builtin type 'list' (line 1123)
list_126534 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1123, 29), 'list')
# Adding type elements to the builtin type 'list' instance (line 1123)
# Adding element type (line 1123)
float_126535 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1123, 30), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1123, 29), list_126534, float_126535)
# Adding element type (line 1123)
# Getting the type of 'validate_float' (line 1123)
validate_float_126536 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1123, 35), 'validate_float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1123, 29), list_126534, validate_float_126536)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126533, list_126534))
# Adding element type (key, value) (line 940)
unicode_126537 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1124, 4), 'unicode', u'axes.grid')

# Obtaining an instance of the builtin type 'list' (line 1124)
list_126538 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1124, 29), 'list')
# Adding type elements to the builtin type 'list' instance (line 1124)
# Adding element type (line 1124)
# Getting the type of 'False' (line 1124)
False_126539 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1124, 30), 'False')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1124, 29), list_126538, False_126539)
# Adding element type (line 1124)
# Getting the type of 'validate_bool' (line 1124)
validate_bool_126540 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1124, 37), 'validate_bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1124, 29), list_126538, validate_bool_126540)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126537, list_126538))
# Adding element type (key, value) (line 940)
unicode_126541 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1125, 4), 'unicode', u'axes.grid.which')

# Obtaining an instance of the builtin type 'list' (line 1125)
list_126542 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1125, 29), 'list')
# Adding type elements to the builtin type 'list' instance (line 1125)
# Adding element type (line 1125)
unicode_126543 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1125, 30), 'unicode', u'major')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1125, 29), list_126542, unicode_126543)
# Adding element type (line 1125)
# Getting the type of 'validate_axis_locator' (line 1125)
validate_axis_locator_126544 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1125, 39), 'validate_axis_locator')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1125, 29), list_126542, validate_axis_locator_126544)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126541, list_126542))
# Adding element type (key, value) (line 940)
unicode_126545 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1129, 4), 'unicode', u'axes.grid.axis')

# Obtaining an instance of the builtin type 'list' (line 1129)
list_126546 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1129, 29), 'list')
# Adding type elements to the builtin type 'list' instance (line 1129)
# Adding element type (line 1129)
unicode_126547 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1129, 30), 'unicode', u'both')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1129, 29), list_126546, unicode_126547)
# Adding element type (line 1129)
# Getting the type of 'validate_grid_axis' (line 1129)
validate_grid_axis_126548 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1129, 38), 'validate_grid_axis')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1129, 29), list_126546, validate_grid_axis_126548)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126545, list_126546))
# Adding element type (key, value) (line 940)
unicode_126549 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1131, 4), 'unicode', u'axes.labelsize')

# Obtaining an instance of the builtin type 'list' (line 1131)
list_126550 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1131, 29), 'list')
# Adding type elements to the builtin type 'list' instance (line 1131)
# Adding element type (line 1131)
unicode_126551 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1131, 30), 'unicode', u'medium')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1131, 29), list_126550, unicode_126551)
# Adding element type (line 1131)
# Getting the type of 'validate_fontsize' (line 1131)
validate_fontsize_126552 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1131, 40), 'validate_fontsize')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1131, 29), list_126550, validate_fontsize_126552)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126549, list_126550))
# Adding element type (key, value) (line 940)
unicode_126553 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1133, 4), 'unicode', u'axes.labelpad')

# Obtaining an instance of the builtin type 'list' (line 1133)
list_126554 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1133, 29), 'list')
# Adding type elements to the builtin type 'list' instance (line 1133)
# Adding element type (line 1133)
float_126555 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1133, 30), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1133, 29), list_126554, float_126555)
# Adding element type (line 1133)
# Getting the type of 'validate_float' (line 1133)
validate_float_126556 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1133, 35), 'validate_float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1133, 29), list_126554, validate_float_126556)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126553, list_126554))
# Adding element type (key, value) (line 940)
unicode_126557 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1134, 4), 'unicode', u'axes.labelweight')

# Obtaining an instance of the builtin type 'list' (line 1134)
list_126558 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1134, 29), 'list')
# Adding type elements to the builtin type 'list' instance (line 1134)
# Adding element type (line 1134)
unicode_126559 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1134, 30), 'unicode', u'normal')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1134, 29), list_126558, unicode_126559)
# Adding element type (line 1134)
# Getting the type of 'six' (line 1134)
six_126560 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1134, 40), 'six')
# Obtaining the member 'text_type' of a type (line 1134)
text_type_126561 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1134, 40), six_126560, 'text_type')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1134, 29), list_126558, text_type_126561)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126557, list_126558))
# Adding element type (key, value) (line 940)
unicode_126562 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1135, 4), 'unicode', u'axes.labelcolor')

# Obtaining an instance of the builtin type 'list' (line 1135)
list_126563 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1135, 29), 'list')
# Adding type elements to the builtin type 'list' instance (line 1135)
# Adding element type (line 1135)
unicode_126564 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1135, 30), 'unicode', u'k')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1135, 29), list_126563, unicode_126564)
# Adding element type (line 1135)
# Getting the type of 'validate_color' (line 1135)
validate_color_126565 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1135, 35), 'validate_color')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1135, 29), list_126563, validate_color_126565)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126562, list_126563))
# Adding element type (key, value) (line 940)
unicode_126566 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1136, 4), 'unicode', u'axes.formatter.limits')

# Obtaining an instance of the builtin type 'list' (line 1136)
list_126567 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1136, 29), 'list')
# Adding type elements to the builtin type 'list' instance (line 1136)
# Adding element type (line 1136)

# Obtaining an instance of the builtin type 'list' (line 1136)
list_126568 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1136, 30), 'list')
# Adding type elements to the builtin type 'list' instance (line 1136)
# Adding element type (line 1136)
int_126569 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1136, 31), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1136, 30), list_126568, int_126569)
# Adding element type (line 1136)
int_126570 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1136, 35), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1136, 30), list_126568, int_126570)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1136, 29), list_126567, list_126568)
# Adding element type (line 1136)

# Call to validate_nseq_int(...): (line 1136)
# Processing the call arguments (line 1136)
int_126572 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1136, 57), 'int')
# Processing the call keyword arguments (line 1136)
kwargs_126573 = {}
# Getting the type of 'validate_nseq_int' (line 1136)
validate_nseq_int_126571 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1136, 39), 'validate_nseq_int', False)
# Calling validate_nseq_int(args, kwargs) (line 1136)
validate_nseq_int_call_result_126574 = invoke(stypy.reporting.localization.Localization(__file__, 1136, 39), validate_nseq_int_126571, *[int_126572], **kwargs_126573)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1136, 29), list_126567, validate_nseq_int_call_result_126574)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126566, list_126567))
# Adding element type (key, value) (line 940)
unicode_126575 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1140, 4), 'unicode', u'axes.formatter.use_locale')

# Obtaining an instance of the builtin type 'list' (line 1140)
list_126576 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1140, 33), 'list')
# Adding type elements to the builtin type 'list' instance (line 1140)
# Adding element type (line 1140)
# Getting the type of 'False' (line 1140)
False_126577 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1140, 34), 'False')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1140, 33), list_126576, False_126577)
# Adding element type (line 1140)
# Getting the type of 'validate_bool' (line 1140)
validate_bool_126578 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1140, 41), 'validate_bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1140, 33), list_126576, validate_bool_126578)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126575, list_126576))
# Adding element type (key, value) (line 940)
unicode_126579 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1142, 4), 'unicode', u'axes.formatter.use_mathtext')

# Obtaining an instance of the builtin type 'list' (line 1142)
list_126580 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1142, 35), 'list')
# Adding type elements to the builtin type 'list' instance (line 1142)
# Adding element type (line 1142)
# Getting the type of 'False' (line 1142)
False_126581 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1142, 36), 'False')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1142, 35), list_126580, False_126581)
# Adding element type (line 1142)
# Getting the type of 'validate_bool' (line 1142)
validate_bool_126582 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1142, 43), 'validate_bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1142, 35), list_126580, validate_bool_126582)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126579, list_126580))
# Adding element type (key, value) (line 940)
unicode_126583 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1143, 4), 'unicode', u'axes.formatter.min_exponent')

# Obtaining an instance of the builtin type 'list' (line 1143)
list_126584 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1143, 35), 'list')
# Adding type elements to the builtin type 'list' instance (line 1143)
# Adding element type (line 1143)
int_126585 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1143, 36), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1143, 35), list_126584, int_126585)
# Adding element type (line 1143)
# Getting the type of 'validate_int' (line 1143)
validate_int_126586 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1143, 39), 'validate_int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1143, 35), list_126584, validate_int_126586)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126583, list_126584))
# Adding element type (key, value) (line 940)
unicode_126587 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1144, 4), 'unicode', u'axes.formatter.useoffset')

# Obtaining an instance of the builtin type 'list' (line 1144)
list_126588 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1144, 32), 'list')
# Adding type elements to the builtin type 'list' instance (line 1144)
# Adding element type (line 1144)
# Getting the type of 'True' (line 1144)
True_126589 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1144, 33), 'True')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1144, 32), list_126588, True_126589)
# Adding element type (line 1144)
# Getting the type of 'validate_bool' (line 1144)
validate_bool_126590 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1144, 39), 'validate_bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1144, 32), list_126588, validate_bool_126590)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126587, list_126588))
# Adding element type (key, value) (line 940)
unicode_126591 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1145, 4), 'unicode', u'axes.formatter.offset_threshold')

# Obtaining an instance of the builtin type 'list' (line 1145)
list_126592 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1145, 39), 'list')
# Adding type elements to the builtin type 'list' instance (line 1145)
# Adding element type (line 1145)
int_126593 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1145, 40), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1145, 39), list_126592, int_126593)
# Adding element type (line 1145)
# Getting the type of 'validate_int' (line 1145)
validate_int_126594 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1145, 43), 'validate_int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1145, 39), list_126592, validate_int_126594)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126591, list_126592))
# Adding element type (key, value) (line 940)
unicode_126595 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1146, 4), 'unicode', u'axes.unicode_minus')

# Obtaining an instance of the builtin type 'list' (line 1146)
list_126596 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1146, 26), 'list')
# Adding type elements to the builtin type 'list' instance (line 1146)
# Adding element type (line 1146)
# Getting the type of 'True' (line 1146)
True_126597 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1146, 27), 'True')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1146, 26), list_126596, True_126597)
# Adding element type (line 1146)
# Getting the type of 'validate_bool' (line 1146)
validate_bool_126598 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1146, 33), 'validate_bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1146, 26), list_126596, validate_bool_126598)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126595, list_126596))
# Adding element type (key, value) (line 940)
unicode_126599 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1147, 4), 'unicode', u'axes.color_cycle')

# Obtaining an instance of the builtin type 'list' (line 1147)
list_126600 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1147, 24), 'list')
# Adding type elements to the builtin type 'list' instance (line 1147)
# Adding element type (line 1147)

# Obtaining an instance of the builtin type 'list' (line 1148)
list_126601 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1148, 8), 'list')
# Adding type elements to the builtin type 'list' instance (line 1148)
# Adding element type (line 1148)
unicode_126602 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1148, 9), 'unicode', u'#1f77b4')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1148, 8), list_126601, unicode_126602)
# Adding element type (line 1148)
unicode_126603 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1148, 20), 'unicode', u'#ff7f0e')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1148, 8), list_126601, unicode_126603)
# Adding element type (line 1148)
unicode_126604 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1148, 31), 'unicode', u'#2ca02c')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1148, 8), list_126601, unicode_126604)
# Adding element type (line 1148)
unicode_126605 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1148, 42), 'unicode', u'#d62728')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1148, 8), list_126601, unicode_126605)
# Adding element type (line 1148)
unicode_126606 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1149, 9), 'unicode', u'#9467bd')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1148, 8), list_126601, unicode_126606)
# Adding element type (line 1148)
unicode_126607 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1149, 20), 'unicode', u'#8c564b')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1148, 8), list_126601, unicode_126607)
# Adding element type (line 1148)
unicode_126608 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1149, 31), 'unicode', u'#e377c2')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1148, 8), list_126601, unicode_126608)
# Adding element type (line 1148)
unicode_126609 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1149, 42), 'unicode', u'#7f7f7f')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1148, 8), list_126601, unicode_126609)
# Adding element type (line 1148)
unicode_126610 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1150, 9), 'unicode', u'#bcbd22')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1148, 8), list_126601, unicode_126610)
# Adding element type (line 1148)
unicode_126611 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1150, 20), 'unicode', u'#17becf')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1148, 8), list_126601, unicode_126611)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1147, 24), list_126600, list_126601)
# Adding element type (line 1147)
# Getting the type of 'deprecate_axes_colorcycle' (line 1151)
deprecate_axes_colorcycle_126612 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1151, 25), 'deprecate_axes_colorcycle')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1147, 24), list_126600, deprecate_axes_colorcycle_126612)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126599, list_126600))
# Adding element type (key, value) (line 940)
unicode_126613 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1156, 4), 'unicode', u'axes.prop_cycle')

# Obtaining an instance of the builtin type 'list' (line 1156)
list_126614 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1156, 23), 'list')
# Adding type elements to the builtin type 'list' instance (line 1156)
# Adding element type (line 1156)

# Call to ccycler(...): (line 1157)
# Processing the call arguments (line 1157)
unicode_126616 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1157, 16), 'unicode', u'color')

# Obtaining an instance of the builtin type 'list' (line 1158)
list_126617 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1158, 16), 'list')
# Adding type elements to the builtin type 'list' instance (line 1158)
# Adding element type (line 1158)
unicode_126618 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1158, 17), 'unicode', u'#1f77b4')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1158, 16), list_126617, unicode_126618)
# Adding element type (line 1158)
unicode_126619 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1158, 28), 'unicode', u'#ff7f0e')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1158, 16), list_126617, unicode_126619)
# Adding element type (line 1158)
unicode_126620 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1158, 39), 'unicode', u'#2ca02c')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1158, 16), list_126617, unicode_126620)
# Adding element type (line 1158)
unicode_126621 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1158, 50), 'unicode', u'#d62728')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1158, 16), list_126617, unicode_126621)
# Adding element type (line 1158)
unicode_126622 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1159, 17), 'unicode', u'#9467bd')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1158, 16), list_126617, unicode_126622)
# Adding element type (line 1158)
unicode_126623 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1159, 28), 'unicode', u'#8c564b')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1158, 16), list_126617, unicode_126623)
# Adding element type (line 1158)
unicode_126624 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1159, 39), 'unicode', u'#e377c2')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1158, 16), list_126617, unicode_126624)
# Adding element type (line 1158)
unicode_126625 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1159, 50), 'unicode', u'#7f7f7f')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1158, 16), list_126617, unicode_126625)
# Adding element type (line 1158)
unicode_126626 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1160, 17), 'unicode', u'#bcbd22')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1158, 16), list_126617, unicode_126626)
# Adding element type (line 1158)
unicode_126627 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1160, 28), 'unicode', u'#17becf')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1158, 16), list_126617, unicode_126627)

# Processing the call keyword arguments (line 1157)
kwargs_126628 = {}
# Getting the type of 'ccycler' (line 1157)
ccycler_126615 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1157, 8), 'ccycler', False)
# Calling ccycler(args, kwargs) (line 1157)
ccycler_call_result_126629 = invoke(stypy.reporting.localization.Localization(__file__, 1157, 8), ccycler_126615, *[unicode_126616, list_126617], **kwargs_126628)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1156, 23), list_126614, ccycler_call_result_126629)
# Adding element type (line 1156)
# Getting the type of 'validate_cycler' (line 1161)
validate_cycler_126630 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1161, 8), 'validate_cycler')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1156, 23), list_126614, validate_cycler_126630)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126613, list_126614))
# Adding element type (key, value) (line 940)
unicode_126631 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1164, 4), 'unicode', u'axes.autolimit_mode')

# Obtaining an instance of the builtin type 'list' (line 1164)
list_126632 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1164, 27), 'list')
# Adding type elements to the builtin type 'list' instance (line 1164)
# Adding element type (line 1164)
unicode_126633 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1165, 8), 'unicode', u'data')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1164, 27), list_126632, unicode_126633)
# Adding element type (line 1164)

# Call to ValidateInStrings(...): (line 1166)
# Processing the call arguments (line 1166)
unicode_126635 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1166, 26), 'unicode', u'autolimit_mode')

# Obtaining an instance of the builtin type 'list' (line 1166)
list_126636 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1166, 44), 'list')
# Adding type elements to the builtin type 'list' instance (line 1166)
# Adding element type (line 1166)
unicode_126637 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1166, 45), 'unicode', u'data')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1166, 44), list_126636, unicode_126637)
# Adding element type (line 1166)
unicode_126638 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1166, 53), 'unicode', u'round_numbers')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1166, 44), list_126636, unicode_126638)

# Processing the call keyword arguments (line 1166)
kwargs_126639 = {}
# Getting the type of 'ValidateInStrings' (line 1166)
ValidateInStrings_126634 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1166, 8), 'ValidateInStrings', False)
# Calling ValidateInStrings(args, kwargs) (line 1166)
ValidateInStrings_call_result_126640 = invoke(stypy.reporting.localization.Localization(__file__, 1166, 8), ValidateInStrings_126634, *[unicode_126635, list_126636], **kwargs_126639)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1164, 27), list_126632, ValidateInStrings_call_result_126640)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126631, list_126632))
# Adding element type (key, value) (line 940)
unicode_126641 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1167, 4), 'unicode', u'axes.xmargin')

# Obtaining an instance of the builtin type 'list' (line 1167)
list_126642 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1167, 20), 'list')
# Adding type elements to the builtin type 'list' instance (line 1167)
# Adding element type (line 1167)
float_126643 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1167, 21), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1167, 20), list_126642, float_126643)
# Adding element type (line 1167)

# Call to ValidateInterval(...): (line 1167)
# Processing the call arguments (line 1167)
int_126645 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1167, 44), 'int')
int_126646 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1167, 47), 'int')
# Processing the call keyword arguments (line 1167)
# Getting the type of 'True' (line 1168)
True_126647 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1168, 54), 'True', False)
keyword_126648 = True_126647
# Getting the type of 'True' (line 1169)
True_126649 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1169, 54), 'True', False)
keyword_126650 = True_126649
kwargs_126651 = {'closedmax': keyword_126650, 'closedmin': keyword_126648}
# Getting the type of 'ValidateInterval' (line 1167)
ValidateInterval_126644 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1167, 27), 'ValidateInterval', False)
# Calling ValidateInterval(args, kwargs) (line 1167)
ValidateInterval_call_result_126652 = invoke(stypy.reporting.localization.Localization(__file__, 1167, 27), ValidateInterval_126644, *[int_126645, int_126646], **kwargs_126651)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1167, 20), list_126642, ValidateInterval_call_result_126652)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126641, list_126642))
# Adding element type (key, value) (line 940)
unicode_126653 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1170, 4), 'unicode', u'axes.ymargin')

# Obtaining an instance of the builtin type 'list' (line 1170)
list_126654 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1170, 20), 'list')
# Adding type elements to the builtin type 'list' instance (line 1170)
# Adding element type (line 1170)
float_126655 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1170, 21), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1170, 20), list_126654, float_126655)
# Adding element type (line 1170)

# Call to ValidateInterval(...): (line 1170)
# Processing the call arguments (line 1170)
int_126657 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1170, 44), 'int')
int_126658 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1170, 47), 'int')
# Processing the call keyword arguments (line 1170)
# Getting the type of 'True' (line 1171)
True_126659 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1171, 54), 'True', False)
keyword_126660 = True_126659
# Getting the type of 'True' (line 1172)
True_126661 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 54), 'True', False)
keyword_126662 = True_126661
kwargs_126663 = {'closedmax': keyword_126662, 'closedmin': keyword_126660}
# Getting the type of 'ValidateInterval' (line 1170)
ValidateInterval_126656 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1170, 27), 'ValidateInterval', False)
# Calling ValidateInterval(args, kwargs) (line 1170)
ValidateInterval_call_result_126664 = invoke(stypy.reporting.localization.Localization(__file__, 1170, 27), ValidateInterval_126656, *[int_126657, int_126658], **kwargs_126663)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1170, 20), list_126654, ValidateInterval_call_result_126664)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126653, list_126654))
# Adding element type (key, value) (line 940)
unicode_126665 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1174, 4), 'unicode', u'polaraxes.grid')

# Obtaining an instance of the builtin type 'list' (line 1174)
list_126666 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1174, 22), 'list')
# Adding type elements to the builtin type 'list' instance (line 1174)
# Adding element type (line 1174)
# Getting the type of 'True' (line 1174)
True_126667 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1174, 23), 'True')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1174, 22), list_126666, True_126667)
# Adding element type (line 1174)
# Getting the type of 'validate_bool' (line 1174)
validate_bool_126668 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1174, 29), 'validate_bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1174, 22), list_126666, validate_bool_126668)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126665, list_126666))
# Adding element type (key, value) (line 940)
unicode_126669 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1176, 4), 'unicode', u'axes3d.grid')

# Obtaining an instance of the builtin type 'list' (line 1176)
list_126670 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1176, 19), 'list')
# Adding type elements to the builtin type 'list' instance (line 1176)
# Adding element type (line 1176)
# Getting the type of 'True' (line 1176)
True_126671 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1176, 20), 'True')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1176, 19), list_126670, True_126671)
# Adding element type (line 1176)
# Getting the type of 'validate_bool' (line 1176)
validate_bool_126672 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1176, 26), 'validate_bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1176, 19), list_126670, validate_bool_126672)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126669, list_126670))
# Adding element type (key, value) (line 940)
unicode_126673 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1179, 4), 'unicode', u'scatter.marker')

# Obtaining an instance of the builtin type 'list' (line 1179)
list_126674 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1179, 22), 'list')
# Adding type elements to the builtin type 'list' instance (line 1179)
# Adding element type (line 1179)
unicode_126675 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1179, 23), 'unicode', u'o')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1179, 22), list_126674, unicode_126675)
# Adding element type (line 1179)
# Getting the type of 'six' (line 1179)
six_126676 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1179, 28), 'six')
# Obtaining the member 'text_type' of a type (line 1179)
text_type_126677 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1179, 28), six_126676, 'text_type')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1179, 22), list_126674, text_type_126677)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126673, list_126674))
# Adding element type (key, value) (line 940)
unicode_126678 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1182, 4), 'unicode', u'date.autoformatter.year')

# Obtaining an instance of the builtin type 'list' (line 1182)
list_126679 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1182, 31), 'list')
# Adding type elements to the builtin type 'list' instance (line 1182)
# Adding element type (line 1182)
unicode_126680 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1182, 32), 'unicode', u'%Y')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1182, 31), list_126679, unicode_126680)
# Adding element type (line 1182)
# Getting the type of 'six' (line 1182)
six_126681 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1182, 38), 'six')
# Obtaining the member 'text_type' of a type (line 1182)
text_type_126682 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1182, 38), six_126681, 'text_type')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1182, 31), list_126679, text_type_126682)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126678, list_126679))
# Adding element type (key, value) (line 940)
unicode_126683 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1183, 4), 'unicode', u'date.autoformatter.month')

# Obtaining an instance of the builtin type 'list' (line 1183)
list_126684 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1183, 32), 'list')
# Adding type elements to the builtin type 'list' instance (line 1183)
# Adding element type (line 1183)
unicode_126685 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1183, 33), 'unicode', u'%Y-%m')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1183, 32), list_126684, unicode_126685)
# Adding element type (line 1183)
# Getting the type of 'six' (line 1183)
six_126686 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1183, 42), 'six')
# Obtaining the member 'text_type' of a type (line 1183)
text_type_126687 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1183, 42), six_126686, 'text_type')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1183, 32), list_126684, text_type_126687)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126683, list_126684))
# Adding element type (key, value) (line 940)
unicode_126688 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1184, 4), 'unicode', u'date.autoformatter.day')

# Obtaining an instance of the builtin type 'list' (line 1184)
list_126689 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1184, 30), 'list')
# Adding type elements to the builtin type 'list' instance (line 1184)
# Adding element type (line 1184)
unicode_126690 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1184, 31), 'unicode', u'%Y-%m-%d')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1184, 30), list_126689, unicode_126690)
# Adding element type (line 1184)
# Getting the type of 'six' (line 1184)
six_126691 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1184, 43), 'six')
# Obtaining the member 'text_type' of a type (line 1184)
text_type_126692 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1184, 43), six_126691, 'text_type')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1184, 30), list_126689, text_type_126692)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126688, list_126689))
# Adding element type (key, value) (line 940)
unicode_126693 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1185, 4), 'unicode', u'date.autoformatter.hour')

# Obtaining an instance of the builtin type 'list' (line 1185)
list_126694 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1185, 31), 'list')
# Adding type elements to the builtin type 'list' instance (line 1185)
# Adding element type (line 1185)
unicode_126695 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1185, 32), 'unicode', u'%m-%d %H')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1185, 31), list_126694, unicode_126695)
# Adding element type (line 1185)
# Getting the type of 'six' (line 1185)
six_126696 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1185, 44), 'six')
# Obtaining the member 'text_type' of a type (line 1185)
text_type_126697 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1185, 44), six_126696, 'text_type')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1185, 31), list_126694, text_type_126697)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126693, list_126694))
# Adding element type (key, value) (line 940)
unicode_126698 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1186, 4), 'unicode', u'date.autoformatter.minute')

# Obtaining an instance of the builtin type 'list' (line 1186)
list_126699 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1186, 33), 'list')
# Adding type elements to the builtin type 'list' instance (line 1186)
# Adding element type (line 1186)
unicode_126700 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1186, 34), 'unicode', u'%d %H:%M')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1186, 33), list_126699, unicode_126700)
# Adding element type (line 1186)
# Getting the type of 'six' (line 1186)
six_126701 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1186, 46), 'six')
# Obtaining the member 'text_type' of a type (line 1186)
text_type_126702 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1186, 46), six_126701, 'text_type')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1186, 33), list_126699, text_type_126702)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126698, list_126699))
# Adding element type (key, value) (line 940)
unicode_126703 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1187, 4), 'unicode', u'date.autoformatter.second')

# Obtaining an instance of the builtin type 'list' (line 1187)
list_126704 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1187, 33), 'list')
# Adding type elements to the builtin type 'list' instance (line 1187)
# Adding element type (line 1187)
unicode_126705 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1187, 34), 'unicode', u'%H:%M:%S')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1187, 33), list_126704, unicode_126705)
# Adding element type (line 1187)
# Getting the type of 'six' (line 1187)
six_126706 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1187, 46), 'six')
# Obtaining the member 'text_type' of a type (line 1187)
text_type_126707 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1187, 46), six_126706, 'text_type')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1187, 33), list_126704, text_type_126707)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126703, list_126704))
# Adding element type (key, value) (line 940)
unicode_126708 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1188, 4), 'unicode', u'date.autoformatter.microsecond')

# Obtaining an instance of the builtin type 'list' (line 1188)
list_126709 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1188, 38), 'list')
# Adding type elements to the builtin type 'list' instance (line 1188)
# Adding element type (line 1188)
unicode_126710 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1188, 39), 'unicode', u'%M:%S.%f')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1188, 38), list_126709, unicode_126710)
# Adding element type (line 1188)
# Getting the type of 'six' (line 1188)
six_126711 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1188, 51), 'six')
# Obtaining the member 'text_type' of a type (line 1188)
text_type_126712 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1188, 51), six_126711, 'text_type')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1188, 38), list_126709, text_type_126712)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126708, list_126709))
# Adding element type (key, value) (line 940)
unicode_126713 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1191, 4), 'unicode', u'legend.fancybox')

# Obtaining an instance of the builtin type 'list' (line 1191)
list_126714 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1191, 23), 'list')
# Adding type elements to the builtin type 'list' instance (line 1191)
# Adding element type (line 1191)
# Getting the type of 'True' (line 1191)
True_126715 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1191, 24), 'True')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1191, 23), list_126714, True_126715)
# Adding element type (line 1191)
# Getting the type of 'validate_bool' (line 1191)
validate_bool_126716 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1191, 30), 'validate_bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1191, 23), list_126714, validate_bool_126716)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126713, list_126714))
# Adding element type (key, value) (line 940)
unicode_126717 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1192, 4), 'unicode', u'legend.loc')

# Obtaining an instance of the builtin type 'list' (line 1192)
list_126718 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1192, 18), 'list')
# Adding type elements to the builtin type 'list' instance (line 1192)
# Adding element type (line 1192)
unicode_126719 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1192, 19), 'unicode', u'best')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1192, 18), list_126718, unicode_126719)
# Adding element type (line 1192)
# Getting the type of 'validate_legend_loc' (line 1192)
validate_legend_loc_126720 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1192, 27), 'validate_legend_loc')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1192, 18), list_126718, validate_legend_loc_126720)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126717, list_126718))
# Adding element type (key, value) (line 940)
unicode_126721 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1194, 4), 'unicode', u'legend.numpoints')

# Obtaining an instance of the builtin type 'list' (line 1194)
list_126722 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1194, 24), 'list')
# Adding type elements to the builtin type 'list' instance (line 1194)
# Adding element type (line 1194)
int_126723 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1194, 25), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1194, 24), list_126722, int_126723)
# Adding element type (line 1194)
# Getting the type of 'validate_int' (line 1194)
validate_int_126724 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1194, 28), 'validate_int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1194, 24), list_126722, validate_int_126724)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126721, list_126722))
# Adding element type (key, value) (line 940)
unicode_126725 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1196, 4), 'unicode', u'legend.scatterpoints')

# Obtaining an instance of the builtin type 'list' (line 1196)
list_126726 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1196, 28), 'list')
# Adding type elements to the builtin type 'list' instance (line 1196)
# Adding element type (line 1196)
int_126727 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1196, 29), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1196, 28), list_126726, int_126727)
# Adding element type (line 1196)
# Getting the type of 'validate_int' (line 1196)
validate_int_126728 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1196, 32), 'validate_int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1196, 28), list_126726, validate_int_126728)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126725, list_126726))
# Adding element type (key, value) (line 940)
unicode_126729 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1197, 4), 'unicode', u'legend.fontsize')

# Obtaining an instance of the builtin type 'list' (line 1197)
list_126730 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1197, 23), 'list')
# Adding type elements to the builtin type 'list' instance (line 1197)
# Adding element type (line 1197)
unicode_126731 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1197, 24), 'unicode', u'medium')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1197, 23), list_126730, unicode_126731)
# Adding element type (line 1197)
# Getting the type of 'validate_fontsize' (line 1197)
validate_fontsize_126732 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1197, 34), 'validate_fontsize')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1197, 23), list_126730, validate_fontsize_126732)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126729, list_126730))
# Adding element type (key, value) (line 940)
unicode_126733 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1199, 4), 'unicode', u'legend.markerscale')

# Obtaining an instance of the builtin type 'list' (line 1199)
list_126734 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1199, 26), 'list')
# Adding type elements to the builtin type 'list' instance (line 1199)
# Adding element type (line 1199)
float_126735 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1199, 27), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1199, 26), list_126734, float_126735)
# Adding element type (line 1199)
# Getting the type of 'validate_float' (line 1199)
validate_float_126736 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1199, 32), 'validate_float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1199, 26), list_126734, validate_float_126736)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126733, list_126734))
# Adding element type (key, value) (line 940)
unicode_126737 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1200, 4), 'unicode', u'legend.shadow')

# Obtaining an instance of the builtin type 'list' (line 1200)
list_126738 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1200, 21), 'list')
# Adding type elements to the builtin type 'list' instance (line 1200)
# Adding element type (line 1200)
# Getting the type of 'False' (line 1200)
False_126739 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1200, 22), 'False')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1200, 21), list_126738, False_126739)
# Adding element type (line 1200)
# Getting the type of 'validate_bool' (line 1200)
validate_bool_126740 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1200, 29), 'validate_bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1200, 21), list_126738, validate_bool_126740)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126737, list_126738))
# Adding element type (key, value) (line 940)
unicode_126741 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1202, 4), 'unicode', u'legend.frameon')

# Obtaining an instance of the builtin type 'list' (line 1202)
list_126742 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1202, 22), 'list')
# Adding type elements to the builtin type 'list' instance (line 1202)
# Adding element type (line 1202)
# Getting the type of 'True' (line 1202)
True_126743 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1202, 23), 'True')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1202, 22), list_126742, True_126743)
# Adding element type (line 1202)
# Getting the type of 'validate_bool' (line 1202)
validate_bool_126744 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1202, 29), 'validate_bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1202, 22), list_126742, validate_bool_126744)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126741, list_126742))
# Adding element type (key, value) (line 940)
unicode_126745 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1204, 4), 'unicode', u'legend.framealpha')

# Obtaining an instance of the builtin type 'list' (line 1204)
list_126746 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1204, 25), 'list')
# Adding type elements to the builtin type 'list' instance (line 1204)
# Adding element type (line 1204)
float_126747 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1204, 26), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1204, 25), list_126746, float_126747)
# Adding element type (line 1204)
# Getting the type of 'validate_float_or_None' (line 1204)
validate_float_or_None_126748 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1204, 31), 'validate_float_or_None')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1204, 25), list_126746, validate_float_or_None_126748)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126745, list_126746))
# Adding element type (key, value) (line 940)
unicode_126749 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1207, 4), 'unicode', u'legend.borderpad')

# Obtaining an instance of the builtin type 'list' (line 1207)
list_126750 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1207, 24), 'list')
# Adding type elements to the builtin type 'list' instance (line 1207)
# Adding element type (line 1207)
float_126751 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1207, 25), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1207, 24), list_126750, float_126751)
# Adding element type (line 1207)
# Getting the type of 'validate_float' (line 1207)
validate_float_126752 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1207, 30), 'validate_float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1207, 24), list_126750, validate_float_126752)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126749, list_126750))
# Adding element type (key, value) (line 940)
unicode_126753 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1209, 4), 'unicode', u'legend.labelspacing')

# Obtaining an instance of the builtin type 'list' (line 1209)
list_126754 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1209, 27), 'list')
# Adding type elements to the builtin type 'list' instance (line 1209)
# Adding element type (line 1209)
float_126755 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1209, 28), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1209, 27), list_126754, float_126755)
# Adding element type (line 1209)
# Getting the type of 'validate_float' (line 1209)
validate_float_126756 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1209, 33), 'validate_float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1209, 27), list_126754, validate_float_126756)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126753, list_126754))
# Adding element type (key, value) (line 940)
unicode_126757 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1211, 4), 'unicode', u'legend.handlelength')

# Obtaining an instance of the builtin type 'list' (line 1211)
list_126758 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1211, 27), 'list')
# Adding type elements to the builtin type 'list' instance (line 1211)
# Adding element type (line 1211)
float_126759 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1211, 28), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1211, 27), list_126758, float_126759)
# Adding element type (line 1211)
# Getting the type of 'validate_float' (line 1211)
validate_float_126760 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1211, 32), 'validate_float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1211, 27), list_126758, validate_float_126760)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126757, list_126758))
# Adding element type (key, value) (line 940)
unicode_126761 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1213, 4), 'unicode', u'legend.handleheight')

# Obtaining an instance of the builtin type 'list' (line 1213)
list_126762 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1213, 27), 'list')
# Adding type elements to the builtin type 'list' instance (line 1213)
# Adding element type (line 1213)
float_126763 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1213, 28), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1213, 27), list_126762, float_126763)
# Adding element type (line 1213)
# Getting the type of 'validate_float' (line 1213)
validate_float_126764 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1213, 33), 'validate_float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1213, 27), list_126762, validate_float_126764)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126761, list_126762))
# Adding element type (key, value) (line 940)
unicode_126765 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1215, 4), 'unicode', u'legend.handletextpad')

# Obtaining an instance of the builtin type 'list' (line 1215)
list_126766 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1215, 28), 'list')
# Adding type elements to the builtin type 'list' instance (line 1215)
# Adding element type (line 1215)
float_126767 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1215, 29), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1215, 28), list_126766, float_126767)
# Adding element type (line 1215)
# Getting the type of 'validate_float' (line 1215)
validate_float_126768 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1215, 33), 'validate_float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1215, 28), list_126766, validate_float_126768)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126765, list_126766))
# Adding element type (key, value) (line 940)
unicode_126769 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1217, 4), 'unicode', u'legend.borderaxespad')

# Obtaining an instance of the builtin type 'list' (line 1217)
list_126770 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1217, 28), 'list')
# Adding type elements to the builtin type 'list' instance (line 1217)
# Adding element type (line 1217)
float_126771 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1217, 29), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1217, 28), list_126770, float_126771)
# Adding element type (line 1217)
# Getting the type of 'validate_float' (line 1217)
validate_float_126772 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1217, 34), 'validate_float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1217, 28), list_126770, validate_float_126772)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126769, list_126770))
# Adding element type (key, value) (line 940)
unicode_126773 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1219, 4), 'unicode', u'legend.columnspacing')

# Obtaining an instance of the builtin type 'list' (line 1219)
list_126774 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1219, 28), 'list')
# Adding type elements to the builtin type 'list' instance (line 1219)
# Adding element type (line 1219)
float_126775 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1219, 29), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1219, 28), list_126774, float_126775)
# Adding element type (line 1219)
# Getting the type of 'validate_float' (line 1219)
validate_float_126776 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1219, 33), 'validate_float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1219, 28), list_126774, validate_float_126776)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126773, list_126774))
# Adding element type (key, value) (line 940)
unicode_126777 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1220, 4), 'unicode', u'legend.facecolor')

# Obtaining an instance of the builtin type 'list' (line 1220)
list_126778 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1220, 24), 'list')
# Adding type elements to the builtin type 'list' instance (line 1220)
# Adding element type (line 1220)
unicode_126779 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1220, 25), 'unicode', u'inherit')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1220, 24), list_126778, unicode_126779)
# Adding element type (line 1220)
# Getting the type of 'validate_color_or_inherit' (line 1220)
validate_color_or_inherit_126780 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1220, 36), 'validate_color_or_inherit')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1220, 24), list_126778, validate_color_or_inherit_126780)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126777, list_126778))
# Adding element type (key, value) (line 940)
unicode_126781 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1221, 4), 'unicode', u'legend.edgecolor')

# Obtaining an instance of the builtin type 'list' (line 1221)
list_126782 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1221, 24), 'list')
# Adding type elements to the builtin type 'list' instance (line 1221)
# Adding element type (line 1221)
unicode_126783 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1221, 25), 'unicode', u'0.8')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1221, 24), list_126782, unicode_126783)
# Adding element type (line 1221)
# Getting the type of 'validate_color_or_inherit' (line 1221)
validate_color_or_inherit_126784 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1221, 32), 'validate_color_or_inherit')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1221, 24), list_126782, validate_color_or_inherit_126784)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126781, list_126782))
# Adding element type (key, value) (line 940)
unicode_126785 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1224, 4), 'unicode', u'xtick.top')

# Obtaining an instance of the builtin type 'list' (line 1224)
list_126786 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1224, 25), 'list')
# Adding type elements to the builtin type 'list' instance (line 1224)
# Adding element type (line 1224)
# Getting the type of 'False' (line 1224)
False_126787 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1224, 26), 'False')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1224, 25), list_126786, False_126787)
# Adding element type (line 1224)
# Getting the type of 'validate_bool' (line 1224)
validate_bool_126788 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1224, 33), 'validate_bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1224, 25), list_126786, validate_bool_126788)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126785, list_126786))
# Adding element type (key, value) (line 940)
unicode_126789 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1225, 4), 'unicode', u'xtick.bottom')

# Obtaining an instance of the builtin type 'list' (line 1225)
list_126790 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1225, 25), 'list')
# Adding type elements to the builtin type 'list' instance (line 1225)
# Adding element type (line 1225)
# Getting the type of 'True' (line 1225)
True_126791 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1225, 26), 'True')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1225, 25), list_126790, True_126791)
# Adding element type (line 1225)
# Getting the type of 'validate_bool' (line 1225)
validate_bool_126792 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1225, 32), 'validate_bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1225, 25), list_126790, validate_bool_126792)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126789, list_126790))
# Adding element type (key, value) (line 940)
unicode_126793 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1226, 4), 'unicode', u'xtick.major.size')

# Obtaining an instance of the builtin type 'list' (line 1226)
list_126794 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1226, 25), 'list')
# Adding type elements to the builtin type 'list' instance (line 1226)
# Adding element type (line 1226)
float_126795 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1226, 26), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1226, 25), list_126794, float_126795)
# Adding element type (line 1226)
# Getting the type of 'validate_float' (line 1226)
validate_float_126796 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1226, 31), 'validate_float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1226, 25), list_126794, validate_float_126796)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126793, list_126794))
# Adding element type (key, value) (line 940)
unicode_126797 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1227, 4), 'unicode', u'xtick.minor.size')

# Obtaining an instance of the builtin type 'list' (line 1227)
list_126798 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1227, 25), 'list')
# Adding type elements to the builtin type 'list' instance (line 1227)
# Adding element type (line 1227)
int_126799 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1227, 26), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1227, 25), list_126798, int_126799)
# Adding element type (line 1227)
# Getting the type of 'validate_float' (line 1227)
validate_float_126800 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1227, 29), 'validate_float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1227, 25), list_126798, validate_float_126800)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126797, list_126798))
# Adding element type (key, value) (line 940)
unicode_126801 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1228, 4), 'unicode', u'xtick.major.width')

# Obtaining an instance of the builtin type 'list' (line 1228)
list_126802 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1228, 25), 'list')
# Adding type elements to the builtin type 'list' instance (line 1228)
# Adding element type (line 1228)
float_126803 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1228, 26), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1228, 25), list_126802, float_126803)
# Adding element type (line 1228)
# Getting the type of 'validate_float' (line 1228)
validate_float_126804 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1228, 31), 'validate_float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1228, 25), list_126802, validate_float_126804)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126801, list_126802))
# Adding element type (key, value) (line 940)
unicode_126805 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1229, 4), 'unicode', u'xtick.minor.width')

# Obtaining an instance of the builtin type 'list' (line 1229)
list_126806 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1229, 25), 'list')
# Adding type elements to the builtin type 'list' instance (line 1229)
# Adding element type (line 1229)
float_126807 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1229, 26), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1229, 25), list_126806, float_126807)
# Adding element type (line 1229)
# Getting the type of 'validate_float' (line 1229)
validate_float_126808 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1229, 31), 'validate_float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1229, 25), list_126806, validate_float_126808)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126805, list_126806))
# Adding element type (key, value) (line 940)
unicode_126809 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1230, 4), 'unicode', u'xtick.major.pad')

# Obtaining an instance of the builtin type 'list' (line 1230)
list_126810 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1230, 25), 'list')
# Adding type elements to the builtin type 'list' instance (line 1230)
# Adding element type (line 1230)
float_126811 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1230, 26), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1230, 25), list_126810, float_126811)
# Adding element type (line 1230)
# Getting the type of 'validate_float' (line 1230)
validate_float_126812 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1230, 31), 'validate_float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1230, 25), list_126810, validate_float_126812)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126809, list_126810))
# Adding element type (key, value) (line 940)
unicode_126813 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1231, 4), 'unicode', u'xtick.minor.pad')

# Obtaining an instance of the builtin type 'list' (line 1231)
list_126814 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1231, 25), 'list')
# Adding type elements to the builtin type 'list' instance (line 1231)
# Adding element type (line 1231)
float_126815 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1231, 26), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1231, 25), list_126814, float_126815)
# Adding element type (line 1231)
# Getting the type of 'validate_float' (line 1231)
validate_float_126816 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1231, 31), 'validate_float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1231, 25), list_126814, validate_float_126816)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126813, list_126814))
# Adding element type (key, value) (line 940)
unicode_126817 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1232, 4), 'unicode', u'xtick.color')

# Obtaining an instance of the builtin type 'list' (line 1232)
list_126818 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1232, 25), 'list')
# Adding type elements to the builtin type 'list' instance (line 1232)
# Adding element type (line 1232)
unicode_126819 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1232, 26), 'unicode', u'k')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1232, 25), list_126818, unicode_126819)
# Adding element type (line 1232)
# Getting the type of 'validate_color' (line 1232)
validate_color_126820 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1232, 31), 'validate_color')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1232, 25), list_126818, validate_color_126820)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126817, list_126818))
# Adding element type (key, value) (line 940)
unicode_126821 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1233, 4), 'unicode', u'xtick.minor.visible')

# Obtaining an instance of the builtin type 'list' (line 1233)
list_126822 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1233, 29), 'list')
# Adding type elements to the builtin type 'list' instance (line 1233)
# Adding element type (line 1233)
# Getting the type of 'False' (line 1233)
False_126823 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1233, 30), 'False')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1233, 29), list_126822, False_126823)
# Adding element type (line 1233)
# Getting the type of 'validate_bool' (line 1233)
validate_bool_126824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1233, 37), 'validate_bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1233, 29), list_126822, validate_bool_126824)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126821, list_126822))
# Adding element type (key, value) (line 940)
unicode_126825 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1234, 4), 'unicode', u'xtick.minor.top')

# Obtaining an instance of the builtin type 'list' (line 1234)
list_126826 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1234, 25), 'list')
# Adding type elements to the builtin type 'list' instance (line 1234)
# Adding element type (line 1234)
# Getting the type of 'True' (line 1234)
True_126827 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1234, 26), 'True')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1234, 25), list_126826, True_126827)
# Adding element type (line 1234)
# Getting the type of 'validate_bool' (line 1234)
validate_bool_126828 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1234, 32), 'validate_bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1234, 25), list_126826, validate_bool_126828)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126825, list_126826))
# Adding element type (key, value) (line 940)
unicode_126829 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1235, 4), 'unicode', u'xtick.minor.bottom')

# Obtaining an instance of the builtin type 'list' (line 1235)
list_126830 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1235, 29), 'list')
# Adding type elements to the builtin type 'list' instance (line 1235)
# Adding element type (line 1235)
# Getting the type of 'True' (line 1235)
True_126831 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1235, 30), 'True')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1235, 29), list_126830, True_126831)
# Adding element type (line 1235)
# Getting the type of 'validate_bool' (line 1235)
validate_bool_126832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1235, 36), 'validate_bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1235, 29), list_126830, validate_bool_126832)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126829, list_126830))
# Adding element type (key, value) (line 940)
unicode_126833 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1236, 4), 'unicode', u'xtick.major.top')

# Obtaining an instance of the builtin type 'list' (line 1236)
list_126834 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1236, 25), 'list')
# Adding type elements to the builtin type 'list' instance (line 1236)
# Adding element type (line 1236)
# Getting the type of 'True' (line 1236)
True_126835 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1236, 26), 'True')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1236, 25), list_126834, True_126835)
# Adding element type (line 1236)
# Getting the type of 'validate_bool' (line 1236)
validate_bool_126836 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1236, 32), 'validate_bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1236, 25), list_126834, validate_bool_126836)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126833, list_126834))
# Adding element type (key, value) (line 940)
unicode_126837 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1237, 4), 'unicode', u'xtick.major.bottom')

# Obtaining an instance of the builtin type 'list' (line 1237)
list_126838 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1237, 29), 'list')
# Adding type elements to the builtin type 'list' instance (line 1237)
# Adding element type (line 1237)
# Getting the type of 'True' (line 1237)
True_126839 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1237, 30), 'True')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1237, 29), list_126838, True_126839)
# Adding element type (line 1237)
# Getting the type of 'validate_bool' (line 1237)
validate_bool_126840 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1237, 36), 'validate_bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1237, 29), list_126838, validate_bool_126840)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126837, list_126838))
# Adding element type (key, value) (line 940)
unicode_126841 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1240, 4), 'unicode', u'xtick.labelsize')

# Obtaining an instance of the builtin type 'list' (line 1240)
list_126842 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1240, 25), 'list')
# Adding type elements to the builtin type 'list' instance (line 1240)
# Adding element type (line 1240)
unicode_126843 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1240, 26), 'unicode', u'medium')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1240, 25), list_126842, unicode_126843)
# Adding element type (line 1240)
# Getting the type of 'validate_fontsize' (line 1240)
validate_fontsize_126844 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1240, 36), 'validate_fontsize')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1240, 25), list_126842, validate_fontsize_126844)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126841, list_126842))
# Adding element type (key, value) (line 940)
unicode_126845 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1241, 4), 'unicode', u'xtick.direction')

# Obtaining an instance of the builtin type 'list' (line 1241)
list_126846 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1241, 25), 'list')
# Adding type elements to the builtin type 'list' instance (line 1241)
# Adding element type (line 1241)
unicode_126847 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1241, 26), 'unicode', u'out')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1241, 25), list_126846, unicode_126847)
# Adding element type (line 1241)
# Getting the type of 'six' (line 1241)
six_126848 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1241, 33), 'six')
# Obtaining the member 'text_type' of a type (line 1241)
text_type_126849 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1241, 33), six_126848, 'text_type')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1241, 25), list_126846, text_type_126849)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126845, list_126846))
# Adding element type (key, value) (line 940)
unicode_126850 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1242, 4), 'unicode', u'xtick.alignment')

# Obtaining an instance of the builtin type 'list' (line 1242)
list_126851 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1242, 23), 'list')
# Adding type elements to the builtin type 'list' instance (line 1242)
# Adding element type (line 1242)
unicode_126852 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1242, 24), 'unicode', u'center')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1242, 23), list_126851, unicode_126852)
# Adding element type (line 1242)
# Getting the type of '_validate_alignment' (line 1242)
_validate_alignment_126853 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1242, 34), '_validate_alignment')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1242, 23), list_126851, _validate_alignment_126853)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126850, list_126851))
# Adding element type (key, value) (line 940)
unicode_126854 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1244, 4), 'unicode', u'ytick.left')

# Obtaining an instance of the builtin type 'list' (line 1244)
list_126855 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1244, 25), 'list')
# Adding type elements to the builtin type 'list' instance (line 1244)
# Adding element type (line 1244)
# Getting the type of 'True' (line 1244)
True_126856 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1244, 26), 'True')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1244, 25), list_126855, True_126856)
# Adding element type (line 1244)
# Getting the type of 'validate_bool' (line 1244)
validate_bool_126857 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1244, 32), 'validate_bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1244, 25), list_126855, validate_bool_126857)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126854, list_126855))
# Adding element type (key, value) (line 940)
unicode_126858 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1245, 4), 'unicode', u'ytick.right')

# Obtaining an instance of the builtin type 'list' (line 1245)
list_126859 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1245, 25), 'list')
# Adding type elements to the builtin type 'list' instance (line 1245)
# Adding element type (line 1245)
# Getting the type of 'False' (line 1245)
False_126860 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1245, 26), 'False')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1245, 25), list_126859, False_126860)
# Adding element type (line 1245)
# Getting the type of 'validate_bool' (line 1245)
validate_bool_126861 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1245, 33), 'validate_bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1245, 25), list_126859, validate_bool_126861)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126858, list_126859))
# Adding element type (key, value) (line 940)
unicode_126862 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1246, 4), 'unicode', u'ytick.major.size')

# Obtaining an instance of the builtin type 'list' (line 1246)
list_126863 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1246, 25), 'list')
# Adding type elements to the builtin type 'list' instance (line 1246)
# Adding element type (line 1246)
float_126864 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1246, 26), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1246, 25), list_126863, float_126864)
# Adding element type (line 1246)
# Getting the type of 'validate_float' (line 1246)
validate_float_126865 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1246, 31), 'validate_float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1246, 25), list_126863, validate_float_126865)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126862, list_126863))
# Adding element type (key, value) (line 940)
unicode_126866 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1247, 4), 'unicode', u'ytick.minor.size')

# Obtaining an instance of the builtin type 'list' (line 1247)
list_126867 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1247, 25), 'list')
# Adding type elements to the builtin type 'list' instance (line 1247)
# Adding element type (line 1247)
int_126868 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1247, 26), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1247, 25), list_126867, int_126868)
# Adding element type (line 1247)
# Getting the type of 'validate_float' (line 1247)
validate_float_126869 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1247, 29), 'validate_float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1247, 25), list_126867, validate_float_126869)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126866, list_126867))
# Adding element type (key, value) (line 940)
unicode_126870 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1248, 4), 'unicode', u'ytick.major.width')

# Obtaining an instance of the builtin type 'list' (line 1248)
list_126871 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1248, 25), 'list')
# Adding type elements to the builtin type 'list' instance (line 1248)
# Adding element type (line 1248)
float_126872 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1248, 26), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1248, 25), list_126871, float_126872)
# Adding element type (line 1248)
# Getting the type of 'validate_float' (line 1248)
validate_float_126873 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1248, 31), 'validate_float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1248, 25), list_126871, validate_float_126873)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126870, list_126871))
# Adding element type (key, value) (line 940)
unicode_126874 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1249, 4), 'unicode', u'ytick.minor.width')

# Obtaining an instance of the builtin type 'list' (line 1249)
list_126875 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1249, 25), 'list')
# Adding type elements to the builtin type 'list' instance (line 1249)
# Adding element type (line 1249)
float_126876 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1249, 26), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1249, 25), list_126875, float_126876)
# Adding element type (line 1249)
# Getting the type of 'validate_float' (line 1249)
validate_float_126877 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1249, 31), 'validate_float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1249, 25), list_126875, validate_float_126877)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126874, list_126875))
# Adding element type (key, value) (line 940)
unicode_126878 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1250, 4), 'unicode', u'ytick.major.pad')

# Obtaining an instance of the builtin type 'list' (line 1250)
list_126879 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1250, 25), 'list')
# Adding type elements to the builtin type 'list' instance (line 1250)
# Adding element type (line 1250)
float_126880 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1250, 26), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1250, 25), list_126879, float_126880)
# Adding element type (line 1250)
# Getting the type of 'validate_float' (line 1250)
validate_float_126881 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1250, 31), 'validate_float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1250, 25), list_126879, validate_float_126881)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126878, list_126879))
# Adding element type (key, value) (line 940)
unicode_126882 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1251, 4), 'unicode', u'ytick.minor.pad')

# Obtaining an instance of the builtin type 'list' (line 1251)
list_126883 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1251, 25), 'list')
# Adding type elements to the builtin type 'list' instance (line 1251)
# Adding element type (line 1251)
float_126884 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1251, 26), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1251, 25), list_126883, float_126884)
# Adding element type (line 1251)
# Getting the type of 'validate_float' (line 1251)
validate_float_126885 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1251, 31), 'validate_float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1251, 25), list_126883, validate_float_126885)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126882, list_126883))
# Adding element type (key, value) (line 940)
unicode_126886 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1252, 4), 'unicode', u'ytick.color')

# Obtaining an instance of the builtin type 'list' (line 1252)
list_126887 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1252, 25), 'list')
# Adding type elements to the builtin type 'list' instance (line 1252)
# Adding element type (line 1252)
unicode_126888 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1252, 26), 'unicode', u'k')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1252, 25), list_126887, unicode_126888)
# Adding element type (line 1252)
# Getting the type of 'validate_color' (line 1252)
validate_color_126889 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1252, 31), 'validate_color')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1252, 25), list_126887, validate_color_126889)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126886, list_126887))
# Adding element type (key, value) (line 940)
unicode_126890 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1253, 4), 'unicode', u'ytick.minor.visible')

# Obtaining an instance of the builtin type 'list' (line 1253)
list_126891 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1253, 29), 'list')
# Adding type elements to the builtin type 'list' instance (line 1253)
# Adding element type (line 1253)
# Getting the type of 'False' (line 1253)
False_126892 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1253, 30), 'False')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1253, 29), list_126891, False_126892)
# Adding element type (line 1253)
# Getting the type of 'validate_bool' (line 1253)
validate_bool_126893 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1253, 37), 'validate_bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1253, 29), list_126891, validate_bool_126893)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126890, list_126891))
# Adding element type (key, value) (line 940)
unicode_126894 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1254, 4), 'unicode', u'ytick.minor.left')

# Obtaining an instance of the builtin type 'list' (line 1254)
list_126895 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1254, 26), 'list')
# Adding type elements to the builtin type 'list' instance (line 1254)
# Adding element type (line 1254)
# Getting the type of 'True' (line 1254)
True_126896 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1254, 27), 'True')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1254, 26), list_126895, True_126896)
# Adding element type (line 1254)
# Getting the type of 'validate_bool' (line 1254)
validate_bool_126897 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1254, 33), 'validate_bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1254, 26), list_126895, validate_bool_126897)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126894, list_126895))
# Adding element type (key, value) (line 940)
unicode_126898 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1255, 4), 'unicode', u'ytick.minor.right')

# Obtaining an instance of the builtin type 'list' (line 1255)
list_126899 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1255, 28), 'list')
# Adding type elements to the builtin type 'list' instance (line 1255)
# Adding element type (line 1255)
# Getting the type of 'True' (line 1255)
True_126900 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1255, 29), 'True')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1255, 28), list_126899, True_126900)
# Adding element type (line 1255)
# Getting the type of 'validate_bool' (line 1255)
validate_bool_126901 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1255, 35), 'validate_bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1255, 28), list_126899, validate_bool_126901)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126898, list_126899))
# Adding element type (key, value) (line 940)
unicode_126902 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1256, 4), 'unicode', u'ytick.major.left')

# Obtaining an instance of the builtin type 'list' (line 1256)
list_126903 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1256, 26), 'list')
# Adding type elements to the builtin type 'list' instance (line 1256)
# Adding element type (line 1256)
# Getting the type of 'True' (line 1256)
True_126904 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1256, 27), 'True')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1256, 26), list_126903, True_126904)
# Adding element type (line 1256)
# Getting the type of 'validate_bool' (line 1256)
validate_bool_126905 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1256, 33), 'validate_bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1256, 26), list_126903, validate_bool_126905)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126902, list_126903))
# Adding element type (key, value) (line 940)
unicode_126906 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1257, 4), 'unicode', u'ytick.major.right')

# Obtaining an instance of the builtin type 'list' (line 1257)
list_126907 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1257, 28), 'list')
# Adding type elements to the builtin type 'list' instance (line 1257)
# Adding element type (line 1257)
# Getting the type of 'True' (line 1257)
True_126908 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1257, 29), 'True')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1257, 28), list_126907, True_126908)
# Adding element type (line 1257)
# Getting the type of 'validate_bool' (line 1257)
validate_bool_126909 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1257, 35), 'validate_bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1257, 28), list_126907, validate_bool_126909)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126906, list_126907))
# Adding element type (key, value) (line 940)
unicode_126910 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1260, 4), 'unicode', u'ytick.labelsize')

# Obtaining an instance of the builtin type 'list' (line 1260)
list_126911 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1260, 25), 'list')
# Adding type elements to the builtin type 'list' instance (line 1260)
# Adding element type (line 1260)
unicode_126912 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1260, 26), 'unicode', u'medium')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1260, 25), list_126911, unicode_126912)
# Adding element type (line 1260)
# Getting the type of 'validate_fontsize' (line 1260)
validate_fontsize_126913 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1260, 36), 'validate_fontsize')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1260, 25), list_126911, validate_fontsize_126913)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126910, list_126911))
# Adding element type (key, value) (line 940)
unicode_126914 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1261, 4), 'unicode', u'ytick.direction')

# Obtaining an instance of the builtin type 'list' (line 1261)
list_126915 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1261, 25), 'list')
# Adding type elements to the builtin type 'list' instance (line 1261)
# Adding element type (line 1261)
unicode_126916 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1261, 26), 'unicode', u'out')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1261, 25), list_126915, unicode_126916)
# Adding element type (line 1261)
# Getting the type of 'six' (line 1261)
six_126917 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1261, 33), 'six')
# Obtaining the member 'text_type' of a type (line 1261)
text_type_126918 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1261, 33), six_126917, 'text_type')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1261, 25), list_126915, text_type_126918)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126914, list_126915))
# Adding element type (key, value) (line 940)
unicode_126919 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1262, 4), 'unicode', u'ytick.alignment')

# Obtaining an instance of the builtin type 'list' (line 1262)
list_126920 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1262, 23), 'list')
# Adding type elements to the builtin type 'list' instance (line 1262)
# Adding element type (line 1262)
unicode_126921 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1262, 24), 'unicode', u'center_baseline')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1262, 23), list_126920, unicode_126921)
# Adding element type (line 1262)
# Getting the type of '_validate_alignment' (line 1262)
_validate_alignment_126922 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1262, 43), '_validate_alignment')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1262, 23), list_126920, _validate_alignment_126922)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126919, list_126920))
# Adding element type (key, value) (line 940)
unicode_126923 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1265, 4), 'unicode', u'grid.color')

# Obtaining an instance of the builtin type 'list' (line 1265)
list_126924 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1265, 25), 'list')
# Adding type elements to the builtin type 'list' instance (line 1265)
# Adding element type (line 1265)
unicode_126925 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1265, 26), 'unicode', u'#b0b0b0')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1265, 25), list_126924, unicode_126925)
# Adding element type (line 1265)
# Getting the type of 'validate_color' (line 1265)
validate_color_126926 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1265, 37), 'validate_color')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1265, 25), list_126924, validate_color_126926)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126923, list_126924))
# Adding element type (key, value) (line 940)
unicode_126927 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1266, 4), 'unicode', u'grid.linestyle')

# Obtaining an instance of the builtin type 'list' (line 1266)
list_126928 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1266, 25), 'list')
# Adding type elements to the builtin type 'list' instance (line 1266)
# Adding element type (line 1266)
unicode_126929 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1266, 26), 'unicode', u'-')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1266, 25), list_126928, unicode_126929)
# Adding element type (line 1266)
# Getting the type of '_validate_linestyle' (line 1266)
_validate_linestyle_126930 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1266, 31), '_validate_linestyle')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1266, 25), list_126928, _validate_linestyle_126930)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126927, list_126928))
# Adding element type (key, value) (line 940)
unicode_126931 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1267, 4), 'unicode', u'grid.linewidth')

# Obtaining an instance of the builtin type 'list' (line 1267)
list_126932 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1267, 25), 'list')
# Adding type elements to the builtin type 'list' instance (line 1267)
# Adding element type (line 1267)
float_126933 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1267, 26), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1267, 25), list_126932, float_126933)
# Adding element type (line 1267)
# Getting the type of 'validate_float' (line 1267)
validate_float_126934 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1267, 31), 'validate_float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1267, 25), list_126932, validate_float_126934)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126931, list_126932))
# Adding element type (key, value) (line 940)
unicode_126935 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1268, 4), 'unicode', u'grid.alpha')

# Obtaining an instance of the builtin type 'list' (line 1268)
list_126936 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1268, 25), 'list')
# Adding type elements to the builtin type 'list' instance (line 1268)
# Adding element type (line 1268)
float_126937 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1268, 26), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1268, 25), list_126936, float_126937)
# Adding element type (line 1268)
# Getting the type of 'validate_float' (line 1268)
validate_float_126938 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1268, 31), 'validate_float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1268, 25), list_126936, validate_float_126938)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126935, list_126936))
# Adding element type (key, value) (line 940)
unicode_126939 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1273, 4), 'unicode', u'figure.titlesize')

# Obtaining an instance of the builtin type 'list' (line 1273)
list_126940 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1273, 26), 'list')
# Adding type elements to the builtin type 'list' instance (line 1273)
# Adding element type (line 1273)
unicode_126941 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1273, 27), 'unicode', u'large')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1273, 26), list_126940, unicode_126941)
# Adding element type (line 1273)
# Getting the type of 'validate_fontsize' (line 1273)
validate_fontsize_126942 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1273, 36), 'validate_fontsize')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1273, 26), list_126940, validate_fontsize_126942)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126939, list_126940))
# Adding element type (key, value) (line 940)
unicode_126943 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1274, 4), 'unicode', u'figure.titleweight')

# Obtaining an instance of the builtin type 'list' (line 1274)
list_126944 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1274, 26), 'list')
# Adding type elements to the builtin type 'list' instance (line 1274)
# Adding element type (line 1274)
unicode_126945 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1274, 27), 'unicode', u'normal')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1274, 26), list_126944, unicode_126945)
# Adding element type (line 1274)
# Getting the type of 'six' (line 1274)
six_126946 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1274, 37), 'six')
# Obtaining the member 'text_type' of a type (line 1274)
text_type_126947 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1274, 37), six_126946, 'text_type')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1274, 26), list_126944, text_type_126947)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126943, list_126944))
# Adding element type (key, value) (line 940)
unicode_126948 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1277, 4), 'unicode', u'figure.figsize')

# Obtaining an instance of the builtin type 'list' (line 1277)
list_126949 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1277, 25), 'list')
# Adding type elements to the builtin type 'list' instance (line 1277)
# Adding element type (line 1277)

# Obtaining an instance of the builtin type 'list' (line 1277)
list_126950 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1277, 26), 'list')
# Adding type elements to the builtin type 'list' instance (line 1277)
# Adding element type (line 1277)
float_126951 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1277, 27), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1277, 26), list_126950, float_126951)
# Adding element type (line 1277)
float_126952 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1277, 32), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1277, 26), list_126950, float_126952)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1277, 25), list_126949, list_126950)
# Adding element type (line 1277)

# Call to validate_nseq_float(...): (line 1277)
# Processing the call arguments (line 1277)
int_126954 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1277, 58), 'int')
# Processing the call keyword arguments (line 1277)
kwargs_126955 = {}
# Getting the type of 'validate_nseq_float' (line 1277)
validate_nseq_float_126953 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1277, 38), 'validate_nseq_float', False)
# Calling validate_nseq_float(args, kwargs) (line 1277)
validate_nseq_float_call_result_126956 = invoke(stypy.reporting.localization.Localization(__file__, 1277, 38), validate_nseq_float_126953, *[int_126954], **kwargs_126955)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1277, 25), list_126949, validate_nseq_float_call_result_126956)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126948, list_126949))
# Adding element type (key, value) (line 940)
unicode_126957 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1278, 4), 'unicode', u'figure.dpi')

# Obtaining an instance of the builtin type 'list' (line 1278)
list_126958 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1278, 25), 'list')
# Adding type elements to the builtin type 'list' instance (line 1278)
# Adding element type (line 1278)
int_126959 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1278, 26), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1278, 25), list_126958, int_126959)
# Adding element type (line 1278)
# Getting the type of 'validate_float' (line 1278)
validate_float_126960 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1278, 31), 'validate_float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1278, 25), list_126958, validate_float_126960)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126957, list_126958))
# Adding element type (key, value) (line 940)
unicode_126961 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1279, 4), 'unicode', u'figure.facecolor')

# Obtaining an instance of the builtin type 'list' (line 1279)
list_126962 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1279, 25), 'list')
# Adding type elements to the builtin type 'list' instance (line 1279)
# Adding element type (line 1279)
unicode_126963 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1279, 26), 'unicode', u'w')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1279, 25), list_126962, unicode_126963)
# Adding element type (line 1279)
# Getting the type of 'validate_color' (line 1279)
validate_color_126964 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1279, 31), 'validate_color')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1279, 25), list_126962, validate_color_126964)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126961, list_126962))
# Adding element type (key, value) (line 940)
unicode_126965 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1280, 4), 'unicode', u'figure.edgecolor')

# Obtaining an instance of the builtin type 'list' (line 1280)
list_126966 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1280, 25), 'list')
# Adding type elements to the builtin type 'list' instance (line 1280)
# Adding element type (line 1280)
unicode_126967 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1280, 26), 'unicode', u'w')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1280, 25), list_126966, unicode_126967)
# Adding element type (line 1280)
# Getting the type of 'validate_color' (line 1280)
validate_color_126968 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1280, 31), 'validate_color')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1280, 25), list_126966, validate_color_126968)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126965, list_126966))
# Adding element type (key, value) (line 940)
unicode_126969 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1281, 4), 'unicode', u'figure.frameon')

# Obtaining an instance of the builtin type 'list' (line 1281)
list_126970 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1281, 25), 'list')
# Adding type elements to the builtin type 'list' instance (line 1281)
# Adding element type (line 1281)
# Getting the type of 'True' (line 1281)
True_126971 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1281, 26), 'True')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1281, 25), list_126970, True_126971)
# Adding element type (line 1281)
# Getting the type of 'validate_bool' (line 1281)
validate_bool_126972 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1281, 32), 'validate_bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1281, 25), list_126970, validate_bool_126972)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126969, list_126970))
# Adding element type (key, value) (line 940)
unicode_126973 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1282, 4), 'unicode', u'figure.autolayout')

# Obtaining an instance of the builtin type 'list' (line 1282)
list_126974 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1282, 25), 'list')
# Adding type elements to the builtin type 'list' instance (line 1282)
# Adding element type (line 1282)
# Getting the type of 'False' (line 1282)
False_126975 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1282, 26), 'False')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1282, 25), list_126974, False_126975)
# Adding element type (line 1282)
# Getting the type of 'validate_bool' (line 1282)
validate_bool_126976 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1282, 33), 'validate_bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1282, 25), list_126974, validate_bool_126976)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126973, list_126974))
# Adding element type (key, value) (line 940)
unicode_126977 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1283, 4), 'unicode', u'figure.max_open_warning')

# Obtaining an instance of the builtin type 'list' (line 1283)
list_126978 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1283, 31), 'list')
# Adding type elements to the builtin type 'list' instance (line 1283)
# Adding element type (line 1283)
int_126979 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1283, 32), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1283, 31), list_126978, int_126979)
# Adding element type (line 1283)
# Getting the type of 'validate_int' (line 1283)
validate_int_126980 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1283, 36), 'validate_int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1283, 31), list_126978, validate_int_126980)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126977, list_126978))
# Adding element type (key, value) (line 940)
unicode_126981 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1285, 4), 'unicode', u'figure.subplot.left')

# Obtaining an instance of the builtin type 'list' (line 1285)
list_126982 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1285, 27), 'list')
# Adding type elements to the builtin type 'list' instance (line 1285)
# Adding element type (line 1285)
float_126983 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1285, 28), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1285, 27), list_126982, float_126983)
# Adding element type (line 1285)

# Call to ValidateInterval(...): (line 1285)
# Processing the call arguments (line 1285)
int_126985 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1285, 52), 'int')
int_126986 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1285, 55), 'int')
# Processing the call keyword arguments (line 1285)
# Getting the type of 'True' (line 1285)
True_126987 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1285, 68), 'True', False)
keyword_126988 = True_126987
# Getting the type of 'True' (line 1286)
True_126989 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1286, 65), 'True', False)
keyword_126990 = True_126989
kwargs_126991 = {'closedmax': keyword_126990, 'closedmin': keyword_126988}
# Getting the type of 'ValidateInterval' (line 1285)
ValidateInterval_126984 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1285, 35), 'ValidateInterval', False)
# Calling ValidateInterval(args, kwargs) (line 1285)
ValidateInterval_call_result_126992 = invoke(stypy.reporting.localization.Localization(__file__, 1285, 35), ValidateInterval_126984, *[int_126985, int_126986], **kwargs_126991)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1285, 27), list_126982, ValidateInterval_call_result_126992)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126981, list_126982))
# Adding element type (key, value) (line 940)
unicode_126993 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1287, 4), 'unicode', u'figure.subplot.right')

# Obtaining an instance of the builtin type 'list' (line 1287)
list_126994 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1287, 28), 'list')
# Adding type elements to the builtin type 'list' instance (line 1287)
# Adding element type (line 1287)
float_126995 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1287, 29), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1287, 28), list_126994, float_126995)
# Adding element type (line 1287)

# Call to ValidateInterval(...): (line 1287)
# Processing the call arguments (line 1287)
int_126997 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1287, 51), 'int')
int_126998 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1287, 54), 'int')
# Processing the call keyword arguments (line 1287)
# Getting the type of 'True' (line 1287)
True_126999 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1287, 67), 'True', False)
keyword_127000 = True_126999
# Getting the type of 'True' (line 1288)
True_127001 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1288, 63), 'True', False)
keyword_127002 = True_127001
kwargs_127003 = {'closedmax': keyword_127002, 'closedmin': keyword_127000}
# Getting the type of 'ValidateInterval' (line 1287)
ValidateInterval_126996 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1287, 34), 'ValidateInterval', False)
# Calling ValidateInterval(args, kwargs) (line 1287)
ValidateInterval_call_result_127004 = invoke(stypy.reporting.localization.Localization(__file__, 1287, 34), ValidateInterval_126996, *[int_126997, int_126998], **kwargs_127003)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1287, 28), list_126994, ValidateInterval_call_result_127004)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_126993, list_126994))
# Adding element type (key, value) (line 940)
unicode_127005 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1289, 4), 'unicode', u'figure.subplot.bottom')

# Obtaining an instance of the builtin type 'list' (line 1289)
list_127006 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1289, 29), 'list')
# Adding type elements to the builtin type 'list' instance (line 1289)
# Adding element type (line 1289)
float_127007 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1289, 30), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1289, 29), list_127006, float_127007)
# Adding element type (line 1289)

# Call to ValidateInterval(...): (line 1289)
# Processing the call arguments (line 1289)
int_127009 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1289, 53), 'int')
int_127010 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1289, 56), 'int')
# Processing the call keyword arguments (line 1289)
# Getting the type of 'True' (line 1289)
True_127011 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1289, 69), 'True', False)
keyword_127012 = True_127011
# Getting the type of 'True' (line 1290)
True_127013 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1290, 63), 'True', False)
keyword_127014 = True_127013
kwargs_127015 = {'closedmax': keyword_127014, 'closedmin': keyword_127012}
# Getting the type of 'ValidateInterval' (line 1289)
ValidateInterval_127008 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1289, 36), 'ValidateInterval', False)
# Calling ValidateInterval(args, kwargs) (line 1289)
ValidateInterval_call_result_127016 = invoke(stypy.reporting.localization.Localization(__file__, 1289, 36), ValidateInterval_127008, *[int_127009, int_127010], **kwargs_127015)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1289, 29), list_127006, ValidateInterval_call_result_127016)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127005, list_127006))
# Adding element type (key, value) (line 940)
unicode_127017 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1291, 4), 'unicode', u'figure.subplot.top')

# Obtaining an instance of the builtin type 'list' (line 1291)
list_127018 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1291, 26), 'list')
# Adding type elements to the builtin type 'list' instance (line 1291)
# Adding element type (line 1291)
float_127019 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1291, 27), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1291, 26), list_127018, float_127019)
# Adding element type (line 1291)

# Call to ValidateInterval(...): (line 1291)
# Processing the call arguments (line 1291)
int_127021 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1291, 50), 'int')
int_127022 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1291, 53), 'int')
# Processing the call keyword arguments (line 1291)
# Getting the type of 'True' (line 1291)
True_127023 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1291, 66), 'True', False)
keyword_127024 = True_127023
# Getting the type of 'True' (line 1292)
True_127025 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1292, 63), 'True', False)
keyword_127026 = True_127025
kwargs_127027 = {'closedmax': keyword_127026, 'closedmin': keyword_127024}
# Getting the type of 'ValidateInterval' (line 1291)
ValidateInterval_127020 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1291, 33), 'ValidateInterval', False)
# Calling ValidateInterval(args, kwargs) (line 1291)
ValidateInterval_call_result_127028 = invoke(stypy.reporting.localization.Localization(__file__, 1291, 33), ValidateInterval_127020, *[int_127021, int_127022], **kwargs_127027)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1291, 26), list_127018, ValidateInterval_call_result_127028)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127017, list_127018))
# Adding element type (key, value) (line 940)
unicode_127029 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1293, 4), 'unicode', u'figure.subplot.wspace')

# Obtaining an instance of the builtin type 'list' (line 1293)
list_127030 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1293, 29), 'list')
# Adding type elements to the builtin type 'list' instance (line 1293)
# Adding element type (line 1293)
float_127031 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1293, 30), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1293, 29), list_127030, float_127031)
# Adding element type (line 1293)

# Call to ValidateInterval(...): (line 1293)
# Processing the call arguments (line 1293)
int_127033 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1293, 52), 'int')
int_127034 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1293, 55), 'int')
# Processing the call keyword arguments (line 1293)
# Getting the type of 'True' (line 1293)
True_127035 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1293, 68), 'True', False)
keyword_127036 = True_127035
# Getting the type of 'False' (line 1294)
False_127037 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1294, 63), 'False', False)
keyword_127038 = False_127037
kwargs_127039 = {'closedmax': keyword_127038, 'closedmin': keyword_127036}
# Getting the type of 'ValidateInterval' (line 1293)
ValidateInterval_127032 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1293, 35), 'ValidateInterval', False)
# Calling ValidateInterval(args, kwargs) (line 1293)
ValidateInterval_call_result_127040 = invoke(stypy.reporting.localization.Localization(__file__, 1293, 35), ValidateInterval_127032, *[int_127033, int_127034], **kwargs_127039)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1293, 29), list_127030, ValidateInterval_call_result_127040)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127029, list_127030))
# Adding element type (key, value) (line 940)
unicode_127041 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1295, 4), 'unicode', u'figure.subplot.hspace')

# Obtaining an instance of the builtin type 'list' (line 1295)
list_127042 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1295, 29), 'list')
# Adding type elements to the builtin type 'list' instance (line 1295)
# Adding element type (line 1295)
float_127043 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1295, 30), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1295, 29), list_127042, float_127043)
# Adding element type (line 1295)

# Call to ValidateInterval(...): (line 1295)
# Processing the call arguments (line 1295)
int_127045 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1295, 52), 'int')
int_127046 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1295, 55), 'int')
# Processing the call keyword arguments (line 1295)
# Getting the type of 'True' (line 1295)
True_127047 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1295, 68), 'True', False)
keyword_127048 = True_127047
# Getting the type of 'False' (line 1296)
False_127049 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1296, 63), 'False', False)
keyword_127050 = False_127049
kwargs_127051 = {'closedmax': keyword_127050, 'closedmin': keyword_127048}
# Getting the type of 'ValidateInterval' (line 1295)
ValidateInterval_127044 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1295, 35), 'ValidateInterval', False)
# Calling ValidateInterval(args, kwargs) (line 1295)
ValidateInterval_call_result_127052 = invoke(stypy.reporting.localization.Localization(__file__, 1295, 35), ValidateInterval_127044, *[int_127045, int_127046], **kwargs_127051)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1295, 29), list_127042, ValidateInterval_call_result_127052)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127041, list_127042))
# Adding element type (key, value) (line 940)
unicode_127053 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1299, 4), 'unicode', u'savefig.dpi')

# Obtaining an instance of the builtin type 'list' (line 1299)
list_127054 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1299, 27), 'list')
# Adding type elements to the builtin type 'list' instance (line 1299)
# Adding element type (line 1299)
unicode_127055 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1299, 28), 'unicode', u'figure')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1299, 27), list_127054, unicode_127055)
# Adding element type (line 1299)
# Getting the type of 'validate_dpi' (line 1299)
validate_dpi_127056 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1299, 38), 'validate_dpi')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1299, 27), list_127054, validate_dpi_127056)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127053, list_127054))
# Adding element type (key, value) (line 940)
unicode_127057 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1300, 4), 'unicode', u'savefig.facecolor')

# Obtaining an instance of the builtin type 'list' (line 1300)
list_127058 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1300, 27), 'list')
# Adding type elements to the builtin type 'list' instance (line 1300)
# Adding element type (line 1300)
unicode_127059 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1300, 28), 'unicode', u'w')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1300, 27), list_127058, unicode_127059)
# Adding element type (line 1300)
# Getting the type of 'validate_color' (line 1300)
validate_color_127060 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1300, 33), 'validate_color')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1300, 27), list_127058, validate_color_127060)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127057, list_127058))
# Adding element type (key, value) (line 940)
unicode_127061 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1301, 4), 'unicode', u'savefig.edgecolor')

# Obtaining an instance of the builtin type 'list' (line 1301)
list_127062 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1301, 27), 'list')
# Adding type elements to the builtin type 'list' instance (line 1301)
# Adding element type (line 1301)
unicode_127063 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1301, 28), 'unicode', u'w')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1301, 27), list_127062, unicode_127063)
# Adding element type (line 1301)
# Getting the type of 'validate_color' (line 1301)
validate_color_127064 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1301, 33), 'validate_color')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1301, 27), list_127062, validate_color_127064)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127061, list_127062))
# Adding element type (key, value) (line 940)
unicode_127065 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1302, 4), 'unicode', u'savefig.frameon')

# Obtaining an instance of the builtin type 'list' (line 1302)
list_127066 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1302, 27), 'list')
# Adding type elements to the builtin type 'list' instance (line 1302)
# Adding element type (line 1302)
# Getting the type of 'True' (line 1302)
True_127067 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1302, 28), 'True')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1302, 27), list_127066, True_127067)
# Adding element type (line 1302)
# Getting the type of 'validate_bool' (line 1302)
validate_bool_127068 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1302, 34), 'validate_bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1302, 27), list_127066, validate_bool_127068)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127065, list_127066))
# Adding element type (key, value) (line 940)
unicode_127069 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1303, 4), 'unicode', u'savefig.orientation')

# Obtaining an instance of the builtin type 'list' (line 1303)
list_127070 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1303, 27), 'list')
# Adding type elements to the builtin type 'list' instance (line 1303)
# Adding element type (line 1303)
unicode_127071 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1303, 28), 'unicode', u'portrait')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1303, 27), list_127070, unicode_127071)
# Adding element type (line 1303)
# Getting the type of 'validate_orientation' (line 1303)
validate_orientation_127072 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1303, 40), 'validate_orientation')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1303, 27), list_127070, validate_orientation_127072)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127069, list_127070))
# Adding element type (key, value) (line 940)
unicode_127073 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1305, 4), 'unicode', u'savefig.jpeg_quality')

# Obtaining an instance of the builtin type 'list' (line 1305)
list_127074 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1305, 28), 'list')
# Adding type elements to the builtin type 'list' instance (line 1305)
# Adding element type (line 1305)
int_127075 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1305, 29), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1305, 28), list_127074, int_127075)
# Adding element type (line 1305)
# Getting the type of 'validate_int' (line 1305)
validate_int_127076 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1305, 33), 'validate_int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1305, 28), list_127074, validate_int_127076)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127073, list_127074))
# Adding element type (key, value) (line 940)
unicode_127077 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1307, 4), 'unicode', u'savefig.format')

# Obtaining an instance of the builtin type 'list' (line 1307)
list_127078 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1307, 26), 'list')
# Adding type elements to the builtin type 'list' instance (line 1307)
# Adding element type (line 1307)
unicode_127079 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1307, 27), 'unicode', u'png')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1307, 26), list_127078, unicode_127079)
# Adding element type (line 1307)
# Getting the type of 'update_savefig_format' (line 1307)
update_savefig_format_127080 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1307, 34), 'update_savefig_format')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1307, 26), list_127078, update_savefig_format_127080)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127077, list_127078))
# Adding element type (key, value) (line 940)
unicode_127081 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1309, 4), 'unicode', u'savefig.bbox')

# Obtaining an instance of the builtin type 'list' (line 1309)
list_127082 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1309, 26), 'list')
# Adding type elements to the builtin type 'list' instance (line 1309)
# Adding element type (line 1309)
unicode_127083 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1309, 27), 'unicode', u'standard')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1309, 26), list_127082, unicode_127083)
# Adding element type (line 1309)
# Getting the type of 'validate_bbox' (line 1309)
validate_bbox_127084 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1309, 39), 'validate_bbox')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1309, 26), list_127082, validate_bbox_127084)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127081, list_127082))
# Adding element type (key, value) (line 940)
unicode_127085 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1310, 4), 'unicode', u'savefig.pad_inches')

# Obtaining an instance of the builtin type 'list' (line 1310)
list_127086 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1310, 26), 'list')
# Adding type elements to the builtin type 'list' instance (line 1310)
# Adding element type (line 1310)
float_127087 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1310, 27), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1310, 26), list_127086, float_127087)
# Adding element type (line 1310)
# Getting the type of 'validate_float' (line 1310)
validate_float_127088 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1310, 32), 'validate_float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1310, 26), list_127086, validate_float_127088)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127085, list_127086))
# Adding element type (key, value) (line 940)
unicode_127089 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1312, 4), 'unicode', u'savefig.directory')

# Obtaining an instance of the builtin type 'list' (line 1312)
list_127090 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1312, 25), 'list')
# Adding type elements to the builtin type 'list' instance (line 1312)
# Adding element type (line 1312)
unicode_127091 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1312, 26), 'unicode', u'~')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1312, 25), list_127090, unicode_127091)
# Adding element type (line 1312)
# Getting the type of 'six' (line 1312)
six_127092 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1312, 31), 'six')
# Obtaining the member 'text_type' of a type (line 1312)
text_type_127093 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1312, 31), six_127092, 'text_type')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1312, 25), list_127090, text_type_127093)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127089, list_127090))
# Adding element type (key, value) (line 940)
unicode_127094 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1313, 4), 'unicode', u'savefig.transparent')

# Obtaining an instance of the builtin type 'list' (line 1313)
list_127095 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1313, 27), 'list')
# Adding type elements to the builtin type 'list' instance (line 1313)
# Adding element type (line 1313)
# Getting the type of 'False' (line 1313)
False_127096 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1313, 28), 'False')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1313, 27), list_127095, False_127096)
# Adding element type (line 1313)
# Getting the type of 'validate_bool' (line 1313)
validate_bool_127097 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1313, 35), 'validate_bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1313, 27), list_127095, validate_bool_127097)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127094, list_127095))
# Adding element type (key, value) (line 940)
unicode_127098 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1316, 4), 'unicode', u'tk.window_focus')

# Obtaining an instance of the builtin type 'list' (line 1316)
list_127099 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1316, 24), 'list')
# Adding type elements to the builtin type 'list' instance (line 1316)
# Adding element type (line 1316)
# Getting the type of 'False' (line 1316)
False_127100 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1316, 25), 'False')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1316, 24), list_127099, False_127100)
# Adding element type (line 1316)
# Getting the type of 'validate_bool' (line 1316)
validate_bool_127101 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1316, 32), 'validate_bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1316, 24), list_127099, validate_bool_127101)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127098, list_127099))
# Adding element type (key, value) (line 940)
unicode_127102 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1319, 4), 'unicode', u'ps.papersize')

# Obtaining an instance of the builtin type 'list' (line 1319)
list_127103 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1319, 24), 'list')
# Adding type elements to the builtin type 'list' instance (line 1319)
# Adding element type (line 1319)
unicode_127104 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1319, 25), 'unicode', u'letter')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1319, 24), list_127103, unicode_127104)
# Adding element type (line 1319)
# Getting the type of 'validate_ps_papersize' (line 1319)
validate_ps_papersize_127105 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1319, 35), 'validate_ps_papersize')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1319, 24), list_127103, validate_ps_papersize_127105)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127102, list_127103))
# Adding element type (key, value) (line 940)
unicode_127106 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1320, 4), 'unicode', u'ps.useafm')

# Obtaining an instance of the builtin type 'list' (line 1320)
list_127107 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1320, 24), 'list')
# Adding type elements to the builtin type 'list' instance (line 1320)
# Adding element type (line 1320)
# Getting the type of 'False' (line 1320)
False_127108 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1320, 25), 'False')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1320, 24), list_127107, False_127108)
# Adding element type (line 1320)
# Getting the type of 'validate_bool' (line 1320)
validate_bool_127109 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1320, 32), 'validate_bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1320, 24), list_127107, validate_bool_127109)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127106, list_127107))
# Adding element type (key, value) (line 940)
unicode_127110 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1322, 4), 'unicode', u'ps.usedistiller')

# Obtaining an instance of the builtin type 'list' (line 1322)
list_127111 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1322, 24), 'list')
# Adding type elements to the builtin type 'list' instance (line 1322)
# Adding element type (line 1322)
# Getting the type of 'False' (line 1322)
False_127112 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1322, 25), 'False')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1322, 24), list_127111, False_127112)
# Adding element type (line 1322)
# Getting the type of 'validate_ps_distiller' (line 1322)
validate_ps_distiller_127113 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1322, 32), 'validate_ps_distiller')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1322, 24), list_127111, validate_ps_distiller_127113)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127110, list_127111))
# Adding element type (key, value) (line 940)
unicode_127114 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1323, 4), 'unicode', u'ps.distiller.res')

# Obtaining an instance of the builtin type 'list' (line 1323)
list_127115 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1323, 24), 'list')
# Adding type elements to the builtin type 'list' instance (line 1323)
# Adding element type (line 1323)
int_127116 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1323, 25), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1323, 24), list_127115, int_127116)
# Adding element type (line 1323)
# Getting the type of 'validate_int' (line 1323)
validate_int_127117 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1323, 31), 'validate_int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1323, 24), list_127115, validate_int_127117)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127114, list_127115))
# Adding element type (key, value) (line 940)
unicode_127118 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1324, 4), 'unicode', u'ps.fonttype')

# Obtaining an instance of the builtin type 'list' (line 1324)
list_127119 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1324, 24), 'list')
# Adding type elements to the builtin type 'list' instance (line 1324)
# Adding element type (line 1324)
int_127120 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1324, 25), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1324, 24), list_127119, int_127120)
# Adding element type (line 1324)
# Getting the type of 'validate_fonttype' (line 1324)
validate_fonttype_127121 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1324, 28), 'validate_fonttype')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1324, 24), list_127119, validate_fonttype_127121)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127118, list_127119))
# Adding element type (key, value) (line 940)
unicode_127122 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1326, 4), 'unicode', u'pdf.compression')

# Obtaining an instance of the builtin type 'list' (line 1326)
list_127123 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1326, 24), 'list')
# Adding type elements to the builtin type 'list' instance (line 1326)
# Adding element type (line 1326)
int_127124 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1326, 25), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1326, 24), list_127123, int_127124)
# Adding element type (line 1326)
# Getting the type of 'validate_int' (line 1326)
validate_int_127125 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1326, 28), 'validate_int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1326, 24), list_127123, validate_int_127125)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127122, list_127123))
# Adding element type (key, value) (line 940)
unicode_127126 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1328, 4), 'unicode', u'pdf.inheritcolor')

# Obtaining an instance of the builtin type 'list' (line 1328)
list_127127 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1328, 24), 'list')
# Adding type elements to the builtin type 'list' instance (line 1328)
# Adding element type (line 1328)
# Getting the type of 'False' (line 1328)
False_127128 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1328, 25), 'False')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1328, 24), list_127127, False_127128)
# Adding element type (line 1328)
# Getting the type of 'validate_bool' (line 1328)
validate_bool_127129 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1328, 32), 'validate_bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1328, 24), list_127127, validate_bool_127129)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127126, list_127127))
# Adding element type (key, value) (line 940)
unicode_127130 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1330, 4), 'unicode', u'pdf.use14corefonts')

# Obtaining an instance of the builtin type 'list' (line 1330)
list_127131 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1330, 26), 'list')
# Adding type elements to the builtin type 'list' instance (line 1330)
# Adding element type (line 1330)
# Getting the type of 'False' (line 1330)
False_127132 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1330, 27), 'False')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1330, 26), list_127131, False_127132)
# Adding element type (line 1330)
# Getting the type of 'validate_bool' (line 1330)
validate_bool_127133 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1330, 34), 'validate_bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1330, 26), list_127131, validate_bool_127133)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127130, list_127131))
# Adding element type (key, value) (line 940)
unicode_127134 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1331, 4), 'unicode', u'pdf.fonttype')

# Obtaining an instance of the builtin type 'list' (line 1331)
list_127135 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1331, 24), 'list')
# Adding type elements to the builtin type 'list' instance (line 1331)
# Adding element type (line 1331)
int_127136 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1331, 25), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1331, 24), list_127135, int_127136)
# Adding element type (line 1331)
# Getting the type of 'validate_fonttype' (line 1331)
validate_fonttype_127137 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1331, 28), 'validate_fonttype')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1331, 24), list_127135, validate_fonttype_127137)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127134, list_127135))
# Adding element type (key, value) (line 940)
unicode_127138 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1333, 4), 'unicode', u'pgf.debug')

# Obtaining an instance of the builtin type 'list' (line 1333)
list_127139 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1333, 21), 'list')
# Adding type elements to the builtin type 'list' instance (line 1333)
# Adding element type (line 1333)
# Getting the type of 'False' (line 1333)
False_127140 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1333, 22), 'False')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1333, 21), list_127139, False_127140)
# Adding element type (line 1333)
# Getting the type of 'validate_bool' (line 1333)
validate_bool_127141 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1333, 29), 'validate_bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1333, 21), list_127139, validate_bool_127141)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127138, list_127139))
# Adding element type (key, value) (line 940)
unicode_127142 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1335, 4), 'unicode', u'pgf.texsystem')

# Obtaining an instance of the builtin type 'list' (line 1335)
list_127143 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1335, 21), 'list')
# Adding type elements to the builtin type 'list' instance (line 1335)
# Adding element type (line 1335)
unicode_127144 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1335, 22), 'unicode', u'xelatex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1335, 21), list_127143, unicode_127144)
# Adding element type (line 1335)
# Getting the type of 'validate_pgf_texsystem' (line 1335)
validate_pgf_texsystem_127145 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1335, 33), 'validate_pgf_texsystem')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1335, 21), list_127143, validate_pgf_texsystem_127145)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127142, list_127143))
# Adding element type (key, value) (line 940)
unicode_127146 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1337, 4), 'unicode', u'pgf.rcfonts')

# Obtaining an instance of the builtin type 'list' (line 1337)
list_127147 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1337, 21), 'list')
# Adding type elements to the builtin type 'list' instance (line 1337)
# Adding element type (line 1337)
# Getting the type of 'True' (line 1337)
True_127148 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1337, 22), 'True')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1337, 21), list_127147, True_127148)
# Adding element type (line 1337)
# Getting the type of 'validate_bool' (line 1337)
validate_bool_127149 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1337, 28), 'validate_bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1337, 21), list_127147, validate_bool_127149)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127146, list_127147))
# Adding element type (key, value) (line 940)
unicode_127150 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1339, 4), 'unicode', u'pgf.preamble')

# Obtaining an instance of the builtin type 'list' (line 1339)
list_127151 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1339, 21), 'list')
# Adding type elements to the builtin type 'list' instance (line 1339)
# Adding element type (line 1339)

# Obtaining an instance of the builtin type 'list' (line 1339)
list_127152 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1339, 22), 'list')
# Adding type elements to the builtin type 'list' instance (line 1339)
# Adding element type (line 1339)
unicode_127153 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1339, 23), 'unicode', u'')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1339, 22), list_127152, unicode_127153)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1339, 21), list_127151, list_127152)
# Adding element type (line 1339)
# Getting the type of 'validate_stringlist' (line 1339)
validate_stringlist_127154 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1339, 28), 'validate_stringlist')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1339, 21), list_127151, validate_stringlist_127154)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127150, list_127151))
# Adding element type (key, value) (line 940)
unicode_127155 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1342, 4), 'unicode', u'svg.image_inline')

# Obtaining an instance of the builtin type 'list' (line 1342)
list_127156 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1342, 28), 'list')
# Adding type elements to the builtin type 'list' instance (line 1342)
# Adding element type (line 1342)
# Getting the type of 'True' (line 1342)
True_127157 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1342, 29), 'True')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1342, 28), list_127156, True_127157)
# Adding element type (line 1342)
# Getting the type of 'validate_bool' (line 1342)
validate_bool_127158 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1342, 35), 'validate_bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1342, 28), list_127156, validate_bool_127158)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127155, list_127156))
# Adding element type (key, value) (line 940)
unicode_127159 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1344, 4), 'unicode', u'svg.image_noscale')

# Obtaining an instance of the builtin type 'list' (line 1344)
list_127160 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1344, 28), 'list')
# Adding type elements to the builtin type 'list' instance (line 1344)
# Adding element type (line 1344)
# Getting the type of 'False' (line 1344)
False_127161 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1344, 29), 'False')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1344, 28), list_127160, False_127161)
# Adding element type (line 1344)
# Getting the type of 'deprecate_svg_image_noscale' (line 1344)
deprecate_svg_image_noscale_127162 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1344, 36), 'deprecate_svg_image_noscale')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1344, 28), list_127160, deprecate_svg_image_noscale_127162)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127159, list_127160))
# Adding element type (key, value) (line 940)
unicode_127163 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1346, 4), 'unicode', u'svg.embed_char_paths')

# Obtaining an instance of the builtin type 'list' (line 1346)
list_127164 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1346, 28), 'list')
# Adding type elements to the builtin type 'list' instance (line 1346)
# Adding element type (line 1346)
# Getting the type of 'True' (line 1346)
True_127165 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1346, 29), 'True')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1346, 28), list_127164, True_127165)
# Adding element type (line 1346)
# Getting the type of 'deprecate_svg_embed_char_paths' (line 1346)
deprecate_svg_embed_char_paths_127166 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1346, 35), 'deprecate_svg_embed_char_paths')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1346, 28), list_127164, deprecate_svg_embed_char_paths_127166)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127163, list_127164))
# Adding element type (key, value) (line 940)
unicode_127167 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1347, 4), 'unicode', u'svg.fonttype')

# Obtaining an instance of the builtin type 'list' (line 1347)
list_127168 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1347, 28), 'list')
# Adding type elements to the builtin type 'list' instance (line 1347)
# Adding element type (line 1347)
unicode_127169 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1347, 29), 'unicode', u'path')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1347, 28), list_127168, unicode_127169)
# Adding element type (line 1347)
# Getting the type of 'validate_svg_fonttype' (line 1347)
validate_svg_fonttype_127170 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1347, 37), 'validate_svg_fonttype')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1347, 28), list_127168, validate_svg_fonttype_127170)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127167, list_127168))
# Adding element type (key, value) (line 940)
unicode_127171 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1348, 4), 'unicode', u'svg.hashsalt')

# Obtaining an instance of the builtin type 'list' (line 1348)
list_127172 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1348, 28), 'list')
# Adding type elements to the builtin type 'list' instance (line 1348)
# Adding element type (line 1348)
# Getting the type of 'None' (line 1348)
None_127173 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1348, 29), 'None')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1348, 28), list_127172, None_127173)
# Adding element type (line 1348)
# Getting the type of 'validate_string_or_None' (line 1348)
validate_string_or_None_127174 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1348, 35), 'validate_string_or_None')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1348, 28), list_127172, validate_string_or_None_127174)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127171, list_127172))
# Adding element type (key, value) (line 940)
unicode_127175 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1351, 4), 'unicode', u'docstring.hardcopy')

# Obtaining an instance of the builtin type 'list' (line 1351)
list_127176 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1351, 26), 'list')
# Adding type elements to the builtin type 'list' instance (line 1351)
# Adding element type (line 1351)
# Getting the type of 'False' (line 1351)
False_127177 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1351, 27), 'False')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1351, 26), list_127176, False_127177)
# Adding element type (line 1351)
# Getting the type of 'validate_bool' (line 1351)
validate_bool_127178 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1351, 34), 'validate_bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1351, 26), list_127176, validate_bool_127178)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127175, list_127176))
# Adding element type (key, value) (line 940)
unicode_127179 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1353, 4), 'unicode', u'plugins.directory')

# Obtaining an instance of the builtin type 'list' (line 1353)
list_127180 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1353, 26), 'list')
# Adding type elements to the builtin type 'list' instance (line 1353)
# Adding element type (line 1353)
unicode_127181 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1353, 27), 'unicode', u'.matplotlib_plugins')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1353, 26), list_127180, unicode_127181)
# Adding element type (line 1353)
# Getting the type of 'six' (line 1353)
six_127182 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1353, 50), 'six')
# Obtaining the member 'text_type' of a type (line 1353)
text_type_127183 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1353, 50), six_127182, 'text_type')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1353, 26), list_127180, text_type_127183)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127179, list_127180))
# Adding element type (key, value) (line 940)
unicode_127184 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1355, 4), 'unicode', u'path.simplify')

# Obtaining an instance of the builtin type 'list' (line 1355)
list_127185 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1355, 21), 'list')
# Adding type elements to the builtin type 'list' instance (line 1355)
# Adding element type (line 1355)
# Getting the type of 'True' (line 1355)
True_127186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1355, 22), 'True')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1355, 21), list_127185, True_127186)
# Adding element type (line 1355)
# Getting the type of 'validate_bool' (line 1355)
validate_bool_127187 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1355, 28), 'validate_bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1355, 21), list_127185, validate_bool_127187)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127184, list_127185))
# Adding element type (key, value) (line 940)
unicode_127188 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1356, 4), 'unicode', u'path.simplify_threshold')

# Obtaining an instance of the builtin type 'list' (line 1356)
list_127189 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1356, 31), 'list')
# Adding type elements to the builtin type 'list' instance (line 1356)
# Adding element type (line 1356)
float_127190 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1356, 32), 'float')
float_127191 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1356, 38), 'float')
# Applying the binary operator 'div' (line 1356)
result_div_127192 = python_operator(stypy.reporting.localization.Localization(__file__, 1356, 32), 'div', float_127190, float_127191)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1356, 31), list_127189, result_div_127192)
# Adding element type (line 1356)

# Call to ValidateInterval(...): (line 1356)
# Processing the call arguments (line 1356)
float_127194 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1356, 60), 'float')
float_127195 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1356, 65), 'float')
# Processing the call keyword arguments (line 1356)
kwargs_127196 = {}
# Getting the type of 'ValidateInterval' (line 1356)
ValidateInterval_127193 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1356, 43), 'ValidateInterval', False)
# Calling ValidateInterval(args, kwargs) (line 1356)
ValidateInterval_call_result_127197 = invoke(stypy.reporting.localization.Localization(__file__, 1356, 43), ValidateInterval_127193, *[float_127194, float_127195], **kwargs_127196)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1356, 31), list_127189, ValidateInterval_call_result_127197)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127188, list_127189))
# Adding element type (key, value) (line 940)
unicode_127198 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1357, 4), 'unicode', u'path.snap')

# Obtaining an instance of the builtin type 'list' (line 1357)
list_127199 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1357, 17), 'list')
# Adding type elements to the builtin type 'list' instance (line 1357)
# Adding element type (line 1357)
# Getting the type of 'True' (line 1357)
True_127200 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1357, 18), 'True')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1357, 17), list_127199, True_127200)
# Adding element type (line 1357)
# Getting the type of 'validate_bool' (line 1357)
validate_bool_127201 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1357, 24), 'validate_bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1357, 17), list_127199, validate_bool_127201)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127198, list_127199))
# Adding element type (key, value) (line 940)
unicode_127202 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1358, 4), 'unicode', u'path.sketch')

# Obtaining an instance of the builtin type 'list' (line 1358)
list_127203 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1358, 19), 'list')
# Adding type elements to the builtin type 'list' instance (line 1358)
# Adding element type (line 1358)
# Getting the type of 'None' (line 1358)
None_127204 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1358, 20), 'None')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1358, 19), list_127203, None_127204)
# Adding element type (line 1358)
# Getting the type of 'validate_sketch' (line 1358)
validate_sketch_127205 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1358, 26), 'validate_sketch')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1358, 19), list_127203, validate_sketch_127205)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127202, list_127203))
# Adding element type (key, value) (line 940)
unicode_127206 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1359, 4), 'unicode', u'path.effects')

# Obtaining an instance of the builtin type 'list' (line 1359)
list_127207 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1359, 20), 'list')
# Adding type elements to the builtin type 'list' instance (line 1359)
# Adding element type (line 1359)

# Obtaining an instance of the builtin type 'list' (line 1359)
list_127208 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1359, 21), 'list')
# Adding type elements to the builtin type 'list' instance (line 1359)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1359, 20), list_127207, list_127208)
# Adding element type (line 1359)
# Getting the type of 'validate_any' (line 1359)
validate_any_127209 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1359, 25), 'validate_any')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1359, 20), list_127207, validate_any_127209)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127206, list_127207))
# Adding element type (key, value) (line 940)
unicode_127210 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1360, 4), 'unicode', u'agg.path.chunksize')

# Obtaining an instance of the builtin type 'list' (line 1360)
list_127211 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1360, 26), 'list')
# Adding type elements to the builtin type 'list' instance (line 1360)
# Adding element type (line 1360)
int_127212 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1360, 27), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1360, 26), list_127211, int_127212)
# Adding element type (line 1360)
# Getting the type of 'validate_int' (line 1360)
validate_int_127213 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1360, 30), 'validate_int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1360, 26), list_127211, validate_int_127213)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127210, list_127211))
# Adding element type (key, value) (line 940)
unicode_127214 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1363, 4), 'unicode', u'keymap.fullscreen')

# Obtaining an instance of the builtin type 'list' (line 1363)
list_127215 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1363, 27), 'list')
# Adding type elements to the builtin type 'list' instance (line 1363)
# Adding element type (line 1363)

# Obtaining an instance of the builtin type 'tuple' (line 1363)
tuple_127216 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1363, 29), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 1363)
# Adding element type (line 1363)
unicode_127217 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1363, 29), 'unicode', u'f')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1363, 29), tuple_127216, unicode_127217)
# Adding element type (line 1363)
unicode_127218 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1363, 34), 'unicode', u'ctrl+f')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1363, 29), tuple_127216, unicode_127218)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1363, 27), list_127215, tuple_127216)
# Adding element type (line 1363)
# Getting the type of 'validate_stringlist' (line 1363)
validate_stringlist_127219 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1363, 45), 'validate_stringlist')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1363, 27), list_127215, validate_stringlist_127219)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127214, list_127215))
# Adding element type (key, value) (line 940)
unicode_127220 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1364, 4), 'unicode', u'keymap.home')

# Obtaining an instance of the builtin type 'list' (line 1364)
list_127221 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1364, 27), 'list')
# Adding type elements to the builtin type 'list' instance (line 1364)
# Adding element type (line 1364)

# Obtaining an instance of the builtin type 'list' (line 1364)
list_127222 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1364, 28), 'list')
# Adding type elements to the builtin type 'list' instance (line 1364)
# Adding element type (line 1364)
unicode_127223 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1364, 29), 'unicode', u'h')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1364, 28), list_127222, unicode_127223)
# Adding element type (line 1364)
unicode_127224 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1364, 34), 'unicode', u'r')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1364, 28), list_127222, unicode_127224)
# Adding element type (line 1364)
unicode_127225 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1364, 39), 'unicode', u'home')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1364, 28), list_127222, unicode_127225)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1364, 27), list_127221, list_127222)
# Adding element type (line 1364)
# Getting the type of 'validate_stringlist' (line 1364)
validate_stringlist_127226 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1364, 48), 'validate_stringlist')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1364, 27), list_127221, validate_stringlist_127226)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127220, list_127221))
# Adding element type (key, value) (line 940)
unicode_127227 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1365, 4), 'unicode', u'keymap.back')

# Obtaining an instance of the builtin type 'list' (line 1365)
list_127228 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1365, 27), 'list')
# Adding type elements to the builtin type 'list' instance (line 1365)
# Adding element type (line 1365)

# Obtaining an instance of the builtin type 'list' (line 1365)
list_127229 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1365, 28), 'list')
# Adding type elements to the builtin type 'list' instance (line 1365)
# Adding element type (line 1365)
unicode_127230 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1365, 29), 'unicode', u'left')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1365, 28), list_127229, unicode_127230)
# Adding element type (line 1365)
unicode_127231 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1365, 37), 'unicode', u'c')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1365, 28), list_127229, unicode_127231)
# Adding element type (line 1365)
unicode_127232 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1365, 42), 'unicode', u'backspace')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1365, 28), list_127229, unicode_127232)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1365, 27), list_127228, list_127229)
# Adding element type (line 1365)
# Getting the type of 'validate_stringlist' (line 1365)
validate_stringlist_127233 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1365, 56), 'validate_stringlist')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1365, 27), list_127228, validate_stringlist_127233)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127227, list_127228))
# Adding element type (key, value) (line 940)
unicode_127234 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1366, 4), 'unicode', u'keymap.forward')

# Obtaining an instance of the builtin type 'list' (line 1366)
list_127235 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1366, 27), 'list')
# Adding type elements to the builtin type 'list' instance (line 1366)
# Adding element type (line 1366)

# Obtaining an instance of the builtin type 'list' (line 1366)
list_127236 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1366, 28), 'list')
# Adding type elements to the builtin type 'list' instance (line 1366)
# Adding element type (line 1366)
unicode_127237 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1366, 29), 'unicode', u'right')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1366, 28), list_127236, unicode_127237)
# Adding element type (line 1366)
unicode_127238 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1366, 38), 'unicode', u'v')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1366, 28), list_127236, unicode_127238)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1366, 27), list_127235, list_127236)
# Adding element type (line 1366)
# Getting the type of 'validate_stringlist' (line 1366)
validate_stringlist_127239 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1366, 44), 'validate_stringlist')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1366, 27), list_127235, validate_stringlist_127239)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127234, list_127235))
# Adding element type (key, value) (line 940)
unicode_127240 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1367, 4), 'unicode', u'keymap.pan')

# Obtaining an instance of the builtin type 'list' (line 1367)
list_127241 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1367, 27), 'list')
# Adding type elements to the builtin type 'list' instance (line 1367)
# Adding element type (line 1367)

# Obtaining an instance of the builtin type 'list' (line 1367)
list_127242 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1367, 28), 'list')
# Adding type elements to the builtin type 'list' instance (line 1367)
# Adding element type (line 1367)
unicode_127243 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1367, 29), 'unicode', u'p')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1367, 28), list_127242, unicode_127243)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1367, 27), list_127241, list_127242)
# Adding element type (line 1367)
# Getting the type of 'validate_stringlist' (line 1367)
validate_stringlist_127244 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1367, 35), 'validate_stringlist')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1367, 27), list_127241, validate_stringlist_127244)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127240, list_127241))
# Adding element type (key, value) (line 940)
unicode_127245 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1368, 4), 'unicode', u'keymap.zoom')

# Obtaining an instance of the builtin type 'list' (line 1368)
list_127246 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1368, 27), 'list')
# Adding type elements to the builtin type 'list' instance (line 1368)
# Adding element type (line 1368)

# Obtaining an instance of the builtin type 'list' (line 1368)
list_127247 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1368, 28), 'list')
# Adding type elements to the builtin type 'list' instance (line 1368)
# Adding element type (line 1368)
unicode_127248 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1368, 29), 'unicode', u'o')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1368, 28), list_127247, unicode_127248)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1368, 27), list_127246, list_127247)
# Adding element type (line 1368)
# Getting the type of 'validate_stringlist' (line 1368)
validate_stringlist_127249 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1368, 35), 'validate_stringlist')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1368, 27), list_127246, validate_stringlist_127249)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127245, list_127246))
# Adding element type (key, value) (line 940)
unicode_127250 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1369, 4), 'unicode', u'keymap.save')

# Obtaining an instance of the builtin type 'list' (line 1369)
list_127251 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1369, 27), 'list')
# Adding type elements to the builtin type 'list' instance (line 1369)
# Adding element type (line 1369)

# Obtaining an instance of the builtin type 'list' (line 1369)
list_127252 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1369, 28), 'list')
# Adding type elements to the builtin type 'list' instance (line 1369)
# Adding element type (line 1369)
unicode_127253 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1369, 29), 'unicode', u's')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1369, 28), list_127252, unicode_127253)
# Adding element type (line 1369)
unicode_127254 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1369, 34), 'unicode', u'ctrl+s')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1369, 28), list_127252, unicode_127254)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1369, 27), list_127251, list_127252)
# Adding element type (line 1369)
# Getting the type of 'validate_stringlist' (line 1369)
validate_stringlist_127255 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1369, 45), 'validate_stringlist')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1369, 27), list_127251, validate_stringlist_127255)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127250, list_127251))
# Adding element type (key, value) (line 940)
unicode_127256 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1370, 4), 'unicode', u'keymap.quit')

# Obtaining an instance of the builtin type 'list' (line 1370)
list_127257 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1370, 27), 'list')
# Adding type elements to the builtin type 'list' instance (line 1370)
# Adding element type (line 1370)

# Obtaining an instance of the builtin type 'list' (line 1370)
list_127258 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1370, 28), 'list')
# Adding type elements to the builtin type 'list' instance (line 1370)
# Adding element type (line 1370)
unicode_127259 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1370, 29), 'unicode', u'ctrl+w')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1370, 28), list_127258, unicode_127259)
# Adding element type (line 1370)
unicode_127260 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1370, 39), 'unicode', u'cmd+w')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1370, 28), list_127258, unicode_127260)
# Adding element type (line 1370)
unicode_127261 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1370, 48), 'unicode', u'q')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1370, 28), list_127258, unicode_127261)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1370, 27), list_127257, list_127258)
# Adding element type (line 1370)
# Getting the type of 'validate_stringlist' (line 1370)
validate_stringlist_127262 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1370, 54), 'validate_stringlist')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1370, 27), list_127257, validate_stringlist_127262)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127256, list_127257))
# Adding element type (key, value) (line 940)
unicode_127263 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1371, 4), 'unicode', u'keymap.quit_all')

# Obtaining an instance of the builtin type 'list' (line 1371)
list_127264 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1371, 27), 'list')
# Adding type elements to the builtin type 'list' instance (line 1371)
# Adding element type (line 1371)

# Obtaining an instance of the builtin type 'list' (line 1371)
list_127265 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1371, 28), 'list')
# Adding type elements to the builtin type 'list' instance (line 1371)
# Adding element type (line 1371)
unicode_127266 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1371, 29), 'unicode', u'W')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1371, 28), list_127265, unicode_127266)
# Adding element type (line 1371)
unicode_127267 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1371, 34), 'unicode', u'cmd+W')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1371, 28), list_127265, unicode_127267)
# Adding element type (line 1371)
unicode_127268 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1371, 43), 'unicode', u'Q')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1371, 28), list_127265, unicode_127268)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1371, 27), list_127264, list_127265)
# Adding element type (line 1371)
# Getting the type of 'validate_stringlist' (line 1371)
validate_stringlist_127269 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1371, 49), 'validate_stringlist')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1371, 27), list_127264, validate_stringlist_127269)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127263, list_127264))
# Adding element type (key, value) (line 940)
unicode_127270 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1372, 4), 'unicode', u'keymap.grid')

# Obtaining an instance of the builtin type 'list' (line 1372)
list_127271 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1372, 27), 'list')
# Adding type elements to the builtin type 'list' instance (line 1372)
# Adding element type (line 1372)

# Obtaining an instance of the builtin type 'list' (line 1372)
list_127272 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1372, 28), 'list')
# Adding type elements to the builtin type 'list' instance (line 1372)
# Adding element type (line 1372)
unicode_127273 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1372, 29), 'unicode', u'g')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1372, 28), list_127272, unicode_127273)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1372, 27), list_127271, list_127272)
# Adding element type (line 1372)
# Getting the type of 'validate_stringlist' (line 1372)
validate_stringlist_127274 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1372, 35), 'validate_stringlist')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1372, 27), list_127271, validate_stringlist_127274)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127270, list_127271))
# Adding element type (key, value) (line 940)
unicode_127275 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1373, 4), 'unicode', u'keymap.grid_minor')

# Obtaining an instance of the builtin type 'list' (line 1373)
list_127276 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1373, 27), 'list')
# Adding type elements to the builtin type 'list' instance (line 1373)
# Adding element type (line 1373)

# Obtaining an instance of the builtin type 'list' (line 1373)
list_127277 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1373, 28), 'list')
# Adding type elements to the builtin type 'list' instance (line 1373)
# Adding element type (line 1373)
unicode_127278 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1373, 29), 'unicode', u'G')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1373, 28), list_127277, unicode_127278)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1373, 27), list_127276, list_127277)
# Adding element type (line 1373)
# Getting the type of 'validate_stringlist' (line 1373)
validate_stringlist_127279 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1373, 35), 'validate_stringlist')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1373, 27), list_127276, validate_stringlist_127279)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127275, list_127276))
# Adding element type (key, value) (line 940)
unicode_127280 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1374, 4), 'unicode', u'keymap.yscale')

# Obtaining an instance of the builtin type 'list' (line 1374)
list_127281 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1374, 27), 'list')
# Adding type elements to the builtin type 'list' instance (line 1374)
# Adding element type (line 1374)

# Obtaining an instance of the builtin type 'list' (line 1374)
list_127282 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1374, 28), 'list')
# Adding type elements to the builtin type 'list' instance (line 1374)
# Adding element type (line 1374)
unicode_127283 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1374, 29), 'unicode', u'l')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1374, 28), list_127282, unicode_127283)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1374, 27), list_127281, list_127282)
# Adding element type (line 1374)
# Getting the type of 'validate_stringlist' (line 1374)
validate_stringlist_127284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1374, 35), 'validate_stringlist')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1374, 27), list_127281, validate_stringlist_127284)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127280, list_127281))
# Adding element type (key, value) (line 940)
unicode_127285 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1375, 4), 'unicode', u'keymap.xscale')

# Obtaining an instance of the builtin type 'list' (line 1375)
list_127286 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1375, 27), 'list')
# Adding type elements to the builtin type 'list' instance (line 1375)
# Adding element type (line 1375)

# Obtaining an instance of the builtin type 'list' (line 1375)
list_127287 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1375, 28), 'list')
# Adding type elements to the builtin type 'list' instance (line 1375)
# Adding element type (line 1375)
unicode_127288 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1375, 29), 'unicode', u'k')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1375, 28), list_127287, unicode_127288)
# Adding element type (line 1375)
unicode_127289 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1375, 34), 'unicode', u'L')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1375, 28), list_127287, unicode_127289)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1375, 27), list_127286, list_127287)
# Adding element type (line 1375)
# Getting the type of 'validate_stringlist' (line 1375)
validate_stringlist_127290 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1375, 40), 'validate_stringlist')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1375, 27), list_127286, validate_stringlist_127290)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127285, list_127286))
# Adding element type (key, value) (line 940)
unicode_127291 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1376, 4), 'unicode', u'keymap.all_axes')

# Obtaining an instance of the builtin type 'list' (line 1376)
list_127292 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1376, 27), 'list')
# Adding type elements to the builtin type 'list' instance (line 1376)
# Adding element type (line 1376)

# Obtaining an instance of the builtin type 'list' (line 1376)
list_127293 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1376, 28), 'list')
# Adding type elements to the builtin type 'list' instance (line 1376)
# Adding element type (line 1376)
unicode_127294 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1376, 29), 'unicode', u'a')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1376, 28), list_127293, unicode_127294)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1376, 27), list_127292, list_127293)
# Adding element type (line 1376)
# Getting the type of 'validate_stringlist' (line 1376)
validate_stringlist_127295 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1376, 35), 'validate_stringlist')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1376, 27), list_127292, validate_stringlist_127295)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127291, list_127292))
# Adding element type (key, value) (line 940)
unicode_127296 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1379, 4), 'unicode', u'examples.directory')

# Obtaining an instance of the builtin type 'list' (line 1379)
list_127297 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1379, 26), 'list')
# Adding type elements to the builtin type 'list' instance (line 1379)
# Adding element type (line 1379)
unicode_127298 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1379, 27), 'unicode', u'')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1379, 26), list_127297, unicode_127298)
# Adding element type (line 1379)
# Getting the type of 'six' (line 1379)
six_127299 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1379, 31), 'six')
# Obtaining the member 'text_type' of a type (line 1379)
text_type_127300 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1379, 31), six_127299, 'text_type')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1379, 26), list_127297, text_type_127300)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127296, list_127297))
# Adding element type (key, value) (line 940)
unicode_127301 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1382, 4), 'unicode', u'animation.html')

# Obtaining an instance of the builtin type 'list' (line 1382)
list_127302 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1382, 30), 'list')
# Adding type elements to the builtin type 'list' instance (line 1382)
# Adding element type (line 1382)
unicode_127303 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1382, 31), 'unicode', u'none')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1382, 30), list_127302, unicode_127303)
# Adding element type (line 1382)
# Getting the type of 'validate_movie_html_fmt' (line 1382)
validate_movie_html_fmt_127304 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1382, 39), 'validate_movie_html_fmt')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1382, 30), list_127302, validate_movie_html_fmt_127304)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127301, list_127302))
# Adding element type (key, value) (line 940)
unicode_127305 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1385, 4), 'unicode', u'animation.embed_limit')

# Obtaining an instance of the builtin type 'list' (line 1385)
list_127306 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1385, 30), 'list')
# Adding type elements to the builtin type 'list' instance (line 1385)
# Adding element type (line 1385)
int_127307 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1385, 31), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1385, 30), list_127306, int_127307)
# Adding element type (line 1385)
# Getting the type of 'validate_float' (line 1385)
validate_float_127308 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1385, 35), 'validate_float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1385, 30), list_127306, validate_float_127308)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127305, list_127306))
# Adding element type (key, value) (line 940)
unicode_127309 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1386, 4), 'unicode', u'animation.writer')

# Obtaining an instance of the builtin type 'list' (line 1386)
list_127310 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1386, 30), 'list')
# Adding type elements to the builtin type 'list' instance (line 1386)
# Adding element type (line 1386)
unicode_127311 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1386, 31), 'unicode', u'ffmpeg')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1386, 30), list_127310, unicode_127311)
# Adding element type (line 1386)
# Getting the type of 'validate_movie_writer' (line 1386)
validate_movie_writer_127312 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1386, 41), 'validate_movie_writer')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1386, 30), list_127310, validate_movie_writer_127312)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127309, list_127310))
# Adding element type (key, value) (line 940)
unicode_127313 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1387, 4), 'unicode', u'animation.codec')

# Obtaining an instance of the builtin type 'list' (line 1387)
list_127314 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1387, 30), 'list')
# Adding type elements to the builtin type 'list' instance (line 1387)
# Adding element type (line 1387)
unicode_127315 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1387, 31), 'unicode', u'h264')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1387, 30), list_127314, unicode_127315)
# Adding element type (line 1387)
# Getting the type of 'six' (line 1387)
six_127316 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1387, 39), 'six')
# Obtaining the member 'text_type' of a type (line 1387)
text_type_127317 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1387, 39), six_127316, 'text_type')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1387, 30), list_127314, text_type_127317)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127313, list_127314))
# Adding element type (key, value) (line 940)
unicode_127318 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1388, 4), 'unicode', u'animation.bitrate')

# Obtaining an instance of the builtin type 'list' (line 1388)
list_127319 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1388, 30), 'list')
# Adding type elements to the builtin type 'list' instance (line 1388)
# Adding element type (line 1388)
int_127320 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1388, 31), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1388, 30), list_127319, int_127320)
# Adding element type (line 1388)
# Getting the type of 'validate_int' (line 1388)
validate_int_127321 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1388, 35), 'validate_int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1388, 30), list_127319, validate_int_127321)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127318, list_127319))
# Adding element type (key, value) (line 940)
unicode_127322 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1390, 4), 'unicode', u'animation.frame_format')

# Obtaining an instance of the builtin type 'list' (line 1390)
list_127323 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1390, 30), 'list')
# Adding type elements to the builtin type 'list' instance (line 1390)
# Adding element type (line 1390)
unicode_127324 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1390, 31), 'unicode', u'png')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1390, 30), list_127323, unicode_127324)
# Adding element type (line 1390)
# Getting the type of 'validate_movie_frame_fmt' (line 1390)
validate_movie_frame_fmt_127325 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1390, 38), 'validate_movie_frame_fmt')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1390, 30), list_127323, validate_movie_frame_fmt_127325)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127322, list_127323))
# Adding element type (key, value) (line 940)
unicode_127326 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1392, 4), 'unicode', u'animation.html_args')

# Obtaining an instance of the builtin type 'list' (line 1392)
list_127327 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1392, 30), 'list')
# Adding type elements to the builtin type 'list' instance (line 1392)
# Adding element type (line 1392)

# Obtaining an instance of the builtin type 'list' (line 1392)
list_127328 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1392, 31), 'list')
# Adding type elements to the builtin type 'list' instance (line 1392)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1392, 30), list_127327, list_127328)
# Adding element type (line 1392)
# Getting the type of 'validate_stringlist' (line 1392)
validate_stringlist_127329 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1392, 35), 'validate_stringlist')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1392, 30), list_127327, validate_stringlist_127329)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127326, list_127327))
# Adding element type (key, value) (line 940)
unicode_127330 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1394, 4), 'unicode', u'animation.ffmpeg_path')

# Obtaining an instance of the builtin type 'list' (line 1394)
list_127331 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1394, 30), 'list')
# Adding type elements to the builtin type 'list' instance (line 1394)
# Adding element type (line 1394)
unicode_127332 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1394, 31), 'unicode', u'ffmpeg')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1394, 30), list_127331, unicode_127332)
# Adding element type (line 1394)
# Getting the type of 'validate_animation_writer_path' (line 1394)
validate_animation_writer_path_127333 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1394, 41), 'validate_animation_writer_path')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1394, 30), list_127331, validate_animation_writer_path_127333)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127330, list_127331))
# Adding element type (key, value) (line 940)
unicode_127334 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1397, 4), 'unicode', u'animation.ffmpeg_args')

# Obtaining an instance of the builtin type 'list' (line 1397)
list_127335 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1397, 31), 'list')
# Adding type elements to the builtin type 'list' instance (line 1397)
# Adding element type (line 1397)

# Obtaining an instance of the builtin type 'list' (line 1397)
list_127336 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1397, 32), 'list')
# Adding type elements to the builtin type 'list' instance (line 1397)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1397, 31), list_127335, list_127336)
# Adding element type (line 1397)
# Getting the type of 'validate_stringlist' (line 1397)
validate_stringlist_127337 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1397, 36), 'validate_stringlist')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1397, 31), list_127335, validate_stringlist_127337)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127334, list_127335))
# Adding element type (key, value) (line 940)
unicode_127338 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1399, 4), 'unicode', u'animation.avconv_path')

# Obtaining an instance of the builtin type 'list' (line 1399)
list_127339 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1399, 31), 'list')
# Adding type elements to the builtin type 'list' instance (line 1399)
# Adding element type (line 1399)
unicode_127340 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1399, 32), 'unicode', u'avconv')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1399, 31), list_127339, unicode_127340)
# Adding element type (line 1399)
# Getting the type of 'validate_animation_writer_path' (line 1399)
validate_animation_writer_path_127341 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1399, 42), 'validate_animation_writer_path')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1399, 31), list_127339, validate_animation_writer_path_127341)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127338, list_127339))
# Adding element type (key, value) (line 940)
unicode_127342 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1401, 4), 'unicode', u'animation.avconv_args')

# Obtaining an instance of the builtin type 'list' (line 1401)
list_127343 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1401, 31), 'list')
# Adding type elements to the builtin type 'list' instance (line 1401)
# Adding element type (line 1401)

# Obtaining an instance of the builtin type 'list' (line 1401)
list_127344 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1401, 32), 'list')
# Adding type elements to the builtin type 'list' instance (line 1401)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1401, 31), list_127343, list_127344)
# Adding element type (line 1401)
# Getting the type of 'validate_stringlist' (line 1401)
validate_stringlist_127345 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1401, 36), 'validate_stringlist')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1401, 31), list_127343, validate_stringlist_127345)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127342, list_127343))
# Adding element type (key, value) (line 940)
unicode_127346 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1403, 4), 'unicode', u'animation.mencoder_path')

# Obtaining an instance of the builtin type 'list' (line 1403)
list_127347 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1403, 31), 'list')
# Adding type elements to the builtin type 'list' instance (line 1403)
# Adding element type (line 1403)
unicode_127348 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1403, 32), 'unicode', u'mencoder')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1403, 31), list_127347, unicode_127348)
# Adding element type (line 1403)
# Getting the type of 'validate_animation_writer_path' (line 1403)
validate_animation_writer_path_127349 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1403, 44), 'validate_animation_writer_path')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1403, 31), list_127347, validate_animation_writer_path_127349)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127346, list_127347))
# Adding element type (key, value) (line 940)
unicode_127350 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1405, 4), 'unicode', u'animation.mencoder_args')

# Obtaining an instance of the builtin type 'list' (line 1405)
list_127351 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1405, 31), 'list')
# Adding type elements to the builtin type 'list' instance (line 1405)
# Adding element type (line 1405)

# Obtaining an instance of the builtin type 'list' (line 1405)
list_127352 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1405, 32), 'list')
# Adding type elements to the builtin type 'list' instance (line 1405)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1405, 31), list_127351, list_127352)
# Adding element type (line 1405)
# Getting the type of 'validate_stringlist' (line 1405)
validate_stringlist_127353 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1405, 36), 'validate_stringlist')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1405, 31), list_127351, validate_stringlist_127353)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127350, list_127351))
# Adding element type (key, value) (line 940)
unicode_127354 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1407, 4), 'unicode', u'animation.convert_path')

# Obtaining an instance of the builtin type 'list' (line 1407)
list_127355 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1407, 31), 'list')
# Adding type elements to the builtin type 'list' instance (line 1407)
# Adding element type (line 1407)
unicode_127356 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1407, 32), 'unicode', u'convert')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1407, 31), list_127355, unicode_127356)
# Adding element type (line 1407)
# Getting the type of 'validate_animation_writer_path' (line 1407)
validate_animation_writer_path_127357 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1407, 43), 'validate_animation_writer_path')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1407, 31), list_127355, validate_animation_writer_path_127357)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127354, list_127355))
# Adding element type (key, value) (line 940)
unicode_127358 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1410, 4), 'unicode', u'animation.convert_args')

# Obtaining an instance of the builtin type 'list' (line 1410)
list_127359 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1410, 31), 'list')
# Adding type elements to the builtin type 'list' instance (line 1410)
# Adding element type (line 1410)

# Obtaining an instance of the builtin type 'list' (line 1410)
list_127360 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1410, 32), 'list')
# Adding type elements to the builtin type 'list' instance (line 1410)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1410, 31), list_127359, list_127360)
# Adding element type (line 1410)
# Getting the type of 'validate_stringlist' (line 1410)
validate_stringlist_127361 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1410, 36), 'validate_stringlist')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1410, 31), list_127359, validate_stringlist_127361)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127358, list_127359))
# Adding element type (key, value) (line 940)
unicode_127362 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1416, 4), 'unicode', u'_internal.classic_mode')

# Obtaining an instance of the builtin type 'list' (line 1416)
list_127363 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1416, 30), 'list')
# Adding type elements to the builtin type 'list' instance (line 1416)
# Adding element type (line 1416)
# Getting the type of 'False' (line 1416)
False_127364 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1416, 31), 'False')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1416, 30), list_127363, False_127364)
# Adding element type (line 1416)
# Getting the type of 'validate_bool' (line 1416)
validate_bool_127365 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1416, 38), 'validate_bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1416, 30), list_127363, validate_bool_127365)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 16), dict_125952, (unicode_127362, list_127363))

# Assigning a type to the variable 'defaultParams' (line 940)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 940, 0), 'defaultParams', dict_125952)

if (__name__ == u'__main__'):
    
    # Assigning a Name to a Name (line 1421):
    # Getting the type of 'defaultParams' (line 1421)
    defaultParams_127366 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1421, 9), 'defaultParams')
    # Assigning a type to the variable 'rc' (line 1421)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1421, 4), 'rc', defaultParams_127366)
    
    # Assigning a Str to a Subscript (line 1422):
    unicode_127367 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1422, 24), 'unicode', u'/')
    
    # Obtaining the type of the subscript
    unicode_127368 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1422, 7), 'unicode', u'datapath')
    # Getting the type of 'rc' (line 1422)
    rc_127369 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1422, 4), 'rc')
    # Obtaining the member '__getitem__' of a type (line 1422)
    getitem___127370 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1422, 4), rc_127369, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1422)
    subscript_call_result_127371 = invoke(stypy.reporting.localization.Localization(__file__, 1422, 4), getitem___127370, unicode_127368)
    
    int_127372 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1422, 19), 'int')
    # Storing an element on a container (line 1422)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1422, 4), subscript_call_result_127371, (int_127372, unicode_127367))
    
    # Getting the type of 'rc' (line 1423)
    rc_127373 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1423, 15), 'rc')
    # Testing the type of a for loop iterable (line 1423)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1423, 4), rc_127373)
    # Getting the type of the for loop variable (line 1423)
    for_loop_var_127374 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1423, 4), rc_127373)
    # Assigning a type to the variable 'key' (line 1423)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1423, 4), 'key', for_loop_var_127374)
    # SSA begins for a for statement (line 1423)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    
    
    # Call to (...): (line 1424)
    # Processing the call arguments (line 1424)
    
    # Obtaining the type of the subscript
    int_127382 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1424, 34), 'int')
    
    # Obtaining the type of the subscript
    # Getting the type of 'key' (line 1424)
    key_127383 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1424, 29), 'key', False)
    # Getting the type of 'rc' (line 1424)
    rc_127384 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1424, 26), 'rc', False)
    # Obtaining the member '__getitem__' of a type (line 1424)
    getitem___127385 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1424, 26), rc_127384, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1424)
    subscript_call_result_127386 = invoke(stypy.reporting.localization.Localization(__file__, 1424, 26), getitem___127385, key_127383)
    
    # Obtaining the member '__getitem__' of a type (line 1424)
    getitem___127387 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1424, 26), subscript_call_result_127386, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1424)
    subscript_call_result_127388 = invoke(stypy.reporting.localization.Localization(__file__, 1424, 26), getitem___127387, int_127382)
    
    # Processing the call keyword arguments (line 1424)
    kwargs_127389 = {}
    
    # Obtaining the type of the subscript
    int_127375 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1424, 23), 'int')
    
    # Obtaining the type of the subscript
    # Getting the type of 'key' (line 1424)
    key_127376 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1424, 18), 'key', False)
    # Getting the type of 'rc' (line 1424)
    rc_127377 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1424, 15), 'rc', False)
    # Obtaining the member '__getitem__' of a type (line 1424)
    getitem___127378 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1424, 15), rc_127377, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1424)
    subscript_call_result_127379 = invoke(stypy.reporting.localization.Localization(__file__, 1424, 15), getitem___127378, key_127376)
    
    # Obtaining the member '__getitem__' of a type (line 1424)
    getitem___127380 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1424, 15), subscript_call_result_127379, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1424)
    subscript_call_result_127381 = invoke(stypy.reporting.localization.Localization(__file__, 1424, 15), getitem___127380, int_127375)
    
    # Calling (args, kwargs) (line 1424)
    _call_result_127390 = invoke(stypy.reporting.localization.Localization(__file__, 1424, 15), subscript_call_result_127381, *[subscript_call_result_127388], **kwargs_127389)
    
    
    # Obtaining the type of the subscript
    int_127391 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1424, 49), 'int')
    
    # Obtaining the type of the subscript
    # Getting the type of 'key' (line 1424)
    key_127392 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1424, 44), 'key')
    # Getting the type of 'rc' (line 1424)
    rc_127393 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1424, 41), 'rc')
    # Obtaining the member '__getitem__' of a type (line 1424)
    getitem___127394 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1424, 41), rc_127393, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1424)
    subscript_call_result_127395 = invoke(stypy.reporting.localization.Localization(__file__, 1424, 41), getitem___127394, key_127392)
    
    # Obtaining the member '__getitem__' of a type (line 1424)
    getitem___127396 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1424, 41), subscript_call_result_127395, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1424)
    subscript_call_result_127397 = invoke(stypy.reporting.localization.Localization(__file__, 1424, 41), getitem___127396, int_127391)
    
    # Applying the binary operator '==' (line 1424)
    result_eq_127398 = python_operator(stypy.reporting.localization.Localization(__file__, 1424, 15), '==', _call_result_127390, subscript_call_result_127397)
    
    # Applying the 'not' unary operator (line 1424)
    result_not__127399 = python_operator(stypy.reporting.localization.Localization(__file__, 1424, 11), 'not', result_eq_127398)
    
    # Testing the type of an if condition (line 1424)
    if_condition_127400 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1424, 8), result_not__127399)
    # Assigning a type to the variable 'if_condition_127400' (line 1424)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1424, 8), 'if_condition_127400', if_condition_127400)
    # SSA begins for if statement (line 1424)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to print(...): (line 1425)
    # Processing the call arguments (line 1425)
    unicode_127402 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1425, 18), 'unicode', u'%s: %s != %s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 1425)
    tuple_127403 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1425, 36), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1425)
    # Adding element type (line 1425)
    # Getting the type of 'key' (line 1425)
    key_127404 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1425, 36), 'key', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1425, 36), tuple_127403, key_127404)
    # Adding element type (line 1425)
    
    # Call to (...): (line 1425)
    # Processing the call arguments (line 1425)
    
    # Obtaining the type of the subscript
    int_127412 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1425, 60), 'int')
    
    # Obtaining the type of the subscript
    # Getting the type of 'key' (line 1425)
    key_127413 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1425, 55), 'key', False)
    # Getting the type of 'rc' (line 1425)
    rc_127414 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1425, 52), 'rc', False)
    # Obtaining the member '__getitem__' of a type (line 1425)
    getitem___127415 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1425, 52), rc_127414, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1425)
    subscript_call_result_127416 = invoke(stypy.reporting.localization.Localization(__file__, 1425, 52), getitem___127415, key_127413)
    
    # Obtaining the member '__getitem__' of a type (line 1425)
    getitem___127417 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1425, 52), subscript_call_result_127416, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1425)
    subscript_call_result_127418 = invoke(stypy.reporting.localization.Localization(__file__, 1425, 52), getitem___127417, int_127412)
    
    # Processing the call keyword arguments (line 1425)
    kwargs_127419 = {}
    
    # Obtaining the type of the subscript
    int_127405 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1425, 49), 'int')
    
    # Obtaining the type of the subscript
    # Getting the type of 'key' (line 1425)
    key_127406 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1425, 44), 'key', False)
    # Getting the type of 'rc' (line 1425)
    rc_127407 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1425, 41), 'rc', False)
    # Obtaining the member '__getitem__' of a type (line 1425)
    getitem___127408 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1425, 41), rc_127407, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1425)
    subscript_call_result_127409 = invoke(stypy.reporting.localization.Localization(__file__, 1425, 41), getitem___127408, key_127406)
    
    # Obtaining the member '__getitem__' of a type (line 1425)
    getitem___127410 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1425, 41), subscript_call_result_127409, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1425)
    subscript_call_result_127411 = invoke(stypy.reporting.localization.Localization(__file__, 1425, 41), getitem___127410, int_127405)
    
    # Calling (args, kwargs) (line 1425)
    _call_result_127420 = invoke(stypy.reporting.localization.Localization(__file__, 1425, 41), subscript_call_result_127411, *[subscript_call_result_127418], **kwargs_127419)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1425, 36), tuple_127403, _call_result_127420)
    # Adding element type (line 1425)
    
    # Obtaining the type of the subscript
    int_127421 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1425, 73), 'int')
    
    # Obtaining the type of the subscript
    # Getting the type of 'key' (line 1425)
    key_127422 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1425, 68), 'key', False)
    # Getting the type of 'rc' (line 1425)
    rc_127423 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1425, 65), 'rc', False)
    # Obtaining the member '__getitem__' of a type (line 1425)
    getitem___127424 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1425, 65), rc_127423, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1425)
    subscript_call_result_127425 = invoke(stypy.reporting.localization.Localization(__file__, 1425, 65), getitem___127424, key_127422)
    
    # Obtaining the member '__getitem__' of a type (line 1425)
    getitem___127426 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1425, 65), subscript_call_result_127425, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1425)
    subscript_call_result_127427 = invoke(stypy.reporting.localization.Localization(__file__, 1425, 65), getitem___127426, int_127421)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1425, 36), tuple_127403, subscript_call_result_127427)
    
    # Applying the binary operator '%' (line 1425)
    result_mod_127428 = python_operator(stypy.reporting.localization.Localization(__file__, 1425, 18), '%', unicode_127402, tuple_127403)
    
    # Processing the call keyword arguments (line 1425)
    kwargs_127429 = {}
    # Getting the type of 'print' (line 1425)
    print_127401 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1425, 12), 'print', False)
    # Calling print(args, kwargs) (line 1425)
    print_call_result_127430 = invoke(stypy.reporting.localization.Localization(__file__, 1425, 12), print_127401, *[result_mod_127428], **kwargs_127429)
    
    # SSA join for if statement (line 1424)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    


# ################# End of the type inference program ##################

module_errors = stypy.errors.type_error.StypyTypeError.get_error_msgs()
module_warnings = stypy.errors.type_warning.TypeWarning.get_warning_msgs()
