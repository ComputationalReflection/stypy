
# -*- coding: utf-8 -*-

"""
ORIGINAL PROGRAM SOURCE CODE:
1: from __future__ import (absolute_import, division, print_function,
2:                         unicode_literals)
3: 
4: import six
5: 
6: import os, sys, warnings
7: 
8: if six.PY3:
9:     warnings.warn(
10:         "The gtk* backends have not been tested with Python 3.x",
11:         ImportWarning)
12: 
13: try:
14:     import gobject
15:     import gtk; gdk = gtk.gdk
16:     import pango
17: except ImportError:
18:     raise ImportError("Gtk* backend requires pygtk to be installed.")
19: 
20: pygtk_version_required = (2,4,0)
21: if gtk.pygtk_version < pygtk_version_required:
22:     raise ImportError ("PyGTK %d.%d.%d is installed\n"
23:                       "PyGTK %d.%d.%d or later is required"
24:                       % (gtk.pygtk_version + pygtk_version_required))
25: del pygtk_version_required
26: 
27: _new_tooltip_api =  (gtk.pygtk_version[1] >= 12)
28: 
29: import matplotlib
30: from matplotlib._pylab_helpers import Gcf
31: from matplotlib.backend_bases import (
32:     _Backend, FigureCanvasBase, FigureManagerBase, NavigationToolbar2,
33:     TimerBase, cursors)
34: 
35: from matplotlib.backends.backend_gdk import RendererGDK, FigureCanvasGDK
36: from matplotlib.cbook import is_writable_file_like, warn_deprecated
37: from matplotlib.figure import Figure
38: from matplotlib.widgets import SubplotTool
39: 
40: from matplotlib import (
41:     cbook, colors as mcolors, lines, markers, rcParams, verbose)
42: 
43: backend_version = "%d.%d.%d" % gtk.pygtk_version
44: 
45: # the true dots per inch on the screen; should be display dependent
46: # see http://groups.google.com/groups?q=screen+dpi+x11&hl=en&lr=&ie=UTF-8&oe=UTF-8&safe=off&selm=7077.26e81ad5%40swift.cs.tcd.ie&rnum=5 for some info about screen dpi
47: PIXELS_PER_INCH = 96
48: 
49: # Hide the benign warning that it can't stat a file that doesn't
50: warnings.filterwarnings('ignore', '.*Unable to retrieve the file info for.*', gtk.Warning)
51: 
52: cursord = {
53:     cursors.MOVE          : gdk.Cursor(gdk.FLEUR),
54:     cursors.HAND          : gdk.Cursor(gdk.HAND2),
55:     cursors.POINTER       : gdk.Cursor(gdk.LEFT_PTR),
56:     cursors.SELECT_REGION : gdk.Cursor(gdk.TCROSS),
57:     cursors.WAIT          : gdk.Cursor(gdk.WATCH),
58:     }
59: 
60: # ref gtk+/gtk/gtkwidget.h
61: def GTK_WIDGET_DRAWABLE(w):
62:     flags = w.flags();
63:     return flags & gtk.VISIBLE != 0 and flags & gtk.MAPPED != 0
64: 
65: 
66: class TimerGTK(TimerBase):
67:     '''
68:     Subclass of :class:`backend_bases.TimerBase` using GTK for timer events.
69: 
70:     Attributes
71:     ----------
72:     interval : int
73:         The time between timer events in milliseconds. Default is 1000 ms.
74:     single_shot : bool
75:         Boolean flag indicating whether this timer should operate as single
76:         shot (run once and then stop). Defaults to False.
77:     callbacks : list
78:         Stores list of (func, args) tuples that will be called upon timer
79:         events. This list can be manipulated directly, or the functions
80:         `add_callback` and `remove_callback` can be used.
81: 
82:     '''
83:     def _timer_start(self):
84:         # Need to stop it, otherwise we potentially leak a timer id that will
85:         # never be stopped.
86:         self._timer_stop()
87:         self._timer = gobject.timeout_add(self._interval, self._on_timer)
88: 
89:     def _timer_stop(self):
90:         if self._timer is not None:
91:             gobject.source_remove(self._timer)
92:             self._timer = None
93: 
94:     def _timer_set_interval(self):
95:         # Only stop and restart it if the timer has already been started
96:         if self._timer is not None:
97:             self._timer_stop()
98:             self._timer_start()
99: 
100:     def _on_timer(self):
101:         TimerBase._on_timer(self)
102: 
103:         # Gtk timeout_add() requires that the callback returns True if it
104:         # is to be called again.
105:         if len(self.callbacks) > 0 and not self._single:
106:             return True
107:         else:
108:             self._timer = None
109:             return False
110: 
111: 
112: class FigureCanvasGTK (gtk.DrawingArea, FigureCanvasBase):
113:     keyvald = {65507 : 'control',
114:                65505 : 'shift',
115:                65513 : 'alt',
116:                65508 : 'control',
117:                65506 : 'shift',
118:                65514 : 'alt',
119:                65361 : 'left',
120:                65362 : 'up',
121:                65363 : 'right',
122:                65364 : 'down',
123:                65307 : 'escape',
124:                65470 : 'f1',
125:                65471 : 'f2',
126:                65472 : 'f3',
127:                65473 : 'f4',
128:                65474 : 'f5',
129:                65475 : 'f6',
130:                65476 : 'f7',
131:                65477 : 'f8',
132:                65478 : 'f9',
133:                65479 : 'f10',
134:                65480 : 'f11',
135:                65481 : 'f12',
136:                65300 : 'scroll_lock',
137:                65299 : 'break',
138:                65288 : 'backspace',
139:                65293 : 'enter',
140:                65379 : 'insert',
141:                65535 : 'delete',
142:                65360 : 'home',
143:                65367 : 'end',
144:                65365 : 'pageup',
145:                65366 : 'pagedown',
146:                65438 : '0',
147:                65436 : '1',
148:                65433 : '2',
149:                65435 : '3',
150:                65430 : '4',
151:                65437 : '5',
152:                65432 : '6',
153:                65429 : '7',
154:                65431 : '8',
155:                65434 : '9',
156:                65451 : '+',
157:                65453 : '-',
158:                65450 : '*',
159:                65455 : '/',
160:                65439 : 'dec',
161:                65421 : 'enter',
162:                65511 : 'super',
163:                65512 : 'super',
164:                65406 : 'alt',
165:                65289 : 'tab',
166:                }
167: 
168:     # Setting this as a static constant prevents
169:     # this resulting expression from leaking
170:     event_mask = (gdk.BUTTON_PRESS_MASK   |
171:                   gdk.BUTTON_RELEASE_MASK |
172:                   gdk.EXPOSURE_MASK       |
173:                   gdk.KEY_PRESS_MASK      |
174:                   gdk.KEY_RELEASE_MASK    |
175:                   gdk.ENTER_NOTIFY_MASK   |
176:                   gdk.LEAVE_NOTIFY_MASK   |
177:                   gdk.POINTER_MOTION_MASK |
178:                   gdk.POINTER_MOTION_HINT_MASK)
179: 
180:     def __init__(self, figure):
181:         if self.__class__ == matplotlib.backends.backend_gtk.FigureCanvasGTK:
182:             warn_deprecated('2.0', message="The GTK backend is "
183:                             "deprecated. It is untested, known to be "
184:                             "broken and will be removed in Matplotlib 2.2. "
185:                             "Use the GTKAgg backend instead. "
186:                             "See Matplotlib usage FAQ for"
187:                             " more info on backends.",
188:                             alternative="GTKAgg")
189:         FigureCanvasBase.__init__(self, figure)
190:         gtk.DrawingArea.__init__(self)
191: 
192:         self._idle_draw_id  = 0
193:         self._need_redraw   = True
194:         self._pixmap_width  = -1
195:         self._pixmap_height = -1
196:         self._lastCursor    = None
197: 
198:         self.connect('scroll_event',         self.scroll_event)
199:         self.connect('button_press_event',   self.button_press_event)
200:         self.connect('button_release_event', self.button_release_event)
201:         self.connect('configure_event',      self.configure_event)
202:         self.connect('expose_event',         self.expose_event)
203:         self.connect('key_press_event',      self.key_press_event)
204:         self.connect('key_release_event',    self.key_release_event)
205:         self.connect('motion_notify_event',  self.motion_notify_event)
206:         self.connect('leave_notify_event',   self.leave_notify_event)
207:         self.connect('enter_notify_event',   self.enter_notify_event)
208: 
209:         self.set_events(self.__class__.event_mask)
210: 
211:         self.set_double_buffered(False)
212:         self.set_flags(gtk.CAN_FOCUS)
213:         self._renderer_init()
214: 
215:         self.last_downclick = {}
216: 
217:     def destroy(self):
218:         #gtk.DrawingArea.destroy(self)
219:         self.close_event()
220:         if self._idle_draw_id != 0:
221:             gobject.source_remove(self._idle_draw_id)
222: 
223:     def scroll_event(self, widget, event):
224:         x = event.x
225:         # flipy so y=0 is bottom of canvas
226:         y = self.allocation.height - event.y
227:         if event.direction==gdk.SCROLL_UP:
228:             step = 1
229:         else:
230:             step = -1
231:         FigureCanvasBase.scroll_event(self, x, y, step, guiEvent=event)
232:         return False  # finish event propagation?
233: 
234:     def button_press_event(self, widget, event):
235:         x = event.x
236:         # flipy so y=0 is bottom of canvas
237:         y = self.allocation.height - event.y
238:         dblclick = (event.type == gdk._2BUTTON_PRESS)
239:         if not dblclick:
240:             # GTK is the only backend that generates a DOWN-UP-DOWN-DBLCLICK-UP  event
241:             # sequence for a double click.  All other backends have a DOWN-UP-DBLCLICK-UP
242:             # sequence.  In order to provide consistency to matplotlib users, we will
243:             # eat the extra DOWN event in the case that we detect it is part of a double
244:             # click.
245:             # first, get the double click time in milliseconds.
246:             current_time  = event.get_time()
247:             last_time     = self.last_downclick.get(event.button,0)
248:             dblclick_time = gtk.settings_get_for_screen(gdk.screen_get_default()).get_property('gtk-double-click-time')
249:             delta_time    = current_time-last_time
250:             if delta_time < dblclick_time:
251:                 del self.last_downclick[event.button] # we do not want to eat more than one event.
252:                 return False                          # eat.
253:             self.last_downclick[event.button] = current_time
254:         FigureCanvasBase.button_press_event(self, x, y, event.button, dblclick=dblclick, guiEvent=event)
255:         return False  # finish event propagation?
256: 
257:     def button_release_event(self, widget, event):
258:         x = event.x
259:         # flipy so y=0 is bottom of canvas
260:         y = self.allocation.height - event.y
261:         FigureCanvasBase.button_release_event(self, x, y, event.button, guiEvent=event)
262:         return False  # finish event propagation?
263: 
264:     def key_press_event(self, widget, event):
265:         key = self._get_key(event)
266:         FigureCanvasBase.key_press_event(self, key, guiEvent=event)
267:         return True  # stop event propagation
268: 
269:     def key_release_event(self, widget, event):
270:         key = self._get_key(event)
271:         FigureCanvasBase.key_release_event(self, key, guiEvent=event)
272:         return True  # stop event propagation
273: 
274:     def motion_notify_event(self, widget, event):
275:         if event.is_hint:
276:             x, y, state = event.window.get_pointer()
277:         else:
278:             x, y, state = event.x, event.y, event.state
279: 
280:         # flipy so y=0 is bottom of canvas
281:         y = self.allocation.height - y
282:         FigureCanvasBase.motion_notify_event(self, x, y, guiEvent=event)
283:         return False  # finish event propagation?
284: 
285:     def leave_notify_event(self, widget, event):
286:         FigureCanvasBase.leave_notify_event(self, event)
287: 
288:     def enter_notify_event(self, widget, event):
289:         x, y, state = event.window.get_pointer()
290:         FigureCanvasBase.enter_notify_event(self, event, xy=(x, y))
291: 
292:     def _get_key(self, event):
293:         if event.keyval in self.keyvald:
294:             key = self.keyvald[event.keyval]
295:         elif event.keyval < 256:
296:             key = chr(event.keyval)
297:         else:
298:             key = None
299: 
300:         for key_mask, prefix in (
301:                                  [gdk.MOD4_MASK, 'super'],
302:                                  [gdk.MOD1_MASK, 'alt'],
303:                                  [gdk.CONTROL_MASK, 'ctrl'], ):
304:             if event.state & key_mask:
305:                 key = '{0}+{1}'.format(prefix, key)
306: 
307:         return key
308: 
309:     def configure_event(self, widget, event):
310:         if widget.window is None:
311:             return
312:         w, h = event.width, event.height
313:         if w < 3 or h < 3:
314:             return # empty fig
315: 
316:         # resize the figure (in inches)
317:         dpi = self.figure.dpi
318:         self.figure.set_size_inches(w/dpi, h/dpi, forward=False)
319:         self._need_redraw = True
320: 
321:         return False  # finish event propagation?
322: 
323:     def draw(self):
324:         # Note: FigureCanvasBase.draw() is inconveniently named as it clashes
325:         # with the deprecated gtk.Widget.draw()
326: 
327:         self._need_redraw = True
328:         if GTK_WIDGET_DRAWABLE(self):
329:             self.queue_draw()
330:             # do a synchronous draw (its less efficient than an async draw,
331:             # but is required if/when animation is used)
332:             self.window.process_updates (False)
333: 
334:     def draw_idle(self):
335:         if self._idle_draw_id != 0:
336:             return
337:         def idle_draw(*args):
338:             try:
339:                 self.draw()
340:             finally:
341:                 self._idle_draw_id = 0
342:             return False
343:         self._idle_draw_id = gobject.idle_add(idle_draw)
344: 
345: 
346:     def _renderer_init(self):
347:         '''Override by GTK backends to select a different renderer
348:         Renderer should provide the methods:
349:             set_pixmap ()
350:             set_width_height ()
351:         that are used by
352:             _render_figure() / _pixmap_prepare()
353:         '''
354:         self._renderer = RendererGDK (self, self.figure.dpi)
355: 
356: 
357:     def _pixmap_prepare(self, width, height):
358:         '''
359:         Make sure _._pixmap is at least width, height,
360:         create new pixmap if necessary
361:         '''
362:         create_pixmap = False
363:         if width > self._pixmap_width:
364:             # increase the pixmap in 10%+ (rather than 1 pixel) steps
365:             self._pixmap_width  = max (int (self._pixmap_width  * 1.1),
366:                                        width)
367:             create_pixmap = True
368: 
369:         if height > self._pixmap_height:
370:             self._pixmap_height = max (int (self._pixmap_height * 1.1),
371:                                            height)
372:             create_pixmap = True
373: 
374:         if create_pixmap:
375:             self._pixmap = gdk.Pixmap (self.window, self._pixmap_width,
376:                                        self._pixmap_height)
377:             self._renderer.set_pixmap (self._pixmap)
378: 
379: 
380:     def _render_figure(self, pixmap, width, height):
381:         '''used by GTK and GTKcairo. GTKAgg overrides
382:         '''
383:         self._renderer.set_width_height (width, height)
384:         self.figure.draw (self._renderer)
385: 
386: 
387:     def expose_event(self, widget, event):
388:         '''Expose_event for all GTK backends. Should not be overridden.
389:         '''
390:         toolbar = self.toolbar
391:         if toolbar:
392:             toolbar.set_cursor(cursors.WAIT)
393:         if GTK_WIDGET_DRAWABLE(self):
394:             if self._need_redraw:
395:                 x, y, w, h = self.allocation
396:                 self._pixmap_prepare (w, h)
397:                 self._render_figure(self._pixmap, w, h)
398:                 self._need_redraw = False
399:             x, y, w, h = event.area
400:             self.window.draw_drawable (self.style.fg_gc[self.state],
401:                                        self._pixmap, x, y, x, y, w, h)
402:         if toolbar:
403:             toolbar.set_cursor(toolbar._lastCursor)
404:         return False  # finish event propagation?
405: 
406:     filetypes = FigureCanvasBase.filetypes.copy()
407:     filetypes['jpg'] = 'JPEG'
408:     filetypes['jpeg'] = 'JPEG'
409:     filetypes['png'] = 'Portable Network Graphics'
410: 
411:     def print_jpeg(self, filename, *args, **kwargs):
412:         return self._print_image(filename, 'jpeg')
413:     print_jpg = print_jpeg
414: 
415:     def print_png(self, filename, *args, **kwargs):
416:         return self._print_image(filename, 'png')
417: 
418:     def _print_image(self, filename, format, *args, **kwargs):
419:         if self.flags() & gtk.REALIZED == 0:
420:             # for self.window(for pixmap) and has a side effect of altering
421:             # figure width,height (via configure-event?)
422:             gtk.DrawingArea.realize(self)
423: 
424:         width, height = self.get_width_height()
425:         pixmap = gdk.Pixmap (self.window, width, height)
426:         self._renderer.set_pixmap (pixmap)
427:         self._render_figure(pixmap, width, height)
428: 
429:         # jpg colors don't match the display very well, png colors match
430:         # better
431:         pixbuf = gdk.Pixbuf(gdk.COLORSPACE_RGB, 0, 8, width, height)
432:         pixbuf.get_from_drawable(pixmap, pixmap.get_colormap(),
433:                                      0, 0, 0, 0, width, height)
434: 
435:         # set the default quality, if we are writing a JPEG.
436:         # http://www.pygtk.org/docs/pygtk/class-gdkpixbuf.html#method-gdkpixbuf--save
437:         options = {k: kwargs[k] for k in ['quality'] if k in kwargs}
438:         if format in ['jpg', 'jpeg']:
439:             options.setdefault('quality', rcParams['savefig.jpeg_quality'])
440:             options['quality'] = str(options['quality'])
441: 
442:         if isinstance(filename, six.string_types):
443:             try:
444:                 pixbuf.save(filename, format, options=options)
445:             except gobject.GError as exc:
446:                 error_msg_gtk('Save figure failure:\n%s' % (exc,), parent=self)
447:         elif is_writable_file_like(filename):
448:             if hasattr(pixbuf, 'save_to_callback'):
449:                 def save_callback(buf, data=None):
450:                     data.write(buf)
451:                 try:
452:                     pixbuf.save_to_callback(save_callback, format, user_data=filename, options=options)
453:                 except gobject.GError as exc:
454:                     error_msg_gtk('Save figure failure:\n%s' % (exc,), parent=self)
455:             else:
456:                 raise ValueError("Saving to a Python file-like object is only supported by PyGTK >= 2.8")
457:         else:
458:             raise ValueError("filename must be a path or a file-like object")
459: 
460:     def new_timer(self, *args, **kwargs):
461:         '''
462:         Creates a new backend-specific subclass of :class:`backend_bases.Timer`.
463:         This is useful for getting periodic events through the backend's native
464:         event loop. Implemented only for backends with GUIs.
465: 
466:         Other Parameters
467:         ----------------
468:         interval : scalar
469:             Timer interval in milliseconds
470:         callbacks : list
471:             Sequence of (func, args, kwargs) where ``func(*args, **kwargs)``
472:             will be executed by the timer every *interval*.
473:         '''
474:         return TimerGTK(*args, **kwargs)
475: 
476:     def flush_events(self):
477:         gtk.gdk.threads_enter()
478:         while gtk.events_pending():
479:             gtk.main_iteration(True)
480:         gtk.gdk.flush()
481:         gtk.gdk.threads_leave()
482: 
483: 
484: 
485: class FigureManagerGTK(FigureManagerBase):
486:     '''
487:     Attributes
488:     ----------
489:     canvas : `FigureCanvas`
490:         The FigureCanvas instance
491:     num : int or str
492:         The Figure number
493:     toolbar : gtk.Toolbar
494:         The gtk.Toolbar  (gtk only)
495:     vbox : gtk.VBox
496:         The gtk.VBox containing the canvas and toolbar (gtk only)
497:     window : gtk.Window
498:         The gtk.Window   (gtk only)
499: 
500:     '''
501:     def __init__(self, canvas, num):
502:         FigureManagerBase.__init__(self, canvas, num)
503: 
504:         self.window = gtk.Window()
505:         self.window.set_wmclass("matplotlib", "Matplotlib")
506:         self.set_window_title("Figure %d" % num)
507:         if window_icon:
508:             try:
509:                 self.window.set_icon_from_file(window_icon)
510:             except:
511:                 # some versions of gtk throw a glib.GError but not
512:                 # all, so I am not sure how to catch it.  I am unhappy
513:                 # diong a blanket catch here, but an not sure what a
514:                 # better way is - JDH
515:                 verbose.report('Could not load matplotlib icon: %s' % sys.exc_info()[1])
516: 
517:         self.vbox = gtk.VBox()
518:         self.window.add(self.vbox)
519:         self.vbox.show()
520: 
521:         self.canvas.show()
522: 
523:         self.vbox.pack_start(self.canvas, True, True)
524: 
525:         self.toolbar = self._get_toolbar(canvas)
526: 
527:         # calculate size for window
528:         w = int (self.canvas.figure.bbox.width)
529:         h = int (self.canvas.figure.bbox.height)
530: 
531:         if self.toolbar is not None:
532:             self.toolbar.show()
533:             self.vbox.pack_end(self.toolbar, False, False)
534: 
535:             tb_w, tb_h = self.toolbar.size_request()
536:             h += tb_h
537:         self.window.set_default_size (w, h)
538: 
539:         def destroy(*args):
540:             Gcf.destroy(num)
541:         self.window.connect("destroy", destroy)
542:         self.window.connect("delete_event", destroy)
543:         if matplotlib.is_interactive():
544:             self.window.show()
545:             self.canvas.draw_idle()
546: 
547:         def notify_axes_change(fig):
548:             'this will be called whenever the current axes is changed'
549:             if self.toolbar is not None: self.toolbar.update()
550:         self.canvas.figure.add_axobserver(notify_axes_change)
551: 
552:         self.canvas.grab_focus()
553: 
554:     def destroy(self, *args):
555:         if hasattr(self, 'toolbar') and self.toolbar is not None:
556:             self.toolbar.destroy()
557:         if hasattr(self, 'vbox'):
558:             self.vbox.destroy()
559:         if hasattr(self, 'window'):
560:             self.window.destroy()
561:         if hasattr(self, 'canvas'):
562:             self.canvas.destroy()
563:         self.__dict__.clear()   #Is this needed? Other backends don't have it.
564: 
565:         if Gcf.get_num_fig_managers()==0 and \
566:                not matplotlib.is_interactive() and \
567:                gtk.main_level() >= 1:
568:             gtk.main_quit()
569: 
570:     def show(self):
571:         # show the figure window
572:         self.window.show()
573:         # raise the window above others and relase the "above lock"
574:         self.window.set_keep_above(True)
575:         self.window.set_keep_above(False)
576: 
577:     def full_screen_toggle(self):
578:         self._full_screen_flag = not self._full_screen_flag
579:         if self._full_screen_flag:
580:             self.window.fullscreen()
581:         else:
582:             self.window.unfullscreen()
583:     _full_screen_flag = False
584: 
585: 
586:     def _get_toolbar(self, canvas):
587:         # must be inited after the window, drawingArea and figure
588:         # attrs are set
589:         if rcParams['toolbar'] == 'toolbar2':
590:             toolbar = NavigationToolbar2GTK (canvas, self.window)
591:         else:
592:             toolbar = None
593:         return toolbar
594: 
595:     def get_window_title(self):
596:         return self.window.get_title()
597: 
598:     def set_window_title(self, title):
599:         self.window.set_title(title)
600: 
601:     def resize(self, width, height):
602:         'set the canvas size in pixels'
603:         #_, _, cw, ch = self.canvas.allocation
604:         #_, _, ww, wh = self.window.allocation
605:         #self.window.resize (width-cw+ww, height-ch+wh)
606:         self.window.resize(width, height)
607: 
608: 
609: class NavigationToolbar2GTK(NavigationToolbar2, gtk.Toolbar):
610:     def __init__(self, canvas, window):
611:         self.win = window
612:         gtk.Toolbar.__init__(self)
613:         NavigationToolbar2.__init__(self, canvas)
614: 
615:     def set_message(self, s):
616:         self.message.set_label(s)
617: 
618:     def set_cursor(self, cursor):
619:         self.canvas.window.set_cursor(cursord[cursor])
620:         gtk.main_iteration()
621: 
622:     def release(self, event):
623:         try: del self._pixmapBack
624:         except AttributeError: pass
625: 
626:     def draw_rubberband(self, event, x0, y0, x1, y1):
627:         'adapted from http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/189744'
628:         drawable = self.canvas.window
629:         if drawable is None:
630:             return
631: 
632:         gc = drawable.new_gc()
633: 
634:         height = self.canvas.figure.bbox.height
635:         y1 = height - y1
636:         y0 = height - y0
637: 
638:         w = abs(x1 - x0)
639:         h = abs(y1 - y0)
640: 
641:         rect = [int(val)for val in (min(x0,x1), min(y0, y1), w, h)]
642:         try:
643:             lastrect, pixmapBack = self._pixmapBack
644:         except AttributeError:
645:             #snap image back
646:             if event.inaxes is None:
647:                 return
648: 
649:             ax = event.inaxes
650:             l,b,w,h = [int(val) for val in ax.bbox.bounds]
651:             b = int(height)-(b+h)
652:             axrect = l,b,w,h
653:             self._pixmapBack = axrect, gtk.gdk.Pixmap(drawable, w, h)
654:             self._pixmapBack[1].draw_drawable(gc, drawable, l, b, 0, 0, w, h)
655:         else:
656:             drawable.draw_drawable(gc, pixmapBack, 0, 0, *lastrect)
657:         drawable.draw_rectangle(gc, False, *rect)
658: 
659: 
660:     def _init_toolbar(self):
661:         self.set_style(gtk.TOOLBAR_ICONS)
662:         self._init_toolbar2_4()
663: 
664: 
665:     def _init_toolbar2_4(self):
666:         basedir = os.path.join(rcParams['datapath'],'images')
667:         if not _new_tooltip_api:
668:             self.tooltips = gtk.Tooltips()
669: 
670:         for text, tooltip_text, image_file, callback in self.toolitems:
671:             if text is None:
672:                 self.insert( gtk.SeparatorToolItem(), -1 )
673:                 continue
674:             fname = os.path.join(basedir, image_file + '.png')
675:             image = gtk.Image()
676:             image.set_from_file(fname)
677:             tbutton = gtk.ToolButton(image, text)
678:             self.insert(tbutton, -1)
679:             tbutton.connect('clicked', getattr(self, callback))
680:             if _new_tooltip_api:
681:                 tbutton.set_tooltip_text(tooltip_text)
682:             else:
683:                 tbutton.set_tooltip(self.tooltips, tooltip_text, 'Private')
684: 
685:         toolitem = gtk.SeparatorToolItem()
686:         self.insert(toolitem, -1)
687:         # set_draw() not making separator invisible,
688:         # bug #143692 fixed Jun 06 2004, will be in GTK+ 2.6
689:         toolitem.set_draw(False)
690:         toolitem.set_expand(True)
691: 
692:         toolitem = gtk.ToolItem()
693:         self.insert(toolitem, -1)
694:         self.message = gtk.Label()
695:         toolitem.add(self.message)
696: 
697:         self.show_all()
698: 
699:     def get_filechooser(self):
700:         fc = FileChooserDialog(
701:             title='Save the figure',
702:             parent=self.win,
703:             path=os.path.expanduser(rcParams['savefig.directory']),
704:             filetypes=self.canvas.get_supported_filetypes(),
705:             default_filetype=self.canvas.get_default_filetype())
706:         fc.set_current_name(self.canvas.get_default_filename())
707:         return fc
708: 
709:     def save_figure(self, *args):
710:         chooser = self.get_filechooser()
711:         fname, format = chooser.get_filename_from_user()
712:         chooser.destroy()
713:         if fname:
714:             # Save dir for next time, unless empty str (i.e., use cwd).
715:             if startpath != "":
716:                 rcParams['savefig.directory'] = (
717:                     os.path.dirname(six.text_type(fname)))
718:             try:
719:                 self.canvas.figure.savefig(fname, format=format)
720:             except Exception as e:
721:                 error_msg_gtk(str(e), parent=self)
722: 
723:     def configure_subplots(self, button):
724:         toolfig = Figure(figsize=(6,3))
725:         canvas = self._get_canvas(toolfig)
726:         toolfig.subplots_adjust(top=0.9)
727:         tool =  SubplotTool(self.canvas.figure, toolfig)
728: 
729:         w = int(toolfig.bbox.width)
730:         h = int(toolfig.bbox.height)
731: 
732:         window = gtk.Window()
733:         if window_icon:
734:             try:
735:                 window.set_icon_from_file(window_icon)
736:             except:
737:                 # we presumably already logged a message on the
738:                 # failure of the main plot, don't keep reporting
739:                 pass
740:         window.set_title("Subplot Configuration Tool")
741:         window.set_default_size(w, h)
742:         vbox = gtk.VBox()
743:         window.add(vbox)
744:         vbox.show()
745: 
746:         canvas.show()
747:         vbox.pack_start(canvas, True, True)
748:         window.show()
749: 
750:     def _get_canvas(self, fig):
751:         return FigureCanvasGTK(fig)
752: 
753: 
754: class FileChooserDialog(gtk.FileChooserDialog):
755:     '''GTK+ 2.4 file selector which presents the user with a menu
756:     of supported image formats
757:     '''
758:     def __init__ (self,
759:                   title   = 'Save file',
760:                   parent  = None,
761:                   action  = gtk.FILE_CHOOSER_ACTION_SAVE,
762:                   buttons = (gtk.STOCK_CANCEL, gtk.RESPONSE_CANCEL,
763:                              gtk.STOCK_SAVE,   gtk.RESPONSE_OK),
764:                   path    = None,
765:                   filetypes = [],
766:                   default_filetype = None
767:                   ):
768:         super(FileChooserDialog, self).__init__(title, parent, action, buttons)
769:         super(FileChooserDialog, self).set_do_overwrite_confirmation(True)
770:         self.set_default_response(gtk.RESPONSE_OK)
771: 
772:         if not path:
773:             path = os.getcwd() + os.sep
774: 
775:         # create an extra widget to list supported image formats
776:         self.set_current_folder (path)
777:         self.set_current_name ('image.' + default_filetype)
778: 
779:         hbox = gtk.HBox(spacing=10)
780:         hbox.pack_start(gtk.Label ("File Format:"), expand=False)
781: 
782:         liststore = gtk.ListStore(gobject.TYPE_STRING)
783:         cbox = gtk.ComboBox(liststore)
784:         cell = gtk.CellRendererText()
785:         cbox.pack_start(cell, True)
786:         cbox.add_attribute(cell, 'text', 0)
787:         hbox.pack_start(cbox)
788: 
789:         self.filetypes = filetypes
790:         self.sorted_filetypes = sorted(six.iteritems(filetypes))
791:         default = 0
792:         for i, (ext, name) in enumerate(self.sorted_filetypes):
793:             cbox.append_text("%s (*.%s)" % (name, ext))
794:             if ext == default_filetype:
795:                 default = i
796:         cbox.set_active(default)
797:         self.ext = default_filetype
798: 
799:         def cb_cbox_changed (cbox, data=None):
800:             '''File extension changed'''
801:             head, filename = os.path.split(self.get_filename())
802:             root, ext = os.path.splitext(filename)
803:             ext = ext[1:]
804:             new_ext = self.sorted_filetypes[cbox.get_active()][0]
805:             self.ext = new_ext
806: 
807:             if ext in self.filetypes:
808:                 filename = root + '.' + new_ext
809:             elif ext == '':
810:                 filename = filename.rstrip('.') + '.' + new_ext
811: 
812:             self.set_current_name(filename)
813:         cbox.connect("changed", cb_cbox_changed)
814: 
815:         hbox.show_all()
816:         self.set_extra_widget(hbox)
817: 
818:     def get_filename_from_user (self):
819:         while True:
820:             filename = None
821:             if self.run() != int(gtk.RESPONSE_OK):
822:                 break
823:             filename = self.get_filename()
824:             break
825: 
826:         return filename, self.ext
827: 
828: 
829: class DialogLineprops(object):
830:     '''
831:     A GUI dialog for controlling lineprops
832:     '''
833:     signals = (
834:         'on_combobox_lineprops_changed',
835:         'on_combobox_linestyle_changed',
836:         'on_combobox_marker_changed',
837:         'on_colorbutton_linestyle_color_set',
838:         'on_colorbutton_markerface_color_set',
839:         'on_dialog_lineprops_okbutton_clicked',
840:         'on_dialog_lineprops_cancelbutton_clicked',
841:         )
842: 
843:     linestyles = [ls for ls in lines.Line2D.lineStyles if ls.strip()]
844:     linestyled = {s: i for i, s in enumerate(linestyles)}
845: 
846:     markers =  [m for m in markers.MarkerStyle.markers
847:                 if isinstance(m, six.string_types)]
848:     markerd = {s: i for i, s in enumerate(markers)}
849: 
850:     def __init__(self, lines):
851:         import gtk.glade
852: 
853:         datadir = matplotlib.get_data_path()
854:         gladefile = os.path.join(datadir, 'lineprops.glade')
855:         if not os.path.exists(gladefile):
856:             raise IOError(
857:                 'Could not find gladefile lineprops.glade in %s' % datadir)
858: 
859:         self._inited = False
860:         self._updateson = True # suppress updates when setting widgets manually
861:         self.wtree = gtk.glade.XML(gladefile, 'dialog_lineprops')
862:         self.wtree.signal_autoconnect(
863:             {s: getattr(self, s) for s in self.signals})
864: 
865:         self.dlg = self.wtree.get_widget('dialog_lineprops')
866: 
867:         self.lines = lines
868: 
869:         cbox = self.wtree.get_widget('combobox_lineprops')
870:         cbox.set_active(0)
871:         self.cbox_lineprops = cbox
872: 
873:         cbox = self.wtree.get_widget('combobox_linestyles')
874:         for ls in self.linestyles:
875:             cbox.append_text(ls)
876:         cbox.set_active(0)
877:         self.cbox_linestyles = cbox
878: 
879:         cbox = self.wtree.get_widget('combobox_markers')
880:         for m in self.markers:
881:             cbox.append_text(m)
882:         cbox.set_active(0)
883:         self.cbox_markers = cbox
884:         self._lastcnt = 0
885:         self._inited = True
886: 
887:     def show(self):
888:         'populate the combo box'
889:         self._updateson = False
890:         # flush the old
891:         cbox = self.cbox_lineprops
892:         for i in range(self._lastcnt-1,-1,-1):
893:             cbox.remove_text(i)
894: 
895:         # add the new
896:         for line in self.lines:
897:             cbox.append_text(line.get_label())
898:         cbox.set_active(0)
899: 
900:         self._updateson = True
901:         self._lastcnt = len(self.lines)
902:         self.dlg.show()
903: 
904:     def get_active_line(self):
905:         'get the active line'
906:         ind = self.cbox_lineprops.get_active()
907:         line = self.lines[ind]
908:         return line
909: 
910:     def get_active_linestyle(self):
911:         'get the active lineinestyle'
912:         ind = self.cbox_linestyles.get_active()
913:         ls = self.linestyles[ind]
914:         return ls
915: 
916:     def get_active_marker(self):
917:         'get the active lineinestyle'
918:         ind = self.cbox_markers.get_active()
919:         m = self.markers[ind]
920:         return m
921: 
922:     def _update(self):
923:         'update the active line props from the widgets'
924:         if not self._inited or not self._updateson: return
925:         line = self.get_active_line()
926:         ls = self.get_active_linestyle()
927:         marker = self.get_active_marker()
928:         line.set_linestyle(ls)
929:         line.set_marker(marker)
930: 
931:         button = self.wtree.get_widget('colorbutton_linestyle')
932:         color = button.get_color()
933:         r, g, b = [val/65535. for val in (color.red, color.green, color.blue)]
934:         line.set_color((r,g,b))
935: 
936:         button = self.wtree.get_widget('colorbutton_markerface')
937:         color = button.get_color()
938:         r, g, b = [val/65535. for val in (color.red, color.green, color.blue)]
939:         line.set_markerfacecolor((r,g,b))
940: 
941:         line.figure.canvas.draw()
942: 
943:     def on_combobox_lineprops_changed(self, item):
944:         'update the widgets from the active line'
945:         if not self._inited: return
946:         self._updateson = False
947:         line = self.get_active_line()
948: 
949:         ls = line.get_linestyle()
950:         if ls is None: ls = 'None'
951:         self.cbox_linestyles.set_active(self.linestyled[ls])
952: 
953:         marker = line.get_marker()
954:         if marker is None: marker = 'None'
955:         self.cbox_markers.set_active(self.markerd[marker])
956: 
957:         rgba = mcolors.to_rgba(line.get_color())
958:         color = gtk.gdk.Color(*[int(val*65535) for val in rgba[:3]])
959:         button = self.wtree.get_widget('colorbutton_linestyle')
960:         button.set_color(color)
961: 
962:         rgba = mcolors.to_rgba(line.get_markerfacecolor())
963:         color = gtk.gdk.Color(*[int(val*65535) for val in rgba[:3]])
964:         button = self.wtree.get_widget('colorbutton_markerface')
965:         button.set_color(color)
966:         self._updateson = True
967: 
968:     def on_combobox_linestyle_changed(self, item):
969:         self._update()
970: 
971:     def on_combobox_marker_changed(self, item):
972:         self._update()
973: 
974:     def on_colorbutton_linestyle_color_set(self, button):
975:         self._update()
976: 
977:     def on_colorbutton_markerface_color_set(self, button):
978:         'called colorbutton marker clicked'
979:         self._update()
980: 
981:     def on_dialog_lineprops_okbutton_clicked(self, button):
982:         self._update()
983:         self.dlg.hide()
984: 
985:     def on_dialog_lineprops_cancelbutton_clicked(self, button):
986:         self.dlg.hide()
987: 
988: # set icon used when windows are minimized
989: # Unfortunately, the SVG renderer (rsvg) leaks memory under earlier
990: # versions of pygtk, so we have to use a PNG file instead.
991: try:
992:     if gtk.pygtk_version < (2, 8, 0) or sys.platform == 'win32':
993:         icon_filename = 'matplotlib.png'
994:     else:
995:         icon_filename = 'matplotlib.svg'
996:     window_icon = os.path.join(rcParams['datapath'], 'images', icon_filename)
997: except:
998:     window_icon = None
999:     verbose.report('Could not load matplotlib icon: %s' % sys.exc_info()[1])
1000: 
1001: def error_msg_gtk(msg, parent=None):
1002:     if parent is not None: # find the toplevel gtk.Window
1003:         parent = parent.get_toplevel()
1004:         if parent.flags() & gtk.TOPLEVEL == 0:
1005:             parent = None
1006: 
1007:     if not isinstance(msg, six.string_types):
1008:         msg = ','.join(map(str,msg))
1009: 
1010:     dialog = gtk.MessageDialog(
1011:         parent         = parent,
1012:         type           = gtk.MESSAGE_ERROR,
1013:         buttons        = gtk.BUTTONS_OK,
1014:         message_format = msg)
1015:     dialog.run()
1016:     dialog.destroy()
1017: 
1018: 
1019: @_Backend.export
1020: class _BackendGTK(_Backend):
1021:     FigureCanvas = FigureCanvasGTK
1022:     FigureManager = FigureManagerGTK
1023: 
1024:     @staticmethod
1025:     def trigger_manager_draw(manager):
1026:         manager.canvas.draw_idle()
1027: 
1028:     @staticmethod
1029:     def mainloop():
1030:         if gtk.main_level() == 0:
1031:             gtk.main()
1032: 

"""

# Import the stypy library necessary elements
from stypy.type_inference_programs.type_inference_programs_imports import *

# Create the module type store
module_type_store = Context(None, __file__)

# ################# Begin of the type inference program ##################

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 4, 0))

# 'import six' statement (line 4)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_223333 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 4, 0), 'six')

if (type(import_223333) is not StypyTypeError):

    if (import_223333 != 'pyd_module'):
        __import__(import_223333)
        sys_modules_223334 = sys.modules[import_223333]
        import_module(stypy.reporting.localization.Localization(__file__, 4, 0), 'six', sys_modules_223334.module_type_store, module_type_store)
    else:
        import six

        import_module(stypy.reporting.localization.Localization(__file__, 4, 0), 'six', six, module_type_store)

else:
    # Assigning a type to the variable 'six' (line 4)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 4, 0), 'six', import_223333)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 6, 0))

# Multiple import statement. import os (1/3) (line 6)
import os

import_module(stypy.reporting.localization.Localization(__file__, 6, 0), 'os', os, module_type_store)
# Multiple import statement. import sys (2/3) (line 6)
import sys

import_module(stypy.reporting.localization.Localization(__file__, 6, 0), 'sys', sys, module_type_store)
# Multiple import statement. import warnings (3/3) (line 6)
import warnings

import_module(stypy.reporting.localization.Localization(__file__, 6, 0), 'warnings', warnings, module_type_store)


# Getting the type of 'six' (line 8)
six_223335 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 8, 3), 'six')
# Obtaining the member 'PY3' of a type (line 8)
PY3_223336 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 8, 3), six_223335, 'PY3')
# Testing the type of an if condition (line 8)
if_condition_223337 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 8, 0), PY3_223336)
# Assigning a type to the variable 'if_condition_223337' (line 8)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 8, 0), 'if_condition_223337', if_condition_223337)
# SSA begins for if statement (line 8)
module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')

# Call to warn(...): (line 9)
# Processing the call arguments (line 9)
unicode_223340 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 10, 8), 'unicode', u'The gtk* backends have not been tested with Python 3.x')
# Getting the type of 'ImportWarning' (line 11)
ImportWarning_223341 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 11, 8), 'ImportWarning', False)
# Processing the call keyword arguments (line 9)
kwargs_223342 = {}
# Getting the type of 'warnings' (line 9)
warnings_223338 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 9, 4), 'warnings', False)
# Obtaining the member 'warn' of a type (line 9)
warn_223339 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 9, 4), warnings_223338, 'warn')
# Calling warn(args, kwargs) (line 9)
warn_call_result_223343 = invoke(stypy.reporting.localization.Localization(__file__, 9, 4), warn_223339, *[unicode_223340, ImportWarning_223341], **kwargs_223342)

# SSA join for if statement (line 8)
module_type_store = module_type_store.join_ssa_context()



# SSA begins for try-except statement (line 13)
module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 14, 4))

# 'import gobject' statement (line 14)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_223344 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 14, 4), 'gobject')

if (type(import_223344) is not StypyTypeError):

    if (import_223344 != 'pyd_module'):
        __import__(import_223344)
        sys_modules_223345 = sys.modules[import_223344]
        import_module(stypy.reporting.localization.Localization(__file__, 14, 4), 'gobject', sys_modules_223345.module_type_store, module_type_store)
    else:
        import gobject

        import_module(stypy.reporting.localization.Localization(__file__, 14, 4), 'gobject', gobject, module_type_store)

else:
    # Assigning a type to the variable 'gobject' (line 14)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 14, 4), 'gobject', import_223344)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 15, 4))

# 'import gtk' statement (line 15)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_223346 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 15, 4), 'gtk')

if (type(import_223346) is not StypyTypeError):

    if (import_223346 != 'pyd_module'):
        __import__(import_223346)
        sys_modules_223347 = sys.modules[import_223346]
        import_module(stypy.reporting.localization.Localization(__file__, 15, 4), 'gtk', sys_modules_223347.module_type_store, module_type_store)
    else:
        import gtk

        import_module(stypy.reporting.localization.Localization(__file__, 15, 4), 'gtk', gtk, module_type_store)

else:
    # Assigning a type to the variable 'gtk' (line 15)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 15, 4), 'gtk', import_223346)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')


# Assigning a Attribute to a Name (line 15):

# Assigning a Attribute to a Name (line 15):
# Getting the type of 'gtk' (line 15)
gtk_223348 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 15, 22), 'gtk')
# Obtaining the member 'gdk' of a type (line 15)
gdk_223349 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 15, 22), gtk_223348, 'gdk')
# Assigning a type to the variable 'gdk' (line 15)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 15, 16), 'gdk', gdk_223349)
stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 16, 4))

# 'import pango' statement (line 16)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_223350 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 16, 4), 'pango')

if (type(import_223350) is not StypyTypeError):

    if (import_223350 != 'pyd_module'):
        __import__(import_223350)
        sys_modules_223351 = sys.modules[import_223350]
        import_module(stypy.reporting.localization.Localization(__file__, 16, 4), 'pango', sys_modules_223351.module_type_store, module_type_store)
    else:
        import pango

        import_module(stypy.reporting.localization.Localization(__file__, 16, 4), 'pango', pango, module_type_store)

else:
    # Assigning a type to the variable 'pango' (line 16)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 16, 4), 'pango', import_223350)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')

# SSA branch for the except part of a try statement (line 13)
# SSA branch for the except 'ImportError' branch of a try statement (line 13)
module_type_store.open_ssa_branch('except')

# Call to ImportError(...): (line 18)
# Processing the call arguments (line 18)
unicode_223353 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 18, 22), 'unicode', u'Gtk* backend requires pygtk to be installed.')
# Processing the call keyword arguments (line 18)
kwargs_223354 = {}
# Getting the type of 'ImportError' (line 18)
ImportError_223352 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 18, 10), 'ImportError', False)
# Calling ImportError(args, kwargs) (line 18)
ImportError_call_result_223355 = invoke(stypy.reporting.localization.Localization(__file__, 18, 10), ImportError_223352, *[unicode_223353], **kwargs_223354)

ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 18, 4), ImportError_call_result_223355, 'raise parameter', BaseException)
# SSA join for try-except statement (line 13)
module_type_store = module_type_store.join_ssa_context()


# Assigning a Tuple to a Name (line 20):

# Assigning a Tuple to a Name (line 20):

# Obtaining an instance of the builtin type 'tuple' (line 20)
tuple_223356 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 20, 26), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 20)
# Adding element type (line 20)
int_223357 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 20, 26), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 20, 26), tuple_223356, int_223357)
# Adding element type (line 20)
int_223358 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 20, 28), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 20, 26), tuple_223356, int_223358)
# Adding element type (line 20)
int_223359 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 20, 30), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 20, 26), tuple_223356, int_223359)

# Assigning a type to the variable 'pygtk_version_required' (line 20)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 20, 0), 'pygtk_version_required', tuple_223356)


# Getting the type of 'gtk' (line 21)
gtk_223360 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 21, 3), 'gtk')
# Obtaining the member 'pygtk_version' of a type (line 21)
pygtk_version_223361 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 21, 3), gtk_223360, 'pygtk_version')
# Getting the type of 'pygtk_version_required' (line 21)
pygtk_version_required_223362 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 21, 23), 'pygtk_version_required')
# Applying the binary operator '<' (line 21)
result_lt_223363 = python_operator(stypy.reporting.localization.Localization(__file__, 21, 3), '<', pygtk_version_223361, pygtk_version_required_223362)

# Testing the type of an if condition (line 21)
if_condition_223364 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 21, 0), result_lt_223363)
# Assigning a type to the variable 'if_condition_223364' (line 21)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 21, 0), 'if_condition_223364', if_condition_223364)
# SSA begins for if statement (line 21)
module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')

# Call to ImportError(...): (line 22)
# Processing the call arguments (line 22)
unicode_223366 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 22, 23), 'unicode', u'PyGTK %d.%d.%d is installed\nPyGTK %d.%d.%d or later is required')
# Getting the type of 'gtk' (line 24)
gtk_223367 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 24, 25), 'gtk', False)
# Obtaining the member 'pygtk_version' of a type (line 24)
pygtk_version_223368 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 24, 25), gtk_223367, 'pygtk_version')
# Getting the type of 'pygtk_version_required' (line 24)
pygtk_version_required_223369 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 24, 45), 'pygtk_version_required', False)
# Applying the binary operator '+' (line 24)
result_add_223370 = python_operator(stypy.reporting.localization.Localization(__file__, 24, 25), '+', pygtk_version_223368, pygtk_version_required_223369)

# Applying the binary operator '%' (line 22)
result_mod_223371 = python_operator(stypy.reporting.localization.Localization(__file__, 22, 23), '%', unicode_223366, result_add_223370)

# Processing the call keyword arguments (line 22)
kwargs_223372 = {}
# Getting the type of 'ImportError' (line 22)
ImportError_223365 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 22, 10), 'ImportError', False)
# Calling ImportError(args, kwargs) (line 22)
ImportError_call_result_223373 = invoke(stypy.reporting.localization.Localization(__file__, 22, 10), ImportError_223365, *[result_mod_223371], **kwargs_223372)

ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 22, 4), ImportError_call_result_223373, 'raise parameter', BaseException)
# SSA join for if statement (line 21)
module_type_store = module_type_store.join_ssa_context()

# Deleting a member
module_type_store.del_member(stypy.reporting.localization.Localization(__file__, 25, 0), module_type_store, 'pygtk_version_required')

# Assigning a Compare to a Name (line 27):

# Assigning a Compare to a Name (line 27):


# Obtaining the type of the subscript
int_223374 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 27, 39), 'int')
# Getting the type of 'gtk' (line 27)
gtk_223375 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 27, 21), 'gtk')
# Obtaining the member 'pygtk_version' of a type (line 27)
pygtk_version_223376 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 27, 21), gtk_223375, 'pygtk_version')
# Obtaining the member '__getitem__' of a type (line 27)
getitem___223377 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 27, 21), pygtk_version_223376, '__getitem__')
# Calling the subscript (__getitem__) to obtain the elements type (line 27)
subscript_call_result_223378 = invoke(stypy.reporting.localization.Localization(__file__, 27, 21), getitem___223377, int_223374)

int_223379 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 27, 45), 'int')
# Applying the binary operator '>=' (line 27)
result_ge_223380 = python_operator(stypy.reporting.localization.Localization(__file__, 27, 21), '>=', subscript_call_result_223378, int_223379)

# Assigning a type to the variable '_new_tooltip_api' (line 27)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 27, 0), '_new_tooltip_api', result_ge_223380)
stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 29, 0))

# 'import matplotlib' statement (line 29)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_223381 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 29, 0), 'matplotlib')

if (type(import_223381) is not StypyTypeError):

    if (import_223381 != 'pyd_module'):
        __import__(import_223381)
        sys_modules_223382 = sys.modules[import_223381]
        import_module(stypy.reporting.localization.Localization(__file__, 29, 0), 'matplotlib', sys_modules_223382.module_type_store, module_type_store)
    else:
        import matplotlib

        import_module(stypy.reporting.localization.Localization(__file__, 29, 0), 'matplotlib', matplotlib, module_type_store)

else:
    # Assigning a type to the variable 'matplotlib' (line 29)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 29, 0), 'matplotlib', import_223381)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 30, 0))

# 'from matplotlib._pylab_helpers import Gcf' statement (line 30)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_223383 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 30, 0), 'matplotlib._pylab_helpers')

if (type(import_223383) is not StypyTypeError):

    if (import_223383 != 'pyd_module'):
        __import__(import_223383)
        sys_modules_223384 = sys.modules[import_223383]
        import_from_module(stypy.reporting.localization.Localization(__file__, 30, 0), 'matplotlib._pylab_helpers', sys_modules_223384.module_type_store, module_type_store, ['Gcf'])
        nest_module(stypy.reporting.localization.Localization(__file__, 30, 0), __file__, sys_modules_223384, sys_modules_223384.module_type_store, module_type_store)
    else:
        from matplotlib._pylab_helpers import Gcf

        import_from_module(stypy.reporting.localization.Localization(__file__, 30, 0), 'matplotlib._pylab_helpers', None, module_type_store, ['Gcf'], [Gcf])

else:
    # Assigning a type to the variable 'matplotlib._pylab_helpers' (line 30)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 30, 0), 'matplotlib._pylab_helpers', import_223383)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 31, 0))

# 'from matplotlib.backend_bases import _Backend, FigureCanvasBase, FigureManagerBase, NavigationToolbar2, TimerBase, cursors' statement (line 31)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_223385 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 31, 0), 'matplotlib.backend_bases')

if (type(import_223385) is not StypyTypeError):

    if (import_223385 != 'pyd_module'):
        __import__(import_223385)
        sys_modules_223386 = sys.modules[import_223385]
        import_from_module(stypy.reporting.localization.Localization(__file__, 31, 0), 'matplotlib.backend_bases', sys_modules_223386.module_type_store, module_type_store, ['_Backend', 'FigureCanvasBase', 'FigureManagerBase', 'NavigationToolbar2', 'TimerBase', 'cursors'])
        nest_module(stypy.reporting.localization.Localization(__file__, 31, 0), __file__, sys_modules_223386, sys_modules_223386.module_type_store, module_type_store)
    else:
        from matplotlib.backend_bases import _Backend, FigureCanvasBase, FigureManagerBase, NavigationToolbar2, TimerBase, cursors

        import_from_module(stypy.reporting.localization.Localization(__file__, 31, 0), 'matplotlib.backend_bases', None, module_type_store, ['_Backend', 'FigureCanvasBase', 'FigureManagerBase', 'NavigationToolbar2', 'TimerBase', 'cursors'], [_Backend, FigureCanvasBase, FigureManagerBase, NavigationToolbar2, TimerBase, cursors])

else:
    # Assigning a type to the variable 'matplotlib.backend_bases' (line 31)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 31, 0), 'matplotlib.backend_bases', import_223385)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 35, 0))

# 'from matplotlib.backends.backend_gdk import RendererGDK, FigureCanvasGDK' statement (line 35)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_223387 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 35, 0), 'matplotlib.backends.backend_gdk')

if (type(import_223387) is not StypyTypeError):

    if (import_223387 != 'pyd_module'):
        __import__(import_223387)
        sys_modules_223388 = sys.modules[import_223387]
        import_from_module(stypy.reporting.localization.Localization(__file__, 35, 0), 'matplotlib.backends.backend_gdk', sys_modules_223388.module_type_store, module_type_store, ['RendererGDK', 'FigureCanvasGDK'])
        nest_module(stypy.reporting.localization.Localization(__file__, 35, 0), __file__, sys_modules_223388, sys_modules_223388.module_type_store, module_type_store)
    else:
        from matplotlib.backends.backend_gdk import RendererGDK, FigureCanvasGDK

        import_from_module(stypy.reporting.localization.Localization(__file__, 35, 0), 'matplotlib.backends.backend_gdk', None, module_type_store, ['RendererGDK', 'FigureCanvasGDK'], [RendererGDK, FigureCanvasGDK])

else:
    # Assigning a type to the variable 'matplotlib.backends.backend_gdk' (line 35)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 35, 0), 'matplotlib.backends.backend_gdk', import_223387)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 36, 0))

# 'from matplotlib.cbook import is_writable_file_like, warn_deprecated' statement (line 36)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_223389 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 36, 0), 'matplotlib.cbook')

if (type(import_223389) is not StypyTypeError):

    if (import_223389 != 'pyd_module'):
        __import__(import_223389)
        sys_modules_223390 = sys.modules[import_223389]
        import_from_module(stypy.reporting.localization.Localization(__file__, 36, 0), 'matplotlib.cbook', sys_modules_223390.module_type_store, module_type_store, ['is_writable_file_like', 'warn_deprecated'])
        nest_module(stypy.reporting.localization.Localization(__file__, 36, 0), __file__, sys_modules_223390, sys_modules_223390.module_type_store, module_type_store)
    else:
        from matplotlib.cbook import is_writable_file_like, warn_deprecated

        import_from_module(stypy.reporting.localization.Localization(__file__, 36, 0), 'matplotlib.cbook', None, module_type_store, ['is_writable_file_like', 'warn_deprecated'], [is_writable_file_like, warn_deprecated])

else:
    # Assigning a type to the variable 'matplotlib.cbook' (line 36)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 36, 0), 'matplotlib.cbook', import_223389)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 37, 0))

# 'from matplotlib.figure import Figure' statement (line 37)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_223391 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 37, 0), 'matplotlib.figure')

if (type(import_223391) is not StypyTypeError):

    if (import_223391 != 'pyd_module'):
        __import__(import_223391)
        sys_modules_223392 = sys.modules[import_223391]
        import_from_module(stypy.reporting.localization.Localization(__file__, 37, 0), 'matplotlib.figure', sys_modules_223392.module_type_store, module_type_store, ['Figure'])
        nest_module(stypy.reporting.localization.Localization(__file__, 37, 0), __file__, sys_modules_223392, sys_modules_223392.module_type_store, module_type_store)
    else:
        from matplotlib.figure import Figure

        import_from_module(stypy.reporting.localization.Localization(__file__, 37, 0), 'matplotlib.figure', None, module_type_store, ['Figure'], [Figure])

else:
    # Assigning a type to the variable 'matplotlib.figure' (line 37)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 37, 0), 'matplotlib.figure', import_223391)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 38, 0))

# 'from matplotlib.widgets import SubplotTool' statement (line 38)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_223393 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 38, 0), 'matplotlib.widgets')

if (type(import_223393) is not StypyTypeError):

    if (import_223393 != 'pyd_module'):
        __import__(import_223393)
        sys_modules_223394 = sys.modules[import_223393]
        import_from_module(stypy.reporting.localization.Localization(__file__, 38, 0), 'matplotlib.widgets', sys_modules_223394.module_type_store, module_type_store, ['SubplotTool'])
        nest_module(stypy.reporting.localization.Localization(__file__, 38, 0), __file__, sys_modules_223394, sys_modules_223394.module_type_store, module_type_store)
    else:
        from matplotlib.widgets import SubplotTool

        import_from_module(stypy.reporting.localization.Localization(__file__, 38, 0), 'matplotlib.widgets', None, module_type_store, ['SubplotTool'], [SubplotTool])

else:
    # Assigning a type to the variable 'matplotlib.widgets' (line 38)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 38, 0), 'matplotlib.widgets', import_223393)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 40, 0))

# 'from matplotlib import cbook, mcolors, lines, markers, rcParams, verbose' statement (line 40)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_223395 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 40, 0), 'matplotlib')

if (type(import_223395) is not StypyTypeError):

    if (import_223395 != 'pyd_module'):
        __import__(import_223395)
        sys_modules_223396 = sys.modules[import_223395]
        import_from_module(stypy.reporting.localization.Localization(__file__, 40, 0), 'matplotlib', sys_modules_223396.module_type_store, module_type_store, ['cbook', 'colors', 'lines', 'markers', 'rcParams', 'verbose'])
        nest_module(stypy.reporting.localization.Localization(__file__, 40, 0), __file__, sys_modules_223396, sys_modules_223396.module_type_store, module_type_store)
    else:
        from matplotlib import cbook, colors as mcolors, lines, markers, rcParams, verbose

        import_from_module(stypy.reporting.localization.Localization(__file__, 40, 0), 'matplotlib', None, module_type_store, ['cbook', 'colors', 'lines', 'markers', 'rcParams', 'verbose'], [cbook, mcolors, lines, markers, rcParams, verbose])

else:
    # Assigning a type to the variable 'matplotlib' (line 40)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 40, 0), 'matplotlib', import_223395)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')


# Assigning a BinOp to a Name (line 43):

# Assigning a BinOp to a Name (line 43):
unicode_223397 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 43, 18), 'unicode', u'%d.%d.%d')
# Getting the type of 'gtk' (line 43)
gtk_223398 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 43, 31), 'gtk')
# Obtaining the member 'pygtk_version' of a type (line 43)
pygtk_version_223399 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 43, 31), gtk_223398, 'pygtk_version')
# Applying the binary operator '%' (line 43)
result_mod_223400 = python_operator(stypy.reporting.localization.Localization(__file__, 43, 18), '%', unicode_223397, pygtk_version_223399)

# Assigning a type to the variable 'backend_version' (line 43)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 43, 0), 'backend_version', result_mod_223400)

# Assigning a Num to a Name (line 47):

# Assigning a Num to a Name (line 47):
int_223401 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 47, 18), 'int')
# Assigning a type to the variable 'PIXELS_PER_INCH' (line 47)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 47, 0), 'PIXELS_PER_INCH', int_223401)

# Call to filterwarnings(...): (line 50)
# Processing the call arguments (line 50)
unicode_223404 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 50, 24), 'unicode', u'ignore')
unicode_223405 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 50, 34), 'unicode', u'.*Unable to retrieve the file info for.*')
# Getting the type of 'gtk' (line 50)
gtk_223406 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 50, 78), 'gtk', False)
# Obtaining the member 'Warning' of a type (line 50)
Warning_223407 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 50, 78), gtk_223406, 'Warning')
# Processing the call keyword arguments (line 50)
kwargs_223408 = {}
# Getting the type of 'warnings' (line 50)
warnings_223402 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 50, 0), 'warnings', False)
# Obtaining the member 'filterwarnings' of a type (line 50)
filterwarnings_223403 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 50, 0), warnings_223402, 'filterwarnings')
# Calling filterwarnings(args, kwargs) (line 50)
filterwarnings_call_result_223409 = invoke(stypy.reporting.localization.Localization(__file__, 50, 0), filterwarnings_223403, *[unicode_223404, unicode_223405, Warning_223407], **kwargs_223408)


# Assigning a Dict to a Name (line 52):

# Assigning a Dict to a Name (line 52):

# Obtaining an instance of the builtin type 'dict' (line 52)
dict_223410 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 52, 10), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 52)
# Adding element type (key, value) (line 52)
# Getting the type of 'cursors' (line 53)
cursors_223411 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 53, 4), 'cursors')
# Obtaining the member 'MOVE' of a type (line 53)
MOVE_223412 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 53, 4), cursors_223411, 'MOVE')

# Call to Cursor(...): (line 53)
# Processing the call arguments (line 53)
# Getting the type of 'gdk' (line 53)
gdk_223415 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 53, 39), 'gdk', False)
# Obtaining the member 'FLEUR' of a type (line 53)
FLEUR_223416 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 53, 39), gdk_223415, 'FLEUR')
# Processing the call keyword arguments (line 53)
kwargs_223417 = {}
# Getting the type of 'gdk' (line 53)
gdk_223413 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 53, 28), 'gdk', False)
# Obtaining the member 'Cursor' of a type (line 53)
Cursor_223414 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 53, 28), gdk_223413, 'Cursor')
# Calling Cursor(args, kwargs) (line 53)
Cursor_call_result_223418 = invoke(stypy.reporting.localization.Localization(__file__, 53, 28), Cursor_223414, *[FLEUR_223416], **kwargs_223417)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 52, 10), dict_223410, (MOVE_223412, Cursor_call_result_223418))
# Adding element type (key, value) (line 52)
# Getting the type of 'cursors' (line 54)
cursors_223419 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 54, 4), 'cursors')
# Obtaining the member 'HAND' of a type (line 54)
HAND_223420 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 54, 4), cursors_223419, 'HAND')

# Call to Cursor(...): (line 54)
# Processing the call arguments (line 54)
# Getting the type of 'gdk' (line 54)
gdk_223423 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 54, 39), 'gdk', False)
# Obtaining the member 'HAND2' of a type (line 54)
HAND2_223424 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 54, 39), gdk_223423, 'HAND2')
# Processing the call keyword arguments (line 54)
kwargs_223425 = {}
# Getting the type of 'gdk' (line 54)
gdk_223421 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 54, 28), 'gdk', False)
# Obtaining the member 'Cursor' of a type (line 54)
Cursor_223422 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 54, 28), gdk_223421, 'Cursor')
# Calling Cursor(args, kwargs) (line 54)
Cursor_call_result_223426 = invoke(stypy.reporting.localization.Localization(__file__, 54, 28), Cursor_223422, *[HAND2_223424], **kwargs_223425)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 52, 10), dict_223410, (HAND_223420, Cursor_call_result_223426))
# Adding element type (key, value) (line 52)
# Getting the type of 'cursors' (line 55)
cursors_223427 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 55, 4), 'cursors')
# Obtaining the member 'POINTER' of a type (line 55)
POINTER_223428 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 55, 4), cursors_223427, 'POINTER')

# Call to Cursor(...): (line 55)
# Processing the call arguments (line 55)
# Getting the type of 'gdk' (line 55)
gdk_223431 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 55, 39), 'gdk', False)
# Obtaining the member 'LEFT_PTR' of a type (line 55)
LEFT_PTR_223432 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 55, 39), gdk_223431, 'LEFT_PTR')
# Processing the call keyword arguments (line 55)
kwargs_223433 = {}
# Getting the type of 'gdk' (line 55)
gdk_223429 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 55, 28), 'gdk', False)
# Obtaining the member 'Cursor' of a type (line 55)
Cursor_223430 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 55, 28), gdk_223429, 'Cursor')
# Calling Cursor(args, kwargs) (line 55)
Cursor_call_result_223434 = invoke(stypy.reporting.localization.Localization(__file__, 55, 28), Cursor_223430, *[LEFT_PTR_223432], **kwargs_223433)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 52, 10), dict_223410, (POINTER_223428, Cursor_call_result_223434))
# Adding element type (key, value) (line 52)
# Getting the type of 'cursors' (line 56)
cursors_223435 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 56, 4), 'cursors')
# Obtaining the member 'SELECT_REGION' of a type (line 56)
SELECT_REGION_223436 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 56, 4), cursors_223435, 'SELECT_REGION')

# Call to Cursor(...): (line 56)
# Processing the call arguments (line 56)
# Getting the type of 'gdk' (line 56)
gdk_223439 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 56, 39), 'gdk', False)
# Obtaining the member 'TCROSS' of a type (line 56)
TCROSS_223440 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 56, 39), gdk_223439, 'TCROSS')
# Processing the call keyword arguments (line 56)
kwargs_223441 = {}
# Getting the type of 'gdk' (line 56)
gdk_223437 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 56, 28), 'gdk', False)
# Obtaining the member 'Cursor' of a type (line 56)
Cursor_223438 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 56, 28), gdk_223437, 'Cursor')
# Calling Cursor(args, kwargs) (line 56)
Cursor_call_result_223442 = invoke(stypy.reporting.localization.Localization(__file__, 56, 28), Cursor_223438, *[TCROSS_223440], **kwargs_223441)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 52, 10), dict_223410, (SELECT_REGION_223436, Cursor_call_result_223442))
# Adding element type (key, value) (line 52)
# Getting the type of 'cursors' (line 57)
cursors_223443 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 57, 4), 'cursors')
# Obtaining the member 'WAIT' of a type (line 57)
WAIT_223444 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 57, 4), cursors_223443, 'WAIT')

# Call to Cursor(...): (line 57)
# Processing the call arguments (line 57)
# Getting the type of 'gdk' (line 57)
gdk_223447 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 57, 39), 'gdk', False)
# Obtaining the member 'WATCH' of a type (line 57)
WATCH_223448 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 57, 39), gdk_223447, 'WATCH')
# Processing the call keyword arguments (line 57)
kwargs_223449 = {}
# Getting the type of 'gdk' (line 57)
gdk_223445 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 57, 28), 'gdk', False)
# Obtaining the member 'Cursor' of a type (line 57)
Cursor_223446 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 57, 28), gdk_223445, 'Cursor')
# Calling Cursor(args, kwargs) (line 57)
Cursor_call_result_223450 = invoke(stypy.reporting.localization.Localization(__file__, 57, 28), Cursor_223446, *[WATCH_223448], **kwargs_223449)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 52, 10), dict_223410, (WAIT_223444, Cursor_call_result_223450))

# Assigning a type to the variable 'cursord' (line 52)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 52, 0), 'cursord', dict_223410)

@norecursion
def GTK_WIDGET_DRAWABLE(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'GTK_WIDGET_DRAWABLE'
    module_type_store = module_type_store.open_function_context('GTK_WIDGET_DRAWABLE', 61, 0, False)
    
    # Passed parameters checking function
    GTK_WIDGET_DRAWABLE.stypy_localization = localization
    GTK_WIDGET_DRAWABLE.stypy_type_of_self = None
    GTK_WIDGET_DRAWABLE.stypy_type_store = module_type_store
    GTK_WIDGET_DRAWABLE.stypy_function_name = 'GTK_WIDGET_DRAWABLE'
    GTK_WIDGET_DRAWABLE.stypy_param_names_list = ['w']
    GTK_WIDGET_DRAWABLE.stypy_varargs_param_name = None
    GTK_WIDGET_DRAWABLE.stypy_kwargs_param_name = None
    GTK_WIDGET_DRAWABLE.stypy_call_defaults = defaults
    GTK_WIDGET_DRAWABLE.stypy_call_varargs = varargs
    GTK_WIDGET_DRAWABLE.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'GTK_WIDGET_DRAWABLE', ['w'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'GTK_WIDGET_DRAWABLE', localization, ['w'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'GTK_WIDGET_DRAWABLE(...)' code ##################

    
    # Assigning a Call to a Name (line 62):
    
    # Assigning a Call to a Name (line 62):
    
    # Call to flags(...): (line 62)
    # Processing the call keyword arguments (line 62)
    kwargs_223453 = {}
    # Getting the type of 'w' (line 62)
    w_223451 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 62, 12), 'w', False)
    # Obtaining the member 'flags' of a type (line 62)
    flags_223452 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 62, 12), w_223451, 'flags')
    # Calling flags(args, kwargs) (line 62)
    flags_call_result_223454 = invoke(stypy.reporting.localization.Localization(__file__, 62, 12), flags_223452, *[], **kwargs_223453)
    
    # Assigning a type to the variable 'flags' (line 62)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 62, 4), 'flags', flags_call_result_223454)
    
    # Evaluating a boolean operation
    
    # Getting the type of 'flags' (line 63)
    flags_223455 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 63, 11), 'flags')
    # Getting the type of 'gtk' (line 63)
    gtk_223456 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 63, 19), 'gtk')
    # Obtaining the member 'VISIBLE' of a type (line 63)
    VISIBLE_223457 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 63, 19), gtk_223456, 'VISIBLE')
    # Applying the binary operator '&' (line 63)
    result_and__223458 = python_operator(stypy.reporting.localization.Localization(__file__, 63, 11), '&', flags_223455, VISIBLE_223457)
    
    int_223459 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 63, 34), 'int')
    # Applying the binary operator '!=' (line 63)
    result_ne_223460 = python_operator(stypy.reporting.localization.Localization(__file__, 63, 11), '!=', result_and__223458, int_223459)
    
    
    # Getting the type of 'flags' (line 63)
    flags_223461 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 63, 40), 'flags')
    # Getting the type of 'gtk' (line 63)
    gtk_223462 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 63, 48), 'gtk')
    # Obtaining the member 'MAPPED' of a type (line 63)
    MAPPED_223463 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 63, 48), gtk_223462, 'MAPPED')
    # Applying the binary operator '&' (line 63)
    result_and__223464 = python_operator(stypy.reporting.localization.Localization(__file__, 63, 40), '&', flags_223461, MAPPED_223463)
    
    int_223465 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 63, 62), 'int')
    # Applying the binary operator '!=' (line 63)
    result_ne_223466 = python_operator(stypy.reporting.localization.Localization(__file__, 63, 40), '!=', result_and__223464, int_223465)
    
    # Applying the binary operator 'and' (line 63)
    result_and_keyword_223467 = python_operator(stypy.reporting.localization.Localization(__file__, 63, 11), 'and', result_ne_223460, result_ne_223466)
    
    # Assigning a type to the variable 'stypy_return_type' (line 63)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 63, 4), 'stypy_return_type', result_and_keyword_223467)
    
    # ################# End of 'GTK_WIDGET_DRAWABLE(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'GTK_WIDGET_DRAWABLE' in the type store
    # Getting the type of 'stypy_return_type' (line 61)
    stypy_return_type_223468 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 61, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_223468)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'GTK_WIDGET_DRAWABLE'
    return stypy_return_type_223468

# Assigning a type to the variable 'GTK_WIDGET_DRAWABLE' (line 61)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 61, 0), 'GTK_WIDGET_DRAWABLE', GTK_WIDGET_DRAWABLE)
# Declaration of the 'TimerGTK' class
# Getting the type of 'TimerBase' (line 66)
TimerBase_223469 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 66, 15), 'TimerBase')

class TimerGTK(TimerBase_223469, ):
    unicode_223470 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 82, (-1)), 'unicode', u'\n    Subclass of :class:`backend_bases.TimerBase` using GTK for timer events.\n\n    Attributes\n    ----------\n    interval : int\n        The time between timer events in milliseconds. Default is 1000 ms.\n    single_shot : bool\n        Boolean flag indicating whether this timer should operate as single\n        shot (run once and then stop). Defaults to False.\n    callbacks : list\n        Stores list of (func, args) tuples that will be called upon timer\n        events. This list can be manipulated directly, or the functions\n        `add_callback` and `remove_callback` can be used.\n\n    ')

    @norecursion
    def _timer_start(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_timer_start'
        module_type_store = module_type_store.open_function_context('_timer_start', 83, 4, False)
        # Assigning a type to the variable 'self' (line 84)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 84, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TimerGTK._timer_start.__dict__.__setitem__('stypy_localization', localization)
        TimerGTK._timer_start.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TimerGTK._timer_start.__dict__.__setitem__('stypy_type_store', module_type_store)
        TimerGTK._timer_start.__dict__.__setitem__('stypy_function_name', 'TimerGTK._timer_start')
        TimerGTK._timer_start.__dict__.__setitem__('stypy_param_names_list', [])
        TimerGTK._timer_start.__dict__.__setitem__('stypy_varargs_param_name', None)
        TimerGTK._timer_start.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TimerGTK._timer_start.__dict__.__setitem__('stypy_call_defaults', defaults)
        TimerGTK._timer_start.__dict__.__setitem__('stypy_call_varargs', varargs)
        TimerGTK._timer_start.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TimerGTK._timer_start.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TimerGTK._timer_start', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_timer_start', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_timer_start(...)' code ##################

        
        # Call to _timer_stop(...): (line 86)
        # Processing the call keyword arguments (line 86)
        kwargs_223473 = {}
        # Getting the type of 'self' (line 86)
        self_223471 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 8), 'self', False)
        # Obtaining the member '_timer_stop' of a type (line 86)
        _timer_stop_223472 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 86, 8), self_223471, '_timer_stop')
        # Calling _timer_stop(args, kwargs) (line 86)
        _timer_stop_call_result_223474 = invoke(stypy.reporting.localization.Localization(__file__, 86, 8), _timer_stop_223472, *[], **kwargs_223473)
        
        
        # Assigning a Call to a Attribute (line 87):
        
        # Assigning a Call to a Attribute (line 87):
        
        # Call to timeout_add(...): (line 87)
        # Processing the call arguments (line 87)
        # Getting the type of 'self' (line 87)
        self_223477 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 87, 42), 'self', False)
        # Obtaining the member '_interval' of a type (line 87)
        _interval_223478 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 87, 42), self_223477, '_interval')
        # Getting the type of 'self' (line 87)
        self_223479 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 87, 58), 'self', False)
        # Obtaining the member '_on_timer' of a type (line 87)
        _on_timer_223480 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 87, 58), self_223479, '_on_timer')
        # Processing the call keyword arguments (line 87)
        kwargs_223481 = {}
        # Getting the type of 'gobject' (line 87)
        gobject_223475 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 87, 22), 'gobject', False)
        # Obtaining the member 'timeout_add' of a type (line 87)
        timeout_add_223476 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 87, 22), gobject_223475, 'timeout_add')
        # Calling timeout_add(args, kwargs) (line 87)
        timeout_add_call_result_223482 = invoke(stypy.reporting.localization.Localization(__file__, 87, 22), timeout_add_223476, *[_interval_223478, _on_timer_223480], **kwargs_223481)
        
        # Getting the type of 'self' (line 87)
        self_223483 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 87, 8), 'self')
        # Setting the type of the member '_timer' of a type (line 87)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 87, 8), self_223483, '_timer', timeout_add_call_result_223482)
        
        # ################# End of '_timer_start(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_timer_start' in the type store
        # Getting the type of 'stypy_return_type' (line 83)
        stypy_return_type_223484 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 83, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_223484)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_timer_start'
        return stypy_return_type_223484


    @norecursion
    def _timer_stop(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_timer_stop'
        module_type_store = module_type_store.open_function_context('_timer_stop', 89, 4, False)
        # Assigning a type to the variable 'self' (line 90)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 90, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TimerGTK._timer_stop.__dict__.__setitem__('stypy_localization', localization)
        TimerGTK._timer_stop.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TimerGTK._timer_stop.__dict__.__setitem__('stypy_type_store', module_type_store)
        TimerGTK._timer_stop.__dict__.__setitem__('stypy_function_name', 'TimerGTK._timer_stop')
        TimerGTK._timer_stop.__dict__.__setitem__('stypy_param_names_list', [])
        TimerGTK._timer_stop.__dict__.__setitem__('stypy_varargs_param_name', None)
        TimerGTK._timer_stop.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TimerGTK._timer_stop.__dict__.__setitem__('stypy_call_defaults', defaults)
        TimerGTK._timer_stop.__dict__.__setitem__('stypy_call_varargs', varargs)
        TimerGTK._timer_stop.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TimerGTK._timer_stop.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TimerGTK._timer_stop', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_timer_stop', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_timer_stop(...)' code ##################

        
        
        # Getting the type of 'self' (line 90)
        self_223485 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 90, 11), 'self')
        # Obtaining the member '_timer' of a type (line 90)
        _timer_223486 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 90, 11), self_223485, '_timer')
        # Getting the type of 'None' (line 90)
        None_223487 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 90, 30), 'None')
        # Applying the binary operator 'isnot' (line 90)
        result_is_not_223488 = python_operator(stypy.reporting.localization.Localization(__file__, 90, 11), 'isnot', _timer_223486, None_223487)
        
        # Testing the type of an if condition (line 90)
        if_condition_223489 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 90, 8), result_is_not_223488)
        # Assigning a type to the variable 'if_condition_223489' (line 90)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 90, 8), 'if_condition_223489', if_condition_223489)
        # SSA begins for if statement (line 90)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to source_remove(...): (line 91)
        # Processing the call arguments (line 91)
        # Getting the type of 'self' (line 91)
        self_223492 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 91, 34), 'self', False)
        # Obtaining the member '_timer' of a type (line 91)
        _timer_223493 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 91, 34), self_223492, '_timer')
        # Processing the call keyword arguments (line 91)
        kwargs_223494 = {}
        # Getting the type of 'gobject' (line 91)
        gobject_223490 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 91, 12), 'gobject', False)
        # Obtaining the member 'source_remove' of a type (line 91)
        source_remove_223491 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 91, 12), gobject_223490, 'source_remove')
        # Calling source_remove(args, kwargs) (line 91)
        source_remove_call_result_223495 = invoke(stypy.reporting.localization.Localization(__file__, 91, 12), source_remove_223491, *[_timer_223493], **kwargs_223494)
        
        
        # Assigning a Name to a Attribute (line 92):
        
        # Assigning a Name to a Attribute (line 92):
        # Getting the type of 'None' (line 92)
        None_223496 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 92, 26), 'None')
        # Getting the type of 'self' (line 92)
        self_223497 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 92, 12), 'self')
        # Setting the type of the member '_timer' of a type (line 92)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 92, 12), self_223497, '_timer', None_223496)
        # SSA join for if statement (line 90)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of '_timer_stop(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_timer_stop' in the type store
        # Getting the type of 'stypy_return_type' (line 89)
        stypy_return_type_223498 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 89, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_223498)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_timer_stop'
        return stypy_return_type_223498


    @norecursion
    def _timer_set_interval(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_timer_set_interval'
        module_type_store = module_type_store.open_function_context('_timer_set_interval', 94, 4, False)
        # Assigning a type to the variable 'self' (line 95)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 95, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TimerGTK._timer_set_interval.__dict__.__setitem__('stypy_localization', localization)
        TimerGTK._timer_set_interval.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TimerGTK._timer_set_interval.__dict__.__setitem__('stypy_type_store', module_type_store)
        TimerGTK._timer_set_interval.__dict__.__setitem__('stypy_function_name', 'TimerGTK._timer_set_interval')
        TimerGTK._timer_set_interval.__dict__.__setitem__('stypy_param_names_list', [])
        TimerGTK._timer_set_interval.__dict__.__setitem__('stypy_varargs_param_name', None)
        TimerGTK._timer_set_interval.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TimerGTK._timer_set_interval.__dict__.__setitem__('stypy_call_defaults', defaults)
        TimerGTK._timer_set_interval.__dict__.__setitem__('stypy_call_varargs', varargs)
        TimerGTK._timer_set_interval.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TimerGTK._timer_set_interval.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TimerGTK._timer_set_interval', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_timer_set_interval', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_timer_set_interval(...)' code ##################

        
        
        # Getting the type of 'self' (line 96)
        self_223499 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 96, 11), 'self')
        # Obtaining the member '_timer' of a type (line 96)
        _timer_223500 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 96, 11), self_223499, '_timer')
        # Getting the type of 'None' (line 96)
        None_223501 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 96, 30), 'None')
        # Applying the binary operator 'isnot' (line 96)
        result_is_not_223502 = python_operator(stypy.reporting.localization.Localization(__file__, 96, 11), 'isnot', _timer_223500, None_223501)
        
        # Testing the type of an if condition (line 96)
        if_condition_223503 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 96, 8), result_is_not_223502)
        # Assigning a type to the variable 'if_condition_223503' (line 96)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 96, 8), 'if_condition_223503', if_condition_223503)
        # SSA begins for if statement (line 96)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to _timer_stop(...): (line 97)
        # Processing the call keyword arguments (line 97)
        kwargs_223506 = {}
        # Getting the type of 'self' (line 97)
        self_223504 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 97, 12), 'self', False)
        # Obtaining the member '_timer_stop' of a type (line 97)
        _timer_stop_223505 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 97, 12), self_223504, '_timer_stop')
        # Calling _timer_stop(args, kwargs) (line 97)
        _timer_stop_call_result_223507 = invoke(stypy.reporting.localization.Localization(__file__, 97, 12), _timer_stop_223505, *[], **kwargs_223506)
        
        
        # Call to _timer_start(...): (line 98)
        # Processing the call keyword arguments (line 98)
        kwargs_223510 = {}
        # Getting the type of 'self' (line 98)
        self_223508 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 98, 12), 'self', False)
        # Obtaining the member '_timer_start' of a type (line 98)
        _timer_start_223509 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 98, 12), self_223508, '_timer_start')
        # Calling _timer_start(args, kwargs) (line 98)
        _timer_start_call_result_223511 = invoke(stypy.reporting.localization.Localization(__file__, 98, 12), _timer_start_223509, *[], **kwargs_223510)
        
        # SSA join for if statement (line 96)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of '_timer_set_interval(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_timer_set_interval' in the type store
        # Getting the type of 'stypy_return_type' (line 94)
        stypy_return_type_223512 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 94, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_223512)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_timer_set_interval'
        return stypy_return_type_223512


    @norecursion
    def _on_timer(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_on_timer'
        module_type_store = module_type_store.open_function_context('_on_timer', 100, 4, False)
        # Assigning a type to the variable 'self' (line 101)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 101, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TimerGTK._on_timer.__dict__.__setitem__('stypy_localization', localization)
        TimerGTK._on_timer.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TimerGTK._on_timer.__dict__.__setitem__('stypy_type_store', module_type_store)
        TimerGTK._on_timer.__dict__.__setitem__('stypy_function_name', 'TimerGTK._on_timer')
        TimerGTK._on_timer.__dict__.__setitem__('stypy_param_names_list', [])
        TimerGTK._on_timer.__dict__.__setitem__('stypy_varargs_param_name', None)
        TimerGTK._on_timer.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TimerGTK._on_timer.__dict__.__setitem__('stypy_call_defaults', defaults)
        TimerGTK._on_timer.__dict__.__setitem__('stypy_call_varargs', varargs)
        TimerGTK._on_timer.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TimerGTK._on_timer.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TimerGTK._on_timer', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_on_timer', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_on_timer(...)' code ##################

        
        # Call to _on_timer(...): (line 101)
        # Processing the call arguments (line 101)
        # Getting the type of 'self' (line 101)
        self_223515 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 101, 28), 'self', False)
        # Processing the call keyword arguments (line 101)
        kwargs_223516 = {}
        # Getting the type of 'TimerBase' (line 101)
        TimerBase_223513 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 101, 8), 'TimerBase', False)
        # Obtaining the member '_on_timer' of a type (line 101)
        _on_timer_223514 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 101, 8), TimerBase_223513, '_on_timer')
        # Calling _on_timer(args, kwargs) (line 101)
        _on_timer_call_result_223517 = invoke(stypy.reporting.localization.Localization(__file__, 101, 8), _on_timer_223514, *[self_223515], **kwargs_223516)
        
        
        
        # Evaluating a boolean operation
        
        
        # Call to len(...): (line 105)
        # Processing the call arguments (line 105)
        # Getting the type of 'self' (line 105)
        self_223519 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 105, 15), 'self', False)
        # Obtaining the member 'callbacks' of a type (line 105)
        callbacks_223520 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 105, 15), self_223519, 'callbacks')
        # Processing the call keyword arguments (line 105)
        kwargs_223521 = {}
        # Getting the type of 'len' (line 105)
        len_223518 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 105, 11), 'len', False)
        # Calling len(args, kwargs) (line 105)
        len_call_result_223522 = invoke(stypy.reporting.localization.Localization(__file__, 105, 11), len_223518, *[callbacks_223520], **kwargs_223521)
        
        int_223523 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 105, 33), 'int')
        # Applying the binary operator '>' (line 105)
        result_gt_223524 = python_operator(stypy.reporting.localization.Localization(__file__, 105, 11), '>', len_call_result_223522, int_223523)
        
        
        # Getting the type of 'self' (line 105)
        self_223525 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 105, 43), 'self')
        # Obtaining the member '_single' of a type (line 105)
        _single_223526 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 105, 43), self_223525, '_single')
        # Applying the 'not' unary operator (line 105)
        result_not__223527 = python_operator(stypy.reporting.localization.Localization(__file__, 105, 39), 'not', _single_223526)
        
        # Applying the binary operator 'and' (line 105)
        result_and_keyword_223528 = python_operator(stypy.reporting.localization.Localization(__file__, 105, 11), 'and', result_gt_223524, result_not__223527)
        
        # Testing the type of an if condition (line 105)
        if_condition_223529 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 105, 8), result_and_keyword_223528)
        # Assigning a type to the variable 'if_condition_223529' (line 105)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 105, 8), 'if_condition_223529', if_condition_223529)
        # SSA begins for if statement (line 105)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        # Getting the type of 'True' (line 106)
        True_223530 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 106, 19), 'True')
        # Assigning a type to the variable 'stypy_return_type' (line 106)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 106, 12), 'stypy_return_type', True_223530)
        # SSA branch for the else part of an if statement (line 105)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Name to a Attribute (line 108):
        
        # Assigning a Name to a Attribute (line 108):
        # Getting the type of 'None' (line 108)
        None_223531 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 108, 26), 'None')
        # Getting the type of 'self' (line 108)
        self_223532 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 108, 12), 'self')
        # Setting the type of the member '_timer' of a type (line 108)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 108, 12), self_223532, '_timer', None_223531)
        # Getting the type of 'False' (line 109)
        False_223533 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 109, 19), 'False')
        # Assigning a type to the variable 'stypy_return_type' (line 109)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 109, 12), 'stypy_return_type', False_223533)
        # SSA join for if statement (line 105)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of '_on_timer(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_on_timer' in the type store
        # Getting the type of 'stypy_return_type' (line 100)
        stypy_return_type_223534 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 100, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_223534)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_on_timer'
        return stypy_return_type_223534


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 66, 0, False)
        # Assigning a type to the variable 'self' (line 67)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 67, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TimerGTK.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'TimerGTK' (line 66)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 66, 0), 'TimerGTK', TimerGTK)
# Declaration of the 'FigureCanvasGTK' class
# Getting the type of 'gtk' (line 112)
gtk_223535 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 112, 23), 'gtk')
# Obtaining the member 'DrawingArea' of a type (line 112)
DrawingArea_223536 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 112, 23), gtk_223535, 'DrawingArea')
# Getting the type of 'FigureCanvasBase' (line 112)
FigureCanvasBase_223537 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 112, 40), 'FigureCanvasBase')

class FigureCanvasGTK(DrawingArea_223536, FigureCanvasBase_223537, ):
    
    # Assigning a Dict to a Name (line 113):
    
    # Assigning a BinOp to a Name (line 170):

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 180, 4, False)
        # Assigning a type to the variable 'self' (line 181)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 181, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FigureCanvasGTK.__init__', ['figure'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['figure'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        
        # Getting the type of 'self' (line 181)
        self_223538 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 181, 11), 'self')
        # Obtaining the member '__class__' of a type (line 181)
        class___223539 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 181, 11), self_223538, '__class__')
        # Getting the type of 'matplotlib' (line 181)
        matplotlib_223540 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 181, 29), 'matplotlib')
        # Obtaining the member 'backends' of a type (line 181)
        backends_223541 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 181, 29), matplotlib_223540, 'backends')
        # Obtaining the member 'backend_gtk' of a type (line 181)
        backend_gtk_223542 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 181, 29), backends_223541, 'backend_gtk')
        # Obtaining the member 'FigureCanvasGTK' of a type (line 181)
        FigureCanvasGTK_223543 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 181, 29), backend_gtk_223542, 'FigureCanvasGTK')
        # Applying the binary operator '==' (line 181)
        result_eq_223544 = python_operator(stypy.reporting.localization.Localization(__file__, 181, 11), '==', class___223539, FigureCanvasGTK_223543)
        
        # Testing the type of an if condition (line 181)
        if_condition_223545 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 181, 8), result_eq_223544)
        # Assigning a type to the variable 'if_condition_223545' (line 181)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 181, 8), 'if_condition_223545', if_condition_223545)
        # SSA begins for if statement (line 181)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to warn_deprecated(...): (line 182)
        # Processing the call arguments (line 182)
        unicode_223547 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 182, 28), 'unicode', u'2.0')
        # Processing the call keyword arguments (line 182)
        unicode_223548 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 182, 43), 'unicode', u'The GTK backend is deprecated. It is untested, known to be broken and will be removed in Matplotlib 2.2. Use the GTKAgg backend instead. See Matplotlib usage FAQ for more info on backends.')
        keyword_223549 = unicode_223548
        unicode_223550 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 188, 40), 'unicode', u'GTKAgg')
        keyword_223551 = unicode_223550
        kwargs_223552 = {'message': keyword_223549, 'alternative': keyword_223551}
        # Getting the type of 'warn_deprecated' (line 182)
        warn_deprecated_223546 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 182, 12), 'warn_deprecated', False)
        # Calling warn_deprecated(args, kwargs) (line 182)
        warn_deprecated_call_result_223553 = invoke(stypy.reporting.localization.Localization(__file__, 182, 12), warn_deprecated_223546, *[unicode_223547], **kwargs_223552)
        
        # SSA join for if statement (line 181)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to __init__(...): (line 189)
        # Processing the call arguments (line 189)
        # Getting the type of 'self' (line 189)
        self_223556 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 189, 34), 'self', False)
        # Getting the type of 'figure' (line 189)
        figure_223557 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 189, 40), 'figure', False)
        # Processing the call keyword arguments (line 189)
        kwargs_223558 = {}
        # Getting the type of 'FigureCanvasBase' (line 189)
        FigureCanvasBase_223554 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 189, 8), 'FigureCanvasBase', False)
        # Obtaining the member '__init__' of a type (line 189)
        init___223555 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 189, 8), FigureCanvasBase_223554, '__init__')
        # Calling __init__(args, kwargs) (line 189)
        init___call_result_223559 = invoke(stypy.reporting.localization.Localization(__file__, 189, 8), init___223555, *[self_223556, figure_223557], **kwargs_223558)
        
        
        # Call to __init__(...): (line 190)
        # Processing the call arguments (line 190)
        # Getting the type of 'self' (line 190)
        self_223563 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 190, 33), 'self', False)
        # Processing the call keyword arguments (line 190)
        kwargs_223564 = {}
        # Getting the type of 'gtk' (line 190)
        gtk_223560 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 190, 8), 'gtk', False)
        # Obtaining the member 'DrawingArea' of a type (line 190)
        DrawingArea_223561 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 190, 8), gtk_223560, 'DrawingArea')
        # Obtaining the member '__init__' of a type (line 190)
        init___223562 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 190, 8), DrawingArea_223561, '__init__')
        # Calling __init__(args, kwargs) (line 190)
        init___call_result_223565 = invoke(stypy.reporting.localization.Localization(__file__, 190, 8), init___223562, *[self_223563], **kwargs_223564)
        
        
        # Assigning a Num to a Attribute (line 192):
        
        # Assigning a Num to a Attribute (line 192):
        int_223566 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 192, 30), 'int')
        # Getting the type of 'self' (line 192)
        self_223567 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 192, 8), 'self')
        # Setting the type of the member '_idle_draw_id' of a type (line 192)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 192, 8), self_223567, '_idle_draw_id', int_223566)
        
        # Assigning a Name to a Attribute (line 193):
        
        # Assigning a Name to a Attribute (line 193):
        # Getting the type of 'True' (line 193)
        True_223568 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 193, 30), 'True')
        # Getting the type of 'self' (line 193)
        self_223569 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 193, 8), 'self')
        # Setting the type of the member '_need_redraw' of a type (line 193)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 193, 8), self_223569, '_need_redraw', True_223568)
        
        # Assigning a Num to a Attribute (line 194):
        
        # Assigning a Num to a Attribute (line 194):
        int_223570 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 194, 30), 'int')
        # Getting the type of 'self' (line 194)
        self_223571 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 194, 8), 'self')
        # Setting the type of the member '_pixmap_width' of a type (line 194)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 194, 8), self_223571, '_pixmap_width', int_223570)
        
        # Assigning a Num to a Attribute (line 195):
        
        # Assigning a Num to a Attribute (line 195):
        int_223572 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 195, 30), 'int')
        # Getting the type of 'self' (line 195)
        self_223573 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 195, 8), 'self')
        # Setting the type of the member '_pixmap_height' of a type (line 195)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 195, 8), self_223573, '_pixmap_height', int_223572)
        
        # Assigning a Name to a Attribute (line 196):
        
        # Assigning a Name to a Attribute (line 196):
        # Getting the type of 'None' (line 196)
        None_223574 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 196, 30), 'None')
        # Getting the type of 'self' (line 196)
        self_223575 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 196, 8), 'self')
        # Setting the type of the member '_lastCursor' of a type (line 196)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 196, 8), self_223575, '_lastCursor', None_223574)
        
        # Call to connect(...): (line 198)
        # Processing the call arguments (line 198)
        unicode_223578 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 198, 21), 'unicode', u'scroll_event')
        # Getting the type of 'self' (line 198)
        self_223579 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 198, 45), 'self', False)
        # Obtaining the member 'scroll_event' of a type (line 198)
        scroll_event_223580 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 198, 45), self_223579, 'scroll_event')
        # Processing the call keyword arguments (line 198)
        kwargs_223581 = {}
        # Getting the type of 'self' (line 198)
        self_223576 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 198, 8), 'self', False)
        # Obtaining the member 'connect' of a type (line 198)
        connect_223577 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 198, 8), self_223576, 'connect')
        # Calling connect(args, kwargs) (line 198)
        connect_call_result_223582 = invoke(stypy.reporting.localization.Localization(__file__, 198, 8), connect_223577, *[unicode_223578, scroll_event_223580], **kwargs_223581)
        
        
        # Call to connect(...): (line 199)
        # Processing the call arguments (line 199)
        unicode_223585 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 199, 21), 'unicode', u'button_press_event')
        # Getting the type of 'self' (line 199)
        self_223586 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 199, 45), 'self', False)
        # Obtaining the member 'button_press_event' of a type (line 199)
        button_press_event_223587 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 199, 45), self_223586, 'button_press_event')
        # Processing the call keyword arguments (line 199)
        kwargs_223588 = {}
        # Getting the type of 'self' (line 199)
        self_223583 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 199, 8), 'self', False)
        # Obtaining the member 'connect' of a type (line 199)
        connect_223584 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 199, 8), self_223583, 'connect')
        # Calling connect(args, kwargs) (line 199)
        connect_call_result_223589 = invoke(stypy.reporting.localization.Localization(__file__, 199, 8), connect_223584, *[unicode_223585, button_press_event_223587], **kwargs_223588)
        
        
        # Call to connect(...): (line 200)
        # Processing the call arguments (line 200)
        unicode_223592 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 200, 21), 'unicode', u'button_release_event')
        # Getting the type of 'self' (line 200)
        self_223593 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 200, 45), 'self', False)
        # Obtaining the member 'button_release_event' of a type (line 200)
        button_release_event_223594 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 200, 45), self_223593, 'button_release_event')
        # Processing the call keyword arguments (line 200)
        kwargs_223595 = {}
        # Getting the type of 'self' (line 200)
        self_223590 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 200, 8), 'self', False)
        # Obtaining the member 'connect' of a type (line 200)
        connect_223591 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 200, 8), self_223590, 'connect')
        # Calling connect(args, kwargs) (line 200)
        connect_call_result_223596 = invoke(stypy.reporting.localization.Localization(__file__, 200, 8), connect_223591, *[unicode_223592, button_release_event_223594], **kwargs_223595)
        
        
        # Call to connect(...): (line 201)
        # Processing the call arguments (line 201)
        unicode_223599 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 201, 21), 'unicode', u'configure_event')
        # Getting the type of 'self' (line 201)
        self_223600 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 201, 45), 'self', False)
        # Obtaining the member 'configure_event' of a type (line 201)
        configure_event_223601 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 201, 45), self_223600, 'configure_event')
        # Processing the call keyword arguments (line 201)
        kwargs_223602 = {}
        # Getting the type of 'self' (line 201)
        self_223597 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 201, 8), 'self', False)
        # Obtaining the member 'connect' of a type (line 201)
        connect_223598 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 201, 8), self_223597, 'connect')
        # Calling connect(args, kwargs) (line 201)
        connect_call_result_223603 = invoke(stypy.reporting.localization.Localization(__file__, 201, 8), connect_223598, *[unicode_223599, configure_event_223601], **kwargs_223602)
        
        
        # Call to connect(...): (line 202)
        # Processing the call arguments (line 202)
        unicode_223606 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 202, 21), 'unicode', u'expose_event')
        # Getting the type of 'self' (line 202)
        self_223607 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 202, 45), 'self', False)
        # Obtaining the member 'expose_event' of a type (line 202)
        expose_event_223608 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 202, 45), self_223607, 'expose_event')
        # Processing the call keyword arguments (line 202)
        kwargs_223609 = {}
        # Getting the type of 'self' (line 202)
        self_223604 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 202, 8), 'self', False)
        # Obtaining the member 'connect' of a type (line 202)
        connect_223605 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 202, 8), self_223604, 'connect')
        # Calling connect(args, kwargs) (line 202)
        connect_call_result_223610 = invoke(stypy.reporting.localization.Localization(__file__, 202, 8), connect_223605, *[unicode_223606, expose_event_223608], **kwargs_223609)
        
        
        # Call to connect(...): (line 203)
        # Processing the call arguments (line 203)
        unicode_223613 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 203, 21), 'unicode', u'key_press_event')
        # Getting the type of 'self' (line 203)
        self_223614 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 203, 45), 'self', False)
        # Obtaining the member 'key_press_event' of a type (line 203)
        key_press_event_223615 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 203, 45), self_223614, 'key_press_event')
        # Processing the call keyword arguments (line 203)
        kwargs_223616 = {}
        # Getting the type of 'self' (line 203)
        self_223611 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 203, 8), 'self', False)
        # Obtaining the member 'connect' of a type (line 203)
        connect_223612 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 203, 8), self_223611, 'connect')
        # Calling connect(args, kwargs) (line 203)
        connect_call_result_223617 = invoke(stypy.reporting.localization.Localization(__file__, 203, 8), connect_223612, *[unicode_223613, key_press_event_223615], **kwargs_223616)
        
        
        # Call to connect(...): (line 204)
        # Processing the call arguments (line 204)
        unicode_223620 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 204, 21), 'unicode', u'key_release_event')
        # Getting the type of 'self' (line 204)
        self_223621 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 204, 45), 'self', False)
        # Obtaining the member 'key_release_event' of a type (line 204)
        key_release_event_223622 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 204, 45), self_223621, 'key_release_event')
        # Processing the call keyword arguments (line 204)
        kwargs_223623 = {}
        # Getting the type of 'self' (line 204)
        self_223618 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 204, 8), 'self', False)
        # Obtaining the member 'connect' of a type (line 204)
        connect_223619 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 204, 8), self_223618, 'connect')
        # Calling connect(args, kwargs) (line 204)
        connect_call_result_223624 = invoke(stypy.reporting.localization.Localization(__file__, 204, 8), connect_223619, *[unicode_223620, key_release_event_223622], **kwargs_223623)
        
        
        # Call to connect(...): (line 205)
        # Processing the call arguments (line 205)
        unicode_223627 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 205, 21), 'unicode', u'motion_notify_event')
        # Getting the type of 'self' (line 205)
        self_223628 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 205, 45), 'self', False)
        # Obtaining the member 'motion_notify_event' of a type (line 205)
        motion_notify_event_223629 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 205, 45), self_223628, 'motion_notify_event')
        # Processing the call keyword arguments (line 205)
        kwargs_223630 = {}
        # Getting the type of 'self' (line 205)
        self_223625 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 205, 8), 'self', False)
        # Obtaining the member 'connect' of a type (line 205)
        connect_223626 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 205, 8), self_223625, 'connect')
        # Calling connect(args, kwargs) (line 205)
        connect_call_result_223631 = invoke(stypy.reporting.localization.Localization(__file__, 205, 8), connect_223626, *[unicode_223627, motion_notify_event_223629], **kwargs_223630)
        
        
        # Call to connect(...): (line 206)
        # Processing the call arguments (line 206)
        unicode_223634 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 206, 21), 'unicode', u'leave_notify_event')
        # Getting the type of 'self' (line 206)
        self_223635 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 206, 45), 'self', False)
        # Obtaining the member 'leave_notify_event' of a type (line 206)
        leave_notify_event_223636 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 206, 45), self_223635, 'leave_notify_event')
        # Processing the call keyword arguments (line 206)
        kwargs_223637 = {}
        # Getting the type of 'self' (line 206)
        self_223632 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 206, 8), 'self', False)
        # Obtaining the member 'connect' of a type (line 206)
        connect_223633 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 206, 8), self_223632, 'connect')
        # Calling connect(args, kwargs) (line 206)
        connect_call_result_223638 = invoke(stypy.reporting.localization.Localization(__file__, 206, 8), connect_223633, *[unicode_223634, leave_notify_event_223636], **kwargs_223637)
        
        
        # Call to connect(...): (line 207)
        # Processing the call arguments (line 207)
        unicode_223641 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 207, 21), 'unicode', u'enter_notify_event')
        # Getting the type of 'self' (line 207)
        self_223642 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 207, 45), 'self', False)
        # Obtaining the member 'enter_notify_event' of a type (line 207)
        enter_notify_event_223643 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 207, 45), self_223642, 'enter_notify_event')
        # Processing the call keyword arguments (line 207)
        kwargs_223644 = {}
        # Getting the type of 'self' (line 207)
        self_223639 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 207, 8), 'self', False)
        # Obtaining the member 'connect' of a type (line 207)
        connect_223640 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 207, 8), self_223639, 'connect')
        # Calling connect(args, kwargs) (line 207)
        connect_call_result_223645 = invoke(stypy.reporting.localization.Localization(__file__, 207, 8), connect_223640, *[unicode_223641, enter_notify_event_223643], **kwargs_223644)
        
        
        # Call to set_events(...): (line 209)
        # Processing the call arguments (line 209)
        # Getting the type of 'self' (line 209)
        self_223648 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 209, 24), 'self', False)
        # Obtaining the member '__class__' of a type (line 209)
        class___223649 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 209, 24), self_223648, '__class__')
        # Obtaining the member 'event_mask' of a type (line 209)
        event_mask_223650 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 209, 24), class___223649, 'event_mask')
        # Processing the call keyword arguments (line 209)
        kwargs_223651 = {}
        # Getting the type of 'self' (line 209)
        self_223646 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 209, 8), 'self', False)
        # Obtaining the member 'set_events' of a type (line 209)
        set_events_223647 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 209, 8), self_223646, 'set_events')
        # Calling set_events(args, kwargs) (line 209)
        set_events_call_result_223652 = invoke(stypy.reporting.localization.Localization(__file__, 209, 8), set_events_223647, *[event_mask_223650], **kwargs_223651)
        
        
        # Call to set_double_buffered(...): (line 211)
        # Processing the call arguments (line 211)
        # Getting the type of 'False' (line 211)
        False_223655 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 211, 33), 'False', False)
        # Processing the call keyword arguments (line 211)
        kwargs_223656 = {}
        # Getting the type of 'self' (line 211)
        self_223653 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 211, 8), 'self', False)
        # Obtaining the member 'set_double_buffered' of a type (line 211)
        set_double_buffered_223654 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 211, 8), self_223653, 'set_double_buffered')
        # Calling set_double_buffered(args, kwargs) (line 211)
        set_double_buffered_call_result_223657 = invoke(stypy.reporting.localization.Localization(__file__, 211, 8), set_double_buffered_223654, *[False_223655], **kwargs_223656)
        
        
        # Call to set_flags(...): (line 212)
        # Processing the call arguments (line 212)
        # Getting the type of 'gtk' (line 212)
        gtk_223660 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 212, 23), 'gtk', False)
        # Obtaining the member 'CAN_FOCUS' of a type (line 212)
        CAN_FOCUS_223661 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 212, 23), gtk_223660, 'CAN_FOCUS')
        # Processing the call keyword arguments (line 212)
        kwargs_223662 = {}
        # Getting the type of 'self' (line 212)
        self_223658 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 212, 8), 'self', False)
        # Obtaining the member 'set_flags' of a type (line 212)
        set_flags_223659 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 212, 8), self_223658, 'set_flags')
        # Calling set_flags(args, kwargs) (line 212)
        set_flags_call_result_223663 = invoke(stypy.reporting.localization.Localization(__file__, 212, 8), set_flags_223659, *[CAN_FOCUS_223661], **kwargs_223662)
        
        
        # Call to _renderer_init(...): (line 213)
        # Processing the call keyword arguments (line 213)
        kwargs_223666 = {}
        # Getting the type of 'self' (line 213)
        self_223664 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 213, 8), 'self', False)
        # Obtaining the member '_renderer_init' of a type (line 213)
        _renderer_init_223665 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 213, 8), self_223664, '_renderer_init')
        # Calling _renderer_init(args, kwargs) (line 213)
        _renderer_init_call_result_223667 = invoke(stypy.reporting.localization.Localization(__file__, 213, 8), _renderer_init_223665, *[], **kwargs_223666)
        
        
        # Assigning a Dict to a Attribute (line 215):
        
        # Assigning a Dict to a Attribute (line 215):
        
        # Obtaining an instance of the builtin type 'dict' (line 215)
        dict_223668 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 215, 30), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 215)
        
        # Getting the type of 'self' (line 215)
        self_223669 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 215, 8), 'self')
        # Setting the type of the member 'last_downclick' of a type (line 215)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 215, 8), self_223669, 'last_downclick', dict_223668)
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def destroy(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'destroy'
        module_type_store = module_type_store.open_function_context('destroy', 217, 4, False)
        # Assigning a type to the variable 'self' (line 218)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 218, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        FigureCanvasGTK.destroy.__dict__.__setitem__('stypy_localization', localization)
        FigureCanvasGTK.destroy.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        FigureCanvasGTK.destroy.__dict__.__setitem__('stypy_type_store', module_type_store)
        FigureCanvasGTK.destroy.__dict__.__setitem__('stypy_function_name', 'FigureCanvasGTK.destroy')
        FigureCanvasGTK.destroy.__dict__.__setitem__('stypy_param_names_list', [])
        FigureCanvasGTK.destroy.__dict__.__setitem__('stypy_varargs_param_name', None)
        FigureCanvasGTK.destroy.__dict__.__setitem__('stypy_kwargs_param_name', None)
        FigureCanvasGTK.destroy.__dict__.__setitem__('stypy_call_defaults', defaults)
        FigureCanvasGTK.destroy.__dict__.__setitem__('stypy_call_varargs', varargs)
        FigureCanvasGTK.destroy.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        FigureCanvasGTK.destroy.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FigureCanvasGTK.destroy', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'destroy', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'destroy(...)' code ##################

        
        # Call to close_event(...): (line 219)
        # Processing the call keyword arguments (line 219)
        kwargs_223672 = {}
        # Getting the type of 'self' (line 219)
        self_223670 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 219, 8), 'self', False)
        # Obtaining the member 'close_event' of a type (line 219)
        close_event_223671 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 219, 8), self_223670, 'close_event')
        # Calling close_event(args, kwargs) (line 219)
        close_event_call_result_223673 = invoke(stypy.reporting.localization.Localization(__file__, 219, 8), close_event_223671, *[], **kwargs_223672)
        
        
        
        # Getting the type of 'self' (line 220)
        self_223674 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 220, 11), 'self')
        # Obtaining the member '_idle_draw_id' of a type (line 220)
        _idle_draw_id_223675 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 220, 11), self_223674, '_idle_draw_id')
        int_223676 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 220, 33), 'int')
        # Applying the binary operator '!=' (line 220)
        result_ne_223677 = python_operator(stypy.reporting.localization.Localization(__file__, 220, 11), '!=', _idle_draw_id_223675, int_223676)
        
        # Testing the type of an if condition (line 220)
        if_condition_223678 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 220, 8), result_ne_223677)
        # Assigning a type to the variable 'if_condition_223678' (line 220)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 220, 8), 'if_condition_223678', if_condition_223678)
        # SSA begins for if statement (line 220)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to source_remove(...): (line 221)
        # Processing the call arguments (line 221)
        # Getting the type of 'self' (line 221)
        self_223681 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 221, 34), 'self', False)
        # Obtaining the member '_idle_draw_id' of a type (line 221)
        _idle_draw_id_223682 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 221, 34), self_223681, '_idle_draw_id')
        # Processing the call keyword arguments (line 221)
        kwargs_223683 = {}
        # Getting the type of 'gobject' (line 221)
        gobject_223679 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 221, 12), 'gobject', False)
        # Obtaining the member 'source_remove' of a type (line 221)
        source_remove_223680 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 221, 12), gobject_223679, 'source_remove')
        # Calling source_remove(args, kwargs) (line 221)
        source_remove_call_result_223684 = invoke(stypy.reporting.localization.Localization(__file__, 221, 12), source_remove_223680, *[_idle_draw_id_223682], **kwargs_223683)
        
        # SSA join for if statement (line 220)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'destroy(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'destroy' in the type store
        # Getting the type of 'stypy_return_type' (line 217)
        stypy_return_type_223685 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 217, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_223685)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'destroy'
        return stypy_return_type_223685


    @norecursion
    def scroll_event(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'scroll_event'
        module_type_store = module_type_store.open_function_context('scroll_event', 223, 4, False)
        # Assigning a type to the variable 'self' (line 224)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 224, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        FigureCanvasGTK.scroll_event.__dict__.__setitem__('stypy_localization', localization)
        FigureCanvasGTK.scroll_event.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        FigureCanvasGTK.scroll_event.__dict__.__setitem__('stypy_type_store', module_type_store)
        FigureCanvasGTK.scroll_event.__dict__.__setitem__('stypy_function_name', 'FigureCanvasGTK.scroll_event')
        FigureCanvasGTK.scroll_event.__dict__.__setitem__('stypy_param_names_list', ['widget', 'event'])
        FigureCanvasGTK.scroll_event.__dict__.__setitem__('stypy_varargs_param_name', None)
        FigureCanvasGTK.scroll_event.__dict__.__setitem__('stypy_kwargs_param_name', None)
        FigureCanvasGTK.scroll_event.__dict__.__setitem__('stypy_call_defaults', defaults)
        FigureCanvasGTK.scroll_event.__dict__.__setitem__('stypy_call_varargs', varargs)
        FigureCanvasGTK.scroll_event.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        FigureCanvasGTK.scroll_event.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FigureCanvasGTK.scroll_event', ['widget', 'event'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'scroll_event', localization, ['widget', 'event'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'scroll_event(...)' code ##################

        
        # Assigning a Attribute to a Name (line 224):
        
        # Assigning a Attribute to a Name (line 224):
        # Getting the type of 'event' (line 224)
        event_223686 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 224, 12), 'event')
        # Obtaining the member 'x' of a type (line 224)
        x_223687 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 224, 12), event_223686, 'x')
        # Assigning a type to the variable 'x' (line 224)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 224, 8), 'x', x_223687)
        
        # Assigning a BinOp to a Name (line 226):
        
        # Assigning a BinOp to a Name (line 226):
        # Getting the type of 'self' (line 226)
        self_223688 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 226, 12), 'self')
        # Obtaining the member 'allocation' of a type (line 226)
        allocation_223689 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 226, 12), self_223688, 'allocation')
        # Obtaining the member 'height' of a type (line 226)
        height_223690 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 226, 12), allocation_223689, 'height')
        # Getting the type of 'event' (line 226)
        event_223691 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 226, 37), 'event')
        # Obtaining the member 'y' of a type (line 226)
        y_223692 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 226, 37), event_223691, 'y')
        # Applying the binary operator '-' (line 226)
        result_sub_223693 = python_operator(stypy.reporting.localization.Localization(__file__, 226, 12), '-', height_223690, y_223692)
        
        # Assigning a type to the variable 'y' (line 226)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 226, 8), 'y', result_sub_223693)
        
        
        # Getting the type of 'event' (line 227)
        event_223694 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 227, 11), 'event')
        # Obtaining the member 'direction' of a type (line 227)
        direction_223695 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 227, 11), event_223694, 'direction')
        # Getting the type of 'gdk' (line 227)
        gdk_223696 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 227, 28), 'gdk')
        # Obtaining the member 'SCROLL_UP' of a type (line 227)
        SCROLL_UP_223697 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 227, 28), gdk_223696, 'SCROLL_UP')
        # Applying the binary operator '==' (line 227)
        result_eq_223698 = python_operator(stypy.reporting.localization.Localization(__file__, 227, 11), '==', direction_223695, SCROLL_UP_223697)
        
        # Testing the type of an if condition (line 227)
        if_condition_223699 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 227, 8), result_eq_223698)
        # Assigning a type to the variable 'if_condition_223699' (line 227)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 227, 8), 'if_condition_223699', if_condition_223699)
        # SSA begins for if statement (line 227)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Num to a Name (line 228):
        
        # Assigning a Num to a Name (line 228):
        int_223700 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 228, 19), 'int')
        # Assigning a type to the variable 'step' (line 228)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 228, 12), 'step', int_223700)
        # SSA branch for the else part of an if statement (line 227)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Num to a Name (line 230):
        
        # Assigning a Num to a Name (line 230):
        int_223701 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 230, 19), 'int')
        # Assigning a type to the variable 'step' (line 230)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 230, 12), 'step', int_223701)
        # SSA join for if statement (line 227)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to scroll_event(...): (line 231)
        # Processing the call arguments (line 231)
        # Getting the type of 'self' (line 231)
        self_223704 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 231, 38), 'self', False)
        # Getting the type of 'x' (line 231)
        x_223705 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 231, 44), 'x', False)
        # Getting the type of 'y' (line 231)
        y_223706 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 231, 47), 'y', False)
        # Getting the type of 'step' (line 231)
        step_223707 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 231, 50), 'step', False)
        # Processing the call keyword arguments (line 231)
        # Getting the type of 'event' (line 231)
        event_223708 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 231, 65), 'event', False)
        keyword_223709 = event_223708
        kwargs_223710 = {'guiEvent': keyword_223709}
        # Getting the type of 'FigureCanvasBase' (line 231)
        FigureCanvasBase_223702 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 231, 8), 'FigureCanvasBase', False)
        # Obtaining the member 'scroll_event' of a type (line 231)
        scroll_event_223703 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 231, 8), FigureCanvasBase_223702, 'scroll_event')
        # Calling scroll_event(args, kwargs) (line 231)
        scroll_event_call_result_223711 = invoke(stypy.reporting.localization.Localization(__file__, 231, 8), scroll_event_223703, *[self_223704, x_223705, y_223706, step_223707], **kwargs_223710)
        
        # Getting the type of 'False' (line 232)
        False_223712 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 232, 15), 'False')
        # Assigning a type to the variable 'stypy_return_type' (line 232)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 232, 8), 'stypy_return_type', False_223712)
        
        # ################# End of 'scroll_event(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'scroll_event' in the type store
        # Getting the type of 'stypy_return_type' (line 223)
        stypy_return_type_223713 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 223, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_223713)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'scroll_event'
        return stypy_return_type_223713


    @norecursion
    def button_press_event(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'button_press_event'
        module_type_store = module_type_store.open_function_context('button_press_event', 234, 4, False)
        # Assigning a type to the variable 'self' (line 235)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 235, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        FigureCanvasGTK.button_press_event.__dict__.__setitem__('stypy_localization', localization)
        FigureCanvasGTK.button_press_event.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        FigureCanvasGTK.button_press_event.__dict__.__setitem__('stypy_type_store', module_type_store)
        FigureCanvasGTK.button_press_event.__dict__.__setitem__('stypy_function_name', 'FigureCanvasGTK.button_press_event')
        FigureCanvasGTK.button_press_event.__dict__.__setitem__('stypy_param_names_list', ['widget', 'event'])
        FigureCanvasGTK.button_press_event.__dict__.__setitem__('stypy_varargs_param_name', None)
        FigureCanvasGTK.button_press_event.__dict__.__setitem__('stypy_kwargs_param_name', None)
        FigureCanvasGTK.button_press_event.__dict__.__setitem__('stypy_call_defaults', defaults)
        FigureCanvasGTK.button_press_event.__dict__.__setitem__('stypy_call_varargs', varargs)
        FigureCanvasGTK.button_press_event.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        FigureCanvasGTK.button_press_event.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FigureCanvasGTK.button_press_event', ['widget', 'event'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'button_press_event', localization, ['widget', 'event'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'button_press_event(...)' code ##################

        
        # Assigning a Attribute to a Name (line 235):
        
        # Assigning a Attribute to a Name (line 235):
        # Getting the type of 'event' (line 235)
        event_223714 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 235, 12), 'event')
        # Obtaining the member 'x' of a type (line 235)
        x_223715 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 235, 12), event_223714, 'x')
        # Assigning a type to the variable 'x' (line 235)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 235, 8), 'x', x_223715)
        
        # Assigning a BinOp to a Name (line 237):
        
        # Assigning a BinOp to a Name (line 237):
        # Getting the type of 'self' (line 237)
        self_223716 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 237, 12), 'self')
        # Obtaining the member 'allocation' of a type (line 237)
        allocation_223717 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 237, 12), self_223716, 'allocation')
        # Obtaining the member 'height' of a type (line 237)
        height_223718 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 237, 12), allocation_223717, 'height')
        # Getting the type of 'event' (line 237)
        event_223719 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 237, 37), 'event')
        # Obtaining the member 'y' of a type (line 237)
        y_223720 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 237, 37), event_223719, 'y')
        # Applying the binary operator '-' (line 237)
        result_sub_223721 = python_operator(stypy.reporting.localization.Localization(__file__, 237, 12), '-', height_223718, y_223720)
        
        # Assigning a type to the variable 'y' (line 237)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 237, 8), 'y', result_sub_223721)
        
        # Assigning a Compare to a Name (line 238):
        
        # Assigning a Compare to a Name (line 238):
        
        # Getting the type of 'event' (line 238)
        event_223722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 238, 20), 'event')
        # Obtaining the member 'type' of a type (line 238)
        type_223723 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 238, 20), event_223722, 'type')
        # Getting the type of 'gdk' (line 238)
        gdk_223724 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 238, 34), 'gdk')
        # Obtaining the member '_2BUTTON_PRESS' of a type (line 238)
        _2BUTTON_PRESS_223725 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 238, 34), gdk_223724, '_2BUTTON_PRESS')
        # Applying the binary operator '==' (line 238)
        result_eq_223726 = python_operator(stypy.reporting.localization.Localization(__file__, 238, 20), '==', type_223723, _2BUTTON_PRESS_223725)
        
        # Assigning a type to the variable 'dblclick' (line 238)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 238, 8), 'dblclick', result_eq_223726)
        
        
        # Getting the type of 'dblclick' (line 239)
        dblclick_223727 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 239, 15), 'dblclick')
        # Applying the 'not' unary operator (line 239)
        result_not__223728 = python_operator(stypy.reporting.localization.Localization(__file__, 239, 11), 'not', dblclick_223727)
        
        # Testing the type of an if condition (line 239)
        if_condition_223729 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 239, 8), result_not__223728)
        # Assigning a type to the variable 'if_condition_223729' (line 239)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 239, 8), 'if_condition_223729', if_condition_223729)
        # SSA begins for if statement (line 239)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 246):
        
        # Assigning a Call to a Name (line 246):
        
        # Call to get_time(...): (line 246)
        # Processing the call keyword arguments (line 246)
        kwargs_223732 = {}
        # Getting the type of 'event' (line 246)
        event_223730 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 246, 28), 'event', False)
        # Obtaining the member 'get_time' of a type (line 246)
        get_time_223731 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 246, 28), event_223730, 'get_time')
        # Calling get_time(args, kwargs) (line 246)
        get_time_call_result_223733 = invoke(stypy.reporting.localization.Localization(__file__, 246, 28), get_time_223731, *[], **kwargs_223732)
        
        # Assigning a type to the variable 'current_time' (line 246)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 246, 12), 'current_time', get_time_call_result_223733)
        
        # Assigning a Call to a Name (line 247):
        
        # Assigning a Call to a Name (line 247):
        
        # Call to get(...): (line 247)
        # Processing the call arguments (line 247)
        # Getting the type of 'event' (line 247)
        event_223737 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 247, 52), 'event', False)
        # Obtaining the member 'button' of a type (line 247)
        button_223738 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 247, 52), event_223737, 'button')
        int_223739 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 247, 65), 'int')
        # Processing the call keyword arguments (line 247)
        kwargs_223740 = {}
        # Getting the type of 'self' (line 247)
        self_223734 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 247, 28), 'self', False)
        # Obtaining the member 'last_downclick' of a type (line 247)
        last_downclick_223735 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 247, 28), self_223734, 'last_downclick')
        # Obtaining the member 'get' of a type (line 247)
        get_223736 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 247, 28), last_downclick_223735, 'get')
        # Calling get(args, kwargs) (line 247)
        get_call_result_223741 = invoke(stypy.reporting.localization.Localization(__file__, 247, 28), get_223736, *[button_223738, int_223739], **kwargs_223740)
        
        # Assigning a type to the variable 'last_time' (line 247)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 247, 12), 'last_time', get_call_result_223741)
        
        # Assigning a Call to a Name (line 248):
        
        # Assigning a Call to a Name (line 248):
        
        # Call to get_property(...): (line 248)
        # Processing the call arguments (line 248)
        unicode_223751 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 248, 95), 'unicode', u'gtk-double-click-time')
        # Processing the call keyword arguments (line 248)
        kwargs_223752 = {}
        
        # Call to settings_get_for_screen(...): (line 248)
        # Processing the call arguments (line 248)
        
        # Call to screen_get_default(...): (line 248)
        # Processing the call keyword arguments (line 248)
        kwargs_223746 = {}
        # Getting the type of 'gdk' (line 248)
        gdk_223744 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 248, 56), 'gdk', False)
        # Obtaining the member 'screen_get_default' of a type (line 248)
        screen_get_default_223745 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 248, 56), gdk_223744, 'screen_get_default')
        # Calling screen_get_default(args, kwargs) (line 248)
        screen_get_default_call_result_223747 = invoke(stypy.reporting.localization.Localization(__file__, 248, 56), screen_get_default_223745, *[], **kwargs_223746)
        
        # Processing the call keyword arguments (line 248)
        kwargs_223748 = {}
        # Getting the type of 'gtk' (line 248)
        gtk_223742 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 248, 28), 'gtk', False)
        # Obtaining the member 'settings_get_for_screen' of a type (line 248)
        settings_get_for_screen_223743 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 248, 28), gtk_223742, 'settings_get_for_screen')
        # Calling settings_get_for_screen(args, kwargs) (line 248)
        settings_get_for_screen_call_result_223749 = invoke(stypy.reporting.localization.Localization(__file__, 248, 28), settings_get_for_screen_223743, *[screen_get_default_call_result_223747], **kwargs_223748)
        
        # Obtaining the member 'get_property' of a type (line 248)
        get_property_223750 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 248, 28), settings_get_for_screen_call_result_223749, 'get_property')
        # Calling get_property(args, kwargs) (line 248)
        get_property_call_result_223753 = invoke(stypy.reporting.localization.Localization(__file__, 248, 28), get_property_223750, *[unicode_223751], **kwargs_223752)
        
        # Assigning a type to the variable 'dblclick_time' (line 248)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 248, 12), 'dblclick_time', get_property_call_result_223753)
        
        # Assigning a BinOp to a Name (line 249):
        
        # Assigning a BinOp to a Name (line 249):
        # Getting the type of 'current_time' (line 249)
        current_time_223754 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 249, 28), 'current_time')
        # Getting the type of 'last_time' (line 249)
        last_time_223755 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 249, 41), 'last_time')
        # Applying the binary operator '-' (line 249)
        result_sub_223756 = python_operator(stypy.reporting.localization.Localization(__file__, 249, 28), '-', current_time_223754, last_time_223755)
        
        # Assigning a type to the variable 'delta_time' (line 249)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 249, 12), 'delta_time', result_sub_223756)
        
        
        # Getting the type of 'delta_time' (line 250)
        delta_time_223757 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 250, 15), 'delta_time')
        # Getting the type of 'dblclick_time' (line 250)
        dblclick_time_223758 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 250, 28), 'dblclick_time')
        # Applying the binary operator '<' (line 250)
        result_lt_223759 = python_operator(stypy.reporting.localization.Localization(__file__, 250, 15), '<', delta_time_223757, dblclick_time_223758)
        
        # Testing the type of an if condition (line 250)
        if_condition_223760 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 250, 12), result_lt_223759)
        # Assigning a type to the variable 'if_condition_223760' (line 250)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 250, 12), 'if_condition_223760', if_condition_223760)
        # SSA begins for if statement (line 250)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        # Deleting a member
        # Getting the type of 'self' (line 251)
        self_223761 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 251, 20), 'self')
        # Obtaining the member 'last_downclick' of a type (line 251)
        last_downclick_223762 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 251, 20), self_223761, 'last_downclick')
        
        # Obtaining the type of the subscript
        # Getting the type of 'event' (line 251)
        event_223763 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 251, 40), 'event')
        # Obtaining the member 'button' of a type (line 251)
        button_223764 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 251, 40), event_223763, 'button')
        # Getting the type of 'self' (line 251)
        self_223765 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 251, 20), 'self')
        # Obtaining the member 'last_downclick' of a type (line 251)
        last_downclick_223766 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 251, 20), self_223765, 'last_downclick')
        # Obtaining the member '__getitem__' of a type (line 251)
        getitem___223767 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 251, 20), last_downclick_223766, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 251)
        subscript_call_result_223768 = invoke(stypy.reporting.localization.Localization(__file__, 251, 20), getitem___223767, button_223764)
        
        del_contained_elements_type(stypy.reporting.localization.Localization(__file__, 251, 16), last_downclick_223762, subscript_call_result_223768)
        # Getting the type of 'False' (line 252)
        False_223769 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 252, 23), 'False')
        # Assigning a type to the variable 'stypy_return_type' (line 252)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 252, 16), 'stypy_return_type', False_223769)
        # SSA join for if statement (line 250)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Name to a Subscript (line 253):
        
        # Assigning a Name to a Subscript (line 253):
        # Getting the type of 'current_time' (line 253)
        current_time_223770 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 253, 48), 'current_time')
        # Getting the type of 'self' (line 253)
        self_223771 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 253, 12), 'self')
        # Obtaining the member 'last_downclick' of a type (line 253)
        last_downclick_223772 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 253, 12), self_223771, 'last_downclick')
        # Getting the type of 'event' (line 253)
        event_223773 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 253, 32), 'event')
        # Obtaining the member 'button' of a type (line 253)
        button_223774 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 253, 32), event_223773, 'button')
        # Storing an element on a container (line 253)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 253, 12), last_downclick_223772, (button_223774, current_time_223770))
        # SSA join for if statement (line 239)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to button_press_event(...): (line 254)
        # Processing the call arguments (line 254)
        # Getting the type of 'self' (line 254)
        self_223777 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 254, 44), 'self', False)
        # Getting the type of 'x' (line 254)
        x_223778 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 254, 50), 'x', False)
        # Getting the type of 'y' (line 254)
        y_223779 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 254, 53), 'y', False)
        # Getting the type of 'event' (line 254)
        event_223780 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 254, 56), 'event', False)
        # Obtaining the member 'button' of a type (line 254)
        button_223781 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 254, 56), event_223780, 'button')
        # Processing the call keyword arguments (line 254)
        # Getting the type of 'dblclick' (line 254)
        dblclick_223782 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 254, 79), 'dblclick', False)
        keyword_223783 = dblclick_223782
        # Getting the type of 'event' (line 254)
        event_223784 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 254, 98), 'event', False)
        keyword_223785 = event_223784
        kwargs_223786 = {'guiEvent': keyword_223785, 'dblclick': keyword_223783}
        # Getting the type of 'FigureCanvasBase' (line 254)
        FigureCanvasBase_223775 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 254, 8), 'FigureCanvasBase', False)
        # Obtaining the member 'button_press_event' of a type (line 254)
        button_press_event_223776 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 254, 8), FigureCanvasBase_223775, 'button_press_event')
        # Calling button_press_event(args, kwargs) (line 254)
        button_press_event_call_result_223787 = invoke(stypy.reporting.localization.Localization(__file__, 254, 8), button_press_event_223776, *[self_223777, x_223778, y_223779, button_223781], **kwargs_223786)
        
        # Getting the type of 'False' (line 255)
        False_223788 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 255, 15), 'False')
        # Assigning a type to the variable 'stypy_return_type' (line 255)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 255, 8), 'stypy_return_type', False_223788)
        
        # ################# End of 'button_press_event(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'button_press_event' in the type store
        # Getting the type of 'stypy_return_type' (line 234)
        stypy_return_type_223789 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 234, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_223789)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'button_press_event'
        return stypy_return_type_223789


    @norecursion
    def button_release_event(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'button_release_event'
        module_type_store = module_type_store.open_function_context('button_release_event', 257, 4, False)
        # Assigning a type to the variable 'self' (line 258)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 258, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        FigureCanvasGTK.button_release_event.__dict__.__setitem__('stypy_localization', localization)
        FigureCanvasGTK.button_release_event.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        FigureCanvasGTK.button_release_event.__dict__.__setitem__('stypy_type_store', module_type_store)
        FigureCanvasGTK.button_release_event.__dict__.__setitem__('stypy_function_name', 'FigureCanvasGTK.button_release_event')
        FigureCanvasGTK.button_release_event.__dict__.__setitem__('stypy_param_names_list', ['widget', 'event'])
        FigureCanvasGTK.button_release_event.__dict__.__setitem__('stypy_varargs_param_name', None)
        FigureCanvasGTK.button_release_event.__dict__.__setitem__('stypy_kwargs_param_name', None)
        FigureCanvasGTK.button_release_event.__dict__.__setitem__('stypy_call_defaults', defaults)
        FigureCanvasGTK.button_release_event.__dict__.__setitem__('stypy_call_varargs', varargs)
        FigureCanvasGTK.button_release_event.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        FigureCanvasGTK.button_release_event.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FigureCanvasGTK.button_release_event', ['widget', 'event'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'button_release_event', localization, ['widget', 'event'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'button_release_event(...)' code ##################

        
        # Assigning a Attribute to a Name (line 258):
        
        # Assigning a Attribute to a Name (line 258):
        # Getting the type of 'event' (line 258)
        event_223790 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 258, 12), 'event')
        # Obtaining the member 'x' of a type (line 258)
        x_223791 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 258, 12), event_223790, 'x')
        # Assigning a type to the variable 'x' (line 258)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 258, 8), 'x', x_223791)
        
        # Assigning a BinOp to a Name (line 260):
        
        # Assigning a BinOp to a Name (line 260):
        # Getting the type of 'self' (line 260)
        self_223792 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 260, 12), 'self')
        # Obtaining the member 'allocation' of a type (line 260)
        allocation_223793 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 260, 12), self_223792, 'allocation')
        # Obtaining the member 'height' of a type (line 260)
        height_223794 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 260, 12), allocation_223793, 'height')
        # Getting the type of 'event' (line 260)
        event_223795 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 260, 37), 'event')
        # Obtaining the member 'y' of a type (line 260)
        y_223796 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 260, 37), event_223795, 'y')
        # Applying the binary operator '-' (line 260)
        result_sub_223797 = python_operator(stypy.reporting.localization.Localization(__file__, 260, 12), '-', height_223794, y_223796)
        
        # Assigning a type to the variable 'y' (line 260)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 260, 8), 'y', result_sub_223797)
        
        # Call to button_release_event(...): (line 261)
        # Processing the call arguments (line 261)
        # Getting the type of 'self' (line 261)
        self_223800 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 261, 46), 'self', False)
        # Getting the type of 'x' (line 261)
        x_223801 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 261, 52), 'x', False)
        # Getting the type of 'y' (line 261)
        y_223802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 261, 55), 'y', False)
        # Getting the type of 'event' (line 261)
        event_223803 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 261, 58), 'event', False)
        # Obtaining the member 'button' of a type (line 261)
        button_223804 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 261, 58), event_223803, 'button')
        # Processing the call keyword arguments (line 261)
        # Getting the type of 'event' (line 261)
        event_223805 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 261, 81), 'event', False)
        keyword_223806 = event_223805
        kwargs_223807 = {'guiEvent': keyword_223806}
        # Getting the type of 'FigureCanvasBase' (line 261)
        FigureCanvasBase_223798 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 261, 8), 'FigureCanvasBase', False)
        # Obtaining the member 'button_release_event' of a type (line 261)
        button_release_event_223799 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 261, 8), FigureCanvasBase_223798, 'button_release_event')
        # Calling button_release_event(args, kwargs) (line 261)
        button_release_event_call_result_223808 = invoke(stypy.reporting.localization.Localization(__file__, 261, 8), button_release_event_223799, *[self_223800, x_223801, y_223802, button_223804], **kwargs_223807)
        
        # Getting the type of 'False' (line 262)
        False_223809 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 262, 15), 'False')
        # Assigning a type to the variable 'stypy_return_type' (line 262)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 262, 8), 'stypy_return_type', False_223809)
        
        # ################# End of 'button_release_event(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'button_release_event' in the type store
        # Getting the type of 'stypy_return_type' (line 257)
        stypy_return_type_223810 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 257, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_223810)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'button_release_event'
        return stypy_return_type_223810


    @norecursion
    def key_press_event(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'key_press_event'
        module_type_store = module_type_store.open_function_context('key_press_event', 264, 4, False)
        # Assigning a type to the variable 'self' (line 265)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 265, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        FigureCanvasGTK.key_press_event.__dict__.__setitem__('stypy_localization', localization)
        FigureCanvasGTK.key_press_event.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        FigureCanvasGTK.key_press_event.__dict__.__setitem__('stypy_type_store', module_type_store)
        FigureCanvasGTK.key_press_event.__dict__.__setitem__('stypy_function_name', 'FigureCanvasGTK.key_press_event')
        FigureCanvasGTK.key_press_event.__dict__.__setitem__('stypy_param_names_list', ['widget', 'event'])
        FigureCanvasGTK.key_press_event.__dict__.__setitem__('stypy_varargs_param_name', None)
        FigureCanvasGTK.key_press_event.__dict__.__setitem__('stypy_kwargs_param_name', None)
        FigureCanvasGTK.key_press_event.__dict__.__setitem__('stypy_call_defaults', defaults)
        FigureCanvasGTK.key_press_event.__dict__.__setitem__('stypy_call_varargs', varargs)
        FigureCanvasGTK.key_press_event.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        FigureCanvasGTK.key_press_event.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FigureCanvasGTK.key_press_event', ['widget', 'event'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'key_press_event', localization, ['widget', 'event'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'key_press_event(...)' code ##################

        
        # Assigning a Call to a Name (line 265):
        
        # Assigning a Call to a Name (line 265):
        
        # Call to _get_key(...): (line 265)
        # Processing the call arguments (line 265)
        # Getting the type of 'event' (line 265)
        event_223813 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 265, 28), 'event', False)
        # Processing the call keyword arguments (line 265)
        kwargs_223814 = {}
        # Getting the type of 'self' (line 265)
        self_223811 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 265, 14), 'self', False)
        # Obtaining the member '_get_key' of a type (line 265)
        _get_key_223812 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 265, 14), self_223811, '_get_key')
        # Calling _get_key(args, kwargs) (line 265)
        _get_key_call_result_223815 = invoke(stypy.reporting.localization.Localization(__file__, 265, 14), _get_key_223812, *[event_223813], **kwargs_223814)
        
        # Assigning a type to the variable 'key' (line 265)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 265, 8), 'key', _get_key_call_result_223815)
        
        # Call to key_press_event(...): (line 266)
        # Processing the call arguments (line 266)
        # Getting the type of 'self' (line 266)
        self_223818 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 266, 41), 'self', False)
        # Getting the type of 'key' (line 266)
        key_223819 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 266, 47), 'key', False)
        # Processing the call keyword arguments (line 266)
        # Getting the type of 'event' (line 266)
        event_223820 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 266, 61), 'event', False)
        keyword_223821 = event_223820
        kwargs_223822 = {'guiEvent': keyword_223821}
        # Getting the type of 'FigureCanvasBase' (line 266)
        FigureCanvasBase_223816 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 266, 8), 'FigureCanvasBase', False)
        # Obtaining the member 'key_press_event' of a type (line 266)
        key_press_event_223817 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 266, 8), FigureCanvasBase_223816, 'key_press_event')
        # Calling key_press_event(args, kwargs) (line 266)
        key_press_event_call_result_223823 = invoke(stypy.reporting.localization.Localization(__file__, 266, 8), key_press_event_223817, *[self_223818, key_223819], **kwargs_223822)
        
        # Getting the type of 'True' (line 267)
        True_223824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 267, 15), 'True')
        # Assigning a type to the variable 'stypy_return_type' (line 267)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 267, 8), 'stypy_return_type', True_223824)
        
        # ################# End of 'key_press_event(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'key_press_event' in the type store
        # Getting the type of 'stypy_return_type' (line 264)
        stypy_return_type_223825 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 264, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_223825)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'key_press_event'
        return stypy_return_type_223825


    @norecursion
    def key_release_event(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'key_release_event'
        module_type_store = module_type_store.open_function_context('key_release_event', 269, 4, False)
        # Assigning a type to the variable 'self' (line 270)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 270, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        FigureCanvasGTK.key_release_event.__dict__.__setitem__('stypy_localization', localization)
        FigureCanvasGTK.key_release_event.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        FigureCanvasGTK.key_release_event.__dict__.__setitem__('stypy_type_store', module_type_store)
        FigureCanvasGTK.key_release_event.__dict__.__setitem__('stypy_function_name', 'FigureCanvasGTK.key_release_event')
        FigureCanvasGTK.key_release_event.__dict__.__setitem__('stypy_param_names_list', ['widget', 'event'])
        FigureCanvasGTK.key_release_event.__dict__.__setitem__('stypy_varargs_param_name', None)
        FigureCanvasGTK.key_release_event.__dict__.__setitem__('stypy_kwargs_param_name', None)
        FigureCanvasGTK.key_release_event.__dict__.__setitem__('stypy_call_defaults', defaults)
        FigureCanvasGTK.key_release_event.__dict__.__setitem__('stypy_call_varargs', varargs)
        FigureCanvasGTK.key_release_event.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        FigureCanvasGTK.key_release_event.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FigureCanvasGTK.key_release_event', ['widget', 'event'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'key_release_event', localization, ['widget', 'event'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'key_release_event(...)' code ##################

        
        # Assigning a Call to a Name (line 270):
        
        # Assigning a Call to a Name (line 270):
        
        # Call to _get_key(...): (line 270)
        # Processing the call arguments (line 270)
        # Getting the type of 'event' (line 270)
        event_223828 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 270, 28), 'event', False)
        # Processing the call keyword arguments (line 270)
        kwargs_223829 = {}
        # Getting the type of 'self' (line 270)
        self_223826 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 270, 14), 'self', False)
        # Obtaining the member '_get_key' of a type (line 270)
        _get_key_223827 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 270, 14), self_223826, '_get_key')
        # Calling _get_key(args, kwargs) (line 270)
        _get_key_call_result_223830 = invoke(stypy.reporting.localization.Localization(__file__, 270, 14), _get_key_223827, *[event_223828], **kwargs_223829)
        
        # Assigning a type to the variable 'key' (line 270)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 270, 8), 'key', _get_key_call_result_223830)
        
        # Call to key_release_event(...): (line 271)
        # Processing the call arguments (line 271)
        # Getting the type of 'self' (line 271)
        self_223833 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 43), 'self', False)
        # Getting the type of 'key' (line 271)
        key_223834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 49), 'key', False)
        # Processing the call keyword arguments (line 271)
        # Getting the type of 'event' (line 271)
        event_223835 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 63), 'event', False)
        keyword_223836 = event_223835
        kwargs_223837 = {'guiEvent': keyword_223836}
        # Getting the type of 'FigureCanvasBase' (line 271)
        FigureCanvasBase_223831 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 8), 'FigureCanvasBase', False)
        # Obtaining the member 'key_release_event' of a type (line 271)
        key_release_event_223832 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 271, 8), FigureCanvasBase_223831, 'key_release_event')
        # Calling key_release_event(args, kwargs) (line 271)
        key_release_event_call_result_223838 = invoke(stypy.reporting.localization.Localization(__file__, 271, 8), key_release_event_223832, *[self_223833, key_223834], **kwargs_223837)
        
        # Getting the type of 'True' (line 272)
        True_223839 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 272, 15), 'True')
        # Assigning a type to the variable 'stypy_return_type' (line 272)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 272, 8), 'stypy_return_type', True_223839)
        
        # ################# End of 'key_release_event(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'key_release_event' in the type store
        # Getting the type of 'stypy_return_type' (line 269)
        stypy_return_type_223840 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 269, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_223840)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'key_release_event'
        return stypy_return_type_223840


    @norecursion
    def motion_notify_event(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'motion_notify_event'
        module_type_store = module_type_store.open_function_context('motion_notify_event', 274, 4, False)
        # Assigning a type to the variable 'self' (line 275)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 275, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        FigureCanvasGTK.motion_notify_event.__dict__.__setitem__('stypy_localization', localization)
        FigureCanvasGTK.motion_notify_event.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        FigureCanvasGTK.motion_notify_event.__dict__.__setitem__('stypy_type_store', module_type_store)
        FigureCanvasGTK.motion_notify_event.__dict__.__setitem__('stypy_function_name', 'FigureCanvasGTK.motion_notify_event')
        FigureCanvasGTK.motion_notify_event.__dict__.__setitem__('stypy_param_names_list', ['widget', 'event'])
        FigureCanvasGTK.motion_notify_event.__dict__.__setitem__('stypy_varargs_param_name', None)
        FigureCanvasGTK.motion_notify_event.__dict__.__setitem__('stypy_kwargs_param_name', None)
        FigureCanvasGTK.motion_notify_event.__dict__.__setitem__('stypy_call_defaults', defaults)
        FigureCanvasGTK.motion_notify_event.__dict__.__setitem__('stypy_call_varargs', varargs)
        FigureCanvasGTK.motion_notify_event.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        FigureCanvasGTK.motion_notify_event.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FigureCanvasGTK.motion_notify_event', ['widget', 'event'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'motion_notify_event', localization, ['widget', 'event'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'motion_notify_event(...)' code ##################

        
        # Getting the type of 'event' (line 275)
        event_223841 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 11), 'event')
        # Obtaining the member 'is_hint' of a type (line 275)
        is_hint_223842 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 275, 11), event_223841, 'is_hint')
        # Testing the type of an if condition (line 275)
        if_condition_223843 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 275, 8), is_hint_223842)
        # Assigning a type to the variable 'if_condition_223843' (line 275)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 275, 8), 'if_condition_223843', if_condition_223843)
        # SSA begins for if statement (line 275)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Tuple (line 276):
        
        # Assigning a Call to a Name:
        
        # Call to get_pointer(...): (line 276)
        # Processing the call keyword arguments (line 276)
        kwargs_223847 = {}
        # Getting the type of 'event' (line 276)
        event_223844 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 26), 'event', False)
        # Obtaining the member 'window' of a type (line 276)
        window_223845 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 26), event_223844, 'window')
        # Obtaining the member 'get_pointer' of a type (line 276)
        get_pointer_223846 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 26), window_223845, 'get_pointer')
        # Calling get_pointer(args, kwargs) (line 276)
        get_pointer_call_result_223848 = invoke(stypy.reporting.localization.Localization(__file__, 276, 26), get_pointer_223846, *[], **kwargs_223847)
        
        # Assigning a type to the variable 'call_assignment_223285' (line 276)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 276, 12), 'call_assignment_223285', get_pointer_call_result_223848)
        
        # Assigning a Call to a Name (line 276):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_223851 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 276, 12), 'int')
        # Processing the call keyword arguments
        kwargs_223852 = {}
        # Getting the type of 'call_assignment_223285' (line 276)
        call_assignment_223285_223849 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 12), 'call_assignment_223285', False)
        # Obtaining the member '__getitem__' of a type (line 276)
        getitem___223850 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 12), call_assignment_223285_223849, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_223853 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___223850, *[int_223851], **kwargs_223852)
        
        # Assigning a type to the variable 'call_assignment_223286' (line 276)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 276, 12), 'call_assignment_223286', getitem___call_result_223853)
        
        # Assigning a Name to a Name (line 276):
        # Getting the type of 'call_assignment_223286' (line 276)
        call_assignment_223286_223854 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 12), 'call_assignment_223286')
        # Assigning a type to the variable 'x' (line 276)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 276, 12), 'x', call_assignment_223286_223854)
        
        # Assigning a Call to a Name (line 276):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_223857 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 276, 12), 'int')
        # Processing the call keyword arguments
        kwargs_223858 = {}
        # Getting the type of 'call_assignment_223285' (line 276)
        call_assignment_223285_223855 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 12), 'call_assignment_223285', False)
        # Obtaining the member '__getitem__' of a type (line 276)
        getitem___223856 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 12), call_assignment_223285_223855, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_223859 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___223856, *[int_223857], **kwargs_223858)
        
        # Assigning a type to the variable 'call_assignment_223287' (line 276)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 276, 12), 'call_assignment_223287', getitem___call_result_223859)
        
        # Assigning a Name to a Name (line 276):
        # Getting the type of 'call_assignment_223287' (line 276)
        call_assignment_223287_223860 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 12), 'call_assignment_223287')
        # Assigning a type to the variable 'y' (line 276)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 276, 15), 'y', call_assignment_223287_223860)
        
        # Assigning a Call to a Name (line 276):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_223863 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 276, 12), 'int')
        # Processing the call keyword arguments
        kwargs_223864 = {}
        # Getting the type of 'call_assignment_223285' (line 276)
        call_assignment_223285_223861 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 12), 'call_assignment_223285', False)
        # Obtaining the member '__getitem__' of a type (line 276)
        getitem___223862 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 12), call_assignment_223285_223861, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_223865 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___223862, *[int_223863], **kwargs_223864)
        
        # Assigning a type to the variable 'call_assignment_223288' (line 276)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 276, 12), 'call_assignment_223288', getitem___call_result_223865)
        
        # Assigning a Name to a Name (line 276):
        # Getting the type of 'call_assignment_223288' (line 276)
        call_assignment_223288_223866 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 12), 'call_assignment_223288')
        # Assigning a type to the variable 'state' (line 276)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 276, 18), 'state', call_assignment_223288_223866)
        # SSA branch for the else part of an if statement (line 275)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Tuple to a Tuple (line 278):
        
        # Assigning a Attribute to a Name (line 278):
        # Getting the type of 'event' (line 278)
        event_223867 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 278, 26), 'event')
        # Obtaining the member 'x' of a type (line 278)
        x_223868 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 278, 26), event_223867, 'x')
        # Assigning a type to the variable 'tuple_assignment_223289' (line 278)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 278, 12), 'tuple_assignment_223289', x_223868)
        
        # Assigning a Attribute to a Name (line 278):
        # Getting the type of 'event' (line 278)
        event_223869 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 278, 35), 'event')
        # Obtaining the member 'y' of a type (line 278)
        y_223870 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 278, 35), event_223869, 'y')
        # Assigning a type to the variable 'tuple_assignment_223290' (line 278)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 278, 12), 'tuple_assignment_223290', y_223870)
        
        # Assigning a Attribute to a Name (line 278):
        # Getting the type of 'event' (line 278)
        event_223871 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 278, 44), 'event')
        # Obtaining the member 'state' of a type (line 278)
        state_223872 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 278, 44), event_223871, 'state')
        # Assigning a type to the variable 'tuple_assignment_223291' (line 278)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 278, 12), 'tuple_assignment_223291', state_223872)
        
        # Assigning a Name to a Name (line 278):
        # Getting the type of 'tuple_assignment_223289' (line 278)
        tuple_assignment_223289_223873 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 278, 12), 'tuple_assignment_223289')
        # Assigning a type to the variable 'x' (line 278)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 278, 12), 'x', tuple_assignment_223289_223873)
        
        # Assigning a Name to a Name (line 278):
        # Getting the type of 'tuple_assignment_223290' (line 278)
        tuple_assignment_223290_223874 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 278, 12), 'tuple_assignment_223290')
        # Assigning a type to the variable 'y' (line 278)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 278, 15), 'y', tuple_assignment_223290_223874)
        
        # Assigning a Name to a Name (line 278):
        # Getting the type of 'tuple_assignment_223291' (line 278)
        tuple_assignment_223291_223875 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 278, 12), 'tuple_assignment_223291')
        # Assigning a type to the variable 'state' (line 278)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 278, 18), 'state', tuple_assignment_223291_223875)
        # SSA join for if statement (line 275)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a BinOp to a Name (line 281):
        
        # Assigning a BinOp to a Name (line 281):
        # Getting the type of 'self' (line 281)
        self_223876 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 281, 12), 'self')
        # Obtaining the member 'allocation' of a type (line 281)
        allocation_223877 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 281, 12), self_223876, 'allocation')
        # Obtaining the member 'height' of a type (line 281)
        height_223878 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 281, 12), allocation_223877, 'height')
        # Getting the type of 'y' (line 281)
        y_223879 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 281, 37), 'y')
        # Applying the binary operator '-' (line 281)
        result_sub_223880 = python_operator(stypy.reporting.localization.Localization(__file__, 281, 12), '-', height_223878, y_223879)
        
        # Assigning a type to the variable 'y' (line 281)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 281, 8), 'y', result_sub_223880)
        
        # Call to motion_notify_event(...): (line 282)
        # Processing the call arguments (line 282)
        # Getting the type of 'self' (line 282)
        self_223883 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 282, 45), 'self', False)
        # Getting the type of 'x' (line 282)
        x_223884 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 282, 51), 'x', False)
        # Getting the type of 'y' (line 282)
        y_223885 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 282, 54), 'y', False)
        # Processing the call keyword arguments (line 282)
        # Getting the type of 'event' (line 282)
        event_223886 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 282, 66), 'event', False)
        keyword_223887 = event_223886
        kwargs_223888 = {'guiEvent': keyword_223887}
        # Getting the type of 'FigureCanvasBase' (line 282)
        FigureCanvasBase_223881 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 282, 8), 'FigureCanvasBase', False)
        # Obtaining the member 'motion_notify_event' of a type (line 282)
        motion_notify_event_223882 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 282, 8), FigureCanvasBase_223881, 'motion_notify_event')
        # Calling motion_notify_event(args, kwargs) (line 282)
        motion_notify_event_call_result_223889 = invoke(stypy.reporting.localization.Localization(__file__, 282, 8), motion_notify_event_223882, *[self_223883, x_223884, y_223885], **kwargs_223888)
        
        # Getting the type of 'False' (line 283)
        False_223890 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 283, 15), 'False')
        # Assigning a type to the variable 'stypy_return_type' (line 283)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 283, 8), 'stypy_return_type', False_223890)
        
        # ################# End of 'motion_notify_event(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'motion_notify_event' in the type store
        # Getting the type of 'stypy_return_type' (line 274)
        stypy_return_type_223891 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 274, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_223891)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'motion_notify_event'
        return stypy_return_type_223891


    @norecursion
    def leave_notify_event(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'leave_notify_event'
        module_type_store = module_type_store.open_function_context('leave_notify_event', 285, 4, False)
        # Assigning a type to the variable 'self' (line 286)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 286, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        FigureCanvasGTK.leave_notify_event.__dict__.__setitem__('stypy_localization', localization)
        FigureCanvasGTK.leave_notify_event.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        FigureCanvasGTK.leave_notify_event.__dict__.__setitem__('stypy_type_store', module_type_store)
        FigureCanvasGTK.leave_notify_event.__dict__.__setitem__('stypy_function_name', 'FigureCanvasGTK.leave_notify_event')
        FigureCanvasGTK.leave_notify_event.__dict__.__setitem__('stypy_param_names_list', ['widget', 'event'])
        FigureCanvasGTK.leave_notify_event.__dict__.__setitem__('stypy_varargs_param_name', None)
        FigureCanvasGTK.leave_notify_event.__dict__.__setitem__('stypy_kwargs_param_name', None)
        FigureCanvasGTK.leave_notify_event.__dict__.__setitem__('stypy_call_defaults', defaults)
        FigureCanvasGTK.leave_notify_event.__dict__.__setitem__('stypy_call_varargs', varargs)
        FigureCanvasGTK.leave_notify_event.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        FigureCanvasGTK.leave_notify_event.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FigureCanvasGTK.leave_notify_event', ['widget', 'event'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'leave_notify_event', localization, ['widget', 'event'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'leave_notify_event(...)' code ##################

        
        # Call to leave_notify_event(...): (line 286)
        # Processing the call arguments (line 286)
        # Getting the type of 'self' (line 286)
        self_223894 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 286, 44), 'self', False)
        # Getting the type of 'event' (line 286)
        event_223895 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 286, 50), 'event', False)
        # Processing the call keyword arguments (line 286)
        kwargs_223896 = {}
        # Getting the type of 'FigureCanvasBase' (line 286)
        FigureCanvasBase_223892 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 286, 8), 'FigureCanvasBase', False)
        # Obtaining the member 'leave_notify_event' of a type (line 286)
        leave_notify_event_223893 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 286, 8), FigureCanvasBase_223892, 'leave_notify_event')
        # Calling leave_notify_event(args, kwargs) (line 286)
        leave_notify_event_call_result_223897 = invoke(stypy.reporting.localization.Localization(__file__, 286, 8), leave_notify_event_223893, *[self_223894, event_223895], **kwargs_223896)
        
        
        # ################# End of 'leave_notify_event(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'leave_notify_event' in the type store
        # Getting the type of 'stypy_return_type' (line 285)
        stypy_return_type_223898 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 285, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_223898)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'leave_notify_event'
        return stypy_return_type_223898


    @norecursion
    def enter_notify_event(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'enter_notify_event'
        module_type_store = module_type_store.open_function_context('enter_notify_event', 288, 4, False)
        # Assigning a type to the variable 'self' (line 289)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 289, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        FigureCanvasGTK.enter_notify_event.__dict__.__setitem__('stypy_localization', localization)
        FigureCanvasGTK.enter_notify_event.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        FigureCanvasGTK.enter_notify_event.__dict__.__setitem__('stypy_type_store', module_type_store)
        FigureCanvasGTK.enter_notify_event.__dict__.__setitem__('stypy_function_name', 'FigureCanvasGTK.enter_notify_event')
        FigureCanvasGTK.enter_notify_event.__dict__.__setitem__('stypy_param_names_list', ['widget', 'event'])
        FigureCanvasGTK.enter_notify_event.__dict__.__setitem__('stypy_varargs_param_name', None)
        FigureCanvasGTK.enter_notify_event.__dict__.__setitem__('stypy_kwargs_param_name', None)
        FigureCanvasGTK.enter_notify_event.__dict__.__setitem__('stypy_call_defaults', defaults)
        FigureCanvasGTK.enter_notify_event.__dict__.__setitem__('stypy_call_varargs', varargs)
        FigureCanvasGTK.enter_notify_event.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        FigureCanvasGTK.enter_notify_event.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FigureCanvasGTK.enter_notify_event', ['widget', 'event'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'enter_notify_event', localization, ['widget', 'event'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'enter_notify_event(...)' code ##################

        
        # Assigning a Call to a Tuple (line 289):
        
        # Assigning a Call to a Name:
        
        # Call to get_pointer(...): (line 289)
        # Processing the call keyword arguments (line 289)
        kwargs_223902 = {}
        # Getting the type of 'event' (line 289)
        event_223899 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 289, 22), 'event', False)
        # Obtaining the member 'window' of a type (line 289)
        window_223900 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 289, 22), event_223899, 'window')
        # Obtaining the member 'get_pointer' of a type (line 289)
        get_pointer_223901 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 289, 22), window_223900, 'get_pointer')
        # Calling get_pointer(args, kwargs) (line 289)
        get_pointer_call_result_223903 = invoke(stypy.reporting.localization.Localization(__file__, 289, 22), get_pointer_223901, *[], **kwargs_223902)
        
        # Assigning a type to the variable 'call_assignment_223292' (line 289)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 289, 8), 'call_assignment_223292', get_pointer_call_result_223903)
        
        # Assigning a Call to a Name (line 289):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_223906 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 289, 8), 'int')
        # Processing the call keyword arguments
        kwargs_223907 = {}
        # Getting the type of 'call_assignment_223292' (line 289)
        call_assignment_223292_223904 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 289, 8), 'call_assignment_223292', False)
        # Obtaining the member '__getitem__' of a type (line 289)
        getitem___223905 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 289, 8), call_assignment_223292_223904, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_223908 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___223905, *[int_223906], **kwargs_223907)
        
        # Assigning a type to the variable 'call_assignment_223293' (line 289)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 289, 8), 'call_assignment_223293', getitem___call_result_223908)
        
        # Assigning a Name to a Name (line 289):
        # Getting the type of 'call_assignment_223293' (line 289)
        call_assignment_223293_223909 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 289, 8), 'call_assignment_223293')
        # Assigning a type to the variable 'x' (line 289)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 289, 8), 'x', call_assignment_223293_223909)
        
        # Assigning a Call to a Name (line 289):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_223912 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 289, 8), 'int')
        # Processing the call keyword arguments
        kwargs_223913 = {}
        # Getting the type of 'call_assignment_223292' (line 289)
        call_assignment_223292_223910 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 289, 8), 'call_assignment_223292', False)
        # Obtaining the member '__getitem__' of a type (line 289)
        getitem___223911 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 289, 8), call_assignment_223292_223910, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_223914 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___223911, *[int_223912], **kwargs_223913)
        
        # Assigning a type to the variable 'call_assignment_223294' (line 289)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 289, 8), 'call_assignment_223294', getitem___call_result_223914)
        
        # Assigning a Name to a Name (line 289):
        # Getting the type of 'call_assignment_223294' (line 289)
        call_assignment_223294_223915 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 289, 8), 'call_assignment_223294')
        # Assigning a type to the variable 'y' (line 289)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 289, 11), 'y', call_assignment_223294_223915)
        
        # Assigning a Call to a Name (line 289):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_223918 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 289, 8), 'int')
        # Processing the call keyword arguments
        kwargs_223919 = {}
        # Getting the type of 'call_assignment_223292' (line 289)
        call_assignment_223292_223916 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 289, 8), 'call_assignment_223292', False)
        # Obtaining the member '__getitem__' of a type (line 289)
        getitem___223917 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 289, 8), call_assignment_223292_223916, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_223920 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___223917, *[int_223918], **kwargs_223919)
        
        # Assigning a type to the variable 'call_assignment_223295' (line 289)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 289, 8), 'call_assignment_223295', getitem___call_result_223920)
        
        # Assigning a Name to a Name (line 289):
        # Getting the type of 'call_assignment_223295' (line 289)
        call_assignment_223295_223921 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 289, 8), 'call_assignment_223295')
        # Assigning a type to the variable 'state' (line 289)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 289, 14), 'state', call_assignment_223295_223921)
        
        # Call to enter_notify_event(...): (line 290)
        # Processing the call arguments (line 290)
        # Getting the type of 'self' (line 290)
        self_223924 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 290, 44), 'self', False)
        # Getting the type of 'event' (line 290)
        event_223925 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 290, 50), 'event', False)
        # Processing the call keyword arguments (line 290)
        
        # Obtaining an instance of the builtin type 'tuple' (line 290)
        tuple_223926 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 290, 61), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 290)
        # Adding element type (line 290)
        # Getting the type of 'x' (line 290)
        x_223927 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 290, 61), 'x', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 290, 61), tuple_223926, x_223927)
        # Adding element type (line 290)
        # Getting the type of 'y' (line 290)
        y_223928 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 290, 64), 'y', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 290, 61), tuple_223926, y_223928)
        
        keyword_223929 = tuple_223926
        kwargs_223930 = {'xy': keyword_223929}
        # Getting the type of 'FigureCanvasBase' (line 290)
        FigureCanvasBase_223922 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 290, 8), 'FigureCanvasBase', False)
        # Obtaining the member 'enter_notify_event' of a type (line 290)
        enter_notify_event_223923 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 290, 8), FigureCanvasBase_223922, 'enter_notify_event')
        # Calling enter_notify_event(args, kwargs) (line 290)
        enter_notify_event_call_result_223931 = invoke(stypy.reporting.localization.Localization(__file__, 290, 8), enter_notify_event_223923, *[self_223924, event_223925], **kwargs_223930)
        
        
        # ################# End of 'enter_notify_event(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'enter_notify_event' in the type store
        # Getting the type of 'stypy_return_type' (line 288)
        stypy_return_type_223932 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 288, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_223932)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'enter_notify_event'
        return stypy_return_type_223932


    @norecursion
    def _get_key(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_get_key'
        module_type_store = module_type_store.open_function_context('_get_key', 292, 4, False)
        # Assigning a type to the variable 'self' (line 293)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 293, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        FigureCanvasGTK._get_key.__dict__.__setitem__('stypy_localization', localization)
        FigureCanvasGTK._get_key.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        FigureCanvasGTK._get_key.__dict__.__setitem__('stypy_type_store', module_type_store)
        FigureCanvasGTK._get_key.__dict__.__setitem__('stypy_function_name', 'FigureCanvasGTK._get_key')
        FigureCanvasGTK._get_key.__dict__.__setitem__('stypy_param_names_list', ['event'])
        FigureCanvasGTK._get_key.__dict__.__setitem__('stypy_varargs_param_name', None)
        FigureCanvasGTK._get_key.__dict__.__setitem__('stypy_kwargs_param_name', None)
        FigureCanvasGTK._get_key.__dict__.__setitem__('stypy_call_defaults', defaults)
        FigureCanvasGTK._get_key.__dict__.__setitem__('stypy_call_varargs', varargs)
        FigureCanvasGTK._get_key.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        FigureCanvasGTK._get_key.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FigureCanvasGTK._get_key', ['event'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_get_key', localization, ['event'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_get_key(...)' code ##################

        
        
        # Getting the type of 'event' (line 293)
        event_223933 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 293, 11), 'event')
        # Obtaining the member 'keyval' of a type (line 293)
        keyval_223934 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 293, 11), event_223933, 'keyval')
        # Getting the type of 'self' (line 293)
        self_223935 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 293, 27), 'self')
        # Obtaining the member 'keyvald' of a type (line 293)
        keyvald_223936 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 293, 27), self_223935, 'keyvald')
        # Applying the binary operator 'in' (line 293)
        result_contains_223937 = python_operator(stypy.reporting.localization.Localization(__file__, 293, 11), 'in', keyval_223934, keyvald_223936)
        
        # Testing the type of an if condition (line 293)
        if_condition_223938 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 293, 8), result_contains_223937)
        # Assigning a type to the variable 'if_condition_223938' (line 293)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 293, 8), 'if_condition_223938', if_condition_223938)
        # SSA begins for if statement (line 293)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Subscript to a Name (line 294):
        
        # Assigning a Subscript to a Name (line 294):
        
        # Obtaining the type of the subscript
        # Getting the type of 'event' (line 294)
        event_223939 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 294, 31), 'event')
        # Obtaining the member 'keyval' of a type (line 294)
        keyval_223940 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 294, 31), event_223939, 'keyval')
        # Getting the type of 'self' (line 294)
        self_223941 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 294, 18), 'self')
        # Obtaining the member 'keyvald' of a type (line 294)
        keyvald_223942 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 294, 18), self_223941, 'keyvald')
        # Obtaining the member '__getitem__' of a type (line 294)
        getitem___223943 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 294, 18), keyvald_223942, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 294)
        subscript_call_result_223944 = invoke(stypy.reporting.localization.Localization(__file__, 294, 18), getitem___223943, keyval_223940)
        
        # Assigning a type to the variable 'key' (line 294)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 294, 12), 'key', subscript_call_result_223944)
        # SSA branch for the else part of an if statement (line 293)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'event' (line 295)
        event_223945 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 295, 13), 'event')
        # Obtaining the member 'keyval' of a type (line 295)
        keyval_223946 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 295, 13), event_223945, 'keyval')
        int_223947 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 295, 28), 'int')
        # Applying the binary operator '<' (line 295)
        result_lt_223948 = python_operator(stypy.reporting.localization.Localization(__file__, 295, 13), '<', keyval_223946, int_223947)
        
        # Testing the type of an if condition (line 295)
        if_condition_223949 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 295, 13), result_lt_223948)
        # Assigning a type to the variable 'if_condition_223949' (line 295)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 295, 13), 'if_condition_223949', if_condition_223949)
        # SSA begins for if statement (line 295)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 296):
        
        # Assigning a Call to a Name (line 296):
        
        # Call to chr(...): (line 296)
        # Processing the call arguments (line 296)
        # Getting the type of 'event' (line 296)
        event_223951 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 296, 22), 'event', False)
        # Obtaining the member 'keyval' of a type (line 296)
        keyval_223952 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 296, 22), event_223951, 'keyval')
        # Processing the call keyword arguments (line 296)
        kwargs_223953 = {}
        # Getting the type of 'chr' (line 296)
        chr_223950 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 296, 18), 'chr', False)
        # Calling chr(args, kwargs) (line 296)
        chr_call_result_223954 = invoke(stypy.reporting.localization.Localization(__file__, 296, 18), chr_223950, *[keyval_223952], **kwargs_223953)
        
        # Assigning a type to the variable 'key' (line 296)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 296, 12), 'key', chr_call_result_223954)
        # SSA branch for the else part of an if statement (line 295)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Name to a Name (line 298):
        
        # Assigning a Name to a Name (line 298):
        # Getting the type of 'None' (line 298)
        None_223955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 298, 18), 'None')
        # Assigning a type to the variable 'key' (line 298)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 298, 12), 'key', None_223955)
        # SSA join for if statement (line 295)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 293)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 301)
        tuple_223956 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 301, 33), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 301)
        # Adding element type (line 301)
        
        # Obtaining an instance of the builtin type 'list' (line 301)
        list_223957 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 301, 33), 'list')
        # Adding type elements to the builtin type 'list' instance (line 301)
        # Adding element type (line 301)
        # Getting the type of 'gdk' (line 301)
        gdk_223958 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 301, 34), 'gdk')
        # Obtaining the member 'MOD4_MASK' of a type (line 301)
        MOD4_MASK_223959 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 301, 34), gdk_223958, 'MOD4_MASK')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 301, 33), list_223957, MOD4_MASK_223959)
        # Adding element type (line 301)
        unicode_223960 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 301, 49), 'unicode', u'super')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 301, 33), list_223957, unicode_223960)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 301, 33), tuple_223956, list_223957)
        # Adding element type (line 301)
        
        # Obtaining an instance of the builtin type 'list' (line 302)
        list_223961 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 302, 33), 'list')
        # Adding type elements to the builtin type 'list' instance (line 302)
        # Adding element type (line 302)
        # Getting the type of 'gdk' (line 302)
        gdk_223962 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 302, 34), 'gdk')
        # Obtaining the member 'MOD1_MASK' of a type (line 302)
        MOD1_MASK_223963 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 302, 34), gdk_223962, 'MOD1_MASK')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 302, 33), list_223961, MOD1_MASK_223963)
        # Adding element type (line 302)
        unicode_223964 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 302, 49), 'unicode', u'alt')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 302, 33), list_223961, unicode_223964)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 301, 33), tuple_223956, list_223961)
        # Adding element type (line 301)
        
        # Obtaining an instance of the builtin type 'list' (line 303)
        list_223965 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 303, 33), 'list')
        # Adding type elements to the builtin type 'list' instance (line 303)
        # Adding element type (line 303)
        # Getting the type of 'gdk' (line 303)
        gdk_223966 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 303, 34), 'gdk')
        # Obtaining the member 'CONTROL_MASK' of a type (line 303)
        CONTROL_MASK_223967 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 303, 34), gdk_223966, 'CONTROL_MASK')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 303, 33), list_223965, CONTROL_MASK_223967)
        # Adding element type (line 303)
        unicode_223968 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 303, 52), 'unicode', u'ctrl')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 303, 33), list_223965, unicode_223968)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 301, 33), tuple_223956, list_223965)
        
        # Testing the type of a for loop iterable (line 300)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 300, 8), tuple_223956)
        # Getting the type of the for loop variable (line 300)
        for_loop_var_223969 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 300, 8), tuple_223956)
        # Assigning a type to the variable 'key_mask' (line 300)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 300, 8), 'key_mask', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 300, 8), for_loop_var_223969))
        # Assigning a type to the variable 'prefix' (line 300)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 300, 8), 'prefix', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 300, 8), for_loop_var_223969))
        # SSA begins for a for statement (line 300)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Getting the type of 'event' (line 304)
        event_223970 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 304, 15), 'event')
        # Obtaining the member 'state' of a type (line 304)
        state_223971 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 304, 15), event_223970, 'state')
        # Getting the type of 'key_mask' (line 304)
        key_mask_223972 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 304, 29), 'key_mask')
        # Applying the binary operator '&' (line 304)
        result_and__223973 = python_operator(stypy.reporting.localization.Localization(__file__, 304, 15), '&', state_223971, key_mask_223972)
        
        # Testing the type of an if condition (line 304)
        if_condition_223974 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 304, 12), result_and__223973)
        # Assigning a type to the variable 'if_condition_223974' (line 304)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 304, 12), 'if_condition_223974', if_condition_223974)
        # SSA begins for if statement (line 304)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 305):
        
        # Assigning a Call to a Name (line 305):
        
        # Call to format(...): (line 305)
        # Processing the call arguments (line 305)
        # Getting the type of 'prefix' (line 305)
        prefix_223977 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 305, 39), 'prefix', False)
        # Getting the type of 'key' (line 305)
        key_223978 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 305, 47), 'key', False)
        # Processing the call keyword arguments (line 305)
        kwargs_223979 = {}
        unicode_223975 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 305, 22), 'unicode', u'{0}+{1}')
        # Obtaining the member 'format' of a type (line 305)
        format_223976 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 305, 22), unicode_223975, 'format')
        # Calling format(args, kwargs) (line 305)
        format_call_result_223980 = invoke(stypy.reporting.localization.Localization(__file__, 305, 22), format_223976, *[prefix_223977, key_223978], **kwargs_223979)
        
        # Assigning a type to the variable 'key' (line 305)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 305, 16), 'key', format_call_result_223980)
        # SSA join for if statement (line 304)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        # Getting the type of 'key' (line 307)
        key_223981 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 307, 15), 'key')
        # Assigning a type to the variable 'stypy_return_type' (line 307)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 307, 8), 'stypy_return_type', key_223981)
        
        # ################# End of '_get_key(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_get_key' in the type store
        # Getting the type of 'stypy_return_type' (line 292)
        stypy_return_type_223982 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 292, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_223982)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_get_key'
        return stypy_return_type_223982


    @norecursion
    def configure_event(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'configure_event'
        module_type_store = module_type_store.open_function_context('configure_event', 309, 4, False)
        # Assigning a type to the variable 'self' (line 310)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 310, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        FigureCanvasGTK.configure_event.__dict__.__setitem__('stypy_localization', localization)
        FigureCanvasGTK.configure_event.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        FigureCanvasGTK.configure_event.__dict__.__setitem__('stypy_type_store', module_type_store)
        FigureCanvasGTK.configure_event.__dict__.__setitem__('stypy_function_name', 'FigureCanvasGTK.configure_event')
        FigureCanvasGTK.configure_event.__dict__.__setitem__('stypy_param_names_list', ['widget', 'event'])
        FigureCanvasGTK.configure_event.__dict__.__setitem__('stypy_varargs_param_name', None)
        FigureCanvasGTK.configure_event.__dict__.__setitem__('stypy_kwargs_param_name', None)
        FigureCanvasGTK.configure_event.__dict__.__setitem__('stypy_call_defaults', defaults)
        FigureCanvasGTK.configure_event.__dict__.__setitem__('stypy_call_varargs', varargs)
        FigureCanvasGTK.configure_event.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        FigureCanvasGTK.configure_event.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FigureCanvasGTK.configure_event', ['widget', 'event'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'configure_event', localization, ['widget', 'event'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'configure_event(...)' code ##################

        
        # Type idiom detected: calculating its left and rigth part (line 310)
        # Getting the type of 'widget' (line 310)
        widget_223983 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 310, 11), 'widget')
        # Obtaining the member 'window' of a type (line 310)
        window_223984 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 310, 11), widget_223983, 'window')
        # Getting the type of 'None' (line 310)
        None_223985 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 310, 28), 'None')
        
        (may_be_223986, more_types_in_union_223987) = may_be_none(window_223984, None_223985)

        if may_be_223986:

            if more_types_in_union_223987:
                # Runtime conditional SSA (line 310)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            # Assigning a type to the variable 'stypy_return_type' (line 311)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 311, 12), 'stypy_return_type', types.NoneType)

            if more_types_in_union_223987:
                # SSA join for if statement (line 310)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Tuple to a Tuple (line 312):
        
        # Assigning a Attribute to a Name (line 312):
        # Getting the type of 'event' (line 312)
        event_223988 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 312, 15), 'event')
        # Obtaining the member 'width' of a type (line 312)
        width_223989 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 312, 15), event_223988, 'width')
        # Assigning a type to the variable 'tuple_assignment_223296' (line 312)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 312, 8), 'tuple_assignment_223296', width_223989)
        
        # Assigning a Attribute to a Name (line 312):
        # Getting the type of 'event' (line 312)
        event_223990 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 312, 28), 'event')
        # Obtaining the member 'height' of a type (line 312)
        height_223991 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 312, 28), event_223990, 'height')
        # Assigning a type to the variable 'tuple_assignment_223297' (line 312)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 312, 8), 'tuple_assignment_223297', height_223991)
        
        # Assigning a Name to a Name (line 312):
        # Getting the type of 'tuple_assignment_223296' (line 312)
        tuple_assignment_223296_223992 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 312, 8), 'tuple_assignment_223296')
        # Assigning a type to the variable 'w' (line 312)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 312, 8), 'w', tuple_assignment_223296_223992)
        
        # Assigning a Name to a Name (line 312):
        # Getting the type of 'tuple_assignment_223297' (line 312)
        tuple_assignment_223297_223993 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 312, 8), 'tuple_assignment_223297')
        # Assigning a type to the variable 'h' (line 312)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 312, 11), 'h', tuple_assignment_223297_223993)
        
        
        # Evaluating a boolean operation
        
        # Getting the type of 'w' (line 313)
        w_223994 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 313, 11), 'w')
        int_223995 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 313, 15), 'int')
        # Applying the binary operator '<' (line 313)
        result_lt_223996 = python_operator(stypy.reporting.localization.Localization(__file__, 313, 11), '<', w_223994, int_223995)
        
        
        # Getting the type of 'h' (line 313)
        h_223997 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 313, 20), 'h')
        int_223998 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 313, 24), 'int')
        # Applying the binary operator '<' (line 313)
        result_lt_223999 = python_operator(stypy.reporting.localization.Localization(__file__, 313, 20), '<', h_223997, int_223998)
        
        # Applying the binary operator 'or' (line 313)
        result_or_keyword_224000 = python_operator(stypy.reporting.localization.Localization(__file__, 313, 11), 'or', result_lt_223996, result_lt_223999)
        
        # Testing the type of an if condition (line 313)
        if_condition_224001 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 313, 8), result_or_keyword_224000)
        # Assigning a type to the variable 'if_condition_224001' (line 313)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 313, 8), 'if_condition_224001', if_condition_224001)
        # SSA begins for if statement (line 313)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        # Assigning a type to the variable 'stypy_return_type' (line 314)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 314, 12), 'stypy_return_type', types.NoneType)
        # SSA join for if statement (line 313)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Attribute to a Name (line 317):
        
        # Assigning a Attribute to a Name (line 317):
        # Getting the type of 'self' (line 317)
        self_224002 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 317, 14), 'self')
        # Obtaining the member 'figure' of a type (line 317)
        figure_224003 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 317, 14), self_224002, 'figure')
        # Obtaining the member 'dpi' of a type (line 317)
        dpi_224004 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 317, 14), figure_224003, 'dpi')
        # Assigning a type to the variable 'dpi' (line 317)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 317, 8), 'dpi', dpi_224004)
        
        # Call to set_size_inches(...): (line 318)
        # Processing the call arguments (line 318)
        # Getting the type of 'w' (line 318)
        w_224008 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 318, 36), 'w', False)
        # Getting the type of 'dpi' (line 318)
        dpi_224009 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 318, 38), 'dpi', False)
        # Applying the binary operator 'div' (line 318)
        result_div_224010 = python_operator(stypy.reporting.localization.Localization(__file__, 318, 36), 'div', w_224008, dpi_224009)
        
        # Getting the type of 'h' (line 318)
        h_224011 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 318, 43), 'h', False)
        # Getting the type of 'dpi' (line 318)
        dpi_224012 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 318, 45), 'dpi', False)
        # Applying the binary operator 'div' (line 318)
        result_div_224013 = python_operator(stypy.reporting.localization.Localization(__file__, 318, 43), 'div', h_224011, dpi_224012)
        
        # Processing the call keyword arguments (line 318)
        # Getting the type of 'False' (line 318)
        False_224014 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 318, 58), 'False', False)
        keyword_224015 = False_224014
        kwargs_224016 = {'forward': keyword_224015}
        # Getting the type of 'self' (line 318)
        self_224005 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 318, 8), 'self', False)
        # Obtaining the member 'figure' of a type (line 318)
        figure_224006 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 318, 8), self_224005, 'figure')
        # Obtaining the member 'set_size_inches' of a type (line 318)
        set_size_inches_224007 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 318, 8), figure_224006, 'set_size_inches')
        # Calling set_size_inches(args, kwargs) (line 318)
        set_size_inches_call_result_224017 = invoke(stypy.reporting.localization.Localization(__file__, 318, 8), set_size_inches_224007, *[result_div_224010, result_div_224013], **kwargs_224016)
        
        
        # Assigning a Name to a Attribute (line 319):
        
        # Assigning a Name to a Attribute (line 319):
        # Getting the type of 'True' (line 319)
        True_224018 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 319, 28), 'True')
        # Getting the type of 'self' (line 319)
        self_224019 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 319, 8), 'self')
        # Setting the type of the member '_need_redraw' of a type (line 319)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 319, 8), self_224019, '_need_redraw', True_224018)
        # Getting the type of 'False' (line 321)
        False_224020 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 321, 15), 'False')
        # Assigning a type to the variable 'stypy_return_type' (line 321)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 321, 8), 'stypy_return_type', False_224020)
        
        # ################# End of 'configure_event(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'configure_event' in the type store
        # Getting the type of 'stypy_return_type' (line 309)
        stypy_return_type_224021 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 309, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_224021)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'configure_event'
        return stypy_return_type_224021


    @norecursion
    def draw(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'draw'
        module_type_store = module_type_store.open_function_context('draw', 323, 4, False)
        # Assigning a type to the variable 'self' (line 324)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 324, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        FigureCanvasGTK.draw.__dict__.__setitem__('stypy_localization', localization)
        FigureCanvasGTK.draw.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        FigureCanvasGTK.draw.__dict__.__setitem__('stypy_type_store', module_type_store)
        FigureCanvasGTK.draw.__dict__.__setitem__('stypy_function_name', 'FigureCanvasGTK.draw')
        FigureCanvasGTK.draw.__dict__.__setitem__('stypy_param_names_list', [])
        FigureCanvasGTK.draw.__dict__.__setitem__('stypy_varargs_param_name', None)
        FigureCanvasGTK.draw.__dict__.__setitem__('stypy_kwargs_param_name', None)
        FigureCanvasGTK.draw.__dict__.__setitem__('stypy_call_defaults', defaults)
        FigureCanvasGTK.draw.__dict__.__setitem__('stypy_call_varargs', varargs)
        FigureCanvasGTK.draw.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        FigureCanvasGTK.draw.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FigureCanvasGTK.draw', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'draw', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'draw(...)' code ##################

        
        # Assigning a Name to a Attribute (line 327):
        
        # Assigning a Name to a Attribute (line 327):
        # Getting the type of 'True' (line 327)
        True_224022 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 327, 28), 'True')
        # Getting the type of 'self' (line 327)
        self_224023 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 327, 8), 'self')
        # Setting the type of the member '_need_redraw' of a type (line 327)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 327, 8), self_224023, '_need_redraw', True_224022)
        
        
        # Call to GTK_WIDGET_DRAWABLE(...): (line 328)
        # Processing the call arguments (line 328)
        # Getting the type of 'self' (line 328)
        self_224025 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 328, 31), 'self', False)
        # Processing the call keyword arguments (line 328)
        kwargs_224026 = {}
        # Getting the type of 'GTK_WIDGET_DRAWABLE' (line 328)
        GTK_WIDGET_DRAWABLE_224024 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 328, 11), 'GTK_WIDGET_DRAWABLE', False)
        # Calling GTK_WIDGET_DRAWABLE(args, kwargs) (line 328)
        GTK_WIDGET_DRAWABLE_call_result_224027 = invoke(stypy.reporting.localization.Localization(__file__, 328, 11), GTK_WIDGET_DRAWABLE_224024, *[self_224025], **kwargs_224026)
        
        # Testing the type of an if condition (line 328)
        if_condition_224028 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 328, 8), GTK_WIDGET_DRAWABLE_call_result_224027)
        # Assigning a type to the variable 'if_condition_224028' (line 328)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 328, 8), 'if_condition_224028', if_condition_224028)
        # SSA begins for if statement (line 328)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to queue_draw(...): (line 329)
        # Processing the call keyword arguments (line 329)
        kwargs_224031 = {}
        # Getting the type of 'self' (line 329)
        self_224029 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 329, 12), 'self', False)
        # Obtaining the member 'queue_draw' of a type (line 329)
        queue_draw_224030 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 329, 12), self_224029, 'queue_draw')
        # Calling queue_draw(args, kwargs) (line 329)
        queue_draw_call_result_224032 = invoke(stypy.reporting.localization.Localization(__file__, 329, 12), queue_draw_224030, *[], **kwargs_224031)
        
        
        # Call to process_updates(...): (line 332)
        # Processing the call arguments (line 332)
        # Getting the type of 'False' (line 332)
        False_224036 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 332, 41), 'False', False)
        # Processing the call keyword arguments (line 332)
        kwargs_224037 = {}
        # Getting the type of 'self' (line 332)
        self_224033 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 332, 12), 'self', False)
        # Obtaining the member 'window' of a type (line 332)
        window_224034 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 332, 12), self_224033, 'window')
        # Obtaining the member 'process_updates' of a type (line 332)
        process_updates_224035 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 332, 12), window_224034, 'process_updates')
        # Calling process_updates(args, kwargs) (line 332)
        process_updates_call_result_224038 = invoke(stypy.reporting.localization.Localization(__file__, 332, 12), process_updates_224035, *[False_224036], **kwargs_224037)
        
        # SSA join for if statement (line 328)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'draw(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'draw' in the type store
        # Getting the type of 'stypy_return_type' (line 323)
        stypy_return_type_224039 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 323, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_224039)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'draw'
        return stypy_return_type_224039


    @norecursion
    def draw_idle(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'draw_idle'
        module_type_store = module_type_store.open_function_context('draw_idle', 334, 4, False)
        # Assigning a type to the variable 'self' (line 335)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 335, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        FigureCanvasGTK.draw_idle.__dict__.__setitem__('stypy_localization', localization)
        FigureCanvasGTK.draw_idle.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        FigureCanvasGTK.draw_idle.__dict__.__setitem__('stypy_type_store', module_type_store)
        FigureCanvasGTK.draw_idle.__dict__.__setitem__('stypy_function_name', 'FigureCanvasGTK.draw_idle')
        FigureCanvasGTK.draw_idle.__dict__.__setitem__('stypy_param_names_list', [])
        FigureCanvasGTK.draw_idle.__dict__.__setitem__('stypy_varargs_param_name', None)
        FigureCanvasGTK.draw_idle.__dict__.__setitem__('stypy_kwargs_param_name', None)
        FigureCanvasGTK.draw_idle.__dict__.__setitem__('stypy_call_defaults', defaults)
        FigureCanvasGTK.draw_idle.__dict__.__setitem__('stypy_call_varargs', varargs)
        FigureCanvasGTK.draw_idle.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        FigureCanvasGTK.draw_idle.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FigureCanvasGTK.draw_idle', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'draw_idle', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'draw_idle(...)' code ##################

        
        
        # Getting the type of 'self' (line 335)
        self_224040 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 335, 11), 'self')
        # Obtaining the member '_idle_draw_id' of a type (line 335)
        _idle_draw_id_224041 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 335, 11), self_224040, '_idle_draw_id')
        int_224042 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 335, 33), 'int')
        # Applying the binary operator '!=' (line 335)
        result_ne_224043 = python_operator(stypy.reporting.localization.Localization(__file__, 335, 11), '!=', _idle_draw_id_224041, int_224042)
        
        # Testing the type of an if condition (line 335)
        if_condition_224044 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 335, 8), result_ne_224043)
        # Assigning a type to the variable 'if_condition_224044' (line 335)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 335, 8), 'if_condition_224044', if_condition_224044)
        # SSA begins for if statement (line 335)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        # Assigning a type to the variable 'stypy_return_type' (line 336)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 336, 12), 'stypy_return_type', types.NoneType)
        # SSA join for if statement (line 335)
        module_type_store = module_type_store.join_ssa_context()
        

        @norecursion
        def idle_draw(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'idle_draw'
            module_type_store = module_type_store.open_function_context('idle_draw', 337, 8, False)
            
            # Passed parameters checking function
            idle_draw.stypy_localization = localization
            idle_draw.stypy_type_of_self = None
            idle_draw.stypy_type_store = module_type_store
            idle_draw.stypy_function_name = 'idle_draw'
            idle_draw.stypy_param_names_list = []
            idle_draw.stypy_varargs_param_name = 'args'
            idle_draw.stypy_kwargs_param_name = None
            idle_draw.stypy_call_defaults = defaults
            idle_draw.stypy_call_varargs = varargs
            idle_draw.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'idle_draw', [], 'args', None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'idle_draw', localization, [], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'idle_draw(...)' code ##################

            
            # Try-finally block (line 338)
            
            # Call to draw(...): (line 339)
            # Processing the call keyword arguments (line 339)
            kwargs_224047 = {}
            # Getting the type of 'self' (line 339)
            self_224045 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 339, 16), 'self', False)
            # Obtaining the member 'draw' of a type (line 339)
            draw_224046 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 339, 16), self_224045, 'draw')
            # Calling draw(args, kwargs) (line 339)
            draw_call_result_224048 = invoke(stypy.reporting.localization.Localization(__file__, 339, 16), draw_224046, *[], **kwargs_224047)
            
            
            # finally branch of the try-finally block (line 338)
            
            # Assigning a Num to a Attribute (line 341):
            
            # Assigning a Num to a Attribute (line 341):
            int_224049 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 341, 37), 'int')
            # Getting the type of 'self' (line 341)
            self_224050 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 341, 16), 'self')
            # Setting the type of the member '_idle_draw_id' of a type (line 341)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 341, 16), self_224050, '_idle_draw_id', int_224049)
            
            # Getting the type of 'False' (line 342)
            False_224051 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 342, 19), 'False')
            # Assigning a type to the variable 'stypy_return_type' (line 342)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 342, 12), 'stypy_return_type', False_224051)
            
            # ################# End of 'idle_draw(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'idle_draw' in the type store
            # Getting the type of 'stypy_return_type' (line 337)
            stypy_return_type_224052 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 337, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_224052)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'idle_draw'
            return stypy_return_type_224052

        # Assigning a type to the variable 'idle_draw' (line 337)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 337, 8), 'idle_draw', idle_draw)
        
        # Assigning a Call to a Attribute (line 343):
        
        # Assigning a Call to a Attribute (line 343):
        
        # Call to idle_add(...): (line 343)
        # Processing the call arguments (line 343)
        # Getting the type of 'idle_draw' (line 343)
        idle_draw_224055 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 343, 46), 'idle_draw', False)
        # Processing the call keyword arguments (line 343)
        kwargs_224056 = {}
        # Getting the type of 'gobject' (line 343)
        gobject_224053 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 343, 29), 'gobject', False)
        # Obtaining the member 'idle_add' of a type (line 343)
        idle_add_224054 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 343, 29), gobject_224053, 'idle_add')
        # Calling idle_add(args, kwargs) (line 343)
        idle_add_call_result_224057 = invoke(stypy.reporting.localization.Localization(__file__, 343, 29), idle_add_224054, *[idle_draw_224055], **kwargs_224056)
        
        # Getting the type of 'self' (line 343)
        self_224058 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 343, 8), 'self')
        # Setting the type of the member '_idle_draw_id' of a type (line 343)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 343, 8), self_224058, '_idle_draw_id', idle_add_call_result_224057)
        
        # ################# End of 'draw_idle(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'draw_idle' in the type store
        # Getting the type of 'stypy_return_type' (line 334)
        stypy_return_type_224059 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 334, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_224059)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'draw_idle'
        return stypy_return_type_224059


    @norecursion
    def _renderer_init(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_renderer_init'
        module_type_store = module_type_store.open_function_context('_renderer_init', 346, 4, False)
        # Assigning a type to the variable 'self' (line 347)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 347, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        FigureCanvasGTK._renderer_init.__dict__.__setitem__('stypy_localization', localization)
        FigureCanvasGTK._renderer_init.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        FigureCanvasGTK._renderer_init.__dict__.__setitem__('stypy_type_store', module_type_store)
        FigureCanvasGTK._renderer_init.__dict__.__setitem__('stypy_function_name', 'FigureCanvasGTK._renderer_init')
        FigureCanvasGTK._renderer_init.__dict__.__setitem__('stypy_param_names_list', [])
        FigureCanvasGTK._renderer_init.__dict__.__setitem__('stypy_varargs_param_name', None)
        FigureCanvasGTK._renderer_init.__dict__.__setitem__('stypy_kwargs_param_name', None)
        FigureCanvasGTK._renderer_init.__dict__.__setitem__('stypy_call_defaults', defaults)
        FigureCanvasGTK._renderer_init.__dict__.__setitem__('stypy_call_varargs', varargs)
        FigureCanvasGTK._renderer_init.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        FigureCanvasGTK._renderer_init.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FigureCanvasGTK._renderer_init', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_renderer_init', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_renderer_init(...)' code ##################

        unicode_224060 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 353, (-1)), 'unicode', u'Override by GTK backends to select a different renderer\n        Renderer should provide the methods:\n            set_pixmap ()\n            set_width_height ()\n        that are used by\n            _render_figure() / _pixmap_prepare()\n        ')
        
        # Assigning a Call to a Attribute (line 354):
        
        # Assigning a Call to a Attribute (line 354):
        
        # Call to RendererGDK(...): (line 354)
        # Processing the call arguments (line 354)
        # Getting the type of 'self' (line 354)
        self_224062 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 38), 'self', False)
        # Getting the type of 'self' (line 354)
        self_224063 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 44), 'self', False)
        # Obtaining the member 'figure' of a type (line 354)
        figure_224064 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 44), self_224063, 'figure')
        # Obtaining the member 'dpi' of a type (line 354)
        dpi_224065 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 44), figure_224064, 'dpi')
        # Processing the call keyword arguments (line 354)
        kwargs_224066 = {}
        # Getting the type of 'RendererGDK' (line 354)
        RendererGDK_224061 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 25), 'RendererGDK', False)
        # Calling RendererGDK(args, kwargs) (line 354)
        RendererGDK_call_result_224067 = invoke(stypy.reporting.localization.Localization(__file__, 354, 25), RendererGDK_224061, *[self_224062, dpi_224065], **kwargs_224066)
        
        # Getting the type of 'self' (line 354)
        self_224068 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 8), 'self')
        # Setting the type of the member '_renderer' of a type (line 354)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 8), self_224068, '_renderer', RendererGDK_call_result_224067)
        
        # ################# End of '_renderer_init(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_renderer_init' in the type store
        # Getting the type of 'stypy_return_type' (line 346)
        stypy_return_type_224069 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 346, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_224069)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_renderer_init'
        return stypy_return_type_224069


    @norecursion
    def _pixmap_prepare(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_pixmap_prepare'
        module_type_store = module_type_store.open_function_context('_pixmap_prepare', 357, 4, False)
        # Assigning a type to the variable 'self' (line 358)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 358, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        FigureCanvasGTK._pixmap_prepare.__dict__.__setitem__('stypy_localization', localization)
        FigureCanvasGTK._pixmap_prepare.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        FigureCanvasGTK._pixmap_prepare.__dict__.__setitem__('stypy_type_store', module_type_store)
        FigureCanvasGTK._pixmap_prepare.__dict__.__setitem__('stypy_function_name', 'FigureCanvasGTK._pixmap_prepare')
        FigureCanvasGTK._pixmap_prepare.__dict__.__setitem__('stypy_param_names_list', ['width', 'height'])
        FigureCanvasGTK._pixmap_prepare.__dict__.__setitem__('stypy_varargs_param_name', None)
        FigureCanvasGTK._pixmap_prepare.__dict__.__setitem__('stypy_kwargs_param_name', None)
        FigureCanvasGTK._pixmap_prepare.__dict__.__setitem__('stypy_call_defaults', defaults)
        FigureCanvasGTK._pixmap_prepare.__dict__.__setitem__('stypy_call_varargs', varargs)
        FigureCanvasGTK._pixmap_prepare.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        FigureCanvasGTK._pixmap_prepare.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FigureCanvasGTK._pixmap_prepare', ['width', 'height'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_pixmap_prepare', localization, ['width', 'height'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_pixmap_prepare(...)' code ##################

        unicode_224070 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 361, (-1)), 'unicode', u'\n        Make sure _._pixmap is at least width, height,\n        create new pixmap if necessary\n        ')
        
        # Assigning a Name to a Name (line 362):
        
        # Assigning a Name to a Name (line 362):
        # Getting the type of 'False' (line 362)
        False_224071 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 362, 24), 'False')
        # Assigning a type to the variable 'create_pixmap' (line 362)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 362, 8), 'create_pixmap', False_224071)
        
        
        # Getting the type of 'width' (line 363)
        width_224072 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 363, 11), 'width')
        # Getting the type of 'self' (line 363)
        self_224073 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 363, 19), 'self')
        # Obtaining the member '_pixmap_width' of a type (line 363)
        _pixmap_width_224074 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 363, 19), self_224073, '_pixmap_width')
        # Applying the binary operator '>' (line 363)
        result_gt_224075 = python_operator(stypy.reporting.localization.Localization(__file__, 363, 11), '>', width_224072, _pixmap_width_224074)
        
        # Testing the type of an if condition (line 363)
        if_condition_224076 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 363, 8), result_gt_224075)
        # Assigning a type to the variable 'if_condition_224076' (line 363)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 363, 8), 'if_condition_224076', if_condition_224076)
        # SSA begins for if statement (line 363)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Attribute (line 365):
        
        # Assigning a Call to a Attribute (line 365):
        
        # Call to max(...): (line 365)
        # Processing the call arguments (line 365)
        
        # Call to int(...): (line 365)
        # Processing the call arguments (line 365)
        # Getting the type of 'self' (line 365)
        self_224079 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 365, 44), 'self', False)
        # Obtaining the member '_pixmap_width' of a type (line 365)
        _pixmap_width_224080 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 365, 44), self_224079, '_pixmap_width')
        float_224081 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 365, 66), 'float')
        # Applying the binary operator '*' (line 365)
        result_mul_224082 = python_operator(stypy.reporting.localization.Localization(__file__, 365, 44), '*', _pixmap_width_224080, float_224081)
        
        # Processing the call keyword arguments (line 365)
        kwargs_224083 = {}
        # Getting the type of 'int' (line 365)
        int_224078 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 365, 39), 'int', False)
        # Calling int(args, kwargs) (line 365)
        int_call_result_224084 = invoke(stypy.reporting.localization.Localization(__file__, 365, 39), int_224078, *[result_mul_224082], **kwargs_224083)
        
        # Getting the type of 'width' (line 366)
        width_224085 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 366, 39), 'width', False)
        # Processing the call keyword arguments (line 365)
        kwargs_224086 = {}
        # Getting the type of 'max' (line 365)
        max_224077 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 365, 34), 'max', False)
        # Calling max(args, kwargs) (line 365)
        max_call_result_224087 = invoke(stypy.reporting.localization.Localization(__file__, 365, 34), max_224077, *[int_call_result_224084, width_224085], **kwargs_224086)
        
        # Getting the type of 'self' (line 365)
        self_224088 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 365, 12), 'self')
        # Setting the type of the member '_pixmap_width' of a type (line 365)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 365, 12), self_224088, '_pixmap_width', max_call_result_224087)
        
        # Assigning a Name to a Name (line 367):
        
        # Assigning a Name to a Name (line 367):
        # Getting the type of 'True' (line 367)
        True_224089 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 367, 28), 'True')
        # Assigning a type to the variable 'create_pixmap' (line 367)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 367, 12), 'create_pixmap', True_224089)
        # SSA join for if statement (line 363)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'height' (line 369)
        height_224090 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 369, 11), 'height')
        # Getting the type of 'self' (line 369)
        self_224091 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 369, 20), 'self')
        # Obtaining the member '_pixmap_height' of a type (line 369)
        _pixmap_height_224092 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 369, 20), self_224091, '_pixmap_height')
        # Applying the binary operator '>' (line 369)
        result_gt_224093 = python_operator(stypy.reporting.localization.Localization(__file__, 369, 11), '>', height_224090, _pixmap_height_224092)
        
        # Testing the type of an if condition (line 369)
        if_condition_224094 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 369, 8), result_gt_224093)
        # Assigning a type to the variable 'if_condition_224094' (line 369)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 369, 8), 'if_condition_224094', if_condition_224094)
        # SSA begins for if statement (line 369)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Attribute (line 370):
        
        # Assigning a Call to a Attribute (line 370):
        
        # Call to max(...): (line 370)
        # Processing the call arguments (line 370)
        
        # Call to int(...): (line 370)
        # Processing the call arguments (line 370)
        # Getting the type of 'self' (line 370)
        self_224097 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 370, 44), 'self', False)
        # Obtaining the member '_pixmap_height' of a type (line 370)
        _pixmap_height_224098 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 370, 44), self_224097, '_pixmap_height')
        float_224099 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 370, 66), 'float')
        # Applying the binary operator '*' (line 370)
        result_mul_224100 = python_operator(stypy.reporting.localization.Localization(__file__, 370, 44), '*', _pixmap_height_224098, float_224099)
        
        # Processing the call keyword arguments (line 370)
        kwargs_224101 = {}
        # Getting the type of 'int' (line 370)
        int_224096 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 370, 39), 'int', False)
        # Calling int(args, kwargs) (line 370)
        int_call_result_224102 = invoke(stypy.reporting.localization.Localization(__file__, 370, 39), int_224096, *[result_mul_224100], **kwargs_224101)
        
        # Getting the type of 'height' (line 371)
        height_224103 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 371, 43), 'height', False)
        # Processing the call keyword arguments (line 370)
        kwargs_224104 = {}
        # Getting the type of 'max' (line 370)
        max_224095 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 370, 34), 'max', False)
        # Calling max(args, kwargs) (line 370)
        max_call_result_224105 = invoke(stypy.reporting.localization.Localization(__file__, 370, 34), max_224095, *[int_call_result_224102, height_224103], **kwargs_224104)
        
        # Getting the type of 'self' (line 370)
        self_224106 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 370, 12), 'self')
        # Setting the type of the member '_pixmap_height' of a type (line 370)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 370, 12), self_224106, '_pixmap_height', max_call_result_224105)
        
        # Assigning a Name to a Name (line 372):
        
        # Assigning a Name to a Name (line 372):
        # Getting the type of 'True' (line 372)
        True_224107 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 372, 28), 'True')
        # Assigning a type to the variable 'create_pixmap' (line 372)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 372, 12), 'create_pixmap', True_224107)
        # SSA join for if statement (line 369)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'create_pixmap' (line 374)
        create_pixmap_224108 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 374, 11), 'create_pixmap')
        # Testing the type of an if condition (line 374)
        if_condition_224109 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 374, 8), create_pixmap_224108)
        # Assigning a type to the variable 'if_condition_224109' (line 374)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 374, 8), 'if_condition_224109', if_condition_224109)
        # SSA begins for if statement (line 374)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Attribute (line 375):
        
        # Assigning a Call to a Attribute (line 375):
        
        # Call to Pixmap(...): (line 375)
        # Processing the call arguments (line 375)
        # Getting the type of 'self' (line 375)
        self_224112 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 375, 39), 'self', False)
        # Obtaining the member 'window' of a type (line 375)
        window_224113 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 375, 39), self_224112, 'window')
        # Getting the type of 'self' (line 375)
        self_224114 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 375, 52), 'self', False)
        # Obtaining the member '_pixmap_width' of a type (line 375)
        _pixmap_width_224115 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 375, 52), self_224114, '_pixmap_width')
        # Getting the type of 'self' (line 376)
        self_224116 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 376, 39), 'self', False)
        # Obtaining the member '_pixmap_height' of a type (line 376)
        _pixmap_height_224117 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 376, 39), self_224116, '_pixmap_height')
        # Processing the call keyword arguments (line 375)
        kwargs_224118 = {}
        # Getting the type of 'gdk' (line 375)
        gdk_224110 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 375, 27), 'gdk', False)
        # Obtaining the member 'Pixmap' of a type (line 375)
        Pixmap_224111 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 375, 27), gdk_224110, 'Pixmap')
        # Calling Pixmap(args, kwargs) (line 375)
        Pixmap_call_result_224119 = invoke(stypy.reporting.localization.Localization(__file__, 375, 27), Pixmap_224111, *[window_224113, _pixmap_width_224115, _pixmap_height_224117], **kwargs_224118)
        
        # Getting the type of 'self' (line 375)
        self_224120 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 375, 12), 'self')
        # Setting the type of the member '_pixmap' of a type (line 375)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 375, 12), self_224120, '_pixmap', Pixmap_call_result_224119)
        
        # Call to set_pixmap(...): (line 377)
        # Processing the call arguments (line 377)
        # Getting the type of 'self' (line 377)
        self_224124 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 377, 39), 'self', False)
        # Obtaining the member '_pixmap' of a type (line 377)
        _pixmap_224125 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 377, 39), self_224124, '_pixmap')
        # Processing the call keyword arguments (line 377)
        kwargs_224126 = {}
        # Getting the type of 'self' (line 377)
        self_224121 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 377, 12), 'self', False)
        # Obtaining the member '_renderer' of a type (line 377)
        _renderer_224122 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 377, 12), self_224121, '_renderer')
        # Obtaining the member 'set_pixmap' of a type (line 377)
        set_pixmap_224123 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 377, 12), _renderer_224122, 'set_pixmap')
        # Calling set_pixmap(args, kwargs) (line 377)
        set_pixmap_call_result_224127 = invoke(stypy.reporting.localization.Localization(__file__, 377, 12), set_pixmap_224123, *[_pixmap_224125], **kwargs_224126)
        
        # SSA join for if statement (line 374)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of '_pixmap_prepare(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_pixmap_prepare' in the type store
        # Getting the type of 'stypy_return_type' (line 357)
        stypy_return_type_224128 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_224128)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_pixmap_prepare'
        return stypy_return_type_224128


    @norecursion
    def _render_figure(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_render_figure'
        module_type_store = module_type_store.open_function_context('_render_figure', 380, 4, False)
        # Assigning a type to the variable 'self' (line 381)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 381, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        FigureCanvasGTK._render_figure.__dict__.__setitem__('stypy_localization', localization)
        FigureCanvasGTK._render_figure.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        FigureCanvasGTK._render_figure.__dict__.__setitem__('stypy_type_store', module_type_store)
        FigureCanvasGTK._render_figure.__dict__.__setitem__('stypy_function_name', 'FigureCanvasGTK._render_figure')
        FigureCanvasGTK._render_figure.__dict__.__setitem__('stypy_param_names_list', ['pixmap', 'width', 'height'])
        FigureCanvasGTK._render_figure.__dict__.__setitem__('stypy_varargs_param_name', None)
        FigureCanvasGTK._render_figure.__dict__.__setitem__('stypy_kwargs_param_name', None)
        FigureCanvasGTK._render_figure.__dict__.__setitem__('stypy_call_defaults', defaults)
        FigureCanvasGTK._render_figure.__dict__.__setitem__('stypy_call_varargs', varargs)
        FigureCanvasGTK._render_figure.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        FigureCanvasGTK._render_figure.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FigureCanvasGTK._render_figure', ['pixmap', 'width', 'height'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_render_figure', localization, ['pixmap', 'width', 'height'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_render_figure(...)' code ##################

        unicode_224129 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 382, (-1)), 'unicode', u'used by GTK and GTKcairo. GTKAgg overrides\n        ')
        
        # Call to set_width_height(...): (line 383)
        # Processing the call arguments (line 383)
        # Getting the type of 'width' (line 383)
        width_224133 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 383, 41), 'width', False)
        # Getting the type of 'height' (line 383)
        height_224134 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 383, 48), 'height', False)
        # Processing the call keyword arguments (line 383)
        kwargs_224135 = {}
        # Getting the type of 'self' (line 383)
        self_224130 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 383, 8), 'self', False)
        # Obtaining the member '_renderer' of a type (line 383)
        _renderer_224131 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 383, 8), self_224130, '_renderer')
        # Obtaining the member 'set_width_height' of a type (line 383)
        set_width_height_224132 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 383, 8), _renderer_224131, 'set_width_height')
        # Calling set_width_height(args, kwargs) (line 383)
        set_width_height_call_result_224136 = invoke(stypy.reporting.localization.Localization(__file__, 383, 8), set_width_height_224132, *[width_224133, height_224134], **kwargs_224135)
        
        
        # Call to draw(...): (line 384)
        # Processing the call arguments (line 384)
        # Getting the type of 'self' (line 384)
        self_224140 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 384, 26), 'self', False)
        # Obtaining the member '_renderer' of a type (line 384)
        _renderer_224141 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 384, 26), self_224140, '_renderer')
        # Processing the call keyword arguments (line 384)
        kwargs_224142 = {}
        # Getting the type of 'self' (line 384)
        self_224137 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 384, 8), 'self', False)
        # Obtaining the member 'figure' of a type (line 384)
        figure_224138 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 384, 8), self_224137, 'figure')
        # Obtaining the member 'draw' of a type (line 384)
        draw_224139 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 384, 8), figure_224138, 'draw')
        # Calling draw(args, kwargs) (line 384)
        draw_call_result_224143 = invoke(stypy.reporting.localization.Localization(__file__, 384, 8), draw_224139, *[_renderer_224141], **kwargs_224142)
        
        
        # ################# End of '_render_figure(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_render_figure' in the type store
        # Getting the type of 'stypy_return_type' (line 380)
        stypy_return_type_224144 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 380, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_224144)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_render_figure'
        return stypy_return_type_224144


    @norecursion
    def expose_event(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'expose_event'
        module_type_store = module_type_store.open_function_context('expose_event', 387, 4, False)
        # Assigning a type to the variable 'self' (line 388)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 388, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        FigureCanvasGTK.expose_event.__dict__.__setitem__('stypy_localization', localization)
        FigureCanvasGTK.expose_event.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        FigureCanvasGTK.expose_event.__dict__.__setitem__('stypy_type_store', module_type_store)
        FigureCanvasGTK.expose_event.__dict__.__setitem__('stypy_function_name', 'FigureCanvasGTK.expose_event')
        FigureCanvasGTK.expose_event.__dict__.__setitem__('stypy_param_names_list', ['widget', 'event'])
        FigureCanvasGTK.expose_event.__dict__.__setitem__('stypy_varargs_param_name', None)
        FigureCanvasGTK.expose_event.__dict__.__setitem__('stypy_kwargs_param_name', None)
        FigureCanvasGTK.expose_event.__dict__.__setitem__('stypy_call_defaults', defaults)
        FigureCanvasGTK.expose_event.__dict__.__setitem__('stypy_call_varargs', varargs)
        FigureCanvasGTK.expose_event.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        FigureCanvasGTK.expose_event.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FigureCanvasGTK.expose_event', ['widget', 'event'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'expose_event', localization, ['widget', 'event'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'expose_event(...)' code ##################

        unicode_224145 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 389, (-1)), 'unicode', u'Expose_event for all GTK backends. Should not be overridden.\n        ')
        
        # Assigning a Attribute to a Name (line 390):
        
        # Assigning a Attribute to a Name (line 390):
        # Getting the type of 'self' (line 390)
        self_224146 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 390, 18), 'self')
        # Obtaining the member 'toolbar' of a type (line 390)
        toolbar_224147 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 390, 18), self_224146, 'toolbar')
        # Assigning a type to the variable 'toolbar' (line 390)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 390, 8), 'toolbar', toolbar_224147)
        
        # Getting the type of 'toolbar' (line 391)
        toolbar_224148 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 391, 11), 'toolbar')
        # Testing the type of an if condition (line 391)
        if_condition_224149 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 391, 8), toolbar_224148)
        # Assigning a type to the variable 'if_condition_224149' (line 391)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 391, 8), 'if_condition_224149', if_condition_224149)
        # SSA begins for if statement (line 391)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to set_cursor(...): (line 392)
        # Processing the call arguments (line 392)
        # Getting the type of 'cursors' (line 392)
        cursors_224152 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 31), 'cursors', False)
        # Obtaining the member 'WAIT' of a type (line 392)
        WAIT_224153 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 31), cursors_224152, 'WAIT')
        # Processing the call keyword arguments (line 392)
        kwargs_224154 = {}
        # Getting the type of 'toolbar' (line 392)
        toolbar_224150 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 12), 'toolbar', False)
        # Obtaining the member 'set_cursor' of a type (line 392)
        set_cursor_224151 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 12), toolbar_224150, 'set_cursor')
        # Calling set_cursor(args, kwargs) (line 392)
        set_cursor_call_result_224155 = invoke(stypy.reporting.localization.Localization(__file__, 392, 12), set_cursor_224151, *[WAIT_224153], **kwargs_224154)
        
        # SSA join for if statement (line 391)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Call to GTK_WIDGET_DRAWABLE(...): (line 393)
        # Processing the call arguments (line 393)
        # Getting the type of 'self' (line 393)
        self_224157 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 393, 31), 'self', False)
        # Processing the call keyword arguments (line 393)
        kwargs_224158 = {}
        # Getting the type of 'GTK_WIDGET_DRAWABLE' (line 393)
        GTK_WIDGET_DRAWABLE_224156 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 393, 11), 'GTK_WIDGET_DRAWABLE', False)
        # Calling GTK_WIDGET_DRAWABLE(args, kwargs) (line 393)
        GTK_WIDGET_DRAWABLE_call_result_224159 = invoke(stypy.reporting.localization.Localization(__file__, 393, 11), GTK_WIDGET_DRAWABLE_224156, *[self_224157], **kwargs_224158)
        
        # Testing the type of an if condition (line 393)
        if_condition_224160 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 393, 8), GTK_WIDGET_DRAWABLE_call_result_224159)
        # Assigning a type to the variable 'if_condition_224160' (line 393)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 393, 8), 'if_condition_224160', if_condition_224160)
        # SSA begins for if statement (line 393)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'self' (line 394)
        self_224161 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 394, 15), 'self')
        # Obtaining the member '_need_redraw' of a type (line 394)
        _need_redraw_224162 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 394, 15), self_224161, '_need_redraw')
        # Testing the type of an if condition (line 394)
        if_condition_224163 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 394, 12), _need_redraw_224162)
        # Assigning a type to the variable 'if_condition_224163' (line 394)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 394, 12), 'if_condition_224163', if_condition_224163)
        # SSA begins for if statement (line 394)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Attribute to a Tuple (line 395):
        
        # Assigning a Subscript to a Name (line 395):
        
        # Obtaining the type of the subscript
        int_224164 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 395, 16), 'int')
        # Getting the type of 'self' (line 395)
        self_224165 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 395, 29), 'self')
        # Obtaining the member 'allocation' of a type (line 395)
        allocation_224166 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 395, 29), self_224165, 'allocation')
        # Obtaining the member '__getitem__' of a type (line 395)
        getitem___224167 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 395, 16), allocation_224166, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 395)
        subscript_call_result_224168 = invoke(stypy.reporting.localization.Localization(__file__, 395, 16), getitem___224167, int_224164)
        
        # Assigning a type to the variable 'tuple_var_assignment_223298' (line 395)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 395, 16), 'tuple_var_assignment_223298', subscript_call_result_224168)
        
        # Assigning a Subscript to a Name (line 395):
        
        # Obtaining the type of the subscript
        int_224169 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 395, 16), 'int')
        # Getting the type of 'self' (line 395)
        self_224170 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 395, 29), 'self')
        # Obtaining the member 'allocation' of a type (line 395)
        allocation_224171 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 395, 29), self_224170, 'allocation')
        # Obtaining the member '__getitem__' of a type (line 395)
        getitem___224172 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 395, 16), allocation_224171, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 395)
        subscript_call_result_224173 = invoke(stypy.reporting.localization.Localization(__file__, 395, 16), getitem___224172, int_224169)
        
        # Assigning a type to the variable 'tuple_var_assignment_223299' (line 395)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 395, 16), 'tuple_var_assignment_223299', subscript_call_result_224173)
        
        # Assigning a Subscript to a Name (line 395):
        
        # Obtaining the type of the subscript
        int_224174 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 395, 16), 'int')
        # Getting the type of 'self' (line 395)
        self_224175 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 395, 29), 'self')
        # Obtaining the member 'allocation' of a type (line 395)
        allocation_224176 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 395, 29), self_224175, 'allocation')
        # Obtaining the member '__getitem__' of a type (line 395)
        getitem___224177 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 395, 16), allocation_224176, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 395)
        subscript_call_result_224178 = invoke(stypy.reporting.localization.Localization(__file__, 395, 16), getitem___224177, int_224174)
        
        # Assigning a type to the variable 'tuple_var_assignment_223300' (line 395)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 395, 16), 'tuple_var_assignment_223300', subscript_call_result_224178)
        
        # Assigning a Subscript to a Name (line 395):
        
        # Obtaining the type of the subscript
        int_224179 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 395, 16), 'int')
        # Getting the type of 'self' (line 395)
        self_224180 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 395, 29), 'self')
        # Obtaining the member 'allocation' of a type (line 395)
        allocation_224181 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 395, 29), self_224180, 'allocation')
        # Obtaining the member '__getitem__' of a type (line 395)
        getitem___224182 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 395, 16), allocation_224181, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 395)
        subscript_call_result_224183 = invoke(stypy.reporting.localization.Localization(__file__, 395, 16), getitem___224182, int_224179)
        
        # Assigning a type to the variable 'tuple_var_assignment_223301' (line 395)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 395, 16), 'tuple_var_assignment_223301', subscript_call_result_224183)
        
        # Assigning a Name to a Name (line 395):
        # Getting the type of 'tuple_var_assignment_223298' (line 395)
        tuple_var_assignment_223298_224184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 395, 16), 'tuple_var_assignment_223298')
        # Assigning a type to the variable 'x' (line 395)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 395, 16), 'x', tuple_var_assignment_223298_224184)
        
        # Assigning a Name to a Name (line 395):
        # Getting the type of 'tuple_var_assignment_223299' (line 395)
        tuple_var_assignment_223299_224185 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 395, 16), 'tuple_var_assignment_223299')
        # Assigning a type to the variable 'y' (line 395)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 395, 19), 'y', tuple_var_assignment_223299_224185)
        
        # Assigning a Name to a Name (line 395):
        # Getting the type of 'tuple_var_assignment_223300' (line 395)
        tuple_var_assignment_223300_224186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 395, 16), 'tuple_var_assignment_223300')
        # Assigning a type to the variable 'w' (line 395)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 395, 22), 'w', tuple_var_assignment_223300_224186)
        
        # Assigning a Name to a Name (line 395):
        # Getting the type of 'tuple_var_assignment_223301' (line 395)
        tuple_var_assignment_223301_224187 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 395, 16), 'tuple_var_assignment_223301')
        # Assigning a type to the variable 'h' (line 395)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 395, 25), 'h', tuple_var_assignment_223301_224187)
        
        # Call to _pixmap_prepare(...): (line 396)
        # Processing the call arguments (line 396)
        # Getting the type of 'w' (line 396)
        w_224190 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 396, 38), 'w', False)
        # Getting the type of 'h' (line 396)
        h_224191 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 396, 41), 'h', False)
        # Processing the call keyword arguments (line 396)
        kwargs_224192 = {}
        # Getting the type of 'self' (line 396)
        self_224188 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 396, 16), 'self', False)
        # Obtaining the member '_pixmap_prepare' of a type (line 396)
        _pixmap_prepare_224189 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 396, 16), self_224188, '_pixmap_prepare')
        # Calling _pixmap_prepare(args, kwargs) (line 396)
        _pixmap_prepare_call_result_224193 = invoke(stypy.reporting.localization.Localization(__file__, 396, 16), _pixmap_prepare_224189, *[w_224190, h_224191], **kwargs_224192)
        
        
        # Call to _render_figure(...): (line 397)
        # Processing the call arguments (line 397)
        # Getting the type of 'self' (line 397)
        self_224196 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 397, 36), 'self', False)
        # Obtaining the member '_pixmap' of a type (line 397)
        _pixmap_224197 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 397, 36), self_224196, '_pixmap')
        # Getting the type of 'w' (line 397)
        w_224198 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 397, 50), 'w', False)
        # Getting the type of 'h' (line 397)
        h_224199 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 397, 53), 'h', False)
        # Processing the call keyword arguments (line 397)
        kwargs_224200 = {}
        # Getting the type of 'self' (line 397)
        self_224194 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 397, 16), 'self', False)
        # Obtaining the member '_render_figure' of a type (line 397)
        _render_figure_224195 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 397, 16), self_224194, '_render_figure')
        # Calling _render_figure(args, kwargs) (line 397)
        _render_figure_call_result_224201 = invoke(stypy.reporting.localization.Localization(__file__, 397, 16), _render_figure_224195, *[_pixmap_224197, w_224198, h_224199], **kwargs_224200)
        
        
        # Assigning a Name to a Attribute (line 398):
        
        # Assigning a Name to a Attribute (line 398):
        # Getting the type of 'False' (line 398)
        False_224202 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 398, 36), 'False')
        # Getting the type of 'self' (line 398)
        self_224203 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 398, 16), 'self')
        # Setting the type of the member '_need_redraw' of a type (line 398)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 398, 16), self_224203, '_need_redraw', False_224202)
        # SSA join for if statement (line 394)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Attribute to a Tuple (line 399):
        
        # Assigning a Subscript to a Name (line 399):
        
        # Obtaining the type of the subscript
        int_224204 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 399, 12), 'int')
        # Getting the type of 'event' (line 399)
        event_224205 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 399, 25), 'event')
        # Obtaining the member 'area' of a type (line 399)
        area_224206 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 399, 25), event_224205, 'area')
        # Obtaining the member '__getitem__' of a type (line 399)
        getitem___224207 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 399, 12), area_224206, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 399)
        subscript_call_result_224208 = invoke(stypy.reporting.localization.Localization(__file__, 399, 12), getitem___224207, int_224204)
        
        # Assigning a type to the variable 'tuple_var_assignment_223302' (line 399)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 399, 12), 'tuple_var_assignment_223302', subscript_call_result_224208)
        
        # Assigning a Subscript to a Name (line 399):
        
        # Obtaining the type of the subscript
        int_224209 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 399, 12), 'int')
        # Getting the type of 'event' (line 399)
        event_224210 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 399, 25), 'event')
        # Obtaining the member 'area' of a type (line 399)
        area_224211 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 399, 25), event_224210, 'area')
        # Obtaining the member '__getitem__' of a type (line 399)
        getitem___224212 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 399, 12), area_224211, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 399)
        subscript_call_result_224213 = invoke(stypy.reporting.localization.Localization(__file__, 399, 12), getitem___224212, int_224209)
        
        # Assigning a type to the variable 'tuple_var_assignment_223303' (line 399)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 399, 12), 'tuple_var_assignment_223303', subscript_call_result_224213)
        
        # Assigning a Subscript to a Name (line 399):
        
        # Obtaining the type of the subscript
        int_224214 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 399, 12), 'int')
        # Getting the type of 'event' (line 399)
        event_224215 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 399, 25), 'event')
        # Obtaining the member 'area' of a type (line 399)
        area_224216 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 399, 25), event_224215, 'area')
        # Obtaining the member '__getitem__' of a type (line 399)
        getitem___224217 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 399, 12), area_224216, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 399)
        subscript_call_result_224218 = invoke(stypy.reporting.localization.Localization(__file__, 399, 12), getitem___224217, int_224214)
        
        # Assigning a type to the variable 'tuple_var_assignment_223304' (line 399)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 399, 12), 'tuple_var_assignment_223304', subscript_call_result_224218)
        
        # Assigning a Subscript to a Name (line 399):
        
        # Obtaining the type of the subscript
        int_224219 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 399, 12), 'int')
        # Getting the type of 'event' (line 399)
        event_224220 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 399, 25), 'event')
        # Obtaining the member 'area' of a type (line 399)
        area_224221 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 399, 25), event_224220, 'area')
        # Obtaining the member '__getitem__' of a type (line 399)
        getitem___224222 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 399, 12), area_224221, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 399)
        subscript_call_result_224223 = invoke(stypy.reporting.localization.Localization(__file__, 399, 12), getitem___224222, int_224219)
        
        # Assigning a type to the variable 'tuple_var_assignment_223305' (line 399)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 399, 12), 'tuple_var_assignment_223305', subscript_call_result_224223)
        
        # Assigning a Name to a Name (line 399):
        # Getting the type of 'tuple_var_assignment_223302' (line 399)
        tuple_var_assignment_223302_224224 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 399, 12), 'tuple_var_assignment_223302')
        # Assigning a type to the variable 'x' (line 399)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 399, 12), 'x', tuple_var_assignment_223302_224224)
        
        # Assigning a Name to a Name (line 399):
        # Getting the type of 'tuple_var_assignment_223303' (line 399)
        tuple_var_assignment_223303_224225 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 399, 12), 'tuple_var_assignment_223303')
        # Assigning a type to the variable 'y' (line 399)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 399, 15), 'y', tuple_var_assignment_223303_224225)
        
        # Assigning a Name to a Name (line 399):
        # Getting the type of 'tuple_var_assignment_223304' (line 399)
        tuple_var_assignment_223304_224226 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 399, 12), 'tuple_var_assignment_223304')
        # Assigning a type to the variable 'w' (line 399)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 399, 18), 'w', tuple_var_assignment_223304_224226)
        
        # Assigning a Name to a Name (line 399):
        # Getting the type of 'tuple_var_assignment_223305' (line 399)
        tuple_var_assignment_223305_224227 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 399, 12), 'tuple_var_assignment_223305')
        # Assigning a type to the variable 'h' (line 399)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 399, 21), 'h', tuple_var_assignment_223305_224227)
        
        # Call to draw_drawable(...): (line 400)
        # Processing the call arguments (line 400)
        
        # Obtaining the type of the subscript
        # Getting the type of 'self' (line 400)
        self_224231 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 400, 56), 'self', False)
        # Obtaining the member 'state' of a type (line 400)
        state_224232 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 400, 56), self_224231, 'state')
        # Getting the type of 'self' (line 400)
        self_224233 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 400, 39), 'self', False)
        # Obtaining the member 'style' of a type (line 400)
        style_224234 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 400, 39), self_224233, 'style')
        # Obtaining the member 'fg_gc' of a type (line 400)
        fg_gc_224235 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 400, 39), style_224234, 'fg_gc')
        # Obtaining the member '__getitem__' of a type (line 400)
        getitem___224236 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 400, 39), fg_gc_224235, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 400)
        subscript_call_result_224237 = invoke(stypy.reporting.localization.Localization(__file__, 400, 39), getitem___224236, state_224232)
        
        # Getting the type of 'self' (line 401)
        self_224238 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 401, 39), 'self', False)
        # Obtaining the member '_pixmap' of a type (line 401)
        _pixmap_224239 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 401, 39), self_224238, '_pixmap')
        # Getting the type of 'x' (line 401)
        x_224240 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 401, 53), 'x', False)
        # Getting the type of 'y' (line 401)
        y_224241 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 401, 56), 'y', False)
        # Getting the type of 'x' (line 401)
        x_224242 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 401, 59), 'x', False)
        # Getting the type of 'y' (line 401)
        y_224243 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 401, 62), 'y', False)
        # Getting the type of 'w' (line 401)
        w_224244 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 401, 65), 'w', False)
        # Getting the type of 'h' (line 401)
        h_224245 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 401, 68), 'h', False)
        # Processing the call keyword arguments (line 400)
        kwargs_224246 = {}
        # Getting the type of 'self' (line 400)
        self_224228 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 400, 12), 'self', False)
        # Obtaining the member 'window' of a type (line 400)
        window_224229 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 400, 12), self_224228, 'window')
        # Obtaining the member 'draw_drawable' of a type (line 400)
        draw_drawable_224230 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 400, 12), window_224229, 'draw_drawable')
        # Calling draw_drawable(args, kwargs) (line 400)
        draw_drawable_call_result_224247 = invoke(stypy.reporting.localization.Localization(__file__, 400, 12), draw_drawable_224230, *[subscript_call_result_224237, _pixmap_224239, x_224240, y_224241, x_224242, y_224243, w_224244, h_224245], **kwargs_224246)
        
        # SSA join for if statement (line 393)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'toolbar' (line 402)
        toolbar_224248 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 402, 11), 'toolbar')
        # Testing the type of an if condition (line 402)
        if_condition_224249 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 402, 8), toolbar_224248)
        # Assigning a type to the variable 'if_condition_224249' (line 402)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 402, 8), 'if_condition_224249', if_condition_224249)
        # SSA begins for if statement (line 402)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to set_cursor(...): (line 403)
        # Processing the call arguments (line 403)
        # Getting the type of 'toolbar' (line 403)
        toolbar_224252 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 403, 31), 'toolbar', False)
        # Obtaining the member '_lastCursor' of a type (line 403)
        _lastCursor_224253 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 403, 31), toolbar_224252, '_lastCursor')
        # Processing the call keyword arguments (line 403)
        kwargs_224254 = {}
        # Getting the type of 'toolbar' (line 403)
        toolbar_224250 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 403, 12), 'toolbar', False)
        # Obtaining the member 'set_cursor' of a type (line 403)
        set_cursor_224251 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 403, 12), toolbar_224250, 'set_cursor')
        # Calling set_cursor(args, kwargs) (line 403)
        set_cursor_call_result_224255 = invoke(stypy.reporting.localization.Localization(__file__, 403, 12), set_cursor_224251, *[_lastCursor_224253], **kwargs_224254)
        
        # SSA join for if statement (line 402)
        module_type_store = module_type_store.join_ssa_context()
        
        # Getting the type of 'False' (line 404)
        False_224256 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 404, 15), 'False')
        # Assigning a type to the variable 'stypy_return_type' (line 404)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 404, 8), 'stypy_return_type', False_224256)
        
        # ################# End of 'expose_event(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'expose_event' in the type store
        # Getting the type of 'stypy_return_type' (line 387)
        stypy_return_type_224257 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 387, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_224257)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'expose_event'
        return stypy_return_type_224257

    
    # Assigning a Call to a Name (line 406):
    
    # Assigning a Str to a Subscript (line 407):
    
    # Assigning a Str to a Subscript (line 408):
    
    # Assigning a Str to a Subscript (line 409):

    @norecursion
    def print_jpeg(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'print_jpeg'
        module_type_store = module_type_store.open_function_context('print_jpeg', 411, 4, False)
        # Assigning a type to the variable 'self' (line 412)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 412, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        FigureCanvasGTK.print_jpeg.__dict__.__setitem__('stypy_localization', localization)
        FigureCanvasGTK.print_jpeg.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        FigureCanvasGTK.print_jpeg.__dict__.__setitem__('stypy_type_store', module_type_store)
        FigureCanvasGTK.print_jpeg.__dict__.__setitem__('stypy_function_name', 'FigureCanvasGTK.print_jpeg')
        FigureCanvasGTK.print_jpeg.__dict__.__setitem__('stypy_param_names_list', ['filename'])
        FigureCanvasGTK.print_jpeg.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        FigureCanvasGTK.print_jpeg.__dict__.__setitem__('stypy_kwargs_param_name', 'kwargs')
        FigureCanvasGTK.print_jpeg.__dict__.__setitem__('stypy_call_defaults', defaults)
        FigureCanvasGTK.print_jpeg.__dict__.__setitem__('stypy_call_varargs', varargs)
        FigureCanvasGTK.print_jpeg.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        FigureCanvasGTK.print_jpeg.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FigureCanvasGTK.print_jpeg', ['filename'], 'args', 'kwargs', defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'print_jpeg', localization, ['filename'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'print_jpeg(...)' code ##################

        
        # Call to _print_image(...): (line 412)
        # Processing the call arguments (line 412)
        # Getting the type of 'filename' (line 412)
        filename_224260 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 412, 33), 'filename', False)
        unicode_224261 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 412, 43), 'unicode', u'jpeg')
        # Processing the call keyword arguments (line 412)
        kwargs_224262 = {}
        # Getting the type of 'self' (line 412)
        self_224258 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 412, 15), 'self', False)
        # Obtaining the member '_print_image' of a type (line 412)
        _print_image_224259 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 412, 15), self_224258, '_print_image')
        # Calling _print_image(args, kwargs) (line 412)
        _print_image_call_result_224263 = invoke(stypy.reporting.localization.Localization(__file__, 412, 15), _print_image_224259, *[filename_224260, unicode_224261], **kwargs_224262)
        
        # Assigning a type to the variable 'stypy_return_type' (line 412)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 412, 8), 'stypy_return_type', _print_image_call_result_224263)
        
        # ################# End of 'print_jpeg(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'print_jpeg' in the type store
        # Getting the type of 'stypy_return_type' (line 411)
        stypy_return_type_224264 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 411, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_224264)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'print_jpeg'
        return stypy_return_type_224264

    
    # Assigning a Name to a Name (line 413):

    @norecursion
    def print_png(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'print_png'
        module_type_store = module_type_store.open_function_context('print_png', 415, 4, False)
        # Assigning a type to the variable 'self' (line 416)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 416, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        FigureCanvasGTK.print_png.__dict__.__setitem__('stypy_localization', localization)
        FigureCanvasGTK.print_png.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        FigureCanvasGTK.print_png.__dict__.__setitem__('stypy_type_store', module_type_store)
        FigureCanvasGTK.print_png.__dict__.__setitem__('stypy_function_name', 'FigureCanvasGTK.print_png')
        FigureCanvasGTK.print_png.__dict__.__setitem__('stypy_param_names_list', ['filename'])
        FigureCanvasGTK.print_png.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        FigureCanvasGTK.print_png.__dict__.__setitem__('stypy_kwargs_param_name', 'kwargs')
        FigureCanvasGTK.print_png.__dict__.__setitem__('stypy_call_defaults', defaults)
        FigureCanvasGTK.print_png.__dict__.__setitem__('stypy_call_varargs', varargs)
        FigureCanvasGTK.print_png.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        FigureCanvasGTK.print_png.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FigureCanvasGTK.print_png', ['filename'], 'args', 'kwargs', defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'print_png', localization, ['filename'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'print_png(...)' code ##################

        
        # Call to _print_image(...): (line 416)
        # Processing the call arguments (line 416)
        # Getting the type of 'filename' (line 416)
        filename_224267 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 416, 33), 'filename', False)
        unicode_224268 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 416, 43), 'unicode', u'png')
        # Processing the call keyword arguments (line 416)
        kwargs_224269 = {}
        # Getting the type of 'self' (line 416)
        self_224265 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 416, 15), 'self', False)
        # Obtaining the member '_print_image' of a type (line 416)
        _print_image_224266 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 416, 15), self_224265, '_print_image')
        # Calling _print_image(args, kwargs) (line 416)
        _print_image_call_result_224270 = invoke(stypy.reporting.localization.Localization(__file__, 416, 15), _print_image_224266, *[filename_224267, unicode_224268], **kwargs_224269)
        
        # Assigning a type to the variable 'stypy_return_type' (line 416)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 416, 8), 'stypy_return_type', _print_image_call_result_224270)
        
        # ################# End of 'print_png(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'print_png' in the type store
        # Getting the type of 'stypy_return_type' (line 415)
        stypy_return_type_224271 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 415, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_224271)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'print_png'
        return stypy_return_type_224271


    @norecursion
    def _print_image(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_print_image'
        module_type_store = module_type_store.open_function_context('_print_image', 418, 4, False)
        # Assigning a type to the variable 'self' (line 419)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 419, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        FigureCanvasGTK._print_image.__dict__.__setitem__('stypy_localization', localization)
        FigureCanvasGTK._print_image.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        FigureCanvasGTK._print_image.__dict__.__setitem__('stypy_type_store', module_type_store)
        FigureCanvasGTK._print_image.__dict__.__setitem__('stypy_function_name', 'FigureCanvasGTK._print_image')
        FigureCanvasGTK._print_image.__dict__.__setitem__('stypy_param_names_list', ['filename', 'format'])
        FigureCanvasGTK._print_image.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        FigureCanvasGTK._print_image.__dict__.__setitem__('stypy_kwargs_param_name', 'kwargs')
        FigureCanvasGTK._print_image.__dict__.__setitem__('stypy_call_defaults', defaults)
        FigureCanvasGTK._print_image.__dict__.__setitem__('stypy_call_varargs', varargs)
        FigureCanvasGTK._print_image.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        FigureCanvasGTK._print_image.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FigureCanvasGTK._print_image', ['filename', 'format'], 'args', 'kwargs', defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_print_image', localization, ['filename', 'format'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_print_image(...)' code ##################

        
        
        
        # Call to flags(...): (line 419)
        # Processing the call keyword arguments (line 419)
        kwargs_224274 = {}
        # Getting the type of 'self' (line 419)
        self_224272 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 419, 11), 'self', False)
        # Obtaining the member 'flags' of a type (line 419)
        flags_224273 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 419, 11), self_224272, 'flags')
        # Calling flags(args, kwargs) (line 419)
        flags_call_result_224275 = invoke(stypy.reporting.localization.Localization(__file__, 419, 11), flags_224273, *[], **kwargs_224274)
        
        # Getting the type of 'gtk' (line 419)
        gtk_224276 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 419, 26), 'gtk')
        # Obtaining the member 'REALIZED' of a type (line 419)
        REALIZED_224277 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 419, 26), gtk_224276, 'REALIZED')
        # Applying the binary operator '&' (line 419)
        result_and__224278 = python_operator(stypy.reporting.localization.Localization(__file__, 419, 11), '&', flags_call_result_224275, REALIZED_224277)
        
        int_224279 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 419, 42), 'int')
        # Applying the binary operator '==' (line 419)
        result_eq_224280 = python_operator(stypy.reporting.localization.Localization(__file__, 419, 11), '==', result_and__224278, int_224279)
        
        # Testing the type of an if condition (line 419)
        if_condition_224281 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 419, 8), result_eq_224280)
        # Assigning a type to the variable 'if_condition_224281' (line 419)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 419, 8), 'if_condition_224281', if_condition_224281)
        # SSA begins for if statement (line 419)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to realize(...): (line 422)
        # Processing the call arguments (line 422)
        # Getting the type of 'self' (line 422)
        self_224285 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 422, 36), 'self', False)
        # Processing the call keyword arguments (line 422)
        kwargs_224286 = {}
        # Getting the type of 'gtk' (line 422)
        gtk_224282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 422, 12), 'gtk', False)
        # Obtaining the member 'DrawingArea' of a type (line 422)
        DrawingArea_224283 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 422, 12), gtk_224282, 'DrawingArea')
        # Obtaining the member 'realize' of a type (line 422)
        realize_224284 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 422, 12), DrawingArea_224283, 'realize')
        # Calling realize(args, kwargs) (line 422)
        realize_call_result_224287 = invoke(stypy.reporting.localization.Localization(__file__, 422, 12), realize_224284, *[self_224285], **kwargs_224286)
        
        # SSA join for if statement (line 419)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Tuple (line 424):
        
        # Assigning a Call to a Name:
        
        # Call to get_width_height(...): (line 424)
        # Processing the call keyword arguments (line 424)
        kwargs_224290 = {}
        # Getting the type of 'self' (line 424)
        self_224288 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 424, 24), 'self', False)
        # Obtaining the member 'get_width_height' of a type (line 424)
        get_width_height_224289 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 424, 24), self_224288, 'get_width_height')
        # Calling get_width_height(args, kwargs) (line 424)
        get_width_height_call_result_224291 = invoke(stypy.reporting.localization.Localization(__file__, 424, 24), get_width_height_224289, *[], **kwargs_224290)
        
        # Assigning a type to the variable 'call_assignment_223306' (line 424)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 424, 8), 'call_assignment_223306', get_width_height_call_result_224291)
        
        # Assigning a Call to a Name (line 424):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_224294 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 424, 8), 'int')
        # Processing the call keyword arguments
        kwargs_224295 = {}
        # Getting the type of 'call_assignment_223306' (line 424)
        call_assignment_223306_224292 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 424, 8), 'call_assignment_223306', False)
        # Obtaining the member '__getitem__' of a type (line 424)
        getitem___224293 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 424, 8), call_assignment_223306_224292, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_224296 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___224293, *[int_224294], **kwargs_224295)
        
        # Assigning a type to the variable 'call_assignment_223307' (line 424)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 424, 8), 'call_assignment_223307', getitem___call_result_224296)
        
        # Assigning a Name to a Name (line 424):
        # Getting the type of 'call_assignment_223307' (line 424)
        call_assignment_223307_224297 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 424, 8), 'call_assignment_223307')
        # Assigning a type to the variable 'width' (line 424)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 424, 8), 'width', call_assignment_223307_224297)
        
        # Assigning a Call to a Name (line 424):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_224300 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 424, 8), 'int')
        # Processing the call keyword arguments
        kwargs_224301 = {}
        # Getting the type of 'call_assignment_223306' (line 424)
        call_assignment_223306_224298 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 424, 8), 'call_assignment_223306', False)
        # Obtaining the member '__getitem__' of a type (line 424)
        getitem___224299 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 424, 8), call_assignment_223306_224298, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_224302 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___224299, *[int_224300], **kwargs_224301)
        
        # Assigning a type to the variable 'call_assignment_223308' (line 424)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 424, 8), 'call_assignment_223308', getitem___call_result_224302)
        
        # Assigning a Name to a Name (line 424):
        # Getting the type of 'call_assignment_223308' (line 424)
        call_assignment_223308_224303 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 424, 8), 'call_assignment_223308')
        # Assigning a type to the variable 'height' (line 424)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 424, 15), 'height', call_assignment_223308_224303)
        
        # Assigning a Call to a Name (line 425):
        
        # Assigning a Call to a Name (line 425):
        
        # Call to Pixmap(...): (line 425)
        # Processing the call arguments (line 425)
        # Getting the type of 'self' (line 425)
        self_224306 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 425, 29), 'self', False)
        # Obtaining the member 'window' of a type (line 425)
        window_224307 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 425, 29), self_224306, 'window')
        # Getting the type of 'width' (line 425)
        width_224308 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 425, 42), 'width', False)
        # Getting the type of 'height' (line 425)
        height_224309 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 425, 49), 'height', False)
        # Processing the call keyword arguments (line 425)
        kwargs_224310 = {}
        # Getting the type of 'gdk' (line 425)
        gdk_224304 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 425, 17), 'gdk', False)
        # Obtaining the member 'Pixmap' of a type (line 425)
        Pixmap_224305 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 425, 17), gdk_224304, 'Pixmap')
        # Calling Pixmap(args, kwargs) (line 425)
        Pixmap_call_result_224311 = invoke(stypy.reporting.localization.Localization(__file__, 425, 17), Pixmap_224305, *[window_224307, width_224308, height_224309], **kwargs_224310)
        
        # Assigning a type to the variable 'pixmap' (line 425)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 425, 8), 'pixmap', Pixmap_call_result_224311)
        
        # Call to set_pixmap(...): (line 426)
        # Processing the call arguments (line 426)
        # Getting the type of 'pixmap' (line 426)
        pixmap_224315 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 426, 35), 'pixmap', False)
        # Processing the call keyword arguments (line 426)
        kwargs_224316 = {}
        # Getting the type of 'self' (line 426)
        self_224312 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 426, 8), 'self', False)
        # Obtaining the member '_renderer' of a type (line 426)
        _renderer_224313 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 426, 8), self_224312, '_renderer')
        # Obtaining the member 'set_pixmap' of a type (line 426)
        set_pixmap_224314 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 426, 8), _renderer_224313, 'set_pixmap')
        # Calling set_pixmap(args, kwargs) (line 426)
        set_pixmap_call_result_224317 = invoke(stypy.reporting.localization.Localization(__file__, 426, 8), set_pixmap_224314, *[pixmap_224315], **kwargs_224316)
        
        
        # Call to _render_figure(...): (line 427)
        # Processing the call arguments (line 427)
        # Getting the type of 'pixmap' (line 427)
        pixmap_224320 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 427, 28), 'pixmap', False)
        # Getting the type of 'width' (line 427)
        width_224321 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 427, 36), 'width', False)
        # Getting the type of 'height' (line 427)
        height_224322 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 427, 43), 'height', False)
        # Processing the call keyword arguments (line 427)
        kwargs_224323 = {}
        # Getting the type of 'self' (line 427)
        self_224318 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 427, 8), 'self', False)
        # Obtaining the member '_render_figure' of a type (line 427)
        _render_figure_224319 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 427, 8), self_224318, '_render_figure')
        # Calling _render_figure(args, kwargs) (line 427)
        _render_figure_call_result_224324 = invoke(stypy.reporting.localization.Localization(__file__, 427, 8), _render_figure_224319, *[pixmap_224320, width_224321, height_224322], **kwargs_224323)
        
        
        # Assigning a Call to a Name (line 431):
        
        # Assigning a Call to a Name (line 431):
        
        # Call to Pixbuf(...): (line 431)
        # Processing the call arguments (line 431)
        # Getting the type of 'gdk' (line 431)
        gdk_224327 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 431, 28), 'gdk', False)
        # Obtaining the member 'COLORSPACE_RGB' of a type (line 431)
        COLORSPACE_RGB_224328 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 431, 28), gdk_224327, 'COLORSPACE_RGB')
        int_224329 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 431, 48), 'int')
        int_224330 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 431, 51), 'int')
        # Getting the type of 'width' (line 431)
        width_224331 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 431, 54), 'width', False)
        # Getting the type of 'height' (line 431)
        height_224332 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 431, 61), 'height', False)
        # Processing the call keyword arguments (line 431)
        kwargs_224333 = {}
        # Getting the type of 'gdk' (line 431)
        gdk_224325 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 431, 17), 'gdk', False)
        # Obtaining the member 'Pixbuf' of a type (line 431)
        Pixbuf_224326 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 431, 17), gdk_224325, 'Pixbuf')
        # Calling Pixbuf(args, kwargs) (line 431)
        Pixbuf_call_result_224334 = invoke(stypy.reporting.localization.Localization(__file__, 431, 17), Pixbuf_224326, *[COLORSPACE_RGB_224328, int_224329, int_224330, width_224331, height_224332], **kwargs_224333)
        
        # Assigning a type to the variable 'pixbuf' (line 431)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 431, 8), 'pixbuf', Pixbuf_call_result_224334)
        
        # Call to get_from_drawable(...): (line 432)
        # Processing the call arguments (line 432)
        # Getting the type of 'pixmap' (line 432)
        pixmap_224337 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 432, 33), 'pixmap', False)
        
        # Call to get_colormap(...): (line 432)
        # Processing the call keyword arguments (line 432)
        kwargs_224340 = {}
        # Getting the type of 'pixmap' (line 432)
        pixmap_224338 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 432, 41), 'pixmap', False)
        # Obtaining the member 'get_colormap' of a type (line 432)
        get_colormap_224339 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 432, 41), pixmap_224338, 'get_colormap')
        # Calling get_colormap(args, kwargs) (line 432)
        get_colormap_call_result_224341 = invoke(stypy.reporting.localization.Localization(__file__, 432, 41), get_colormap_224339, *[], **kwargs_224340)
        
        int_224342 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 433, 37), 'int')
        int_224343 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 433, 40), 'int')
        int_224344 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 433, 43), 'int')
        int_224345 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 433, 46), 'int')
        # Getting the type of 'width' (line 433)
        width_224346 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 433, 49), 'width', False)
        # Getting the type of 'height' (line 433)
        height_224347 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 433, 56), 'height', False)
        # Processing the call keyword arguments (line 432)
        kwargs_224348 = {}
        # Getting the type of 'pixbuf' (line 432)
        pixbuf_224335 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 432, 8), 'pixbuf', False)
        # Obtaining the member 'get_from_drawable' of a type (line 432)
        get_from_drawable_224336 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 432, 8), pixbuf_224335, 'get_from_drawable')
        # Calling get_from_drawable(args, kwargs) (line 432)
        get_from_drawable_call_result_224349 = invoke(stypy.reporting.localization.Localization(__file__, 432, 8), get_from_drawable_224336, *[pixmap_224337, get_colormap_call_result_224341, int_224342, int_224343, int_224344, int_224345, width_224346, height_224347], **kwargs_224348)
        
        
        # Assigning a DictComp to a Name (line 437):
        
        # Assigning a DictComp to a Name (line 437):
        # Calculating dict comprehension
        module_type_store = module_type_store.open_function_context('dict comprehension expression', 437, 19, True)
        # Calculating comprehension expression
        
        # Obtaining an instance of the builtin type 'list' (line 437)
        list_224358 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 437, 41), 'list')
        # Adding type elements to the builtin type 'list' instance (line 437)
        # Adding element type (line 437)
        unicode_224359 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 437, 42), 'unicode', u'quality')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 437, 41), list_224358, unicode_224359)
        
        comprehension_224360 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 437, 19), list_224358)
        # Assigning a type to the variable 'k' (line 437)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 437, 19), 'k', comprehension_224360)
        
        # Getting the type of 'k' (line 437)
        k_224355 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 437, 56), 'k')
        # Getting the type of 'kwargs' (line 437)
        kwargs_224356 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 437, 61), 'kwargs')
        # Applying the binary operator 'in' (line 437)
        result_contains_224357 = python_operator(stypy.reporting.localization.Localization(__file__, 437, 56), 'in', k_224355, kwargs_224356)
        
        # Getting the type of 'k' (line 437)
        k_224350 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 437, 19), 'k')
        
        # Obtaining the type of the subscript
        # Getting the type of 'k' (line 437)
        k_224351 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 437, 29), 'k')
        # Getting the type of 'kwargs' (line 437)
        kwargs_224352 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 437, 22), 'kwargs')
        # Obtaining the member '__getitem__' of a type (line 437)
        getitem___224353 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 437, 22), kwargs_224352, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 437)
        subscript_call_result_224354 = invoke(stypy.reporting.localization.Localization(__file__, 437, 22), getitem___224353, k_224351)
        
        dict_224361 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 437, 19), 'dict')
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 437, 19), dict_224361, (k_224350, subscript_call_result_224354))
        # Assigning a type to the variable 'options' (line 437)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 437, 8), 'options', dict_224361)
        
        
        # Getting the type of 'format' (line 438)
        format_224362 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 438, 11), 'format')
        
        # Obtaining an instance of the builtin type 'list' (line 438)
        list_224363 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 438, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 438)
        # Adding element type (line 438)
        unicode_224364 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 438, 22), 'unicode', u'jpg')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 438, 21), list_224363, unicode_224364)
        # Adding element type (line 438)
        unicode_224365 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 438, 29), 'unicode', u'jpeg')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 438, 21), list_224363, unicode_224365)
        
        # Applying the binary operator 'in' (line 438)
        result_contains_224366 = python_operator(stypy.reporting.localization.Localization(__file__, 438, 11), 'in', format_224362, list_224363)
        
        # Testing the type of an if condition (line 438)
        if_condition_224367 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 438, 8), result_contains_224366)
        # Assigning a type to the variable 'if_condition_224367' (line 438)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 438, 8), 'if_condition_224367', if_condition_224367)
        # SSA begins for if statement (line 438)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to setdefault(...): (line 439)
        # Processing the call arguments (line 439)
        unicode_224370 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 439, 31), 'unicode', u'quality')
        
        # Obtaining the type of the subscript
        unicode_224371 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 439, 51), 'unicode', u'savefig.jpeg_quality')
        # Getting the type of 'rcParams' (line 439)
        rcParams_224372 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 439, 42), 'rcParams', False)
        # Obtaining the member '__getitem__' of a type (line 439)
        getitem___224373 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 439, 42), rcParams_224372, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 439)
        subscript_call_result_224374 = invoke(stypy.reporting.localization.Localization(__file__, 439, 42), getitem___224373, unicode_224371)
        
        # Processing the call keyword arguments (line 439)
        kwargs_224375 = {}
        # Getting the type of 'options' (line 439)
        options_224368 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 439, 12), 'options', False)
        # Obtaining the member 'setdefault' of a type (line 439)
        setdefault_224369 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 439, 12), options_224368, 'setdefault')
        # Calling setdefault(args, kwargs) (line 439)
        setdefault_call_result_224376 = invoke(stypy.reporting.localization.Localization(__file__, 439, 12), setdefault_224369, *[unicode_224370, subscript_call_result_224374], **kwargs_224375)
        
        
        # Assigning a Call to a Subscript (line 440):
        
        # Assigning a Call to a Subscript (line 440):
        
        # Call to str(...): (line 440)
        # Processing the call arguments (line 440)
        
        # Obtaining the type of the subscript
        unicode_224378 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 440, 45), 'unicode', u'quality')
        # Getting the type of 'options' (line 440)
        options_224379 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 440, 37), 'options', False)
        # Obtaining the member '__getitem__' of a type (line 440)
        getitem___224380 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 440, 37), options_224379, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 440)
        subscript_call_result_224381 = invoke(stypy.reporting.localization.Localization(__file__, 440, 37), getitem___224380, unicode_224378)
        
        # Processing the call keyword arguments (line 440)
        kwargs_224382 = {}
        # Getting the type of 'str' (line 440)
        str_224377 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 440, 33), 'str', False)
        # Calling str(args, kwargs) (line 440)
        str_call_result_224383 = invoke(stypy.reporting.localization.Localization(__file__, 440, 33), str_224377, *[subscript_call_result_224381], **kwargs_224382)
        
        # Getting the type of 'options' (line 440)
        options_224384 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 440, 12), 'options')
        unicode_224385 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 440, 20), 'unicode', u'quality')
        # Storing an element on a container (line 440)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 440, 12), options_224384, (unicode_224385, str_call_result_224383))
        # SSA join for if statement (line 438)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Call to isinstance(...): (line 442)
        # Processing the call arguments (line 442)
        # Getting the type of 'filename' (line 442)
        filename_224387 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 442, 22), 'filename', False)
        # Getting the type of 'six' (line 442)
        six_224388 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 442, 32), 'six', False)
        # Obtaining the member 'string_types' of a type (line 442)
        string_types_224389 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 442, 32), six_224388, 'string_types')
        # Processing the call keyword arguments (line 442)
        kwargs_224390 = {}
        # Getting the type of 'isinstance' (line 442)
        isinstance_224386 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 442, 11), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 442)
        isinstance_call_result_224391 = invoke(stypy.reporting.localization.Localization(__file__, 442, 11), isinstance_224386, *[filename_224387, string_types_224389], **kwargs_224390)
        
        # Testing the type of an if condition (line 442)
        if_condition_224392 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 442, 8), isinstance_call_result_224391)
        # Assigning a type to the variable 'if_condition_224392' (line 442)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 442, 8), 'if_condition_224392', if_condition_224392)
        # SSA begins for if statement (line 442)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        
        # SSA begins for try-except statement (line 443)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
        
        # Call to save(...): (line 444)
        # Processing the call arguments (line 444)
        # Getting the type of 'filename' (line 444)
        filename_224395 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 444, 28), 'filename', False)
        # Getting the type of 'format' (line 444)
        format_224396 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 444, 38), 'format', False)
        # Processing the call keyword arguments (line 444)
        # Getting the type of 'options' (line 444)
        options_224397 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 444, 54), 'options', False)
        keyword_224398 = options_224397
        kwargs_224399 = {'options': keyword_224398}
        # Getting the type of 'pixbuf' (line 444)
        pixbuf_224393 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 444, 16), 'pixbuf', False)
        # Obtaining the member 'save' of a type (line 444)
        save_224394 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 444, 16), pixbuf_224393, 'save')
        # Calling save(args, kwargs) (line 444)
        save_call_result_224400 = invoke(stypy.reporting.localization.Localization(__file__, 444, 16), save_224394, *[filename_224395, format_224396], **kwargs_224399)
        
        # SSA branch for the except part of a try statement (line 443)
        # SSA branch for the except 'Attribute' branch of a try statement (line 443)
        # Storing handler type
        module_type_store.open_ssa_branch('except')
        # Getting the type of 'gobject' (line 445)
        gobject_224401 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 445, 19), 'gobject')
        # Obtaining the member 'GError' of a type (line 445)
        GError_224402 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 445, 19), gobject_224401, 'GError')
        # Assigning a type to the variable 'exc' (line 445)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 445, 12), 'exc', GError_224402)
        
        # Call to error_msg_gtk(...): (line 446)
        # Processing the call arguments (line 446)
        unicode_224404 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 446, 30), 'unicode', u'Save figure failure:\n%s')
        
        # Obtaining an instance of the builtin type 'tuple' (line 446)
        tuple_224405 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 446, 60), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 446)
        # Adding element type (line 446)
        # Getting the type of 'exc' (line 446)
        exc_224406 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 446, 60), 'exc', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 446, 60), tuple_224405, exc_224406)
        
        # Applying the binary operator '%' (line 446)
        result_mod_224407 = python_operator(stypy.reporting.localization.Localization(__file__, 446, 30), '%', unicode_224404, tuple_224405)
        
        # Processing the call keyword arguments (line 446)
        # Getting the type of 'self' (line 446)
        self_224408 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 446, 74), 'self', False)
        keyword_224409 = self_224408
        kwargs_224410 = {'parent': keyword_224409}
        # Getting the type of 'error_msg_gtk' (line 446)
        error_msg_gtk_224403 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 446, 16), 'error_msg_gtk', False)
        # Calling error_msg_gtk(args, kwargs) (line 446)
        error_msg_gtk_call_result_224411 = invoke(stypy.reporting.localization.Localization(__file__, 446, 16), error_msg_gtk_224403, *[result_mod_224407], **kwargs_224410)
        
        # SSA join for try-except statement (line 443)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA branch for the else part of an if statement (line 442)
        module_type_store.open_ssa_branch('else')
        
        
        # Call to is_writable_file_like(...): (line 447)
        # Processing the call arguments (line 447)
        # Getting the type of 'filename' (line 447)
        filename_224413 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 447, 35), 'filename', False)
        # Processing the call keyword arguments (line 447)
        kwargs_224414 = {}
        # Getting the type of 'is_writable_file_like' (line 447)
        is_writable_file_like_224412 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 447, 13), 'is_writable_file_like', False)
        # Calling is_writable_file_like(args, kwargs) (line 447)
        is_writable_file_like_call_result_224415 = invoke(stypy.reporting.localization.Localization(__file__, 447, 13), is_writable_file_like_224412, *[filename_224413], **kwargs_224414)
        
        # Testing the type of an if condition (line 447)
        if_condition_224416 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 447, 13), is_writable_file_like_call_result_224415)
        # Assigning a type to the variable 'if_condition_224416' (line 447)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 447, 13), 'if_condition_224416', if_condition_224416)
        # SSA begins for if statement (line 447)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Type idiom detected: calculating its left and rigth part (line 448)
        unicode_224417 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 448, 31), 'unicode', u'save_to_callback')
        # Getting the type of 'pixbuf' (line 448)
        pixbuf_224418 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 23), 'pixbuf')
        
        (may_be_224419, more_types_in_union_224420) = may_provide_member(unicode_224417, pixbuf_224418)

        if may_be_224419:

            if more_types_in_union_224420:
                # Runtime conditional SSA (line 448)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            # Assigning a type to the variable 'pixbuf' (line 448)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 448, 12), 'pixbuf', remove_not_member_provider_from_union(pixbuf_224418, u'save_to_callback'))

            @norecursion
            def save_callback(localization, *varargs, **kwargs):
                global module_type_store
                # Assign values to the parameters with defaults
                # Getting the type of 'None' (line 449)
                None_224421 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 449, 44), 'None')
                defaults = [None_224421]
                # Create a new context for function 'save_callback'
                module_type_store = module_type_store.open_function_context('save_callback', 449, 16, False)
                
                # Passed parameters checking function
                save_callback.stypy_localization = localization
                save_callback.stypy_type_of_self = None
                save_callback.stypy_type_store = module_type_store
                save_callback.stypy_function_name = 'save_callback'
                save_callback.stypy_param_names_list = ['buf', 'data']
                save_callback.stypy_varargs_param_name = None
                save_callback.stypy_kwargs_param_name = None
                save_callback.stypy_call_defaults = defaults
                save_callback.stypy_call_varargs = varargs
                save_callback.stypy_call_kwargs = kwargs
                arguments = process_argument_values(localization, None, module_type_store, 'save_callback', ['buf', 'data'], None, None, defaults, varargs, kwargs)

                if is_error_type(arguments):
                    # Destroy the current context
                    module_type_store = module_type_store.close_function_context()
                    return arguments

                # Initialize method data
                init_call_information(module_type_store, 'save_callback', localization, ['buf', 'data'], arguments)
                
                # Default return type storage variable (SSA)
                # Assigning a type to the variable 'stypy_return_type'
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
                
                
                # ################# Begin of 'save_callback(...)' code ##################

                
                # Call to write(...): (line 450)
                # Processing the call arguments (line 450)
                # Getting the type of 'buf' (line 450)
                buf_224424 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 450, 31), 'buf', False)
                # Processing the call keyword arguments (line 450)
                kwargs_224425 = {}
                # Getting the type of 'data' (line 450)
                data_224422 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 450, 20), 'data', False)
                # Obtaining the member 'write' of a type (line 450)
                write_224423 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 450, 20), data_224422, 'write')
                # Calling write(args, kwargs) (line 450)
                write_call_result_224426 = invoke(stypy.reporting.localization.Localization(__file__, 450, 20), write_224423, *[buf_224424], **kwargs_224425)
                
                
                # ################# End of 'save_callback(...)' code ##################

                # Teardown call information
                teardown_call_information(localization, arguments)
                
                # Storing the return type of function 'save_callback' in the type store
                # Getting the type of 'stypy_return_type' (line 449)
                stypy_return_type_224427 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 449, 16), 'stypy_return_type')
                module_type_store.store_return_type_of_current_context(stypy_return_type_224427)
                
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                
                # Return type of the function 'save_callback'
                return stypy_return_type_224427

            # Assigning a type to the variable 'save_callback' (line 449)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 449, 16), 'save_callback', save_callback)
            
            
            # SSA begins for try-except statement (line 451)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
            
            # Call to save_to_callback(...): (line 452)
            # Processing the call arguments (line 452)
            # Getting the type of 'save_callback' (line 452)
            save_callback_224430 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 452, 44), 'save_callback', False)
            # Getting the type of 'format' (line 452)
            format_224431 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 452, 59), 'format', False)
            # Processing the call keyword arguments (line 452)
            # Getting the type of 'filename' (line 452)
            filename_224432 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 452, 77), 'filename', False)
            keyword_224433 = filename_224432
            # Getting the type of 'options' (line 452)
            options_224434 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 452, 95), 'options', False)
            keyword_224435 = options_224434
            kwargs_224436 = {'user_data': keyword_224433, 'options': keyword_224435}
            # Getting the type of 'pixbuf' (line 452)
            pixbuf_224428 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 452, 20), 'pixbuf', False)
            # Obtaining the member 'save_to_callback' of a type (line 452)
            save_to_callback_224429 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 452, 20), pixbuf_224428, 'save_to_callback')
            # Calling save_to_callback(args, kwargs) (line 452)
            save_to_callback_call_result_224437 = invoke(stypy.reporting.localization.Localization(__file__, 452, 20), save_to_callback_224429, *[save_callback_224430, format_224431], **kwargs_224436)
            
            # SSA branch for the except part of a try statement (line 451)
            # SSA branch for the except 'Attribute' branch of a try statement (line 451)
            # Storing handler type
            module_type_store.open_ssa_branch('except')
            # Getting the type of 'gobject' (line 453)
            gobject_224438 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 453, 23), 'gobject')
            # Obtaining the member 'GError' of a type (line 453)
            GError_224439 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 453, 23), gobject_224438, 'GError')
            # Assigning a type to the variable 'exc' (line 453)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 453, 16), 'exc', GError_224439)
            
            # Call to error_msg_gtk(...): (line 454)
            # Processing the call arguments (line 454)
            unicode_224441 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 454, 34), 'unicode', u'Save figure failure:\n%s')
            
            # Obtaining an instance of the builtin type 'tuple' (line 454)
            tuple_224442 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 454, 64), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 454)
            # Adding element type (line 454)
            # Getting the type of 'exc' (line 454)
            exc_224443 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 454, 64), 'exc', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 454, 64), tuple_224442, exc_224443)
            
            # Applying the binary operator '%' (line 454)
            result_mod_224444 = python_operator(stypy.reporting.localization.Localization(__file__, 454, 34), '%', unicode_224441, tuple_224442)
            
            # Processing the call keyword arguments (line 454)
            # Getting the type of 'self' (line 454)
            self_224445 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 454, 78), 'self', False)
            keyword_224446 = self_224445
            kwargs_224447 = {'parent': keyword_224446}
            # Getting the type of 'error_msg_gtk' (line 454)
            error_msg_gtk_224440 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 454, 20), 'error_msg_gtk', False)
            # Calling error_msg_gtk(args, kwargs) (line 454)
            error_msg_gtk_call_result_224448 = invoke(stypy.reporting.localization.Localization(__file__, 454, 20), error_msg_gtk_224440, *[result_mod_224444], **kwargs_224447)
            
            # SSA join for try-except statement (line 451)
            module_type_store = module_type_store.join_ssa_context()
            

            if more_types_in_union_224420:
                # Runtime conditional SSA for else branch (line 448)
                module_type_store.open_ssa_branch('idiom else')



        if ((not may_be_224419) or more_types_in_union_224420):
            # Assigning a type to the variable 'pixbuf' (line 448)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 448, 12), 'pixbuf', remove_member_provider_from_union(pixbuf_224418, u'save_to_callback'))
            
            # Call to ValueError(...): (line 456)
            # Processing the call arguments (line 456)
            unicode_224450 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 456, 33), 'unicode', u'Saving to a Python file-like object is only supported by PyGTK >= 2.8')
            # Processing the call keyword arguments (line 456)
            kwargs_224451 = {}
            # Getting the type of 'ValueError' (line 456)
            ValueError_224449 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 456, 22), 'ValueError', False)
            # Calling ValueError(args, kwargs) (line 456)
            ValueError_call_result_224452 = invoke(stypy.reporting.localization.Localization(__file__, 456, 22), ValueError_224449, *[unicode_224450], **kwargs_224451)
            
            ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 456, 16), ValueError_call_result_224452, 'raise parameter', BaseException)

            if (may_be_224419 and more_types_in_union_224420):
                # SSA join for if statement (line 448)
                module_type_store = module_type_store.join_ssa_context()


        
        # SSA branch for the else part of an if statement (line 447)
        module_type_store.open_ssa_branch('else')
        
        # Call to ValueError(...): (line 458)
        # Processing the call arguments (line 458)
        unicode_224454 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 458, 29), 'unicode', u'filename must be a path or a file-like object')
        # Processing the call keyword arguments (line 458)
        kwargs_224455 = {}
        # Getting the type of 'ValueError' (line 458)
        ValueError_224453 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 458, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 458)
        ValueError_call_result_224456 = invoke(stypy.reporting.localization.Localization(__file__, 458, 18), ValueError_224453, *[unicode_224454], **kwargs_224455)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 458, 12), ValueError_call_result_224456, 'raise parameter', BaseException)
        # SSA join for if statement (line 447)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 442)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of '_print_image(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_print_image' in the type store
        # Getting the type of 'stypy_return_type' (line 418)
        stypy_return_type_224457 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 418, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_224457)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_print_image'
        return stypy_return_type_224457


    @norecursion
    def new_timer(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'new_timer'
        module_type_store = module_type_store.open_function_context('new_timer', 460, 4, False)
        # Assigning a type to the variable 'self' (line 461)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 461, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        FigureCanvasGTK.new_timer.__dict__.__setitem__('stypy_localization', localization)
        FigureCanvasGTK.new_timer.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        FigureCanvasGTK.new_timer.__dict__.__setitem__('stypy_type_store', module_type_store)
        FigureCanvasGTK.new_timer.__dict__.__setitem__('stypy_function_name', 'FigureCanvasGTK.new_timer')
        FigureCanvasGTK.new_timer.__dict__.__setitem__('stypy_param_names_list', [])
        FigureCanvasGTK.new_timer.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        FigureCanvasGTK.new_timer.__dict__.__setitem__('stypy_kwargs_param_name', 'kwargs')
        FigureCanvasGTK.new_timer.__dict__.__setitem__('stypy_call_defaults', defaults)
        FigureCanvasGTK.new_timer.__dict__.__setitem__('stypy_call_varargs', varargs)
        FigureCanvasGTK.new_timer.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        FigureCanvasGTK.new_timer.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FigureCanvasGTK.new_timer', [], 'args', 'kwargs', defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'new_timer', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'new_timer(...)' code ##################

        unicode_224458 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 473, (-1)), 'unicode', u"\n        Creates a new backend-specific subclass of :class:`backend_bases.Timer`.\n        This is useful for getting periodic events through the backend's native\n        event loop. Implemented only for backends with GUIs.\n\n        Other Parameters\n        ----------------\n        interval : scalar\n            Timer interval in milliseconds\n        callbacks : list\n            Sequence of (func, args, kwargs) where ``func(*args, **kwargs)``\n            will be executed by the timer every *interval*.\n        ")
        
        # Call to TimerGTK(...): (line 474)
        # Getting the type of 'args' (line 474)
        args_224460 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 474, 25), 'args', False)
        # Processing the call keyword arguments (line 474)
        # Getting the type of 'kwargs' (line 474)
        kwargs_224461 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 474, 33), 'kwargs', False)
        kwargs_224462 = {'kwargs_224461': kwargs_224461}
        # Getting the type of 'TimerGTK' (line 474)
        TimerGTK_224459 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 474, 15), 'TimerGTK', False)
        # Calling TimerGTK(args, kwargs) (line 474)
        TimerGTK_call_result_224463 = invoke(stypy.reporting.localization.Localization(__file__, 474, 15), TimerGTK_224459, *[args_224460], **kwargs_224462)
        
        # Assigning a type to the variable 'stypy_return_type' (line 474)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 474, 8), 'stypy_return_type', TimerGTK_call_result_224463)
        
        # ################# End of 'new_timer(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'new_timer' in the type store
        # Getting the type of 'stypy_return_type' (line 460)
        stypy_return_type_224464 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 460, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_224464)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'new_timer'
        return stypy_return_type_224464


    @norecursion
    def flush_events(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'flush_events'
        module_type_store = module_type_store.open_function_context('flush_events', 476, 4, False)
        # Assigning a type to the variable 'self' (line 477)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 477, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        FigureCanvasGTK.flush_events.__dict__.__setitem__('stypy_localization', localization)
        FigureCanvasGTK.flush_events.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        FigureCanvasGTK.flush_events.__dict__.__setitem__('stypy_type_store', module_type_store)
        FigureCanvasGTK.flush_events.__dict__.__setitem__('stypy_function_name', 'FigureCanvasGTK.flush_events')
        FigureCanvasGTK.flush_events.__dict__.__setitem__('stypy_param_names_list', [])
        FigureCanvasGTK.flush_events.__dict__.__setitem__('stypy_varargs_param_name', None)
        FigureCanvasGTK.flush_events.__dict__.__setitem__('stypy_kwargs_param_name', None)
        FigureCanvasGTK.flush_events.__dict__.__setitem__('stypy_call_defaults', defaults)
        FigureCanvasGTK.flush_events.__dict__.__setitem__('stypy_call_varargs', varargs)
        FigureCanvasGTK.flush_events.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        FigureCanvasGTK.flush_events.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FigureCanvasGTK.flush_events', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'flush_events', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'flush_events(...)' code ##################

        
        # Call to threads_enter(...): (line 477)
        # Processing the call keyword arguments (line 477)
        kwargs_224468 = {}
        # Getting the type of 'gtk' (line 477)
        gtk_224465 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 477, 8), 'gtk', False)
        # Obtaining the member 'gdk' of a type (line 477)
        gdk_224466 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 477, 8), gtk_224465, 'gdk')
        # Obtaining the member 'threads_enter' of a type (line 477)
        threads_enter_224467 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 477, 8), gdk_224466, 'threads_enter')
        # Calling threads_enter(args, kwargs) (line 477)
        threads_enter_call_result_224469 = invoke(stypy.reporting.localization.Localization(__file__, 477, 8), threads_enter_224467, *[], **kwargs_224468)
        
        
        
        # Call to events_pending(...): (line 478)
        # Processing the call keyword arguments (line 478)
        kwargs_224472 = {}
        # Getting the type of 'gtk' (line 478)
        gtk_224470 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 478, 14), 'gtk', False)
        # Obtaining the member 'events_pending' of a type (line 478)
        events_pending_224471 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 478, 14), gtk_224470, 'events_pending')
        # Calling events_pending(args, kwargs) (line 478)
        events_pending_call_result_224473 = invoke(stypy.reporting.localization.Localization(__file__, 478, 14), events_pending_224471, *[], **kwargs_224472)
        
        # Testing the type of an if condition (line 478)
        is_suitable_condition(stypy.reporting.localization.Localization(__file__, 478, 8), events_pending_call_result_224473)
        # SSA begins for while statement (line 478)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'while loop')
        
        # Call to main_iteration(...): (line 479)
        # Processing the call arguments (line 479)
        # Getting the type of 'True' (line 479)
        True_224476 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 479, 31), 'True', False)
        # Processing the call keyword arguments (line 479)
        kwargs_224477 = {}
        # Getting the type of 'gtk' (line 479)
        gtk_224474 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 479, 12), 'gtk', False)
        # Obtaining the member 'main_iteration' of a type (line 479)
        main_iteration_224475 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 479, 12), gtk_224474, 'main_iteration')
        # Calling main_iteration(args, kwargs) (line 479)
        main_iteration_call_result_224478 = invoke(stypy.reporting.localization.Localization(__file__, 479, 12), main_iteration_224475, *[True_224476], **kwargs_224477)
        
        # SSA join for while statement (line 478)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to flush(...): (line 480)
        # Processing the call keyword arguments (line 480)
        kwargs_224482 = {}
        # Getting the type of 'gtk' (line 480)
        gtk_224479 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 480, 8), 'gtk', False)
        # Obtaining the member 'gdk' of a type (line 480)
        gdk_224480 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 480, 8), gtk_224479, 'gdk')
        # Obtaining the member 'flush' of a type (line 480)
        flush_224481 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 480, 8), gdk_224480, 'flush')
        # Calling flush(args, kwargs) (line 480)
        flush_call_result_224483 = invoke(stypy.reporting.localization.Localization(__file__, 480, 8), flush_224481, *[], **kwargs_224482)
        
        
        # Call to threads_leave(...): (line 481)
        # Processing the call keyword arguments (line 481)
        kwargs_224487 = {}
        # Getting the type of 'gtk' (line 481)
        gtk_224484 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 481, 8), 'gtk', False)
        # Obtaining the member 'gdk' of a type (line 481)
        gdk_224485 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 481, 8), gtk_224484, 'gdk')
        # Obtaining the member 'threads_leave' of a type (line 481)
        threads_leave_224486 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 481, 8), gdk_224485, 'threads_leave')
        # Calling threads_leave(args, kwargs) (line 481)
        threads_leave_call_result_224488 = invoke(stypy.reporting.localization.Localization(__file__, 481, 8), threads_leave_224486, *[], **kwargs_224487)
        
        
        # ################# End of 'flush_events(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'flush_events' in the type store
        # Getting the type of 'stypy_return_type' (line 476)
        stypy_return_type_224489 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 476, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_224489)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'flush_events'
        return stypy_return_type_224489


# Assigning a type to the variable 'FigureCanvasGTK' (line 112)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 112, 0), 'FigureCanvasGTK', FigureCanvasGTK)

# Assigning a Dict to a Name (line 113):

# Obtaining an instance of the builtin type 'dict' (line 113)
dict_224490 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 113, 14), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 113)
# Adding element type (key, value) (line 113)
int_224491 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 113, 15), 'int')
unicode_224492 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 113, 23), 'unicode', u'control')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 113, 14), dict_224490, (int_224491, unicode_224492))
# Adding element type (key, value) (line 113)
int_224493 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 114, 15), 'int')
unicode_224494 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 114, 23), 'unicode', u'shift')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 113, 14), dict_224490, (int_224493, unicode_224494))
# Adding element type (key, value) (line 113)
int_224495 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 115, 15), 'int')
unicode_224496 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 115, 23), 'unicode', u'alt')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 113, 14), dict_224490, (int_224495, unicode_224496))
# Adding element type (key, value) (line 113)
int_224497 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 116, 15), 'int')
unicode_224498 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 116, 23), 'unicode', u'control')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 113, 14), dict_224490, (int_224497, unicode_224498))
# Adding element type (key, value) (line 113)
int_224499 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 117, 15), 'int')
unicode_224500 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 117, 23), 'unicode', u'shift')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 113, 14), dict_224490, (int_224499, unicode_224500))
# Adding element type (key, value) (line 113)
int_224501 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 118, 15), 'int')
unicode_224502 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 118, 23), 'unicode', u'alt')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 113, 14), dict_224490, (int_224501, unicode_224502))
# Adding element type (key, value) (line 113)
int_224503 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 119, 15), 'int')
unicode_224504 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 119, 23), 'unicode', u'left')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 113, 14), dict_224490, (int_224503, unicode_224504))
# Adding element type (key, value) (line 113)
int_224505 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 120, 15), 'int')
unicode_224506 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 120, 23), 'unicode', u'up')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 113, 14), dict_224490, (int_224505, unicode_224506))
# Adding element type (key, value) (line 113)
int_224507 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 121, 15), 'int')
unicode_224508 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 121, 23), 'unicode', u'right')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 113, 14), dict_224490, (int_224507, unicode_224508))
# Adding element type (key, value) (line 113)
int_224509 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 122, 15), 'int')
unicode_224510 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 122, 23), 'unicode', u'down')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 113, 14), dict_224490, (int_224509, unicode_224510))
# Adding element type (key, value) (line 113)
int_224511 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 123, 15), 'int')
unicode_224512 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 123, 23), 'unicode', u'escape')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 113, 14), dict_224490, (int_224511, unicode_224512))
# Adding element type (key, value) (line 113)
int_224513 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 124, 15), 'int')
unicode_224514 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 124, 23), 'unicode', u'f1')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 113, 14), dict_224490, (int_224513, unicode_224514))
# Adding element type (key, value) (line 113)
int_224515 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 125, 15), 'int')
unicode_224516 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 125, 23), 'unicode', u'f2')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 113, 14), dict_224490, (int_224515, unicode_224516))
# Adding element type (key, value) (line 113)
int_224517 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 126, 15), 'int')
unicode_224518 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 126, 23), 'unicode', u'f3')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 113, 14), dict_224490, (int_224517, unicode_224518))
# Adding element type (key, value) (line 113)
int_224519 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 127, 15), 'int')
unicode_224520 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 127, 23), 'unicode', u'f4')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 113, 14), dict_224490, (int_224519, unicode_224520))
# Adding element type (key, value) (line 113)
int_224521 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 128, 15), 'int')
unicode_224522 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 128, 23), 'unicode', u'f5')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 113, 14), dict_224490, (int_224521, unicode_224522))
# Adding element type (key, value) (line 113)
int_224523 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 129, 15), 'int')
unicode_224524 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 129, 23), 'unicode', u'f6')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 113, 14), dict_224490, (int_224523, unicode_224524))
# Adding element type (key, value) (line 113)
int_224525 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 130, 15), 'int')
unicode_224526 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 130, 23), 'unicode', u'f7')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 113, 14), dict_224490, (int_224525, unicode_224526))
# Adding element type (key, value) (line 113)
int_224527 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 131, 15), 'int')
unicode_224528 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 131, 23), 'unicode', u'f8')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 113, 14), dict_224490, (int_224527, unicode_224528))
# Adding element type (key, value) (line 113)
int_224529 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 132, 15), 'int')
unicode_224530 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 132, 23), 'unicode', u'f9')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 113, 14), dict_224490, (int_224529, unicode_224530))
# Adding element type (key, value) (line 113)
int_224531 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 133, 15), 'int')
unicode_224532 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 133, 23), 'unicode', u'f10')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 113, 14), dict_224490, (int_224531, unicode_224532))
# Adding element type (key, value) (line 113)
int_224533 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 134, 15), 'int')
unicode_224534 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 134, 23), 'unicode', u'f11')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 113, 14), dict_224490, (int_224533, unicode_224534))
# Adding element type (key, value) (line 113)
int_224535 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 135, 15), 'int')
unicode_224536 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 135, 23), 'unicode', u'f12')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 113, 14), dict_224490, (int_224535, unicode_224536))
# Adding element type (key, value) (line 113)
int_224537 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 136, 15), 'int')
unicode_224538 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 136, 23), 'unicode', u'scroll_lock')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 113, 14), dict_224490, (int_224537, unicode_224538))
# Adding element type (key, value) (line 113)
int_224539 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 137, 15), 'int')
unicode_224540 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 137, 23), 'unicode', u'break')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 113, 14), dict_224490, (int_224539, unicode_224540))
# Adding element type (key, value) (line 113)
int_224541 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 138, 15), 'int')
unicode_224542 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 138, 23), 'unicode', u'backspace')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 113, 14), dict_224490, (int_224541, unicode_224542))
# Adding element type (key, value) (line 113)
int_224543 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 139, 15), 'int')
unicode_224544 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 139, 23), 'unicode', u'enter')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 113, 14), dict_224490, (int_224543, unicode_224544))
# Adding element type (key, value) (line 113)
int_224545 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 140, 15), 'int')
unicode_224546 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 140, 23), 'unicode', u'insert')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 113, 14), dict_224490, (int_224545, unicode_224546))
# Adding element type (key, value) (line 113)
int_224547 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 141, 15), 'int')
unicode_224548 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 141, 23), 'unicode', u'delete')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 113, 14), dict_224490, (int_224547, unicode_224548))
# Adding element type (key, value) (line 113)
int_224549 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 142, 15), 'int')
unicode_224550 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 142, 23), 'unicode', u'home')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 113, 14), dict_224490, (int_224549, unicode_224550))
# Adding element type (key, value) (line 113)
int_224551 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 143, 15), 'int')
unicode_224552 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 143, 23), 'unicode', u'end')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 113, 14), dict_224490, (int_224551, unicode_224552))
# Adding element type (key, value) (line 113)
int_224553 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 144, 15), 'int')
unicode_224554 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 144, 23), 'unicode', u'pageup')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 113, 14), dict_224490, (int_224553, unicode_224554))
# Adding element type (key, value) (line 113)
int_224555 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 145, 15), 'int')
unicode_224556 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 145, 23), 'unicode', u'pagedown')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 113, 14), dict_224490, (int_224555, unicode_224556))
# Adding element type (key, value) (line 113)
int_224557 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 146, 15), 'int')
unicode_224558 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 146, 23), 'unicode', u'0')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 113, 14), dict_224490, (int_224557, unicode_224558))
# Adding element type (key, value) (line 113)
int_224559 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 147, 15), 'int')
unicode_224560 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 147, 23), 'unicode', u'1')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 113, 14), dict_224490, (int_224559, unicode_224560))
# Adding element type (key, value) (line 113)
int_224561 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 148, 15), 'int')
unicode_224562 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 148, 23), 'unicode', u'2')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 113, 14), dict_224490, (int_224561, unicode_224562))
# Adding element type (key, value) (line 113)
int_224563 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 149, 15), 'int')
unicode_224564 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 149, 23), 'unicode', u'3')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 113, 14), dict_224490, (int_224563, unicode_224564))
# Adding element type (key, value) (line 113)
int_224565 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 150, 15), 'int')
unicode_224566 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 150, 23), 'unicode', u'4')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 113, 14), dict_224490, (int_224565, unicode_224566))
# Adding element type (key, value) (line 113)
int_224567 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 151, 15), 'int')
unicode_224568 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 151, 23), 'unicode', u'5')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 113, 14), dict_224490, (int_224567, unicode_224568))
# Adding element type (key, value) (line 113)
int_224569 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 152, 15), 'int')
unicode_224570 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 152, 23), 'unicode', u'6')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 113, 14), dict_224490, (int_224569, unicode_224570))
# Adding element type (key, value) (line 113)
int_224571 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 153, 15), 'int')
unicode_224572 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 153, 23), 'unicode', u'7')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 113, 14), dict_224490, (int_224571, unicode_224572))
# Adding element type (key, value) (line 113)
int_224573 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 154, 15), 'int')
unicode_224574 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 154, 23), 'unicode', u'8')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 113, 14), dict_224490, (int_224573, unicode_224574))
# Adding element type (key, value) (line 113)
int_224575 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 155, 15), 'int')
unicode_224576 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 155, 23), 'unicode', u'9')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 113, 14), dict_224490, (int_224575, unicode_224576))
# Adding element type (key, value) (line 113)
int_224577 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 156, 15), 'int')
unicode_224578 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 156, 23), 'unicode', u'+')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 113, 14), dict_224490, (int_224577, unicode_224578))
# Adding element type (key, value) (line 113)
int_224579 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 157, 15), 'int')
unicode_224580 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 157, 23), 'unicode', u'-')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 113, 14), dict_224490, (int_224579, unicode_224580))
# Adding element type (key, value) (line 113)
int_224581 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 158, 15), 'int')
unicode_224582 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 158, 23), 'unicode', u'*')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 113, 14), dict_224490, (int_224581, unicode_224582))
# Adding element type (key, value) (line 113)
int_224583 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 159, 15), 'int')
unicode_224584 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 159, 23), 'unicode', u'/')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 113, 14), dict_224490, (int_224583, unicode_224584))
# Adding element type (key, value) (line 113)
int_224585 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 160, 15), 'int')
unicode_224586 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 160, 23), 'unicode', u'dec')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 113, 14), dict_224490, (int_224585, unicode_224586))
# Adding element type (key, value) (line 113)
int_224587 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 161, 15), 'int')
unicode_224588 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 161, 23), 'unicode', u'enter')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 113, 14), dict_224490, (int_224587, unicode_224588))
# Adding element type (key, value) (line 113)
int_224589 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 162, 15), 'int')
unicode_224590 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 162, 23), 'unicode', u'super')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 113, 14), dict_224490, (int_224589, unicode_224590))
# Adding element type (key, value) (line 113)
int_224591 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 163, 15), 'int')
unicode_224592 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 163, 23), 'unicode', u'super')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 113, 14), dict_224490, (int_224591, unicode_224592))
# Adding element type (key, value) (line 113)
int_224593 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 164, 15), 'int')
unicode_224594 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 164, 23), 'unicode', u'alt')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 113, 14), dict_224490, (int_224593, unicode_224594))
# Adding element type (key, value) (line 113)
int_224595 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 165, 15), 'int')
unicode_224596 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 165, 23), 'unicode', u'tab')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 113, 14), dict_224490, (int_224595, unicode_224596))

# Getting the type of 'FigureCanvasGTK'
FigureCanvasGTK_224597 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'FigureCanvasGTK')
# Setting the type of the member 'keyvald' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), FigureCanvasGTK_224597, 'keyvald', dict_224490)

# Assigning a BinOp to a Name (line 170):
# Getting the type of 'gdk' (line 170)
gdk_224598 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 170, 18), 'gdk')
# Obtaining the member 'BUTTON_PRESS_MASK' of a type (line 170)
BUTTON_PRESS_MASK_224599 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 170, 18), gdk_224598, 'BUTTON_PRESS_MASK')
# Getting the type of 'gdk' (line 171)
gdk_224600 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 171, 18), 'gdk')
# Obtaining the member 'BUTTON_RELEASE_MASK' of a type (line 171)
BUTTON_RELEASE_MASK_224601 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 171, 18), gdk_224600, 'BUTTON_RELEASE_MASK')
# Applying the binary operator '|' (line 170)
result_or__224602 = python_operator(stypy.reporting.localization.Localization(__file__, 170, 18), '|', BUTTON_PRESS_MASK_224599, BUTTON_RELEASE_MASK_224601)

# Getting the type of 'gdk' (line 172)
gdk_224603 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 172, 18), 'gdk')
# Obtaining the member 'EXPOSURE_MASK' of a type (line 172)
EXPOSURE_MASK_224604 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 172, 18), gdk_224603, 'EXPOSURE_MASK')
# Applying the binary operator '|' (line 171)
result_or__224605 = python_operator(stypy.reporting.localization.Localization(__file__, 171, 42), '|', result_or__224602, EXPOSURE_MASK_224604)

# Getting the type of 'gdk' (line 173)
gdk_224606 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 173, 18), 'gdk')
# Obtaining the member 'KEY_PRESS_MASK' of a type (line 173)
KEY_PRESS_MASK_224607 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 173, 18), gdk_224606, 'KEY_PRESS_MASK')
# Applying the binary operator '|' (line 172)
result_or__224608 = python_operator(stypy.reporting.localization.Localization(__file__, 172, 42), '|', result_or__224605, KEY_PRESS_MASK_224607)

# Getting the type of 'gdk' (line 174)
gdk_224609 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 174, 18), 'gdk')
# Obtaining the member 'KEY_RELEASE_MASK' of a type (line 174)
KEY_RELEASE_MASK_224610 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 174, 18), gdk_224609, 'KEY_RELEASE_MASK')
# Applying the binary operator '|' (line 173)
result_or__224611 = python_operator(stypy.reporting.localization.Localization(__file__, 173, 42), '|', result_or__224608, KEY_RELEASE_MASK_224610)

# Getting the type of 'gdk' (line 175)
gdk_224612 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 175, 18), 'gdk')
# Obtaining the member 'ENTER_NOTIFY_MASK' of a type (line 175)
ENTER_NOTIFY_MASK_224613 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 175, 18), gdk_224612, 'ENTER_NOTIFY_MASK')
# Applying the binary operator '|' (line 174)
result_or__224614 = python_operator(stypy.reporting.localization.Localization(__file__, 174, 42), '|', result_or__224611, ENTER_NOTIFY_MASK_224613)

# Getting the type of 'gdk' (line 176)
gdk_224615 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 176, 18), 'gdk')
# Obtaining the member 'LEAVE_NOTIFY_MASK' of a type (line 176)
LEAVE_NOTIFY_MASK_224616 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 176, 18), gdk_224615, 'LEAVE_NOTIFY_MASK')
# Applying the binary operator '|' (line 175)
result_or__224617 = python_operator(stypy.reporting.localization.Localization(__file__, 175, 42), '|', result_or__224614, LEAVE_NOTIFY_MASK_224616)

# Getting the type of 'gdk' (line 177)
gdk_224618 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 177, 18), 'gdk')
# Obtaining the member 'POINTER_MOTION_MASK' of a type (line 177)
POINTER_MOTION_MASK_224619 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 177, 18), gdk_224618, 'POINTER_MOTION_MASK')
# Applying the binary operator '|' (line 176)
result_or__224620 = python_operator(stypy.reporting.localization.Localization(__file__, 176, 42), '|', result_or__224617, POINTER_MOTION_MASK_224619)

# Getting the type of 'gdk' (line 178)
gdk_224621 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 178, 18), 'gdk')
# Obtaining the member 'POINTER_MOTION_HINT_MASK' of a type (line 178)
POINTER_MOTION_HINT_MASK_224622 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 178, 18), gdk_224621, 'POINTER_MOTION_HINT_MASK')
# Applying the binary operator '|' (line 177)
result_or__224623 = python_operator(stypy.reporting.localization.Localization(__file__, 177, 42), '|', result_or__224620, POINTER_MOTION_HINT_MASK_224622)

# Getting the type of 'FigureCanvasGTK'
FigureCanvasGTK_224624 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'FigureCanvasGTK')
# Setting the type of the member 'event_mask' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), FigureCanvasGTK_224624, 'event_mask', result_or__224623)

# Assigning a Call to a Name (line 406):

# Call to copy(...): (line 406)
# Processing the call keyword arguments (line 406)
kwargs_224628 = {}
# Getting the type of 'FigureCanvasBase' (line 406)
FigureCanvasBase_224625 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 406, 16), 'FigureCanvasBase', False)
# Obtaining the member 'filetypes' of a type (line 406)
filetypes_224626 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 406, 16), FigureCanvasBase_224625, 'filetypes')
# Obtaining the member 'copy' of a type (line 406)
copy_224627 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 406, 16), filetypes_224626, 'copy')
# Calling copy(args, kwargs) (line 406)
copy_call_result_224629 = invoke(stypy.reporting.localization.Localization(__file__, 406, 16), copy_224627, *[], **kwargs_224628)

# Getting the type of 'FigureCanvasGTK'
FigureCanvasGTK_224630 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'FigureCanvasGTK')
# Setting the type of the member 'filetypes' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), FigureCanvasGTK_224630, 'filetypes', copy_call_result_224629)

# Assigning a Str to a Subscript (line 407):
unicode_224631 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 407, 23), 'unicode', u'JPEG')
# Getting the type of 'FigureCanvasGTK'
FigureCanvasGTK_224632 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'FigureCanvasGTK')
# Setting the type of the member 'filetypes' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), FigureCanvasGTK_224632, 'filetypes', unicode_224631)

# Assigning a Str to a Subscript (line 408):
unicode_224633 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 408, 24), 'unicode', u'JPEG')
# Getting the type of 'FigureCanvasGTK'
FigureCanvasGTK_224634 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'FigureCanvasGTK')
# Setting the type of the member 'filetypes' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), FigureCanvasGTK_224634, 'filetypes', unicode_224633)

# Assigning a Str to a Subscript (line 409):
unicode_224635 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 409, 23), 'unicode', u'Portable Network Graphics')
# Getting the type of 'FigureCanvasGTK'
FigureCanvasGTK_224636 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'FigureCanvasGTK')
# Setting the type of the member 'filetypes' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), FigureCanvasGTK_224636, 'filetypes', unicode_224635)

# Assigning a Name to a Name (line 413):
# Getting the type of 'FigureCanvasGTK'
FigureCanvasGTK_224637 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'FigureCanvasGTK')
# Obtaining the member 'print_jpeg' of a type
print_jpeg_224638 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), FigureCanvasGTK_224637, 'print_jpeg')
# Getting the type of 'FigureCanvasGTK'
FigureCanvasGTK_224639 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'FigureCanvasGTK')
# Setting the type of the member 'print_jpg' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), FigureCanvasGTK_224639, 'print_jpg', print_jpeg_224638)
# Declaration of the 'FigureManagerGTK' class
# Getting the type of 'FigureManagerBase' (line 485)
FigureManagerBase_224640 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 485, 23), 'FigureManagerBase')

class FigureManagerGTK(FigureManagerBase_224640, ):
    unicode_224641 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 500, (-1)), 'unicode', u'\n    Attributes\n    ----------\n    canvas : `FigureCanvas`\n        The FigureCanvas instance\n    num : int or str\n        The Figure number\n    toolbar : gtk.Toolbar\n        The gtk.Toolbar  (gtk only)\n    vbox : gtk.VBox\n        The gtk.VBox containing the canvas and toolbar (gtk only)\n    window : gtk.Window\n        The gtk.Window   (gtk only)\n\n    ')

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 501, 4, False)
        # Assigning a type to the variable 'self' (line 502)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 502, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FigureManagerGTK.__init__', ['canvas', 'num'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['canvas', 'num'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Call to __init__(...): (line 502)
        # Processing the call arguments (line 502)
        # Getting the type of 'self' (line 502)
        self_224644 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 502, 35), 'self', False)
        # Getting the type of 'canvas' (line 502)
        canvas_224645 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 502, 41), 'canvas', False)
        # Getting the type of 'num' (line 502)
        num_224646 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 502, 49), 'num', False)
        # Processing the call keyword arguments (line 502)
        kwargs_224647 = {}
        # Getting the type of 'FigureManagerBase' (line 502)
        FigureManagerBase_224642 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 502, 8), 'FigureManagerBase', False)
        # Obtaining the member '__init__' of a type (line 502)
        init___224643 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 502, 8), FigureManagerBase_224642, '__init__')
        # Calling __init__(args, kwargs) (line 502)
        init___call_result_224648 = invoke(stypy.reporting.localization.Localization(__file__, 502, 8), init___224643, *[self_224644, canvas_224645, num_224646], **kwargs_224647)
        
        
        # Assigning a Call to a Attribute (line 504):
        
        # Assigning a Call to a Attribute (line 504):
        
        # Call to Window(...): (line 504)
        # Processing the call keyword arguments (line 504)
        kwargs_224651 = {}
        # Getting the type of 'gtk' (line 504)
        gtk_224649 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 504, 22), 'gtk', False)
        # Obtaining the member 'Window' of a type (line 504)
        Window_224650 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 504, 22), gtk_224649, 'Window')
        # Calling Window(args, kwargs) (line 504)
        Window_call_result_224652 = invoke(stypy.reporting.localization.Localization(__file__, 504, 22), Window_224650, *[], **kwargs_224651)
        
        # Getting the type of 'self' (line 504)
        self_224653 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 504, 8), 'self')
        # Setting the type of the member 'window' of a type (line 504)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 504, 8), self_224653, 'window', Window_call_result_224652)
        
        # Call to set_wmclass(...): (line 505)
        # Processing the call arguments (line 505)
        unicode_224657 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 505, 32), 'unicode', u'matplotlib')
        unicode_224658 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 505, 46), 'unicode', u'Matplotlib')
        # Processing the call keyword arguments (line 505)
        kwargs_224659 = {}
        # Getting the type of 'self' (line 505)
        self_224654 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 505, 8), 'self', False)
        # Obtaining the member 'window' of a type (line 505)
        window_224655 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 505, 8), self_224654, 'window')
        # Obtaining the member 'set_wmclass' of a type (line 505)
        set_wmclass_224656 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 505, 8), window_224655, 'set_wmclass')
        # Calling set_wmclass(args, kwargs) (line 505)
        set_wmclass_call_result_224660 = invoke(stypy.reporting.localization.Localization(__file__, 505, 8), set_wmclass_224656, *[unicode_224657, unicode_224658], **kwargs_224659)
        
        
        # Call to set_window_title(...): (line 506)
        # Processing the call arguments (line 506)
        unicode_224663 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 506, 30), 'unicode', u'Figure %d')
        # Getting the type of 'num' (line 506)
        num_224664 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 506, 44), 'num', False)
        # Applying the binary operator '%' (line 506)
        result_mod_224665 = python_operator(stypy.reporting.localization.Localization(__file__, 506, 30), '%', unicode_224663, num_224664)
        
        # Processing the call keyword arguments (line 506)
        kwargs_224666 = {}
        # Getting the type of 'self' (line 506)
        self_224661 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 506, 8), 'self', False)
        # Obtaining the member 'set_window_title' of a type (line 506)
        set_window_title_224662 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 506, 8), self_224661, 'set_window_title')
        # Calling set_window_title(args, kwargs) (line 506)
        set_window_title_call_result_224667 = invoke(stypy.reporting.localization.Localization(__file__, 506, 8), set_window_title_224662, *[result_mod_224665], **kwargs_224666)
        
        
        # Getting the type of 'window_icon' (line 507)
        window_icon_224668 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 507, 11), 'window_icon')
        # Testing the type of an if condition (line 507)
        if_condition_224669 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 507, 8), window_icon_224668)
        # Assigning a type to the variable 'if_condition_224669' (line 507)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 507, 8), 'if_condition_224669', if_condition_224669)
        # SSA begins for if statement (line 507)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        
        # SSA begins for try-except statement (line 508)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
        
        # Call to set_icon_from_file(...): (line 509)
        # Processing the call arguments (line 509)
        # Getting the type of 'window_icon' (line 509)
        window_icon_224673 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 509, 47), 'window_icon', False)
        # Processing the call keyword arguments (line 509)
        kwargs_224674 = {}
        # Getting the type of 'self' (line 509)
        self_224670 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 509, 16), 'self', False)
        # Obtaining the member 'window' of a type (line 509)
        window_224671 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 509, 16), self_224670, 'window')
        # Obtaining the member 'set_icon_from_file' of a type (line 509)
        set_icon_from_file_224672 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 509, 16), window_224671, 'set_icon_from_file')
        # Calling set_icon_from_file(args, kwargs) (line 509)
        set_icon_from_file_call_result_224675 = invoke(stypy.reporting.localization.Localization(__file__, 509, 16), set_icon_from_file_224672, *[window_icon_224673], **kwargs_224674)
        
        # SSA branch for the except part of a try statement (line 508)
        # SSA branch for the except '<any exception>' branch of a try statement (line 508)
        module_type_store.open_ssa_branch('except')
        
        # Call to report(...): (line 515)
        # Processing the call arguments (line 515)
        unicode_224678 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 515, 31), 'unicode', u'Could not load matplotlib icon: %s')
        
        # Obtaining the type of the subscript
        int_224679 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 515, 85), 'int')
        
        # Call to exc_info(...): (line 515)
        # Processing the call keyword arguments (line 515)
        kwargs_224682 = {}
        # Getting the type of 'sys' (line 515)
        sys_224680 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 515, 70), 'sys', False)
        # Obtaining the member 'exc_info' of a type (line 515)
        exc_info_224681 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 515, 70), sys_224680, 'exc_info')
        # Calling exc_info(args, kwargs) (line 515)
        exc_info_call_result_224683 = invoke(stypy.reporting.localization.Localization(__file__, 515, 70), exc_info_224681, *[], **kwargs_224682)
        
        # Obtaining the member '__getitem__' of a type (line 515)
        getitem___224684 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 515, 70), exc_info_call_result_224683, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 515)
        subscript_call_result_224685 = invoke(stypy.reporting.localization.Localization(__file__, 515, 70), getitem___224684, int_224679)
        
        # Applying the binary operator '%' (line 515)
        result_mod_224686 = python_operator(stypy.reporting.localization.Localization(__file__, 515, 31), '%', unicode_224678, subscript_call_result_224685)
        
        # Processing the call keyword arguments (line 515)
        kwargs_224687 = {}
        # Getting the type of 'verbose' (line 515)
        verbose_224676 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 515, 16), 'verbose', False)
        # Obtaining the member 'report' of a type (line 515)
        report_224677 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 515, 16), verbose_224676, 'report')
        # Calling report(args, kwargs) (line 515)
        report_call_result_224688 = invoke(stypy.reporting.localization.Localization(__file__, 515, 16), report_224677, *[result_mod_224686], **kwargs_224687)
        
        # SSA join for try-except statement (line 508)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 507)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Attribute (line 517):
        
        # Assigning a Call to a Attribute (line 517):
        
        # Call to VBox(...): (line 517)
        # Processing the call keyword arguments (line 517)
        kwargs_224691 = {}
        # Getting the type of 'gtk' (line 517)
        gtk_224689 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 517, 20), 'gtk', False)
        # Obtaining the member 'VBox' of a type (line 517)
        VBox_224690 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 517, 20), gtk_224689, 'VBox')
        # Calling VBox(args, kwargs) (line 517)
        VBox_call_result_224692 = invoke(stypy.reporting.localization.Localization(__file__, 517, 20), VBox_224690, *[], **kwargs_224691)
        
        # Getting the type of 'self' (line 517)
        self_224693 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 517, 8), 'self')
        # Setting the type of the member 'vbox' of a type (line 517)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 517, 8), self_224693, 'vbox', VBox_call_result_224692)
        
        # Call to add(...): (line 518)
        # Processing the call arguments (line 518)
        # Getting the type of 'self' (line 518)
        self_224697 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 518, 24), 'self', False)
        # Obtaining the member 'vbox' of a type (line 518)
        vbox_224698 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 518, 24), self_224697, 'vbox')
        # Processing the call keyword arguments (line 518)
        kwargs_224699 = {}
        # Getting the type of 'self' (line 518)
        self_224694 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 518, 8), 'self', False)
        # Obtaining the member 'window' of a type (line 518)
        window_224695 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 518, 8), self_224694, 'window')
        # Obtaining the member 'add' of a type (line 518)
        add_224696 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 518, 8), window_224695, 'add')
        # Calling add(args, kwargs) (line 518)
        add_call_result_224700 = invoke(stypy.reporting.localization.Localization(__file__, 518, 8), add_224696, *[vbox_224698], **kwargs_224699)
        
        
        # Call to show(...): (line 519)
        # Processing the call keyword arguments (line 519)
        kwargs_224704 = {}
        # Getting the type of 'self' (line 519)
        self_224701 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 519, 8), 'self', False)
        # Obtaining the member 'vbox' of a type (line 519)
        vbox_224702 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 519, 8), self_224701, 'vbox')
        # Obtaining the member 'show' of a type (line 519)
        show_224703 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 519, 8), vbox_224702, 'show')
        # Calling show(args, kwargs) (line 519)
        show_call_result_224705 = invoke(stypy.reporting.localization.Localization(__file__, 519, 8), show_224703, *[], **kwargs_224704)
        
        
        # Call to show(...): (line 521)
        # Processing the call keyword arguments (line 521)
        kwargs_224709 = {}
        # Getting the type of 'self' (line 521)
        self_224706 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 521, 8), 'self', False)
        # Obtaining the member 'canvas' of a type (line 521)
        canvas_224707 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 521, 8), self_224706, 'canvas')
        # Obtaining the member 'show' of a type (line 521)
        show_224708 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 521, 8), canvas_224707, 'show')
        # Calling show(args, kwargs) (line 521)
        show_call_result_224710 = invoke(stypy.reporting.localization.Localization(__file__, 521, 8), show_224708, *[], **kwargs_224709)
        
        
        # Call to pack_start(...): (line 523)
        # Processing the call arguments (line 523)
        # Getting the type of 'self' (line 523)
        self_224714 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 523, 29), 'self', False)
        # Obtaining the member 'canvas' of a type (line 523)
        canvas_224715 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 523, 29), self_224714, 'canvas')
        # Getting the type of 'True' (line 523)
        True_224716 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 523, 42), 'True', False)
        # Getting the type of 'True' (line 523)
        True_224717 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 523, 48), 'True', False)
        # Processing the call keyword arguments (line 523)
        kwargs_224718 = {}
        # Getting the type of 'self' (line 523)
        self_224711 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 523, 8), 'self', False)
        # Obtaining the member 'vbox' of a type (line 523)
        vbox_224712 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 523, 8), self_224711, 'vbox')
        # Obtaining the member 'pack_start' of a type (line 523)
        pack_start_224713 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 523, 8), vbox_224712, 'pack_start')
        # Calling pack_start(args, kwargs) (line 523)
        pack_start_call_result_224719 = invoke(stypy.reporting.localization.Localization(__file__, 523, 8), pack_start_224713, *[canvas_224715, True_224716, True_224717], **kwargs_224718)
        
        
        # Assigning a Call to a Attribute (line 525):
        
        # Assigning a Call to a Attribute (line 525):
        
        # Call to _get_toolbar(...): (line 525)
        # Processing the call arguments (line 525)
        # Getting the type of 'canvas' (line 525)
        canvas_224722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 525, 41), 'canvas', False)
        # Processing the call keyword arguments (line 525)
        kwargs_224723 = {}
        # Getting the type of 'self' (line 525)
        self_224720 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 525, 23), 'self', False)
        # Obtaining the member '_get_toolbar' of a type (line 525)
        _get_toolbar_224721 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 525, 23), self_224720, '_get_toolbar')
        # Calling _get_toolbar(args, kwargs) (line 525)
        _get_toolbar_call_result_224724 = invoke(stypy.reporting.localization.Localization(__file__, 525, 23), _get_toolbar_224721, *[canvas_224722], **kwargs_224723)
        
        # Getting the type of 'self' (line 525)
        self_224725 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 525, 8), 'self')
        # Setting the type of the member 'toolbar' of a type (line 525)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 525, 8), self_224725, 'toolbar', _get_toolbar_call_result_224724)
        
        # Assigning a Call to a Name (line 528):
        
        # Assigning a Call to a Name (line 528):
        
        # Call to int(...): (line 528)
        # Processing the call arguments (line 528)
        # Getting the type of 'self' (line 528)
        self_224727 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 528, 17), 'self', False)
        # Obtaining the member 'canvas' of a type (line 528)
        canvas_224728 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 528, 17), self_224727, 'canvas')
        # Obtaining the member 'figure' of a type (line 528)
        figure_224729 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 528, 17), canvas_224728, 'figure')
        # Obtaining the member 'bbox' of a type (line 528)
        bbox_224730 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 528, 17), figure_224729, 'bbox')
        # Obtaining the member 'width' of a type (line 528)
        width_224731 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 528, 17), bbox_224730, 'width')
        # Processing the call keyword arguments (line 528)
        kwargs_224732 = {}
        # Getting the type of 'int' (line 528)
        int_224726 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 528, 12), 'int', False)
        # Calling int(args, kwargs) (line 528)
        int_call_result_224733 = invoke(stypy.reporting.localization.Localization(__file__, 528, 12), int_224726, *[width_224731], **kwargs_224732)
        
        # Assigning a type to the variable 'w' (line 528)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 528, 8), 'w', int_call_result_224733)
        
        # Assigning a Call to a Name (line 529):
        
        # Assigning a Call to a Name (line 529):
        
        # Call to int(...): (line 529)
        # Processing the call arguments (line 529)
        # Getting the type of 'self' (line 529)
        self_224735 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 529, 17), 'self', False)
        # Obtaining the member 'canvas' of a type (line 529)
        canvas_224736 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 529, 17), self_224735, 'canvas')
        # Obtaining the member 'figure' of a type (line 529)
        figure_224737 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 529, 17), canvas_224736, 'figure')
        # Obtaining the member 'bbox' of a type (line 529)
        bbox_224738 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 529, 17), figure_224737, 'bbox')
        # Obtaining the member 'height' of a type (line 529)
        height_224739 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 529, 17), bbox_224738, 'height')
        # Processing the call keyword arguments (line 529)
        kwargs_224740 = {}
        # Getting the type of 'int' (line 529)
        int_224734 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 529, 12), 'int', False)
        # Calling int(args, kwargs) (line 529)
        int_call_result_224741 = invoke(stypy.reporting.localization.Localization(__file__, 529, 12), int_224734, *[height_224739], **kwargs_224740)
        
        # Assigning a type to the variable 'h' (line 529)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 529, 8), 'h', int_call_result_224741)
        
        
        # Getting the type of 'self' (line 531)
        self_224742 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 531, 11), 'self')
        # Obtaining the member 'toolbar' of a type (line 531)
        toolbar_224743 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 531, 11), self_224742, 'toolbar')
        # Getting the type of 'None' (line 531)
        None_224744 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 531, 31), 'None')
        # Applying the binary operator 'isnot' (line 531)
        result_is_not_224745 = python_operator(stypy.reporting.localization.Localization(__file__, 531, 11), 'isnot', toolbar_224743, None_224744)
        
        # Testing the type of an if condition (line 531)
        if_condition_224746 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 531, 8), result_is_not_224745)
        # Assigning a type to the variable 'if_condition_224746' (line 531)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 531, 8), 'if_condition_224746', if_condition_224746)
        # SSA begins for if statement (line 531)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to show(...): (line 532)
        # Processing the call keyword arguments (line 532)
        kwargs_224750 = {}
        # Getting the type of 'self' (line 532)
        self_224747 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 532, 12), 'self', False)
        # Obtaining the member 'toolbar' of a type (line 532)
        toolbar_224748 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 532, 12), self_224747, 'toolbar')
        # Obtaining the member 'show' of a type (line 532)
        show_224749 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 532, 12), toolbar_224748, 'show')
        # Calling show(args, kwargs) (line 532)
        show_call_result_224751 = invoke(stypy.reporting.localization.Localization(__file__, 532, 12), show_224749, *[], **kwargs_224750)
        
        
        # Call to pack_end(...): (line 533)
        # Processing the call arguments (line 533)
        # Getting the type of 'self' (line 533)
        self_224755 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 533, 31), 'self', False)
        # Obtaining the member 'toolbar' of a type (line 533)
        toolbar_224756 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 533, 31), self_224755, 'toolbar')
        # Getting the type of 'False' (line 533)
        False_224757 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 533, 45), 'False', False)
        # Getting the type of 'False' (line 533)
        False_224758 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 533, 52), 'False', False)
        # Processing the call keyword arguments (line 533)
        kwargs_224759 = {}
        # Getting the type of 'self' (line 533)
        self_224752 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 533, 12), 'self', False)
        # Obtaining the member 'vbox' of a type (line 533)
        vbox_224753 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 533, 12), self_224752, 'vbox')
        # Obtaining the member 'pack_end' of a type (line 533)
        pack_end_224754 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 533, 12), vbox_224753, 'pack_end')
        # Calling pack_end(args, kwargs) (line 533)
        pack_end_call_result_224760 = invoke(stypy.reporting.localization.Localization(__file__, 533, 12), pack_end_224754, *[toolbar_224756, False_224757, False_224758], **kwargs_224759)
        
        
        # Assigning a Call to a Tuple (line 535):
        
        # Assigning a Call to a Name:
        
        # Call to size_request(...): (line 535)
        # Processing the call keyword arguments (line 535)
        kwargs_224764 = {}
        # Getting the type of 'self' (line 535)
        self_224761 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 535, 25), 'self', False)
        # Obtaining the member 'toolbar' of a type (line 535)
        toolbar_224762 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 535, 25), self_224761, 'toolbar')
        # Obtaining the member 'size_request' of a type (line 535)
        size_request_224763 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 535, 25), toolbar_224762, 'size_request')
        # Calling size_request(args, kwargs) (line 535)
        size_request_call_result_224765 = invoke(stypy.reporting.localization.Localization(__file__, 535, 25), size_request_224763, *[], **kwargs_224764)
        
        # Assigning a type to the variable 'call_assignment_223309' (line 535)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 535, 12), 'call_assignment_223309', size_request_call_result_224765)
        
        # Assigning a Call to a Name (line 535):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_224768 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 535, 12), 'int')
        # Processing the call keyword arguments
        kwargs_224769 = {}
        # Getting the type of 'call_assignment_223309' (line 535)
        call_assignment_223309_224766 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 535, 12), 'call_assignment_223309', False)
        # Obtaining the member '__getitem__' of a type (line 535)
        getitem___224767 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 535, 12), call_assignment_223309_224766, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_224770 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___224767, *[int_224768], **kwargs_224769)
        
        # Assigning a type to the variable 'call_assignment_223310' (line 535)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 535, 12), 'call_assignment_223310', getitem___call_result_224770)
        
        # Assigning a Name to a Name (line 535):
        # Getting the type of 'call_assignment_223310' (line 535)
        call_assignment_223310_224771 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 535, 12), 'call_assignment_223310')
        # Assigning a type to the variable 'tb_w' (line 535)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 535, 12), 'tb_w', call_assignment_223310_224771)
        
        # Assigning a Call to a Name (line 535):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_224774 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 535, 12), 'int')
        # Processing the call keyword arguments
        kwargs_224775 = {}
        # Getting the type of 'call_assignment_223309' (line 535)
        call_assignment_223309_224772 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 535, 12), 'call_assignment_223309', False)
        # Obtaining the member '__getitem__' of a type (line 535)
        getitem___224773 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 535, 12), call_assignment_223309_224772, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_224776 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___224773, *[int_224774], **kwargs_224775)
        
        # Assigning a type to the variable 'call_assignment_223311' (line 535)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 535, 12), 'call_assignment_223311', getitem___call_result_224776)
        
        # Assigning a Name to a Name (line 535):
        # Getting the type of 'call_assignment_223311' (line 535)
        call_assignment_223311_224777 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 535, 12), 'call_assignment_223311')
        # Assigning a type to the variable 'tb_h' (line 535)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 535, 18), 'tb_h', call_assignment_223311_224777)
        
        # Getting the type of 'h' (line 536)
        h_224778 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 12), 'h')
        # Getting the type of 'tb_h' (line 536)
        tb_h_224779 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 17), 'tb_h')
        # Applying the binary operator '+=' (line 536)
        result_iadd_224780 = python_operator(stypy.reporting.localization.Localization(__file__, 536, 12), '+=', h_224778, tb_h_224779)
        # Assigning a type to the variable 'h' (line 536)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 536, 12), 'h', result_iadd_224780)
        
        # SSA join for if statement (line 531)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to set_default_size(...): (line 537)
        # Processing the call arguments (line 537)
        # Getting the type of 'w' (line 537)
        w_224784 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 537, 38), 'w', False)
        # Getting the type of 'h' (line 537)
        h_224785 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 537, 41), 'h', False)
        # Processing the call keyword arguments (line 537)
        kwargs_224786 = {}
        # Getting the type of 'self' (line 537)
        self_224781 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 537, 8), 'self', False)
        # Obtaining the member 'window' of a type (line 537)
        window_224782 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 537, 8), self_224781, 'window')
        # Obtaining the member 'set_default_size' of a type (line 537)
        set_default_size_224783 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 537, 8), window_224782, 'set_default_size')
        # Calling set_default_size(args, kwargs) (line 537)
        set_default_size_call_result_224787 = invoke(stypy.reporting.localization.Localization(__file__, 537, 8), set_default_size_224783, *[w_224784, h_224785], **kwargs_224786)
        

        @norecursion
        def destroy(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'destroy'
            module_type_store = module_type_store.open_function_context('destroy', 539, 8, False)
            
            # Passed parameters checking function
            destroy.stypy_localization = localization
            destroy.stypy_type_of_self = None
            destroy.stypy_type_store = module_type_store
            destroy.stypy_function_name = 'destroy'
            destroy.stypy_param_names_list = []
            destroy.stypy_varargs_param_name = 'args'
            destroy.stypy_kwargs_param_name = None
            destroy.stypy_call_defaults = defaults
            destroy.stypy_call_varargs = varargs
            destroy.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'destroy', [], 'args', None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'destroy', localization, [], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'destroy(...)' code ##################

            
            # Call to destroy(...): (line 540)
            # Processing the call arguments (line 540)
            # Getting the type of 'num' (line 540)
            num_224790 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 540, 24), 'num', False)
            # Processing the call keyword arguments (line 540)
            kwargs_224791 = {}
            # Getting the type of 'Gcf' (line 540)
            Gcf_224788 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 540, 12), 'Gcf', False)
            # Obtaining the member 'destroy' of a type (line 540)
            destroy_224789 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 540, 12), Gcf_224788, 'destroy')
            # Calling destroy(args, kwargs) (line 540)
            destroy_call_result_224792 = invoke(stypy.reporting.localization.Localization(__file__, 540, 12), destroy_224789, *[num_224790], **kwargs_224791)
            
            
            # ################# End of 'destroy(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'destroy' in the type store
            # Getting the type of 'stypy_return_type' (line 539)
            stypy_return_type_224793 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 539, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_224793)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'destroy'
            return stypy_return_type_224793

        # Assigning a type to the variable 'destroy' (line 539)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 539, 8), 'destroy', destroy)
        
        # Call to connect(...): (line 541)
        # Processing the call arguments (line 541)
        unicode_224797 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 541, 28), 'unicode', u'destroy')
        # Getting the type of 'destroy' (line 541)
        destroy_224798 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 541, 39), 'destroy', False)
        # Processing the call keyword arguments (line 541)
        kwargs_224799 = {}
        # Getting the type of 'self' (line 541)
        self_224794 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 541, 8), 'self', False)
        # Obtaining the member 'window' of a type (line 541)
        window_224795 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 541, 8), self_224794, 'window')
        # Obtaining the member 'connect' of a type (line 541)
        connect_224796 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 541, 8), window_224795, 'connect')
        # Calling connect(args, kwargs) (line 541)
        connect_call_result_224800 = invoke(stypy.reporting.localization.Localization(__file__, 541, 8), connect_224796, *[unicode_224797, destroy_224798], **kwargs_224799)
        
        
        # Call to connect(...): (line 542)
        # Processing the call arguments (line 542)
        unicode_224804 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 542, 28), 'unicode', u'delete_event')
        # Getting the type of 'destroy' (line 542)
        destroy_224805 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 542, 44), 'destroy', False)
        # Processing the call keyword arguments (line 542)
        kwargs_224806 = {}
        # Getting the type of 'self' (line 542)
        self_224801 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 542, 8), 'self', False)
        # Obtaining the member 'window' of a type (line 542)
        window_224802 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 542, 8), self_224801, 'window')
        # Obtaining the member 'connect' of a type (line 542)
        connect_224803 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 542, 8), window_224802, 'connect')
        # Calling connect(args, kwargs) (line 542)
        connect_call_result_224807 = invoke(stypy.reporting.localization.Localization(__file__, 542, 8), connect_224803, *[unicode_224804, destroy_224805], **kwargs_224806)
        
        
        
        # Call to is_interactive(...): (line 543)
        # Processing the call keyword arguments (line 543)
        kwargs_224810 = {}
        # Getting the type of 'matplotlib' (line 543)
        matplotlib_224808 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 543, 11), 'matplotlib', False)
        # Obtaining the member 'is_interactive' of a type (line 543)
        is_interactive_224809 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 543, 11), matplotlib_224808, 'is_interactive')
        # Calling is_interactive(args, kwargs) (line 543)
        is_interactive_call_result_224811 = invoke(stypy.reporting.localization.Localization(__file__, 543, 11), is_interactive_224809, *[], **kwargs_224810)
        
        # Testing the type of an if condition (line 543)
        if_condition_224812 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 543, 8), is_interactive_call_result_224811)
        # Assigning a type to the variable 'if_condition_224812' (line 543)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 543, 8), 'if_condition_224812', if_condition_224812)
        # SSA begins for if statement (line 543)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to show(...): (line 544)
        # Processing the call keyword arguments (line 544)
        kwargs_224816 = {}
        # Getting the type of 'self' (line 544)
        self_224813 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 544, 12), 'self', False)
        # Obtaining the member 'window' of a type (line 544)
        window_224814 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 544, 12), self_224813, 'window')
        # Obtaining the member 'show' of a type (line 544)
        show_224815 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 544, 12), window_224814, 'show')
        # Calling show(args, kwargs) (line 544)
        show_call_result_224817 = invoke(stypy.reporting.localization.Localization(__file__, 544, 12), show_224815, *[], **kwargs_224816)
        
        
        # Call to draw_idle(...): (line 545)
        # Processing the call keyword arguments (line 545)
        kwargs_224821 = {}
        # Getting the type of 'self' (line 545)
        self_224818 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 545, 12), 'self', False)
        # Obtaining the member 'canvas' of a type (line 545)
        canvas_224819 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 545, 12), self_224818, 'canvas')
        # Obtaining the member 'draw_idle' of a type (line 545)
        draw_idle_224820 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 545, 12), canvas_224819, 'draw_idle')
        # Calling draw_idle(args, kwargs) (line 545)
        draw_idle_call_result_224822 = invoke(stypy.reporting.localization.Localization(__file__, 545, 12), draw_idle_224820, *[], **kwargs_224821)
        
        # SSA join for if statement (line 543)
        module_type_store = module_type_store.join_ssa_context()
        

        @norecursion
        def notify_axes_change(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'notify_axes_change'
            module_type_store = module_type_store.open_function_context('notify_axes_change', 547, 8, False)
            
            # Passed parameters checking function
            notify_axes_change.stypy_localization = localization
            notify_axes_change.stypy_type_of_self = None
            notify_axes_change.stypy_type_store = module_type_store
            notify_axes_change.stypy_function_name = 'notify_axes_change'
            notify_axes_change.stypy_param_names_list = ['fig']
            notify_axes_change.stypy_varargs_param_name = None
            notify_axes_change.stypy_kwargs_param_name = None
            notify_axes_change.stypy_call_defaults = defaults
            notify_axes_change.stypy_call_varargs = varargs
            notify_axes_change.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'notify_axes_change', ['fig'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'notify_axes_change', localization, ['fig'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'notify_axes_change(...)' code ##################

            unicode_224823 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 548, 12), 'unicode', u'this will be called whenever the current axes is changed')
            
            
            # Getting the type of 'self' (line 549)
            self_224824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 549, 15), 'self')
            # Obtaining the member 'toolbar' of a type (line 549)
            toolbar_224825 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 549, 15), self_224824, 'toolbar')
            # Getting the type of 'None' (line 549)
            None_224826 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 549, 35), 'None')
            # Applying the binary operator 'isnot' (line 549)
            result_is_not_224827 = python_operator(stypy.reporting.localization.Localization(__file__, 549, 15), 'isnot', toolbar_224825, None_224826)
            
            # Testing the type of an if condition (line 549)
            if_condition_224828 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 549, 12), result_is_not_224827)
            # Assigning a type to the variable 'if_condition_224828' (line 549)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 549, 12), 'if_condition_224828', if_condition_224828)
            # SSA begins for if statement (line 549)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Call to update(...): (line 549)
            # Processing the call keyword arguments (line 549)
            kwargs_224832 = {}
            # Getting the type of 'self' (line 549)
            self_224829 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 549, 41), 'self', False)
            # Obtaining the member 'toolbar' of a type (line 549)
            toolbar_224830 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 549, 41), self_224829, 'toolbar')
            # Obtaining the member 'update' of a type (line 549)
            update_224831 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 549, 41), toolbar_224830, 'update')
            # Calling update(args, kwargs) (line 549)
            update_call_result_224833 = invoke(stypy.reporting.localization.Localization(__file__, 549, 41), update_224831, *[], **kwargs_224832)
            
            # SSA join for if statement (line 549)
            module_type_store = module_type_store.join_ssa_context()
            
            
            # ################# End of 'notify_axes_change(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'notify_axes_change' in the type store
            # Getting the type of 'stypy_return_type' (line 547)
            stypy_return_type_224834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 547, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_224834)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'notify_axes_change'
            return stypy_return_type_224834

        # Assigning a type to the variable 'notify_axes_change' (line 547)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 547, 8), 'notify_axes_change', notify_axes_change)
        
        # Call to add_axobserver(...): (line 550)
        # Processing the call arguments (line 550)
        # Getting the type of 'notify_axes_change' (line 550)
        notify_axes_change_224839 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 550, 42), 'notify_axes_change', False)
        # Processing the call keyword arguments (line 550)
        kwargs_224840 = {}
        # Getting the type of 'self' (line 550)
        self_224835 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 550, 8), 'self', False)
        # Obtaining the member 'canvas' of a type (line 550)
        canvas_224836 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 550, 8), self_224835, 'canvas')
        # Obtaining the member 'figure' of a type (line 550)
        figure_224837 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 550, 8), canvas_224836, 'figure')
        # Obtaining the member 'add_axobserver' of a type (line 550)
        add_axobserver_224838 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 550, 8), figure_224837, 'add_axobserver')
        # Calling add_axobserver(args, kwargs) (line 550)
        add_axobserver_call_result_224841 = invoke(stypy.reporting.localization.Localization(__file__, 550, 8), add_axobserver_224838, *[notify_axes_change_224839], **kwargs_224840)
        
        
        # Call to grab_focus(...): (line 552)
        # Processing the call keyword arguments (line 552)
        kwargs_224845 = {}
        # Getting the type of 'self' (line 552)
        self_224842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 552, 8), 'self', False)
        # Obtaining the member 'canvas' of a type (line 552)
        canvas_224843 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 552, 8), self_224842, 'canvas')
        # Obtaining the member 'grab_focus' of a type (line 552)
        grab_focus_224844 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 552, 8), canvas_224843, 'grab_focus')
        # Calling grab_focus(args, kwargs) (line 552)
        grab_focus_call_result_224846 = invoke(stypy.reporting.localization.Localization(__file__, 552, 8), grab_focus_224844, *[], **kwargs_224845)
        
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def destroy(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'destroy'
        module_type_store = module_type_store.open_function_context('destroy', 554, 4, False)
        # Assigning a type to the variable 'self' (line 555)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 555, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        FigureManagerGTK.destroy.__dict__.__setitem__('stypy_localization', localization)
        FigureManagerGTK.destroy.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        FigureManagerGTK.destroy.__dict__.__setitem__('stypy_type_store', module_type_store)
        FigureManagerGTK.destroy.__dict__.__setitem__('stypy_function_name', 'FigureManagerGTK.destroy')
        FigureManagerGTK.destroy.__dict__.__setitem__('stypy_param_names_list', [])
        FigureManagerGTK.destroy.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        FigureManagerGTK.destroy.__dict__.__setitem__('stypy_kwargs_param_name', None)
        FigureManagerGTK.destroy.__dict__.__setitem__('stypy_call_defaults', defaults)
        FigureManagerGTK.destroy.__dict__.__setitem__('stypy_call_varargs', varargs)
        FigureManagerGTK.destroy.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        FigureManagerGTK.destroy.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FigureManagerGTK.destroy', [], 'args', None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'destroy', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'destroy(...)' code ##################

        
        
        # Evaluating a boolean operation
        
        # Call to hasattr(...): (line 555)
        # Processing the call arguments (line 555)
        # Getting the type of 'self' (line 555)
        self_224848 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 555, 19), 'self', False)
        unicode_224849 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 555, 25), 'unicode', u'toolbar')
        # Processing the call keyword arguments (line 555)
        kwargs_224850 = {}
        # Getting the type of 'hasattr' (line 555)
        hasattr_224847 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 555, 11), 'hasattr', False)
        # Calling hasattr(args, kwargs) (line 555)
        hasattr_call_result_224851 = invoke(stypy.reporting.localization.Localization(__file__, 555, 11), hasattr_224847, *[self_224848, unicode_224849], **kwargs_224850)
        
        
        # Getting the type of 'self' (line 555)
        self_224852 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 555, 40), 'self')
        # Obtaining the member 'toolbar' of a type (line 555)
        toolbar_224853 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 555, 40), self_224852, 'toolbar')
        # Getting the type of 'None' (line 555)
        None_224854 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 555, 60), 'None')
        # Applying the binary operator 'isnot' (line 555)
        result_is_not_224855 = python_operator(stypy.reporting.localization.Localization(__file__, 555, 40), 'isnot', toolbar_224853, None_224854)
        
        # Applying the binary operator 'and' (line 555)
        result_and_keyword_224856 = python_operator(stypy.reporting.localization.Localization(__file__, 555, 11), 'and', hasattr_call_result_224851, result_is_not_224855)
        
        # Testing the type of an if condition (line 555)
        if_condition_224857 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 555, 8), result_and_keyword_224856)
        # Assigning a type to the variable 'if_condition_224857' (line 555)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 555, 8), 'if_condition_224857', if_condition_224857)
        # SSA begins for if statement (line 555)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to destroy(...): (line 556)
        # Processing the call keyword arguments (line 556)
        kwargs_224861 = {}
        # Getting the type of 'self' (line 556)
        self_224858 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 556, 12), 'self', False)
        # Obtaining the member 'toolbar' of a type (line 556)
        toolbar_224859 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 556, 12), self_224858, 'toolbar')
        # Obtaining the member 'destroy' of a type (line 556)
        destroy_224860 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 556, 12), toolbar_224859, 'destroy')
        # Calling destroy(args, kwargs) (line 556)
        destroy_call_result_224862 = invoke(stypy.reporting.localization.Localization(__file__, 556, 12), destroy_224860, *[], **kwargs_224861)
        
        # SSA join for if statement (line 555)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Type idiom detected: calculating its left and rigth part (line 557)
        unicode_224863 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 557, 25), 'unicode', u'vbox')
        # Getting the type of 'self' (line 557)
        self_224864 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 557, 19), 'self')
        
        (may_be_224865, more_types_in_union_224866) = may_provide_member(unicode_224863, self_224864)

        if may_be_224865:

            if more_types_in_union_224866:
                # Runtime conditional SSA (line 557)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            # Assigning a type to the variable 'self' (line 557)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 557, 8), 'self', remove_not_member_provider_from_union(self_224864, u'vbox'))
            
            # Call to destroy(...): (line 558)
            # Processing the call keyword arguments (line 558)
            kwargs_224870 = {}
            # Getting the type of 'self' (line 558)
            self_224867 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 558, 12), 'self', False)
            # Obtaining the member 'vbox' of a type (line 558)
            vbox_224868 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 558, 12), self_224867, 'vbox')
            # Obtaining the member 'destroy' of a type (line 558)
            destroy_224869 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 558, 12), vbox_224868, 'destroy')
            # Calling destroy(args, kwargs) (line 558)
            destroy_call_result_224871 = invoke(stypy.reporting.localization.Localization(__file__, 558, 12), destroy_224869, *[], **kwargs_224870)
            

            if more_types_in_union_224866:
                # SSA join for if statement (line 557)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Type idiom detected: calculating its left and rigth part (line 559)
        unicode_224872 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 559, 25), 'unicode', u'window')
        # Getting the type of 'self' (line 559)
        self_224873 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 559, 19), 'self')
        
        (may_be_224874, more_types_in_union_224875) = may_provide_member(unicode_224872, self_224873)

        if may_be_224874:

            if more_types_in_union_224875:
                # Runtime conditional SSA (line 559)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            # Assigning a type to the variable 'self' (line 559)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 559, 8), 'self', remove_not_member_provider_from_union(self_224873, u'window'))
            
            # Call to destroy(...): (line 560)
            # Processing the call keyword arguments (line 560)
            kwargs_224879 = {}
            # Getting the type of 'self' (line 560)
            self_224876 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 560, 12), 'self', False)
            # Obtaining the member 'window' of a type (line 560)
            window_224877 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 560, 12), self_224876, 'window')
            # Obtaining the member 'destroy' of a type (line 560)
            destroy_224878 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 560, 12), window_224877, 'destroy')
            # Calling destroy(args, kwargs) (line 560)
            destroy_call_result_224880 = invoke(stypy.reporting.localization.Localization(__file__, 560, 12), destroy_224878, *[], **kwargs_224879)
            

            if more_types_in_union_224875:
                # SSA join for if statement (line 559)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Type idiom detected: calculating its left and rigth part (line 561)
        unicode_224881 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 561, 25), 'unicode', u'canvas')
        # Getting the type of 'self' (line 561)
        self_224882 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 561, 19), 'self')
        
        (may_be_224883, more_types_in_union_224884) = may_provide_member(unicode_224881, self_224882)

        if may_be_224883:

            if more_types_in_union_224884:
                # Runtime conditional SSA (line 561)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            # Assigning a type to the variable 'self' (line 561)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 561, 8), 'self', remove_not_member_provider_from_union(self_224882, u'canvas'))
            
            # Call to destroy(...): (line 562)
            # Processing the call keyword arguments (line 562)
            kwargs_224888 = {}
            # Getting the type of 'self' (line 562)
            self_224885 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 562, 12), 'self', False)
            # Obtaining the member 'canvas' of a type (line 562)
            canvas_224886 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 562, 12), self_224885, 'canvas')
            # Obtaining the member 'destroy' of a type (line 562)
            destroy_224887 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 562, 12), canvas_224886, 'destroy')
            # Calling destroy(args, kwargs) (line 562)
            destroy_call_result_224889 = invoke(stypy.reporting.localization.Localization(__file__, 562, 12), destroy_224887, *[], **kwargs_224888)
            

            if more_types_in_union_224884:
                # SSA join for if statement (line 561)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Call to clear(...): (line 563)
        # Processing the call keyword arguments (line 563)
        kwargs_224893 = {}
        # Getting the type of 'self' (line 563)
        self_224890 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 563, 8), 'self', False)
        # Obtaining the member '__dict__' of a type (line 563)
        dict___224891 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 563, 8), self_224890, '__dict__')
        # Obtaining the member 'clear' of a type (line 563)
        clear_224892 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 563, 8), dict___224891, 'clear')
        # Calling clear(args, kwargs) (line 563)
        clear_call_result_224894 = invoke(stypy.reporting.localization.Localization(__file__, 563, 8), clear_224892, *[], **kwargs_224893)
        
        
        
        # Evaluating a boolean operation
        
        
        # Call to get_num_fig_managers(...): (line 565)
        # Processing the call keyword arguments (line 565)
        kwargs_224897 = {}
        # Getting the type of 'Gcf' (line 565)
        Gcf_224895 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 565, 11), 'Gcf', False)
        # Obtaining the member 'get_num_fig_managers' of a type (line 565)
        get_num_fig_managers_224896 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 565, 11), Gcf_224895, 'get_num_fig_managers')
        # Calling get_num_fig_managers(args, kwargs) (line 565)
        get_num_fig_managers_call_result_224898 = invoke(stypy.reporting.localization.Localization(__file__, 565, 11), get_num_fig_managers_224896, *[], **kwargs_224897)
        
        int_224899 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 565, 39), 'int')
        # Applying the binary operator '==' (line 565)
        result_eq_224900 = python_operator(stypy.reporting.localization.Localization(__file__, 565, 11), '==', get_num_fig_managers_call_result_224898, int_224899)
        
        
        
        # Call to is_interactive(...): (line 566)
        # Processing the call keyword arguments (line 566)
        kwargs_224903 = {}
        # Getting the type of 'matplotlib' (line 566)
        matplotlib_224901 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 566, 19), 'matplotlib', False)
        # Obtaining the member 'is_interactive' of a type (line 566)
        is_interactive_224902 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 566, 19), matplotlib_224901, 'is_interactive')
        # Calling is_interactive(args, kwargs) (line 566)
        is_interactive_call_result_224904 = invoke(stypy.reporting.localization.Localization(__file__, 566, 19), is_interactive_224902, *[], **kwargs_224903)
        
        # Applying the 'not' unary operator (line 566)
        result_not__224905 = python_operator(stypy.reporting.localization.Localization(__file__, 566, 15), 'not', is_interactive_call_result_224904)
        
        # Applying the binary operator 'and' (line 565)
        result_and_keyword_224906 = python_operator(stypy.reporting.localization.Localization(__file__, 565, 11), 'and', result_eq_224900, result_not__224905)
        
        
        # Call to main_level(...): (line 567)
        # Processing the call keyword arguments (line 567)
        kwargs_224909 = {}
        # Getting the type of 'gtk' (line 567)
        gtk_224907 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 567, 15), 'gtk', False)
        # Obtaining the member 'main_level' of a type (line 567)
        main_level_224908 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 567, 15), gtk_224907, 'main_level')
        # Calling main_level(args, kwargs) (line 567)
        main_level_call_result_224910 = invoke(stypy.reporting.localization.Localization(__file__, 567, 15), main_level_224908, *[], **kwargs_224909)
        
        int_224911 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 567, 35), 'int')
        # Applying the binary operator '>=' (line 567)
        result_ge_224912 = python_operator(stypy.reporting.localization.Localization(__file__, 567, 15), '>=', main_level_call_result_224910, int_224911)
        
        # Applying the binary operator 'and' (line 565)
        result_and_keyword_224913 = python_operator(stypy.reporting.localization.Localization(__file__, 565, 11), 'and', result_and_keyword_224906, result_ge_224912)
        
        # Testing the type of an if condition (line 565)
        if_condition_224914 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 565, 8), result_and_keyword_224913)
        # Assigning a type to the variable 'if_condition_224914' (line 565)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 565, 8), 'if_condition_224914', if_condition_224914)
        # SSA begins for if statement (line 565)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to main_quit(...): (line 568)
        # Processing the call keyword arguments (line 568)
        kwargs_224917 = {}
        # Getting the type of 'gtk' (line 568)
        gtk_224915 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 568, 12), 'gtk', False)
        # Obtaining the member 'main_quit' of a type (line 568)
        main_quit_224916 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 568, 12), gtk_224915, 'main_quit')
        # Calling main_quit(args, kwargs) (line 568)
        main_quit_call_result_224918 = invoke(stypy.reporting.localization.Localization(__file__, 568, 12), main_quit_224916, *[], **kwargs_224917)
        
        # SSA join for if statement (line 565)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'destroy(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'destroy' in the type store
        # Getting the type of 'stypy_return_type' (line 554)
        stypy_return_type_224919 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 554, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_224919)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'destroy'
        return stypy_return_type_224919


    @norecursion
    def show(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'show'
        module_type_store = module_type_store.open_function_context('show', 570, 4, False)
        # Assigning a type to the variable 'self' (line 571)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 571, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        FigureManagerGTK.show.__dict__.__setitem__('stypy_localization', localization)
        FigureManagerGTK.show.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        FigureManagerGTK.show.__dict__.__setitem__('stypy_type_store', module_type_store)
        FigureManagerGTK.show.__dict__.__setitem__('stypy_function_name', 'FigureManagerGTK.show')
        FigureManagerGTK.show.__dict__.__setitem__('stypy_param_names_list', [])
        FigureManagerGTK.show.__dict__.__setitem__('stypy_varargs_param_name', None)
        FigureManagerGTK.show.__dict__.__setitem__('stypy_kwargs_param_name', None)
        FigureManagerGTK.show.__dict__.__setitem__('stypy_call_defaults', defaults)
        FigureManagerGTK.show.__dict__.__setitem__('stypy_call_varargs', varargs)
        FigureManagerGTK.show.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        FigureManagerGTK.show.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FigureManagerGTK.show', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'show', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'show(...)' code ##################

        
        # Call to show(...): (line 572)
        # Processing the call keyword arguments (line 572)
        kwargs_224923 = {}
        # Getting the type of 'self' (line 572)
        self_224920 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 572, 8), 'self', False)
        # Obtaining the member 'window' of a type (line 572)
        window_224921 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 572, 8), self_224920, 'window')
        # Obtaining the member 'show' of a type (line 572)
        show_224922 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 572, 8), window_224921, 'show')
        # Calling show(args, kwargs) (line 572)
        show_call_result_224924 = invoke(stypy.reporting.localization.Localization(__file__, 572, 8), show_224922, *[], **kwargs_224923)
        
        
        # Call to set_keep_above(...): (line 574)
        # Processing the call arguments (line 574)
        # Getting the type of 'True' (line 574)
        True_224928 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 574, 35), 'True', False)
        # Processing the call keyword arguments (line 574)
        kwargs_224929 = {}
        # Getting the type of 'self' (line 574)
        self_224925 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 574, 8), 'self', False)
        # Obtaining the member 'window' of a type (line 574)
        window_224926 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 574, 8), self_224925, 'window')
        # Obtaining the member 'set_keep_above' of a type (line 574)
        set_keep_above_224927 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 574, 8), window_224926, 'set_keep_above')
        # Calling set_keep_above(args, kwargs) (line 574)
        set_keep_above_call_result_224930 = invoke(stypy.reporting.localization.Localization(__file__, 574, 8), set_keep_above_224927, *[True_224928], **kwargs_224929)
        
        
        # Call to set_keep_above(...): (line 575)
        # Processing the call arguments (line 575)
        # Getting the type of 'False' (line 575)
        False_224934 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 575, 35), 'False', False)
        # Processing the call keyword arguments (line 575)
        kwargs_224935 = {}
        # Getting the type of 'self' (line 575)
        self_224931 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 575, 8), 'self', False)
        # Obtaining the member 'window' of a type (line 575)
        window_224932 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 575, 8), self_224931, 'window')
        # Obtaining the member 'set_keep_above' of a type (line 575)
        set_keep_above_224933 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 575, 8), window_224932, 'set_keep_above')
        # Calling set_keep_above(args, kwargs) (line 575)
        set_keep_above_call_result_224936 = invoke(stypy.reporting.localization.Localization(__file__, 575, 8), set_keep_above_224933, *[False_224934], **kwargs_224935)
        
        
        # ################# End of 'show(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'show' in the type store
        # Getting the type of 'stypy_return_type' (line 570)
        stypy_return_type_224937 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 570, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_224937)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'show'
        return stypy_return_type_224937


    @norecursion
    def full_screen_toggle(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'full_screen_toggle'
        module_type_store = module_type_store.open_function_context('full_screen_toggle', 577, 4, False)
        # Assigning a type to the variable 'self' (line 578)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 578, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        FigureManagerGTK.full_screen_toggle.__dict__.__setitem__('stypy_localization', localization)
        FigureManagerGTK.full_screen_toggle.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        FigureManagerGTK.full_screen_toggle.__dict__.__setitem__('stypy_type_store', module_type_store)
        FigureManagerGTK.full_screen_toggle.__dict__.__setitem__('stypy_function_name', 'FigureManagerGTK.full_screen_toggle')
        FigureManagerGTK.full_screen_toggle.__dict__.__setitem__('stypy_param_names_list', [])
        FigureManagerGTK.full_screen_toggle.__dict__.__setitem__('stypy_varargs_param_name', None)
        FigureManagerGTK.full_screen_toggle.__dict__.__setitem__('stypy_kwargs_param_name', None)
        FigureManagerGTK.full_screen_toggle.__dict__.__setitem__('stypy_call_defaults', defaults)
        FigureManagerGTK.full_screen_toggle.__dict__.__setitem__('stypy_call_varargs', varargs)
        FigureManagerGTK.full_screen_toggle.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        FigureManagerGTK.full_screen_toggle.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FigureManagerGTK.full_screen_toggle', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'full_screen_toggle', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'full_screen_toggle(...)' code ##################

        
        # Assigning a UnaryOp to a Attribute (line 578):
        
        # Assigning a UnaryOp to a Attribute (line 578):
        
        # Getting the type of 'self' (line 578)
        self_224938 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 578, 37), 'self')
        # Obtaining the member '_full_screen_flag' of a type (line 578)
        _full_screen_flag_224939 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 578, 37), self_224938, '_full_screen_flag')
        # Applying the 'not' unary operator (line 578)
        result_not__224940 = python_operator(stypy.reporting.localization.Localization(__file__, 578, 33), 'not', _full_screen_flag_224939)
        
        # Getting the type of 'self' (line 578)
        self_224941 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 578, 8), 'self')
        # Setting the type of the member '_full_screen_flag' of a type (line 578)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 578, 8), self_224941, '_full_screen_flag', result_not__224940)
        
        # Getting the type of 'self' (line 579)
        self_224942 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 579, 11), 'self')
        # Obtaining the member '_full_screen_flag' of a type (line 579)
        _full_screen_flag_224943 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 579, 11), self_224942, '_full_screen_flag')
        # Testing the type of an if condition (line 579)
        if_condition_224944 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 579, 8), _full_screen_flag_224943)
        # Assigning a type to the variable 'if_condition_224944' (line 579)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 579, 8), 'if_condition_224944', if_condition_224944)
        # SSA begins for if statement (line 579)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to fullscreen(...): (line 580)
        # Processing the call keyword arguments (line 580)
        kwargs_224948 = {}
        # Getting the type of 'self' (line 580)
        self_224945 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 580, 12), 'self', False)
        # Obtaining the member 'window' of a type (line 580)
        window_224946 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 580, 12), self_224945, 'window')
        # Obtaining the member 'fullscreen' of a type (line 580)
        fullscreen_224947 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 580, 12), window_224946, 'fullscreen')
        # Calling fullscreen(args, kwargs) (line 580)
        fullscreen_call_result_224949 = invoke(stypy.reporting.localization.Localization(__file__, 580, 12), fullscreen_224947, *[], **kwargs_224948)
        
        # SSA branch for the else part of an if statement (line 579)
        module_type_store.open_ssa_branch('else')
        
        # Call to unfullscreen(...): (line 582)
        # Processing the call keyword arguments (line 582)
        kwargs_224953 = {}
        # Getting the type of 'self' (line 582)
        self_224950 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 582, 12), 'self', False)
        # Obtaining the member 'window' of a type (line 582)
        window_224951 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 582, 12), self_224950, 'window')
        # Obtaining the member 'unfullscreen' of a type (line 582)
        unfullscreen_224952 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 582, 12), window_224951, 'unfullscreen')
        # Calling unfullscreen(args, kwargs) (line 582)
        unfullscreen_call_result_224954 = invoke(stypy.reporting.localization.Localization(__file__, 582, 12), unfullscreen_224952, *[], **kwargs_224953)
        
        # SSA join for if statement (line 579)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'full_screen_toggle(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'full_screen_toggle' in the type store
        # Getting the type of 'stypy_return_type' (line 577)
        stypy_return_type_224955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 577, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_224955)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'full_screen_toggle'
        return stypy_return_type_224955

    
    # Assigning a Name to a Name (line 583):

    @norecursion
    def _get_toolbar(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_get_toolbar'
        module_type_store = module_type_store.open_function_context('_get_toolbar', 586, 4, False)
        # Assigning a type to the variable 'self' (line 587)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 587, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        FigureManagerGTK._get_toolbar.__dict__.__setitem__('stypy_localization', localization)
        FigureManagerGTK._get_toolbar.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        FigureManagerGTK._get_toolbar.__dict__.__setitem__('stypy_type_store', module_type_store)
        FigureManagerGTK._get_toolbar.__dict__.__setitem__('stypy_function_name', 'FigureManagerGTK._get_toolbar')
        FigureManagerGTK._get_toolbar.__dict__.__setitem__('stypy_param_names_list', ['canvas'])
        FigureManagerGTK._get_toolbar.__dict__.__setitem__('stypy_varargs_param_name', None)
        FigureManagerGTK._get_toolbar.__dict__.__setitem__('stypy_kwargs_param_name', None)
        FigureManagerGTK._get_toolbar.__dict__.__setitem__('stypy_call_defaults', defaults)
        FigureManagerGTK._get_toolbar.__dict__.__setitem__('stypy_call_varargs', varargs)
        FigureManagerGTK._get_toolbar.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        FigureManagerGTK._get_toolbar.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FigureManagerGTK._get_toolbar', ['canvas'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_get_toolbar', localization, ['canvas'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_get_toolbar(...)' code ##################

        
        
        
        # Obtaining the type of the subscript
        unicode_224956 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 589, 20), 'unicode', u'toolbar')
        # Getting the type of 'rcParams' (line 589)
        rcParams_224957 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 589, 11), 'rcParams')
        # Obtaining the member '__getitem__' of a type (line 589)
        getitem___224958 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 589, 11), rcParams_224957, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 589)
        subscript_call_result_224959 = invoke(stypy.reporting.localization.Localization(__file__, 589, 11), getitem___224958, unicode_224956)
        
        unicode_224960 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 589, 34), 'unicode', u'toolbar2')
        # Applying the binary operator '==' (line 589)
        result_eq_224961 = python_operator(stypy.reporting.localization.Localization(__file__, 589, 11), '==', subscript_call_result_224959, unicode_224960)
        
        # Testing the type of an if condition (line 589)
        if_condition_224962 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 589, 8), result_eq_224961)
        # Assigning a type to the variable 'if_condition_224962' (line 589)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 589, 8), 'if_condition_224962', if_condition_224962)
        # SSA begins for if statement (line 589)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 590):
        
        # Assigning a Call to a Name (line 590):
        
        # Call to NavigationToolbar2GTK(...): (line 590)
        # Processing the call arguments (line 590)
        # Getting the type of 'canvas' (line 590)
        canvas_224964 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 590, 45), 'canvas', False)
        # Getting the type of 'self' (line 590)
        self_224965 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 590, 53), 'self', False)
        # Obtaining the member 'window' of a type (line 590)
        window_224966 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 590, 53), self_224965, 'window')
        # Processing the call keyword arguments (line 590)
        kwargs_224967 = {}
        # Getting the type of 'NavigationToolbar2GTK' (line 590)
        NavigationToolbar2GTK_224963 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 590, 22), 'NavigationToolbar2GTK', False)
        # Calling NavigationToolbar2GTK(args, kwargs) (line 590)
        NavigationToolbar2GTK_call_result_224968 = invoke(stypy.reporting.localization.Localization(__file__, 590, 22), NavigationToolbar2GTK_224963, *[canvas_224964, window_224966], **kwargs_224967)
        
        # Assigning a type to the variable 'toolbar' (line 590)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 590, 12), 'toolbar', NavigationToolbar2GTK_call_result_224968)
        # SSA branch for the else part of an if statement (line 589)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Name to a Name (line 592):
        
        # Assigning a Name to a Name (line 592):
        # Getting the type of 'None' (line 592)
        None_224969 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 592, 22), 'None')
        # Assigning a type to the variable 'toolbar' (line 592)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 592, 12), 'toolbar', None_224969)
        # SSA join for if statement (line 589)
        module_type_store = module_type_store.join_ssa_context()
        
        # Getting the type of 'toolbar' (line 593)
        toolbar_224970 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 593, 15), 'toolbar')
        # Assigning a type to the variable 'stypy_return_type' (line 593)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 593, 8), 'stypy_return_type', toolbar_224970)
        
        # ################# End of '_get_toolbar(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_get_toolbar' in the type store
        # Getting the type of 'stypy_return_type' (line 586)
        stypy_return_type_224971 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 586, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_224971)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_get_toolbar'
        return stypy_return_type_224971


    @norecursion
    def get_window_title(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'get_window_title'
        module_type_store = module_type_store.open_function_context('get_window_title', 595, 4, False)
        # Assigning a type to the variable 'self' (line 596)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 596, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        FigureManagerGTK.get_window_title.__dict__.__setitem__('stypy_localization', localization)
        FigureManagerGTK.get_window_title.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        FigureManagerGTK.get_window_title.__dict__.__setitem__('stypy_type_store', module_type_store)
        FigureManagerGTK.get_window_title.__dict__.__setitem__('stypy_function_name', 'FigureManagerGTK.get_window_title')
        FigureManagerGTK.get_window_title.__dict__.__setitem__('stypy_param_names_list', [])
        FigureManagerGTK.get_window_title.__dict__.__setitem__('stypy_varargs_param_name', None)
        FigureManagerGTK.get_window_title.__dict__.__setitem__('stypy_kwargs_param_name', None)
        FigureManagerGTK.get_window_title.__dict__.__setitem__('stypy_call_defaults', defaults)
        FigureManagerGTK.get_window_title.__dict__.__setitem__('stypy_call_varargs', varargs)
        FigureManagerGTK.get_window_title.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        FigureManagerGTK.get_window_title.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FigureManagerGTK.get_window_title', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_window_title', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_window_title(...)' code ##################

        
        # Call to get_title(...): (line 596)
        # Processing the call keyword arguments (line 596)
        kwargs_224975 = {}
        # Getting the type of 'self' (line 596)
        self_224972 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 596, 15), 'self', False)
        # Obtaining the member 'window' of a type (line 596)
        window_224973 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 596, 15), self_224972, 'window')
        # Obtaining the member 'get_title' of a type (line 596)
        get_title_224974 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 596, 15), window_224973, 'get_title')
        # Calling get_title(args, kwargs) (line 596)
        get_title_call_result_224976 = invoke(stypy.reporting.localization.Localization(__file__, 596, 15), get_title_224974, *[], **kwargs_224975)
        
        # Assigning a type to the variable 'stypy_return_type' (line 596)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 596, 8), 'stypy_return_type', get_title_call_result_224976)
        
        # ################# End of 'get_window_title(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_window_title' in the type store
        # Getting the type of 'stypy_return_type' (line 595)
        stypy_return_type_224977 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 595, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_224977)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_window_title'
        return stypy_return_type_224977


    @norecursion
    def set_window_title(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'set_window_title'
        module_type_store = module_type_store.open_function_context('set_window_title', 598, 4, False)
        # Assigning a type to the variable 'self' (line 599)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 599, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        FigureManagerGTK.set_window_title.__dict__.__setitem__('stypy_localization', localization)
        FigureManagerGTK.set_window_title.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        FigureManagerGTK.set_window_title.__dict__.__setitem__('stypy_type_store', module_type_store)
        FigureManagerGTK.set_window_title.__dict__.__setitem__('stypy_function_name', 'FigureManagerGTK.set_window_title')
        FigureManagerGTK.set_window_title.__dict__.__setitem__('stypy_param_names_list', ['title'])
        FigureManagerGTK.set_window_title.__dict__.__setitem__('stypy_varargs_param_name', None)
        FigureManagerGTK.set_window_title.__dict__.__setitem__('stypy_kwargs_param_name', None)
        FigureManagerGTK.set_window_title.__dict__.__setitem__('stypy_call_defaults', defaults)
        FigureManagerGTK.set_window_title.__dict__.__setitem__('stypy_call_varargs', varargs)
        FigureManagerGTK.set_window_title.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        FigureManagerGTK.set_window_title.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FigureManagerGTK.set_window_title', ['title'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'set_window_title', localization, ['title'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'set_window_title(...)' code ##################

        
        # Call to set_title(...): (line 599)
        # Processing the call arguments (line 599)
        # Getting the type of 'title' (line 599)
        title_224981 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 599, 30), 'title', False)
        # Processing the call keyword arguments (line 599)
        kwargs_224982 = {}
        # Getting the type of 'self' (line 599)
        self_224978 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 599, 8), 'self', False)
        # Obtaining the member 'window' of a type (line 599)
        window_224979 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 599, 8), self_224978, 'window')
        # Obtaining the member 'set_title' of a type (line 599)
        set_title_224980 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 599, 8), window_224979, 'set_title')
        # Calling set_title(args, kwargs) (line 599)
        set_title_call_result_224983 = invoke(stypy.reporting.localization.Localization(__file__, 599, 8), set_title_224980, *[title_224981], **kwargs_224982)
        
        
        # ################# End of 'set_window_title(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'set_window_title' in the type store
        # Getting the type of 'stypy_return_type' (line 598)
        stypy_return_type_224984 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 598, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_224984)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'set_window_title'
        return stypy_return_type_224984


    @norecursion
    def resize(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'resize'
        module_type_store = module_type_store.open_function_context('resize', 601, 4, False)
        # Assigning a type to the variable 'self' (line 602)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 602, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        FigureManagerGTK.resize.__dict__.__setitem__('stypy_localization', localization)
        FigureManagerGTK.resize.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        FigureManagerGTK.resize.__dict__.__setitem__('stypy_type_store', module_type_store)
        FigureManagerGTK.resize.__dict__.__setitem__('stypy_function_name', 'FigureManagerGTK.resize')
        FigureManagerGTK.resize.__dict__.__setitem__('stypy_param_names_list', ['width', 'height'])
        FigureManagerGTK.resize.__dict__.__setitem__('stypy_varargs_param_name', None)
        FigureManagerGTK.resize.__dict__.__setitem__('stypy_kwargs_param_name', None)
        FigureManagerGTK.resize.__dict__.__setitem__('stypy_call_defaults', defaults)
        FigureManagerGTK.resize.__dict__.__setitem__('stypy_call_varargs', varargs)
        FigureManagerGTK.resize.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        FigureManagerGTK.resize.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FigureManagerGTK.resize', ['width', 'height'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'resize', localization, ['width', 'height'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'resize(...)' code ##################

        unicode_224985 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 602, 8), 'unicode', u'set the canvas size in pixels')
        
        # Call to resize(...): (line 606)
        # Processing the call arguments (line 606)
        # Getting the type of 'width' (line 606)
        width_224989 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 606, 27), 'width', False)
        # Getting the type of 'height' (line 606)
        height_224990 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 606, 34), 'height', False)
        # Processing the call keyword arguments (line 606)
        kwargs_224991 = {}
        # Getting the type of 'self' (line 606)
        self_224986 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 606, 8), 'self', False)
        # Obtaining the member 'window' of a type (line 606)
        window_224987 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 606, 8), self_224986, 'window')
        # Obtaining the member 'resize' of a type (line 606)
        resize_224988 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 606, 8), window_224987, 'resize')
        # Calling resize(args, kwargs) (line 606)
        resize_call_result_224992 = invoke(stypy.reporting.localization.Localization(__file__, 606, 8), resize_224988, *[width_224989, height_224990], **kwargs_224991)
        
        
        # ################# End of 'resize(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'resize' in the type store
        # Getting the type of 'stypy_return_type' (line 601)
        stypy_return_type_224993 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 601, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_224993)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'resize'
        return stypy_return_type_224993


# Assigning a type to the variable 'FigureManagerGTK' (line 485)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 485, 0), 'FigureManagerGTK', FigureManagerGTK)

# Assigning a Name to a Name (line 583):
# Getting the type of 'False' (line 583)
False_224994 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 583, 24), 'False')
# Getting the type of 'FigureManagerGTK'
FigureManagerGTK_224995 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'FigureManagerGTK')
# Setting the type of the member '_full_screen_flag' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), FigureManagerGTK_224995, '_full_screen_flag', False_224994)
# Declaration of the 'NavigationToolbar2GTK' class
# Getting the type of 'NavigationToolbar2' (line 609)
NavigationToolbar2_224996 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 609, 28), 'NavigationToolbar2')
# Getting the type of 'gtk' (line 609)
gtk_224997 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 609, 48), 'gtk')
# Obtaining the member 'Toolbar' of a type (line 609)
Toolbar_224998 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 609, 48), gtk_224997, 'Toolbar')

class NavigationToolbar2GTK(NavigationToolbar2_224996, Toolbar_224998, ):

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 610, 4, False)
        # Assigning a type to the variable 'self' (line 611)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 611, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'NavigationToolbar2GTK.__init__', ['canvas', 'window'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['canvas', 'window'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Assigning a Name to a Attribute (line 611):
        
        # Assigning a Name to a Attribute (line 611):
        # Getting the type of 'window' (line 611)
        window_224999 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 611, 19), 'window')
        # Getting the type of 'self' (line 611)
        self_225000 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 611, 8), 'self')
        # Setting the type of the member 'win' of a type (line 611)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 611, 8), self_225000, 'win', window_224999)
        
        # Call to __init__(...): (line 612)
        # Processing the call arguments (line 612)
        # Getting the type of 'self' (line 612)
        self_225004 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 612, 29), 'self', False)
        # Processing the call keyword arguments (line 612)
        kwargs_225005 = {}
        # Getting the type of 'gtk' (line 612)
        gtk_225001 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 612, 8), 'gtk', False)
        # Obtaining the member 'Toolbar' of a type (line 612)
        Toolbar_225002 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 612, 8), gtk_225001, 'Toolbar')
        # Obtaining the member '__init__' of a type (line 612)
        init___225003 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 612, 8), Toolbar_225002, '__init__')
        # Calling __init__(args, kwargs) (line 612)
        init___call_result_225006 = invoke(stypy.reporting.localization.Localization(__file__, 612, 8), init___225003, *[self_225004], **kwargs_225005)
        
        
        # Call to __init__(...): (line 613)
        # Processing the call arguments (line 613)
        # Getting the type of 'self' (line 613)
        self_225009 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 613, 36), 'self', False)
        # Getting the type of 'canvas' (line 613)
        canvas_225010 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 613, 42), 'canvas', False)
        # Processing the call keyword arguments (line 613)
        kwargs_225011 = {}
        # Getting the type of 'NavigationToolbar2' (line 613)
        NavigationToolbar2_225007 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 613, 8), 'NavigationToolbar2', False)
        # Obtaining the member '__init__' of a type (line 613)
        init___225008 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 613, 8), NavigationToolbar2_225007, '__init__')
        # Calling __init__(args, kwargs) (line 613)
        init___call_result_225012 = invoke(stypy.reporting.localization.Localization(__file__, 613, 8), init___225008, *[self_225009, canvas_225010], **kwargs_225011)
        
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def set_message(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'set_message'
        module_type_store = module_type_store.open_function_context('set_message', 615, 4, False)
        # Assigning a type to the variable 'self' (line 616)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 616, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        NavigationToolbar2GTK.set_message.__dict__.__setitem__('stypy_localization', localization)
        NavigationToolbar2GTK.set_message.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        NavigationToolbar2GTK.set_message.__dict__.__setitem__('stypy_type_store', module_type_store)
        NavigationToolbar2GTK.set_message.__dict__.__setitem__('stypy_function_name', 'NavigationToolbar2GTK.set_message')
        NavigationToolbar2GTK.set_message.__dict__.__setitem__('stypy_param_names_list', ['s'])
        NavigationToolbar2GTK.set_message.__dict__.__setitem__('stypy_varargs_param_name', None)
        NavigationToolbar2GTK.set_message.__dict__.__setitem__('stypy_kwargs_param_name', None)
        NavigationToolbar2GTK.set_message.__dict__.__setitem__('stypy_call_defaults', defaults)
        NavigationToolbar2GTK.set_message.__dict__.__setitem__('stypy_call_varargs', varargs)
        NavigationToolbar2GTK.set_message.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        NavigationToolbar2GTK.set_message.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'NavigationToolbar2GTK.set_message', ['s'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'set_message', localization, ['s'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'set_message(...)' code ##################

        
        # Call to set_label(...): (line 616)
        # Processing the call arguments (line 616)
        # Getting the type of 's' (line 616)
        s_225016 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 616, 31), 's', False)
        # Processing the call keyword arguments (line 616)
        kwargs_225017 = {}
        # Getting the type of 'self' (line 616)
        self_225013 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 616, 8), 'self', False)
        # Obtaining the member 'message' of a type (line 616)
        message_225014 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 616, 8), self_225013, 'message')
        # Obtaining the member 'set_label' of a type (line 616)
        set_label_225015 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 616, 8), message_225014, 'set_label')
        # Calling set_label(args, kwargs) (line 616)
        set_label_call_result_225018 = invoke(stypy.reporting.localization.Localization(__file__, 616, 8), set_label_225015, *[s_225016], **kwargs_225017)
        
        
        # ################# End of 'set_message(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'set_message' in the type store
        # Getting the type of 'stypy_return_type' (line 615)
        stypy_return_type_225019 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 615, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_225019)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'set_message'
        return stypy_return_type_225019


    @norecursion
    def set_cursor(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'set_cursor'
        module_type_store = module_type_store.open_function_context('set_cursor', 618, 4, False)
        # Assigning a type to the variable 'self' (line 619)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 619, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        NavigationToolbar2GTK.set_cursor.__dict__.__setitem__('stypy_localization', localization)
        NavigationToolbar2GTK.set_cursor.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        NavigationToolbar2GTK.set_cursor.__dict__.__setitem__('stypy_type_store', module_type_store)
        NavigationToolbar2GTK.set_cursor.__dict__.__setitem__('stypy_function_name', 'NavigationToolbar2GTK.set_cursor')
        NavigationToolbar2GTK.set_cursor.__dict__.__setitem__('stypy_param_names_list', ['cursor'])
        NavigationToolbar2GTK.set_cursor.__dict__.__setitem__('stypy_varargs_param_name', None)
        NavigationToolbar2GTK.set_cursor.__dict__.__setitem__('stypy_kwargs_param_name', None)
        NavigationToolbar2GTK.set_cursor.__dict__.__setitem__('stypy_call_defaults', defaults)
        NavigationToolbar2GTK.set_cursor.__dict__.__setitem__('stypy_call_varargs', varargs)
        NavigationToolbar2GTK.set_cursor.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        NavigationToolbar2GTK.set_cursor.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'NavigationToolbar2GTK.set_cursor', ['cursor'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'set_cursor', localization, ['cursor'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'set_cursor(...)' code ##################

        
        # Call to set_cursor(...): (line 619)
        # Processing the call arguments (line 619)
        
        # Obtaining the type of the subscript
        # Getting the type of 'cursor' (line 619)
        cursor_225024 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 619, 46), 'cursor', False)
        # Getting the type of 'cursord' (line 619)
        cursord_225025 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 619, 38), 'cursord', False)
        # Obtaining the member '__getitem__' of a type (line 619)
        getitem___225026 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 619, 38), cursord_225025, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 619)
        subscript_call_result_225027 = invoke(stypy.reporting.localization.Localization(__file__, 619, 38), getitem___225026, cursor_225024)
        
        # Processing the call keyword arguments (line 619)
        kwargs_225028 = {}
        # Getting the type of 'self' (line 619)
        self_225020 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 619, 8), 'self', False)
        # Obtaining the member 'canvas' of a type (line 619)
        canvas_225021 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 619, 8), self_225020, 'canvas')
        # Obtaining the member 'window' of a type (line 619)
        window_225022 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 619, 8), canvas_225021, 'window')
        # Obtaining the member 'set_cursor' of a type (line 619)
        set_cursor_225023 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 619, 8), window_225022, 'set_cursor')
        # Calling set_cursor(args, kwargs) (line 619)
        set_cursor_call_result_225029 = invoke(stypy.reporting.localization.Localization(__file__, 619, 8), set_cursor_225023, *[subscript_call_result_225027], **kwargs_225028)
        
        
        # Call to main_iteration(...): (line 620)
        # Processing the call keyword arguments (line 620)
        kwargs_225032 = {}
        # Getting the type of 'gtk' (line 620)
        gtk_225030 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 620, 8), 'gtk', False)
        # Obtaining the member 'main_iteration' of a type (line 620)
        main_iteration_225031 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 620, 8), gtk_225030, 'main_iteration')
        # Calling main_iteration(args, kwargs) (line 620)
        main_iteration_call_result_225033 = invoke(stypy.reporting.localization.Localization(__file__, 620, 8), main_iteration_225031, *[], **kwargs_225032)
        
        
        # ################# End of 'set_cursor(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'set_cursor' in the type store
        # Getting the type of 'stypy_return_type' (line 618)
        stypy_return_type_225034 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 618, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_225034)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'set_cursor'
        return stypy_return_type_225034


    @norecursion
    def release(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'release'
        module_type_store = module_type_store.open_function_context('release', 622, 4, False)
        # Assigning a type to the variable 'self' (line 623)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 623, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        NavigationToolbar2GTK.release.__dict__.__setitem__('stypy_localization', localization)
        NavigationToolbar2GTK.release.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        NavigationToolbar2GTK.release.__dict__.__setitem__('stypy_type_store', module_type_store)
        NavigationToolbar2GTK.release.__dict__.__setitem__('stypy_function_name', 'NavigationToolbar2GTK.release')
        NavigationToolbar2GTK.release.__dict__.__setitem__('stypy_param_names_list', ['event'])
        NavigationToolbar2GTK.release.__dict__.__setitem__('stypy_varargs_param_name', None)
        NavigationToolbar2GTK.release.__dict__.__setitem__('stypy_kwargs_param_name', None)
        NavigationToolbar2GTK.release.__dict__.__setitem__('stypy_call_defaults', defaults)
        NavigationToolbar2GTK.release.__dict__.__setitem__('stypy_call_varargs', varargs)
        NavigationToolbar2GTK.release.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        NavigationToolbar2GTK.release.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'NavigationToolbar2GTK.release', ['event'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'release', localization, ['event'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'release(...)' code ##################

        
        
        # SSA begins for try-except statement (line 623)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
        # Deleting a member
        # Getting the type of 'self' (line 623)
        self_225035 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 623, 13), 'self')
        module_type_store.del_member(stypy.reporting.localization.Localization(__file__, 623, 13), self_225035, '_pixmapBack')
        # SSA branch for the except part of a try statement (line 623)
        # SSA branch for the except 'AttributeError' branch of a try statement (line 623)
        module_type_store.open_ssa_branch('except')
        pass
        # SSA join for try-except statement (line 623)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'release(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'release' in the type store
        # Getting the type of 'stypy_return_type' (line 622)
        stypy_return_type_225036 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 622, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_225036)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'release'
        return stypy_return_type_225036


    @norecursion
    def draw_rubberband(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'draw_rubberband'
        module_type_store = module_type_store.open_function_context('draw_rubberband', 626, 4, False)
        # Assigning a type to the variable 'self' (line 627)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 627, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        NavigationToolbar2GTK.draw_rubberband.__dict__.__setitem__('stypy_localization', localization)
        NavigationToolbar2GTK.draw_rubberband.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        NavigationToolbar2GTK.draw_rubberband.__dict__.__setitem__('stypy_type_store', module_type_store)
        NavigationToolbar2GTK.draw_rubberband.__dict__.__setitem__('stypy_function_name', 'NavigationToolbar2GTK.draw_rubberband')
        NavigationToolbar2GTK.draw_rubberband.__dict__.__setitem__('stypy_param_names_list', ['event', 'x0', 'y0', 'x1', 'y1'])
        NavigationToolbar2GTK.draw_rubberband.__dict__.__setitem__('stypy_varargs_param_name', None)
        NavigationToolbar2GTK.draw_rubberband.__dict__.__setitem__('stypy_kwargs_param_name', None)
        NavigationToolbar2GTK.draw_rubberband.__dict__.__setitem__('stypy_call_defaults', defaults)
        NavigationToolbar2GTK.draw_rubberband.__dict__.__setitem__('stypy_call_varargs', varargs)
        NavigationToolbar2GTK.draw_rubberband.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        NavigationToolbar2GTK.draw_rubberband.__dict__.__setitem__('stypy_declared_arg_number', 6)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'NavigationToolbar2GTK.draw_rubberband', ['event', 'x0', 'y0', 'x1', 'y1'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'draw_rubberband', localization, ['event', 'x0', 'y0', 'x1', 'y1'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'draw_rubberband(...)' code ##################

        unicode_225037 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 627, 8), 'unicode', u'adapted from http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/189744')
        
        # Assigning a Attribute to a Name (line 628):
        
        # Assigning a Attribute to a Name (line 628):
        # Getting the type of 'self' (line 628)
        self_225038 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 628, 19), 'self')
        # Obtaining the member 'canvas' of a type (line 628)
        canvas_225039 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 628, 19), self_225038, 'canvas')
        # Obtaining the member 'window' of a type (line 628)
        window_225040 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 628, 19), canvas_225039, 'window')
        # Assigning a type to the variable 'drawable' (line 628)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 628, 8), 'drawable', window_225040)
        
        # Type idiom detected: calculating its left and rigth part (line 629)
        # Getting the type of 'drawable' (line 629)
        drawable_225041 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 629, 11), 'drawable')
        # Getting the type of 'None' (line 629)
        None_225042 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 629, 23), 'None')
        
        (may_be_225043, more_types_in_union_225044) = may_be_none(drawable_225041, None_225042)

        if may_be_225043:

            if more_types_in_union_225044:
                # Runtime conditional SSA (line 629)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            # Assigning a type to the variable 'stypy_return_type' (line 630)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 630, 12), 'stypy_return_type', types.NoneType)

            if more_types_in_union_225044:
                # SSA join for if statement (line 629)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Call to a Name (line 632):
        
        # Assigning a Call to a Name (line 632):
        
        # Call to new_gc(...): (line 632)
        # Processing the call keyword arguments (line 632)
        kwargs_225047 = {}
        # Getting the type of 'drawable' (line 632)
        drawable_225045 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 632, 13), 'drawable', False)
        # Obtaining the member 'new_gc' of a type (line 632)
        new_gc_225046 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 632, 13), drawable_225045, 'new_gc')
        # Calling new_gc(args, kwargs) (line 632)
        new_gc_call_result_225048 = invoke(stypy.reporting.localization.Localization(__file__, 632, 13), new_gc_225046, *[], **kwargs_225047)
        
        # Assigning a type to the variable 'gc' (line 632)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 632, 8), 'gc', new_gc_call_result_225048)
        
        # Assigning a Attribute to a Name (line 634):
        
        # Assigning a Attribute to a Name (line 634):
        # Getting the type of 'self' (line 634)
        self_225049 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 634, 17), 'self')
        # Obtaining the member 'canvas' of a type (line 634)
        canvas_225050 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 634, 17), self_225049, 'canvas')
        # Obtaining the member 'figure' of a type (line 634)
        figure_225051 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 634, 17), canvas_225050, 'figure')
        # Obtaining the member 'bbox' of a type (line 634)
        bbox_225052 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 634, 17), figure_225051, 'bbox')
        # Obtaining the member 'height' of a type (line 634)
        height_225053 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 634, 17), bbox_225052, 'height')
        # Assigning a type to the variable 'height' (line 634)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 634, 8), 'height', height_225053)
        
        # Assigning a BinOp to a Name (line 635):
        
        # Assigning a BinOp to a Name (line 635):
        # Getting the type of 'height' (line 635)
        height_225054 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 635, 13), 'height')
        # Getting the type of 'y1' (line 635)
        y1_225055 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 635, 22), 'y1')
        # Applying the binary operator '-' (line 635)
        result_sub_225056 = python_operator(stypy.reporting.localization.Localization(__file__, 635, 13), '-', height_225054, y1_225055)
        
        # Assigning a type to the variable 'y1' (line 635)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 635, 8), 'y1', result_sub_225056)
        
        # Assigning a BinOp to a Name (line 636):
        
        # Assigning a BinOp to a Name (line 636):
        # Getting the type of 'height' (line 636)
        height_225057 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 636, 13), 'height')
        # Getting the type of 'y0' (line 636)
        y0_225058 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 636, 22), 'y0')
        # Applying the binary operator '-' (line 636)
        result_sub_225059 = python_operator(stypy.reporting.localization.Localization(__file__, 636, 13), '-', height_225057, y0_225058)
        
        # Assigning a type to the variable 'y0' (line 636)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 636, 8), 'y0', result_sub_225059)
        
        # Assigning a Call to a Name (line 638):
        
        # Assigning a Call to a Name (line 638):
        
        # Call to abs(...): (line 638)
        # Processing the call arguments (line 638)
        # Getting the type of 'x1' (line 638)
        x1_225061 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 638, 16), 'x1', False)
        # Getting the type of 'x0' (line 638)
        x0_225062 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 638, 21), 'x0', False)
        # Applying the binary operator '-' (line 638)
        result_sub_225063 = python_operator(stypy.reporting.localization.Localization(__file__, 638, 16), '-', x1_225061, x0_225062)
        
        # Processing the call keyword arguments (line 638)
        kwargs_225064 = {}
        # Getting the type of 'abs' (line 638)
        abs_225060 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 638, 12), 'abs', False)
        # Calling abs(args, kwargs) (line 638)
        abs_call_result_225065 = invoke(stypy.reporting.localization.Localization(__file__, 638, 12), abs_225060, *[result_sub_225063], **kwargs_225064)
        
        # Assigning a type to the variable 'w' (line 638)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 638, 8), 'w', abs_call_result_225065)
        
        # Assigning a Call to a Name (line 639):
        
        # Assigning a Call to a Name (line 639):
        
        # Call to abs(...): (line 639)
        # Processing the call arguments (line 639)
        # Getting the type of 'y1' (line 639)
        y1_225067 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 639, 16), 'y1', False)
        # Getting the type of 'y0' (line 639)
        y0_225068 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 639, 21), 'y0', False)
        # Applying the binary operator '-' (line 639)
        result_sub_225069 = python_operator(stypy.reporting.localization.Localization(__file__, 639, 16), '-', y1_225067, y0_225068)
        
        # Processing the call keyword arguments (line 639)
        kwargs_225070 = {}
        # Getting the type of 'abs' (line 639)
        abs_225066 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 639, 12), 'abs', False)
        # Calling abs(args, kwargs) (line 639)
        abs_call_result_225071 = invoke(stypy.reporting.localization.Localization(__file__, 639, 12), abs_225066, *[result_sub_225069], **kwargs_225070)
        
        # Assigning a type to the variable 'h' (line 639)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 639, 8), 'h', abs_call_result_225071)
        
        # Assigning a ListComp to a Name (line 641):
        
        # Assigning a ListComp to a Name (line 641):
        # Calculating list comprehension
        # Calculating comprehension expression
        
        # Obtaining an instance of the builtin type 'tuple' (line 641)
        tuple_225076 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 641, 36), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 641)
        # Adding element type (line 641)
        
        # Call to min(...): (line 641)
        # Processing the call arguments (line 641)
        # Getting the type of 'x0' (line 641)
        x0_225078 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 641, 40), 'x0', False)
        # Getting the type of 'x1' (line 641)
        x1_225079 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 641, 43), 'x1', False)
        # Processing the call keyword arguments (line 641)
        kwargs_225080 = {}
        # Getting the type of 'min' (line 641)
        min_225077 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 641, 36), 'min', False)
        # Calling min(args, kwargs) (line 641)
        min_call_result_225081 = invoke(stypy.reporting.localization.Localization(__file__, 641, 36), min_225077, *[x0_225078, x1_225079], **kwargs_225080)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 641, 36), tuple_225076, min_call_result_225081)
        # Adding element type (line 641)
        
        # Call to min(...): (line 641)
        # Processing the call arguments (line 641)
        # Getting the type of 'y0' (line 641)
        y0_225083 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 641, 52), 'y0', False)
        # Getting the type of 'y1' (line 641)
        y1_225084 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 641, 56), 'y1', False)
        # Processing the call keyword arguments (line 641)
        kwargs_225085 = {}
        # Getting the type of 'min' (line 641)
        min_225082 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 641, 48), 'min', False)
        # Calling min(args, kwargs) (line 641)
        min_call_result_225086 = invoke(stypy.reporting.localization.Localization(__file__, 641, 48), min_225082, *[y0_225083, y1_225084], **kwargs_225085)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 641, 36), tuple_225076, min_call_result_225086)
        # Adding element type (line 641)
        # Getting the type of 'w' (line 641)
        w_225087 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 641, 61), 'w')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 641, 36), tuple_225076, w_225087)
        # Adding element type (line 641)
        # Getting the type of 'h' (line 641)
        h_225088 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 641, 64), 'h')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 641, 36), tuple_225076, h_225088)
        
        comprehension_225089 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 641, 16), tuple_225076)
        # Assigning a type to the variable 'val' (line 641)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 641, 16), 'val', comprehension_225089)
        
        # Call to int(...): (line 641)
        # Processing the call arguments (line 641)
        # Getting the type of 'val' (line 641)
        val_225073 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 641, 20), 'val', False)
        # Processing the call keyword arguments (line 641)
        kwargs_225074 = {}
        # Getting the type of 'int' (line 641)
        int_225072 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 641, 16), 'int', False)
        # Calling int(args, kwargs) (line 641)
        int_call_result_225075 = invoke(stypy.reporting.localization.Localization(__file__, 641, 16), int_225072, *[val_225073], **kwargs_225074)
        
        list_225090 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 641, 16), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 641, 16), list_225090, int_call_result_225075)
        # Assigning a type to the variable 'rect' (line 641)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 641, 8), 'rect', list_225090)
        
        
        # SSA begins for try-except statement (line 642)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
        
        # Assigning a Attribute to a Tuple (line 643):
        
        # Assigning a Subscript to a Name (line 643):
        
        # Obtaining the type of the subscript
        int_225091 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 643, 12), 'int')
        # Getting the type of 'self' (line 643)
        self_225092 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 643, 35), 'self')
        # Obtaining the member '_pixmapBack' of a type (line 643)
        _pixmapBack_225093 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 643, 35), self_225092, '_pixmapBack')
        # Obtaining the member '__getitem__' of a type (line 643)
        getitem___225094 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 643, 12), _pixmapBack_225093, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 643)
        subscript_call_result_225095 = invoke(stypy.reporting.localization.Localization(__file__, 643, 12), getitem___225094, int_225091)
        
        # Assigning a type to the variable 'tuple_var_assignment_223312' (line 643)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 643, 12), 'tuple_var_assignment_223312', subscript_call_result_225095)
        
        # Assigning a Subscript to a Name (line 643):
        
        # Obtaining the type of the subscript
        int_225096 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 643, 12), 'int')
        # Getting the type of 'self' (line 643)
        self_225097 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 643, 35), 'self')
        # Obtaining the member '_pixmapBack' of a type (line 643)
        _pixmapBack_225098 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 643, 35), self_225097, '_pixmapBack')
        # Obtaining the member '__getitem__' of a type (line 643)
        getitem___225099 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 643, 12), _pixmapBack_225098, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 643)
        subscript_call_result_225100 = invoke(stypy.reporting.localization.Localization(__file__, 643, 12), getitem___225099, int_225096)
        
        # Assigning a type to the variable 'tuple_var_assignment_223313' (line 643)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 643, 12), 'tuple_var_assignment_223313', subscript_call_result_225100)
        
        # Assigning a Name to a Name (line 643):
        # Getting the type of 'tuple_var_assignment_223312' (line 643)
        tuple_var_assignment_223312_225101 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 643, 12), 'tuple_var_assignment_223312')
        # Assigning a type to the variable 'lastrect' (line 643)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 643, 12), 'lastrect', tuple_var_assignment_223312_225101)
        
        # Assigning a Name to a Name (line 643):
        # Getting the type of 'tuple_var_assignment_223313' (line 643)
        tuple_var_assignment_223313_225102 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 643, 12), 'tuple_var_assignment_223313')
        # Assigning a type to the variable 'pixmapBack' (line 643)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 643, 22), 'pixmapBack', tuple_var_assignment_223313_225102)
        # SSA branch for the except part of a try statement (line 642)
        # SSA branch for the except 'AttributeError' branch of a try statement (line 642)
        module_type_store.open_ssa_branch('except')
        
        # Type idiom detected: calculating its left and rigth part (line 646)
        # Getting the type of 'event' (line 646)
        event_225103 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 646, 15), 'event')
        # Obtaining the member 'inaxes' of a type (line 646)
        inaxes_225104 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 646, 15), event_225103, 'inaxes')
        # Getting the type of 'None' (line 646)
        None_225105 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 646, 31), 'None')
        
        (may_be_225106, more_types_in_union_225107) = may_be_none(inaxes_225104, None_225105)

        if may_be_225106:

            if more_types_in_union_225107:
                # Runtime conditional SSA (line 646)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            # Assigning a type to the variable 'stypy_return_type' (line 647)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 647, 16), 'stypy_return_type', types.NoneType)

            if more_types_in_union_225107:
                # SSA join for if statement (line 646)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Attribute to a Name (line 649):
        
        # Assigning a Attribute to a Name (line 649):
        # Getting the type of 'event' (line 649)
        event_225108 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 649, 17), 'event')
        # Obtaining the member 'inaxes' of a type (line 649)
        inaxes_225109 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 649, 17), event_225108, 'inaxes')
        # Assigning a type to the variable 'ax' (line 649)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 649, 12), 'ax', inaxes_225109)
        
        # Assigning a ListComp to a Tuple (line 650):
        
        # Assigning a Subscript to a Name (line 650):
        
        # Obtaining the type of the subscript
        int_225110 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 650, 12), 'int')
        # Calculating list comprehension
        # Calculating comprehension expression
        # Getting the type of 'ax' (line 650)
        ax_225115 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 650, 43), 'ax')
        # Obtaining the member 'bbox' of a type (line 650)
        bbox_225116 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 650, 43), ax_225115, 'bbox')
        # Obtaining the member 'bounds' of a type (line 650)
        bounds_225117 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 650, 43), bbox_225116, 'bounds')
        comprehension_225118 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 650, 23), bounds_225117)
        # Assigning a type to the variable 'val' (line 650)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 650, 23), 'val', comprehension_225118)
        
        # Call to int(...): (line 650)
        # Processing the call arguments (line 650)
        # Getting the type of 'val' (line 650)
        val_225112 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 650, 27), 'val', False)
        # Processing the call keyword arguments (line 650)
        kwargs_225113 = {}
        # Getting the type of 'int' (line 650)
        int_225111 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 650, 23), 'int', False)
        # Calling int(args, kwargs) (line 650)
        int_call_result_225114 = invoke(stypy.reporting.localization.Localization(__file__, 650, 23), int_225111, *[val_225112], **kwargs_225113)
        
        list_225119 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 650, 23), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 650, 23), list_225119, int_call_result_225114)
        # Obtaining the member '__getitem__' of a type (line 650)
        getitem___225120 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 650, 12), list_225119, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 650)
        subscript_call_result_225121 = invoke(stypy.reporting.localization.Localization(__file__, 650, 12), getitem___225120, int_225110)
        
        # Assigning a type to the variable 'tuple_var_assignment_223314' (line 650)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 650, 12), 'tuple_var_assignment_223314', subscript_call_result_225121)
        
        # Assigning a Subscript to a Name (line 650):
        
        # Obtaining the type of the subscript
        int_225122 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 650, 12), 'int')
        # Calculating list comprehension
        # Calculating comprehension expression
        # Getting the type of 'ax' (line 650)
        ax_225127 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 650, 43), 'ax')
        # Obtaining the member 'bbox' of a type (line 650)
        bbox_225128 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 650, 43), ax_225127, 'bbox')
        # Obtaining the member 'bounds' of a type (line 650)
        bounds_225129 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 650, 43), bbox_225128, 'bounds')
        comprehension_225130 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 650, 23), bounds_225129)
        # Assigning a type to the variable 'val' (line 650)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 650, 23), 'val', comprehension_225130)
        
        # Call to int(...): (line 650)
        # Processing the call arguments (line 650)
        # Getting the type of 'val' (line 650)
        val_225124 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 650, 27), 'val', False)
        # Processing the call keyword arguments (line 650)
        kwargs_225125 = {}
        # Getting the type of 'int' (line 650)
        int_225123 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 650, 23), 'int', False)
        # Calling int(args, kwargs) (line 650)
        int_call_result_225126 = invoke(stypy.reporting.localization.Localization(__file__, 650, 23), int_225123, *[val_225124], **kwargs_225125)
        
        list_225131 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 650, 23), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 650, 23), list_225131, int_call_result_225126)
        # Obtaining the member '__getitem__' of a type (line 650)
        getitem___225132 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 650, 12), list_225131, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 650)
        subscript_call_result_225133 = invoke(stypy.reporting.localization.Localization(__file__, 650, 12), getitem___225132, int_225122)
        
        # Assigning a type to the variable 'tuple_var_assignment_223315' (line 650)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 650, 12), 'tuple_var_assignment_223315', subscript_call_result_225133)
        
        # Assigning a Subscript to a Name (line 650):
        
        # Obtaining the type of the subscript
        int_225134 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 650, 12), 'int')
        # Calculating list comprehension
        # Calculating comprehension expression
        # Getting the type of 'ax' (line 650)
        ax_225139 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 650, 43), 'ax')
        # Obtaining the member 'bbox' of a type (line 650)
        bbox_225140 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 650, 43), ax_225139, 'bbox')
        # Obtaining the member 'bounds' of a type (line 650)
        bounds_225141 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 650, 43), bbox_225140, 'bounds')
        comprehension_225142 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 650, 23), bounds_225141)
        # Assigning a type to the variable 'val' (line 650)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 650, 23), 'val', comprehension_225142)
        
        # Call to int(...): (line 650)
        # Processing the call arguments (line 650)
        # Getting the type of 'val' (line 650)
        val_225136 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 650, 27), 'val', False)
        # Processing the call keyword arguments (line 650)
        kwargs_225137 = {}
        # Getting the type of 'int' (line 650)
        int_225135 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 650, 23), 'int', False)
        # Calling int(args, kwargs) (line 650)
        int_call_result_225138 = invoke(stypy.reporting.localization.Localization(__file__, 650, 23), int_225135, *[val_225136], **kwargs_225137)
        
        list_225143 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 650, 23), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 650, 23), list_225143, int_call_result_225138)
        # Obtaining the member '__getitem__' of a type (line 650)
        getitem___225144 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 650, 12), list_225143, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 650)
        subscript_call_result_225145 = invoke(stypy.reporting.localization.Localization(__file__, 650, 12), getitem___225144, int_225134)
        
        # Assigning a type to the variable 'tuple_var_assignment_223316' (line 650)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 650, 12), 'tuple_var_assignment_223316', subscript_call_result_225145)
        
        # Assigning a Subscript to a Name (line 650):
        
        # Obtaining the type of the subscript
        int_225146 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 650, 12), 'int')
        # Calculating list comprehension
        # Calculating comprehension expression
        # Getting the type of 'ax' (line 650)
        ax_225151 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 650, 43), 'ax')
        # Obtaining the member 'bbox' of a type (line 650)
        bbox_225152 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 650, 43), ax_225151, 'bbox')
        # Obtaining the member 'bounds' of a type (line 650)
        bounds_225153 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 650, 43), bbox_225152, 'bounds')
        comprehension_225154 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 650, 23), bounds_225153)
        # Assigning a type to the variable 'val' (line 650)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 650, 23), 'val', comprehension_225154)
        
        # Call to int(...): (line 650)
        # Processing the call arguments (line 650)
        # Getting the type of 'val' (line 650)
        val_225148 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 650, 27), 'val', False)
        # Processing the call keyword arguments (line 650)
        kwargs_225149 = {}
        # Getting the type of 'int' (line 650)
        int_225147 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 650, 23), 'int', False)
        # Calling int(args, kwargs) (line 650)
        int_call_result_225150 = invoke(stypy.reporting.localization.Localization(__file__, 650, 23), int_225147, *[val_225148], **kwargs_225149)
        
        list_225155 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 650, 23), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 650, 23), list_225155, int_call_result_225150)
        # Obtaining the member '__getitem__' of a type (line 650)
        getitem___225156 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 650, 12), list_225155, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 650)
        subscript_call_result_225157 = invoke(stypy.reporting.localization.Localization(__file__, 650, 12), getitem___225156, int_225146)
        
        # Assigning a type to the variable 'tuple_var_assignment_223317' (line 650)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 650, 12), 'tuple_var_assignment_223317', subscript_call_result_225157)
        
        # Assigning a Name to a Name (line 650):
        # Getting the type of 'tuple_var_assignment_223314' (line 650)
        tuple_var_assignment_223314_225158 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 650, 12), 'tuple_var_assignment_223314')
        # Assigning a type to the variable 'l' (line 650)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 650, 12), 'l', tuple_var_assignment_223314_225158)
        
        # Assigning a Name to a Name (line 650):
        # Getting the type of 'tuple_var_assignment_223315' (line 650)
        tuple_var_assignment_223315_225159 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 650, 12), 'tuple_var_assignment_223315')
        # Assigning a type to the variable 'b' (line 650)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 650, 14), 'b', tuple_var_assignment_223315_225159)
        
        # Assigning a Name to a Name (line 650):
        # Getting the type of 'tuple_var_assignment_223316' (line 650)
        tuple_var_assignment_223316_225160 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 650, 12), 'tuple_var_assignment_223316')
        # Assigning a type to the variable 'w' (line 650)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 650, 16), 'w', tuple_var_assignment_223316_225160)
        
        # Assigning a Name to a Name (line 650):
        # Getting the type of 'tuple_var_assignment_223317' (line 650)
        tuple_var_assignment_223317_225161 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 650, 12), 'tuple_var_assignment_223317')
        # Assigning a type to the variable 'h' (line 650)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 650, 18), 'h', tuple_var_assignment_223317_225161)
        
        # Assigning a BinOp to a Name (line 651):
        
        # Assigning a BinOp to a Name (line 651):
        
        # Call to int(...): (line 651)
        # Processing the call arguments (line 651)
        # Getting the type of 'height' (line 651)
        height_225163 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 651, 20), 'height', False)
        # Processing the call keyword arguments (line 651)
        kwargs_225164 = {}
        # Getting the type of 'int' (line 651)
        int_225162 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 651, 16), 'int', False)
        # Calling int(args, kwargs) (line 651)
        int_call_result_225165 = invoke(stypy.reporting.localization.Localization(__file__, 651, 16), int_225162, *[height_225163], **kwargs_225164)
        
        # Getting the type of 'b' (line 651)
        b_225166 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 651, 29), 'b')
        # Getting the type of 'h' (line 651)
        h_225167 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 651, 31), 'h')
        # Applying the binary operator '+' (line 651)
        result_add_225168 = python_operator(stypy.reporting.localization.Localization(__file__, 651, 29), '+', b_225166, h_225167)
        
        # Applying the binary operator '-' (line 651)
        result_sub_225169 = python_operator(stypy.reporting.localization.Localization(__file__, 651, 16), '-', int_call_result_225165, result_add_225168)
        
        # Assigning a type to the variable 'b' (line 651)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 651, 12), 'b', result_sub_225169)
        
        # Assigning a Tuple to a Name (line 652):
        
        # Assigning a Tuple to a Name (line 652):
        
        # Obtaining an instance of the builtin type 'tuple' (line 652)
        tuple_225170 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 652, 21), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 652)
        # Adding element type (line 652)
        # Getting the type of 'l' (line 652)
        l_225171 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 652, 21), 'l')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 652, 21), tuple_225170, l_225171)
        # Adding element type (line 652)
        # Getting the type of 'b' (line 652)
        b_225172 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 652, 23), 'b')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 652, 21), tuple_225170, b_225172)
        # Adding element type (line 652)
        # Getting the type of 'w' (line 652)
        w_225173 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 652, 25), 'w')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 652, 21), tuple_225170, w_225173)
        # Adding element type (line 652)
        # Getting the type of 'h' (line 652)
        h_225174 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 652, 27), 'h')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 652, 21), tuple_225170, h_225174)
        
        # Assigning a type to the variable 'axrect' (line 652)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 652, 12), 'axrect', tuple_225170)
        
        # Assigning a Tuple to a Attribute (line 653):
        
        # Assigning a Tuple to a Attribute (line 653):
        
        # Obtaining an instance of the builtin type 'tuple' (line 653)
        tuple_225175 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 653, 31), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 653)
        # Adding element type (line 653)
        # Getting the type of 'axrect' (line 653)
        axrect_225176 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 653, 31), 'axrect')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 653, 31), tuple_225175, axrect_225176)
        # Adding element type (line 653)
        
        # Call to Pixmap(...): (line 653)
        # Processing the call arguments (line 653)
        # Getting the type of 'drawable' (line 653)
        drawable_225180 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 653, 54), 'drawable', False)
        # Getting the type of 'w' (line 653)
        w_225181 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 653, 64), 'w', False)
        # Getting the type of 'h' (line 653)
        h_225182 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 653, 67), 'h', False)
        # Processing the call keyword arguments (line 653)
        kwargs_225183 = {}
        # Getting the type of 'gtk' (line 653)
        gtk_225177 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 653, 39), 'gtk', False)
        # Obtaining the member 'gdk' of a type (line 653)
        gdk_225178 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 653, 39), gtk_225177, 'gdk')
        # Obtaining the member 'Pixmap' of a type (line 653)
        Pixmap_225179 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 653, 39), gdk_225178, 'Pixmap')
        # Calling Pixmap(args, kwargs) (line 653)
        Pixmap_call_result_225184 = invoke(stypy.reporting.localization.Localization(__file__, 653, 39), Pixmap_225179, *[drawable_225180, w_225181, h_225182], **kwargs_225183)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 653, 31), tuple_225175, Pixmap_call_result_225184)
        
        # Getting the type of 'self' (line 653)
        self_225185 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 653, 12), 'self')
        # Setting the type of the member '_pixmapBack' of a type (line 653)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 653, 12), self_225185, '_pixmapBack', tuple_225175)
        
        # Call to draw_drawable(...): (line 654)
        # Processing the call arguments (line 654)
        # Getting the type of 'gc' (line 654)
        gc_225192 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 654, 46), 'gc', False)
        # Getting the type of 'drawable' (line 654)
        drawable_225193 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 654, 50), 'drawable', False)
        # Getting the type of 'l' (line 654)
        l_225194 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 654, 60), 'l', False)
        # Getting the type of 'b' (line 654)
        b_225195 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 654, 63), 'b', False)
        int_225196 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 654, 66), 'int')
        int_225197 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 654, 69), 'int')
        # Getting the type of 'w' (line 654)
        w_225198 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 654, 72), 'w', False)
        # Getting the type of 'h' (line 654)
        h_225199 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 654, 75), 'h', False)
        # Processing the call keyword arguments (line 654)
        kwargs_225200 = {}
        
        # Obtaining the type of the subscript
        int_225186 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 654, 29), 'int')
        # Getting the type of 'self' (line 654)
        self_225187 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 654, 12), 'self', False)
        # Obtaining the member '_pixmapBack' of a type (line 654)
        _pixmapBack_225188 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 654, 12), self_225187, '_pixmapBack')
        # Obtaining the member '__getitem__' of a type (line 654)
        getitem___225189 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 654, 12), _pixmapBack_225188, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 654)
        subscript_call_result_225190 = invoke(stypy.reporting.localization.Localization(__file__, 654, 12), getitem___225189, int_225186)
        
        # Obtaining the member 'draw_drawable' of a type (line 654)
        draw_drawable_225191 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 654, 12), subscript_call_result_225190, 'draw_drawable')
        # Calling draw_drawable(args, kwargs) (line 654)
        draw_drawable_call_result_225201 = invoke(stypy.reporting.localization.Localization(__file__, 654, 12), draw_drawable_225191, *[gc_225192, drawable_225193, l_225194, b_225195, int_225196, int_225197, w_225198, h_225199], **kwargs_225200)
        
        # SSA branch for the else branch of a try statement (line 642)
        module_type_store.open_ssa_branch('except else')
        
        # Call to draw_drawable(...): (line 656)
        # Processing the call arguments (line 656)
        # Getting the type of 'gc' (line 656)
        gc_225204 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 656, 35), 'gc', False)
        # Getting the type of 'pixmapBack' (line 656)
        pixmapBack_225205 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 656, 39), 'pixmapBack', False)
        int_225206 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 656, 51), 'int')
        int_225207 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 656, 54), 'int')
        # Getting the type of 'lastrect' (line 656)
        lastrect_225208 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 656, 58), 'lastrect', False)
        # Processing the call keyword arguments (line 656)
        kwargs_225209 = {}
        # Getting the type of 'drawable' (line 656)
        drawable_225202 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 656, 12), 'drawable', False)
        # Obtaining the member 'draw_drawable' of a type (line 656)
        draw_drawable_225203 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 656, 12), drawable_225202, 'draw_drawable')
        # Calling draw_drawable(args, kwargs) (line 656)
        draw_drawable_call_result_225210 = invoke(stypy.reporting.localization.Localization(__file__, 656, 12), draw_drawable_225203, *[gc_225204, pixmapBack_225205, int_225206, int_225207, lastrect_225208], **kwargs_225209)
        
        # SSA join for try-except statement (line 642)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to draw_rectangle(...): (line 657)
        # Processing the call arguments (line 657)
        # Getting the type of 'gc' (line 657)
        gc_225213 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 657, 32), 'gc', False)
        # Getting the type of 'False' (line 657)
        False_225214 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 657, 36), 'False', False)
        # Getting the type of 'rect' (line 657)
        rect_225215 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 657, 44), 'rect', False)
        # Processing the call keyword arguments (line 657)
        kwargs_225216 = {}
        # Getting the type of 'drawable' (line 657)
        drawable_225211 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 657, 8), 'drawable', False)
        # Obtaining the member 'draw_rectangle' of a type (line 657)
        draw_rectangle_225212 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 657, 8), drawable_225211, 'draw_rectangle')
        # Calling draw_rectangle(args, kwargs) (line 657)
        draw_rectangle_call_result_225217 = invoke(stypy.reporting.localization.Localization(__file__, 657, 8), draw_rectangle_225212, *[gc_225213, False_225214, rect_225215], **kwargs_225216)
        
        
        # ################# End of 'draw_rubberband(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'draw_rubberband' in the type store
        # Getting the type of 'stypy_return_type' (line 626)
        stypy_return_type_225218 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 626, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_225218)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'draw_rubberband'
        return stypy_return_type_225218


    @norecursion
    def _init_toolbar(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_init_toolbar'
        module_type_store = module_type_store.open_function_context('_init_toolbar', 660, 4, False)
        # Assigning a type to the variable 'self' (line 661)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 661, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        NavigationToolbar2GTK._init_toolbar.__dict__.__setitem__('stypy_localization', localization)
        NavigationToolbar2GTK._init_toolbar.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        NavigationToolbar2GTK._init_toolbar.__dict__.__setitem__('stypy_type_store', module_type_store)
        NavigationToolbar2GTK._init_toolbar.__dict__.__setitem__('stypy_function_name', 'NavigationToolbar2GTK._init_toolbar')
        NavigationToolbar2GTK._init_toolbar.__dict__.__setitem__('stypy_param_names_list', [])
        NavigationToolbar2GTK._init_toolbar.__dict__.__setitem__('stypy_varargs_param_name', None)
        NavigationToolbar2GTK._init_toolbar.__dict__.__setitem__('stypy_kwargs_param_name', None)
        NavigationToolbar2GTK._init_toolbar.__dict__.__setitem__('stypy_call_defaults', defaults)
        NavigationToolbar2GTK._init_toolbar.__dict__.__setitem__('stypy_call_varargs', varargs)
        NavigationToolbar2GTK._init_toolbar.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        NavigationToolbar2GTK._init_toolbar.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'NavigationToolbar2GTK._init_toolbar', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_init_toolbar', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_init_toolbar(...)' code ##################

        
        # Call to set_style(...): (line 661)
        # Processing the call arguments (line 661)
        # Getting the type of 'gtk' (line 661)
        gtk_225221 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 661, 23), 'gtk', False)
        # Obtaining the member 'TOOLBAR_ICONS' of a type (line 661)
        TOOLBAR_ICONS_225222 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 661, 23), gtk_225221, 'TOOLBAR_ICONS')
        # Processing the call keyword arguments (line 661)
        kwargs_225223 = {}
        # Getting the type of 'self' (line 661)
        self_225219 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 661, 8), 'self', False)
        # Obtaining the member 'set_style' of a type (line 661)
        set_style_225220 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 661, 8), self_225219, 'set_style')
        # Calling set_style(args, kwargs) (line 661)
        set_style_call_result_225224 = invoke(stypy.reporting.localization.Localization(__file__, 661, 8), set_style_225220, *[TOOLBAR_ICONS_225222], **kwargs_225223)
        
        
        # Call to _init_toolbar2_4(...): (line 662)
        # Processing the call keyword arguments (line 662)
        kwargs_225227 = {}
        # Getting the type of 'self' (line 662)
        self_225225 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 662, 8), 'self', False)
        # Obtaining the member '_init_toolbar2_4' of a type (line 662)
        _init_toolbar2_4_225226 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 662, 8), self_225225, '_init_toolbar2_4')
        # Calling _init_toolbar2_4(args, kwargs) (line 662)
        _init_toolbar2_4_call_result_225228 = invoke(stypy.reporting.localization.Localization(__file__, 662, 8), _init_toolbar2_4_225226, *[], **kwargs_225227)
        
        
        # ################# End of '_init_toolbar(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_init_toolbar' in the type store
        # Getting the type of 'stypy_return_type' (line 660)
        stypy_return_type_225229 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 660, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_225229)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_init_toolbar'
        return stypy_return_type_225229


    @norecursion
    def _init_toolbar2_4(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_init_toolbar2_4'
        module_type_store = module_type_store.open_function_context('_init_toolbar2_4', 665, 4, False)
        # Assigning a type to the variable 'self' (line 666)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 666, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        NavigationToolbar2GTK._init_toolbar2_4.__dict__.__setitem__('stypy_localization', localization)
        NavigationToolbar2GTK._init_toolbar2_4.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        NavigationToolbar2GTK._init_toolbar2_4.__dict__.__setitem__('stypy_type_store', module_type_store)
        NavigationToolbar2GTK._init_toolbar2_4.__dict__.__setitem__('stypy_function_name', 'NavigationToolbar2GTK._init_toolbar2_4')
        NavigationToolbar2GTK._init_toolbar2_4.__dict__.__setitem__('stypy_param_names_list', [])
        NavigationToolbar2GTK._init_toolbar2_4.__dict__.__setitem__('stypy_varargs_param_name', None)
        NavigationToolbar2GTK._init_toolbar2_4.__dict__.__setitem__('stypy_kwargs_param_name', None)
        NavigationToolbar2GTK._init_toolbar2_4.__dict__.__setitem__('stypy_call_defaults', defaults)
        NavigationToolbar2GTK._init_toolbar2_4.__dict__.__setitem__('stypy_call_varargs', varargs)
        NavigationToolbar2GTK._init_toolbar2_4.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        NavigationToolbar2GTK._init_toolbar2_4.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'NavigationToolbar2GTK._init_toolbar2_4', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_init_toolbar2_4', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_init_toolbar2_4(...)' code ##################

        
        # Assigning a Call to a Name (line 666):
        
        # Assigning a Call to a Name (line 666):
        
        # Call to join(...): (line 666)
        # Processing the call arguments (line 666)
        
        # Obtaining the type of the subscript
        unicode_225233 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 666, 40), 'unicode', u'datapath')
        # Getting the type of 'rcParams' (line 666)
        rcParams_225234 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 666, 31), 'rcParams', False)
        # Obtaining the member '__getitem__' of a type (line 666)
        getitem___225235 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 666, 31), rcParams_225234, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 666)
        subscript_call_result_225236 = invoke(stypy.reporting.localization.Localization(__file__, 666, 31), getitem___225235, unicode_225233)
        
        unicode_225237 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 666, 52), 'unicode', u'images')
        # Processing the call keyword arguments (line 666)
        kwargs_225238 = {}
        # Getting the type of 'os' (line 666)
        os_225230 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 666, 18), 'os', False)
        # Obtaining the member 'path' of a type (line 666)
        path_225231 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 666, 18), os_225230, 'path')
        # Obtaining the member 'join' of a type (line 666)
        join_225232 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 666, 18), path_225231, 'join')
        # Calling join(args, kwargs) (line 666)
        join_call_result_225239 = invoke(stypy.reporting.localization.Localization(__file__, 666, 18), join_225232, *[subscript_call_result_225236, unicode_225237], **kwargs_225238)
        
        # Assigning a type to the variable 'basedir' (line 666)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 666, 8), 'basedir', join_call_result_225239)
        
        
        # Getting the type of '_new_tooltip_api' (line 667)
        _new_tooltip_api_225240 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 667, 15), '_new_tooltip_api')
        # Applying the 'not' unary operator (line 667)
        result_not__225241 = python_operator(stypy.reporting.localization.Localization(__file__, 667, 11), 'not', _new_tooltip_api_225240)
        
        # Testing the type of an if condition (line 667)
        if_condition_225242 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 667, 8), result_not__225241)
        # Assigning a type to the variable 'if_condition_225242' (line 667)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 667, 8), 'if_condition_225242', if_condition_225242)
        # SSA begins for if statement (line 667)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Attribute (line 668):
        
        # Assigning a Call to a Attribute (line 668):
        
        # Call to Tooltips(...): (line 668)
        # Processing the call keyword arguments (line 668)
        kwargs_225245 = {}
        # Getting the type of 'gtk' (line 668)
        gtk_225243 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 668, 28), 'gtk', False)
        # Obtaining the member 'Tooltips' of a type (line 668)
        Tooltips_225244 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 668, 28), gtk_225243, 'Tooltips')
        # Calling Tooltips(args, kwargs) (line 668)
        Tooltips_call_result_225246 = invoke(stypy.reporting.localization.Localization(__file__, 668, 28), Tooltips_225244, *[], **kwargs_225245)
        
        # Getting the type of 'self' (line 668)
        self_225247 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 668, 12), 'self')
        # Setting the type of the member 'tooltips' of a type (line 668)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 668, 12), self_225247, 'tooltips', Tooltips_call_result_225246)
        # SSA join for if statement (line 667)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'self' (line 670)
        self_225248 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 670, 56), 'self')
        # Obtaining the member 'toolitems' of a type (line 670)
        toolitems_225249 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 670, 56), self_225248, 'toolitems')
        # Testing the type of a for loop iterable (line 670)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 670, 8), toolitems_225249)
        # Getting the type of the for loop variable (line 670)
        for_loop_var_225250 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 670, 8), toolitems_225249)
        # Assigning a type to the variable 'text' (line 670)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 670, 8), 'text', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 670, 8), for_loop_var_225250))
        # Assigning a type to the variable 'tooltip_text' (line 670)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 670, 8), 'tooltip_text', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 670, 8), for_loop_var_225250))
        # Assigning a type to the variable 'image_file' (line 670)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 670, 8), 'image_file', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 670, 8), for_loop_var_225250))
        # Assigning a type to the variable 'callback' (line 670)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 670, 8), 'callback', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 670, 8), for_loop_var_225250))
        # SSA begins for a for statement (line 670)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Type idiom detected: calculating its left and rigth part (line 671)
        # Getting the type of 'text' (line 671)
        text_225251 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 671, 15), 'text')
        # Getting the type of 'None' (line 671)
        None_225252 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 671, 23), 'None')
        
        (may_be_225253, more_types_in_union_225254) = may_be_none(text_225251, None_225252)

        if may_be_225253:

            if more_types_in_union_225254:
                # Runtime conditional SSA (line 671)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Call to insert(...): (line 672)
            # Processing the call arguments (line 672)
            
            # Call to SeparatorToolItem(...): (line 672)
            # Processing the call keyword arguments (line 672)
            kwargs_225259 = {}
            # Getting the type of 'gtk' (line 672)
            gtk_225257 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 672, 29), 'gtk', False)
            # Obtaining the member 'SeparatorToolItem' of a type (line 672)
            SeparatorToolItem_225258 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 672, 29), gtk_225257, 'SeparatorToolItem')
            # Calling SeparatorToolItem(args, kwargs) (line 672)
            SeparatorToolItem_call_result_225260 = invoke(stypy.reporting.localization.Localization(__file__, 672, 29), SeparatorToolItem_225258, *[], **kwargs_225259)
            
            int_225261 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 672, 54), 'int')
            # Processing the call keyword arguments (line 672)
            kwargs_225262 = {}
            # Getting the type of 'self' (line 672)
            self_225255 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 672, 16), 'self', False)
            # Obtaining the member 'insert' of a type (line 672)
            insert_225256 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 672, 16), self_225255, 'insert')
            # Calling insert(args, kwargs) (line 672)
            insert_call_result_225263 = invoke(stypy.reporting.localization.Localization(__file__, 672, 16), insert_225256, *[SeparatorToolItem_call_result_225260, int_225261], **kwargs_225262)
            

            if more_types_in_union_225254:
                # SSA join for if statement (line 671)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Call to a Name (line 674):
        
        # Assigning a Call to a Name (line 674):
        
        # Call to join(...): (line 674)
        # Processing the call arguments (line 674)
        # Getting the type of 'basedir' (line 674)
        basedir_225267 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 674, 33), 'basedir', False)
        # Getting the type of 'image_file' (line 674)
        image_file_225268 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 674, 42), 'image_file', False)
        unicode_225269 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 674, 55), 'unicode', u'.png')
        # Applying the binary operator '+' (line 674)
        result_add_225270 = python_operator(stypy.reporting.localization.Localization(__file__, 674, 42), '+', image_file_225268, unicode_225269)
        
        # Processing the call keyword arguments (line 674)
        kwargs_225271 = {}
        # Getting the type of 'os' (line 674)
        os_225264 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 674, 20), 'os', False)
        # Obtaining the member 'path' of a type (line 674)
        path_225265 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 674, 20), os_225264, 'path')
        # Obtaining the member 'join' of a type (line 674)
        join_225266 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 674, 20), path_225265, 'join')
        # Calling join(args, kwargs) (line 674)
        join_call_result_225272 = invoke(stypy.reporting.localization.Localization(__file__, 674, 20), join_225266, *[basedir_225267, result_add_225270], **kwargs_225271)
        
        # Assigning a type to the variable 'fname' (line 674)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 674, 12), 'fname', join_call_result_225272)
        
        # Assigning a Call to a Name (line 675):
        
        # Assigning a Call to a Name (line 675):
        
        # Call to Image(...): (line 675)
        # Processing the call keyword arguments (line 675)
        kwargs_225275 = {}
        # Getting the type of 'gtk' (line 675)
        gtk_225273 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 675, 20), 'gtk', False)
        # Obtaining the member 'Image' of a type (line 675)
        Image_225274 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 675, 20), gtk_225273, 'Image')
        # Calling Image(args, kwargs) (line 675)
        Image_call_result_225276 = invoke(stypy.reporting.localization.Localization(__file__, 675, 20), Image_225274, *[], **kwargs_225275)
        
        # Assigning a type to the variable 'image' (line 675)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 675, 12), 'image', Image_call_result_225276)
        
        # Call to set_from_file(...): (line 676)
        # Processing the call arguments (line 676)
        # Getting the type of 'fname' (line 676)
        fname_225279 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 676, 32), 'fname', False)
        # Processing the call keyword arguments (line 676)
        kwargs_225280 = {}
        # Getting the type of 'image' (line 676)
        image_225277 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 676, 12), 'image', False)
        # Obtaining the member 'set_from_file' of a type (line 676)
        set_from_file_225278 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 676, 12), image_225277, 'set_from_file')
        # Calling set_from_file(args, kwargs) (line 676)
        set_from_file_call_result_225281 = invoke(stypy.reporting.localization.Localization(__file__, 676, 12), set_from_file_225278, *[fname_225279], **kwargs_225280)
        
        
        # Assigning a Call to a Name (line 677):
        
        # Assigning a Call to a Name (line 677):
        
        # Call to ToolButton(...): (line 677)
        # Processing the call arguments (line 677)
        # Getting the type of 'image' (line 677)
        image_225284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 677, 37), 'image', False)
        # Getting the type of 'text' (line 677)
        text_225285 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 677, 44), 'text', False)
        # Processing the call keyword arguments (line 677)
        kwargs_225286 = {}
        # Getting the type of 'gtk' (line 677)
        gtk_225282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 677, 22), 'gtk', False)
        # Obtaining the member 'ToolButton' of a type (line 677)
        ToolButton_225283 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 677, 22), gtk_225282, 'ToolButton')
        # Calling ToolButton(args, kwargs) (line 677)
        ToolButton_call_result_225287 = invoke(stypy.reporting.localization.Localization(__file__, 677, 22), ToolButton_225283, *[image_225284, text_225285], **kwargs_225286)
        
        # Assigning a type to the variable 'tbutton' (line 677)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 677, 12), 'tbutton', ToolButton_call_result_225287)
        
        # Call to insert(...): (line 678)
        # Processing the call arguments (line 678)
        # Getting the type of 'tbutton' (line 678)
        tbutton_225290 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 678, 24), 'tbutton', False)
        int_225291 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 678, 33), 'int')
        # Processing the call keyword arguments (line 678)
        kwargs_225292 = {}
        # Getting the type of 'self' (line 678)
        self_225288 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 678, 12), 'self', False)
        # Obtaining the member 'insert' of a type (line 678)
        insert_225289 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 678, 12), self_225288, 'insert')
        # Calling insert(args, kwargs) (line 678)
        insert_call_result_225293 = invoke(stypy.reporting.localization.Localization(__file__, 678, 12), insert_225289, *[tbutton_225290, int_225291], **kwargs_225292)
        
        
        # Call to connect(...): (line 679)
        # Processing the call arguments (line 679)
        unicode_225296 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 679, 28), 'unicode', u'clicked')
        
        # Call to getattr(...): (line 679)
        # Processing the call arguments (line 679)
        # Getting the type of 'self' (line 679)
        self_225298 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 679, 47), 'self', False)
        # Getting the type of 'callback' (line 679)
        callback_225299 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 679, 53), 'callback', False)
        # Processing the call keyword arguments (line 679)
        kwargs_225300 = {}
        # Getting the type of 'getattr' (line 679)
        getattr_225297 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 679, 39), 'getattr', False)
        # Calling getattr(args, kwargs) (line 679)
        getattr_call_result_225301 = invoke(stypy.reporting.localization.Localization(__file__, 679, 39), getattr_225297, *[self_225298, callback_225299], **kwargs_225300)
        
        # Processing the call keyword arguments (line 679)
        kwargs_225302 = {}
        # Getting the type of 'tbutton' (line 679)
        tbutton_225294 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 679, 12), 'tbutton', False)
        # Obtaining the member 'connect' of a type (line 679)
        connect_225295 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 679, 12), tbutton_225294, 'connect')
        # Calling connect(args, kwargs) (line 679)
        connect_call_result_225303 = invoke(stypy.reporting.localization.Localization(__file__, 679, 12), connect_225295, *[unicode_225296, getattr_call_result_225301], **kwargs_225302)
        
        
        # Getting the type of '_new_tooltip_api' (line 680)
        _new_tooltip_api_225304 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 680, 15), '_new_tooltip_api')
        # Testing the type of an if condition (line 680)
        if_condition_225305 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 680, 12), _new_tooltip_api_225304)
        # Assigning a type to the variable 'if_condition_225305' (line 680)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 680, 12), 'if_condition_225305', if_condition_225305)
        # SSA begins for if statement (line 680)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to set_tooltip_text(...): (line 681)
        # Processing the call arguments (line 681)
        # Getting the type of 'tooltip_text' (line 681)
        tooltip_text_225308 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 681, 41), 'tooltip_text', False)
        # Processing the call keyword arguments (line 681)
        kwargs_225309 = {}
        # Getting the type of 'tbutton' (line 681)
        tbutton_225306 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 681, 16), 'tbutton', False)
        # Obtaining the member 'set_tooltip_text' of a type (line 681)
        set_tooltip_text_225307 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 681, 16), tbutton_225306, 'set_tooltip_text')
        # Calling set_tooltip_text(args, kwargs) (line 681)
        set_tooltip_text_call_result_225310 = invoke(stypy.reporting.localization.Localization(__file__, 681, 16), set_tooltip_text_225307, *[tooltip_text_225308], **kwargs_225309)
        
        # SSA branch for the else part of an if statement (line 680)
        module_type_store.open_ssa_branch('else')
        
        # Call to set_tooltip(...): (line 683)
        # Processing the call arguments (line 683)
        # Getting the type of 'self' (line 683)
        self_225313 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 683, 36), 'self', False)
        # Obtaining the member 'tooltips' of a type (line 683)
        tooltips_225314 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 683, 36), self_225313, 'tooltips')
        # Getting the type of 'tooltip_text' (line 683)
        tooltip_text_225315 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 683, 51), 'tooltip_text', False)
        unicode_225316 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 683, 65), 'unicode', u'Private')
        # Processing the call keyword arguments (line 683)
        kwargs_225317 = {}
        # Getting the type of 'tbutton' (line 683)
        tbutton_225311 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 683, 16), 'tbutton', False)
        # Obtaining the member 'set_tooltip' of a type (line 683)
        set_tooltip_225312 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 683, 16), tbutton_225311, 'set_tooltip')
        # Calling set_tooltip(args, kwargs) (line 683)
        set_tooltip_call_result_225318 = invoke(stypy.reporting.localization.Localization(__file__, 683, 16), set_tooltip_225312, *[tooltips_225314, tooltip_text_225315, unicode_225316], **kwargs_225317)
        
        # SSA join for if statement (line 680)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 685):
        
        # Assigning a Call to a Name (line 685):
        
        # Call to SeparatorToolItem(...): (line 685)
        # Processing the call keyword arguments (line 685)
        kwargs_225321 = {}
        # Getting the type of 'gtk' (line 685)
        gtk_225319 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 685, 19), 'gtk', False)
        # Obtaining the member 'SeparatorToolItem' of a type (line 685)
        SeparatorToolItem_225320 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 685, 19), gtk_225319, 'SeparatorToolItem')
        # Calling SeparatorToolItem(args, kwargs) (line 685)
        SeparatorToolItem_call_result_225322 = invoke(stypy.reporting.localization.Localization(__file__, 685, 19), SeparatorToolItem_225320, *[], **kwargs_225321)
        
        # Assigning a type to the variable 'toolitem' (line 685)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 685, 8), 'toolitem', SeparatorToolItem_call_result_225322)
        
        # Call to insert(...): (line 686)
        # Processing the call arguments (line 686)
        # Getting the type of 'toolitem' (line 686)
        toolitem_225325 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 686, 20), 'toolitem', False)
        int_225326 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 686, 30), 'int')
        # Processing the call keyword arguments (line 686)
        kwargs_225327 = {}
        # Getting the type of 'self' (line 686)
        self_225323 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 686, 8), 'self', False)
        # Obtaining the member 'insert' of a type (line 686)
        insert_225324 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 686, 8), self_225323, 'insert')
        # Calling insert(args, kwargs) (line 686)
        insert_call_result_225328 = invoke(stypy.reporting.localization.Localization(__file__, 686, 8), insert_225324, *[toolitem_225325, int_225326], **kwargs_225327)
        
        
        # Call to set_draw(...): (line 689)
        # Processing the call arguments (line 689)
        # Getting the type of 'False' (line 689)
        False_225331 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 689, 26), 'False', False)
        # Processing the call keyword arguments (line 689)
        kwargs_225332 = {}
        # Getting the type of 'toolitem' (line 689)
        toolitem_225329 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 689, 8), 'toolitem', False)
        # Obtaining the member 'set_draw' of a type (line 689)
        set_draw_225330 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 689, 8), toolitem_225329, 'set_draw')
        # Calling set_draw(args, kwargs) (line 689)
        set_draw_call_result_225333 = invoke(stypy.reporting.localization.Localization(__file__, 689, 8), set_draw_225330, *[False_225331], **kwargs_225332)
        
        
        # Call to set_expand(...): (line 690)
        # Processing the call arguments (line 690)
        # Getting the type of 'True' (line 690)
        True_225336 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 690, 28), 'True', False)
        # Processing the call keyword arguments (line 690)
        kwargs_225337 = {}
        # Getting the type of 'toolitem' (line 690)
        toolitem_225334 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 690, 8), 'toolitem', False)
        # Obtaining the member 'set_expand' of a type (line 690)
        set_expand_225335 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 690, 8), toolitem_225334, 'set_expand')
        # Calling set_expand(args, kwargs) (line 690)
        set_expand_call_result_225338 = invoke(stypy.reporting.localization.Localization(__file__, 690, 8), set_expand_225335, *[True_225336], **kwargs_225337)
        
        
        # Assigning a Call to a Name (line 692):
        
        # Assigning a Call to a Name (line 692):
        
        # Call to ToolItem(...): (line 692)
        # Processing the call keyword arguments (line 692)
        kwargs_225341 = {}
        # Getting the type of 'gtk' (line 692)
        gtk_225339 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 692, 19), 'gtk', False)
        # Obtaining the member 'ToolItem' of a type (line 692)
        ToolItem_225340 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 692, 19), gtk_225339, 'ToolItem')
        # Calling ToolItem(args, kwargs) (line 692)
        ToolItem_call_result_225342 = invoke(stypy.reporting.localization.Localization(__file__, 692, 19), ToolItem_225340, *[], **kwargs_225341)
        
        # Assigning a type to the variable 'toolitem' (line 692)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 692, 8), 'toolitem', ToolItem_call_result_225342)
        
        # Call to insert(...): (line 693)
        # Processing the call arguments (line 693)
        # Getting the type of 'toolitem' (line 693)
        toolitem_225345 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 693, 20), 'toolitem', False)
        int_225346 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 693, 30), 'int')
        # Processing the call keyword arguments (line 693)
        kwargs_225347 = {}
        # Getting the type of 'self' (line 693)
        self_225343 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 693, 8), 'self', False)
        # Obtaining the member 'insert' of a type (line 693)
        insert_225344 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 693, 8), self_225343, 'insert')
        # Calling insert(args, kwargs) (line 693)
        insert_call_result_225348 = invoke(stypy.reporting.localization.Localization(__file__, 693, 8), insert_225344, *[toolitem_225345, int_225346], **kwargs_225347)
        
        
        # Assigning a Call to a Attribute (line 694):
        
        # Assigning a Call to a Attribute (line 694):
        
        # Call to Label(...): (line 694)
        # Processing the call keyword arguments (line 694)
        kwargs_225351 = {}
        # Getting the type of 'gtk' (line 694)
        gtk_225349 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 694, 23), 'gtk', False)
        # Obtaining the member 'Label' of a type (line 694)
        Label_225350 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 694, 23), gtk_225349, 'Label')
        # Calling Label(args, kwargs) (line 694)
        Label_call_result_225352 = invoke(stypy.reporting.localization.Localization(__file__, 694, 23), Label_225350, *[], **kwargs_225351)
        
        # Getting the type of 'self' (line 694)
        self_225353 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 694, 8), 'self')
        # Setting the type of the member 'message' of a type (line 694)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 694, 8), self_225353, 'message', Label_call_result_225352)
        
        # Call to add(...): (line 695)
        # Processing the call arguments (line 695)
        # Getting the type of 'self' (line 695)
        self_225356 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 695, 21), 'self', False)
        # Obtaining the member 'message' of a type (line 695)
        message_225357 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 695, 21), self_225356, 'message')
        # Processing the call keyword arguments (line 695)
        kwargs_225358 = {}
        # Getting the type of 'toolitem' (line 695)
        toolitem_225354 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 695, 8), 'toolitem', False)
        # Obtaining the member 'add' of a type (line 695)
        add_225355 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 695, 8), toolitem_225354, 'add')
        # Calling add(args, kwargs) (line 695)
        add_call_result_225359 = invoke(stypy.reporting.localization.Localization(__file__, 695, 8), add_225355, *[message_225357], **kwargs_225358)
        
        
        # Call to show_all(...): (line 697)
        # Processing the call keyword arguments (line 697)
        kwargs_225362 = {}
        # Getting the type of 'self' (line 697)
        self_225360 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 697, 8), 'self', False)
        # Obtaining the member 'show_all' of a type (line 697)
        show_all_225361 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 697, 8), self_225360, 'show_all')
        # Calling show_all(args, kwargs) (line 697)
        show_all_call_result_225363 = invoke(stypy.reporting.localization.Localization(__file__, 697, 8), show_all_225361, *[], **kwargs_225362)
        
        
        # ################# End of '_init_toolbar2_4(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_init_toolbar2_4' in the type store
        # Getting the type of 'stypy_return_type' (line 665)
        stypy_return_type_225364 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 665, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_225364)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_init_toolbar2_4'
        return stypy_return_type_225364


    @norecursion
    def get_filechooser(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'get_filechooser'
        module_type_store = module_type_store.open_function_context('get_filechooser', 699, 4, False)
        # Assigning a type to the variable 'self' (line 700)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 700, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        NavigationToolbar2GTK.get_filechooser.__dict__.__setitem__('stypy_localization', localization)
        NavigationToolbar2GTK.get_filechooser.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        NavigationToolbar2GTK.get_filechooser.__dict__.__setitem__('stypy_type_store', module_type_store)
        NavigationToolbar2GTK.get_filechooser.__dict__.__setitem__('stypy_function_name', 'NavigationToolbar2GTK.get_filechooser')
        NavigationToolbar2GTK.get_filechooser.__dict__.__setitem__('stypy_param_names_list', [])
        NavigationToolbar2GTK.get_filechooser.__dict__.__setitem__('stypy_varargs_param_name', None)
        NavigationToolbar2GTK.get_filechooser.__dict__.__setitem__('stypy_kwargs_param_name', None)
        NavigationToolbar2GTK.get_filechooser.__dict__.__setitem__('stypy_call_defaults', defaults)
        NavigationToolbar2GTK.get_filechooser.__dict__.__setitem__('stypy_call_varargs', varargs)
        NavigationToolbar2GTK.get_filechooser.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        NavigationToolbar2GTK.get_filechooser.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'NavigationToolbar2GTK.get_filechooser', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_filechooser', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_filechooser(...)' code ##################

        
        # Assigning a Call to a Name (line 700):
        
        # Assigning a Call to a Name (line 700):
        
        # Call to FileChooserDialog(...): (line 700)
        # Processing the call keyword arguments (line 700)
        unicode_225366 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 701, 18), 'unicode', u'Save the figure')
        keyword_225367 = unicode_225366
        # Getting the type of 'self' (line 702)
        self_225368 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 702, 19), 'self', False)
        # Obtaining the member 'win' of a type (line 702)
        win_225369 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 702, 19), self_225368, 'win')
        keyword_225370 = win_225369
        
        # Call to expanduser(...): (line 703)
        # Processing the call arguments (line 703)
        
        # Obtaining the type of the subscript
        unicode_225374 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 703, 45), 'unicode', u'savefig.directory')
        # Getting the type of 'rcParams' (line 703)
        rcParams_225375 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 703, 36), 'rcParams', False)
        # Obtaining the member '__getitem__' of a type (line 703)
        getitem___225376 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 703, 36), rcParams_225375, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 703)
        subscript_call_result_225377 = invoke(stypy.reporting.localization.Localization(__file__, 703, 36), getitem___225376, unicode_225374)
        
        # Processing the call keyword arguments (line 703)
        kwargs_225378 = {}
        # Getting the type of 'os' (line 703)
        os_225371 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 703, 17), 'os', False)
        # Obtaining the member 'path' of a type (line 703)
        path_225372 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 703, 17), os_225371, 'path')
        # Obtaining the member 'expanduser' of a type (line 703)
        expanduser_225373 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 703, 17), path_225372, 'expanduser')
        # Calling expanduser(args, kwargs) (line 703)
        expanduser_call_result_225379 = invoke(stypy.reporting.localization.Localization(__file__, 703, 17), expanduser_225373, *[subscript_call_result_225377], **kwargs_225378)
        
        keyword_225380 = expanduser_call_result_225379
        
        # Call to get_supported_filetypes(...): (line 704)
        # Processing the call keyword arguments (line 704)
        kwargs_225384 = {}
        # Getting the type of 'self' (line 704)
        self_225381 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 704, 22), 'self', False)
        # Obtaining the member 'canvas' of a type (line 704)
        canvas_225382 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 704, 22), self_225381, 'canvas')
        # Obtaining the member 'get_supported_filetypes' of a type (line 704)
        get_supported_filetypes_225383 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 704, 22), canvas_225382, 'get_supported_filetypes')
        # Calling get_supported_filetypes(args, kwargs) (line 704)
        get_supported_filetypes_call_result_225385 = invoke(stypy.reporting.localization.Localization(__file__, 704, 22), get_supported_filetypes_225383, *[], **kwargs_225384)
        
        keyword_225386 = get_supported_filetypes_call_result_225385
        
        # Call to get_default_filetype(...): (line 705)
        # Processing the call keyword arguments (line 705)
        kwargs_225390 = {}
        # Getting the type of 'self' (line 705)
        self_225387 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 705, 29), 'self', False)
        # Obtaining the member 'canvas' of a type (line 705)
        canvas_225388 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 705, 29), self_225387, 'canvas')
        # Obtaining the member 'get_default_filetype' of a type (line 705)
        get_default_filetype_225389 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 705, 29), canvas_225388, 'get_default_filetype')
        # Calling get_default_filetype(args, kwargs) (line 705)
        get_default_filetype_call_result_225391 = invoke(stypy.reporting.localization.Localization(__file__, 705, 29), get_default_filetype_225389, *[], **kwargs_225390)
        
        keyword_225392 = get_default_filetype_call_result_225391
        kwargs_225393 = {'default_filetype': keyword_225392, 'path': keyword_225380, 'filetypes': keyword_225386, 'parent': keyword_225370, 'title': keyword_225367}
        # Getting the type of 'FileChooserDialog' (line 700)
        FileChooserDialog_225365 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 700, 13), 'FileChooserDialog', False)
        # Calling FileChooserDialog(args, kwargs) (line 700)
        FileChooserDialog_call_result_225394 = invoke(stypy.reporting.localization.Localization(__file__, 700, 13), FileChooserDialog_225365, *[], **kwargs_225393)
        
        # Assigning a type to the variable 'fc' (line 700)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 700, 8), 'fc', FileChooserDialog_call_result_225394)
        
        # Call to set_current_name(...): (line 706)
        # Processing the call arguments (line 706)
        
        # Call to get_default_filename(...): (line 706)
        # Processing the call keyword arguments (line 706)
        kwargs_225400 = {}
        # Getting the type of 'self' (line 706)
        self_225397 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 706, 28), 'self', False)
        # Obtaining the member 'canvas' of a type (line 706)
        canvas_225398 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 706, 28), self_225397, 'canvas')
        # Obtaining the member 'get_default_filename' of a type (line 706)
        get_default_filename_225399 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 706, 28), canvas_225398, 'get_default_filename')
        # Calling get_default_filename(args, kwargs) (line 706)
        get_default_filename_call_result_225401 = invoke(stypy.reporting.localization.Localization(__file__, 706, 28), get_default_filename_225399, *[], **kwargs_225400)
        
        # Processing the call keyword arguments (line 706)
        kwargs_225402 = {}
        # Getting the type of 'fc' (line 706)
        fc_225395 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 706, 8), 'fc', False)
        # Obtaining the member 'set_current_name' of a type (line 706)
        set_current_name_225396 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 706, 8), fc_225395, 'set_current_name')
        # Calling set_current_name(args, kwargs) (line 706)
        set_current_name_call_result_225403 = invoke(stypy.reporting.localization.Localization(__file__, 706, 8), set_current_name_225396, *[get_default_filename_call_result_225401], **kwargs_225402)
        
        # Getting the type of 'fc' (line 707)
        fc_225404 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 707, 15), 'fc')
        # Assigning a type to the variable 'stypy_return_type' (line 707)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 707, 8), 'stypy_return_type', fc_225404)
        
        # ################# End of 'get_filechooser(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_filechooser' in the type store
        # Getting the type of 'stypy_return_type' (line 699)
        stypy_return_type_225405 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 699, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_225405)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_filechooser'
        return stypy_return_type_225405


    @norecursion
    def save_figure(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'save_figure'
        module_type_store = module_type_store.open_function_context('save_figure', 709, 4, False)
        # Assigning a type to the variable 'self' (line 710)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 710, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        NavigationToolbar2GTK.save_figure.__dict__.__setitem__('stypy_localization', localization)
        NavigationToolbar2GTK.save_figure.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        NavigationToolbar2GTK.save_figure.__dict__.__setitem__('stypy_type_store', module_type_store)
        NavigationToolbar2GTK.save_figure.__dict__.__setitem__('stypy_function_name', 'NavigationToolbar2GTK.save_figure')
        NavigationToolbar2GTK.save_figure.__dict__.__setitem__('stypy_param_names_list', [])
        NavigationToolbar2GTK.save_figure.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        NavigationToolbar2GTK.save_figure.__dict__.__setitem__('stypy_kwargs_param_name', None)
        NavigationToolbar2GTK.save_figure.__dict__.__setitem__('stypy_call_defaults', defaults)
        NavigationToolbar2GTK.save_figure.__dict__.__setitem__('stypy_call_varargs', varargs)
        NavigationToolbar2GTK.save_figure.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        NavigationToolbar2GTK.save_figure.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'NavigationToolbar2GTK.save_figure', [], 'args', None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'save_figure', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'save_figure(...)' code ##################

        
        # Assigning a Call to a Name (line 710):
        
        # Assigning a Call to a Name (line 710):
        
        # Call to get_filechooser(...): (line 710)
        # Processing the call keyword arguments (line 710)
        kwargs_225408 = {}
        # Getting the type of 'self' (line 710)
        self_225406 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 710, 18), 'self', False)
        # Obtaining the member 'get_filechooser' of a type (line 710)
        get_filechooser_225407 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 710, 18), self_225406, 'get_filechooser')
        # Calling get_filechooser(args, kwargs) (line 710)
        get_filechooser_call_result_225409 = invoke(stypy.reporting.localization.Localization(__file__, 710, 18), get_filechooser_225407, *[], **kwargs_225408)
        
        # Assigning a type to the variable 'chooser' (line 710)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 710, 8), 'chooser', get_filechooser_call_result_225409)
        
        # Assigning a Call to a Tuple (line 711):
        
        # Assigning a Call to a Name:
        
        # Call to get_filename_from_user(...): (line 711)
        # Processing the call keyword arguments (line 711)
        kwargs_225412 = {}
        # Getting the type of 'chooser' (line 711)
        chooser_225410 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 711, 24), 'chooser', False)
        # Obtaining the member 'get_filename_from_user' of a type (line 711)
        get_filename_from_user_225411 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 711, 24), chooser_225410, 'get_filename_from_user')
        # Calling get_filename_from_user(args, kwargs) (line 711)
        get_filename_from_user_call_result_225413 = invoke(stypy.reporting.localization.Localization(__file__, 711, 24), get_filename_from_user_225411, *[], **kwargs_225412)
        
        # Assigning a type to the variable 'call_assignment_223318' (line 711)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 711, 8), 'call_assignment_223318', get_filename_from_user_call_result_225413)
        
        # Assigning a Call to a Name (line 711):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_225416 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 711, 8), 'int')
        # Processing the call keyword arguments
        kwargs_225417 = {}
        # Getting the type of 'call_assignment_223318' (line 711)
        call_assignment_223318_225414 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 711, 8), 'call_assignment_223318', False)
        # Obtaining the member '__getitem__' of a type (line 711)
        getitem___225415 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 711, 8), call_assignment_223318_225414, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_225418 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___225415, *[int_225416], **kwargs_225417)
        
        # Assigning a type to the variable 'call_assignment_223319' (line 711)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 711, 8), 'call_assignment_223319', getitem___call_result_225418)
        
        # Assigning a Name to a Name (line 711):
        # Getting the type of 'call_assignment_223319' (line 711)
        call_assignment_223319_225419 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 711, 8), 'call_assignment_223319')
        # Assigning a type to the variable 'fname' (line 711)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 711, 8), 'fname', call_assignment_223319_225419)
        
        # Assigning a Call to a Name (line 711):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_225422 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 711, 8), 'int')
        # Processing the call keyword arguments
        kwargs_225423 = {}
        # Getting the type of 'call_assignment_223318' (line 711)
        call_assignment_223318_225420 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 711, 8), 'call_assignment_223318', False)
        # Obtaining the member '__getitem__' of a type (line 711)
        getitem___225421 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 711, 8), call_assignment_223318_225420, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_225424 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___225421, *[int_225422], **kwargs_225423)
        
        # Assigning a type to the variable 'call_assignment_223320' (line 711)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 711, 8), 'call_assignment_223320', getitem___call_result_225424)
        
        # Assigning a Name to a Name (line 711):
        # Getting the type of 'call_assignment_223320' (line 711)
        call_assignment_223320_225425 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 711, 8), 'call_assignment_223320')
        # Assigning a type to the variable 'format' (line 711)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 711, 15), 'format', call_assignment_223320_225425)
        
        # Call to destroy(...): (line 712)
        # Processing the call keyword arguments (line 712)
        kwargs_225428 = {}
        # Getting the type of 'chooser' (line 712)
        chooser_225426 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 712, 8), 'chooser', False)
        # Obtaining the member 'destroy' of a type (line 712)
        destroy_225427 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 712, 8), chooser_225426, 'destroy')
        # Calling destroy(args, kwargs) (line 712)
        destroy_call_result_225429 = invoke(stypy.reporting.localization.Localization(__file__, 712, 8), destroy_225427, *[], **kwargs_225428)
        
        
        # Getting the type of 'fname' (line 713)
        fname_225430 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 713, 11), 'fname')
        # Testing the type of an if condition (line 713)
        if_condition_225431 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 713, 8), fname_225430)
        # Assigning a type to the variable 'if_condition_225431' (line 713)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 713, 8), 'if_condition_225431', if_condition_225431)
        # SSA begins for if statement (line 713)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        
        # Getting the type of 'startpath' (line 715)
        startpath_225432 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 715, 15), 'startpath')
        unicode_225433 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 715, 28), 'unicode', u'')
        # Applying the binary operator '!=' (line 715)
        result_ne_225434 = python_operator(stypy.reporting.localization.Localization(__file__, 715, 15), '!=', startpath_225432, unicode_225433)
        
        # Testing the type of an if condition (line 715)
        if_condition_225435 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 715, 12), result_ne_225434)
        # Assigning a type to the variable 'if_condition_225435' (line 715)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 715, 12), 'if_condition_225435', if_condition_225435)
        # SSA begins for if statement (line 715)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Subscript (line 716):
        
        # Assigning a Call to a Subscript (line 716):
        
        # Call to dirname(...): (line 717)
        # Processing the call arguments (line 717)
        
        # Call to text_type(...): (line 717)
        # Processing the call arguments (line 717)
        # Getting the type of 'fname' (line 717)
        fname_225441 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 717, 50), 'fname', False)
        # Processing the call keyword arguments (line 717)
        kwargs_225442 = {}
        # Getting the type of 'six' (line 717)
        six_225439 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 717, 36), 'six', False)
        # Obtaining the member 'text_type' of a type (line 717)
        text_type_225440 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 717, 36), six_225439, 'text_type')
        # Calling text_type(args, kwargs) (line 717)
        text_type_call_result_225443 = invoke(stypy.reporting.localization.Localization(__file__, 717, 36), text_type_225440, *[fname_225441], **kwargs_225442)
        
        # Processing the call keyword arguments (line 717)
        kwargs_225444 = {}
        # Getting the type of 'os' (line 717)
        os_225436 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 717, 20), 'os', False)
        # Obtaining the member 'path' of a type (line 717)
        path_225437 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 717, 20), os_225436, 'path')
        # Obtaining the member 'dirname' of a type (line 717)
        dirname_225438 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 717, 20), path_225437, 'dirname')
        # Calling dirname(args, kwargs) (line 717)
        dirname_call_result_225445 = invoke(stypy.reporting.localization.Localization(__file__, 717, 20), dirname_225438, *[text_type_call_result_225443], **kwargs_225444)
        
        # Getting the type of 'rcParams' (line 716)
        rcParams_225446 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 716, 16), 'rcParams')
        unicode_225447 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 716, 25), 'unicode', u'savefig.directory')
        # Storing an element on a container (line 716)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 716, 16), rcParams_225446, (unicode_225447, dirname_call_result_225445))
        # SSA join for if statement (line 715)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # SSA begins for try-except statement (line 718)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
        
        # Call to savefig(...): (line 719)
        # Processing the call arguments (line 719)
        # Getting the type of 'fname' (line 719)
        fname_225452 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 719, 43), 'fname', False)
        # Processing the call keyword arguments (line 719)
        # Getting the type of 'format' (line 719)
        format_225453 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 719, 57), 'format', False)
        keyword_225454 = format_225453
        kwargs_225455 = {'format': keyword_225454}
        # Getting the type of 'self' (line 719)
        self_225448 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 719, 16), 'self', False)
        # Obtaining the member 'canvas' of a type (line 719)
        canvas_225449 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 719, 16), self_225448, 'canvas')
        # Obtaining the member 'figure' of a type (line 719)
        figure_225450 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 719, 16), canvas_225449, 'figure')
        # Obtaining the member 'savefig' of a type (line 719)
        savefig_225451 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 719, 16), figure_225450, 'savefig')
        # Calling savefig(args, kwargs) (line 719)
        savefig_call_result_225456 = invoke(stypy.reporting.localization.Localization(__file__, 719, 16), savefig_225451, *[fname_225452], **kwargs_225455)
        
        # SSA branch for the except part of a try statement (line 718)
        # SSA branch for the except 'Exception' branch of a try statement (line 718)
        # Storing handler type
        module_type_store.open_ssa_branch('except')
        # Getting the type of 'Exception' (line 720)
        Exception_225457 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 720, 19), 'Exception')
        # Assigning a type to the variable 'e' (line 720)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 720, 12), 'e', Exception_225457)
        
        # Call to error_msg_gtk(...): (line 721)
        # Processing the call arguments (line 721)
        
        # Call to str(...): (line 721)
        # Processing the call arguments (line 721)
        # Getting the type of 'e' (line 721)
        e_225460 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 34), 'e', False)
        # Processing the call keyword arguments (line 721)
        kwargs_225461 = {}
        # Getting the type of 'str' (line 721)
        str_225459 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 30), 'str', False)
        # Calling str(args, kwargs) (line 721)
        str_call_result_225462 = invoke(stypy.reporting.localization.Localization(__file__, 721, 30), str_225459, *[e_225460], **kwargs_225461)
        
        # Processing the call keyword arguments (line 721)
        # Getting the type of 'self' (line 721)
        self_225463 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 45), 'self', False)
        keyword_225464 = self_225463
        kwargs_225465 = {'parent': keyword_225464}
        # Getting the type of 'error_msg_gtk' (line 721)
        error_msg_gtk_225458 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 16), 'error_msg_gtk', False)
        # Calling error_msg_gtk(args, kwargs) (line 721)
        error_msg_gtk_call_result_225466 = invoke(stypy.reporting.localization.Localization(__file__, 721, 16), error_msg_gtk_225458, *[str_call_result_225462], **kwargs_225465)
        
        # SSA join for try-except statement (line 718)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 713)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'save_figure(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'save_figure' in the type store
        # Getting the type of 'stypy_return_type' (line 709)
        stypy_return_type_225467 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 709, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_225467)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'save_figure'
        return stypy_return_type_225467


    @norecursion
    def configure_subplots(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'configure_subplots'
        module_type_store = module_type_store.open_function_context('configure_subplots', 723, 4, False)
        # Assigning a type to the variable 'self' (line 724)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 724, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        NavigationToolbar2GTK.configure_subplots.__dict__.__setitem__('stypy_localization', localization)
        NavigationToolbar2GTK.configure_subplots.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        NavigationToolbar2GTK.configure_subplots.__dict__.__setitem__('stypy_type_store', module_type_store)
        NavigationToolbar2GTK.configure_subplots.__dict__.__setitem__('stypy_function_name', 'NavigationToolbar2GTK.configure_subplots')
        NavigationToolbar2GTK.configure_subplots.__dict__.__setitem__('stypy_param_names_list', ['button'])
        NavigationToolbar2GTK.configure_subplots.__dict__.__setitem__('stypy_varargs_param_name', None)
        NavigationToolbar2GTK.configure_subplots.__dict__.__setitem__('stypy_kwargs_param_name', None)
        NavigationToolbar2GTK.configure_subplots.__dict__.__setitem__('stypy_call_defaults', defaults)
        NavigationToolbar2GTK.configure_subplots.__dict__.__setitem__('stypy_call_varargs', varargs)
        NavigationToolbar2GTK.configure_subplots.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        NavigationToolbar2GTK.configure_subplots.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'NavigationToolbar2GTK.configure_subplots', ['button'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'configure_subplots', localization, ['button'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'configure_subplots(...)' code ##################

        
        # Assigning a Call to a Name (line 724):
        
        # Assigning a Call to a Name (line 724):
        
        # Call to Figure(...): (line 724)
        # Processing the call keyword arguments (line 724)
        
        # Obtaining an instance of the builtin type 'tuple' (line 724)
        tuple_225469 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 724, 34), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 724)
        # Adding element type (line 724)
        int_225470 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 724, 34), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 724, 34), tuple_225469, int_225470)
        # Adding element type (line 724)
        int_225471 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 724, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 724, 34), tuple_225469, int_225471)
        
        keyword_225472 = tuple_225469
        kwargs_225473 = {'figsize': keyword_225472}
        # Getting the type of 'Figure' (line 724)
        Figure_225468 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 724, 18), 'Figure', False)
        # Calling Figure(args, kwargs) (line 724)
        Figure_call_result_225474 = invoke(stypy.reporting.localization.Localization(__file__, 724, 18), Figure_225468, *[], **kwargs_225473)
        
        # Assigning a type to the variable 'toolfig' (line 724)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 724, 8), 'toolfig', Figure_call_result_225474)
        
        # Assigning a Call to a Name (line 725):
        
        # Assigning a Call to a Name (line 725):
        
        # Call to _get_canvas(...): (line 725)
        # Processing the call arguments (line 725)
        # Getting the type of 'toolfig' (line 725)
        toolfig_225477 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 725, 34), 'toolfig', False)
        # Processing the call keyword arguments (line 725)
        kwargs_225478 = {}
        # Getting the type of 'self' (line 725)
        self_225475 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 725, 17), 'self', False)
        # Obtaining the member '_get_canvas' of a type (line 725)
        _get_canvas_225476 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 725, 17), self_225475, '_get_canvas')
        # Calling _get_canvas(args, kwargs) (line 725)
        _get_canvas_call_result_225479 = invoke(stypy.reporting.localization.Localization(__file__, 725, 17), _get_canvas_225476, *[toolfig_225477], **kwargs_225478)
        
        # Assigning a type to the variable 'canvas' (line 725)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 725, 8), 'canvas', _get_canvas_call_result_225479)
        
        # Call to subplots_adjust(...): (line 726)
        # Processing the call keyword arguments (line 726)
        float_225482 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 726, 36), 'float')
        keyword_225483 = float_225482
        kwargs_225484 = {'top': keyword_225483}
        # Getting the type of 'toolfig' (line 726)
        toolfig_225480 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 726, 8), 'toolfig', False)
        # Obtaining the member 'subplots_adjust' of a type (line 726)
        subplots_adjust_225481 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 726, 8), toolfig_225480, 'subplots_adjust')
        # Calling subplots_adjust(args, kwargs) (line 726)
        subplots_adjust_call_result_225485 = invoke(stypy.reporting.localization.Localization(__file__, 726, 8), subplots_adjust_225481, *[], **kwargs_225484)
        
        
        # Assigning a Call to a Name (line 727):
        
        # Assigning a Call to a Name (line 727):
        
        # Call to SubplotTool(...): (line 727)
        # Processing the call arguments (line 727)
        # Getting the type of 'self' (line 727)
        self_225487 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 727, 28), 'self', False)
        # Obtaining the member 'canvas' of a type (line 727)
        canvas_225488 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 727, 28), self_225487, 'canvas')
        # Obtaining the member 'figure' of a type (line 727)
        figure_225489 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 727, 28), canvas_225488, 'figure')
        # Getting the type of 'toolfig' (line 727)
        toolfig_225490 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 727, 48), 'toolfig', False)
        # Processing the call keyword arguments (line 727)
        kwargs_225491 = {}
        # Getting the type of 'SubplotTool' (line 727)
        SubplotTool_225486 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 727, 16), 'SubplotTool', False)
        # Calling SubplotTool(args, kwargs) (line 727)
        SubplotTool_call_result_225492 = invoke(stypy.reporting.localization.Localization(__file__, 727, 16), SubplotTool_225486, *[figure_225489, toolfig_225490], **kwargs_225491)
        
        # Assigning a type to the variable 'tool' (line 727)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 727, 8), 'tool', SubplotTool_call_result_225492)
        
        # Assigning a Call to a Name (line 729):
        
        # Assigning a Call to a Name (line 729):
        
        # Call to int(...): (line 729)
        # Processing the call arguments (line 729)
        # Getting the type of 'toolfig' (line 729)
        toolfig_225494 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 16), 'toolfig', False)
        # Obtaining the member 'bbox' of a type (line 729)
        bbox_225495 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 729, 16), toolfig_225494, 'bbox')
        # Obtaining the member 'width' of a type (line 729)
        width_225496 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 729, 16), bbox_225495, 'width')
        # Processing the call keyword arguments (line 729)
        kwargs_225497 = {}
        # Getting the type of 'int' (line 729)
        int_225493 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 12), 'int', False)
        # Calling int(args, kwargs) (line 729)
        int_call_result_225498 = invoke(stypy.reporting.localization.Localization(__file__, 729, 12), int_225493, *[width_225496], **kwargs_225497)
        
        # Assigning a type to the variable 'w' (line 729)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 729, 8), 'w', int_call_result_225498)
        
        # Assigning a Call to a Name (line 730):
        
        # Assigning a Call to a Name (line 730):
        
        # Call to int(...): (line 730)
        # Processing the call arguments (line 730)
        # Getting the type of 'toolfig' (line 730)
        toolfig_225500 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 730, 16), 'toolfig', False)
        # Obtaining the member 'bbox' of a type (line 730)
        bbox_225501 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 730, 16), toolfig_225500, 'bbox')
        # Obtaining the member 'height' of a type (line 730)
        height_225502 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 730, 16), bbox_225501, 'height')
        # Processing the call keyword arguments (line 730)
        kwargs_225503 = {}
        # Getting the type of 'int' (line 730)
        int_225499 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 730, 12), 'int', False)
        # Calling int(args, kwargs) (line 730)
        int_call_result_225504 = invoke(stypy.reporting.localization.Localization(__file__, 730, 12), int_225499, *[height_225502], **kwargs_225503)
        
        # Assigning a type to the variable 'h' (line 730)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 730, 8), 'h', int_call_result_225504)
        
        # Assigning a Call to a Name (line 732):
        
        # Assigning a Call to a Name (line 732):
        
        # Call to Window(...): (line 732)
        # Processing the call keyword arguments (line 732)
        kwargs_225507 = {}
        # Getting the type of 'gtk' (line 732)
        gtk_225505 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 732, 17), 'gtk', False)
        # Obtaining the member 'Window' of a type (line 732)
        Window_225506 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 732, 17), gtk_225505, 'Window')
        # Calling Window(args, kwargs) (line 732)
        Window_call_result_225508 = invoke(stypy.reporting.localization.Localization(__file__, 732, 17), Window_225506, *[], **kwargs_225507)
        
        # Assigning a type to the variable 'window' (line 732)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 732, 8), 'window', Window_call_result_225508)
        
        # Getting the type of 'window_icon' (line 733)
        window_icon_225509 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 733, 11), 'window_icon')
        # Testing the type of an if condition (line 733)
        if_condition_225510 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 733, 8), window_icon_225509)
        # Assigning a type to the variable 'if_condition_225510' (line 733)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 733, 8), 'if_condition_225510', if_condition_225510)
        # SSA begins for if statement (line 733)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        
        # SSA begins for try-except statement (line 734)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
        
        # Call to set_icon_from_file(...): (line 735)
        # Processing the call arguments (line 735)
        # Getting the type of 'window_icon' (line 735)
        window_icon_225513 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 735, 42), 'window_icon', False)
        # Processing the call keyword arguments (line 735)
        kwargs_225514 = {}
        # Getting the type of 'window' (line 735)
        window_225511 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 735, 16), 'window', False)
        # Obtaining the member 'set_icon_from_file' of a type (line 735)
        set_icon_from_file_225512 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 735, 16), window_225511, 'set_icon_from_file')
        # Calling set_icon_from_file(args, kwargs) (line 735)
        set_icon_from_file_call_result_225515 = invoke(stypy.reporting.localization.Localization(__file__, 735, 16), set_icon_from_file_225512, *[window_icon_225513], **kwargs_225514)
        
        # SSA branch for the except part of a try statement (line 734)
        # SSA branch for the except '<any exception>' branch of a try statement (line 734)
        module_type_store.open_ssa_branch('except')
        pass
        # SSA join for try-except statement (line 734)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 733)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to set_title(...): (line 740)
        # Processing the call arguments (line 740)
        unicode_225518 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 740, 25), 'unicode', u'Subplot Configuration Tool')
        # Processing the call keyword arguments (line 740)
        kwargs_225519 = {}
        # Getting the type of 'window' (line 740)
        window_225516 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 740, 8), 'window', False)
        # Obtaining the member 'set_title' of a type (line 740)
        set_title_225517 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 740, 8), window_225516, 'set_title')
        # Calling set_title(args, kwargs) (line 740)
        set_title_call_result_225520 = invoke(stypy.reporting.localization.Localization(__file__, 740, 8), set_title_225517, *[unicode_225518], **kwargs_225519)
        
        
        # Call to set_default_size(...): (line 741)
        # Processing the call arguments (line 741)
        # Getting the type of 'w' (line 741)
        w_225523 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 741, 32), 'w', False)
        # Getting the type of 'h' (line 741)
        h_225524 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 741, 35), 'h', False)
        # Processing the call keyword arguments (line 741)
        kwargs_225525 = {}
        # Getting the type of 'window' (line 741)
        window_225521 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 741, 8), 'window', False)
        # Obtaining the member 'set_default_size' of a type (line 741)
        set_default_size_225522 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 741, 8), window_225521, 'set_default_size')
        # Calling set_default_size(args, kwargs) (line 741)
        set_default_size_call_result_225526 = invoke(stypy.reporting.localization.Localization(__file__, 741, 8), set_default_size_225522, *[w_225523, h_225524], **kwargs_225525)
        
        
        # Assigning a Call to a Name (line 742):
        
        # Assigning a Call to a Name (line 742):
        
        # Call to VBox(...): (line 742)
        # Processing the call keyword arguments (line 742)
        kwargs_225529 = {}
        # Getting the type of 'gtk' (line 742)
        gtk_225527 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 742, 15), 'gtk', False)
        # Obtaining the member 'VBox' of a type (line 742)
        VBox_225528 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 742, 15), gtk_225527, 'VBox')
        # Calling VBox(args, kwargs) (line 742)
        VBox_call_result_225530 = invoke(stypy.reporting.localization.Localization(__file__, 742, 15), VBox_225528, *[], **kwargs_225529)
        
        # Assigning a type to the variable 'vbox' (line 742)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 742, 8), 'vbox', VBox_call_result_225530)
        
        # Call to add(...): (line 743)
        # Processing the call arguments (line 743)
        # Getting the type of 'vbox' (line 743)
        vbox_225533 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 743, 19), 'vbox', False)
        # Processing the call keyword arguments (line 743)
        kwargs_225534 = {}
        # Getting the type of 'window' (line 743)
        window_225531 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 743, 8), 'window', False)
        # Obtaining the member 'add' of a type (line 743)
        add_225532 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 743, 8), window_225531, 'add')
        # Calling add(args, kwargs) (line 743)
        add_call_result_225535 = invoke(stypy.reporting.localization.Localization(__file__, 743, 8), add_225532, *[vbox_225533], **kwargs_225534)
        
        
        # Call to show(...): (line 744)
        # Processing the call keyword arguments (line 744)
        kwargs_225538 = {}
        # Getting the type of 'vbox' (line 744)
        vbox_225536 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 744, 8), 'vbox', False)
        # Obtaining the member 'show' of a type (line 744)
        show_225537 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 744, 8), vbox_225536, 'show')
        # Calling show(args, kwargs) (line 744)
        show_call_result_225539 = invoke(stypy.reporting.localization.Localization(__file__, 744, 8), show_225537, *[], **kwargs_225538)
        
        
        # Call to show(...): (line 746)
        # Processing the call keyword arguments (line 746)
        kwargs_225542 = {}
        # Getting the type of 'canvas' (line 746)
        canvas_225540 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 746, 8), 'canvas', False)
        # Obtaining the member 'show' of a type (line 746)
        show_225541 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 746, 8), canvas_225540, 'show')
        # Calling show(args, kwargs) (line 746)
        show_call_result_225543 = invoke(stypy.reporting.localization.Localization(__file__, 746, 8), show_225541, *[], **kwargs_225542)
        
        
        # Call to pack_start(...): (line 747)
        # Processing the call arguments (line 747)
        # Getting the type of 'canvas' (line 747)
        canvas_225546 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 747, 24), 'canvas', False)
        # Getting the type of 'True' (line 747)
        True_225547 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 747, 32), 'True', False)
        # Getting the type of 'True' (line 747)
        True_225548 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 747, 38), 'True', False)
        # Processing the call keyword arguments (line 747)
        kwargs_225549 = {}
        # Getting the type of 'vbox' (line 747)
        vbox_225544 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 747, 8), 'vbox', False)
        # Obtaining the member 'pack_start' of a type (line 747)
        pack_start_225545 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 747, 8), vbox_225544, 'pack_start')
        # Calling pack_start(args, kwargs) (line 747)
        pack_start_call_result_225550 = invoke(stypy.reporting.localization.Localization(__file__, 747, 8), pack_start_225545, *[canvas_225546, True_225547, True_225548], **kwargs_225549)
        
        
        # Call to show(...): (line 748)
        # Processing the call keyword arguments (line 748)
        kwargs_225553 = {}
        # Getting the type of 'window' (line 748)
        window_225551 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 748, 8), 'window', False)
        # Obtaining the member 'show' of a type (line 748)
        show_225552 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 748, 8), window_225551, 'show')
        # Calling show(args, kwargs) (line 748)
        show_call_result_225554 = invoke(stypy.reporting.localization.Localization(__file__, 748, 8), show_225552, *[], **kwargs_225553)
        
        
        # ################# End of 'configure_subplots(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'configure_subplots' in the type store
        # Getting the type of 'stypy_return_type' (line 723)
        stypy_return_type_225555 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 723, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_225555)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'configure_subplots'
        return stypy_return_type_225555


    @norecursion
    def _get_canvas(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_get_canvas'
        module_type_store = module_type_store.open_function_context('_get_canvas', 750, 4, False)
        # Assigning a type to the variable 'self' (line 751)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 751, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        NavigationToolbar2GTK._get_canvas.__dict__.__setitem__('stypy_localization', localization)
        NavigationToolbar2GTK._get_canvas.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        NavigationToolbar2GTK._get_canvas.__dict__.__setitem__('stypy_type_store', module_type_store)
        NavigationToolbar2GTK._get_canvas.__dict__.__setitem__('stypy_function_name', 'NavigationToolbar2GTK._get_canvas')
        NavigationToolbar2GTK._get_canvas.__dict__.__setitem__('stypy_param_names_list', ['fig'])
        NavigationToolbar2GTK._get_canvas.__dict__.__setitem__('stypy_varargs_param_name', None)
        NavigationToolbar2GTK._get_canvas.__dict__.__setitem__('stypy_kwargs_param_name', None)
        NavigationToolbar2GTK._get_canvas.__dict__.__setitem__('stypy_call_defaults', defaults)
        NavigationToolbar2GTK._get_canvas.__dict__.__setitem__('stypy_call_varargs', varargs)
        NavigationToolbar2GTK._get_canvas.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        NavigationToolbar2GTK._get_canvas.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'NavigationToolbar2GTK._get_canvas', ['fig'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_get_canvas', localization, ['fig'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_get_canvas(...)' code ##################

        
        # Call to FigureCanvasGTK(...): (line 751)
        # Processing the call arguments (line 751)
        # Getting the type of 'fig' (line 751)
        fig_225557 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 751, 31), 'fig', False)
        # Processing the call keyword arguments (line 751)
        kwargs_225558 = {}
        # Getting the type of 'FigureCanvasGTK' (line 751)
        FigureCanvasGTK_225556 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 751, 15), 'FigureCanvasGTK', False)
        # Calling FigureCanvasGTK(args, kwargs) (line 751)
        FigureCanvasGTK_call_result_225559 = invoke(stypy.reporting.localization.Localization(__file__, 751, 15), FigureCanvasGTK_225556, *[fig_225557], **kwargs_225558)
        
        # Assigning a type to the variable 'stypy_return_type' (line 751)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 751, 8), 'stypy_return_type', FigureCanvasGTK_call_result_225559)
        
        # ################# End of '_get_canvas(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_get_canvas' in the type store
        # Getting the type of 'stypy_return_type' (line 750)
        stypy_return_type_225560 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 750, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_225560)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_get_canvas'
        return stypy_return_type_225560


# Assigning a type to the variable 'NavigationToolbar2GTK' (line 609)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 609, 0), 'NavigationToolbar2GTK', NavigationToolbar2GTK)
# Declaration of the 'FileChooserDialog' class
# Getting the type of 'gtk' (line 754)
gtk_225561 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 754, 24), 'gtk')
# Obtaining the member 'FileChooserDialog' of a type (line 754)
FileChooserDialog_225562 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 754, 24), gtk_225561, 'FileChooserDialog')

class FileChooserDialog(FileChooserDialog_225562, ):
    unicode_225563 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 757, (-1)), 'unicode', u'GTK+ 2.4 file selector which presents the user with a menu\n    of supported image formats\n    ')

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        unicode_225564 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 759, 28), 'unicode', u'Save file')
        # Getting the type of 'None' (line 760)
        None_225565 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 760, 28), 'None')
        # Getting the type of 'gtk' (line 761)
        gtk_225566 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 761, 28), 'gtk')
        # Obtaining the member 'FILE_CHOOSER_ACTION_SAVE' of a type (line 761)
        FILE_CHOOSER_ACTION_SAVE_225567 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 761, 28), gtk_225566, 'FILE_CHOOSER_ACTION_SAVE')
        
        # Obtaining an instance of the builtin type 'tuple' (line 762)
        tuple_225568 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 762, 29), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 762)
        # Adding element type (line 762)
        # Getting the type of 'gtk' (line 762)
        gtk_225569 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 762, 29), 'gtk')
        # Obtaining the member 'STOCK_CANCEL' of a type (line 762)
        STOCK_CANCEL_225570 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 762, 29), gtk_225569, 'STOCK_CANCEL')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 762, 29), tuple_225568, STOCK_CANCEL_225570)
        # Adding element type (line 762)
        # Getting the type of 'gtk' (line 762)
        gtk_225571 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 762, 47), 'gtk')
        # Obtaining the member 'RESPONSE_CANCEL' of a type (line 762)
        RESPONSE_CANCEL_225572 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 762, 47), gtk_225571, 'RESPONSE_CANCEL')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 762, 29), tuple_225568, RESPONSE_CANCEL_225572)
        # Adding element type (line 762)
        # Getting the type of 'gtk' (line 763)
        gtk_225573 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 763, 29), 'gtk')
        # Obtaining the member 'STOCK_SAVE' of a type (line 763)
        STOCK_SAVE_225574 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 763, 29), gtk_225573, 'STOCK_SAVE')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 762, 29), tuple_225568, STOCK_SAVE_225574)
        # Adding element type (line 762)
        # Getting the type of 'gtk' (line 763)
        gtk_225575 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 763, 47), 'gtk')
        # Obtaining the member 'RESPONSE_OK' of a type (line 763)
        RESPONSE_OK_225576 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 763, 47), gtk_225575, 'RESPONSE_OK')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 762, 29), tuple_225568, RESPONSE_OK_225576)
        
        # Getting the type of 'None' (line 764)
        None_225577 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 764, 28), 'None')
        
        # Obtaining an instance of the builtin type 'list' (line 765)
        list_225578 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 765, 30), 'list')
        # Adding type elements to the builtin type 'list' instance (line 765)
        
        # Getting the type of 'None' (line 766)
        None_225579 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 766, 37), 'None')
        defaults = [unicode_225564, None_225565, FILE_CHOOSER_ACTION_SAVE_225567, tuple_225568, None_225577, list_225578, None_225579]
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 758, 4, False)
        # Assigning a type to the variable 'self' (line 759)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 759, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FileChooserDialog.__init__', ['title', 'parent', 'action', 'buttons', 'path', 'filetypes', 'default_filetype'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['title', 'parent', 'action', 'buttons', 'path', 'filetypes', 'default_filetype'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Call to __init__(...): (line 768)
        # Processing the call arguments (line 768)
        # Getting the type of 'title' (line 768)
        title_225586 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 768, 48), 'title', False)
        # Getting the type of 'parent' (line 768)
        parent_225587 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 768, 55), 'parent', False)
        # Getting the type of 'action' (line 768)
        action_225588 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 768, 63), 'action', False)
        # Getting the type of 'buttons' (line 768)
        buttons_225589 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 768, 71), 'buttons', False)
        # Processing the call keyword arguments (line 768)
        kwargs_225590 = {}
        
        # Call to super(...): (line 768)
        # Processing the call arguments (line 768)
        # Getting the type of 'FileChooserDialog' (line 768)
        FileChooserDialog_225581 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 768, 14), 'FileChooserDialog', False)
        # Getting the type of 'self' (line 768)
        self_225582 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 768, 33), 'self', False)
        # Processing the call keyword arguments (line 768)
        kwargs_225583 = {}
        # Getting the type of 'super' (line 768)
        super_225580 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 768, 8), 'super', False)
        # Calling super(args, kwargs) (line 768)
        super_call_result_225584 = invoke(stypy.reporting.localization.Localization(__file__, 768, 8), super_225580, *[FileChooserDialog_225581, self_225582], **kwargs_225583)
        
        # Obtaining the member '__init__' of a type (line 768)
        init___225585 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 768, 8), super_call_result_225584, '__init__')
        # Calling __init__(args, kwargs) (line 768)
        init___call_result_225591 = invoke(stypy.reporting.localization.Localization(__file__, 768, 8), init___225585, *[title_225586, parent_225587, action_225588, buttons_225589], **kwargs_225590)
        
        
        # Call to set_do_overwrite_confirmation(...): (line 769)
        # Processing the call arguments (line 769)
        # Getting the type of 'True' (line 769)
        True_225598 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 769, 69), 'True', False)
        # Processing the call keyword arguments (line 769)
        kwargs_225599 = {}
        
        # Call to super(...): (line 769)
        # Processing the call arguments (line 769)
        # Getting the type of 'FileChooserDialog' (line 769)
        FileChooserDialog_225593 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 769, 14), 'FileChooserDialog', False)
        # Getting the type of 'self' (line 769)
        self_225594 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 769, 33), 'self', False)
        # Processing the call keyword arguments (line 769)
        kwargs_225595 = {}
        # Getting the type of 'super' (line 769)
        super_225592 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 769, 8), 'super', False)
        # Calling super(args, kwargs) (line 769)
        super_call_result_225596 = invoke(stypy.reporting.localization.Localization(__file__, 769, 8), super_225592, *[FileChooserDialog_225593, self_225594], **kwargs_225595)
        
        # Obtaining the member 'set_do_overwrite_confirmation' of a type (line 769)
        set_do_overwrite_confirmation_225597 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 769, 8), super_call_result_225596, 'set_do_overwrite_confirmation')
        # Calling set_do_overwrite_confirmation(args, kwargs) (line 769)
        set_do_overwrite_confirmation_call_result_225600 = invoke(stypy.reporting.localization.Localization(__file__, 769, 8), set_do_overwrite_confirmation_225597, *[True_225598], **kwargs_225599)
        
        
        # Call to set_default_response(...): (line 770)
        # Processing the call arguments (line 770)
        # Getting the type of 'gtk' (line 770)
        gtk_225603 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 770, 34), 'gtk', False)
        # Obtaining the member 'RESPONSE_OK' of a type (line 770)
        RESPONSE_OK_225604 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 770, 34), gtk_225603, 'RESPONSE_OK')
        # Processing the call keyword arguments (line 770)
        kwargs_225605 = {}
        # Getting the type of 'self' (line 770)
        self_225601 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 770, 8), 'self', False)
        # Obtaining the member 'set_default_response' of a type (line 770)
        set_default_response_225602 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 770, 8), self_225601, 'set_default_response')
        # Calling set_default_response(args, kwargs) (line 770)
        set_default_response_call_result_225606 = invoke(stypy.reporting.localization.Localization(__file__, 770, 8), set_default_response_225602, *[RESPONSE_OK_225604], **kwargs_225605)
        
        
        
        # Getting the type of 'path' (line 772)
        path_225607 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 772, 15), 'path')
        # Applying the 'not' unary operator (line 772)
        result_not__225608 = python_operator(stypy.reporting.localization.Localization(__file__, 772, 11), 'not', path_225607)
        
        # Testing the type of an if condition (line 772)
        if_condition_225609 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 772, 8), result_not__225608)
        # Assigning a type to the variable 'if_condition_225609' (line 772)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 772, 8), 'if_condition_225609', if_condition_225609)
        # SSA begins for if statement (line 772)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a BinOp to a Name (line 773):
        
        # Assigning a BinOp to a Name (line 773):
        
        # Call to getcwd(...): (line 773)
        # Processing the call keyword arguments (line 773)
        kwargs_225612 = {}
        # Getting the type of 'os' (line 773)
        os_225610 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 773, 19), 'os', False)
        # Obtaining the member 'getcwd' of a type (line 773)
        getcwd_225611 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 773, 19), os_225610, 'getcwd')
        # Calling getcwd(args, kwargs) (line 773)
        getcwd_call_result_225613 = invoke(stypy.reporting.localization.Localization(__file__, 773, 19), getcwd_225611, *[], **kwargs_225612)
        
        # Getting the type of 'os' (line 773)
        os_225614 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 773, 33), 'os')
        # Obtaining the member 'sep' of a type (line 773)
        sep_225615 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 773, 33), os_225614, 'sep')
        # Applying the binary operator '+' (line 773)
        result_add_225616 = python_operator(stypy.reporting.localization.Localization(__file__, 773, 19), '+', getcwd_call_result_225613, sep_225615)
        
        # Assigning a type to the variable 'path' (line 773)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 773, 12), 'path', result_add_225616)
        # SSA join for if statement (line 772)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to set_current_folder(...): (line 776)
        # Processing the call arguments (line 776)
        # Getting the type of 'path' (line 776)
        path_225619 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 776, 33), 'path', False)
        # Processing the call keyword arguments (line 776)
        kwargs_225620 = {}
        # Getting the type of 'self' (line 776)
        self_225617 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 776, 8), 'self', False)
        # Obtaining the member 'set_current_folder' of a type (line 776)
        set_current_folder_225618 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 776, 8), self_225617, 'set_current_folder')
        # Calling set_current_folder(args, kwargs) (line 776)
        set_current_folder_call_result_225621 = invoke(stypy.reporting.localization.Localization(__file__, 776, 8), set_current_folder_225618, *[path_225619], **kwargs_225620)
        
        
        # Call to set_current_name(...): (line 777)
        # Processing the call arguments (line 777)
        unicode_225624 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 777, 31), 'unicode', u'image.')
        # Getting the type of 'default_filetype' (line 777)
        default_filetype_225625 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 777, 42), 'default_filetype', False)
        # Applying the binary operator '+' (line 777)
        result_add_225626 = python_operator(stypy.reporting.localization.Localization(__file__, 777, 31), '+', unicode_225624, default_filetype_225625)
        
        # Processing the call keyword arguments (line 777)
        kwargs_225627 = {}
        # Getting the type of 'self' (line 777)
        self_225622 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 777, 8), 'self', False)
        # Obtaining the member 'set_current_name' of a type (line 777)
        set_current_name_225623 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 777, 8), self_225622, 'set_current_name')
        # Calling set_current_name(args, kwargs) (line 777)
        set_current_name_call_result_225628 = invoke(stypy.reporting.localization.Localization(__file__, 777, 8), set_current_name_225623, *[result_add_225626], **kwargs_225627)
        
        
        # Assigning a Call to a Name (line 779):
        
        # Assigning a Call to a Name (line 779):
        
        # Call to HBox(...): (line 779)
        # Processing the call keyword arguments (line 779)
        int_225631 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 779, 32), 'int')
        keyword_225632 = int_225631
        kwargs_225633 = {'spacing': keyword_225632}
        # Getting the type of 'gtk' (line 779)
        gtk_225629 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 779, 15), 'gtk', False)
        # Obtaining the member 'HBox' of a type (line 779)
        HBox_225630 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 779, 15), gtk_225629, 'HBox')
        # Calling HBox(args, kwargs) (line 779)
        HBox_call_result_225634 = invoke(stypy.reporting.localization.Localization(__file__, 779, 15), HBox_225630, *[], **kwargs_225633)
        
        # Assigning a type to the variable 'hbox' (line 779)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 779, 8), 'hbox', HBox_call_result_225634)
        
        # Call to pack_start(...): (line 780)
        # Processing the call arguments (line 780)
        
        # Call to Label(...): (line 780)
        # Processing the call arguments (line 780)
        unicode_225639 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 780, 35), 'unicode', u'File Format:')
        # Processing the call keyword arguments (line 780)
        kwargs_225640 = {}
        # Getting the type of 'gtk' (line 780)
        gtk_225637 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 780, 24), 'gtk', False)
        # Obtaining the member 'Label' of a type (line 780)
        Label_225638 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 780, 24), gtk_225637, 'Label')
        # Calling Label(args, kwargs) (line 780)
        Label_call_result_225641 = invoke(stypy.reporting.localization.Localization(__file__, 780, 24), Label_225638, *[unicode_225639], **kwargs_225640)
        
        # Processing the call keyword arguments (line 780)
        # Getting the type of 'False' (line 780)
        False_225642 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 780, 59), 'False', False)
        keyword_225643 = False_225642
        kwargs_225644 = {'expand': keyword_225643}
        # Getting the type of 'hbox' (line 780)
        hbox_225635 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 780, 8), 'hbox', False)
        # Obtaining the member 'pack_start' of a type (line 780)
        pack_start_225636 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 780, 8), hbox_225635, 'pack_start')
        # Calling pack_start(args, kwargs) (line 780)
        pack_start_call_result_225645 = invoke(stypy.reporting.localization.Localization(__file__, 780, 8), pack_start_225636, *[Label_call_result_225641], **kwargs_225644)
        
        
        # Assigning a Call to a Name (line 782):
        
        # Assigning a Call to a Name (line 782):
        
        # Call to ListStore(...): (line 782)
        # Processing the call arguments (line 782)
        # Getting the type of 'gobject' (line 782)
        gobject_225648 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 782, 34), 'gobject', False)
        # Obtaining the member 'TYPE_STRING' of a type (line 782)
        TYPE_STRING_225649 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 782, 34), gobject_225648, 'TYPE_STRING')
        # Processing the call keyword arguments (line 782)
        kwargs_225650 = {}
        # Getting the type of 'gtk' (line 782)
        gtk_225646 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 782, 20), 'gtk', False)
        # Obtaining the member 'ListStore' of a type (line 782)
        ListStore_225647 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 782, 20), gtk_225646, 'ListStore')
        # Calling ListStore(args, kwargs) (line 782)
        ListStore_call_result_225651 = invoke(stypy.reporting.localization.Localization(__file__, 782, 20), ListStore_225647, *[TYPE_STRING_225649], **kwargs_225650)
        
        # Assigning a type to the variable 'liststore' (line 782)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 782, 8), 'liststore', ListStore_call_result_225651)
        
        # Assigning a Call to a Name (line 783):
        
        # Assigning a Call to a Name (line 783):
        
        # Call to ComboBox(...): (line 783)
        # Processing the call arguments (line 783)
        # Getting the type of 'liststore' (line 783)
        liststore_225654 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 783, 28), 'liststore', False)
        # Processing the call keyword arguments (line 783)
        kwargs_225655 = {}
        # Getting the type of 'gtk' (line 783)
        gtk_225652 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 783, 15), 'gtk', False)
        # Obtaining the member 'ComboBox' of a type (line 783)
        ComboBox_225653 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 783, 15), gtk_225652, 'ComboBox')
        # Calling ComboBox(args, kwargs) (line 783)
        ComboBox_call_result_225656 = invoke(stypy.reporting.localization.Localization(__file__, 783, 15), ComboBox_225653, *[liststore_225654], **kwargs_225655)
        
        # Assigning a type to the variable 'cbox' (line 783)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 783, 8), 'cbox', ComboBox_call_result_225656)
        
        # Assigning a Call to a Name (line 784):
        
        # Assigning a Call to a Name (line 784):
        
        # Call to CellRendererText(...): (line 784)
        # Processing the call keyword arguments (line 784)
        kwargs_225659 = {}
        # Getting the type of 'gtk' (line 784)
        gtk_225657 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 784, 15), 'gtk', False)
        # Obtaining the member 'CellRendererText' of a type (line 784)
        CellRendererText_225658 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 784, 15), gtk_225657, 'CellRendererText')
        # Calling CellRendererText(args, kwargs) (line 784)
        CellRendererText_call_result_225660 = invoke(stypy.reporting.localization.Localization(__file__, 784, 15), CellRendererText_225658, *[], **kwargs_225659)
        
        # Assigning a type to the variable 'cell' (line 784)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 784, 8), 'cell', CellRendererText_call_result_225660)
        
        # Call to pack_start(...): (line 785)
        # Processing the call arguments (line 785)
        # Getting the type of 'cell' (line 785)
        cell_225663 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 785, 24), 'cell', False)
        # Getting the type of 'True' (line 785)
        True_225664 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 785, 30), 'True', False)
        # Processing the call keyword arguments (line 785)
        kwargs_225665 = {}
        # Getting the type of 'cbox' (line 785)
        cbox_225661 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 785, 8), 'cbox', False)
        # Obtaining the member 'pack_start' of a type (line 785)
        pack_start_225662 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 785, 8), cbox_225661, 'pack_start')
        # Calling pack_start(args, kwargs) (line 785)
        pack_start_call_result_225666 = invoke(stypy.reporting.localization.Localization(__file__, 785, 8), pack_start_225662, *[cell_225663, True_225664], **kwargs_225665)
        
        
        # Call to add_attribute(...): (line 786)
        # Processing the call arguments (line 786)
        # Getting the type of 'cell' (line 786)
        cell_225669 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 786, 27), 'cell', False)
        unicode_225670 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 786, 33), 'unicode', u'text')
        int_225671 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 786, 41), 'int')
        # Processing the call keyword arguments (line 786)
        kwargs_225672 = {}
        # Getting the type of 'cbox' (line 786)
        cbox_225667 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 786, 8), 'cbox', False)
        # Obtaining the member 'add_attribute' of a type (line 786)
        add_attribute_225668 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 786, 8), cbox_225667, 'add_attribute')
        # Calling add_attribute(args, kwargs) (line 786)
        add_attribute_call_result_225673 = invoke(stypy.reporting.localization.Localization(__file__, 786, 8), add_attribute_225668, *[cell_225669, unicode_225670, int_225671], **kwargs_225672)
        
        
        # Call to pack_start(...): (line 787)
        # Processing the call arguments (line 787)
        # Getting the type of 'cbox' (line 787)
        cbox_225676 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 787, 24), 'cbox', False)
        # Processing the call keyword arguments (line 787)
        kwargs_225677 = {}
        # Getting the type of 'hbox' (line 787)
        hbox_225674 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 787, 8), 'hbox', False)
        # Obtaining the member 'pack_start' of a type (line 787)
        pack_start_225675 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 787, 8), hbox_225674, 'pack_start')
        # Calling pack_start(args, kwargs) (line 787)
        pack_start_call_result_225678 = invoke(stypy.reporting.localization.Localization(__file__, 787, 8), pack_start_225675, *[cbox_225676], **kwargs_225677)
        
        
        # Assigning a Name to a Attribute (line 789):
        
        # Assigning a Name to a Attribute (line 789):
        # Getting the type of 'filetypes' (line 789)
        filetypes_225679 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 789, 25), 'filetypes')
        # Getting the type of 'self' (line 789)
        self_225680 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 789, 8), 'self')
        # Setting the type of the member 'filetypes' of a type (line 789)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 789, 8), self_225680, 'filetypes', filetypes_225679)
        
        # Assigning a Call to a Attribute (line 790):
        
        # Assigning a Call to a Attribute (line 790):
        
        # Call to sorted(...): (line 790)
        # Processing the call arguments (line 790)
        
        # Call to iteritems(...): (line 790)
        # Processing the call arguments (line 790)
        # Getting the type of 'filetypes' (line 790)
        filetypes_225684 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 790, 53), 'filetypes', False)
        # Processing the call keyword arguments (line 790)
        kwargs_225685 = {}
        # Getting the type of 'six' (line 790)
        six_225682 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 790, 39), 'six', False)
        # Obtaining the member 'iteritems' of a type (line 790)
        iteritems_225683 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 790, 39), six_225682, 'iteritems')
        # Calling iteritems(args, kwargs) (line 790)
        iteritems_call_result_225686 = invoke(stypy.reporting.localization.Localization(__file__, 790, 39), iteritems_225683, *[filetypes_225684], **kwargs_225685)
        
        # Processing the call keyword arguments (line 790)
        kwargs_225687 = {}
        # Getting the type of 'sorted' (line 790)
        sorted_225681 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 790, 32), 'sorted', False)
        # Calling sorted(args, kwargs) (line 790)
        sorted_call_result_225688 = invoke(stypy.reporting.localization.Localization(__file__, 790, 32), sorted_225681, *[iteritems_call_result_225686], **kwargs_225687)
        
        # Getting the type of 'self' (line 790)
        self_225689 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 790, 8), 'self')
        # Setting the type of the member 'sorted_filetypes' of a type (line 790)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 790, 8), self_225689, 'sorted_filetypes', sorted_call_result_225688)
        
        # Assigning a Num to a Name (line 791):
        
        # Assigning a Num to a Name (line 791):
        int_225690 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 791, 18), 'int')
        # Assigning a type to the variable 'default' (line 791)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 791, 8), 'default', int_225690)
        
        
        # Call to enumerate(...): (line 792)
        # Processing the call arguments (line 792)
        # Getting the type of 'self' (line 792)
        self_225692 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 792, 40), 'self', False)
        # Obtaining the member 'sorted_filetypes' of a type (line 792)
        sorted_filetypes_225693 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 792, 40), self_225692, 'sorted_filetypes')
        # Processing the call keyword arguments (line 792)
        kwargs_225694 = {}
        # Getting the type of 'enumerate' (line 792)
        enumerate_225691 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 792, 30), 'enumerate', False)
        # Calling enumerate(args, kwargs) (line 792)
        enumerate_call_result_225695 = invoke(stypy.reporting.localization.Localization(__file__, 792, 30), enumerate_225691, *[sorted_filetypes_225693], **kwargs_225694)
        
        # Testing the type of a for loop iterable (line 792)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 792, 8), enumerate_call_result_225695)
        # Getting the type of the for loop variable (line 792)
        for_loop_var_225696 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 792, 8), enumerate_call_result_225695)
        # Assigning a type to the variable 'i' (line 792)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 792, 8), 'i', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 792, 8), for_loop_var_225696))
        # Assigning a type to the variable 'ext' (line 792)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 792, 8), 'ext', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 792, 8), for_loop_var_225696))
        # Assigning a type to the variable 'name' (line 792)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 792, 8), 'name', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 792, 8), for_loop_var_225696))
        # SSA begins for a for statement (line 792)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to append_text(...): (line 793)
        # Processing the call arguments (line 793)
        unicode_225699 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 793, 29), 'unicode', u'%s (*.%s)')
        
        # Obtaining an instance of the builtin type 'tuple' (line 793)
        tuple_225700 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 793, 44), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 793)
        # Adding element type (line 793)
        # Getting the type of 'name' (line 793)
        name_225701 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 793, 44), 'name', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 793, 44), tuple_225700, name_225701)
        # Adding element type (line 793)
        # Getting the type of 'ext' (line 793)
        ext_225702 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 793, 50), 'ext', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 793, 44), tuple_225700, ext_225702)
        
        # Applying the binary operator '%' (line 793)
        result_mod_225703 = python_operator(stypy.reporting.localization.Localization(__file__, 793, 29), '%', unicode_225699, tuple_225700)
        
        # Processing the call keyword arguments (line 793)
        kwargs_225704 = {}
        # Getting the type of 'cbox' (line 793)
        cbox_225697 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 793, 12), 'cbox', False)
        # Obtaining the member 'append_text' of a type (line 793)
        append_text_225698 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 793, 12), cbox_225697, 'append_text')
        # Calling append_text(args, kwargs) (line 793)
        append_text_call_result_225705 = invoke(stypy.reporting.localization.Localization(__file__, 793, 12), append_text_225698, *[result_mod_225703], **kwargs_225704)
        
        
        
        # Getting the type of 'ext' (line 794)
        ext_225706 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 794, 15), 'ext')
        # Getting the type of 'default_filetype' (line 794)
        default_filetype_225707 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 794, 22), 'default_filetype')
        # Applying the binary operator '==' (line 794)
        result_eq_225708 = python_operator(stypy.reporting.localization.Localization(__file__, 794, 15), '==', ext_225706, default_filetype_225707)
        
        # Testing the type of an if condition (line 794)
        if_condition_225709 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 794, 12), result_eq_225708)
        # Assigning a type to the variable 'if_condition_225709' (line 794)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 794, 12), 'if_condition_225709', if_condition_225709)
        # SSA begins for if statement (line 794)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Name to a Name (line 795):
        
        # Assigning a Name to a Name (line 795):
        # Getting the type of 'i' (line 795)
        i_225710 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 795, 26), 'i')
        # Assigning a type to the variable 'default' (line 795)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 795, 16), 'default', i_225710)
        # SSA join for if statement (line 794)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to set_active(...): (line 796)
        # Processing the call arguments (line 796)
        # Getting the type of 'default' (line 796)
        default_225713 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 796, 24), 'default', False)
        # Processing the call keyword arguments (line 796)
        kwargs_225714 = {}
        # Getting the type of 'cbox' (line 796)
        cbox_225711 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 796, 8), 'cbox', False)
        # Obtaining the member 'set_active' of a type (line 796)
        set_active_225712 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 796, 8), cbox_225711, 'set_active')
        # Calling set_active(args, kwargs) (line 796)
        set_active_call_result_225715 = invoke(stypy.reporting.localization.Localization(__file__, 796, 8), set_active_225712, *[default_225713], **kwargs_225714)
        
        
        # Assigning a Name to a Attribute (line 797):
        
        # Assigning a Name to a Attribute (line 797):
        # Getting the type of 'default_filetype' (line 797)
        default_filetype_225716 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 797, 19), 'default_filetype')
        # Getting the type of 'self' (line 797)
        self_225717 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 797, 8), 'self')
        # Setting the type of the member 'ext' of a type (line 797)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 797, 8), self_225717, 'ext', default_filetype_225716)

        @norecursion
        def cb_cbox_changed(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            # Getting the type of 'None' (line 799)
            None_225718 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 799, 40), 'None')
            defaults = [None_225718]
            # Create a new context for function 'cb_cbox_changed'
            module_type_store = module_type_store.open_function_context('cb_cbox_changed', 799, 8, False)
            
            # Passed parameters checking function
            cb_cbox_changed.stypy_localization = localization
            cb_cbox_changed.stypy_type_of_self = None
            cb_cbox_changed.stypy_type_store = module_type_store
            cb_cbox_changed.stypy_function_name = 'cb_cbox_changed'
            cb_cbox_changed.stypy_param_names_list = ['cbox', 'data']
            cb_cbox_changed.stypy_varargs_param_name = None
            cb_cbox_changed.stypy_kwargs_param_name = None
            cb_cbox_changed.stypy_call_defaults = defaults
            cb_cbox_changed.stypy_call_varargs = varargs
            cb_cbox_changed.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'cb_cbox_changed', ['cbox', 'data'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'cb_cbox_changed', localization, ['cbox', 'data'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'cb_cbox_changed(...)' code ##################

            unicode_225719 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 800, 12), 'unicode', u'File extension changed')
            
            # Assigning a Call to a Tuple (line 801):
            
            # Assigning a Call to a Name:
            
            # Call to split(...): (line 801)
            # Processing the call arguments (line 801)
            
            # Call to get_filename(...): (line 801)
            # Processing the call keyword arguments (line 801)
            kwargs_225725 = {}
            # Getting the type of 'self' (line 801)
            self_225723 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 801, 43), 'self', False)
            # Obtaining the member 'get_filename' of a type (line 801)
            get_filename_225724 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 801, 43), self_225723, 'get_filename')
            # Calling get_filename(args, kwargs) (line 801)
            get_filename_call_result_225726 = invoke(stypy.reporting.localization.Localization(__file__, 801, 43), get_filename_225724, *[], **kwargs_225725)
            
            # Processing the call keyword arguments (line 801)
            kwargs_225727 = {}
            # Getting the type of 'os' (line 801)
            os_225720 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 801, 29), 'os', False)
            # Obtaining the member 'path' of a type (line 801)
            path_225721 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 801, 29), os_225720, 'path')
            # Obtaining the member 'split' of a type (line 801)
            split_225722 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 801, 29), path_225721, 'split')
            # Calling split(args, kwargs) (line 801)
            split_call_result_225728 = invoke(stypy.reporting.localization.Localization(__file__, 801, 29), split_225722, *[get_filename_call_result_225726], **kwargs_225727)
            
            # Assigning a type to the variable 'call_assignment_223321' (line 801)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 801, 12), 'call_assignment_223321', split_call_result_225728)
            
            # Assigning a Call to a Name (line 801):
            
            # Call to __getitem__(...):
            # Processing the call arguments
            int_225731 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 801, 12), 'int')
            # Processing the call keyword arguments
            kwargs_225732 = {}
            # Getting the type of 'call_assignment_223321' (line 801)
            call_assignment_223321_225729 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 801, 12), 'call_assignment_223321', False)
            # Obtaining the member '__getitem__' of a type (line 801)
            getitem___225730 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 801, 12), call_assignment_223321_225729, '__getitem__')
            # Calling __getitem__(args, kwargs)
            getitem___call_result_225733 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___225730, *[int_225731], **kwargs_225732)
            
            # Assigning a type to the variable 'call_assignment_223322' (line 801)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 801, 12), 'call_assignment_223322', getitem___call_result_225733)
            
            # Assigning a Name to a Name (line 801):
            # Getting the type of 'call_assignment_223322' (line 801)
            call_assignment_223322_225734 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 801, 12), 'call_assignment_223322')
            # Assigning a type to the variable 'head' (line 801)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 801, 12), 'head', call_assignment_223322_225734)
            
            # Assigning a Call to a Name (line 801):
            
            # Call to __getitem__(...):
            # Processing the call arguments
            int_225737 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 801, 12), 'int')
            # Processing the call keyword arguments
            kwargs_225738 = {}
            # Getting the type of 'call_assignment_223321' (line 801)
            call_assignment_223321_225735 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 801, 12), 'call_assignment_223321', False)
            # Obtaining the member '__getitem__' of a type (line 801)
            getitem___225736 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 801, 12), call_assignment_223321_225735, '__getitem__')
            # Calling __getitem__(args, kwargs)
            getitem___call_result_225739 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___225736, *[int_225737], **kwargs_225738)
            
            # Assigning a type to the variable 'call_assignment_223323' (line 801)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 801, 12), 'call_assignment_223323', getitem___call_result_225739)
            
            # Assigning a Name to a Name (line 801):
            # Getting the type of 'call_assignment_223323' (line 801)
            call_assignment_223323_225740 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 801, 12), 'call_assignment_223323')
            # Assigning a type to the variable 'filename' (line 801)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 801, 18), 'filename', call_assignment_223323_225740)
            
            # Assigning a Call to a Tuple (line 802):
            
            # Assigning a Call to a Name:
            
            # Call to splitext(...): (line 802)
            # Processing the call arguments (line 802)
            # Getting the type of 'filename' (line 802)
            filename_225744 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 802, 41), 'filename', False)
            # Processing the call keyword arguments (line 802)
            kwargs_225745 = {}
            # Getting the type of 'os' (line 802)
            os_225741 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 802, 24), 'os', False)
            # Obtaining the member 'path' of a type (line 802)
            path_225742 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 802, 24), os_225741, 'path')
            # Obtaining the member 'splitext' of a type (line 802)
            splitext_225743 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 802, 24), path_225742, 'splitext')
            # Calling splitext(args, kwargs) (line 802)
            splitext_call_result_225746 = invoke(stypy.reporting.localization.Localization(__file__, 802, 24), splitext_225743, *[filename_225744], **kwargs_225745)
            
            # Assigning a type to the variable 'call_assignment_223324' (line 802)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 802, 12), 'call_assignment_223324', splitext_call_result_225746)
            
            # Assigning a Call to a Name (line 802):
            
            # Call to __getitem__(...):
            # Processing the call arguments
            int_225749 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 802, 12), 'int')
            # Processing the call keyword arguments
            kwargs_225750 = {}
            # Getting the type of 'call_assignment_223324' (line 802)
            call_assignment_223324_225747 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 802, 12), 'call_assignment_223324', False)
            # Obtaining the member '__getitem__' of a type (line 802)
            getitem___225748 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 802, 12), call_assignment_223324_225747, '__getitem__')
            # Calling __getitem__(args, kwargs)
            getitem___call_result_225751 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___225748, *[int_225749], **kwargs_225750)
            
            # Assigning a type to the variable 'call_assignment_223325' (line 802)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 802, 12), 'call_assignment_223325', getitem___call_result_225751)
            
            # Assigning a Name to a Name (line 802):
            # Getting the type of 'call_assignment_223325' (line 802)
            call_assignment_223325_225752 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 802, 12), 'call_assignment_223325')
            # Assigning a type to the variable 'root' (line 802)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 802, 12), 'root', call_assignment_223325_225752)
            
            # Assigning a Call to a Name (line 802):
            
            # Call to __getitem__(...):
            # Processing the call arguments
            int_225755 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 802, 12), 'int')
            # Processing the call keyword arguments
            kwargs_225756 = {}
            # Getting the type of 'call_assignment_223324' (line 802)
            call_assignment_223324_225753 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 802, 12), 'call_assignment_223324', False)
            # Obtaining the member '__getitem__' of a type (line 802)
            getitem___225754 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 802, 12), call_assignment_223324_225753, '__getitem__')
            # Calling __getitem__(args, kwargs)
            getitem___call_result_225757 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___225754, *[int_225755], **kwargs_225756)
            
            # Assigning a type to the variable 'call_assignment_223326' (line 802)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 802, 12), 'call_assignment_223326', getitem___call_result_225757)
            
            # Assigning a Name to a Name (line 802):
            # Getting the type of 'call_assignment_223326' (line 802)
            call_assignment_223326_225758 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 802, 12), 'call_assignment_223326')
            # Assigning a type to the variable 'ext' (line 802)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 802, 18), 'ext', call_assignment_223326_225758)
            
            # Assigning a Subscript to a Name (line 803):
            
            # Assigning a Subscript to a Name (line 803):
            
            # Obtaining the type of the subscript
            int_225759 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 803, 22), 'int')
            slice_225760 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 803, 18), int_225759, None, None)
            # Getting the type of 'ext' (line 803)
            ext_225761 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 803, 18), 'ext')
            # Obtaining the member '__getitem__' of a type (line 803)
            getitem___225762 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 803, 18), ext_225761, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 803)
            subscript_call_result_225763 = invoke(stypy.reporting.localization.Localization(__file__, 803, 18), getitem___225762, slice_225760)
            
            # Assigning a type to the variable 'ext' (line 803)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 803, 12), 'ext', subscript_call_result_225763)
            
            # Assigning a Subscript to a Name (line 804):
            
            # Assigning a Subscript to a Name (line 804):
            
            # Obtaining the type of the subscript
            int_225764 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 804, 63), 'int')
            
            # Obtaining the type of the subscript
            
            # Call to get_active(...): (line 804)
            # Processing the call keyword arguments (line 804)
            kwargs_225767 = {}
            # Getting the type of 'cbox' (line 804)
            cbox_225765 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 804, 44), 'cbox', False)
            # Obtaining the member 'get_active' of a type (line 804)
            get_active_225766 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 804, 44), cbox_225765, 'get_active')
            # Calling get_active(args, kwargs) (line 804)
            get_active_call_result_225768 = invoke(stypy.reporting.localization.Localization(__file__, 804, 44), get_active_225766, *[], **kwargs_225767)
            
            # Getting the type of 'self' (line 804)
            self_225769 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 804, 22), 'self')
            # Obtaining the member 'sorted_filetypes' of a type (line 804)
            sorted_filetypes_225770 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 804, 22), self_225769, 'sorted_filetypes')
            # Obtaining the member '__getitem__' of a type (line 804)
            getitem___225771 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 804, 22), sorted_filetypes_225770, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 804)
            subscript_call_result_225772 = invoke(stypy.reporting.localization.Localization(__file__, 804, 22), getitem___225771, get_active_call_result_225768)
            
            # Obtaining the member '__getitem__' of a type (line 804)
            getitem___225773 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 804, 22), subscript_call_result_225772, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 804)
            subscript_call_result_225774 = invoke(stypy.reporting.localization.Localization(__file__, 804, 22), getitem___225773, int_225764)
            
            # Assigning a type to the variable 'new_ext' (line 804)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 804, 12), 'new_ext', subscript_call_result_225774)
            
            # Assigning a Name to a Attribute (line 805):
            
            # Assigning a Name to a Attribute (line 805):
            # Getting the type of 'new_ext' (line 805)
            new_ext_225775 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 805, 23), 'new_ext')
            # Getting the type of 'self' (line 805)
            self_225776 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 805, 12), 'self')
            # Setting the type of the member 'ext' of a type (line 805)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 805, 12), self_225776, 'ext', new_ext_225775)
            
            
            # Getting the type of 'ext' (line 807)
            ext_225777 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 807, 15), 'ext')
            # Getting the type of 'self' (line 807)
            self_225778 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 807, 22), 'self')
            # Obtaining the member 'filetypes' of a type (line 807)
            filetypes_225779 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 807, 22), self_225778, 'filetypes')
            # Applying the binary operator 'in' (line 807)
            result_contains_225780 = python_operator(stypy.reporting.localization.Localization(__file__, 807, 15), 'in', ext_225777, filetypes_225779)
            
            # Testing the type of an if condition (line 807)
            if_condition_225781 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 807, 12), result_contains_225780)
            # Assigning a type to the variable 'if_condition_225781' (line 807)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 807, 12), 'if_condition_225781', if_condition_225781)
            # SSA begins for if statement (line 807)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a BinOp to a Name (line 808):
            
            # Assigning a BinOp to a Name (line 808):
            # Getting the type of 'root' (line 808)
            root_225782 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 808, 27), 'root')
            unicode_225783 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 808, 34), 'unicode', u'.')
            # Applying the binary operator '+' (line 808)
            result_add_225784 = python_operator(stypy.reporting.localization.Localization(__file__, 808, 27), '+', root_225782, unicode_225783)
            
            # Getting the type of 'new_ext' (line 808)
            new_ext_225785 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 808, 40), 'new_ext')
            # Applying the binary operator '+' (line 808)
            result_add_225786 = python_operator(stypy.reporting.localization.Localization(__file__, 808, 38), '+', result_add_225784, new_ext_225785)
            
            # Assigning a type to the variable 'filename' (line 808)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 808, 16), 'filename', result_add_225786)
            # SSA branch for the else part of an if statement (line 807)
            module_type_store.open_ssa_branch('else')
            
            
            # Getting the type of 'ext' (line 809)
            ext_225787 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 809, 17), 'ext')
            unicode_225788 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 809, 24), 'unicode', u'')
            # Applying the binary operator '==' (line 809)
            result_eq_225789 = python_operator(stypy.reporting.localization.Localization(__file__, 809, 17), '==', ext_225787, unicode_225788)
            
            # Testing the type of an if condition (line 809)
            if_condition_225790 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 809, 17), result_eq_225789)
            # Assigning a type to the variable 'if_condition_225790' (line 809)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 809, 17), 'if_condition_225790', if_condition_225790)
            # SSA begins for if statement (line 809)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a BinOp to a Name (line 810):
            
            # Assigning a BinOp to a Name (line 810):
            
            # Call to rstrip(...): (line 810)
            # Processing the call arguments (line 810)
            unicode_225793 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 810, 43), 'unicode', u'.')
            # Processing the call keyword arguments (line 810)
            kwargs_225794 = {}
            # Getting the type of 'filename' (line 810)
            filename_225791 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 810, 27), 'filename', False)
            # Obtaining the member 'rstrip' of a type (line 810)
            rstrip_225792 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 810, 27), filename_225791, 'rstrip')
            # Calling rstrip(args, kwargs) (line 810)
            rstrip_call_result_225795 = invoke(stypy.reporting.localization.Localization(__file__, 810, 27), rstrip_225792, *[unicode_225793], **kwargs_225794)
            
            unicode_225796 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 810, 50), 'unicode', u'.')
            # Applying the binary operator '+' (line 810)
            result_add_225797 = python_operator(stypy.reporting.localization.Localization(__file__, 810, 27), '+', rstrip_call_result_225795, unicode_225796)
            
            # Getting the type of 'new_ext' (line 810)
            new_ext_225798 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 810, 56), 'new_ext')
            # Applying the binary operator '+' (line 810)
            result_add_225799 = python_operator(stypy.reporting.localization.Localization(__file__, 810, 54), '+', result_add_225797, new_ext_225798)
            
            # Assigning a type to the variable 'filename' (line 810)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 810, 16), 'filename', result_add_225799)
            # SSA join for if statement (line 809)
            module_type_store = module_type_store.join_ssa_context()
            
            # SSA join for if statement (line 807)
            module_type_store = module_type_store.join_ssa_context()
            
            
            # Call to set_current_name(...): (line 812)
            # Processing the call arguments (line 812)
            # Getting the type of 'filename' (line 812)
            filename_225802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 812, 34), 'filename', False)
            # Processing the call keyword arguments (line 812)
            kwargs_225803 = {}
            # Getting the type of 'self' (line 812)
            self_225800 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 812, 12), 'self', False)
            # Obtaining the member 'set_current_name' of a type (line 812)
            set_current_name_225801 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 812, 12), self_225800, 'set_current_name')
            # Calling set_current_name(args, kwargs) (line 812)
            set_current_name_call_result_225804 = invoke(stypy.reporting.localization.Localization(__file__, 812, 12), set_current_name_225801, *[filename_225802], **kwargs_225803)
            
            
            # ################# End of 'cb_cbox_changed(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'cb_cbox_changed' in the type store
            # Getting the type of 'stypy_return_type' (line 799)
            stypy_return_type_225805 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 799, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_225805)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'cb_cbox_changed'
            return stypy_return_type_225805

        # Assigning a type to the variable 'cb_cbox_changed' (line 799)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 799, 8), 'cb_cbox_changed', cb_cbox_changed)
        
        # Call to connect(...): (line 813)
        # Processing the call arguments (line 813)
        unicode_225808 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 813, 21), 'unicode', u'changed')
        # Getting the type of 'cb_cbox_changed' (line 813)
        cb_cbox_changed_225809 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 813, 32), 'cb_cbox_changed', False)
        # Processing the call keyword arguments (line 813)
        kwargs_225810 = {}
        # Getting the type of 'cbox' (line 813)
        cbox_225806 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 813, 8), 'cbox', False)
        # Obtaining the member 'connect' of a type (line 813)
        connect_225807 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 813, 8), cbox_225806, 'connect')
        # Calling connect(args, kwargs) (line 813)
        connect_call_result_225811 = invoke(stypy.reporting.localization.Localization(__file__, 813, 8), connect_225807, *[unicode_225808, cb_cbox_changed_225809], **kwargs_225810)
        
        
        # Call to show_all(...): (line 815)
        # Processing the call keyword arguments (line 815)
        kwargs_225814 = {}
        # Getting the type of 'hbox' (line 815)
        hbox_225812 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 815, 8), 'hbox', False)
        # Obtaining the member 'show_all' of a type (line 815)
        show_all_225813 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 815, 8), hbox_225812, 'show_all')
        # Calling show_all(args, kwargs) (line 815)
        show_all_call_result_225815 = invoke(stypy.reporting.localization.Localization(__file__, 815, 8), show_all_225813, *[], **kwargs_225814)
        
        
        # Call to set_extra_widget(...): (line 816)
        # Processing the call arguments (line 816)
        # Getting the type of 'hbox' (line 816)
        hbox_225818 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 816, 30), 'hbox', False)
        # Processing the call keyword arguments (line 816)
        kwargs_225819 = {}
        # Getting the type of 'self' (line 816)
        self_225816 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 816, 8), 'self', False)
        # Obtaining the member 'set_extra_widget' of a type (line 816)
        set_extra_widget_225817 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 816, 8), self_225816, 'set_extra_widget')
        # Calling set_extra_widget(args, kwargs) (line 816)
        set_extra_widget_call_result_225820 = invoke(stypy.reporting.localization.Localization(__file__, 816, 8), set_extra_widget_225817, *[hbox_225818], **kwargs_225819)
        
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def get_filename_from_user(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'get_filename_from_user'
        module_type_store = module_type_store.open_function_context('get_filename_from_user', 818, 4, False)
        # Assigning a type to the variable 'self' (line 819)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 819, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        FileChooserDialog.get_filename_from_user.__dict__.__setitem__('stypy_localization', localization)
        FileChooserDialog.get_filename_from_user.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        FileChooserDialog.get_filename_from_user.__dict__.__setitem__('stypy_type_store', module_type_store)
        FileChooserDialog.get_filename_from_user.__dict__.__setitem__('stypy_function_name', 'FileChooserDialog.get_filename_from_user')
        FileChooserDialog.get_filename_from_user.__dict__.__setitem__('stypy_param_names_list', [])
        FileChooserDialog.get_filename_from_user.__dict__.__setitem__('stypy_varargs_param_name', None)
        FileChooserDialog.get_filename_from_user.__dict__.__setitem__('stypy_kwargs_param_name', None)
        FileChooserDialog.get_filename_from_user.__dict__.__setitem__('stypy_call_defaults', defaults)
        FileChooserDialog.get_filename_from_user.__dict__.__setitem__('stypy_call_varargs', varargs)
        FileChooserDialog.get_filename_from_user.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        FileChooserDialog.get_filename_from_user.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FileChooserDialog.get_filename_from_user', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_filename_from_user', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_filename_from_user(...)' code ##################

        
        # Getting the type of 'True' (line 819)
        True_225821 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 819, 14), 'True')
        # Testing the type of an if condition (line 819)
        is_suitable_condition(stypy.reporting.localization.Localization(__file__, 819, 8), True_225821)
        # SSA begins for while statement (line 819)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'while loop')
        
        # Assigning a Name to a Name (line 820):
        
        # Assigning a Name to a Name (line 820):
        # Getting the type of 'None' (line 820)
        None_225822 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 820, 23), 'None')
        # Assigning a type to the variable 'filename' (line 820)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 820, 12), 'filename', None_225822)
        
        
        
        # Call to run(...): (line 821)
        # Processing the call keyword arguments (line 821)
        kwargs_225825 = {}
        # Getting the type of 'self' (line 821)
        self_225823 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 821, 15), 'self', False)
        # Obtaining the member 'run' of a type (line 821)
        run_225824 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 821, 15), self_225823, 'run')
        # Calling run(args, kwargs) (line 821)
        run_call_result_225826 = invoke(stypy.reporting.localization.Localization(__file__, 821, 15), run_225824, *[], **kwargs_225825)
        
        
        # Call to int(...): (line 821)
        # Processing the call arguments (line 821)
        # Getting the type of 'gtk' (line 821)
        gtk_225828 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 821, 33), 'gtk', False)
        # Obtaining the member 'RESPONSE_OK' of a type (line 821)
        RESPONSE_OK_225829 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 821, 33), gtk_225828, 'RESPONSE_OK')
        # Processing the call keyword arguments (line 821)
        kwargs_225830 = {}
        # Getting the type of 'int' (line 821)
        int_225827 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 821, 29), 'int', False)
        # Calling int(args, kwargs) (line 821)
        int_call_result_225831 = invoke(stypy.reporting.localization.Localization(__file__, 821, 29), int_225827, *[RESPONSE_OK_225829], **kwargs_225830)
        
        # Applying the binary operator '!=' (line 821)
        result_ne_225832 = python_operator(stypy.reporting.localization.Localization(__file__, 821, 15), '!=', run_call_result_225826, int_call_result_225831)
        
        # Testing the type of an if condition (line 821)
        if_condition_225833 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 821, 12), result_ne_225832)
        # Assigning a type to the variable 'if_condition_225833' (line 821)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 821, 12), 'if_condition_225833', if_condition_225833)
        # SSA begins for if statement (line 821)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        # SSA join for if statement (line 821)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 823):
        
        # Assigning a Call to a Name (line 823):
        
        # Call to get_filename(...): (line 823)
        # Processing the call keyword arguments (line 823)
        kwargs_225836 = {}
        # Getting the type of 'self' (line 823)
        self_225834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 823, 23), 'self', False)
        # Obtaining the member 'get_filename' of a type (line 823)
        get_filename_225835 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 823, 23), self_225834, 'get_filename')
        # Calling get_filename(args, kwargs) (line 823)
        get_filename_call_result_225837 = invoke(stypy.reporting.localization.Localization(__file__, 823, 23), get_filename_225835, *[], **kwargs_225836)
        
        # Assigning a type to the variable 'filename' (line 823)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 823, 12), 'filename', get_filename_call_result_225837)
        # SSA join for while statement (line 819)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 826)
        tuple_225838 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 826, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 826)
        # Adding element type (line 826)
        # Getting the type of 'filename' (line 826)
        filename_225839 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 826, 15), 'filename')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 826, 15), tuple_225838, filename_225839)
        # Adding element type (line 826)
        # Getting the type of 'self' (line 826)
        self_225840 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 826, 25), 'self')
        # Obtaining the member 'ext' of a type (line 826)
        ext_225841 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 826, 25), self_225840, 'ext')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 826, 15), tuple_225838, ext_225841)
        
        # Assigning a type to the variable 'stypy_return_type' (line 826)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 826, 8), 'stypy_return_type', tuple_225838)
        
        # ################# End of 'get_filename_from_user(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_filename_from_user' in the type store
        # Getting the type of 'stypy_return_type' (line 818)
        stypy_return_type_225842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 818, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_225842)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_filename_from_user'
        return stypy_return_type_225842


# Assigning a type to the variable 'FileChooserDialog' (line 754)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 754, 0), 'FileChooserDialog', FileChooserDialog)
# Declaration of the 'DialogLineprops' class

class DialogLineprops(object, ):
    unicode_225843 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 832, (-1)), 'unicode', u'\n    A GUI dialog for controlling lineprops\n    ')
    
    # Assigning a Tuple to a Name (line 833):
    
    # Assigning a ListComp to a Name (line 843):
    
    # Assigning a DictComp to a Name (line 844):
    
    # Assigning a ListComp to a Name (line 846):
    
    # Assigning a DictComp to a Name (line 848):

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 850, 4, False)
        # Assigning a type to the variable 'self' (line 851)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 851, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'DialogLineprops.__init__', ['lines'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['lines'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 851, 8))
        
        # 'import gtk.glade' statement (line 851)
        update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
        import_225844 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 851, 8), 'gtk.glade')

        if (type(import_225844) is not StypyTypeError):

            if (import_225844 != 'pyd_module'):
                __import__(import_225844)
                sys_modules_225845 = sys.modules[import_225844]
                import_module(stypy.reporting.localization.Localization(__file__, 851, 8), 'gtk.glade', sys_modules_225845.module_type_store, module_type_store)
            else:
                import gtk.glade

                import_module(stypy.reporting.localization.Localization(__file__, 851, 8), 'gtk.glade', gtk.glade, module_type_store)

        else:
            # Assigning a type to the variable 'gtk.glade' (line 851)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 851, 8), 'gtk.glade', import_225844)

        remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')
        
        
        # Assigning a Call to a Name (line 853):
        
        # Assigning a Call to a Name (line 853):
        
        # Call to get_data_path(...): (line 853)
        # Processing the call keyword arguments (line 853)
        kwargs_225848 = {}
        # Getting the type of 'matplotlib' (line 853)
        matplotlib_225846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 853, 18), 'matplotlib', False)
        # Obtaining the member 'get_data_path' of a type (line 853)
        get_data_path_225847 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 853, 18), matplotlib_225846, 'get_data_path')
        # Calling get_data_path(args, kwargs) (line 853)
        get_data_path_call_result_225849 = invoke(stypy.reporting.localization.Localization(__file__, 853, 18), get_data_path_225847, *[], **kwargs_225848)
        
        # Assigning a type to the variable 'datadir' (line 853)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 853, 8), 'datadir', get_data_path_call_result_225849)
        
        # Assigning a Call to a Name (line 854):
        
        # Assigning a Call to a Name (line 854):
        
        # Call to join(...): (line 854)
        # Processing the call arguments (line 854)
        # Getting the type of 'datadir' (line 854)
        datadir_225853 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 854, 33), 'datadir', False)
        unicode_225854 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 854, 42), 'unicode', u'lineprops.glade')
        # Processing the call keyword arguments (line 854)
        kwargs_225855 = {}
        # Getting the type of 'os' (line 854)
        os_225850 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 854, 20), 'os', False)
        # Obtaining the member 'path' of a type (line 854)
        path_225851 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 854, 20), os_225850, 'path')
        # Obtaining the member 'join' of a type (line 854)
        join_225852 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 854, 20), path_225851, 'join')
        # Calling join(args, kwargs) (line 854)
        join_call_result_225856 = invoke(stypy.reporting.localization.Localization(__file__, 854, 20), join_225852, *[datadir_225853, unicode_225854], **kwargs_225855)
        
        # Assigning a type to the variable 'gladefile' (line 854)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 854, 8), 'gladefile', join_call_result_225856)
        
        
        
        # Call to exists(...): (line 855)
        # Processing the call arguments (line 855)
        # Getting the type of 'gladefile' (line 855)
        gladefile_225860 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 855, 30), 'gladefile', False)
        # Processing the call keyword arguments (line 855)
        kwargs_225861 = {}
        # Getting the type of 'os' (line 855)
        os_225857 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 855, 15), 'os', False)
        # Obtaining the member 'path' of a type (line 855)
        path_225858 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 855, 15), os_225857, 'path')
        # Obtaining the member 'exists' of a type (line 855)
        exists_225859 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 855, 15), path_225858, 'exists')
        # Calling exists(args, kwargs) (line 855)
        exists_call_result_225862 = invoke(stypy.reporting.localization.Localization(__file__, 855, 15), exists_225859, *[gladefile_225860], **kwargs_225861)
        
        # Applying the 'not' unary operator (line 855)
        result_not__225863 = python_operator(stypy.reporting.localization.Localization(__file__, 855, 11), 'not', exists_call_result_225862)
        
        # Testing the type of an if condition (line 855)
        if_condition_225864 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 855, 8), result_not__225863)
        # Assigning a type to the variable 'if_condition_225864' (line 855)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 855, 8), 'if_condition_225864', if_condition_225864)
        # SSA begins for if statement (line 855)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to IOError(...): (line 856)
        # Processing the call arguments (line 856)
        unicode_225866 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 857, 16), 'unicode', u'Could not find gladefile lineprops.glade in %s')
        # Getting the type of 'datadir' (line 857)
        datadir_225867 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 857, 67), 'datadir', False)
        # Applying the binary operator '%' (line 857)
        result_mod_225868 = python_operator(stypy.reporting.localization.Localization(__file__, 857, 16), '%', unicode_225866, datadir_225867)
        
        # Processing the call keyword arguments (line 856)
        kwargs_225869 = {}
        # Getting the type of 'IOError' (line 856)
        IOError_225865 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 856, 18), 'IOError', False)
        # Calling IOError(args, kwargs) (line 856)
        IOError_call_result_225870 = invoke(stypy.reporting.localization.Localization(__file__, 856, 18), IOError_225865, *[result_mod_225868], **kwargs_225869)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 856, 12), IOError_call_result_225870, 'raise parameter', BaseException)
        # SSA join for if statement (line 855)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Name to a Attribute (line 859):
        
        # Assigning a Name to a Attribute (line 859):
        # Getting the type of 'False' (line 859)
        False_225871 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 859, 23), 'False')
        # Getting the type of 'self' (line 859)
        self_225872 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 859, 8), 'self')
        # Setting the type of the member '_inited' of a type (line 859)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 859, 8), self_225872, '_inited', False_225871)
        
        # Assigning a Name to a Attribute (line 860):
        
        # Assigning a Name to a Attribute (line 860):
        # Getting the type of 'True' (line 860)
        True_225873 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 860, 26), 'True')
        # Getting the type of 'self' (line 860)
        self_225874 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 860, 8), 'self')
        # Setting the type of the member '_updateson' of a type (line 860)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 860, 8), self_225874, '_updateson', True_225873)
        
        # Assigning a Call to a Attribute (line 861):
        
        # Assigning a Call to a Attribute (line 861):
        
        # Call to XML(...): (line 861)
        # Processing the call arguments (line 861)
        # Getting the type of 'gladefile' (line 861)
        gladefile_225878 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 861, 35), 'gladefile', False)
        unicode_225879 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 861, 46), 'unicode', u'dialog_lineprops')
        # Processing the call keyword arguments (line 861)
        kwargs_225880 = {}
        # Getting the type of 'gtk' (line 861)
        gtk_225875 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 861, 21), 'gtk', False)
        # Obtaining the member 'glade' of a type (line 861)
        glade_225876 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 861, 21), gtk_225875, 'glade')
        # Obtaining the member 'XML' of a type (line 861)
        XML_225877 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 861, 21), glade_225876, 'XML')
        # Calling XML(args, kwargs) (line 861)
        XML_call_result_225881 = invoke(stypy.reporting.localization.Localization(__file__, 861, 21), XML_225877, *[gladefile_225878, unicode_225879], **kwargs_225880)
        
        # Getting the type of 'self' (line 861)
        self_225882 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 861, 8), 'self')
        # Setting the type of the member 'wtree' of a type (line 861)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 861, 8), self_225882, 'wtree', XML_call_result_225881)
        
        # Call to signal_autoconnect(...): (line 862)
        # Processing the call arguments (line 862)
        # Calculating dict comprehension
        module_type_store = module_type_store.open_function_context('dict comprehension expression', 863, 13, True)
        # Calculating comprehension expression
        # Getting the type of 'self' (line 863)
        self_225892 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 863, 42), 'self', False)
        # Obtaining the member 'signals' of a type (line 863)
        signals_225893 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 863, 42), self_225892, 'signals')
        comprehension_225894 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 863, 13), signals_225893)
        # Assigning a type to the variable 's' (line 863)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 863, 13), 's', comprehension_225894)
        # Getting the type of 's' (line 863)
        s_225886 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 863, 13), 's', False)
        
        # Call to getattr(...): (line 863)
        # Processing the call arguments (line 863)
        # Getting the type of 'self' (line 863)
        self_225888 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 863, 24), 'self', False)
        # Getting the type of 's' (line 863)
        s_225889 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 863, 30), 's', False)
        # Processing the call keyword arguments (line 863)
        kwargs_225890 = {}
        # Getting the type of 'getattr' (line 863)
        getattr_225887 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 863, 16), 'getattr', False)
        # Calling getattr(args, kwargs) (line 863)
        getattr_call_result_225891 = invoke(stypy.reporting.localization.Localization(__file__, 863, 16), getattr_225887, *[self_225888, s_225889], **kwargs_225890)
        
        dict_225895 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 863, 13), 'dict')
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 863, 13), dict_225895, (s_225886, getattr_call_result_225891))
        # Processing the call keyword arguments (line 862)
        kwargs_225896 = {}
        # Getting the type of 'self' (line 862)
        self_225883 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 862, 8), 'self', False)
        # Obtaining the member 'wtree' of a type (line 862)
        wtree_225884 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 862, 8), self_225883, 'wtree')
        # Obtaining the member 'signal_autoconnect' of a type (line 862)
        signal_autoconnect_225885 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 862, 8), wtree_225884, 'signal_autoconnect')
        # Calling signal_autoconnect(args, kwargs) (line 862)
        signal_autoconnect_call_result_225897 = invoke(stypy.reporting.localization.Localization(__file__, 862, 8), signal_autoconnect_225885, *[dict_225895], **kwargs_225896)
        
        
        # Assigning a Call to a Attribute (line 865):
        
        # Assigning a Call to a Attribute (line 865):
        
        # Call to get_widget(...): (line 865)
        # Processing the call arguments (line 865)
        unicode_225901 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 865, 41), 'unicode', u'dialog_lineprops')
        # Processing the call keyword arguments (line 865)
        kwargs_225902 = {}
        # Getting the type of 'self' (line 865)
        self_225898 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 865, 19), 'self', False)
        # Obtaining the member 'wtree' of a type (line 865)
        wtree_225899 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 865, 19), self_225898, 'wtree')
        # Obtaining the member 'get_widget' of a type (line 865)
        get_widget_225900 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 865, 19), wtree_225899, 'get_widget')
        # Calling get_widget(args, kwargs) (line 865)
        get_widget_call_result_225903 = invoke(stypy.reporting.localization.Localization(__file__, 865, 19), get_widget_225900, *[unicode_225901], **kwargs_225902)
        
        # Getting the type of 'self' (line 865)
        self_225904 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 865, 8), 'self')
        # Setting the type of the member 'dlg' of a type (line 865)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 865, 8), self_225904, 'dlg', get_widget_call_result_225903)
        
        # Assigning a Name to a Attribute (line 867):
        
        # Assigning a Name to a Attribute (line 867):
        # Getting the type of 'lines' (line 867)
        lines_225905 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 867, 21), 'lines')
        # Getting the type of 'self' (line 867)
        self_225906 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 867, 8), 'self')
        # Setting the type of the member 'lines' of a type (line 867)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 867, 8), self_225906, 'lines', lines_225905)
        
        # Assigning a Call to a Name (line 869):
        
        # Assigning a Call to a Name (line 869):
        
        # Call to get_widget(...): (line 869)
        # Processing the call arguments (line 869)
        unicode_225910 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 869, 37), 'unicode', u'combobox_lineprops')
        # Processing the call keyword arguments (line 869)
        kwargs_225911 = {}
        # Getting the type of 'self' (line 869)
        self_225907 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 869, 15), 'self', False)
        # Obtaining the member 'wtree' of a type (line 869)
        wtree_225908 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 869, 15), self_225907, 'wtree')
        # Obtaining the member 'get_widget' of a type (line 869)
        get_widget_225909 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 869, 15), wtree_225908, 'get_widget')
        # Calling get_widget(args, kwargs) (line 869)
        get_widget_call_result_225912 = invoke(stypy.reporting.localization.Localization(__file__, 869, 15), get_widget_225909, *[unicode_225910], **kwargs_225911)
        
        # Assigning a type to the variable 'cbox' (line 869)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 869, 8), 'cbox', get_widget_call_result_225912)
        
        # Call to set_active(...): (line 870)
        # Processing the call arguments (line 870)
        int_225915 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 870, 24), 'int')
        # Processing the call keyword arguments (line 870)
        kwargs_225916 = {}
        # Getting the type of 'cbox' (line 870)
        cbox_225913 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 870, 8), 'cbox', False)
        # Obtaining the member 'set_active' of a type (line 870)
        set_active_225914 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 870, 8), cbox_225913, 'set_active')
        # Calling set_active(args, kwargs) (line 870)
        set_active_call_result_225917 = invoke(stypy.reporting.localization.Localization(__file__, 870, 8), set_active_225914, *[int_225915], **kwargs_225916)
        
        
        # Assigning a Name to a Attribute (line 871):
        
        # Assigning a Name to a Attribute (line 871):
        # Getting the type of 'cbox' (line 871)
        cbox_225918 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 871, 30), 'cbox')
        # Getting the type of 'self' (line 871)
        self_225919 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 871, 8), 'self')
        # Setting the type of the member 'cbox_lineprops' of a type (line 871)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 871, 8), self_225919, 'cbox_lineprops', cbox_225918)
        
        # Assigning a Call to a Name (line 873):
        
        # Assigning a Call to a Name (line 873):
        
        # Call to get_widget(...): (line 873)
        # Processing the call arguments (line 873)
        unicode_225923 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 873, 37), 'unicode', u'combobox_linestyles')
        # Processing the call keyword arguments (line 873)
        kwargs_225924 = {}
        # Getting the type of 'self' (line 873)
        self_225920 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 873, 15), 'self', False)
        # Obtaining the member 'wtree' of a type (line 873)
        wtree_225921 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 873, 15), self_225920, 'wtree')
        # Obtaining the member 'get_widget' of a type (line 873)
        get_widget_225922 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 873, 15), wtree_225921, 'get_widget')
        # Calling get_widget(args, kwargs) (line 873)
        get_widget_call_result_225925 = invoke(stypy.reporting.localization.Localization(__file__, 873, 15), get_widget_225922, *[unicode_225923], **kwargs_225924)
        
        # Assigning a type to the variable 'cbox' (line 873)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 873, 8), 'cbox', get_widget_call_result_225925)
        
        # Getting the type of 'self' (line 874)
        self_225926 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 874, 18), 'self')
        # Obtaining the member 'linestyles' of a type (line 874)
        linestyles_225927 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 874, 18), self_225926, 'linestyles')
        # Testing the type of a for loop iterable (line 874)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 874, 8), linestyles_225927)
        # Getting the type of the for loop variable (line 874)
        for_loop_var_225928 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 874, 8), linestyles_225927)
        # Assigning a type to the variable 'ls' (line 874)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 874, 8), 'ls', for_loop_var_225928)
        # SSA begins for a for statement (line 874)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to append_text(...): (line 875)
        # Processing the call arguments (line 875)
        # Getting the type of 'ls' (line 875)
        ls_225931 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 875, 29), 'ls', False)
        # Processing the call keyword arguments (line 875)
        kwargs_225932 = {}
        # Getting the type of 'cbox' (line 875)
        cbox_225929 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 875, 12), 'cbox', False)
        # Obtaining the member 'append_text' of a type (line 875)
        append_text_225930 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 875, 12), cbox_225929, 'append_text')
        # Calling append_text(args, kwargs) (line 875)
        append_text_call_result_225933 = invoke(stypy.reporting.localization.Localization(__file__, 875, 12), append_text_225930, *[ls_225931], **kwargs_225932)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to set_active(...): (line 876)
        # Processing the call arguments (line 876)
        int_225936 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 876, 24), 'int')
        # Processing the call keyword arguments (line 876)
        kwargs_225937 = {}
        # Getting the type of 'cbox' (line 876)
        cbox_225934 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 876, 8), 'cbox', False)
        # Obtaining the member 'set_active' of a type (line 876)
        set_active_225935 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 876, 8), cbox_225934, 'set_active')
        # Calling set_active(args, kwargs) (line 876)
        set_active_call_result_225938 = invoke(stypy.reporting.localization.Localization(__file__, 876, 8), set_active_225935, *[int_225936], **kwargs_225937)
        
        
        # Assigning a Name to a Attribute (line 877):
        
        # Assigning a Name to a Attribute (line 877):
        # Getting the type of 'cbox' (line 877)
        cbox_225939 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 877, 31), 'cbox')
        # Getting the type of 'self' (line 877)
        self_225940 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 877, 8), 'self')
        # Setting the type of the member 'cbox_linestyles' of a type (line 877)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 877, 8), self_225940, 'cbox_linestyles', cbox_225939)
        
        # Assigning a Call to a Name (line 879):
        
        # Assigning a Call to a Name (line 879):
        
        # Call to get_widget(...): (line 879)
        # Processing the call arguments (line 879)
        unicode_225944 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 879, 37), 'unicode', u'combobox_markers')
        # Processing the call keyword arguments (line 879)
        kwargs_225945 = {}
        # Getting the type of 'self' (line 879)
        self_225941 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 879, 15), 'self', False)
        # Obtaining the member 'wtree' of a type (line 879)
        wtree_225942 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 879, 15), self_225941, 'wtree')
        # Obtaining the member 'get_widget' of a type (line 879)
        get_widget_225943 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 879, 15), wtree_225942, 'get_widget')
        # Calling get_widget(args, kwargs) (line 879)
        get_widget_call_result_225946 = invoke(stypy.reporting.localization.Localization(__file__, 879, 15), get_widget_225943, *[unicode_225944], **kwargs_225945)
        
        # Assigning a type to the variable 'cbox' (line 879)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 879, 8), 'cbox', get_widget_call_result_225946)
        
        # Getting the type of 'self' (line 880)
        self_225947 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 880, 17), 'self')
        # Obtaining the member 'markers' of a type (line 880)
        markers_225948 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 880, 17), self_225947, 'markers')
        # Testing the type of a for loop iterable (line 880)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 880, 8), markers_225948)
        # Getting the type of the for loop variable (line 880)
        for_loop_var_225949 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 880, 8), markers_225948)
        # Assigning a type to the variable 'm' (line 880)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 880, 8), 'm', for_loop_var_225949)
        # SSA begins for a for statement (line 880)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to append_text(...): (line 881)
        # Processing the call arguments (line 881)
        # Getting the type of 'm' (line 881)
        m_225952 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 881, 29), 'm', False)
        # Processing the call keyword arguments (line 881)
        kwargs_225953 = {}
        # Getting the type of 'cbox' (line 881)
        cbox_225950 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 881, 12), 'cbox', False)
        # Obtaining the member 'append_text' of a type (line 881)
        append_text_225951 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 881, 12), cbox_225950, 'append_text')
        # Calling append_text(args, kwargs) (line 881)
        append_text_call_result_225954 = invoke(stypy.reporting.localization.Localization(__file__, 881, 12), append_text_225951, *[m_225952], **kwargs_225953)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to set_active(...): (line 882)
        # Processing the call arguments (line 882)
        int_225957 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 882, 24), 'int')
        # Processing the call keyword arguments (line 882)
        kwargs_225958 = {}
        # Getting the type of 'cbox' (line 882)
        cbox_225955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 882, 8), 'cbox', False)
        # Obtaining the member 'set_active' of a type (line 882)
        set_active_225956 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 882, 8), cbox_225955, 'set_active')
        # Calling set_active(args, kwargs) (line 882)
        set_active_call_result_225959 = invoke(stypy.reporting.localization.Localization(__file__, 882, 8), set_active_225956, *[int_225957], **kwargs_225958)
        
        
        # Assigning a Name to a Attribute (line 883):
        
        # Assigning a Name to a Attribute (line 883):
        # Getting the type of 'cbox' (line 883)
        cbox_225960 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 883, 28), 'cbox')
        # Getting the type of 'self' (line 883)
        self_225961 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 883, 8), 'self')
        # Setting the type of the member 'cbox_markers' of a type (line 883)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 883, 8), self_225961, 'cbox_markers', cbox_225960)
        
        # Assigning a Num to a Attribute (line 884):
        
        # Assigning a Num to a Attribute (line 884):
        int_225962 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 884, 24), 'int')
        # Getting the type of 'self' (line 884)
        self_225963 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 884, 8), 'self')
        # Setting the type of the member '_lastcnt' of a type (line 884)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 884, 8), self_225963, '_lastcnt', int_225962)
        
        # Assigning a Name to a Attribute (line 885):
        
        # Assigning a Name to a Attribute (line 885):
        # Getting the type of 'True' (line 885)
        True_225964 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 885, 23), 'True')
        # Getting the type of 'self' (line 885)
        self_225965 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 885, 8), 'self')
        # Setting the type of the member '_inited' of a type (line 885)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 885, 8), self_225965, '_inited', True_225964)
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def show(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'show'
        module_type_store = module_type_store.open_function_context('show', 887, 4, False)
        # Assigning a type to the variable 'self' (line 888)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 888, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        DialogLineprops.show.__dict__.__setitem__('stypy_localization', localization)
        DialogLineprops.show.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        DialogLineprops.show.__dict__.__setitem__('stypy_type_store', module_type_store)
        DialogLineprops.show.__dict__.__setitem__('stypy_function_name', 'DialogLineprops.show')
        DialogLineprops.show.__dict__.__setitem__('stypy_param_names_list', [])
        DialogLineprops.show.__dict__.__setitem__('stypy_varargs_param_name', None)
        DialogLineprops.show.__dict__.__setitem__('stypy_kwargs_param_name', None)
        DialogLineprops.show.__dict__.__setitem__('stypy_call_defaults', defaults)
        DialogLineprops.show.__dict__.__setitem__('stypy_call_varargs', varargs)
        DialogLineprops.show.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        DialogLineprops.show.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'DialogLineprops.show', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'show', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'show(...)' code ##################

        unicode_225966 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 888, 8), 'unicode', u'populate the combo box')
        
        # Assigning a Name to a Attribute (line 889):
        
        # Assigning a Name to a Attribute (line 889):
        # Getting the type of 'False' (line 889)
        False_225967 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 889, 26), 'False')
        # Getting the type of 'self' (line 889)
        self_225968 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 889, 8), 'self')
        # Setting the type of the member '_updateson' of a type (line 889)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 889, 8), self_225968, '_updateson', False_225967)
        
        # Assigning a Attribute to a Name (line 891):
        
        # Assigning a Attribute to a Name (line 891):
        # Getting the type of 'self' (line 891)
        self_225969 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 891, 15), 'self')
        # Obtaining the member 'cbox_lineprops' of a type (line 891)
        cbox_lineprops_225970 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 891, 15), self_225969, 'cbox_lineprops')
        # Assigning a type to the variable 'cbox' (line 891)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 891, 8), 'cbox', cbox_lineprops_225970)
        
        
        # Call to range(...): (line 892)
        # Processing the call arguments (line 892)
        # Getting the type of 'self' (line 892)
        self_225972 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 892, 23), 'self', False)
        # Obtaining the member '_lastcnt' of a type (line 892)
        _lastcnt_225973 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 892, 23), self_225972, '_lastcnt')
        int_225974 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 892, 37), 'int')
        # Applying the binary operator '-' (line 892)
        result_sub_225975 = python_operator(stypy.reporting.localization.Localization(__file__, 892, 23), '-', _lastcnt_225973, int_225974)
        
        int_225976 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 892, 39), 'int')
        int_225977 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 892, 42), 'int')
        # Processing the call keyword arguments (line 892)
        kwargs_225978 = {}
        # Getting the type of 'range' (line 892)
        range_225971 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 892, 17), 'range', False)
        # Calling range(args, kwargs) (line 892)
        range_call_result_225979 = invoke(stypy.reporting.localization.Localization(__file__, 892, 17), range_225971, *[result_sub_225975, int_225976, int_225977], **kwargs_225978)
        
        # Testing the type of a for loop iterable (line 892)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 892, 8), range_call_result_225979)
        # Getting the type of the for loop variable (line 892)
        for_loop_var_225980 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 892, 8), range_call_result_225979)
        # Assigning a type to the variable 'i' (line 892)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 892, 8), 'i', for_loop_var_225980)
        # SSA begins for a for statement (line 892)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to remove_text(...): (line 893)
        # Processing the call arguments (line 893)
        # Getting the type of 'i' (line 893)
        i_225983 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 893, 29), 'i', False)
        # Processing the call keyword arguments (line 893)
        kwargs_225984 = {}
        # Getting the type of 'cbox' (line 893)
        cbox_225981 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 893, 12), 'cbox', False)
        # Obtaining the member 'remove_text' of a type (line 893)
        remove_text_225982 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 893, 12), cbox_225981, 'remove_text')
        # Calling remove_text(args, kwargs) (line 893)
        remove_text_call_result_225985 = invoke(stypy.reporting.localization.Localization(__file__, 893, 12), remove_text_225982, *[i_225983], **kwargs_225984)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'self' (line 896)
        self_225986 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 896, 20), 'self')
        # Obtaining the member 'lines' of a type (line 896)
        lines_225987 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 896, 20), self_225986, 'lines')
        # Testing the type of a for loop iterable (line 896)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 896, 8), lines_225987)
        # Getting the type of the for loop variable (line 896)
        for_loop_var_225988 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 896, 8), lines_225987)
        # Assigning a type to the variable 'line' (line 896)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 896, 8), 'line', for_loop_var_225988)
        # SSA begins for a for statement (line 896)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to append_text(...): (line 897)
        # Processing the call arguments (line 897)
        
        # Call to get_label(...): (line 897)
        # Processing the call keyword arguments (line 897)
        kwargs_225993 = {}
        # Getting the type of 'line' (line 897)
        line_225991 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 897, 29), 'line', False)
        # Obtaining the member 'get_label' of a type (line 897)
        get_label_225992 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 897, 29), line_225991, 'get_label')
        # Calling get_label(args, kwargs) (line 897)
        get_label_call_result_225994 = invoke(stypy.reporting.localization.Localization(__file__, 897, 29), get_label_225992, *[], **kwargs_225993)
        
        # Processing the call keyword arguments (line 897)
        kwargs_225995 = {}
        # Getting the type of 'cbox' (line 897)
        cbox_225989 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 897, 12), 'cbox', False)
        # Obtaining the member 'append_text' of a type (line 897)
        append_text_225990 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 897, 12), cbox_225989, 'append_text')
        # Calling append_text(args, kwargs) (line 897)
        append_text_call_result_225996 = invoke(stypy.reporting.localization.Localization(__file__, 897, 12), append_text_225990, *[get_label_call_result_225994], **kwargs_225995)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to set_active(...): (line 898)
        # Processing the call arguments (line 898)
        int_225999 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 898, 24), 'int')
        # Processing the call keyword arguments (line 898)
        kwargs_226000 = {}
        # Getting the type of 'cbox' (line 898)
        cbox_225997 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 898, 8), 'cbox', False)
        # Obtaining the member 'set_active' of a type (line 898)
        set_active_225998 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 898, 8), cbox_225997, 'set_active')
        # Calling set_active(args, kwargs) (line 898)
        set_active_call_result_226001 = invoke(stypy.reporting.localization.Localization(__file__, 898, 8), set_active_225998, *[int_225999], **kwargs_226000)
        
        
        # Assigning a Name to a Attribute (line 900):
        
        # Assigning a Name to a Attribute (line 900):
        # Getting the type of 'True' (line 900)
        True_226002 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 900, 26), 'True')
        # Getting the type of 'self' (line 900)
        self_226003 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 900, 8), 'self')
        # Setting the type of the member '_updateson' of a type (line 900)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 900, 8), self_226003, '_updateson', True_226002)
        
        # Assigning a Call to a Attribute (line 901):
        
        # Assigning a Call to a Attribute (line 901):
        
        # Call to len(...): (line 901)
        # Processing the call arguments (line 901)
        # Getting the type of 'self' (line 901)
        self_226005 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 901, 28), 'self', False)
        # Obtaining the member 'lines' of a type (line 901)
        lines_226006 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 901, 28), self_226005, 'lines')
        # Processing the call keyword arguments (line 901)
        kwargs_226007 = {}
        # Getting the type of 'len' (line 901)
        len_226004 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 901, 24), 'len', False)
        # Calling len(args, kwargs) (line 901)
        len_call_result_226008 = invoke(stypy.reporting.localization.Localization(__file__, 901, 24), len_226004, *[lines_226006], **kwargs_226007)
        
        # Getting the type of 'self' (line 901)
        self_226009 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 901, 8), 'self')
        # Setting the type of the member '_lastcnt' of a type (line 901)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 901, 8), self_226009, '_lastcnt', len_call_result_226008)
        
        # Call to show(...): (line 902)
        # Processing the call keyword arguments (line 902)
        kwargs_226013 = {}
        # Getting the type of 'self' (line 902)
        self_226010 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 902, 8), 'self', False)
        # Obtaining the member 'dlg' of a type (line 902)
        dlg_226011 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 902, 8), self_226010, 'dlg')
        # Obtaining the member 'show' of a type (line 902)
        show_226012 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 902, 8), dlg_226011, 'show')
        # Calling show(args, kwargs) (line 902)
        show_call_result_226014 = invoke(stypy.reporting.localization.Localization(__file__, 902, 8), show_226012, *[], **kwargs_226013)
        
        
        # ################# End of 'show(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'show' in the type store
        # Getting the type of 'stypy_return_type' (line 887)
        stypy_return_type_226015 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 887, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_226015)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'show'
        return stypy_return_type_226015


    @norecursion
    def get_active_line(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'get_active_line'
        module_type_store = module_type_store.open_function_context('get_active_line', 904, 4, False)
        # Assigning a type to the variable 'self' (line 905)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 905, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        DialogLineprops.get_active_line.__dict__.__setitem__('stypy_localization', localization)
        DialogLineprops.get_active_line.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        DialogLineprops.get_active_line.__dict__.__setitem__('stypy_type_store', module_type_store)
        DialogLineprops.get_active_line.__dict__.__setitem__('stypy_function_name', 'DialogLineprops.get_active_line')
        DialogLineprops.get_active_line.__dict__.__setitem__('stypy_param_names_list', [])
        DialogLineprops.get_active_line.__dict__.__setitem__('stypy_varargs_param_name', None)
        DialogLineprops.get_active_line.__dict__.__setitem__('stypy_kwargs_param_name', None)
        DialogLineprops.get_active_line.__dict__.__setitem__('stypy_call_defaults', defaults)
        DialogLineprops.get_active_line.__dict__.__setitem__('stypy_call_varargs', varargs)
        DialogLineprops.get_active_line.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        DialogLineprops.get_active_line.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'DialogLineprops.get_active_line', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_active_line', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_active_line(...)' code ##################

        unicode_226016 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 905, 8), 'unicode', u'get the active line')
        
        # Assigning a Call to a Name (line 906):
        
        # Assigning a Call to a Name (line 906):
        
        # Call to get_active(...): (line 906)
        # Processing the call keyword arguments (line 906)
        kwargs_226020 = {}
        # Getting the type of 'self' (line 906)
        self_226017 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 906, 14), 'self', False)
        # Obtaining the member 'cbox_lineprops' of a type (line 906)
        cbox_lineprops_226018 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 906, 14), self_226017, 'cbox_lineprops')
        # Obtaining the member 'get_active' of a type (line 906)
        get_active_226019 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 906, 14), cbox_lineprops_226018, 'get_active')
        # Calling get_active(args, kwargs) (line 906)
        get_active_call_result_226021 = invoke(stypy.reporting.localization.Localization(__file__, 906, 14), get_active_226019, *[], **kwargs_226020)
        
        # Assigning a type to the variable 'ind' (line 906)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 906, 8), 'ind', get_active_call_result_226021)
        
        # Assigning a Subscript to a Name (line 907):
        
        # Assigning a Subscript to a Name (line 907):
        
        # Obtaining the type of the subscript
        # Getting the type of 'ind' (line 907)
        ind_226022 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 907, 26), 'ind')
        # Getting the type of 'self' (line 907)
        self_226023 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 907, 15), 'self')
        # Obtaining the member 'lines' of a type (line 907)
        lines_226024 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 907, 15), self_226023, 'lines')
        # Obtaining the member '__getitem__' of a type (line 907)
        getitem___226025 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 907, 15), lines_226024, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 907)
        subscript_call_result_226026 = invoke(stypy.reporting.localization.Localization(__file__, 907, 15), getitem___226025, ind_226022)
        
        # Assigning a type to the variable 'line' (line 907)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 907, 8), 'line', subscript_call_result_226026)
        # Getting the type of 'line' (line 908)
        line_226027 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 908, 15), 'line')
        # Assigning a type to the variable 'stypy_return_type' (line 908)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 908, 8), 'stypy_return_type', line_226027)
        
        # ################# End of 'get_active_line(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_active_line' in the type store
        # Getting the type of 'stypy_return_type' (line 904)
        stypy_return_type_226028 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 904, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_226028)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_active_line'
        return stypy_return_type_226028


    @norecursion
    def get_active_linestyle(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'get_active_linestyle'
        module_type_store = module_type_store.open_function_context('get_active_linestyle', 910, 4, False)
        # Assigning a type to the variable 'self' (line 911)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 911, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        DialogLineprops.get_active_linestyle.__dict__.__setitem__('stypy_localization', localization)
        DialogLineprops.get_active_linestyle.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        DialogLineprops.get_active_linestyle.__dict__.__setitem__('stypy_type_store', module_type_store)
        DialogLineprops.get_active_linestyle.__dict__.__setitem__('stypy_function_name', 'DialogLineprops.get_active_linestyle')
        DialogLineprops.get_active_linestyle.__dict__.__setitem__('stypy_param_names_list', [])
        DialogLineprops.get_active_linestyle.__dict__.__setitem__('stypy_varargs_param_name', None)
        DialogLineprops.get_active_linestyle.__dict__.__setitem__('stypy_kwargs_param_name', None)
        DialogLineprops.get_active_linestyle.__dict__.__setitem__('stypy_call_defaults', defaults)
        DialogLineprops.get_active_linestyle.__dict__.__setitem__('stypy_call_varargs', varargs)
        DialogLineprops.get_active_linestyle.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        DialogLineprops.get_active_linestyle.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'DialogLineprops.get_active_linestyle', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_active_linestyle', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_active_linestyle(...)' code ##################

        unicode_226029 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 911, 8), 'unicode', u'get the active lineinestyle')
        
        # Assigning a Call to a Name (line 912):
        
        # Assigning a Call to a Name (line 912):
        
        # Call to get_active(...): (line 912)
        # Processing the call keyword arguments (line 912)
        kwargs_226033 = {}
        # Getting the type of 'self' (line 912)
        self_226030 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 912, 14), 'self', False)
        # Obtaining the member 'cbox_linestyles' of a type (line 912)
        cbox_linestyles_226031 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 912, 14), self_226030, 'cbox_linestyles')
        # Obtaining the member 'get_active' of a type (line 912)
        get_active_226032 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 912, 14), cbox_linestyles_226031, 'get_active')
        # Calling get_active(args, kwargs) (line 912)
        get_active_call_result_226034 = invoke(stypy.reporting.localization.Localization(__file__, 912, 14), get_active_226032, *[], **kwargs_226033)
        
        # Assigning a type to the variable 'ind' (line 912)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 912, 8), 'ind', get_active_call_result_226034)
        
        # Assigning a Subscript to a Name (line 913):
        
        # Assigning a Subscript to a Name (line 913):
        
        # Obtaining the type of the subscript
        # Getting the type of 'ind' (line 913)
        ind_226035 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 913, 29), 'ind')
        # Getting the type of 'self' (line 913)
        self_226036 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 913, 13), 'self')
        # Obtaining the member 'linestyles' of a type (line 913)
        linestyles_226037 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 913, 13), self_226036, 'linestyles')
        # Obtaining the member '__getitem__' of a type (line 913)
        getitem___226038 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 913, 13), linestyles_226037, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 913)
        subscript_call_result_226039 = invoke(stypy.reporting.localization.Localization(__file__, 913, 13), getitem___226038, ind_226035)
        
        # Assigning a type to the variable 'ls' (line 913)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 913, 8), 'ls', subscript_call_result_226039)
        # Getting the type of 'ls' (line 914)
        ls_226040 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 914, 15), 'ls')
        # Assigning a type to the variable 'stypy_return_type' (line 914)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 914, 8), 'stypy_return_type', ls_226040)
        
        # ################# End of 'get_active_linestyle(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_active_linestyle' in the type store
        # Getting the type of 'stypy_return_type' (line 910)
        stypy_return_type_226041 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 910, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_226041)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_active_linestyle'
        return stypy_return_type_226041


    @norecursion
    def get_active_marker(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'get_active_marker'
        module_type_store = module_type_store.open_function_context('get_active_marker', 916, 4, False)
        # Assigning a type to the variable 'self' (line 917)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 917, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        DialogLineprops.get_active_marker.__dict__.__setitem__('stypy_localization', localization)
        DialogLineprops.get_active_marker.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        DialogLineprops.get_active_marker.__dict__.__setitem__('stypy_type_store', module_type_store)
        DialogLineprops.get_active_marker.__dict__.__setitem__('stypy_function_name', 'DialogLineprops.get_active_marker')
        DialogLineprops.get_active_marker.__dict__.__setitem__('stypy_param_names_list', [])
        DialogLineprops.get_active_marker.__dict__.__setitem__('stypy_varargs_param_name', None)
        DialogLineprops.get_active_marker.__dict__.__setitem__('stypy_kwargs_param_name', None)
        DialogLineprops.get_active_marker.__dict__.__setitem__('stypy_call_defaults', defaults)
        DialogLineprops.get_active_marker.__dict__.__setitem__('stypy_call_varargs', varargs)
        DialogLineprops.get_active_marker.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        DialogLineprops.get_active_marker.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'DialogLineprops.get_active_marker', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_active_marker', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_active_marker(...)' code ##################

        unicode_226042 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 917, 8), 'unicode', u'get the active lineinestyle')
        
        # Assigning a Call to a Name (line 918):
        
        # Assigning a Call to a Name (line 918):
        
        # Call to get_active(...): (line 918)
        # Processing the call keyword arguments (line 918)
        kwargs_226046 = {}
        # Getting the type of 'self' (line 918)
        self_226043 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 918, 14), 'self', False)
        # Obtaining the member 'cbox_markers' of a type (line 918)
        cbox_markers_226044 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 918, 14), self_226043, 'cbox_markers')
        # Obtaining the member 'get_active' of a type (line 918)
        get_active_226045 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 918, 14), cbox_markers_226044, 'get_active')
        # Calling get_active(args, kwargs) (line 918)
        get_active_call_result_226047 = invoke(stypy.reporting.localization.Localization(__file__, 918, 14), get_active_226045, *[], **kwargs_226046)
        
        # Assigning a type to the variable 'ind' (line 918)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 918, 8), 'ind', get_active_call_result_226047)
        
        # Assigning a Subscript to a Name (line 919):
        
        # Assigning a Subscript to a Name (line 919):
        
        # Obtaining the type of the subscript
        # Getting the type of 'ind' (line 919)
        ind_226048 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 919, 25), 'ind')
        # Getting the type of 'self' (line 919)
        self_226049 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 919, 12), 'self')
        # Obtaining the member 'markers' of a type (line 919)
        markers_226050 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 919, 12), self_226049, 'markers')
        # Obtaining the member '__getitem__' of a type (line 919)
        getitem___226051 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 919, 12), markers_226050, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 919)
        subscript_call_result_226052 = invoke(stypy.reporting.localization.Localization(__file__, 919, 12), getitem___226051, ind_226048)
        
        # Assigning a type to the variable 'm' (line 919)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 919, 8), 'm', subscript_call_result_226052)
        # Getting the type of 'm' (line 920)
        m_226053 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 920, 15), 'm')
        # Assigning a type to the variable 'stypy_return_type' (line 920)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 920, 8), 'stypy_return_type', m_226053)
        
        # ################# End of 'get_active_marker(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_active_marker' in the type store
        # Getting the type of 'stypy_return_type' (line 916)
        stypy_return_type_226054 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 916, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_226054)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_active_marker'
        return stypy_return_type_226054


    @norecursion
    def _update(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_update'
        module_type_store = module_type_store.open_function_context('_update', 922, 4, False)
        # Assigning a type to the variable 'self' (line 923)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 923, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        DialogLineprops._update.__dict__.__setitem__('stypy_localization', localization)
        DialogLineprops._update.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        DialogLineprops._update.__dict__.__setitem__('stypy_type_store', module_type_store)
        DialogLineprops._update.__dict__.__setitem__('stypy_function_name', 'DialogLineprops._update')
        DialogLineprops._update.__dict__.__setitem__('stypy_param_names_list', [])
        DialogLineprops._update.__dict__.__setitem__('stypy_varargs_param_name', None)
        DialogLineprops._update.__dict__.__setitem__('stypy_kwargs_param_name', None)
        DialogLineprops._update.__dict__.__setitem__('stypy_call_defaults', defaults)
        DialogLineprops._update.__dict__.__setitem__('stypy_call_varargs', varargs)
        DialogLineprops._update.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        DialogLineprops._update.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'DialogLineprops._update', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_update', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_update(...)' code ##################

        unicode_226055 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 923, 8), 'unicode', u'update the active line props from the widgets')
        
        
        # Evaluating a boolean operation
        
        # Getting the type of 'self' (line 924)
        self_226056 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 924, 15), 'self')
        # Obtaining the member '_inited' of a type (line 924)
        _inited_226057 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 924, 15), self_226056, '_inited')
        # Applying the 'not' unary operator (line 924)
        result_not__226058 = python_operator(stypy.reporting.localization.Localization(__file__, 924, 11), 'not', _inited_226057)
        
        
        # Getting the type of 'self' (line 924)
        self_226059 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 924, 35), 'self')
        # Obtaining the member '_updateson' of a type (line 924)
        _updateson_226060 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 924, 35), self_226059, '_updateson')
        # Applying the 'not' unary operator (line 924)
        result_not__226061 = python_operator(stypy.reporting.localization.Localization(__file__, 924, 31), 'not', _updateson_226060)
        
        # Applying the binary operator 'or' (line 924)
        result_or_keyword_226062 = python_operator(stypy.reporting.localization.Localization(__file__, 924, 11), 'or', result_not__226058, result_not__226061)
        
        # Testing the type of an if condition (line 924)
        if_condition_226063 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 924, 8), result_or_keyword_226062)
        # Assigning a type to the variable 'if_condition_226063' (line 924)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 924, 8), 'if_condition_226063', if_condition_226063)
        # SSA begins for if statement (line 924)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        # Assigning a type to the variable 'stypy_return_type' (line 924)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 924, 52), 'stypy_return_type', types.NoneType)
        # SSA join for if statement (line 924)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 925):
        
        # Assigning a Call to a Name (line 925):
        
        # Call to get_active_line(...): (line 925)
        # Processing the call keyword arguments (line 925)
        kwargs_226066 = {}
        # Getting the type of 'self' (line 925)
        self_226064 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 925, 15), 'self', False)
        # Obtaining the member 'get_active_line' of a type (line 925)
        get_active_line_226065 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 925, 15), self_226064, 'get_active_line')
        # Calling get_active_line(args, kwargs) (line 925)
        get_active_line_call_result_226067 = invoke(stypy.reporting.localization.Localization(__file__, 925, 15), get_active_line_226065, *[], **kwargs_226066)
        
        # Assigning a type to the variable 'line' (line 925)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 925, 8), 'line', get_active_line_call_result_226067)
        
        # Assigning a Call to a Name (line 926):
        
        # Assigning a Call to a Name (line 926):
        
        # Call to get_active_linestyle(...): (line 926)
        # Processing the call keyword arguments (line 926)
        kwargs_226070 = {}
        # Getting the type of 'self' (line 926)
        self_226068 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 926, 13), 'self', False)
        # Obtaining the member 'get_active_linestyle' of a type (line 926)
        get_active_linestyle_226069 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 926, 13), self_226068, 'get_active_linestyle')
        # Calling get_active_linestyle(args, kwargs) (line 926)
        get_active_linestyle_call_result_226071 = invoke(stypy.reporting.localization.Localization(__file__, 926, 13), get_active_linestyle_226069, *[], **kwargs_226070)
        
        # Assigning a type to the variable 'ls' (line 926)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 926, 8), 'ls', get_active_linestyle_call_result_226071)
        
        # Assigning a Call to a Name (line 927):
        
        # Assigning a Call to a Name (line 927):
        
        # Call to get_active_marker(...): (line 927)
        # Processing the call keyword arguments (line 927)
        kwargs_226074 = {}
        # Getting the type of 'self' (line 927)
        self_226072 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 927, 17), 'self', False)
        # Obtaining the member 'get_active_marker' of a type (line 927)
        get_active_marker_226073 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 927, 17), self_226072, 'get_active_marker')
        # Calling get_active_marker(args, kwargs) (line 927)
        get_active_marker_call_result_226075 = invoke(stypy.reporting.localization.Localization(__file__, 927, 17), get_active_marker_226073, *[], **kwargs_226074)
        
        # Assigning a type to the variable 'marker' (line 927)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 927, 8), 'marker', get_active_marker_call_result_226075)
        
        # Call to set_linestyle(...): (line 928)
        # Processing the call arguments (line 928)
        # Getting the type of 'ls' (line 928)
        ls_226078 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 928, 27), 'ls', False)
        # Processing the call keyword arguments (line 928)
        kwargs_226079 = {}
        # Getting the type of 'line' (line 928)
        line_226076 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 928, 8), 'line', False)
        # Obtaining the member 'set_linestyle' of a type (line 928)
        set_linestyle_226077 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 928, 8), line_226076, 'set_linestyle')
        # Calling set_linestyle(args, kwargs) (line 928)
        set_linestyle_call_result_226080 = invoke(stypy.reporting.localization.Localization(__file__, 928, 8), set_linestyle_226077, *[ls_226078], **kwargs_226079)
        
        
        # Call to set_marker(...): (line 929)
        # Processing the call arguments (line 929)
        # Getting the type of 'marker' (line 929)
        marker_226083 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 929, 24), 'marker', False)
        # Processing the call keyword arguments (line 929)
        kwargs_226084 = {}
        # Getting the type of 'line' (line 929)
        line_226081 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 929, 8), 'line', False)
        # Obtaining the member 'set_marker' of a type (line 929)
        set_marker_226082 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 929, 8), line_226081, 'set_marker')
        # Calling set_marker(args, kwargs) (line 929)
        set_marker_call_result_226085 = invoke(stypy.reporting.localization.Localization(__file__, 929, 8), set_marker_226082, *[marker_226083], **kwargs_226084)
        
        
        # Assigning a Call to a Name (line 931):
        
        # Assigning a Call to a Name (line 931):
        
        # Call to get_widget(...): (line 931)
        # Processing the call arguments (line 931)
        unicode_226089 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 931, 39), 'unicode', u'colorbutton_linestyle')
        # Processing the call keyword arguments (line 931)
        kwargs_226090 = {}
        # Getting the type of 'self' (line 931)
        self_226086 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 931, 17), 'self', False)
        # Obtaining the member 'wtree' of a type (line 931)
        wtree_226087 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 931, 17), self_226086, 'wtree')
        # Obtaining the member 'get_widget' of a type (line 931)
        get_widget_226088 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 931, 17), wtree_226087, 'get_widget')
        # Calling get_widget(args, kwargs) (line 931)
        get_widget_call_result_226091 = invoke(stypy.reporting.localization.Localization(__file__, 931, 17), get_widget_226088, *[unicode_226089], **kwargs_226090)
        
        # Assigning a type to the variable 'button' (line 931)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 931, 8), 'button', get_widget_call_result_226091)
        
        # Assigning a Call to a Name (line 932):
        
        # Assigning a Call to a Name (line 932):
        
        # Call to get_color(...): (line 932)
        # Processing the call keyword arguments (line 932)
        kwargs_226094 = {}
        # Getting the type of 'button' (line 932)
        button_226092 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 932, 16), 'button', False)
        # Obtaining the member 'get_color' of a type (line 932)
        get_color_226093 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 932, 16), button_226092, 'get_color')
        # Calling get_color(args, kwargs) (line 932)
        get_color_call_result_226095 = invoke(stypy.reporting.localization.Localization(__file__, 932, 16), get_color_226093, *[], **kwargs_226094)
        
        # Assigning a type to the variable 'color' (line 932)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 932, 8), 'color', get_color_call_result_226095)
        
        # Assigning a ListComp to a Tuple (line 933):
        
        # Assigning a Subscript to a Name (line 933):
        
        # Obtaining the type of the subscript
        int_226096 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 933, 8), 'int')
        # Calculating list comprehension
        # Calculating comprehension expression
        
        # Obtaining an instance of the builtin type 'tuple' (line 933)
        tuple_226100 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 933, 42), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 933)
        # Adding element type (line 933)
        # Getting the type of 'color' (line 933)
        color_226101 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 933, 42), 'color')
        # Obtaining the member 'red' of a type (line 933)
        red_226102 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 933, 42), color_226101, 'red')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 933, 42), tuple_226100, red_226102)
        # Adding element type (line 933)
        # Getting the type of 'color' (line 933)
        color_226103 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 933, 53), 'color')
        # Obtaining the member 'green' of a type (line 933)
        green_226104 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 933, 53), color_226103, 'green')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 933, 42), tuple_226100, green_226104)
        # Adding element type (line 933)
        # Getting the type of 'color' (line 933)
        color_226105 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 933, 66), 'color')
        # Obtaining the member 'blue' of a type (line 933)
        blue_226106 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 933, 66), color_226105, 'blue')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 933, 42), tuple_226100, blue_226106)
        
        comprehension_226107 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 933, 19), tuple_226100)
        # Assigning a type to the variable 'val' (line 933)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 933, 19), 'val', comprehension_226107)
        # Getting the type of 'val' (line 933)
        val_226097 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 933, 19), 'val')
        float_226098 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 933, 23), 'float')
        # Applying the binary operator 'div' (line 933)
        result_div_226099 = python_operator(stypy.reporting.localization.Localization(__file__, 933, 19), 'div', val_226097, float_226098)
        
        list_226108 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 933, 19), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 933, 19), list_226108, result_div_226099)
        # Obtaining the member '__getitem__' of a type (line 933)
        getitem___226109 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 933, 8), list_226108, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 933)
        subscript_call_result_226110 = invoke(stypy.reporting.localization.Localization(__file__, 933, 8), getitem___226109, int_226096)
        
        # Assigning a type to the variable 'tuple_var_assignment_223327' (line 933)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 933, 8), 'tuple_var_assignment_223327', subscript_call_result_226110)
        
        # Assigning a Subscript to a Name (line 933):
        
        # Obtaining the type of the subscript
        int_226111 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 933, 8), 'int')
        # Calculating list comprehension
        # Calculating comprehension expression
        
        # Obtaining an instance of the builtin type 'tuple' (line 933)
        tuple_226115 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 933, 42), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 933)
        # Adding element type (line 933)
        # Getting the type of 'color' (line 933)
        color_226116 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 933, 42), 'color')
        # Obtaining the member 'red' of a type (line 933)
        red_226117 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 933, 42), color_226116, 'red')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 933, 42), tuple_226115, red_226117)
        # Adding element type (line 933)
        # Getting the type of 'color' (line 933)
        color_226118 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 933, 53), 'color')
        # Obtaining the member 'green' of a type (line 933)
        green_226119 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 933, 53), color_226118, 'green')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 933, 42), tuple_226115, green_226119)
        # Adding element type (line 933)
        # Getting the type of 'color' (line 933)
        color_226120 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 933, 66), 'color')
        # Obtaining the member 'blue' of a type (line 933)
        blue_226121 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 933, 66), color_226120, 'blue')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 933, 42), tuple_226115, blue_226121)
        
        comprehension_226122 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 933, 19), tuple_226115)
        # Assigning a type to the variable 'val' (line 933)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 933, 19), 'val', comprehension_226122)
        # Getting the type of 'val' (line 933)
        val_226112 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 933, 19), 'val')
        float_226113 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 933, 23), 'float')
        # Applying the binary operator 'div' (line 933)
        result_div_226114 = python_operator(stypy.reporting.localization.Localization(__file__, 933, 19), 'div', val_226112, float_226113)
        
        list_226123 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 933, 19), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 933, 19), list_226123, result_div_226114)
        # Obtaining the member '__getitem__' of a type (line 933)
        getitem___226124 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 933, 8), list_226123, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 933)
        subscript_call_result_226125 = invoke(stypy.reporting.localization.Localization(__file__, 933, 8), getitem___226124, int_226111)
        
        # Assigning a type to the variable 'tuple_var_assignment_223328' (line 933)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 933, 8), 'tuple_var_assignment_223328', subscript_call_result_226125)
        
        # Assigning a Subscript to a Name (line 933):
        
        # Obtaining the type of the subscript
        int_226126 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 933, 8), 'int')
        # Calculating list comprehension
        # Calculating comprehension expression
        
        # Obtaining an instance of the builtin type 'tuple' (line 933)
        tuple_226130 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 933, 42), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 933)
        # Adding element type (line 933)
        # Getting the type of 'color' (line 933)
        color_226131 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 933, 42), 'color')
        # Obtaining the member 'red' of a type (line 933)
        red_226132 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 933, 42), color_226131, 'red')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 933, 42), tuple_226130, red_226132)
        # Adding element type (line 933)
        # Getting the type of 'color' (line 933)
        color_226133 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 933, 53), 'color')
        # Obtaining the member 'green' of a type (line 933)
        green_226134 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 933, 53), color_226133, 'green')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 933, 42), tuple_226130, green_226134)
        # Adding element type (line 933)
        # Getting the type of 'color' (line 933)
        color_226135 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 933, 66), 'color')
        # Obtaining the member 'blue' of a type (line 933)
        blue_226136 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 933, 66), color_226135, 'blue')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 933, 42), tuple_226130, blue_226136)
        
        comprehension_226137 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 933, 19), tuple_226130)
        # Assigning a type to the variable 'val' (line 933)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 933, 19), 'val', comprehension_226137)
        # Getting the type of 'val' (line 933)
        val_226127 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 933, 19), 'val')
        float_226128 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 933, 23), 'float')
        # Applying the binary operator 'div' (line 933)
        result_div_226129 = python_operator(stypy.reporting.localization.Localization(__file__, 933, 19), 'div', val_226127, float_226128)
        
        list_226138 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 933, 19), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 933, 19), list_226138, result_div_226129)
        # Obtaining the member '__getitem__' of a type (line 933)
        getitem___226139 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 933, 8), list_226138, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 933)
        subscript_call_result_226140 = invoke(stypy.reporting.localization.Localization(__file__, 933, 8), getitem___226139, int_226126)
        
        # Assigning a type to the variable 'tuple_var_assignment_223329' (line 933)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 933, 8), 'tuple_var_assignment_223329', subscript_call_result_226140)
        
        # Assigning a Name to a Name (line 933):
        # Getting the type of 'tuple_var_assignment_223327' (line 933)
        tuple_var_assignment_223327_226141 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 933, 8), 'tuple_var_assignment_223327')
        # Assigning a type to the variable 'r' (line 933)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 933, 8), 'r', tuple_var_assignment_223327_226141)
        
        # Assigning a Name to a Name (line 933):
        # Getting the type of 'tuple_var_assignment_223328' (line 933)
        tuple_var_assignment_223328_226142 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 933, 8), 'tuple_var_assignment_223328')
        # Assigning a type to the variable 'g' (line 933)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 933, 11), 'g', tuple_var_assignment_223328_226142)
        
        # Assigning a Name to a Name (line 933):
        # Getting the type of 'tuple_var_assignment_223329' (line 933)
        tuple_var_assignment_223329_226143 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 933, 8), 'tuple_var_assignment_223329')
        # Assigning a type to the variable 'b' (line 933)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 933, 14), 'b', tuple_var_assignment_223329_226143)
        
        # Call to set_color(...): (line 934)
        # Processing the call arguments (line 934)
        
        # Obtaining an instance of the builtin type 'tuple' (line 934)
        tuple_226146 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 934, 24), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 934)
        # Adding element type (line 934)
        # Getting the type of 'r' (line 934)
        r_226147 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 934, 24), 'r', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 934, 24), tuple_226146, r_226147)
        # Adding element type (line 934)
        # Getting the type of 'g' (line 934)
        g_226148 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 934, 26), 'g', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 934, 24), tuple_226146, g_226148)
        # Adding element type (line 934)
        # Getting the type of 'b' (line 934)
        b_226149 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 934, 28), 'b', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 934, 24), tuple_226146, b_226149)
        
        # Processing the call keyword arguments (line 934)
        kwargs_226150 = {}
        # Getting the type of 'line' (line 934)
        line_226144 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 934, 8), 'line', False)
        # Obtaining the member 'set_color' of a type (line 934)
        set_color_226145 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 934, 8), line_226144, 'set_color')
        # Calling set_color(args, kwargs) (line 934)
        set_color_call_result_226151 = invoke(stypy.reporting.localization.Localization(__file__, 934, 8), set_color_226145, *[tuple_226146], **kwargs_226150)
        
        
        # Assigning a Call to a Name (line 936):
        
        # Assigning a Call to a Name (line 936):
        
        # Call to get_widget(...): (line 936)
        # Processing the call arguments (line 936)
        unicode_226155 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 936, 39), 'unicode', u'colorbutton_markerface')
        # Processing the call keyword arguments (line 936)
        kwargs_226156 = {}
        # Getting the type of 'self' (line 936)
        self_226152 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 936, 17), 'self', False)
        # Obtaining the member 'wtree' of a type (line 936)
        wtree_226153 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 936, 17), self_226152, 'wtree')
        # Obtaining the member 'get_widget' of a type (line 936)
        get_widget_226154 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 936, 17), wtree_226153, 'get_widget')
        # Calling get_widget(args, kwargs) (line 936)
        get_widget_call_result_226157 = invoke(stypy.reporting.localization.Localization(__file__, 936, 17), get_widget_226154, *[unicode_226155], **kwargs_226156)
        
        # Assigning a type to the variable 'button' (line 936)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 936, 8), 'button', get_widget_call_result_226157)
        
        # Assigning a Call to a Name (line 937):
        
        # Assigning a Call to a Name (line 937):
        
        # Call to get_color(...): (line 937)
        # Processing the call keyword arguments (line 937)
        kwargs_226160 = {}
        # Getting the type of 'button' (line 937)
        button_226158 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 937, 16), 'button', False)
        # Obtaining the member 'get_color' of a type (line 937)
        get_color_226159 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 937, 16), button_226158, 'get_color')
        # Calling get_color(args, kwargs) (line 937)
        get_color_call_result_226161 = invoke(stypy.reporting.localization.Localization(__file__, 937, 16), get_color_226159, *[], **kwargs_226160)
        
        # Assigning a type to the variable 'color' (line 937)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 937, 8), 'color', get_color_call_result_226161)
        
        # Assigning a ListComp to a Tuple (line 938):
        
        # Assigning a Subscript to a Name (line 938):
        
        # Obtaining the type of the subscript
        int_226162 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 938, 8), 'int')
        # Calculating list comprehension
        # Calculating comprehension expression
        
        # Obtaining an instance of the builtin type 'tuple' (line 938)
        tuple_226166 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 938, 42), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 938)
        # Adding element type (line 938)
        # Getting the type of 'color' (line 938)
        color_226167 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 938, 42), 'color')
        # Obtaining the member 'red' of a type (line 938)
        red_226168 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 938, 42), color_226167, 'red')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 938, 42), tuple_226166, red_226168)
        # Adding element type (line 938)
        # Getting the type of 'color' (line 938)
        color_226169 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 938, 53), 'color')
        # Obtaining the member 'green' of a type (line 938)
        green_226170 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 938, 53), color_226169, 'green')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 938, 42), tuple_226166, green_226170)
        # Adding element type (line 938)
        # Getting the type of 'color' (line 938)
        color_226171 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 938, 66), 'color')
        # Obtaining the member 'blue' of a type (line 938)
        blue_226172 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 938, 66), color_226171, 'blue')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 938, 42), tuple_226166, blue_226172)
        
        comprehension_226173 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 938, 19), tuple_226166)
        # Assigning a type to the variable 'val' (line 938)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 938, 19), 'val', comprehension_226173)
        # Getting the type of 'val' (line 938)
        val_226163 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 938, 19), 'val')
        float_226164 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 938, 23), 'float')
        # Applying the binary operator 'div' (line 938)
        result_div_226165 = python_operator(stypy.reporting.localization.Localization(__file__, 938, 19), 'div', val_226163, float_226164)
        
        list_226174 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 938, 19), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 938, 19), list_226174, result_div_226165)
        # Obtaining the member '__getitem__' of a type (line 938)
        getitem___226175 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 938, 8), list_226174, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 938)
        subscript_call_result_226176 = invoke(stypy.reporting.localization.Localization(__file__, 938, 8), getitem___226175, int_226162)
        
        # Assigning a type to the variable 'tuple_var_assignment_223330' (line 938)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 938, 8), 'tuple_var_assignment_223330', subscript_call_result_226176)
        
        # Assigning a Subscript to a Name (line 938):
        
        # Obtaining the type of the subscript
        int_226177 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 938, 8), 'int')
        # Calculating list comprehension
        # Calculating comprehension expression
        
        # Obtaining an instance of the builtin type 'tuple' (line 938)
        tuple_226181 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 938, 42), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 938)
        # Adding element type (line 938)
        # Getting the type of 'color' (line 938)
        color_226182 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 938, 42), 'color')
        # Obtaining the member 'red' of a type (line 938)
        red_226183 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 938, 42), color_226182, 'red')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 938, 42), tuple_226181, red_226183)
        # Adding element type (line 938)
        # Getting the type of 'color' (line 938)
        color_226184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 938, 53), 'color')
        # Obtaining the member 'green' of a type (line 938)
        green_226185 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 938, 53), color_226184, 'green')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 938, 42), tuple_226181, green_226185)
        # Adding element type (line 938)
        # Getting the type of 'color' (line 938)
        color_226186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 938, 66), 'color')
        # Obtaining the member 'blue' of a type (line 938)
        blue_226187 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 938, 66), color_226186, 'blue')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 938, 42), tuple_226181, blue_226187)
        
        comprehension_226188 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 938, 19), tuple_226181)
        # Assigning a type to the variable 'val' (line 938)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 938, 19), 'val', comprehension_226188)
        # Getting the type of 'val' (line 938)
        val_226178 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 938, 19), 'val')
        float_226179 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 938, 23), 'float')
        # Applying the binary operator 'div' (line 938)
        result_div_226180 = python_operator(stypy.reporting.localization.Localization(__file__, 938, 19), 'div', val_226178, float_226179)
        
        list_226189 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 938, 19), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 938, 19), list_226189, result_div_226180)
        # Obtaining the member '__getitem__' of a type (line 938)
        getitem___226190 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 938, 8), list_226189, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 938)
        subscript_call_result_226191 = invoke(stypy.reporting.localization.Localization(__file__, 938, 8), getitem___226190, int_226177)
        
        # Assigning a type to the variable 'tuple_var_assignment_223331' (line 938)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 938, 8), 'tuple_var_assignment_223331', subscript_call_result_226191)
        
        # Assigning a Subscript to a Name (line 938):
        
        # Obtaining the type of the subscript
        int_226192 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 938, 8), 'int')
        # Calculating list comprehension
        # Calculating comprehension expression
        
        # Obtaining an instance of the builtin type 'tuple' (line 938)
        tuple_226196 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 938, 42), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 938)
        # Adding element type (line 938)
        # Getting the type of 'color' (line 938)
        color_226197 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 938, 42), 'color')
        # Obtaining the member 'red' of a type (line 938)
        red_226198 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 938, 42), color_226197, 'red')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 938, 42), tuple_226196, red_226198)
        # Adding element type (line 938)
        # Getting the type of 'color' (line 938)
        color_226199 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 938, 53), 'color')
        # Obtaining the member 'green' of a type (line 938)
        green_226200 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 938, 53), color_226199, 'green')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 938, 42), tuple_226196, green_226200)
        # Adding element type (line 938)
        # Getting the type of 'color' (line 938)
        color_226201 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 938, 66), 'color')
        # Obtaining the member 'blue' of a type (line 938)
        blue_226202 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 938, 66), color_226201, 'blue')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 938, 42), tuple_226196, blue_226202)
        
        comprehension_226203 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 938, 19), tuple_226196)
        # Assigning a type to the variable 'val' (line 938)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 938, 19), 'val', comprehension_226203)
        # Getting the type of 'val' (line 938)
        val_226193 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 938, 19), 'val')
        float_226194 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 938, 23), 'float')
        # Applying the binary operator 'div' (line 938)
        result_div_226195 = python_operator(stypy.reporting.localization.Localization(__file__, 938, 19), 'div', val_226193, float_226194)
        
        list_226204 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 938, 19), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 938, 19), list_226204, result_div_226195)
        # Obtaining the member '__getitem__' of a type (line 938)
        getitem___226205 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 938, 8), list_226204, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 938)
        subscript_call_result_226206 = invoke(stypy.reporting.localization.Localization(__file__, 938, 8), getitem___226205, int_226192)
        
        # Assigning a type to the variable 'tuple_var_assignment_223332' (line 938)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 938, 8), 'tuple_var_assignment_223332', subscript_call_result_226206)
        
        # Assigning a Name to a Name (line 938):
        # Getting the type of 'tuple_var_assignment_223330' (line 938)
        tuple_var_assignment_223330_226207 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 938, 8), 'tuple_var_assignment_223330')
        # Assigning a type to the variable 'r' (line 938)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 938, 8), 'r', tuple_var_assignment_223330_226207)
        
        # Assigning a Name to a Name (line 938):
        # Getting the type of 'tuple_var_assignment_223331' (line 938)
        tuple_var_assignment_223331_226208 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 938, 8), 'tuple_var_assignment_223331')
        # Assigning a type to the variable 'g' (line 938)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 938, 11), 'g', tuple_var_assignment_223331_226208)
        
        # Assigning a Name to a Name (line 938):
        # Getting the type of 'tuple_var_assignment_223332' (line 938)
        tuple_var_assignment_223332_226209 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 938, 8), 'tuple_var_assignment_223332')
        # Assigning a type to the variable 'b' (line 938)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 938, 14), 'b', tuple_var_assignment_223332_226209)
        
        # Call to set_markerfacecolor(...): (line 939)
        # Processing the call arguments (line 939)
        
        # Obtaining an instance of the builtin type 'tuple' (line 939)
        tuple_226212 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 939, 34), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 939)
        # Adding element type (line 939)
        # Getting the type of 'r' (line 939)
        r_226213 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 939, 34), 'r', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 939, 34), tuple_226212, r_226213)
        # Adding element type (line 939)
        # Getting the type of 'g' (line 939)
        g_226214 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 939, 36), 'g', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 939, 34), tuple_226212, g_226214)
        # Adding element type (line 939)
        # Getting the type of 'b' (line 939)
        b_226215 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 939, 38), 'b', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 939, 34), tuple_226212, b_226215)
        
        # Processing the call keyword arguments (line 939)
        kwargs_226216 = {}
        # Getting the type of 'line' (line 939)
        line_226210 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 939, 8), 'line', False)
        # Obtaining the member 'set_markerfacecolor' of a type (line 939)
        set_markerfacecolor_226211 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 939, 8), line_226210, 'set_markerfacecolor')
        # Calling set_markerfacecolor(args, kwargs) (line 939)
        set_markerfacecolor_call_result_226217 = invoke(stypy.reporting.localization.Localization(__file__, 939, 8), set_markerfacecolor_226211, *[tuple_226212], **kwargs_226216)
        
        
        # Call to draw(...): (line 941)
        # Processing the call keyword arguments (line 941)
        kwargs_226222 = {}
        # Getting the type of 'line' (line 941)
        line_226218 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 941, 8), 'line', False)
        # Obtaining the member 'figure' of a type (line 941)
        figure_226219 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 941, 8), line_226218, 'figure')
        # Obtaining the member 'canvas' of a type (line 941)
        canvas_226220 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 941, 8), figure_226219, 'canvas')
        # Obtaining the member 'draw' of a type (line 941)
        draw_226221 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 941, 8), canvas_226220, 'draw')
        # Calling draw(args, kwargs) (line 941)
        draw_call_result_226223 = invoke(stypy.reporting.localization.Localization(__file__, 941, 8), draw_226221, *[], **kwargs_226222)
        
        
        # ################# End of '_update(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_update' in the type store
        # Getting the type of 'stypy_return_type' (line 922)
        stypy_return_type_226224 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 922, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_226224)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_update'
        return stypy_return_type_226224


    @norecursion
    def on_combobox_lineprops_changed(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'on_combobox_lineprops_changed'
        module_type_store = module_type_store.open_function_context('on_combobox_lineprops_changed', 943, 4, False)
        # Assigning a type to the variable 'self' (line 944)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 944, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        DialogLineprops.on_combobox_lineprops_changed.__dict__.__setitem__('stypy_localization', localization)
        DialogLineprops.on_combobox_lineprops_changed.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        DialogLineprops.on_combobox_lineprops_changed.__dict__.__setitem__('stypy_type_store', module_type_store)
        DialogLineprops.on_combobox_lineprops_changed.__dict__.__setitem__('stypy_function_name', 'DialogLineprops.on_combobox_lineprops_changed')
        DialogLineprops.on_combobox_lineprops_changed.__dict__.__setitem__('stypy_param_names_list', ['item'])
        DialogLineprops.on_combobox_lineprops_changed.__dict__.__setitem__('stypy_varargs_param_name', None)
        DialogLineprops.on_combobox_lineprops_changed.__dict__.__setitem__('stypy_kwargs_param_name', None)
        DialogLineprops.on_combobox_lineprops_changed.__dict__.__setitem__('stypy_call_defaults', defaults)
        DialogLineprops.on_combobox_lineprops_changed.__dict__.__setitem__('stypy_call_varargs', varargs)
        DialogLineprops.on_combobox_lineprops_changed.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        DialogLineprops.on_combobox_lineprops_changed.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'DialogLineprops.on_combobox_lineprops_changed', ['item'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'on_combobox_lineprops_changed', localization, ['item'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'on_combobox_lineprops_changed(...)' code ##################

        unicode_226225 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 944, 8), 'unicode', u'update the widgets from the active line')
        
        
        # Getting the type of 'self' (line 945)
        self_226226 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 945, 15), 'self')
        # Obtaining the member '_inited' of a type (line 945)
        _inited_226227 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 945, 15), self_226226, '_inited')
        # Applying the 'not' unary operator (line 945)
        result_not__226228 = python_operator(stypy.reporting.localization.Localization(__file__, 945, 11), 'not', _inited_226227)
        
        # Testing the type of an if condition (line 945)
        if_condition_226229 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 945, 8), result_not__226228)
        # Assigning a type to the variable 'if_condition_226229' (line 945)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 945, 8), 'if_condition_226229', if_condition_226229)
        # SSA begins for if statement (line 945)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        # Assigning a type to the variable 'stypy_return_type' (line 945)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 945, 29), 'stypy_return_type', types.NoneType)
        # SSA join for if statement (line 945)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Name to a Attribute (line 946):
        
        # Assigning a Name to a Attribute (line 946):
        # Getting the type of 'False' (line 946)
        False_226230 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 946, 26), 'False')
        # Getting the type of 'self' (line 946)
        self_226231 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 946, 8), 'self')
        # Setting the type of the member '_updateson' of a type (line 946)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 946, 8), self_226231, '_updateson', False_226230)
        
        # Assigning a Call to a Name (line 947):
        
        # Assigning a Call to a Name (line 947):
        
        # Call to get_active_line(...): (line 947)
        # Processing the call keyword arguments (line 947)
        kwargs_226234 = {}
        # Getting the type of 'self' (line 947)
        self_226232 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 947, 15), 'self', False)
        # Obtaining the member 'get_active_line' of a type (line 947)
        get_active_line_226233 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 947, 15), self_226232, 'get_active_line')
        # Calling get_active_line(args, kwargs) (line 947)
        get_active_line_call_result_226235 = invoke(stypy.reporting.localization.Localization(__file__, 947, 15), get_active_line_226233, *[], **kwargs_226234)
        
        # Assigning a type to the variable 'line' (line 947)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 947, 8), 'line', get_active_line_call_result_226235)
        
        # Assigning a Call to a Name (line 949):
        
        # Assigning a Call to a Name (line 949):
        
        # Call to get_linestyle(...): (line 949)
        # Processing the call keyword arguments (line 949)
        kwargs_226238 = {}
        # Getting the type of 'line' (line 949)
        line_226236 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 949, 13), 'line', False)
        # Obtaining the member 'get_linestyle' of a type (line 949)
        get_linestyle_226237 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 949, 13), line_226236, 'get_linestyle')
        # Calling get_linestyle(args, kwargs) (line 949)
        get_linestyle_call_result_226239 = invoke(stypy.reporting.localization.Localization(__file__, 949, 13), get_linestyle_226237, *[], **kwargs_226238)
        
        # Assigning a type to the variable 'ls' (line 949)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 949, 8), 'ls', get_linestyle_call_result_226239)
        
        # Type idiom detected: calculating its left and rigth part (line 950)
        # Getting the type of 'ls' (line 950)
        ls_226240 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 950, 11), 'ls')
        # Getting the type of 'None' (line 950)
        None_226241 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 950, 17), 'None')
        
        (may_be_226242, more_types_in_union_226243) = may_be_none(ls_226240, None_226241)

        if may_be_226242:

            if more_types_in_union_226243:
                # Runtime conditional SSA (line 950)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Str to a Name (line 950):
            
            # Assigning a Str to a Name (line 950):
            unicode_226244 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 950, 28), 'unicode', u'None')
            # Assigning a type to the variable 'ls' (line 950)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 950, 23), 'ls', unicode_226244)

            if more_types_in_union_226243:
                # SSA join for if statement (line 950)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Call to set_active(...): (line 951)
        # Processing the call arguments (line 951)
        
        # Obtaining the type of the subscript
        # Getting the type of 'ls' (line 951)
        ls_226248 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 951, 56), 'ls', False)
        # Getting the type of 'self' (line 951)
        self_226249 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 951, 40), 'self', False)
        # Obtaining the member 'linestyled' of a type (line 951)
        linestyled_226250 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 951, 40), self_226249, 'linestyled')
        # Obtaining the member '__getitem__' of a type (line 951)
        getitem___226251 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 951, 40), linestyled_226250, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 951)
        subscript_call_result_226252 = invoke(stypy.reporting.localization.Localization(__file__, 951, 40), getitem___226251, ls_226248)
        
        # Processing the call keyword arguments (line 951)
        kwargs_226253 = {}
        # Getting the type of 'self' (line 951)
        self_226245 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 951, 8), 'self', False)
        # Obtaining the member 'cbox_linestyles' of a type (line 951)
        cbox_linestyles_226246 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 951, 8), self_226245, 'cbox_linestyles')
        # Obtaining the member 'set_active' of a type (line 951)
        set_active_226247 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 951, 8), cbox_linestyles_226246, 'set_active')
        # Calling set_active(args, kwargs) (line 951)
        set_active_call_result_226254 = invoke(stypy.reporting.localization.Localization(__file__, 951, 8), set_active_226247, *[subscript_call_result_226252], **kwargs_226253)
        
        
        # Assigning a Call to a Name (line 953):
        
        # Assigning a Call to a Name (line 953):
        
        # Call to get_marker(...): (line 953)
        # Processing the call keyword arguments (line 953)
        kwargs_226257 = {}
        # Getting the type of 'line' (line 953)
        line_226255 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 953, 17), 'line', False)
        # Obtaining the member 'get_marker' of a type (line 953)
        get_marker_226256 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 953, 17), line_226255, 'get_marker')
        # Calling get_marker(args, kwargs) (line 953)
        get_marker_call_result_226258 = invoke(stypy.reporting.localization.Localization(__file__, 953, 17), get_marker_226256, *[], **kwargs_226257)
        
        # Assigning a type to the variable 'marker' (line 953)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 953, 8), 'marker', get_marker_call_result_226258)
        
        # Type idiom detected: calculating its left and rigth part (line 954)
        # Getting the type of 'marker' (line 954)
        marker_226259 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 954, 11), 'marker')
        # Getting the type of 'None' (line 954)
        None_226260 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 954, 21), 'None')
        
        (may_be_226261, more_types_in_union_226262) = may_be_none(marker_226259, None_226260)

        if may_be_226261:

            if more_types_in_union_226262:
                # Runtime conditional SSA (line 954)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Str to a Name (line 954):
            
            # Assigning a Str to a Name (line 954):
            unicode_226263 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 954, 36), 'unicode', u'None')
            # Assigning a type to the variable 'marker' (line 954)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 954, 27), 'marker', unicode_226263)

            if more_types_in_union_226262:
                # SSA join for if statement (line 954)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Call to set_active(...): (line 955)
        # Processing the call arguments (line 955)
        
        # Obtaining the type of the subscript
        # Getting the type of 'marker' (line 955)
        marker_226267 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 955, 50), 'marker', False)
        # Getting the type of 'self' (line 955)
        self_226268 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 955, 37), 'self', False)
        # Obtaining the member 'markerd' of a type (line 955)
        markerd_226269 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 955, 37), self_226268, 'markerd')
        # Obtaining the member '__getitem__' of a type (line 955)
        getitem___226270 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 955, 37), markerd_226269, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 955)
        subscript_call_result_226271 = invoke(stypy.reporting.localization.Localization(__file__, 955, 37), getitem___226270, marker_226267)
        
        # Processing the call keyword arguments (line 955)
        kwargs_226272 = {}
        # Getting the type of 'self' (line 955)
        self_226264 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 955, 8), 'self', False)
        # Obtaining the member 'cbox_markers' of a type (line 955)
        cbox_markers_226265 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 955, 8), self_226264, 'cbox_markers')
        # Obtaining the member 'set_active' of a type (line 955)
        set_active_226266 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 955, 8), cbox_markers_226265, 'set_active')
        # Calling set_active(args, kwargs) (line 955)
        set_active_call_result_226273 = invoke(stypy.reporting.localization.Localization(__file__, 955, 8), set_active_226266, *[subscript_call_result_226271], **kwargs_226272)
        
        
        # Assigning a Call to a Name (line 957):
        
        # Assigning a Call to a Name (line 957):
        
        # Call to to_rgba(...): (line 957)
        # Processing the call arguments (line 957)
        
        # Call to get_color(...): (line 957)
        # Processing the call keyword arguments (line 957)
        kwargs_226278 = {}
        # Getting the type of 'line' (line 957)
        line_226276 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 957, 31), 'line', False)
        # Obtaining the member 'get_color' of a type (line 957)
        get_color_226277 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 957, 31), line_226276, 'get_color')
        # Calling get_color(args, kwargs) (line 957)
        get_color_call_result_226279 = invoke(stypy.reporting.localization.Localization(__file__, 957, 31), get_color_226277, *[], **kwargs_226278)
        
        # Processing the call keyword arguments (line 957)
        kwargs_226280 = {}
        # Getting the type of 'mcolors' (line 957)
        mcolors_226274 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 957, 15), 'mcolors', False)
        # Obtaining the member 'to_rgba' of a type (line 957)
        to_rgba_226275 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 957, 15), mcolors_226274, 'to_rgba')
        # Calling to_rgba(args, kwargs) (line 957)
        to_rgba_call_result_226281 = invoke(stypy.reporting.localization.Localization(__file__, 957, 15), to_rgba_226275, *[get_color_call_result_226279], **kwargs_226280)
        
        # Assigning a type to the variable 'rgba' (line 957)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 957, 8), 'rgba', to_rgba_call_result_226281)
        
        # Assigning a Call to a Name (line 958):
        
        # Assigning a Call to a Name (line 958):
        
        # Call to Color(...): (line 958)
        # Calculating list comprehension
        # Calculating comprehension expression
        
        # Obtaining the type of the subscript
        int_226291 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 958, 64), 'int')
        slice_226292 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 958, 58), None, int_226291, None)
        # Getting the type of 'rgba' (line 958)
        rgba_226293 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 958, 58), 'rgba', False)
        # Obtaining the member '__getitem__' of a type (line 958)
        getitem___226294 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 958, 58), rgba_226293, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 958)
        subscript_call_result_226295 = invoke(stypy.reporting.localization.Localization(__file__, 958, 58), getitem___226294, slice_226292)
        
        comprehension_226296 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 958, 32), subscript_call_result_226295)
        # Assigning a type to the variable 'val' (line 958)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 958, 32), 'val', comprehension_226296)
        
        # Call to int(...): (line 958)
        # Processing the call arguments (line 958)
        # Getting the type of 'val' (line 958)
        val_226286 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 958, 36), 'val', False)
        int_226287 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 958, 40), 'int')
        # Applying the binary operator '*' (line 958)
        result_mul_226288 = python_operator(stypy.reporting.localization.Localization(__file__, 958, 36), '*', val_226286, int_226287)
        
        # Processing the call keyword arguments (line 958)
        kwargs_226289 = {}
        # Getting the type of 'int' (line 958)
        int_226285 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 958, 32), 'int', False)
        # Calling int(args, kwargs) (line 958)
        int_call_result_226290 = invoke(stypy.reporting.localization.Localization(__file__, 958, 32), int_226285, *[result_mul_226288], **kwargs_226289)
        
        list_226297 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 958, 32), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 958, 32), list_226297, int_call_result_226290)
        # Processing the call keyword arguments (line 958)
        kwargs_226298 = {}
        # Getting the type of 'gtk' (line 958)
        gtk_226282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 958, 16), 'gtk', False)
        # Obtaining the member 'gdk' of a type (line 958)
        gdk_226283 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 958, 16), gtk_226282, 'gdk')
        # Obtaining the member 'Color' of a type (line 958)
        Color_226284 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 958, 16), gdk_226283, 'Color')
        # Calling Color(args, kwargs) (line 958)
        Color_call_result_226299 = invoke(stypy.reporting.localization.Localization(__file__, 958, 16), Color_226284, *[list_226297], **kwargs_226298)
        
        # Assigning a type to the variable 'color' (line 958)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 958, 8), 'color', Color_call_result_226299)
        
        # Assigning a Call to a Name (line 959):
        
        # Assigning a Call to a Name (line 959):
        
        # Call to get_widget(...): (line 959)
        # Processing the call arguments (line 959)
        unicode_226303 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 959, 39), 'unicode', u'colorbutton_linestyle')
        # Processing the call keyword arguments (line 959)
        kwargs_226304 = {}
        # Getting the type of 'self' (line 959)
        self_226300 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 959, 17), 'self', False)
        # Obtaining the member 'wtree' of a type (line 959)
        wtree_226301 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 959, 17), self_226300, 'wtree')
        # Obtaining the member 'get_widget' of a type (line 959)
        get_widget_226302 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 959, 17), wtree_226301, 'get_widget')
        # Calling get_widget(args, kwargs) (line 959)
        get_widget_call_result_226305 = invoke(stypy.reporting.localization.Localization(__file__, 959, 17), get_widget_226302, *[unicode_226303], **kwargs_226304)
        
        # Assigning a type to the variable 'button' (line 959)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 959, 8), 'button', get_widget_call_result_226305)
        
        # Call to set_color(...): (line 960)
        # Processing the call arguments (line 960)
        # Getting the type of 'color' (line 960)
        color_226308 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 960, 25), 'color', False)
        # Processing the call keyword arguments (line 960)
        kwargs_226309 = {}
        # Getting the type of 'button' (line 960)
        button_226306 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 960, 8), 'button', False)
        # Obtaining the member 'set_color' of a type (line 960)
        set_color_226307 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 960, 8), button_226306, 'set_color')
        # Calling set_color(args, kwargs) (line 960)
        set_color_call_result_226310 = invoke(stypy.reporting.localization.Localization(__file__, 960, 8), set_color_226307, *[color_226308], **kwargs_226309)
        
        
        # Assigning a Call to a Name (line 962):
        
        # Assigning a Call to a Name (line 962):
        
        # Call to to_rgba(...): (line 962)
        # Processing the call arguments (line 962)
        
        # Call to get_markerfacecolor(...): (line 962)
        # Processing the call keyword arguments (line 962)
        kwargs_226315 = {}
        # Getting the type of 'line' (line 962)
        line_226313 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 962, 31), 'line', False)
        # Obtaining the member 'get_markerfacecolor' of a type (line 962)
        get_markerfacecolor_226314 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 962, 31), line_226313, 'get_markerfacecolor')
        # Calling get_markerfacecolor(args, kwargs) (line 962)
        get_markerfacecolor_call_result_226316 = invoke(stypy.reporting.localization.Localization(__file__, 962, 31), get_markerfacecolor_226314, *[], **kwargs_226315)
        
        # Processing the call keyword arguments (line 962)
        kwargs_226317 = {}
        # Getting the type of 'mcolors' (line 962)
        mcolors_226311 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 962, 15), 'mcolors', False)
        # Obtaining the member 'to_rgba' of a type (line 962)
        to_rgba_226312 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 962, 15), mcolors_226311, 'to_rgba')
        # Calling to_rgba(args, kwargs) (line 962)
        to_rgba_call_result_226318 = invoke(stypy.reporting.localization.Localization(__file__, 962, 15), to_rgba_226312, *[get_markerfacecolor_call_result_226316], **kwargs_226317)
        
        # Assigning a type to the variable 'rgba' (line 962)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 962, 8), 'rgba', to_rgba_call_result_226318)
        
        # Assigning a Call to a Name (line 963):
        
        # Assigning a Call to a Name (line 963):
        
        # Call to Color(...): (line 963)
        # Calculating list comprehension
        # Calculating comprehension expression
        
        # Obtaining the type of the subscript
        int_226328 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 963, 64), 'int')
        slice_226329 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 963, 58), None, int_226328, None)
        # Getting the type of 'rgba' (line 963)
        rgba_226330 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 963, 58), 'rgba', False)
        # Obtaining the member '__getitem__' of a type (line 963)
        getitem___226331 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 963, 58), rgba_226330, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 963)
        subscript_call_result_226332 = invoke(stypy.reporting.localization.Localization(__file__, 963, 58), getitem___226331, slice_226329)
        
        comprehension_226333 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 963, 32), subscript_call_result_226332)
        # Assigning a type to the variable 'val' (line 963)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 963, 32), 'val', comprehension_226333)
        
        # Call to int(...): (line 963)
        # Processing the call arguments (line 963)
        # Getting the type of 'val' (line 963)
        val_226323 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 963, 36), 'val', False)
        int_226324 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 963, 40), 'int')
        # Applying the binary operator '*' (line 963)
        result_mul_226325 = python_operator(stypy.reporting.localization.Localization(__file__, 963, 36), '*', val_226323, int_226324)
        
        # Processing the call keyword arguments (line 963)
        kwargs_226326 = {}
        # Getting the type of 'int' (line 963)
        int_226322 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 963, 32), 'int', False)
        # Calling int(args, kwargs) (line 963)
        int_call_result_226327 = invoke(stypy.reporting.localization.Localization(__file__, 963, 32), int_226322, *[result_mul_226325], **kwargs_226326)
        
        list_226334 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 963, 32), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 963, 32), list_226334, int_call_result_226327)
        # Processing the call keyword arguments (line 963)
        kwargs_226335 = {}
        # Getting the type of 'gtk' (line 963)
        gtk_226319 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 963, 16), 'gtk', False)
        # Obtaining the member 'gdk' of a type (line 963)
        gdk_226320 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 963, 16), gtk_226319, 'gdk')
        # Obtaining the member 'Color' of a type (line 963)
        Color_226321 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 963, 16), gdk_226320, 'Color')
        # Calling Color(args, kwargs) (line 963)
        Color_call_result_226336 = invoke(stypy.reporting.localization.Localization(__file__, 963, 16), Color_226321, *[list_226334], **kwargs_226335)
        
        # Assigning a type to the variable 'color' (line 963)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 963, 8), 'color', Color_call_result_226336)
        
        # Assigning a Call to a Name (line 964):
        
        # Assigning a Call to a Name (line 964):
        
        # Call to get_widget(...): (line 964)
        # Processing the call arguments (line 964)
        unicode_226340 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 964, 39), 'unicode', u'colorbutton_markerface')
        # Processing the call keyword arguments (line 964)
        kwargs_226341 = {}
        # Getting the type of 'self' (line 964)
        self_226337 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 964, 17), 'self', False)
        # Obtaining the member 'wtree' of a type (line 964)
        wtree_226338 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 964, 17), self_226337, 'wtree')
        # Obtaining the member 'get_widget' of a type (line 964)
        get_widget_226339 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 964, 17), wtree_226338, 'get_widget')
        # Calling get_widget(args, kwargs) (line 964)
        get_widget_call_result_226342 = invoke(stypy.reporting.localization.Localization(__file__, 964, 17), get_widget_226339, *[unicode_226340], **kwargs_226341)
        
        # Assigning a type to the variable 'button' (line 964)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 964, 8), 'button', get_widget_call_result_226342)
        
        # Call to set_color(...): (line 965)
        # Processing the call arguments (line 965)
        # Getting the type of 'color' (line 965)
        color_226345 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 965, 25), 'color', False)
        # Processing the call keyword arguments (line 965)
        kwargs_226346 = {}
        # Getting the type of 'button' (line 965)
        button_226343 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 965, 8), 'button', False)
        # Obtaining the member 'set_color' of a type (line 965)
        set_color_226344 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 965, 8), button_226343, 'set_color')
        # Calling set_color(args, kwargs) (line 965)
        set_color_call_result_226347 = invoke(stypy.reporting.localization.Localization(__file__, 965, 8), set_color_226344, *[color_226345], **kwargs_226346)
        
        
        # Assigning a Name to a Attribute (line 966):
        
        # Assigning a Name to a Attribute (line 966):
        # Getting the type of 'True' (line 966)
        True_226348 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 966, 26), 'True')
        # Getting the type of 'self' (line 966)
        self_226349 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 966, 8), 'self')
        # Setting the type of the member '_updateson' of a type (line 966)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 966, 8), self_226349, '_updateson', True_226348)
        
        # ################# End of 'on_combobox_lineprops_changed(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'on_combobox_lineprops_changed' in the type store
        # Getting the type of 'stypy_return_type' (line 943)
        stypy_return_type_226350 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 943, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_226350)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'on_combobox_lineprops_changed'
        return stypy_return_type_226350


    @norecursion
    def on_combobox_linestyle_changed(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'on_combobox_linestyle_changed'
        module_type_store = module_type_store.open_function_context('on_combobox_linestyle_changed', 968, 4, False)
        # Assigning a type to the variable 'self' (line 969)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 969, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        DialogLineprops.on_combobox_linestyle_changed.__dict__.__setitem__('stypy_localization', localization)
        DialogLineprops.on_combobox_linestyle_changed.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        DialogLineprops.on_combobox_linestyle_changed.__dict__.__setitem__('stypy_type_store', module_type_store)
        DialogLineprops.on_combobox_linestyle_changed.__dict__.__setitem__('stypy_function_name', 'DialogLineprops.on_combobox_linestyle_changed')
        DialogLineprops.on_combobox_linestyle_changed.__dict__.__setitem__('stypy_param_names_list', ['item'])
        DialogLineprops.on_combobox_linestyle_changed.__dict__.__setitem__('stypy_varargs_param_name', None)
        DialogLineprops.on_combobox_linestyle_changed.__dict__.__setitem__('stypy_kwargs_param_name', None)
        DialogLineprops.on_combobox_linestyle_changed.__dict__.__setitem__('stypy_call_defaults', defaults)
        DialogLineprops.on_combobox_linestyle_changed.__dict__.__setitem__('stypy_call_varargs', varargs)
        DialogLineprops.on_combobox_linestyle_changed.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        DialogLineprops.on_combobox_linestyle_changed.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'DialogLineprops.on_combobox_linestyle_changed', ['item'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'on_combobox_linestyle_changed', localization, ['item'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'on_combobox_linestyle_changed(...)' code ##################

        
        # Call to _update(...): (line 969)
        # Processing the call keyword arguments (line 969)
        kwargs_226353 = {}
        # Getting the type of 'self' (line 969)
        self_226351 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 969, 8), 'self', False)
        # Obtaining the member '_update' of a type (line 969)
        _update_226352 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 969, 8), self_226351, '_update')
        # Calling _update(args, kwargs) (line 969)
        _update_call_result_226354 = invoke(stypy.reporting.localization.Localization(__file__, 969, 8), _update_226352, *[], **kwargs_226353)
        
        
        # ################# End of 'on_combobox_linestyle_changed(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'on_combobox_linestyle_changed' in the type store
        # Getting the type of 'stypy_return_type' (line 968)
        stypy_return_type_226355 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 968, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_226355)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'on_combobox_linestyle_changed'
        return stypy_return_type_226355


    @norecursion
    def on_combobox_marker_changed(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'on_combobox_marker_changed'
        module_type_store = module_type_store.open_function_context('on_combobox_marker_changed', 971, 4, False)
        # Assigning a type to the variable 'self' (line 972)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 972, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        DialogLineprops.on_combobox_marker_changed.__dict__.__setitem__('stypy_localization', localization)
        DialogLineprops.on_combobox_marker_changed.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        DialogLineprops.on_combobox_marker_changed.__dict__.__setitem__('stypy_type_store', module_type_store)
        DialogLineprops.on_combobox_marker_changed.__dict__.__setitem__('stypy_function_name', 'DialogLineprops.on_combobox_marker_changed')
        DialogLineprops.on_combobox_marker_changed.__dict__.__setitem__('stypy_param_names_list', ['item'])
        DialogLineprops.on_combobox_marker_changed.__dict__.__setitem__('stypy_varargs_param_name', None)
        DialogLineprops.on_combobox_marker_changed.__dict__.__setitem__('stypy_kwargs_param_name', None)
        DialogLineprops.on_combobox_marker_changed.__dict__.__setitem__('stypy_call_defaults', defaults)
        DialogLineprops.on_combobox_marker_changed.__dict__.__setitem__('stypy_call_varargs', varargs)
        DialogLineprops.on_combobox_marker_changed.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        DialogLineprops.on_combobox_marker_changed.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'DialogLineprops.on_combobox_marker_changed', ['item'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'on_combobox_marker_changed', localization, ['item'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'on_combobox_marker_changed(...)' code ##################

        
        # Call to _update(...): (line 972)
        # Processing the call keyword arguments (line 972)
        kwargs_226358 = {}
        # Getting the type of 'self' (line 972)
        self_226356 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 972, 8), 'self', False)
        # Obtaining the member '_update' of a type (line 972)
        _update_226357 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 972, 8), self_226356, '_update')
        # Calling _update(args, kwargs) (line 972)
        _update_call_result_226359 = invoke(stypy.reporting.localization.Localization(__file__, 972, 8), _update_226357, *[], **kwargs_226358)
        
        
        # ################# End of 'on_combobox_marker_changed(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'on_combobox_marker_changed' in the type store
        # Getting the type of 'stypy_return_type' (line 971)
        stypy_return_type_226360 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 971, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_226360)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'on_combobox_marker_changed'
        return stypy_return_type_226360


    @norecursion
    def on_colorbutton_linestyle_color_set(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'on_colorbutton_linestyle_color_set'
        module_type_store = module_type_store.open_function_context('on_colorbutton_linestyle_color_set', 974, 4, False)
        # Assigning a type to the variable 'self' (line 975)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 975, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        DialogLineprops.on_colorbutton_linestyle_color_set.__dict__.__setitem__('stypy_localization', localization)
        DialogLineprops.on_colorbutton_linestyle_color_set.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        DialogLineprops.on_colorbutton_linestyle_color_set.__dict__.__setitem__('stypy_type_store', module_type_store)
        DialogLineprops.on_colorbutton_linestyle_color_set.__dict__.__setitem__('stypy_function_name', 'DialogLineprops.on_colorbutton_linestyle_color_set')
        DialogLineprops.on_colorbutton_linestyle_color_set.__dict__.__setitem__('stypy_param_names_list', ['button'])
        DialogLineprops.on_colorbutton_linestyle_color_set.__dict__.__setitem__('stypy_varargs_param_name', None)
        DialogLineprops.on_colorbutton_linestyle_color_set.__dict__.__setitem__('stypy_kwargs_param_name', None)
        DialogLineprops.on_colorbutton_linestyle_color_set.__dict__.__setitem__('stypy_call_defaults', defaults)
        DialogLineprops.on_colorbutton_linestyle_color_set.__dict__.__setitem__('stypy_call_varargs', varargs)
        DialogLineprops.on_colorbutton_linestyle_color_set.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        DialogLineprops.on_colorbutton_linestyle_color_set.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'DialogLineprops.on_colorbutton_linestyle_color_set', ['button'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'on_colorbutton_linestyle_color_set', localization, ['button'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'on_colorbutton_linestyle_color_set(...)' code ##################

        
        # Call to _update(...): (line 975)
        # Processing the call keyword arguments (line 975)
        kwargs_226363 = {}
        # Getting the type of 'self' (line 975)
        self_226361 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 975, 8), 'self', False)
        # Obtaining the member '_update' of a type (line 975)
        _update_226362 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 975, 8), self_226361, '_update')
        # Calling _update(args, kwargs) (line 975)
        _update_call_result_226364 = invoke(stypy.reporting.localization.Localization(__file__, 975, 8), _update_226362, *[], **kwargs_226363)
        
        
        # ################# End of 'on_colorbutton_linestyle_color_set(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'on_colorbutton_linestyle_color_set' in the type store
        # Getting the type of 'stypy_return_type' (line 974)
        stypy_return_type_226365 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 974, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_226365)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'on_colorbutton_linestyle_color_set'
        return stypy_return_type_226365


    @norecursion
    def on_colorbutton_markerface_color_set(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'on_colorbutton_markerface_color_set'
        module_type_store = module_type_store.open_function_context('on_colorbutton_markerface_color_set', 977, 4, False)
        # Assigning a type to the variable 'self' (line 978)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 978, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        DialogLineprops.on_colorbutton_markerface_color_set.__dict__.__setitem__('stypy_localization', localization)
        DialogLineprops.on_colorbutton_markerface_color_set.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        DialogLineprops.on_colorbutton_markerface_color_set.__dict__.__setitem__('stypy_type_store', module_type_store)
        DialogLineprops.on_colorbutton_markerface_color_set.__dict__.__setitem__('stypy_function_name', 'DialogLineprops.on_colorbutton_markerface_color_set')
        DialogLineprops.on_colorbutton_markerface_color_set.__dict__.__setitem__('stypy_param_names_list', ['button'])
        DialogLineprops.on_colorbutton_markerface_color_set.__dict__.__setitem__('stypy_varargs_param_name', None)
        DialogLineprops.on_colorbutton_markerface_color_set.__dict__.__setitem__('stypy_kwargs_param_name', None)
        DialogLineprops.on_colorbutton_markerface_color_set.__dict__.__setitem__('stypy_call_defaults', defaults)
        DialogLineprops.on_colorbutton_markerface_color_set.__dict__.__setitem__('stypy_call_varargs', varargs)
        DialogLineprops.on_colorbutton_markerface_color_set.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        DialogLineprops.on_colorbutton_markerface_color_set.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'DialogLineprops.on_colorbutton_markerface_color_set', ['button'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'on_colorbutton_markerface_color_set', localization, ['button'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'on_colorbutton_markerface_color_set(...)' code ##################

        unicode_226366 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 978, 8), 'unicode', u'called colorbutton marker clicked')
        
        # Call to _update(...): (line 979)
        # Processing the call keyword arguments (line 979)
        kwargs_226369 = {}
        # Getting the type of 'self' (line 979)
        self_226367 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 979, 8), 'self', False)
        # Obtaining the member '_update' of a type (line 979)
        _update_226368 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 979, 8), self_226367, '_update')
        # Calling _update(args, kwargs) (line 979)
        _update_call_result_226370 = invoke(stypy.reporting.localization.Localization(__file__, 979, 8), _update_226368, *[], **kwargs_226369)
        
        
        # ################# End of 'on_colorbutton_markerface_color_set(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'on_colorbutton_markerface_color_set' in the type store
        # Getting the type of 'stypy_return_type' (line 977)
        stypy_return_type_226371 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 977, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_226371)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'on_colorbutton_markerface_color_set'
        return stypy_return_type_226371


    @norecursion
    def on_dialog_lineprops_okbutton_clicked(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'on_dialog_lineprops_okbutton_clicked'
        module_type_store = module_type_store.open_function_context('on_dialog_lineprops_okbutton_clicked', 981, 4, False)
        # Assigning a type to the variable 'self' (line 982)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 982, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        DialogLineprops.on_dialog_lineprops_okbutton_clicked.__dict__.__setitem__('stypy_localization', localization)
        DialogLineprops.on_dialog_lineprops_okbutton_clicked.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        DialogLineprops.on_dialog_lineprops_okbutton_clicked.__dict__.__setitem__('stypy_type_store', module_type_store)
        DialogLineprops.on_dialog_lineprops_okbutton_clicked.__dict__.__setitem__('stypy_function_name', 'DialogLineprops.on_dialog_lineprops_okbutton_clicked')
        DialogLineprops.on_dialog_lineprops_okbutton_clicked.__dict__.__setitem__('stypy_param_names_list', ['button'])
        DialogLineprops.on_dialog_lineprops_okbutton_clicked.__dict__.__setitem__('stypy_varargs_param_name', None)
        DialogLineprops.on_dialog_lineprops_okbutton_clicked.__dict__.__setitem__('stypy_kwargs_param_name', None)
        DialogLineprops.on_dialog_lineprops_okbutton_clicked.__dict__.__setitem__('stypy_call_defaults', defaults)
        DialogLineprops.on_dialog_lineprops_okbutton_clicked.__dict__.__setitem__('stypy_call_varargs', varargs)
        DialogLineprops.on_dialog_lineprops_okbutton_clicked.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        DialogLineprops.on_dialog_lineprops_okbutton_clicked.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'DialogLineprops.on_dialog_lineprops_okbutton_clicked', ['button'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'on_dialog_lineprops_okbutton_clicked', localization, ['button'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'on_dialog_lineprops_okbutton_clicked(...)' code ##################

        
        # Call to _update(...): (line 982)
        # Processing the call keyword arguments (line 982)
        kwargs_226374 = {}
        # Getting the type of 'self' (line 982)
        self_226372 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 982, 8), 'self', False)
        # Obtaining the member '_update' of a type (line 982)
        _update_226373 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 982, 8), self_226372, '_update')
        # Calling _update(args, kwargs) (line 982)
        _update_call_result_226375 = invoke(stypy.reporting.localization.Localization(__file__, 982, 8), _update_226373, *[], **kwargs_226374)
        
        
        # Call to hide(...): (line 983)
        # Processing the call keyword arguments (line 983)
        kwargs_226379 = {}
        # Getting the type of 'self' (line 983)
        self_226376 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 983, 8), 'self', False)
        # Obtaining the member 'dlg' of a type (line 983)
        dlg_226377 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 983, 8), self_226376, 'dlg')
        # Obtaining the member 'hide' of a type (line 983)
        hide_226378 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 983, 8), dlg_226377, 'hide')
        # Calling hide(args, kwargs) (line 983)
        hide_call_result_226380 = invoke(stypy.reporting.localization.Localization(__file__, 983, 8), hide_226378, *[], **kwargs_226379)
        
        
        # ################# End of 'on_dialog_lineprops_okbutton_clicked(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'on_dialog_lineprops_okbutton_clicked' in the type store
        # Getting the type of 'stypy_return_type' (line 981)
        stypy_return_type_226381 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 981, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_226381)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'on_dialog_lineprops_okbutton_clicked'
        return stypy_return_type_226381


    @norecursion
    def on_dialog_lineprops_cancelbutton_clicked(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'on_dialog_lineprops_cancelbutton_clicked'
        module_type_store = module_type_store.open_function_context('on_dialog_lineprops_cancelbutton_clicked', 985, 4, False)
        # Assigning a type to the variable 'self' (line 986)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 986, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        DialogLineprops.on_dialog_lineprops_cancelbutton_clicked.__dict__.__setitem__('stypy_localization', localization)
        DialogLineprops.on_dialog_lineprops_cancelbutton_clicked.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        DialogLineprops.on_dialog_lineprops_cancelbutton_clicked.__dict__.__setitem__('stypy_type_store', module_type_store)
        DialogLineprops.on_dialog_lineprops_cancelbutton_clicked.__dict__.__setitem__('stypy_function_name', 'DialogLineprops.on_dialog_lineprops_cancelbutton_clicked')
        DialogLineprops.on_dialog_lineprops_cancelbutton_clicked.__dict__.__setitem__('stypy_param_names_list', ['button'])
        DialogLineprops.on_dialog_lineprops_cancelbutton_clicked.__dict__.__setitem__('stypy_varargs_param_name', None)
        DialogLineprops.on_dialog_lineprops_cancelbutton_clicked.__dict__.__setitem__('stypy_kwargs_param_name', None)
        DialogLineprops.on_dialog_lineprops_cancelbutton_clicked.__dict__.__setitem__('stypy_call_defaults', defaults)
        DialogLineprops.on_dialog_lineprops_cancelbutton_clicked.__dict__.__setitem__('stypy_call_varargs', varargs)
        DialogLineprops.on_dialog_lineprops_cancelbutton_clicked.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        DialogLineprops.on_dialog_lineprops_cancelbutton_clicked.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'DialogLineprops.on_dialog_lineprops_cancelbutton_clicked', ['button'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'on_dialog_lineprops_cancelbutton_clicked', localization, ['button'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'on_dialog_lineprops_cancelbutton_clicked(...)' code ##################

        
        # Call to hide(...): (line 986)
        # Processing the call keyword arguments (line 986)
        kwargs_226385 = {}
        # Getting the type of 'self' (line 986)
        self_226382 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 986, 8), 'self', False)
        # Obtaining the member 'dlg' of a type (line 986)
        dlg_226383 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 986, 8), self_226382, 'dlg')
        # Obtaining the member 'hide' of a type (line 986)
        hide_226384 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 986, 8), dlg_226383, 'hide')
        # Calling hide(args, kwargs) (line 986)
        hide_call_result_226386 = invoke(stypy.reporting.localization.Localization(__file__, 986, 8), hide_226384, *[], **kwargs_226385)
        
        
        # ################# End of 'on_dialog_lineprops_cancelbutton_clicked(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'on_dialog_lineprops_cancelbutton_clicked' in the type store
        # Getting the type of 'stypy_return_type' (line 985)
        stypy_return_type_226387 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 985, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_226387)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'on_dialog_lineprops_cancelbutton_clicked'
        return stypy_return_type_226387


# Assigning a type to the variable 'DialogLineprops' (line 829)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 829, 0), 'DialogLineprops', DialogLineprops)

# Assigning a Tuple to a Name (line 833):

# Obtaining an instance of the builtin type 'tuple' (line 834)
tuple_226388 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 834, 8), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 834)
# Adding element type (line 834)
unicode_226389 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 834, 8), 'unicode', u'on_combobox_lineprops_changed')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 834, 8), tuple_226388, unicode_226389)
# Adding element type (line 834)
unicode_226390 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 835, 8), 'unicode', u'on_combobox_linestyle_changed')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 834, 8), tuple_226388, unicode_226390)
# Adding element type (line 834)
unicode_226391 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 836, 8), 'unicode', u'on_combobox_marker_changed')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 834, 8), tuple_226388, unicode_226391)
# Adding element type (line 834)
unicode_226392 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 837, 8), 'unicode', u'on_colorbutton_linestyle_color_set')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 834, 8), tuple_226388, unicode_226392)
# Adding element type (line 834)
unicode_226393 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 838, 8), 'unicode', u'on_colorbutton_markerface_color_set')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 834, 8), tuple_226388, unicode_226393)
# Adding element type (line 834)
unicode_226394 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 839, 8), 'unicode', u'on_dialog_lineprops_okbutton_clicked')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 834, 8), tuple_226388, unicode_226394)
# Adding element type (line 834)
unicode_226395 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 840, 8), 'unicode', u'on_dialog_lineprops_cancelbutton_clicked')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 834, 8), tuple_226388, unicode_226395)

# Getting the type of 'DialogLineprops'
DialogLineprops_226396 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'DialogLineprops')
# Setting the type of the member 'signals' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), DialogLineprops_226396, 'signals', tuple_226388)

# Assigning a ListComp to a Name (line 843):
# Calculating list comprehension
# Calculating comprehension expression
# Getting the type of 'lines' (line 843)
lines_226402 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 843, 31), 'lines')
# Obtaining the member 'Line2D' of a type (line 843)
Line2D_226403 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 843, 31), lines_226402, 'Line2D')
# Obtaining the member 'lineStyles' of a type (line 843)
lineStyles_226404 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 843, 31), Line2D_226403, 'lineStyles')
comprehension_226405 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 843, 18), lineStyles_226404)
# Assigning a type to the variable 'ls' (line 843)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 843, 18), 'ls', comprehension_226405)

# Call to strip(...): (line 843)
# Processing the call keyword arguments (line 843)
kwargs_226400 = {}
# Getting the type of 'ls' (line 843)
ls_226398 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 843, 58), 'ls', False)
# Obtaining the member 'strip' of a type (line 843)
strip_226399 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 843, 58), ls_226398, 'strip')
# Calling strip(args, kwargs) (line 843)
strip_call_result_226401 = invoke(stypy.reporting.localization.Localization(__file__, 843, 58), strip_226399, *[], **kwargs_226400)

# Getting the type of 'ls' (line 843)
ls_226397 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 843, 18), 'ls')
list_226406 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 843, 18), 'list')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 843, 18), list_226406, ls_226397)
# Getting the type of 'DialogLineprops'
DialogLineprops_226407 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'DialogLineprops')
# Setting the type of the member 'linestyles' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), DialogLineprops_226407, 'linestyles', list_226406)

# Assigning a DictComp to a Name (line 844):
# Calculating dict comprehension
module_type_store = module_type_store.open_function_context('dict comprehension expression', 844, 18, True)
# Calculating comprehension expression

# Call to enumerate(...): (line 844)
# Processing the call arguments (line 844)
# Getting the type of 'DialogLineprops'
DialogLineprops_226411 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'DialogLineprops', False)
# Obtaining the member 'linestyles' of a type
linestyles_226412 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), DialogLineprops_226411, 'linestyles')
# Processing the call keyword arguments (line 844)
kwargs_226413 = {}
# Getting the type of 'enumerate' (line 844)
enumerate_226410 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 844, 35), 'enumerate', False)
# Calling enumerate(args, kwargs) (line 844)
enumerate_call_result_226414 = invoke(stypy.reporting.localization.Localization(__file__, 844, 35), enumerate_226410, *[linestyles_226412], **kwargs_226413)

comprehension_226415 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 844, 18), enumerate_call_result_226414)
# Assigning a type to the variable 'i' (line 844)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 844, 18), 'i', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 844, 18), comprehension_226415))
# Assigning a type to the variable 's' (line 844)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 844, 18), 's', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 844, 18), comprehension_226415))
# Getting the type of 's' (line 844)
s_226408 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 844, 18), 's')
# Getting the type of 'i' (line 844)
i_226409 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 844, 21), 'i')
dict_226416 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 844, 18), 'dict')
# Destroy the current context
module_type_store = module_type_store.close_function_context()
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 844, 18), dict_226416, (s_226408, i_226409))
# Getting the type of 'DialogLineprops'
DialogLineprops_226417 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'DialogLineprops')
# Setting the type of the member 'linestyled' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), DialogLineprops_226417, 'linestyled', dict_226416)

# Assigning a ListComp to a Name (line 846):
# Calculating list comprehension
# Calculating comprehension expression
# Getting the type of 'DialogLineprops'
DialogLineprops_226425 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'DialogLineprops')
# Obtaining the member 'markers' of a type
markers_226426 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), DialogLineprops_226425, 'markers')
# Obtaining the member 'MarkerStyle' of a type (line 846)
MarkerStyle_226427 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 846, 27), markers_226426, 'MarkerStyle')
# Obtaining the member 'markers' of a type (line 846)
markers_226428 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 846, 27), MarkerStyle_226427, 'markers')
comprehension_226429 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 846, 16), markers_226428)
# Assigning a type to the variable 'm' (line 846)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 846, 16), 'm', comprehension_226429)

# Call to isinstance(...): (line 847)
# Processing the call arguments (line 847)
# Getting the type of 'm' (line 847)
m_226420 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 847, 30), 'm', False)
# Getting the type of 'six' (line 847)
six_226421 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 847, 33), 'six', False)
# Obtaining the member 'string_types' of a type (line 847)
string_types_226422 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 847, 33), six_226421, 'string_types')
# Processing the call keyword arguments (line 847)
kwargs_226423 = {}
# Getting the type of 'isinstance' (line 847)
isinstance_226419 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 847, 19), 'isinstance', False)
# Calling isinstance(args, kwargs) (line 847)
isinstance_call_result_226424 = invoke(stypy.reporting.localization.Localization(__file__, 847, 19), isinstance_226419, *[m_226420, string_types_226422], **kwargs_226423)

# Getting the type of 'm' (line 846)
m_226418 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 846, 16), 'm')
list_226430 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 846, 16), 'list')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 846, 16), list_226430, m_226418)
# Getting the type of 'DialogLineprops'
DialogLineprops_226431 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'DialogLineprops')
# Setting the type of the member 'markers' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), DialogLineprops_226431, 'markers', list_226430)

# Assigning a DictComp to a Name (line 848):
# Calculating dict comprehension
module_type_store = module_type_store.open_function_context('dict comprehension expression', 848, 15, True)
# Calculating comprehension expression

# Call to enumerate(...): (line 848)
# Processing the call arguments (line 848)
# Getting the type of 'DialogLineprops'
DialogLineprops_226435 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'DialogLineprops', False)
# Obtaining the member 'markers' of a type
markers_226436 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), DialogLineprops_226435, 'markers')
# Processing the call keyword arguments (line 848)
kwargs_226437 = {}
# Getting the type of 'enumerate' (line 848)
enumerate_226434 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 848, 32), 'enumerate', False)
# Calling enumerate(args, kwargs) (line 848)
enumerate_call_result_226438 = invoke(stypy.reporting.localization.Localization(__file__, 848, 32), enumerate_226434, *[markers_226436], **kwargs_226437)

comprehension_226439 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 848, 15), enumerate_call_result_226438)
# Assigning a type to the variable 'i' (line 848)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 848, 15), 'i', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 848, 15), comprehension_226439))
# Assigning a type to the variable 's' (line 848)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 848, 15), 's', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 848, 15), comprehension_226439))
# Getting the type of 's' (line 848)
s_226432 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 848, 15), 's')
# Getting the type of 'i' (line 848)
i_226433 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 848, 18), 'i')
dict_226440 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 848, 15), 'dict')
# Destroy the current context
module_type_store = module_type_store.close_function_context()
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 848, 15), dict_226440, (s_226432, i_226433))
# Getting the type of 'DialogLineprops'
DialogLineprops_226441 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'DialogLineprops')
# Setting the type of the member 'markerd' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), DialogLineprops_226441, 'markerd', dict_226440)


# SSA begins for try-except statement (line 991)
module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')


# Evaluating a boolean operation

# Getting the type of 'gtk' (line 992)
gtk_226442 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 992, 7), 'gtk')
# Obtaining the member 'pygtk_version' of a type (line 992)
pygtk_version_226443 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 992, 7), gtk_226442, 'pygtk_version')

# Obtaining an instance of the builtin type 'tuple' (line 992)
tuple_226444 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 992, 28), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 992)
# Adding element type (line 992)
int_226445 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 992, 28), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 992, 28), tuple_226444, int_226445)
# Adding element type (line 992)
int_226446 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 992, 31), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 992, 28), tuple_226444, int_226446)
# Adding element type (line 992)
int_226447 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 992, 34), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 992, 28), tuple_226444, int_226447)

# Applying the binary operator '<' (line 992)
result_lt_226448 = python_operator(stypy.reporting.localization.Localization(__file__, 992, 7), '<', pygtk_version_226443, tuple_226444)


# Getting the type of 'sys' (line 992)
sys_226449 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 992, 40), 'sys')
# Obtaining the member 'platform' of a type (line 992)
platform_226450 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 992, 40), sys_226449, 'platform')
unicode_226451 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 992, 56), 'unicode', u'win32')
# Applying the binary operator '==' (line 992)
result_eq_226452 = python_operator(stypy.reporting.localization.Localization(__file__, 992, 40), '==', platform_226450, unicode_226451)

# Applying the binary operator 'or' (line 992)
result_or_keyword_226453 = python_operator(stypy.reporting.localization.Localization(__file__, 992, 7), 'or', result_lt_226448, result_eq_226452)

# Testing the type of an if condition (line 992)
if_condition_226454 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 992, 4), result_or_keyword_226453)
# Assigning a type to the variable 'if_condition_226454' (line 992)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 992, 4), 'if_condition_226454', if_condition_226454)
# SSA begins for if statement (line 992)
module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')

# Assigning a Str to a Name (line 993):

# Assigning a Str to a Name (line 993):
unicode_226455 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 993, 24), 'unicode', u'matplotlib.png')
# Assigning a type to the variable 'icon_filename' (line 993)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 993, 8), 'icon_filename', unicode_226455)
# SSA branch for the else part of an if statement (line 992)
module_type_store.open_ssa_branch('else')

# Assigning a Str to a Name (line 995):

# Assigning a Str to a Name (line 995):
unicode_226456 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 995, 24), 'unicode', u'matplotlib.svg')
# Assigning a type to the variable 'icon_filename' (line 995)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 995, 8), 'icon_filename', unicode_226456)
# SSA join for if statement (line 992)
module_type_store = module_type_store.join_ssa_context()


# Assigning a Call to a Name (line 996):

# Assigning a Call to a Name (line 996):

# Call to join(...): (line 996)
# Processing the call arguments (line 996)

# Obtaining the type of the subscript
unicode_226460 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 996, 40), 'unicode', u'datapath')
# Getting the type of 'rcParams' (line 996)
rcParams_226461 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 996, 31), 'rcParams', False)
# Obtaining the member '__getitem__' of a type (line 996)
getitem___226462 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 996, 31), rcParams_226461, '__getitem__')
# Calling the subscript (__getitem__) to obtain the elements type (line 996)
subscript_call_result_226463 = invoke(stypy.reporting.localization.Localization(__file__, 996, 31), getitem___226462, unicode_226460)

unicode_226464 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 996, 53), 'unicode', u'images')
# Getting the type of 'icon_filename' (line 996)
icon_filename_226465 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 996, 63), 'icon_filename', False)
# Processing the call keyword arguments (line 996)
kwargs_226466 = {}
# Getting the type of 'os' (line 996)
os_226457 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 996, 18), 'os', False)
# Obtaining the member 'path' of a type (line 996)
path_226458 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 996, 18), os_226457, 'path')
# Obtaining the member 'join' of a type (line 996)
join_226459 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 996, 18), path_226458, 'join')
# Calling join(args, kwargs) (line 996)
join_call_result_226467 = invoke(stypy.reporting.localization.Localization(__file__, 996, 18), join_226459, *[subscript_call_result_226463, unicode_226464, icon_filename_226465], **kwargs_226466)

# Assigning a type to the variable 'window_icon' (line 996)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 996, 4), 'window_icon', join_call_result_226467)
# SSA branch for the except part of a try statement (line 991)
# SSA branch for the except '<any exception>' branch of a try statement (line 991)
module_type_store.open_ssa_branch('except')

# Assigning a Name to a Name (line 998):

# Assigning a Name to a Name (line 998):
# Getting the type of 'None' (line 998)
None_226468 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 998, 18), 'None')
# Assigning a type to the variable 'window_icon' (line 998)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 998, 4), 'window_icon', None_226468)

# Call to report(...): (line 999)
# Processing the call arguments (line 999)
unicode_226471 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 999, 19), 'unicode', u'Could not load matplotlib icon: %s')

# Obtaining the type of the subscript
int_226472 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 999, 73), 'int')

# Call to exc_info(...): (line 999)
# Processing the call keyword arguments (line 999)
kwargs_226475 = {}
# Getting the type of 'sys' (line 999)
sys_226473 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 999, 58), 'sys', False)
# Obtaining the member 'exc_info' of a type (line 999)
exc_info_226474 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 999, 58), sys_226473, 'exc_info')
# Calling exc_info(args, kwargs) (line 999)
exc_info_call_result_226476 = invoke(stypy.reporting.localization.Localization(__file__, 999, 58), exc_info_226474, *[], **kwargs_226475)

# Obtaining the member '__getitem__' of a type (line 999)
getitem___226477 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 999, 58), exc_info_call_result_226476, '__getitem__')
# Calling the subscript (__getitem__) to obtain the elements type (line 999)
subscript_call_result_226478 = invoke(stypy.reporting.localization.Localization(__file__, 999, 58), getitem___226477, int_226472)

# Applying the binary operator '%' (line 999)
result_mod_226479 = python_operator(stypy.reporting.localization.Localization(__file__, 999, 19), '%', unicode_226471, subscript_call_result_226478)

# Processing the call keyword arguments (line 999)
kwargs_226480 = {}
# Getting the type of 'verbose' (line 999)
verbose_226469 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 999, 4), 'verbose', False)
# Obtaining the member 'report' of a type (line 999)
report_226470 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 999, 4), verbose_226469, 'report')
# Calling report(args, kwargs) (line 999)
report_call_result_226481 = invoke(stypy.reporting.localization.Localization(__file__, 999, 4), report_226470, *[result_mod_226479], **kwargs_226480)

# SSA join for try-except statement (line 991)
module_type_store = module_type_store.join_ssa_context()


@norecursion
def error_msg_gtk(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    # Getting the type of 'None' (line 1001)
    None_226482 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1001, 30), 'None')
    defaults = [None_226482]
    # Create a new context for function 'error_msg_gtk'
    module_type_store = module_type_store.open_function_context('error_msg_gtk', 1001, 0, False)
    
    # Passed parameters checking function
    error_msg_gtk.stypy_localization = localization
    error_msg_gtk.stypy_type_of_self = None
    error_msg_gtk.stypy_type_store = module_type_store
    error_msg_gtk.stypy_function_name = 'error_msg_gtk'
    error_msg_gtk.stypy_param_names_list = ['msg', 'parent']
    error_msg_gtk.stypy_varargs_param_name = None
    error_msg_gtk.stypy_kwargs_param_name = None
    error_msg_gtk.stypy_call_defaults = defaults
    error_msg_gtk.stypy_call_varargs = varargs
    error_msg_gtk.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'error_msg_gtk', ['msg', 'parent'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'error_msg_gtk', localization, ['msg', 'parent'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'error_msg_gtk(...)' code ##################

    
    # Type idiom detected: calculating its left and rigth part (line 1002)
    # Getting the type of 'parent' (line 1002)
    parent_226483 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1002, 4), 'parent')
    # Getting the type of 'None' (line 1002)
    None_226484 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1002, 21), 'None')
    
    (may_be_226485, more_types_in_union_226486) = may_not_be_none(parent_226483, None_226484)

    if may_be_226485:

        if more_types_in_union_226486:
            # Runtime conditional SSA (line 1002)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        
        # Assigning a Call to a Name (line 1003):
        
        # Assigning a Call to a Name (line 1003):
        
        # Call to get_toplevel(...): (line 1003)
        # Processing the call keyword arguments (line 1003)
        kwargs_226489 = {}
        # Getting the type of 'parent' (line 1003)
        parent_226487 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1003, 17), 'parent', False)
        # Obtaining the member 'get_toplevel' of a type (line 1003)
        get_toplevel_226488 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1003, 17), parent_226487, 'get_toplevel')
        # Calling get_toplevel(args, kwargs) (line 1003)
        get_toplevel_call_result_226490 = invoke(stypy.reporting.localization.Localization(__file__, 1003, 17), get_toplevel_226488, *[], **kwargs_226489)
        
        # Assigning a type to the variable 'parent' (line 1003)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1003, 8), 'parent', get_toplevel_call_result_226490)
        
        
        
        # Call to flags(...): (line 1004)
        # Processing the call keyword arguments (line 1004)
        kwargs_226493 = {}
        # Getting the type of 'parent' (line 1004)
        parent_226491 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1004, 11), 'parent', False)
        # Obtaining the member 'flags' of a type (line 1004)
        flags_226492 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1004, 11), parent_226491, 'flags')
        # Calling flags(args, kwargs) (line 1004)
        flags_call_result_226494 = invoke(stypy.reporting.localization.Localization(__file__, 1004, 11), flags_226492, *[], **kwargs_226493)
        
        # Getting the type of 'gtk' (line 1004)
        gtk_226495 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1004, 28), 'gtk')
        # Obtaining the member 'TOPLEVEL' of a type (line 1004)
        TOPLEVEL_226496 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1004, 28), gtk_226495, 'TOPLEVEL')
        # Applying the binary operator '&' (line 1004)
        result_and__226497 = python_operator(stypy.reporting.localization.Localization(__file__, 1004, 11), '&', flags_call_result_226494, TOPLEVEL_226496)
        
        int_226498 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1004, 44), 'int')
        # Applying the binary operator '==' (line 1004)
        result_eq_226499 = python_operator(stypy.reporting.localization.Localization(__file__, 1004, 11), '==', result_and__226497, int_226498)
        
        # Testing the type of an if condition (line 1004)
        if_condition_226500 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1004, 8), result_eq_226499)
        # Assigning a type to the variable 'if_condition_226500' (line 1004)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1004, 8), 'if_condition_226500', if_condition_226500)
        # SSA begins for if statement (line 1004)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Name to a Name (line 1005):
        
        # Assigning a Name to a Name (line 1005):
        # Getting the type of 'None' (line 1005)
        None_226501 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1005, 21), 'None')
        # Assigning a type to the variable 'parent' (line 1005)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1005, 12), 'parent', None_226501)
        # SSA join for if statement (line 1004)
        module_type_store = module_type_store.join_ssa_context()
        

        if more_types_in_union_226486:
            # SSA join for if statement (line 1002)
            module_type_store = module_type_store.join_ssa_context()


    
    
    
    
    # Call to isinstance(...): (line 1007)
    # Processing the call arguments (line 1007)
    # Getting the type of 'msg' (line 1007)
    msg_226503 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1007, 22), 'msg', False)
    # Getting the type of 'six' (line 1007)
    six_226504 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1007, 27), 'six', False)
    # Obtaining the member 'string_types' of a type (line 1007)
    string_types_226505 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1007, 27), six_226504, 'string_types')
    # Processing the call keyword arguments (line 1007)
    kwargs_226506 = {}
    # Getting the type of 'isinstance' (line 1007)
    isinstance_226502 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1007, 11), 'isinstance', False)
    # Calling isinstance(args, kwargs) (line 1007)
    isinstance_call_result_226507 = invoke(stypy.reporting.localization.Localization(__file__, 1007, 11), isinstance_226502, *[msg_226503, string_types_226505], **kwargs_226506)
    
    # Applying the 'not' unary operator (line 1007)
    result_not__226508 = python_operator(stypy.reporting.localization.Localization(__file__, 1007, 7), 'not', isinstance_call_result_226507)
    
    # Testing the type of an if condition (line 1007)
    if_condition_226509 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1007, 4), result_not__226508)
    # Assigning a type to the variable 'if_condition_226509' (line 1007)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1007, 4), 'if_condition_226509', if_condition_226509)
    # SSA begins for if statement (line 1007)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 1008):
    
    # Assigning a Call to a Name (line 1008):
    
    # Call to join(...): (line 1008)
    # Processing the call arguments (line 1008)
    
    # Call to map(...): (line 1008)
    # Processing the call arguments (line 1008)
    # Getting the type of 'str' (line 1008)
    str_226513 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1008, 27), 'str', False)
    # Getting the type of 'msg' (line 1008)
    msg_226514 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1008, 31), 'msg', False)
    # Processing the call keyword arguments (line 1008)
    kwargs_226515 = {}
    # Getting the type of 'map' (line 1008)
    map_226512 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1008, 23), 'map', False)
    # Calling map(args, kwargs) (line 1008)
    map_call_result_226516 = invoke(stypy.reporting.localization.Localization(__file__, 1008, 23), map_226512, *[str_226513, msg_226514], **kwargs_226515)
    
    # Processing the call keyword arguments (line 1008)
    kwargs_226517 = {}
    unicode_226510 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1008, 14), 'unicode', u',')
    # Obtaining the member 'join' of a type (line 1008)
    join_226511 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1008, 14), unicode_226510, 'join')
    # Calling join(args, kwargs) (line 1008)
    join_call_result_226518 = invoke(stypy.reporting.localization.Localization(__file__, 1008, 14), join_226511, *[map_call_result_226516], **kwargs_226517)
    
    # Assigning a type to the variable 'msg' (line 1008)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1008, 8), 'msg', join_call_result_226518)
    # SSA join for if statement (line 1007)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 1010):
    
    # Assigning a Call to a Name (line 1010):
    
    # Call to MessageDialog(...): (line 1010)
    # Processing the call keyword arguments (line 1010)
    # Getting the type of 'parent' (line 1011)
    parent_226521 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1011, 25), 'parent', False)
    keyword_226522 = parent_226521
    # Getting the type of 'gtk' (line 1012)
    gtk_226523 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1012, 25), 'gtk', False)
    # Obtaining the member 'MESSAGE_ERROR' of a type (line 1012)
    MESSAGE_ERROR_226524 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1012, 25), gtk_226523, 'MESSAGE_ERROR')
    keyword_226525 = MESSAGE_ERROR_226524
    # Getting the type of 'gtk' (line 1013)
    gtk_226526 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1013, 25), 'gtk', False)
    # Obtaining the member 'BUTTONS_OK' of a type (line 1013)
    BUTTONS_OK_226527 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1013, 25), gtk_226526, 'BUTTONS_OK')
    keyword_226528 = BUTTONS_OK_226527
    # Getting the type of 'msg' (line 1014)
    msg_226529 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1014, 25), 'msg', False)
    keyword_226530 = msg_226529
    kwargs_226531 = {'buttons': keyword_226528, 'type': keyword_226525, 'parent': keyword_226522, 'message_format': keyword_226530}
    # Getting the type of 'gtk' (line 1010)
    gtk_226519 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1010, 13), 'gtk', False)
    # Obtaining the member 'MessageDialog' of a type (line 1010)
    MessageDialog_226520 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1010, 13), gtk_226519, 'MessageDialog')
    # Calling MessageDialog(args, kwargs) (line 1010)
    MessageDialog_call_result_226532 = invoke(stypy.reporting.localization.Localization(__file__, 1010, 13), MessageDialog_226520, *[], **kwargs_226531)
    
    # Assigning a type to the variable 'dialog' (line 1010)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1010, 4), 'dialog', MessageDialog_call_result_226532)
    
    # Call to run(...): (line 1015)
    # Processing the call keyword arguments (line 1015)
    kwargs_226535 = {}
    # Getting the type of 'dialog' (line 1015)
    dialog_226533 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1015, 4), 'dialog', False)
    # Obtaining the member 'run' of a type (line 1015)
    run_226534 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1015, 4), dialog_226533, 'run')
    # Calling run(args, kwargs) (line 1015)
    run_call_result_226536 = invoke(stypy.reporting.localization.Localization(__file__, 1015, 4), run_226534, *[], **kwargs_226535)
    
    
    # Call to destroy(...): (line 1016)
    # Processing the call keyword arguments (line 1016)
    kwargs_226539 = {}
    # Getting the type of 'dialog' (line 1016)
    dialog_226537 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1016, 4), 'dialog', False)
    # Obtaining the member 'destroy' of a type (line 1016)
    destroy_226538 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1016, 4), dialog_226537, 'destroy')
    # Calling destroy(args, kwargs) (line 1016)
    destroy_call_result_226540 = invoke(stypy.reporting.localization.Localization(__file__, 1016, 4), destroy_226538, *[], **kwargs_226539)
    
    
    # ################# End of 'error_msg_gtk(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'error_msg_gtk' in the type store
    # Getting the type of 'stypy_return_type' (line 1001)
    stypy_return_type_226541 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1001, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_226541)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'error_msg_gtk'
    return stypy_return_type_226541

# Assigning a type to the variable 'error_msg_gtk' (line 1001)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1001, 0), 'error_msg_gtk', error_msg_gtk)
# Declaration of the '_BackendGTK' class
# Getting the type of '_Backend' (line 1020)
_Backend_226542 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1020, 18), '_Backend')

class _BackendGTK(_Backend_226542, ):
    
    # Assigning a Name to a Name (line 1021):
    
    # Assigning a Name to a Name (line 1022):

    @staticmethod
    @norecursion
    def trigger_manager_draw(localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'trigger_manager_draw'
        module_type_store = module_type_store.open_function_context('trigger_manager_draw', 1024, 4, False)
        
        # Passed parameters checking function
        _BackendGTK.trigger_manager_draw.__dict__.__setitem__('stypy_localization', localization)
        _BackendGTK.trigger_manager_draw.__dict__.__setitem__('stypy_type_of_self', None)
        _BackendGTK.trigger_manager_draw.__dict__.__setitem__('stypy_type_store', module_type_store)
        _BackendGTK.trigger_manager_draw.__dict__.__setitem__('stypy_function_name', 'trigger_manager_draw')
        _BackendGTK.trigger_manager_draw.__dict__.__setitem__('stypy_param_names_list', ['manager'])
        _BackendGTK.trigger_manager_draw.__dict__.__setitem__('stypy_varargs_param_name', None)
        _BackendGTK.trigger_manager_draw.__dict__.__setitem__('stypy_kwargs_param_name', None)
        _BackendGTK.trigger_manager_draw.__dict__.__setitem__('stypy_call_defaults', defaults)
        _BackendGTK.trigger_manager_draw.__dict__.__setitem__('stypy_call_varargs', varargs)
        _BackendGTK.trigger_manager_draw.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        _BackendGTK.trigger_manager_draw.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, None, module_type_store, 'trigger_manager_draw', ['manager'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'trigger_manager_draw', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'trigger_manager_draw(...)' code ##################

        
        # Call to draw_idle(...): (line 1026)
        # Processing the call keyword arguments (line 1026)
        kwargs_226546 = {}
        # Getting the type of 'manager' (line 1026)
        manager_226543 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1026, 8), 'manager', False)
        # Obtaining the member 'canvas' of a type (line 1026)
        canvas_226544 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1026, 8), manager_226543, 'canvas')
        # Obtaining the member 'draw_idle' of a type (line 1026)
        draw_idle_226545 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1026, 8), canvas_226544, 'draw_idle')
        # Calling draw_idle(args, kwargs) (line 1026)
        draw_idle_call_result_226547 = invoke(stypy.reporting.localization.Localization(__file__, 1026, 8), draw_idle_226545, *[], **kwargs_226546)
        
        
        # ################# End of 'trigger_manager_draw(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'trigger_manager_draw' in the type store
        # Getting the type of 'stypy_return_type' (line 1024)
        stypy_return_type_226548 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1024, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_226548)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'trigger_manager_draw'
        return stypy_return_type_226548


    @staticmethod
    @norecursion
    def mainloop(localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'mainloop'
        module_type_store = module_type_store.open_function_context('mainloop', 1028, 4, False)
        
        # Passed parameters checking function
        _BackendGTK.mainloop.__dict__.__setitem__('stypy_localization', localization)
        _BackendGTK.mainloop.__dict__.__setitem__('stypy_type_of_self', None)
        _BackendGTK.mainloop.__dict__.__setitem__('stypy_type_store', module_type_store)
        _BackendGTK.mainloop.__dict__.__setitem__('stypy_function_name', 'mainloop')
        _BackendGTK.mainloop.__dict__.__setitem__('stypy_param_names_list', [])
        _BackendGTK.mainloop.__dict__.__setitem__('stypy_varargs_param_name', None)
        _BackendGTK.mainloop.__dict__.__setitem__('stypy_kwargs_param_name', None)
        _BackendGTK.mainloop.__dict__.__setitem__('stypy_call_defaults', defaults)
        _BackendGTK.mainloop.__dict__.__setitem__('stypy_call_varargs', varargs)
        _BackendGTK.mainloop.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        _BackendGTK.mainloop.__dict__.__setitem__('stypy_declared_arg_number', 0)
        arguments = process_argument_values(localization, None, module_type_store, 'mainloop', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'mainloop', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'mainloop(...)' code ##################

        
        
        
        # Call to main_level(...): (line 1030)
        # Processing the call keyword arguments (line 1030)
        kwargs_226551 = {}
        # Getting the type of 'gtk' (line 1030)
        gtk_226549 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1030, 11), 'gtk', False)
        # Obtaining the member 'main_level' of a type (line 1030)
        main_level_226550 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1030, 11), gtk_226549, 'main_level')
        # Calling main_level(args, kwargs) (line 1030)
        main_level_call_result_226552 = invoke(stypy.reporting.localization.Localization(__file__, 1030, 11), main_level_226550, *[], **kwargs_226551)
        
        int_226553 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1030, 31), 'int')
        # Applying the binary operator '==' (line 1030)
        result_eq_226554 = python_operator(stypy.reporting.localization.Localization(__file__, 1030, 11), '==', main_level_call_result_226552, int_226553)
        
        # Testing the type of an if condition (line 1030)
        if_condition_226555 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1030, 8), result_eq_226554)
        # Assigning a type to the variable 'if_condition_226555' (line 1030)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1030, 8), 'if_condition_226555', if_condition_226555)
        # SSA begins for if statement (line 1030)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to main(...): (line 1031)
        # Processing the call keyword arguments (line 1031)
        kwargs_226558 = {}
        # Getting the type of 'gtk' (line 1031)
        gtk_226556 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1031, 12), 'gtk', False)
        # Obtaining the member 'main' of a type (line 1031)
        main_226557 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1031, 12), gtk_226556, 'main')
        # Calling main(args, kwargs) (line 1031)
        main_call_result_226559 = invoke(stypy.reporting.localization.Localization(__file__, 1031, 12), main_226557, *[], **kwargs_226558)
        
        # SSA join for if statement (line 1030)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'mainloop(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'mainloop' in the type store
        # Getting the type of 'stypy_return_type' (line 1028)
        stypy_return_type_226560 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1028, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_226560)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'mainloop'
        return stypy_return_type_226560


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 1019, 0, False)
        # Assigning a type to the variable 'self' (line 1020)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1020, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, '_BackendGTK.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable '_BackendGTK' (line 1019)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1019, 0), '_BackendGTK', _BackendGTK)

# Assigning a Name to a Name (line 1021):
# Getting the type of 'FigureCanvasGTK' (line 1021)
FigureCanvasGTK_226561 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1021, 19), 'FigureCanvasGTK')
# Getting the type of '_BackendGTK'
_BackendGTK_226562 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), '_BackendGTK')
# Setting the type of the member 'FigureCanvas' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), _BackendGTK_226562, 'FigureCanvas', FigureCanvasGTK_226561)

# Assigning a Name to a Name (line 1022):
# Getting the type of 'FigureManagerGTK' (line 1022)
FigureManagerGTK_226563 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1022, 20), 'FigureManagerGTK')
# Getting the type of '_BackendGTK'
_BackendGTK_226564 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), '_BackendGTK')
# Setting the type of the member 'FigureManager' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), _BackendGTK_226564, 'FigureManager', FigureManagerGTK_226563)

# ################# End of the type inference program ##################

module_errors = stypy.errors.type_error.StypyTypeError.get_error_msgs()
module_warnings = stypy.errors.type_warning.TypeWarning.get_warning_msgs()
