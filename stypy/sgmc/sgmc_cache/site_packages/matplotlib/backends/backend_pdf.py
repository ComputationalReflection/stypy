
# -*- coding: utf-8 -*-

"""
ORIGINAL PROGRAM SOURCE CODE:
1: # -*- coding: utf-8 -*-
2: 
3: '''
4: A PDF matplotlib backend
5: Author: Jouni K Sepp√§nen <jks@iki.fi>
6: '''
7: from __future__ import (absolute_import, division, print_function,
8:                         unicode_literals)
9: 
10: import six
11: 
12: import codecs
13: import os
14: import re
15: import struct
16: import sys
17: import time
18: import warnings
19: import zlib
20: import collections
21: from io import BytesIO
22: from functools import total_ordering
23: 
24: import numpy as np
25: from six import unichr
26: 
27: 
28: from datetime import datetime, tzinfo, timedelta
29: from math import ceil, cos, floor, pi, sin
30: 
31: import matplotlib
32: from matplotlib import __version__, rcParams
33: from matplotlib._pylab_helpers import Gcf
34: from matplotlib.backend_bases import (
35:     _Backend, FigureCanvasBase, FigureManagerBase, GraphicsContextBase,
36:     RendererBase)
37: from matplotlib.backends.backend_mixed import MixedModeRenderer
38: from matplotlib.cbook import (Bunch, get_realpath_and_stat,
39:                               is_writable_file_like, maxdict)
40: from matplotlib.figure import Figure
41: from matplotlib.font_manager import findfont, is_opentype_cff_font, get_font
42: from matplotlib.afm import AFM
43: import matplotlib.type1font as type1font
44: import matplotlib.dviread as dviread
45: from matplotlib.ft2font import (FIXED_WIDTH, ITALIC, LOAD_NO_SCALE,
46:                                 LOAD_NO_HINTING, KERNING_UNFITTED)
47: from matplotlib.mathtext import MathTextParser
48: from matplotlib.transforms import Affine2D, BboxBase
49: from matplotlib.path import Path
50: from matplotlib.dates import UTC
51: from matplotlib import _path
52: from matplotlib import _png
53: from matplotlib import ttconv
54: 
55: # Overview
56: #
57: # The low-level knowledge about pdf syntax lies mainly in the pdfRepr
58: # function and the classes Reference, Name, Operator, and Stream.  The
59: # PdfFile class knows about the overall structure of pdf documents.
60: # It provides a "write" method for writing arbitrary strings in the
61: # file, and an "output" method that passes objects through the pdfRepr
62: # function before writing them in the file.  The output method is
63: # called by the RendererPdf class, which contains the various draw_foo
64: # methods.  RendererPdf contains a GraphicsContextPdf instance, and
65: # each draw_foo calls self.check_gc before outputting commands.  This
66: # method checks whether the pdf graphics state needs to be modified
67: # and outputs the necessary commands.  GraphicsContextPdf represents
68: # the graphics state, and its "delta" method returns the commands that
69: # modify the state.
70: 
71: # Add "pdf.use14corefonts: True" in your configuration file to use only
72: # the 14 PDF core fonts. These fonts do not need to be embedded; every
73: # PDF viewing application is required to have them. This results in very
74: # light PDF files you can use directly in LaTeX or ConTeXt documents
75: # generated with pdfTeX, without any conversion.
76: 
77: # These fonts are: Helvetica, Helvetica-Bold, Helvetica-Oblique,
78: # Helvetica-BoldOblique, Courier, Courier-Bold, Courier-Oblique,
79: # Courier-BoldOblique, Times-Roman, Times-Bold, Times-Italic,
80: # Times-BoldItalic, Symbol, ZapfDingbats.
81: #
82: # Some tricky points:
83: #
84: # 1. The clip path can only be widened by popping from the state
85: # stack.  Thus the state must be pushed onto the stack before narrowing
86: # the clip path.  This is taken care of by GraphicsContextPdf.
87: #
88: # 2. Sometimes it is necessary to refer to something (e.g., font,
89: # image, or extended graphics state, which contains the alpha value)
90: # in the page stream by a name that needs to be defined outside the
91: # stream.  PdfFile provides the methods fontName, imageObject, and
92: # alphaState for this purpose.  The implementations of these methods
93: # should perhaps be generalized.
94: 
95: # TODOs:
96: #
97: # * encoding of fonts, including mathtext fonts and unicode support
98: # * TTF support has lots of small TODOs, e.g., how do you know if a font
99: #   is serif/sans-serif, or symbolic/non-symbolic?
100: # * draw_markers, draw_line_collection, etc.
101: 
102: 
103: def fill(strings, linelen=75):
104:     '''Make one string from sequence of strings, with whitespace
105:     in between. The whitespace is chosen to form lines of at most
106:     linelen characters, if possible.'''
107:     currpos = 0
108:     lasti = 0
109:     result = []
110:     for i, s in enumerate(strings):
111:         length = len(s)
112:         if currpos + length < linelen:
113:             currpos += length + 1
114:         else:
115:             result.append(b' '.join(strings[lasti:i]))
116:             lasti = i
117:             currpos = length
118:     result.append(b' '.join(strings[lasti:]))
119:     return b'\n'.join(result)
120: 
121: # PDF strings are supposed to be able to include any eight-bit data,
122: # except that unbalanced parens and backslashes must be escaped by a
123: # backslash. However, sf bug #2708559 shows that the carriage return
124: # character may get read as a newline; these characters correspond to
125: # \gamma and \Omega in TeX's math font encoding. Escaping them fixes
126: # the bug.
127: _string_escape_regex = re.compile(br'([\\()\r\n])')
128: 
129: 
130: def _string_escape(match):
131:     m = match.group(0)
132:     if m in br'\()':
133:         return b'\\' + m
134:     elif m == b'\n':
135:         return br'\n'
136:     elif m == b'\r':
137:         return br'\r'
138:     assert False
139: 
140: 
141: def pdfRepr(obj):
142:     '''Map Python objects to PDF syntax.'''
143: 
144:     # Some objects defined later have their own pdfRepr method.
145:     if hasattr(obj, 'pdfRepr'):
146:         return obj.pdfRepr()
147: 
148:     # Floats. PDF does not have exponential notation (1.0e-10) so we
149:     # need to use %f with some precision.  Perhaps the precision
150:     # should adapt to the magnitude of the number?
151:     elif isinstance(obj, (float, np.floating)):
152:         if not np.isfinite(obj):
153:             raise ValueError("Can only output finite numbers in PDF")
154:         r = ("%.10f" % obj).encode('ascii')
155:         return r.rstrip(b'0').rstrip(b'.')
156: 
157:     # Booleans. Needs to be tested before integers since
158:     # isinstance(True, int) is true.
159:     elif isinstance(obj, bool):
160:         return [b'false', b'true'][obj]
161: 
162:     # Integers are written as such.
163:     elif isinstance(obj, (six.integer_types, np.integer)):
164:         return ("%d" % obj).encode('ascii')
165: 
166:     # Unicode strings are encoded in UTF-16BE with byte-order mark.
167:     elif isinstance(obj, six.text_type):
168:         try:
169:             # But maybe it's really ASCII?
170:             s = obj.encode('ASCII')
171:             return pdfRepr(s)
172:         except UnicodeEncodeError:
173:             s = codecs.BOM_UTF16_BE + obj.encode('UTF-16BE')
174:             return pdfRepr(s)
175: 
176:     # Strings are written in parentheses, with backslashes and parens
177:     # escaped. Actually balanced parens are allowed, but it is
178:     # simpler to escape them all. TODO: cut long strings into lines;
179:     # I believe there is some maximum line length in PDF.
180:     elif isinstance(obj, bytes):
181:         return b'(' + _string_escape_regex.sub(_string_escape, obj) + b')'
182: 
183:     # Dictionaries. The keys must be PDF names, so if we find strings
184:     # there, we make Name objects from them. The values may be
185:     # anything, so the caller must ensure that PDF names are
186:     # represented as Name objects.
187:     elif isinstance(obj, dict):
188:         r = [b"<<"]
189:         r.extend([Name(key).pdfRepr() + b" " + pdfRepr(obj[key])
190:                   for key in sorted(obj)])
191:         r.append(b">>")
192:         return fill(r)
193: 
194:     # Lists.
195:     elif isinstance(obj, (list, tuple)):
196:         r = [b"["]
197:         r.extend([pdfRepr(val) for val in obj])
198:         r.append(b"]")
199:         return fill(r)
200: 
201:     # The null keyword.
202:     elif obj is None:
203:         return b'null'
204: 
205:     # A date.
206:     elif isinstance(obj, datetime):
207:         r = obj.strftime('D:%Y%m%d%H%M%S')
208:         z = obj.utcoffset()
209:         if z is not None:
210:             z = z.seconds
211:         else:
212:             if time.daylight:
213:                 z = time.altzone
214:             else:
215:                 z = time.timezone
216:         if z == 0:
217:             r += 'Z'
218:         elif z < 0:
219:             r += "+%02d'%02d'" % ((-z) // 3600, (-z) % 3600)
220:         else:
221:             r += "-%02d'%02d'" % (z // 3600, z % 3600)
222:         return pdfRepr(r)
223: 
224:     # A bounding box
225:     elif isinstance(obj, BboxBase):
226:         return fill([pdfRepr(val) for val in obj.bounds])
227: 
228:     else:
229:         msg = "Don't know a PDF representation for %s objects." % type(obj)
230:         raise TypeError(msg)
231: 
232: 
233: class Reference(object):
234:     '''PDF reference object.
235:     Use PdfFile.reserveObject() to create References.
236:     '''
237: 
238:     def __init__(self, id):
239:         self.id = id
240: 
241:     def __repr__(self):
242:         return "<Reference %d>" % self.id
243: 
244:     def pdfRepr(self):
245:         return ("%d 0 R" % self.id).encode('ascii')
246: 
247:     def write(self, contents, file):
248:         write = file.write
249:         write(("%d 0 obj\n" % self.id).encode('ascii'))
250:         write(pdfRepr(contents))
251:         write(b"\nendobj\n")
252: 
253: 
254: @total_ordering
255: class Name(object):
256:     '''PDF name object.'''
257:     __slots__ = ('name',)
258:     _regex = re.compile(r'[^!-~]')
259: 
260:     def __init__(self, name):
261:         if isinstance(name, Name):
262:             self.name = name.name
263:         else:
264:             if isinstance(name, bytes):
265:                 name = name.decode('ascii')
266:             self.name = self._regex.sub(Name.hexify, name).encode('ascii')
267: 
268:     def __repr__(self):
269:         return "<Name %s>" % self.name
270: 
271:     def __str__(self):
272:         return '/' + six.text_type(self.name)
273: 
274:     def __eq__(self, other):
275:         return isinstance(other, Name) and self.name == other.name
276: 
277:     def __lt__(self, other):
278:         return isinstance(other, Name) and self.name < other.name
279: 
280:     def __hash__(self):
281:         return hash(self.name)
282: 
283:     @staticmethod
284:     def hexify(match):
285:         return '#%02x' % ord(match.group())
286: 
287:     def pdfRepr(self):
288:         return b'/' + self.name
289: 
290: 
291: class Operator(object):
292:     '''PDF operator object.'''
293:     __slots__ = ('op',)
294: 
295:     def __init__(self, op):
296:         self.op = op
297: 
298:     def __repr__(self):
299:         return '<Operator %s>' % self.op
300: 
301:     def pdfRepr(self):
302:         return self.op
303: 
304: 
305: class Verbatim(object):
306:     '''Store verbatim PDF command content for later inclusion in the
307:     stream.'''
308:     def __init__(self, x):
309:         self._x = x
310: 
311:     def pdfRepr(self):
312:         return self._x
313: 
314: 
315: # PDF operators (not an exhaustive list)
316: _pdfops = dict(
317:     close_fill_stroke=b'b', fill_stroke=b'B', fill=b'f', closepath=b'h',
318:     close_stroke=b's', stroke=b'S', endpath=b'n', begin_text=b'BT',
319:     end_text=b'ET', curveto=b'c', rectangle=b're', lineto=b'l', moveto=b'm',
320:     concat_matrix=b'cm', use_xobject=b'Do', setgray_stroke=b'G',
321:     setgray_nonstroke=b'g', setrgb_stroke=b'RG', setrgb_nonstroke=b'rg',
322:     setcolorspace_stroke=b'CS', setcolorspace_nonstroke=b'cs',
323:     setcolor_stroke=b'SCN', setcolor_nonstroke=b'scn', setdash=b'd',
324:     setlinejoin=b'j', setlinecap=b'J', setgstate=b'gs', gsave=b'q',
325:     grestore=b'Q', textpos=b'Td', selectfont=b'Tf', textmatrix=b'Tm',
326:     show=b'Tj', showkern=b'TJ', setlinewidth=b'w', clip=b'W', shading=b'sh')
327: 
328: Op = Bunch(**{name: Operator(value) for name, value in six.iteritems(_pdfops)})
329: 
330: 
331: def _paint_path(fill, stroke):
332:     '''Return the PDF operator to paint a path in the following way:
333:     fill:   fill the path with the fill color
334:     stroke: stroke the outline of the path with the line color'''
335:     if stroke:
336:         if fill:
337:             return Op.fill_stroke
338:         else:
339:             return Op.stroke
340:     else:
341:         if fill:
342:             return Op.fill
343:         else:
344:             return Op.endpath
345: Op.paint_path = _paint_path
346: 
347: 
348: class Stream(object):
349:     '''PDF stream object.
350: 
351:     This has no pdfRepr method. Instead, call begin(), then output the
352:     contents of the stream by calling write(), and finally call end().
353:     '''
354:     __slots__ = ('id', 'len', 'pdfFile', 'file', 'compressobj', 'extra', 'pos')
355: 
356:     def __init__(self, id, len, file, extra=None, png=None):
357:         '''id: object id of stream; len: an unused Reference object for the
358:         length of the stream, or None (to use a memory buffer); file:
359:         a PdfFile; extra: a dictionary of extra key-value pairs to
360:         include in the stream header; png: if the data is already
361:         png compressed, the decode parameters'''
362:         self.id = id            # object id
363:         self.len = len          # id of length object
364:         self.pdfFile = file
365:         self.file = file.fh      # file to which the stream is written
366:         self.compressobj = None  # compression object
367:         if extra is None:
368:             self.extra = dict()
369:         else:
370:             self.extra = extra.copy()
371:         if png is not None:
372:             self.extra.update({'Filter':      Name('FlateDecode'),
373:                                'DecodeParms': png})
374: 
375:         self.pdfFile.recordXref(self.id)
376:         if rcParams['pdf.compression'] and not png:
377:             self.compressobj = zlib.compressobj(rcParams['pdf.compression'])
378:         if self.len is None:
379:             self.file = BytesIO()
380:         else:
381:             self._writeHeader()
382:             self.pos = self.file.tell()
383: 
384:     def _writeHeader(self):
385:         write = self.file.write
386:         write(("%d 0 obj\n" % self.id).encode('ascii'))
387:         dict = self.extra
388:         dict['Length'] = self.len
389:         if rcParams['pdf.compression']:
390:             dict['Filter'] = Name('FlateDecode')
391: 
392:         write(pdfRepr(dict))
393:         write(b"\nstream\n")
394: 
395:     def end(self):
396:         '''Finalize stream.'''
397: 
398:         self._flush()
399:         if self.len is None:
400:             contents = self.file.getvalue()
401:             self.len = len(contents)
402:             self.file = self.pdfFile.fh
403:             self._writeHeader()
404:             self.file.write(contents)
405:             self.file.write(b"\nendstream\nendobj\n")
406:         else:
407:             length = self.file.tell() - self.pos
408:             self.file.write(b"\nendstream\nendobj\n")
409:             self.pdfFile.writeObject(self.len, length)
410: 
411:     def write(self, data):
412:         '''Write some data on the stream.'''
413: 
414:         if self.compressobj is None:
415:             self.file.write(data)
416:         else:
417:             compressed = self.compressobj.compress(data)
418:             self.file.write(compressed)
419: 
420:     def _flush(self):
421:         '''Flush the compression object.'''
422: 
423:         if self.compressobj is not None:
424:             compressed = self.compressobj.flush()
425:             self.file.write(compressed)
426:             self.compressobj = None
427: 
428: 
429: class PdfFile(object):
430:     '''PDF file object.'''
431: 
432:     def __init__(self, filename, metadata=None):
433:         self.nextObject = 1     # next free object id
434:         self.xrefTable = [[0, 65535, 'the zero object']]
435:         self.passed_in_file_object = False
436:         self.original_file_like = None
437:         self.tell_base = 0
438:         if isinstance(filename, six.string_types):
439:             fh = open(filename, 'wb')
440:         elif is_writable_file_like(filename):
441:             try:
442:                 self.tell_base = filename.tell()
443:             except IOError:
444:                 fh = BytesIO()
445:                 self.original_file_like = filename
446:             else:
447:                 fh = filename
448:                 self.passed_in_file_object = True
449:         else:
450:             raise ValueError("filename must be a path or a file-like object")
451: 
452:         self._core14fontdir = os.path.join(
453:             rcParams['datapath'], 'fonts', 'pdfcorefonts')
454:         self.fh = fh
455:         self.currentstream = None  # stream object to write to, if any
456:         fh.write(b"%PDF-1.4\n")    # 1.4 is the first version to have alpha
457:         # Output some eight-bit chars as a comment so various utilities
458:         # recognize the file as binary by looking at the first few
459:         # lines (see note in section 3.4.1 of the PDF reference).
460:         fh.write(b"%\254\334 \253\272\n")
461: 
462:         self.rootObject = self.reserveObject('root')
463:         self.pagesObject = self.reserveObject('pages')
464:         self.pageList = []
465:         self.fontObject = self.reserveObject('fonts')
466:         self.alphaStateObject = self.reserveObject('extended graphics states')
467:         self.hatchObject = self.reserveObject('tiling patterns')
468:         self.gouraudObject = self.reserveObject('Gouraud triangles')
469:         self.XObjectObject = self.reserveObject('external objects')
470:         self.resourceObject = self.reserveObject('resources')
471: 
472:         root = {'Type': Name('Catalog'),
473:                 'Pages': self.pagesObject}
474:         self.writeObject(self.rootObject, root)
475: 
476:         # get source date from SOURCE_DATE_EPOCH, if set
477:         # See https://reproducible-builds.org/specs/source-date-epoch/
478:         source_date_epoch = os.getenv("SOURCE_DATE_EPOCH")
479:         if source_date_epoch:
480:             source_date = datetime.utcfromtimestamp(int(source_date_epoch))
481:             source_date = source_date.replace(tzinfo=UTC)
482:         else:
483:             source_date = datetime.today()
484: 
485:         self.infoDict = {
486:             'Creator': 'matplotlib %s, http://matplotlib.org' % __version__,
487:             'Producer': 'matplotlib pdf backend %s' % __version__,
488:             'CreationDate': source_date
489:         }
490:         if metadata is not None:
491:             self.infoDict.update(metadata)
492:         self.infoDict = {k: v for (k, v) in self.infoDict.items()
493:                          if v is not None}
494: 
495:         self.fontNames = {}     # maps filenames to internal font names
496:         self.nextFont = 1       # next free internal font name
497:         self.dviFontInfo = {}   # maps dvi font names to embedding information
498:         self._texFontMap = None  # maps TeX font names to PostScript fonts
499:         # differently encoded Type-1 fonts may share the same descriptor
500:         self.type1Descriptors = {}
501:         self.used_characters = {}
502: 
503:         self.alphaStates = {}   # maps alpha values to graphics state objects
504:         self.nextAlphaState = 1
505:         # reproducible writeHatches needs an ordered dict:
506:         self.hatchPatterns = collections.OrderedDict()
507:         self.nextHatch = 1
508:         self.gouraudTriangles = []
509: 
510:         self._images = collections.OrderedDict()   # reproducible writeImages
511:         self.nextImage = 1
512: 
513:         self.markers = collections.OrderedDict()   # reproducible writeMarkers
514:         self.multi_byte_charprocs = {}
515: 
516:         self.paths = []
517: 
518:         self.pageAnnotations = []  # A list of annotations for the
519:                                    # current page
520: 
521:         # The PDF spec recommends to include every procset
522:         procsets = [Name(x)
523:                     for x in "PDF Text ImageB ImageC ImageI".split()]
524: 
525:         # Write resource dictionary.
526:         # Possibly TODO: more general ExtGState (graphics state dictionaries)
527:         #                ColorSpace Pattern Shading Properties
528:         resources = {'Font': self.fontObject,
529:                      'XObject': self.XObjectObject,
530:                      'ExtGState': self.alphaStateObject,
531:                      'Pattern': self.hatchObject,
532:                      'Shading': self.gouraudObject,
533:                      'ProcSet': procsets}
534:         self.writeObject(self.resourceObject, resources)
535: 
536:     def newPage(self, width, height):
537:         self.endStream()
538: 
539:         self.width, self.height = width, height
540:         contentObject = self.reserveObject('page contents')
541:         thePage = {'Type': Name('Page'),
542:                    'Parent': self.pagesObject,
543:                    'Resources': self.resourceObject,
544:                    'MediaBox': [0, 0, 72 * width, 72 * height],
545:                    'Contents': contentObject,
546:                    'Group': {'Type': Name('Group'),
547:                              'S': Name('Transparency'),
548:                              'CS': Name('DeviceRGB')},
549:                    'Annots': self.pageAnnotations,
550:                    }
551:         pageObject = self.reserveObject('page')
552:         self.writeObject(pageObject, thePage)
553:         self.pageList.append(pageObject)
554: 
555:         self.beginStream(contentObject.id,
556:                          self.reserveObject('length of content stream'))
557:         # Initialize the pdf graphics state to match the default mpl
558:         # graphics context: currently only the join style needs to be set
559:         self.output(GraphicsContextPdf.joinstyles['round'], Op.setlinejoin)
560: 
561:         # Clear the list of annotations for the next page
562:         self.pageAnnotations = []
563: 
564:     def newTextnote(self, text, positionRect=[-100, -100, 0, 0]):
565:         # Create a new annotation of type text
566:         theNote = {'Type': Name('Annot'),
567:                    'Subtype': Name('Text'),
568:                    'Contents': text,
569:                    'Rect': positionRect,
570:                    }
571:         annotObject = self.reserveObject('annotation')
572:         self.writeObject(annotObject, theNote)
573:         self.pageAnnotations.append(annotObject)
574: 
575:     def finalize(self):
576:         "Write out the various deferred objects and the pdf end matter."
577: 
578:         self.endStream()
579:         self.writeFonts()
580:         self.writeObject(
581:             self.alphaStateObject,
582:             {val[0]: val[1] for val in six.itervalues(self.alphaStates)})
583:         self.writeHatches()
584:         self.writeGouraudTriangles()
585:         xobjects = {
586:             name: ob for image, name, ob in six.itervalues(self._images)}
587:         for tup in six.itervalues(self.markers):
588:             xobjects[tup[0]] = tup[1]
589:         for name, value in six.iteritems(self.multi_byte_charprocs):
590:             xobjects[name] = value
591:         for name, path, trans, ob, join, cap, padding, filled, stroked \
592:                 in self.paths:
593:             xobjects[name] = ob
594:         self.writeObject(self.XObjectObject, xobjects)
595:         self.writeImages()
596:         self.writeMarkers()
597:         self.writePathCollectionTemplates()
598:         self.writeObject(self.pagesObject,
599:                          {'Type': Name('Pages'),
600:                           'Kids': self.pageList,
601:                           'Count': len(self.pageList)})
602:         self.writeInfoDict()
603: 
604:         # Finalize the file
605:         self.writeXref()
606:         self.writeTrailer()
607: 
608:     def close(self):
609:         "Flush all buffers and free all resources."
610: 
611:         self.endStream()
612:         if self.passed_in_file_object:
613:             self.fh.flush()
614:         else:
615:             if self.original_file_like is not None:
616:                 self.original_file_like.write(self.fh.getvalue())
617:             self.fh.close()
618: 
619:     def write(self, data):
620:         if self.currentstream is None:
621:             self.fh.write(data)
622:         else:
623:             self.currentstream.write(data)
624: 
625:     def output(self, *data):
626:         self.write(fill([pdfRepr(x) for x in data]))
627:         self.write(b'\n')
628: 
629:     def beginStream(self, id, len, extra=None, png=None):
630:         assert self.currentstream is None
631:         self.currentstream = Stream(id, len, self, extra, png)
632: 
633:     def endStream(self):
634:         if self.currentstream is not None:
635:             self.currentstream.end()
636:             self.currentstream = None
637: 
638:     def fontName(self, fontprop):
639:         '''
640:         Select a font based on fontprop and return a name suitable for
641:         Op.selectfont. If fontprop is a string, it will be interpreted
642:         as the filename of the font.
643:         '''
644: 
645:         if isinstance(fontprop, six.string_types):
646:             filename = fontprop
647:         elif rcParams['pdf.use14corefonts']:
648:             filename = findfont(
649:                 fontprop, fontext='afm', directory=self._core14fontdir)
650:             if filename is None:
651:                 filename = findfont(
652:                     "Helvetica", fontext='afm', directory=self._core14fontdir)
653:         else:
654:             filename = findfont(fontprop)
655: 
656:         Fx = self.fontNames.get(filename)
657:         if Fx is None:
658:             Fx = Name('F%d' % self.nextFont)
659:             self.fontNames[filename] = Fx
660:             self.nextFont += 1
661:             matplotlib.verbose.report(
662:                 'Assigning font %s = %r' % (Fx, filename),
663:                 'debug')
664: 
665:         return Fx
666: 
667:     @property
668:     def texFontMap(self):
669:         # lazy-load texFontMap, it takes a while to parse
670:         # and usetex is a relatively rare use case
671:         if self._texFontMap is None:
672:             self._texFontMap = dviread.PsfontsMap(
673:                 dviread.find_tex_file('pdftex.map'))
674: 
675:         return self._texFontMap
676: 
677:     def dviFontName(self, dvifont):
678:         '''
679:         Given a dvi font object, return a name suitable for Op.selectfont.
680:         This registers the font information in self.dviFontInfo if not yet
681:         registered.
682:         '''
683: 
684:         dvi_info = self.dviFontInfo.get(dvifont.texname)
685:         if dvi_info is not None:
686:             return dvi_info.pdfname
687: 
688:         psfont = self.texFontMap[dvifont.texname]
689:         if psfont.filename is None:
690:             raise ValueError(
691:                 ("No usable font file found for {0} (TeX: {1}). "
692:                  "The font may lack a Type-1 version.")
693:                 .format(psfont.psname, dvifont.texname))
694: 
695:         pdfname = Name('F%d' % self.nextFont)
696:         self.nextFont += 1
697:         matplotlib.verbose.report(
698:             'Assigning font {0} = {1} (dvi)'.format(pdfname, dvifont.texname),
699:             'debug')
700:         self.dviFontInfo[dvifont.texname] = Bunch(
701:             dvifont=dvifont,
702:             pdfname=pdfname,
703:             fontfile=psfont.filename,
704:             basefont=psfont.psname,
705:             encodingfile=psfont.encoding,
706:             effects=psfont.effects)
707:         return pdfname
708: 
709:     def writeFonts(self):
710:         fonts = {}
711:         for dviname, info in sorted(self.dviFontInfo.items()):
712:             Fx = info.pdfname
713:             matplotlib.verbose.report('Embedding Type-1 font %s from dvi'
714:                                       % dviname, 'debug')
715:             fonts[Fx] = self._embedTeXFont(info)
716:         for filename in sorted(self.fontNames):
717:             Fx = self.fontNames[filename]
718:             matplotlib.verbose.report('Embedding font %s' % filename, 'debug')
719:             if filename.endswith('.afm'):
720:                 # from pdf.use14corefonts
721:                 matplotlib.verbose.report('Writing AFM font', 'debug')
722:                 fonts[Fx] = self._write_afm_font(filename)
723:             else:
724:                 # a normal TrueType font
725:                 matplotlib.verbose.report('Writing TrueType font', 'debug')
726:                 realpath, stat_key = get_realpath_and_stat(filename)
727:                 chars = self.used_characters.get(stat_key)
728:                 if chars is not None and len(chars[1]):
729:                     fonts[Fx] = self.embedTTF(realpath, chars[1])
730:         self.writeObject(self.fontObject, fonts)
731: 
732:     def _write_afm_font(self, filename):
733:         with open(filename, 'rb') as fh:
734:             font = AFM(fh)
735:         fontname = font.get_fontname()
736:         fontdict = {'Type': Name('Font'),
737:                     'Subtype': Name('Type1'),
738:                     'BaseFont': Name(fontname),
739:                     'Encoding': Name('WinAnsiEncoding')}
740:         fontdictObject = self.reserveObject('font dictionary')
741:         self.writeObject(fontdictObject, fontdict)
742:         return fontdictObject
743: 
744:     def _embedTeXFont(self, fontinfo):
745:         msg = ('Embedding TeX font {0} - fontinfo={1}'
746:                .format(fontinfo.dvifont.texname, fontinfo.__dict__))
747:         matplotlib.verbose.report(msg, 'debug')
748: 
749:         # Widths
750:         widthsObject = self.reserveObject('font widths')
751:         self.writeObject(widthsObject, fontinfo.dvifont.widths)
752: 
753:         # Font dictionary
754:         fontdictObject = self.reserveObject('font dictionary')
755:         fontdict = {
756:             'Type':      Name('Font'),
757:             'Subtype':   Name('Type1'),
758:             'FirstChar': 0,
759:             'LastChar':  len(fontinfo.dvifont.widths) - 1,
760:             'Widths':    widthsObject,
761:             }
762: 
763:         # Encoding (if needed)
764:         if fontinfo.encodingfile is not None:
765:             enc = dviread.Encoding(fontinfo.encodingfile)
766:             differencesArray = [Name(ch) for ch in enc]
767:             differencesArray = [0] + differencesArray
768:             fontdict['Encoding'] = \
769:                 {'Type': Name('Encoding'),
770:                  'Differences': differencesArray}
771: 
772:         # If no file is specified, stop short
773:         if fontinfo.fontfile is None:
774:             msg = ('Because of TeX configuration (pdftex.map, see updmap '
775:                    'option pdftexDownloadBase14) the font {0} is not '
776:                    'embedded. This is deprecated as of PDF 1.5 and it may '
777:                    'cause the consumer application to show something that '
778:                    'was not intended.').format(fontinfo.basefont)
779:             warnings.warn(msg)
780:             fontdict['BaseFont'] = Name(fontinfo.basefont)
781:             self.writeObject(fontdictObject, fontdict)
782:             return fontdictObject
783: 
784:         # We have a font file to embed - read it in and apply any effects
785:         t1font = type1font.Type1Font(fontinfo.fontfile)
786:         if fontinfo.effects:
787:             t1font = t1font.transform(fontinfo.effects)
788:         fontdict['BaseFont'] = Name(t1font.prop['FontName'])
789: 
790:         # Font descriptors may be shared between differently encoded
791:         # Type-1 fonts, so only create a new descriptor if there is no
792:         # existing descriptor for this font.
793:         effects = (fontinfo.effects.get('slant', 0.0),
794:                    fontinfo.effects.get('extend', 1.0))
795:         fontdesc = self.type1Descriptors.get((fontinfo.fontfile, effects))
796:         if fontdesc is None:
797:             fontdesc = self.createType1Descriptor(t1font, fontinfo.fontfile)
798:             self.type1Descriptors[(fontinfo.fontfile, effects)] = fontdesc
799:         fontdict['FontDescriptor'] = fontdesc
800: 
801:         self.writeObject(fontdictObject, fontdict)
802:         return fontdictObject
803: 
804:     def createType1Descriptor(self, t1font, fontfile):
805:         # Create and write the font descriptor and the font file
806:         # of a Type-1 font
807:         fontdescObject = self.reserveObject('font descriptor')
808:         fontfileObject = self.reserveObject('font file')
809: 
810:         italic_angle = t1font.prop['ItalicAngle']
811:         fixed_pitch = t1font.prop['isFixedPitch']
812: 
813:         flags = 0
814:         # fixed width
815:         if fixed_pitch:
816:             flags |= 1 << 0
817:         # TODO: serif
818:         if 0:
819:             flags |= 1 << 1
820:         # TODO: symbolic (most TeX fonts are)
821:         if 1:
822:             flags |= 1 << 2
823:         # non-symbolic
824:         else:
825:             flags |= 1 << 5
826:         # italic
827:         if italic_angle:
828:             flags |= 1 << 6
829:         # TODO: all caps
830:         if 0:
831:             flags |= 1 << 16
832:         # TODO: small caps
833:         if 0:
834:             flags |= 1 << 17
835:         # TODO: force bold
836:         if 0:
837:             flags |= 1 << 18
838: 
839:         ft2font = get_font(fontfile)
840: 
841:         descriptor = {
842:             'Type':        Name('FontDescriptor'),
843:             'FontName':    Name(t1font.prop['FontName']),
844:             'Flags':       flags,
845:             'FontBBox':    ft2font.bbox,
846:             'ItalicAngle': italic_angle,
847:             'Ascent':      ft2font.ascender,
848:             'Descent':     ft2font.descender,
849:             'CapHeight':   1000,  # TODO: find this out
850:             'XHeight':     500,  # TODO: this one too
851:             'FontFile':    fontfileObject,
852:             'FontFamily':  t1font.prop['FamilyName'],
853:             'StemV':       50,  # TODO
854:             # (see also revision 3874; but not all TeX distros have AFM files!)
855:             # 'FontWeight': a number where 400 = Regular, 700 = Bold
856:             }
857: 
858:         self.writeObject(fontdescObject, descriptor)
859: 
860:         self.beginStream(fontfileObject.id, None,
861:                          {'Length1': len(t1font.parts[0]),
862:                           'Length2': len(t1font.parts[1]),
863:                           'Length3': 0})
864:         self.currentstream.write(t1font.parts[0])
865:         self.currentstream.write(t1font.parts[1])
866:         self.endStream()
867: 
868:         return fontdescObject
869: 
870:     def _get_xobject_symbol_name(self, filename, symbol_name):
871:         return "%s-%s" % (
872:             os.path.splitext(os.path.basename(filename))[0],
873:             symbol_name)
874: 
875:     _identityToUnicodeCMap = '''/CIDInit /ProcSet findresource begin
876: 12 dict begin
877: begincmap
878: /CIDSystemInfo
879: << /Registry (Adobe)
880:    /Ordering (UCS)
881:    /Supplement 0
882: >> def
883: /CMapName /Adobe-Identity-UCS def
884: /CMapType 2 def
885: 1 begincodespacerange
886: <0000> <ffff>
887: endcodespacerange
888: %d beginbfrange
889: %s
890: endbfrange
891: endcmap
892: CMapName currentdict /CMap defineresource pop
893: end
894: end'''
895: 
896:     def embedTTF(self, filename, characters):
897:         '''Embed the TTF font from the named file into the document.'''
898: 
899:         font = get_font(filename)
900:         fonttype = rcParams['pdf.fonttype']
901: 
902:         def cvt(length, upe=font.units_per_EM, nearest=True):
903:             "Convert font coordinates to PDF glyph coordinates"
904:             value = length / upe * 1000
905:             if nearest:
906:                 return np.round(value)
907:             # Perhaps best to round away from zero for bounding
908:             # boxes and the like
909:             if value < 0:
910:                 return floor(value)
911:             else:
912:                 return ceil(value)
913: 
914:         def embedTTFType3(font, characters, descriptor):
915:             '''The Type 3-specific part of embedding a Truetype font'''
916:             widthsObject = self.reserveObject('font widths')
917:             fontdescObject = self.reserveObject('font descriptor')
918:             fontdictObject = self.reserveObject('font dictionary')
919:             charprocsObject = self.reserveObject('character procs')
920:             differencesArray = []
921:             firstchar, lastchar = 0, 255
922:             bbox = [cvt(x, nearest=False) for x in font.bbox]
923: 
924:             fontdict = {
925:                 'Type': Name('Font'),
926:                 'BaseFont': ps_name,
927:                 'FirstChar': firstchar,
928:                 'LastChar': lastchar,
929:                 'FontDescriptor': fontdescObject,
930:                 'Subtype': Name('Type3'),
931:                 'Name': descriptor['FontName'],
932:                 'FontBBox': bbox,
933:                 'FontMatrix': [.001, 0, 0, .001, 0, 0],
934:                 'CharProcs': charprocsObject,
935:                 'Encoding': {
936:                     'Type': Name('Encoding'),
937:                     'Differences': differencesArray},
938:                 'Widths': widthsObject
939:                 }
940: 
941:             # Make the "Widths" array
942:             from encodings import cp1252
943:             # The "decoding_map" was changed
944:             # to a "decoding_table" as of Python 2.5.
945:             if hasattr(cp1252, 'decoding_map'):
946:                 def decode_char(charcode):
947:                     return cp1252.decoding_map[charcode] or 0
948:             else:
949:                 def decode_char(charcode):
950:                     return ord(cp1252.decoding_table[charcode])
951: 
952:             def get_char_width(charcode):
953:                 s = decode_char(charcode)
954:                 width = font.load_char(
955:                     s, flags=LOAD_NO_SCALE | LOAD_NO_HINTING).horiAdvance
956:                 return cvt(width)
957: 
958:             widths = [get_char_width(charcode)
959:                       for charcode in range(firstchar, lastchar+1)]
960:             descriptor['MaxWidth'] = max(widths)
961: 
962:             # Make the "Differences" array, sort the ccodes < 255 from
963:             # the multi-byte ccodes, and build the whole set of glyph ids
964:             # that we need from this font.
965:             glyph_ids = []
966:             differences = []
967:             multi_byte_chars = set()
968:             for c in characters:
969:                 ccode = c
970:                 gind = font.get_char_index(ccode)
971:                 glyph_ids.append(gind)
972:                 glyph_name = font.get_glyph_name(gind)
973:                 if ccode <= 255:
974:                     differences.append((ccode, glyph_name))
975:                 else:
976:                     multi_byte_chars.add(glyph_name)
977:             differences.sort()
978: 
979:             last_c = -2
980:             for c, name in differences:
981:                 if c != last_c + 1:
982:                     differencesArray.append(c)
983:                 differencesArray.append(Name(name))
984:                 last_c = c
985: 
986:             # Make the charprocs array (using ttconv to generate the
987:             # actual outlines)
988:             rawcharprocs = ttconv.get_pdf_charprocs(
989:                 filename.encode(sys.getfilesystemencoding()), glyph_ids)
990:             charprocs = {}
991:             for charname in sorted(rawcharprocs):
992:                 stream = rawcharprocs[charname]
993:                 charprocDict = {'Length': len(stream)}
994:                 # The 2-byte characters are used as XObjects, so they
995:                 # need extra info in their dictionary
996:                 if charname in multi_byte_chars:
997:                     charprocDict['Type'] = Name('XObject')
998:                     charprocDict['Subtype'] = Name('Form')
999:                     charprocDict['BBox'] = bbox
1000:                     # Each glyph includes bounding box information,
1001:                     # but xpdf and ghostscript can't handle it in a
1002:                     # Form XObject (they segfault!!!), so we remove it
1003:                     # from the stream here.  It's not needed anyway,
1004:                     # since the Form XObject includes it in its BBox
1005:                     # value.
1006:                     stream = stream[stream.find(b"d1") + 2:]
1007:                 charprocObject = self.reserveObject('charProc')
1008:                 self.beginStream(charprocObject.id, None, charprocDict)
1009:                 self.currentstream.write(stream)
1010:                 self.endStream()
1011: 
1012:                 # Send the glyphs with ccode > 255 to the XObject dictionary,
1013:                 # and the others to the font itself
1014:                 if charname in multi_byte_chars:
1015:                     name = self._get_xobject_symbol_name(filename, charname)
1016:                     self.multi_byte_charprocs[name] = charprocObject
1017:                 else:
1018:                     charprocs[charname] = charprocObject
1019: 
1020:             # Write everything out
1021:             self.writeObject(fontdictObject, fontdict)
1022:             self.writeObject(fontdescObject, descriptor)
1023:             self.writeObject(widthsObject, widths)
1024:             self.writeObject(charprocsObject, charprocs)
1025: 
1026:             return fontdictObject
1027: 
1028:         def embedTTFType42(font, characters, descriptor):
1029:             '''The Type 42-specific part of embedding a Truetype font'''
1030:             fontdescObject = self.reserveObject('font descriptor')
1031:             cidFontDictObject = self.reserveObject('CID font dictionary')
1032:             type0FontDictObject = self.reserveObject('Type 0 font dictionary')
1033:             cidToGidMapObject = self.reserveObject('CIDToGIDMap stream')
1034:             fontfileObject = self.reserveObject('font file stream')
1035:             wObject = self.reserveObject('Type 0 widths')
1036:             toUnicodeMapObject = self.reserveObject('ToUnicode map')
1037: 
1038:             cidFontDict = {
1039:                 'Type': Name('Font'),
1040:                 'Subtype': Name('CIDFontType2'),
1041:                 'BaseFont': ps_name,
1042:                 'CIDSystemInfo': {
1043:                     'Registry': 'Adobe',
1044:                     'Ordering': 'Identity',
1045:                     'Supplement': 0},
1046:                 'FontDescriptor': fontdescObject,
1047:                 'W': wObject,
1048:                 'CIDToGIDMap': cidToGidMapObject
1049:                 }
1050: 
1051:             type0FontDict = {
1052:                 'Type': Name('Font'),
1053:                 'Subtype': Name('Type0'),
1054:                 'BaseFont': ps_name,
1055:                 'Encoding': Name('Identity-H'),
1056:                 'DescendantFonts': [cidFontDictObject],
1057:                 'ToUnicode': toUnicodeMapObject
1058:                 }
1059: 
1060:             # Make fontfile stream
1061:             descriptor['FontFile2'] = fontfileObject
1062:             length1Object = self.reserveObject('decoded length of a font')
1063:             self.beginStream(
1064:                 fontfileObject.id,
1065:                 self.reserveObject('length of font stream'),
1066:                 {'Length1': length1Object})
1067:             with open(filename, 'rb') as fontfile:
1068:                 length1 = 0
1069:                 while True:
1070:                     data = fontfile.read(4096)
1071:                     if not data:
1072:                         break
1073:                     length1 += len(data)
1074:                     self.currentstream.write(data)
1075:             self.endStream()
1076:             self.writeObject(length1Object, length1)
1077: 
1078:             # Make the 'W' (Widths) array, CidToGidMap and ToUnicode CMap
1079:             # at the same time
1080:             cid_to_gid_map = ['\0'] * 65536
1081:             widths = []
1082:             max_ccode = 0
1083:             for c in characters:
1084:                 ccode = c
1085:                 gind = font.get_char_index(ccode)
1086:                 glyph = font.load_char(ccode,
1087:                                        flags=LOAD_NO_SCALE | LOAD_NO_HINTING)
1088:                 widths.append((ccode, cvt(glyph.horiAdvance)))
1089:                 if ccode < 65536:
1090:                     cid_to_gid_map[ccode] = unichr(gind)
1091:                 max_ccode = max(ccode, max_ccode)
1092:             widths.sort()
1093:             cid_to_gid_map = cid_to_gid_map[:max_ccode + 1]
1094: 
1095:             last_ccode = -2
1096:             w = []
1097:             max_width = 0
1098:             unicode_groups = []
1099:             for ccode, width in widths:
1100:                 if ccode != last_ccode + 1:
1101:                     w.append(ccode)
1102:                     w.append([width])
1103:                     unicode_groups.append([ccode, ccode])
1104:                 else:
1105:                     w[-1].append(width)
1106:                     unicode_groups[-1][1] = ccode
1107:                 max_width = max(max_width, width)
1108:                 last_ccode = ccode
1109: 
1110:             unicode_bfrange = []
1111:             for start, end in unicode_groups:
1112:                 unicode_bfrange.append(
1113:                     "<%04x> <%04x> [%s]" %
1114:                     (start, end,
1115:                      " ".join(["<%04x>" % x for x in range(start, end+1)])))
1116:             unicode_cmap = (self._identityToUnicodeCMap %
1117:                             (len(unicode_groups),
1118:                              "\n".join(unicode_bfrange))).encode('ascii')
1119: 
1120:             # CIDToGIDMap stream
1121:             cid_to_gid_map = "".join(cid_to_gid_map).encode("utf-16be")
1122:             self.beginStream(cidToGidMapObject.id,
1123:                              None,
1124:                              {'Length':  len(cid_to_gid_map)})
1125:             self.currentstream.write(cid_to_gid_map)
1126:             self.endStream()
1127: 
1128:             # ToUnicode CMap
1129:             self.beginStream(toUnicodeMapObject.id,
1130:                              None,
1131:                              {'Length': unicode_cmap})
1132:             self.currentstream.write(unicode_cmap)
1133:             self.endStream()
1134: 
1135:             descriptor['MaxWidth'] = max_width
1136: 
1137:             # Write everything out
1138:             self.writeObject(cidFontDictObject, cidFontDict)
1139:             self.writeObject(type0FontDictObject, type0FontDict)
1140:             self.writeObject(fontdescObject, descriptor)
1141:             self.writeObject(wObject, w)
1142: 
1143:             return type0FontDictObject
1144: 
1145:         # Beginning of main embedTTF function...
1146: 
1147:         # You are lost in a maze of TrueType tables, all different...
1148:         sfnt = font.get_sfnt()
1149:         try:
1150:             ps_name = sfnt[(1, 0, 0, 6)].decode('macroman')  # Macintosh scheme
1151:         except KeyError:
1152:             # Microsoft scheme:
1153:             ps_name = sfnt[(3, 1, 0x0409, 6)].decode('utf-16be')
1154:             # (see freetype/ttnameid.h)
1155:         ps_name = ps_name.encode('ascii', 'replace')
1156:         ps_name = Name(ps_name)
1157:         pclt = font.get_sfnt_table('pclt') or {'capHeight': 0, 'xHeight': 0}
1158:         post = font.get_sfnt_table('post') or {'italicAngle': (0, 0)}
1159:         ff = font.face_flags
1160:         sf = font.style_flags
1161: 
1162:         flags = 0
1163:         symbolic = False  # ps_name.name in ('Cmsy10', 'Cmmi10', 'Cmex10')
1164:         if ff & FIXED_WIDTH:
1165:             flags |= 1 << 0
1166:         if 0:  # TODO: serif
1167:             flags |= 1 << 1
1168:         if symbolic:
1169:             flags |= 1 << 2
1170:         else:
1171:             flags |= 1 << 5
1172:         if sf & ITALIC:
1173:             flags |= 1 << 6
1174:         if 0:  # TODO: all caps
1175:             flags |= 1 << 16
1176:         if 0:  # TODO: small caps
1177:             flags |= 1 << 17
1178:         if 0:  # TODO: force bold
1179:             flags |= 1 << 18
1180: 
1181:         descriptor = {
1182:             'Type': Name('FontDescriptor'),
1183:             'FontName': ps_name,
1184:             'Flags': flags,
1185:             'FontBBox': [cvt(x, nearest=False) for x in font.bbox],
1186:             'Ascent': cvt(font.ascender, nearest=False),
1187:             'Descent': cvt(font.descender, nearest=False),
1188:             'CapHeight': cvt(pclt['capHeight'], nearest=False),
1189:             'XHeight': cvt(pclt['xHeight']),
1190:             'ItalicAngle': post['italicAngle'][1],  # ???
1191:             'StemV': 0  # ???
1192:             }
1193: 
1194:         # The font subsetting to a Type 3 font does not work for
1195:         # OpenType (.otf) that embed a Postscript CFF font, so avoid that --
1196:         # save as a (non-subsetted) Type 42 font instead.
1197:         if is_opentype_cff_font(filename):
1198:             fonttype = 42
1199:             msg = ("'%s' can not be subsetted into a Type 3 font. "
1200:                    "The entire font will be embedded in the output.")
1201:             warnings.warn(msg % os.path.basename(filename))
1202: 
1203:         if fonttype == 3:
1204:             return embedTTFType3(font, characters, descriptor)
1205:         elif fonttype == 42:
1206:             return embedTTFType42(font, characters, descriptor)
1207: 
1208:     def alphaState(self, alpha):
1209:         '''Return name of an ExtGState that sets alpha to the given value'''
1210: 
1211:         state = self.alphaStates.get(alpha, None)
1212:         if state is not None:
1213:             return state[0]
1214: 
1215:         name = Name('A%d' % self.nextAlphaState)
1216:         self.nextAlphaState += 1
1217:         self.alphaStates[alpha] = \
1218:             (name, {'Type': Name('ExtGState'),
1219:                     'CA': alpha[0], 'ca': alpha[1]})
1220:         return name
1221: 
1222:     def hatchPattern(self, hatch_style):
1223:         # The colors may come in as numpy arrays, which aren't hashable
1224:         if hatch_style is not None:
1225:             edge, face, hatch = hatch_style
1226:             if edge is not None:
1227:                 edge = tuple(edge)
1228:             if face is not None:
1229:                 face = tuple(face)
1230:             hatch_style = (edge, face, hatch)
1231: 
1232:         pattern = self.hatchPatterns.get(hatch_style, None)
1233:         if pattern is not None:
1234:             return pattern
1235: 
1236:         name = Name('H%d' % self.nextHatch)
1237:         self.nextHatch += 1
1238:         self.hatchPatterns[hatch_style] = name
1239:         return name
1240: 
1241:     def writeHatches(self):
1242:         hatchDict = dict()
1243:         sidelen = 72.0
1244:         for hatch_style, name in six.iteritems(self.hatchPatterns):
1245:             ob = self.reserveObject('hatch pattern')
1246:             hatchDict[name] = ob
1247:             res = {'Procsets':
1248:                    [Name(x) for x in "PDF Text ImageB ImageC ImageI".split()]}
1249:             self.beginStream(
1250:                 ob.id, None,
1251:                 {'Type': Name('Pattern'),
1252:                  'PatternType': 1, 'PaintType': 1, 'TilingType': 1,
1253:                  'BBox': [0, 0, sidelen, sidelen],
1254:                  'XStep': sidelen, 'YStep': sidelen,
1255:                  'Resources': res,
1256:                  # Change origin to match Agg at top-left.
1257:                  'Matrix': [1, 0, 0, 1, 0, self.height * 72]})
1258: 
1259:             stroke_rgb, fill_rgb, path = hatch_style
1260:             self.output(stroke_rgb[0], stroke_rgb[1], stroke_rgb[2],
1261:                         Op.setrgb_stroke)
1262:             if fill_rgb is not None:
1263:                 self.output(fill_rgb[0], fill_rgb[1], fill_rgb[2],
1264:                             Op.setrgb_nonstroke,
1265:                             0, 0, sidelen, sidelen, Op.rectangle,
1266:                             Op.fill)
1267: 
1268:             self.output(rcParams['hatch.linewidth'], Op.setlinewidth)
1269: 
1270:             self.output(*self.pathOperations(
1271:                 Path.hatch(path),
1272:                 Affine2D().scale(sidelen),
1273:                 simplify=False))
1274:             self.output(Op.fill_stroke)
1275: 
1276:             self.endStream()
1277:         self.writeObject(self.hatchObject, hatchDict)
1278: 
1279:     def addGouraudTriangles(self, points, colors):
1280:         name = Name('GT%d' % len(self.gouraudTriangles))
1281:         self.gouraudTriangles.append((name, points, colors))
1282:         return name
1283: 
1284:     def writeGouraudTriangles(self):
1285:         gouraudDict = dict()
1286:         for name, points, colors in self.gouraudTriangles:
1287:             ob = self.reserveObject('Gouraud triangle')
1288:             gouraudDict[name] = ob
1289:             shape = points.shape
1290:             flat_points = points.reshape((shape[0] * shape[1], 2))
1291:             flat_colors = colors.reshape((shape[0] * shape[1], 4))
1292:             points_min = np.min(flat_points, axis=0) - (1 << 8)
1293:             points_max = np.max(flat_points, axis=0) + (1 << 8)
1294:             factor = float(0xffffffff) / (points_max - points_min)
1295: 
1296:             self.beginStream(
1297:                 ob.id, None,
1298:                 {'ShadingType': 4,
1299:                  'BitsPerCoordinate': 32,
1300:                  'BitsPerComponent': 8,
1301:                  'BitsPerFlag': 8,
1302:                  'ColorSpace': Name('DeviceRGB'),
1303:                  'AntiAlias': True,
1304:                  'Decode': [points_min[0], points_max[0],
1305:                             points_min[1], points_max[1],
1306:                             0, 1, 0, 1, 0, 1]
1307:                  })
1308: 
1309:             streamarr = np.empty(
1310:                 (shape[0] * shape[1],),
1311:                 dtype=[(str('flags'), str('u1')),
1312:                        (str('points'), str('>u4'), (2,)),
1313:                        (str('colors'), str('u1'), (3,))])
1314:             streamarr['flags'] = 0
1315:             streamarr['points'] = (flat_points - points_min) * factor
1316:             streamarr['colors'] = flat_colors[:, :3] * 255.0
1317: 
1318:             self.write(streamarr.tostring())
1319:             self.endStream()
1320:         self.writeObject(self.gouraudObject, gouraudDict)
1321: 
1322:     def imageObject(self, image):
1323:         '''Return name of an image XObject representing the given image.'''
1324: 
1325:         entry = self._images.get(id(image), None)
1326:         if entry is not None:
1327:             return entry[1]
1328: 
1329:         name = Name('I%d' % self.nextImage)
1330:         ob = self.reserveObject('image %d' % self.nextImage)
1331:         self.nextImage += 1
1332:         self._images[id(image)] = (image, name, ob)
1333:         return name
1334: 
1335:     def _unpack(self, im):
1336:         '''
1337:         Unpack the image object im into height, width, data, alpha,
1338:         where data and alpha are HxWx3 (RGB) or HxWx1 (grayscale or alpha)
1339:         arrays, except alpha is None if the image is fully opaque.
1340:         '''
1341:         h, w = im.shape[:2]
1342:         im = im[::-1]
1343:         if im.ndim == 2:
1344:             return h, w, im, None
1345:         else:
1346:             rgb = im[:, :, :3]
1347:             rgb = np.array(rgb, order='C')
1348:             # PDF needs a separate alpha image
1349:             if im.shape[2] == 4:
1350:                 alpha = im[:, :, 3][..., None]
1351:                 if np.all(alpha == 255):
1352:                     alpha = None
1353:                 else:
1354:                     alpha = np.array(alpha, order='C')
1355:             else:
1356:                 alpha = None
1357:             return h, w, rgb, alpha
1358: 
1359:     def _writePng(self, data):
1360:         '''
1361:         Write the image *data* into the pdf file using png
1362:         predictors with Flate compression.
1363:         '''
1364: 
1365:         buffer = BytesIO()
1366:         _png.write_png(data, buffer)
1367:         buffer.seek(8)
1368:         written = 0
1369:         header = bytearray(8)
1370:         while True:
1371:             n = buffer.readinto(header)
1372:             assert n == 8
1373:             length, type = struct.unpack(b'!L4s', bytes(header))
1374:             if type == b'IDAT':
1375:                 data = bytearray(length)
1376:                 n = buffer.readinto(data)
1377:                 assert n == length
1378:                 self.currentstream.write(bytes(data))
1379:                 written += n
1380:             elif type == b'IEND':
1381:                 break
1382:             else:
1383:                 buffer.seek(length, 1)
1384:             buffer.seek(4, 1)   # skip CRC
1385: 
1386:     def _writeImg(self, data, height, width, grayscale, id, smask=None):
1387:         '''
1388:         Write the image *data* of size *height* x *width*, as grayscale
1389:         if *grayscale* is true and RGB otherwise, as pdf object *id*
1390:         and with the soft mask (alpha channel) *smask*, which should be
1391:         either None or a *height* x *width* x 1 array.
1392:         '''
1393: 
1394:         obj = {'Type':             Name('XObject'),
1395:                'Subtype':          Name('Image'),
1396:                'Width':            width,
1397:                'Height':           height,
1398:                'ColorSpace':       Name('DeviceGray' if grayscale
1399:                                         else 'DeviceRGB'),
1400:                'BitsPerComponent': 8}
1401:         if smask:
1402:             obj['SMask'] = smask
1403:         if rcParams['pdf.compression']:
1404:             png = {'Predictor': 10,
1405:                    'Colors':    1 if grayscale else 3,
1406:                    'Columns':   width}
1407:         else:
1408:             png = None
1409:         self.beginStream(
1410:             id,
1411:             self.reserveObject('length of image stream'),
1412:             obj,
1413:             png=png
1414:             )
1415:         if png:
1416:             self._writePng(data)
1417:         else:
1418:             self.currentstream.write(data.tostring())
1419:         self.endStream()
1420: 
1421:     def writeImages(self):
1422:         for img, name, ob in six.itervalues(self._images):
1423:             height, width, data, adata = self._unpack(img)
1424:             if adata is not None:
1425:                 smaskObject = self.reserveObject("smask")
1426:                 self._writeImg(adata, height, width, True, smaskObject.id)
1427:             else:
1428:                 smaskObject = None
1429:             self._writeImg(data, height, width, False,
1430:                            ob.id, smaskObject)
1431: 
1432:     def markerObject(self, path, trans, fill, stroke, lw, joinstyle,
1433:                      capstyle):
1434:         '''Return name of a marker XObject representing the given path.'''
1435:         # self.markers used by markerObject, writeMarkers, close:
1436:         # mapping from (path operations, fill?, stroke?) to
1437:         #   [name, object reference, bounding box, linewidth]
1438:         # This enables different draw_markers calls to share the XObject
1439:         # if the gc is sufficiently similar: colors etc can vary, but
1440:         # the choices of whether to fill and whether to stroke cannot.
1441:         # We need a bounding box enclosing all of the XObject path,
1442:         # but since line width may vary, we store the maximum of all
1443:         # occurring line widths in self.markers.
1444:         # close() is somewhat tightly coupled in that it expects the
1445:         # first two components of each value in self.markers to be the
1446:         # name and object reference.
1447:         pathops = self.pathOperations(path, trans, simplify=False)
1448:         key = (tuple(pathops), bool(fill), bool(stroke), joinstyle, capstyle)
1449:         result = self.markers.get(key)
1450:         if result is None:
1451:             name = Name('M%d' % len(self.markers))
1452:             ob = self.reserveObject('marker %d' % len(self.markers))
1453:             bbox = path.get_extents(trans)
1454:             self.markers[key] = [name, ob, bbox, lw]
1455:         else:
1456:             if result[-1] < lw:
1457:                 result[-1] = lw
1458:             name = result[0]
1459:         return name
1460: 
1461:     def writeMarkers(self):
1462:         for ((pathops, fill, stroke, joinstyle, capstyle),
1463:              (name, ob, bbox, lw)) in six.iteritems(self.markers):
1464:             bbox = bbox.padded(lw * 0.5)
1465:             self.beginStream(
1466:                 ob.id, None,
1467:                 {'Type': Name('XObject'), 'Subtype': Name('Form'),
1468:                  'BBox': list(bbox.extents)})
1469:             self.output(GraphicsContextPdf.joinstyles[joinstyle],
1470:                         Op.setlinejoin)
1471:             self.output(GraphicsContextPdf.capstyles[capstyle], Op.setlinecap)
1472:             self.output(*pathops)
1473:             self.output(Op.paint_path(fill, stroke))
1474:             self.endStream()
1475: 
1476:     def pathCollectionObject(self, gc, path, trans, padding, filled, stroked):
1477:         name = Name('P%d' % len(self.paths))
1478:         ob = self.reserveObject('path %d' % len(self.paths))
1479:         self.paths.append(
1480:             (name, path, trans, ob, gc.get_joinstyle(), gc.get_capstyle(),
1481:              padding, filled, stroked))
1482:         return name
1483: 
1484:     def writePathCollectionTemplates(self):
1485:         for (name, path, trans, ob, joinstyle, capstyle, padding, filled,
1486:              stroked) in self.paths:
1487:             pathops = self.pathOperations(path, trans, simplify=False)
1488:             bbox = path.get_extents(trans)
1489:             if not np.all(np.isfinite(bbox.extents)):
1490:                 extents = [0, 0, 0, 0]
1491:             else:
1492:                 bbox = bbox.padded(padding)
1493:                 extents = list(bbox.extents)
1494:             self.beginStream(
1495:                 ob.id, None,
1496:                 {'Type': Name('XObject'), 'Subtype': Name('Form'),
1497:                  'BBox': extents})
1498:             self.output(GraphicsContextPdf.joinstyles[joinstyle],
1499:                         Op.setlinejoin)
1500:             self.output(GraphicsContextPdf.capstyles[capstyle], Op.setlinecap)
1501:             self.output(*pathops)
1502:             self.output(Op.paint_path(filled, stroked))
1503:             self.endStream()
1504: 
1505:     @staticmethod
1506:     def pathOperations(path, transform, clip=None, simplify=None, sketch=None):
1507:         return [Verbatim(_path.convert_to_string(
1508:             path, transform, clip, simplify, sketch,
1509:             6,
1510:             [Op.moveto.op, Op.lineto.op, b'', Op.curveto.op, Op.closepath.op],
1511:             True))]
1512: 
1513:     def writePath(self, path, transform, clip=False, sketch=None):
1514:         if clip:
1515:             clip = (0.0, 0.0, self.width * 72, self.height * 72)
1516:             simplify = path.should_simplify
1517:         else:
1518:             clip = None
1519:             simplify = False
1520:         cmds = self.pathOperations(path, transform, clip, simplify=simplify,
1521:                                    sketch=sketch)
1522:         self.output(*cmds)
1523: 
1524:     def reserveObject(self, name=''):
1525:         '''Reserve an ID for an indirect object.
1526:         The name is used for debugging in case we forget to print out
1527:         the object with writeObject.
1528:         '''
1529: 
1530:         id = self.nextObject
1531:         self.nextObject += 1
1532:         self.xrefTable.append([None, 0, name])
1533:         return Reference(id)
1534: 
1535:     def recordXref(self, id):
1536:         self.xrefTable[id][0] = self.fh.tell() - self.tell_base
1537: 
1538:     def writeObject(self, object, contents):
1539:         self.recordXref(object.id)
1540:         object.write(contents, self)
1541: 
1542:     def writeXref(self):
1543:         '''Write out the xref table.'''
1544: 
1545:         self.startxref = self.fh.tell() - self.tell_base
1546:         self.write(("xref\n0 %d\n" % self.nextObject).encode('ascii'))
1547:         i = 0
1548:         borken = False
1549:         for offset, generation, name in self.xrefTable:
1550:             if offset is None:
1551:                 print('No offset for object %d (%s)' % (i, name),
1552:                       file=sys.stderr)
1553:                 borken = True
1554:             else:
1555:                 if name == 'the zero object':
1556:                     key = "f"
1557:                 else:
1558:                     key = "n"
1559:                 text = "%010d %05d %s \n" % (offset, generation, key)
1560:                 self.write(text.encode('ascii'))
1561:             i += 1
1562:         if borken:
1563:             raise AssertionError('Indirect object does not exist')
1564: 
1565:     def writeInfoDict(self):
1566:         '''Write out the info dictionary, checking it for good form'''
1567: 
1568:         def is_string_like(x):
1569:             return isinstance(x, six.string_types)
1570: 
1571:         def is_date(x):
1572:             return isinstance(x, datetime)
1573: 
1574:         check_trapped = (lambda x: isinstance(x, Name) and
1575:                          x.name in ('True', 'False', 'Unknown'))
1576: 
1577:         keywords = {'Title': is_string_like,
1578:                     'Author': is_string_like,
1579:                     'Subject': is_string_like,
1580:                     'Keywords': is_string_like,
1581:                     'Creator': is_string_like,
1582:                     'Producer': is_string_like,
1583:                     'CreationDate': is_date,
1584:                     'ModDate': is_date,
1585:                     'Trapped': check_trapped}
1586:         for k in self.infoDict:
1587:             if k not in keywords:
1588:                 warnings.warn('Unknown infodict keyword: %s' % k)
1589:             else:
1590:                 if not keywords[k](self.infoDict[k]):
1591:                     warnings.warn('Bad value for infodict keyword %s' % k)
1592: 
1593:         self.infoObject = self.reserveObject('info')
1594:         self.writeObject(self.infoObject, self.infoDict)
1595: 
1596:     def writeTrailer(self):
1597:         '''Write out the PDF trailer.'''
1598: 
1599:         self.write(b"trailer\n")
1600:         self.write(pdfRepr(
1601:             {'Size': self.nextObject,
1602:              'Root': self.rootObject,
1603:              'Info': self.infoObject}))
1604:         # Could add 'ID'
1605:         self.write(("\nstartxref\n%d\n%%%%EOF\n" %
1606:                     self.startxref).encode('ascii'))
1607: 
1608: 
1609: class RendererPdf(RendererBase):
1610:     afm_font_cache = maxdict(50)
1611: 
1612:     def __init__(self, file, image_dpi, height, width):
1613:         RendererBase.__init__(self)
1614:         self.height = height
1615:         self.width = width
1616:         self.file = file
1617:         self.gc = self.new_gc()
1618:         self.mathtext_parser = MathTextParser("Pdf")
1619:         self.image_dpi = image_dpi
1620: 
1621:     def finalize(self):
1622:         self.file.output(*self.gc.finalize())
1623: 
1624:     def check_gc(self, gc, fillcolor=None):
1625:         orig_fill = getattr(gc, '_fillcolor', (0., 0., 0.))
1626:         gc._fillcolor = fillcolor
1627: 
1628:         orig_alphas = getattr(gc, '_effective_alphas', (1.0, 1.0))
1629: 
1630:         if gc.get_rgb() is None:
1631:             # it should not matter what color here
1632:             # since linewidth should be 0
1633:             # unless affected by global settings in rcParams
1634:             # hence setting zero alpha just incase
1635:             gc.set_foreground((0, 0, 0, 0), isRGBA=True)
1636: 
1637:         if gc._forced_alpha:
1638:             gc._effective_alphas = (gc._alpha, gc._alpha)
1639:         elif fillcolor is None or len(fillcolor) < 4:
1640:             gc._effective_alphas = (gc._rgb[3], 1.0)
1641:         else:
1642:             gc._effective_alphas = (gc._rgb[3], fillcolor[3])
1643: 
1644:         delta = self.gc.delta(gc)
1645:         if delta:
1646:             self.file.output(*delta)
1647: 
1648:         # Restore gc to avoid unwanted side effects
1649:         gc._fillcolor = orig_fill
1650:         gc._effective_alphas = orig_alphas
1651: 
1652:     def track_characters(self, font, s):
1653:         '''Keeps track of which characters are required from
1654:         each font.'''
1655:         if isinstance(font, six.string_types):
1656:             fname = font
1657:         else:
1658:             fname = font.fname
1659:         realpath, stat_key = get_realpath_and_stat(fname)
1660:         used_characters = self.file.used_characters.setdefault(
1661:             stat_key, (realpath, set()))
1662:         used_characters[1].update([ord(x) for x in s])
1663: 
1664:     def merge_used_characters(self, other):
1665:         for stat_key, (realpath, charset) in six.iteritems(other):
1666:             used_characters = self.file.used_characters.setdefault(
1667:                 stat_key, (realpath, set()))
1668:             used_characters[1].update(charset)
1669: 
1670:     def get_image_magnification(self):
1671:         return self.image_dpi/72.0
1672: 
1673:     def option_scale_image(self):
1674:         '''
1675:         pdf backend support arbitrary scaling of image.
1676:         '''
1677:         return True
1678: 
1679:     def option_image_nocomposite(self):
1680:         '''
1681:         return whether to generate a composite image from multiple images on
1682:         a set of axes
1683:         '''
1684:         return not rcParams['image.composite_image']
1685: 
1686:     def draw_image(self, gc, x, y, im, transform=None):
1687:         h, w = im.shape[:2]
1688:         if w == 0 or h == 0:
1689:             return
1690: 
1691:         if transform is None:
1692:             # If there's no transform, alpha has already been applied
1693:             gc.set_alpha(1.0)
1694: 
1695:         self.check_gc(gc)
1696: 
1697:         w = 72.0 * w / self.image_dpi
1698:         h = 72.0 * h / self.image_dpi
1699: 
1700:         imob = self.file.imageObject(im)
1701: 
1702:         if transform is None:
1703:             self.file.output(Op.gsave,
1704:                              w, 0, 0, h, x, y, Op.concat_matrix,
1705:                              imob, Op.use_xobject, Op.grestore)
1706:         else:
1707:             tr1, tr2, tr3, tr4, tr5, tr6 = transform.frozen().to_values()
1708: 
1709:             self.file.output(Op.gsave,
1710:                              1, 0, 0, 1, x, y, Op.concat_matrix,
1711:                              tr1, tr2, tr3, tr4, tr5, tr6, Op.concat_matrix,
1712:                              imob, Op.use_xobject, Op.grestore)
1713: 
1714:     def draw_path(self, gc, path, transform, rgbFace=None):
1715:         self.check_gc(gc, rgbFace)
1716:         self.file.writePath(
1717:             path, transform,
1718:             rgbFace is None and gc.get_hatch_path() is None,
1719:             gc.get_sketch_params())
1720:         self.file.output(self.gc.paint())
1721: 
1722:     def draw_path_collection(self, gc, master_transform, paths, all_transforms,
1723:                              offsets, offsetTrans, facecolors, edgecolors,
1724:                              linewidths, linestyles, antialiaseds, urls,
1725:                              offset_position):
1726:         # We can only reuse the objects if the presence of fill and
1727:         # stroke (and the amount of alpha for each) is the same for
1728:         # all of them
1729:         can_do_optimization = True
1730:         facecolors = np.asarray(facecolors)
1731:         edgecolors = np.asarray(edgecolors)
1732: 
1733:         if not len(facecolors):
1734:             filled = False
1735:             can_do_optimization = not gc.get_hatch()
1736:         else:
1737:             if np.all(facecolors[:, 3] == facecolors[0, 3]):
1738:                 filled = facecolors[0, 3] != 0.0
1739:             else:
1740:                 can_do_optimization = False
1741: 
1742:         if not len(edgecolors):
1743:             stroked = False
1744:         else:
1745:             if np.all(np.asarray(linewidths) == 0.0):
1746:                 stroked = False
1747:             elif np.all(edgecolors[:, 3] == edgecolors[0, 3]):
1748:                 stroked = edgecolors[0, 3] != 0.0
1749:             else:
1750:                 can_do_optimization = False
1751: 
1752:         # Is the optimization worth it? Rough calculation:
1753:         # cost of emitting a path in-line is len_path * uses_per_path
1754:         # cost of XObject is len_path + 5 for the definition,
1755:         #    uses_per_path for the uses
1756:         len_path = len(paths[0].vertices) if len(paths) > 0 else 0
1757:         uses_per_path = self._iter_collection_uses_per_path(
1758:             paths, all_transforms, offsets, facecolors, edgecolors)
1759:         should_do_optimization = \
1760:             len_path + uses_per_path + 5 < len_path * uses_per_path
1761: 
1762:         if (not can_do_optimization) or (not should_do_optimization):
1763:             return RendererBase.draw_path_collection(
1764:                 self, gc, master_transform, paths, all_transforms,
1765:                 offsets, offsetTrans, facecolors, edgecolors,
1766:                 linewidths, linestyles, antialiaseds, urls,
1767:                 offset_position)
1768: 
1769:         padding = np.max(linewidths)
1770:         path_codes = []
1771:         for i, (path, transform) in enumerate(self._iter_collection_raw_paths(
1772:                 master_transform, paths, all_transforms)):
1773:             name = self.file.pathCollectionObject(
1774:                 gc, path, transform, padding, filled, stroked)
1775:             path_codes.append(name)
1776: 
1777:         output = self.file.output
1778:         output(*self.gc.push())
1779:         lastx, lasty = 0, 0
1780:         for xo, yo, path_id, gc0, rgbFace in self._iter_collection(
1781:                 gc, master_transform, all_transforms, path_codes, offsets,
1782:                 offsetTrans, facecolors, edgecolors, linewidths, linestyles,
1783:                 antialiaseds, urls, offset_position):
1784: 
1785:             self.check_gc(gc0, rgbFace)
1786:             dx, dy = xo - lastx, yo - lasty
1787:             output(1, 0, 0, 1, dx, dy, Op.concat_matrix, path_id,
1788:                    Op.use_xobject)
1789:             lastx, lasty = xo, yo
1790:         output(*self.gc.pop())
1791: 
1792:     def draw_markers(self, gc, marker_path, marker_trans, path, trans,
1793:                      rgbFace=None):
1794:         # Same logic as in draw_path_collection
1795:         len_marker_path = len(marker_path)
1796:         uses = len(path)
1797:         if len_marker_path * uses < len_marker_path + uses + 5:
1798:             RendererBase.draw_markers(self, gc, marker_path, marker_trans,
1799:                                       path, trans, rgbFace)
1800:             return
1801: 
1802:         self.check_gc(gc, rgbFace)
1803:         fill = gc.fill(rgbFace)
1804:         stroke = gc.stroke()
1805: 
1806:         output = self.file.output
1807:         marker = self.file.markerObject(
1808:             marker_path, marker_trans, fill, stroke, self.gc._linewidth,
1809:             gc.get_joinstyle(), gc.get_capstyle())
1810: 
1811:         output(Op.gsave)
1812:         lastx, lasty = 0, 0
1813:         for vertices, code in path.iter_segments(
1814:                 trans,
1815:                 clip=(0, 0, self.file.width*72, self.file.height*72),
1816:                 simplify=False):
1817:             if len(vertices):
1818:                 x, y = vertices[-2:]
1819:                 if (x < 0 or y < 0 or
1820:                         x > self.file.width * 72 or y > self.file.height * 72):
1821:                     continue
1822:                 dx, dy = x - lastx, y - lasty
1823:                 output(1, 0, 0, 1, dx, dy, Op.concat_matrix,
1824:                        marker, Op.use_xobject)
1825:                 lastx, lasty = x, y
1826:         output(Op.grestore)
1827: 
1828:     def draw_gouraud_triangle(self, gc, points, colors, trans):
1829:         self.draw_gouraud_triangles(gc, points.reshape((1, 3, 2)),
1830:                                     colors.reshape((1, 3, 4)), trans)
1831: 
1832:     def draw_gouraud_triangles(self, gc, points, colors, trans):
1833:         assert len(points) == len(colors)
1834:         assert points.ndim == 3
1835:         assert points.shape[1] == 3
1836:         assert points.shape[2] == 2
1837:         assert colors.ndim == 3
1838:         assert colors.shape[1] == 3
1839:         assert colors.shape[2] == 4
1840: 
1841:         shape = points.shape
1842:         points = points.reshape((shape[0] * shape[1], 2))
1843:         tpoints = trans.transform(points)
1844:         tpoints = tpoints.reshape(shape)
1845:         name = self.file.addGouraudTriangles(tpoints, colors)
1846:         self.check_gc(gc)
1847:         self.file.output(name, Op.shading)
1848: 
1849:     def _setup_textpos(self, x, y, angle, oldx=0, oldy=0, oldangle=0):
1850:         if angle == oldangle == 0:
1851:             self.file.output(x - oldx, y - oldy, Op.textpos)
1852:         else:
1853:             angle = angle / 180.0 * pi
1854:             self.file.output(cos(angle), sin(angle),
1855:                              -sin(angle), cos(angle),
1856:                              x, y, Op.textmatrix)
1857:             self.file.output(0, 0, Op.textpos)
1858: 
1859:     def draw_mathtext(self, gc, x, y, s, prop, angle):
1860:         # TODO: fix positioning and encoding
1861:         width, height, descent, glyphs, rects, used_characters = \
1862:             self.mathtext_parser.parse(s, 72, prop)
1863:         self.merge_used_characters(used_characters)
1864: 
1865:         # When using Type 3 fonts, we can't use character codes higher
1866:         # than 255, so we use the "Do" command to render those
1867:         # instead.
1868:         global_fonttype = rcParams['pdf.fonttype']
1869: 
1870:         # Set up a global transformation matrix for the whole math expression
1871:         a = angle / 180.0 * pi
1872:         self.file.output(Op.gsave)
1873:         self.file.output(cos(a), sin(a), -sin(a), cos(a), x, y,
1874:                          Op.concat_matrix)
1875: 
1876:         self.check_gc(gc, gc._rgb)
1877:         self.file.output(Op.begin_text)
1878:         prev_font = None, None
1879:         oldx, oldy = 0, 0
1880:         for ox, oy, fontname, fontsize, num, symbol_name in glyphs:
1881:             if is_opentype_cff_font(fontname):
1882:                 fonttype = 42
1883:             else:
1884:                 fonttype = global_fonttype
1885: 
1886:             if fonttype == 42 or num <= 255:
1887:                 self._setup_textpos(ox, oy, 0, oldx, oldy)
1888:                 oldx, oldy = ox, oy
1889:                 if (fontname, fontsize) != prev_font:
1890:                     self.file.output(self.file.fontName(fontname), fontsize,
1891:                                      Op.selectfont)
1892:                     prev_font = fontname, fontsize
1893:                 self.file.output(self.encode_string(unichr(num), fonttype),
1894:                                  Op.show)
1895:         self.file.output(Op.end_text)
1896: 
1897:         # If using Type 3 fonts, render all of the multi-byte characters
1898:         # as XObjects using the 'Do' command.
1899:         if global_fonttype == 3:
1900:             for ox, oy, fontname, fontsize, num, symbol_name in glyphs:
1901:                 if is_opentype_cff_font(fontname):
1902:                     fonttype = 42
1903:                 else:
1904:                     fonttype = global_fonttype
1905: 
1906:                 if fonttype == 3 and num > 255:
1907:                     self.file.fontName(fontname)
1908:                     self.file.output(Op.gsave,
1909:                                      0.001 * fontsize, 0,
1910:                                      0, 0.001 * fontsize,
1911:                                      ox, oy, Op.concat_matrix)
1912:                     name = self.file._get_xobject_symbol_name(
1913:                         fontname, symbol_name)
1914:                     self.file.output(Name(name), Op.use_xobject)
1915:                     self.file.output(Op.grestore)
1916: 
1917:         # Draw any horizontal lines in the math layout
1918:         for ox, oy, width, height in rects:
1919:             self.file.output(Op.gsave, ox, oy, width, height,
1920:                              Op.rectangle, Op.fill, Op.grestore)
1921: 
1922:         # Pop off the global transformation
1923:         self.file.output(Op.grestore)
1924: 
1925:     def draw_tex(self, gc, x, y, s, prop, angle, ismath='TeX!', mtext=None):
1926:         texmanager = self.get_texmanager()
1927:         fontsize = prop.get_size_in_points()
1928:         dvifile = texmanager.make_dvi(s, fontsize)
1929:         with dviread.Dvi(dvifile, 72) as dvi:
1930:             page = next(iter(dvi))
1931: 
1932:         # Gather font information and do some setup for combining
1933:         # characters into strings. The variable seq will contain a
1934:         # sequence of font and text entries. A font entry is a list
1935:         # ['font', name, size] where name is a Name object for the
1936:         # font. A text entry is ['text', x, y, glyphs, x+w] where x
1937:         # and y are the starting coordinates, w is the width, and
1938:         # glyphs is a list; in this phase it will always contain just
1939:         # one one-character string, but later it may have longer
1940:         # strings interspersed with kern amounts.
1941:         oldfont, seq = None, []
1942:         for x1, y1, dvifont, glyph, width in page.text:
1943:             if dvifont != oldfont:
1944:                 pdfname = self.file.dviFontName(dvifont)
1945:                 seq += [['font', pdfname, dvifont.size]]
1946:                 oldfont = dvifont
1947:             # We need to convert the glyph numbers to bytes, and the easiest
1948:             # way to do this on both Python 2 and 3 is .encode('latin-1')
1949:             seq += [['text', x1, y1,
1950:                      [six.unichr(glyph).encode('latin-1')], x1+width]]
1951: 
1952:         # Find consecutive text strings with constant y coordinate and
1953:         # combine into a sequence of strings and kerns, or just one
1954:         # string (if any kerns would be less than 0.1 points).
1955:         i, curx, fontsize = 0, 0, None
1956:         while i < len(seq)-1:
1957:             elt, nxt = seq[i:i+2]
1958:             if elt[0] == 'font':
1959:                 fontsize = elt[2]
1960:             elif elt[0] == nxt[0] == 'text' and elt[2] == nxt[2]:
1961:                 offset = elt[4] - nxt[1]
1962:                 if abs(offset) < 0.1:
1963:                     elt[3][-1] += nxt[3][0]
1964:                     elt[4] += nxt[4]-nxt[1]
1965:                 else:
1966:                     elt[3] += [offset*1000.0/fontsize, nxt[3][0]]
1967:                     elt[4] = nxt[4]
1968:                 del seq[i+1]
1969:                 continue
1970:             i += 1
1971: 
1972:         # Create a transform to map the dvi contents to the canvas.
1973:         mytrans = Affine2D().rotate_deg(angle).translate(x, y)
1974: 
1975:         # Output the text.
1976:         self.check_gc(gc, gc._rgb)
1977:         self.file.output(Op.begin_text)
1978:         curx, cury, oldx, oldy = 0, 0, 0, 0
1979:         for elt in seq:
1980:             if elt[0] == 'font':
1981:                 self.file.output(elt[1], elt[2], Op.selectfont)
1982:             elif elt[0] == 'text':
1983:                 curx, cury = mytrans.transform_point((elt[1], elt[2]))
1984:                 self._setup_textpos(curx, cury, angle, oldx, oldy)
1985:                 oldx, oldy = curx, cury
1986:                 if len(elt[3]) == 1:
1987:                     self.file.output(elt[3][0], Op.show)
1988:                 else:
1989:                     self.file.output(elt[3], Op.showkern)
1990:             else:
1991:                 assert False
1992:         self.file.output(Op.end_text)
1993: 
1994:         # Then output the boxes (e.g., variable-length lines of square
1995:         # roots).
1996:         boxgc = self.new_gc()
1997:         boxgc.copy_properties(gc)
1998:         boxgc.set_linewidth(0)
1999:         pathops = [Path.MOVETO, Path.LINETO, Path.LINETO, Path.LINETO,
2000:                    Path.CLOSEPOLY]
2001:         for x1, y1, h, w in page.boxes:
2002:             path = Path([[x1, y1], [x1+w, y1], [x1+w, y1+h], [x1, y1+h],
2003:                          [0, 0]], pathops)
2004:             self.draw_path(boxgc, path, mytrans, gc._rgb)
2005: 
2006:     def encode_string(self, s, fonttype):
2007:         if fonttype in (1, 3):
2008:             return s.encode('cp1252', 'replace')
2009:         return s.encode('utf-16be', 'replace')
2010: 
2011:     def draw_text(self, gc, x, y, s, prop, angle, ismath=False, mtext=None):
2012:         # TODO: combine consecutive texts into one BT/ET delimited section
2013: 
2014:         # This function is rather complex, since there is no way to
2015:         # access characters of a Type 3 font with codes > 255.  (Type
2016:         # 3 fonts can not have a CIDMap).  Therefore, we break the
2017:         # string into chunks, where each chunk contains exclusively
2018:         # 1-byte or exclusively 2-byte characters, and output each
2019:         # chunk a separate command.  1-byte characters use the regular
2020:         # text show command (Tj), whereas 2-byte characters use the
2021:         # use XObject command (Do).  If using Type 42 fonts, all of
2022:         # this complication is avoided, but of course, those fonts can
2023:         # not be subsetted.
2024: 
2025:         self.check_gc(gc, gc._rgb)
2026:         if ismath:
2027:             return self.draw_mathtext(gc, x, y, s, prop, angle)
2028: 
2029:         fontsize = prop.get_size_in_points()
2030: 
2031:         if rcParams['pdf.use14corefonts']:
2032:             font = self._get_font_afm(prop)
2033:             l, b, w, h = font.get_str_bbox(s)
2034:             fonttype = 1
2035:         else:
2036:             font = self._get_font_ttf(prop)
2037:             self.track_characters(font, s)
2038:             font.set_text(s, 0.0, flags=LOAD_NO_HINTING)
2039: 
2040:             fonttype = rcParams['pdf.fonttype']
2041: 
2042:             # We can't subset all OpenType fonts, so switch to Type 42
2043:             # in that case.
2044:             if is_opentype_cff_font(font.fname):
2045:                 fonttype = 42
2046: 
2047:         def check_simple_method(s):
2048:             '''Determine if we should use the simple or woven method
2049:             to output this text, and chunks the string into 1-byte and
2050:             2-byte sections if necessary.'''
2051:             use_simple_method = True
2052:             chunks = []
2053: 
2054:             if not rcParams['pdf.use14corefonts']:
2055:                 if fonttype == 3 and not isinstance(s, bytes) and len(s) != 0:
2056:                     # Break the string into chunks where each chunk is either
2057:                     # a string of chars <= 255, or a single character > 255.
2058:                     s = six.text_type(s)
2059:                     for c in s:
2060:                         if ord(c) <= 255:
2061:                             char_type = 1
2062:                         else:
2063:                             char_type = 2
2064:                         if len(chunks) and chunks[-1][0] == char_type:
2065:                             chunks[-1][1].append(c)
2066:                         else:
2067:                             chunks.append((char_type, [c]))
2068:                     use_simple_method = (len(chunks) == 1 and
2069:                                          chunks[-1][0] == 1)
2070:             return use_simple_method, chunks
2071: 
2072:         def draw_text_simple():
2073:             '''Outputs text using the simple method.'''
2074:             self.file.output(Op.begin_text,
2075:                              self.file.fontName(prop),
2076:                              fontsize,
2077:                              Op.selectfont)
2078:             self._setup_textpos(x, y, angle)
2079:             self.file.output(self.encode_string(s, fonttype), Op.show,
2080:                              Op.end_text)
2081: 
2082:         def draw_text_woven(chunks):
2083:             '''Outputs text using the woven method, alternating
2084:             between chunks of 1-byte characters and 2-byte characters.
2085:             Only used for Type 3 fonts.'''
2086:             chunks = [(a, ''.join(b)) for a, b in chunks]
2087: 
2088:             # Do the rotation and global translation as a single matrix
2089:             # concatenation up front
2090:             self.file.output(Op.gsave)
2091:             a = angle / 180.0 * pi
2092:             self.file.output(cos(a), sin(a), -sin(a), cos(a), x, y,
2093:                              Op.concat_matrix)
2094: 
2095:             # Output all the 1-byte characters in a BT/ET group, then
2096:             # output all the 2-byte characters.
2097:             for mode in (1, 2):
2098:                 newx = oldx = 0
2099:                 # Output a 1-byte character chunk
2100:                 if mode == 1:
2101:                     self.file.output(Op.begin_text,
2102:                                      self.file.fontName(prop),
2103:                                      fontsize,
2104:                                      Op.selectfont)
2105: 
2106:                 for chunk_type, chunk in chunks:
2107:                     if mode == 1 and chunk_type == 1:
2108:                         self._setup_textpos(newx, 0, 0, oldx, 0, 0)
2109:                         self.file.output(self.encode_string(chunk, fonttype),
2110:                                          Op.show)
2111:                         oldx = newx
2112: 
2113:                     lastgind = None
2114:                     for c in chunk:
2115:                         ccode = ord(c)
2116:                         gind = font.get_char_index(ccode)
2117:                         if gind is not None:
2118:                             if mode == 2 and chunk_type == 2:
2119:                                 glyph_name = font.get_glyph_name(gind)
2120:                                 self.file.output(Op.gsave)
2121:                                 self.file.output(0.001 * fontsize, 0,
2122:                                                  0, 0.001 * fontsize,
2123:                                                  newx, 0, Op.concat_matrix)
2124:                                 name = self.file._get_xobject_symbol_name(
2125:                                     font.fname, glyph_name)
2126:                                 self.file.output(Name(name), Op.use_xobject)
2127:                                 self.file.output(Op.grestore)
2128: 
2129:                             # Move the pointer based on the character width
2130:                             # and kerning
2131:                             glyph = font.load_char(ccode,
2132:                                                    flags=LOAD_NO_HINTING)
2133:                             if lastgind is not None:
2134:                                 kern = font.get_kerning(
2135:                                     lastgind, gind, KERNING_UNFITTED)
2136:                             else:
2137:                                 kern = 0
2138:                             lastgind = gind
2139:                             newx += kern/64.0 + glyph.linearHoriAdvance/65536.0
2140: 
2141:                 if mode == 1:
2142:                     self.file.output(Op.end_text)
2143: 
2144:             self.file.output(Op.grestore)
2145: 
2146:         use_simple_method, chunks = check_simple_method(s)
2147:         if use_simple_method:
2148:             return draw_text_simple()
2149:         else:
2150:             return draw_text_woven(chunks)
2151: 
2152:     def get_text_width_height_descent(self, s, prop, ismath):
2153:         if rcParams['text.usetex']:
2154:             texmanager = self.get_texmanager()
2155:             fontsize = prop.get_size_in_points()
2156:             w, h, d = texmanager.get_text_width_height_descent(s, fontsize,
2157:                                                                renderer=self)
2158:             return w, h, d
2159: 
2160:         if ismath:
2161:             w, h, d, glyphs, rects, used_characters = \
2162:                 self.mathtext_parser.parse(s, 72, prop)
2163: 
2164:         elif rcParams['pdf.use14corefonts']:
2165:             font = self._get_font_afm(prop)
2166:             l, b, w, h, d = font.get_str_bbox_and_descent(s)
2167:             scale = prop.get_size_in_points()
2168:             w *= scale / 1000
2169:             h *= scale / 1000
2170:             d *= scale / 1000
2171:         else:
2172:             font = self._get_font_ttf(prop)
2173:             font.set_text(s, 0.0, flags=LOAD_NO_HINTING)
2174:             w, h = font.get_width_height()
2175:             scale = (1.0 / 64.0)
2176:             w *= scale
2177:             h *= scale
2178:             d = font.get_descent()
2179:             d *= scale
2180:         return w, h, d
2181: 
2182:     def _get_font_afm(self, prop):
2183:         key = hash(prop)
2184:         font = self.afm_font_cache.get(key)
2185:         if font is None:
2186:             filename = findfont(
2187:                 prop, fontext='afm', directory=self.file._core14fontdir)
2188:             if filename is None:
2189:                 filename = findfont(
2190:                     "Helvetica", fontext='afm',
2191:                     directory=self.file._core14fontdir)
2192:             font = self.afm_font_cache.get(filename)
2193:             if font is None:
2194:                 with open(filename, 'rb') as fh:
2195:                     font = AFM(fh)
2196:                     self.afm_font_cache[filename] = font
2197:             self.afm_font_cache[key] = font
2198:         return font
2199: 
2200:     def _get_font_ttf(self, prop):
2201:         filename = findfont(prop)
2202:         font = get_font(filename)
2203:         font.clear()
2204:         font.set_size(prop.get_size_in_points(), 72)
2205:         return font
2206: 
2207:     def flipy(self):
2208:         return False
2209: 
2210:     def get_canvas_width_height(self):
2211:         return self.file.width * 72.0, self.file.height * 72.0
2212: 
2213:     def new_gc(self):
2214:         return GraphicsContextPdf(self.file)
2215: 
2216: 
2217: class GraphicsContextPdf(GraphicsContextBase):
2218: 
2219:     def __init__(self, file):
2220:         GraphicsContextBase.__init__(self)
2221:         self._fillcolor = (0.0, 0.0, 0.0)
2222:         self._effective_alphas = (1.0, 1.0)
2223:         self.file = file
2224:         self.parent = None
2225: 
2226:     def __repr__(self):
2227:         d = dict(self.__dict__)
2228:         del d['file']
2229:         del d['parent']
2230:         return repr(d)
2231: 
2232:     def stroke(self):
2233:         '''
2234:         Predicate: does the path need to be stroked (its outline drawn)?
2235:         This tests for the various conditions that disable stroking
2236:         the path, in which case it would presumably be filled.
2237:         '''
2238:         # _linewidth > 0: in pdf a line of width 0 is drawn at minimum
2239:         #   possible device width, but e.g., agg doesn't draw at all
2240:         return (self._linewidth > 0 and self._alpha > 0 and
2241:                 (len(self._rgb) <= 3 or self._rgb[3] != 0.0))
2242: 
2243:     def fill(self, *args):
2244:         '''
2245:         Predicate: does the path need to be filled?
2246: 
2247:         An optional argument can be used to specify an alternative
2248:         _fillcolor, as needed by RendererPdf.draw_markers.
2249:         '''
2250:         if len(args):
2251:             _fillcolor = args[0]
2252:         else:
2253:             _fillcolor = self._fillcolor
2254:         return (self._hatch or
2255:                 (_fillcolor is not None and
2256:                  (len(_fillcolor) <= 3 or _fillcolor[3] != 0.0)))
2257: 
2258:     def paint(self):
2259:         '''
2260:         Return the appropriate pdf operator to cause the path to be
2261:         stroked, filled, or both.
2262:         '''
2263:         return Op.paint_path(self.fill(), self.stroke())
2264: 
2265:     capstyles = {'butt': 0, 'round': 1, 'projecting': 2}
2266:     joinstyles = {'miter': 0, 'round': 1, 'bevel': 2}
2267: 
2268:     def capstyle_cmd(self, style):
2269:         return [self.capstyles[style], Op.setlinecap]
2270: 
2271:     def joinstyle_cmd(self, style):
2272:         return [self.joinstyles[style], Op.setlinejoin]
2273: 
2274:     def linewidth_cmd(self, width):
2275:         return [width, Op.setlinewidth]
2276: 
2277:     def dash_cmd(self, dashes):
2278:         offset, dash = dashes
2279:         if dash is None:
2280:             dash = []
2281:             offset = 0
2282:         return [list(dash), offset, Op.setdash]
2283: 
2284:     def alpha_cmd(self, alpha, forced, effective_alphas):
2285:         name = self.file.alphaState(effective_alphas)
2286:         return [name, Op.setgstate]
2287: 
2288:     def hatch_cmd(self, hatch, hatch_color):
2289:         if not hatch:
2290:             if self._fillcolor is not None:
2291:                 return self.fillcolor_cmd(self._fillcolor)
2292:             else:
2293:                 return [Name('DeviceRGB'), Op.setcolorspace_nonstroke]
2294:         else:
2295:             hatch_style = (hatch_color, self._fillcolor, hatch)
2296:             name = self.file.hatchPattern(hatch_style)
2297:             return [Name('Pattern'), Op.setcolorspace_nonstroke,
2298:                     name, Op.setcolor_nonstroke]
2299: 
2300:     def rgb_cmd(self, rgb):
2301:         if rcParams['pdf.inheritcolor']:
2302:             return []
2303:         if rgb[0] == rgb[1] == rgb[2]:
2304:             return [rgb[0], Op.setgray_stroke]
2305:         else:
2306:             return list(rgb[:3]) + [Op.setrgb_stroke]
2307: 
2308:     def fillcolor_cmd(self, rgb):
2309:         if rgb is None or rcParams['pdf.inheritcolor']:
2310:             return []
2311:         elif rgb[0] == rgb[1] == rgb[2]:
2312:             return [rgb[0], Op.setgray_nonstroke]
2313:         else:
2314:             return list(rgb[:3]) + [Op.setrgb_nonstroke]
2315: 
2316:     def push(self):
2317:         parent = GraphicsContextPdf(self.file)
2318:         parent.copy_properties(self)
2319:         parent.parent = self.parent
2320:         self.parent = parent
2321:         return [Op.gsave]
2322: 
2323:     def pop(self):
2324:         assert self.parent is not None
2325:         self.copy_properties(self.parent)
2326:         self.parent = self.parent.parent
2327:         return [Op.grestore]
2328: 
2329:     def clip_cmd(self, cliprect, clippath):
2330:         '''Set clip rectangle. Calls self.pop() and self.push().'''
2331:         cmds = []
2332:         # Pop graphics state until we hit the right one or the stack is empty
2333:         while ((self._cliprect, self._clippath) != (cliprect, clippath)
2334:                 and self.parent is not None):
2335:             cmds.extend(self.pop())
2336:         # Unless we hit the right one, set the clip polygon
2337:         if ((self._cliprect, self._clippath) != (cliprect, clippath) or
2338:                 self.parent is None):
2339:             cmds.extend(self.push())
2340:             if self._cliprect != cliprect:
2341:                 cmds.extend([cliprect, Op.rectangle, Op.clip, Op.endpath])
2342:             if self._clippath != clippath:
2343:                 path, affine = clippath.get_transformed_path_and_affine()
2344:                 cmds.extend(
2345:                     PdfFile.pathOperations(path, affine, simplify=False) +
2346:                     [Op.clip, Op.endpath])
2347:         return cmds
2348: 
2349:     commands = (
2350:         # must come first since may pop
2351:         (('_cliprect', '_clippath'), clip_cmd),
2352:         (('_alpha', '_forced_alpha', '_effective_alphas'), alpha_cmd),
2353:         (('_capstyle',), capstyle_cmd),
2354:         (('_fillcolor',), fillcolor_cmd),
2355:         (('_joinstyle',), joinstyle_cmd),
2356:         (('_linewidth',), linewidth_cmd),
2357:         (('_dashes',), dash_cmd),
2358:         (('_rgb',), rgb_cmd),
2359:         # must come after fillcolor and rgb
2360:         (('_hatch', '_hatch_color'), hatch_cmd),
2361:         )
2362: 
2363:     def delta(self, other):
2364:         '''
2365:         Copy properties of other into self and return PDF commands
2366:         needed to transform self into other.
2367:         '''
2368:         cmds = []
2369:         fill_performed = False
2370:         for params, cmd in self.commands:
2371:             different = False
2372:             for p in params:
2373:                 ours = getattr(self, p)
2374:                 theirs = getattr(other, p)
2375:                 try:
2376:                     if (ours is None or theirs is None):
2377:                         different = bool(not(ours is theirs))
2378:                     else:
2379:                         different = bool(ours != theirs)
2380:                 except ValueError:
2381:                     ours = np.asarray(ours)
2382:                     theirs = np.asarray(theirs)
2383:                     different = (ours.shape != theirs.shape or
2384:                                  np.any(ours != theirs))
2385:                 if different:
2386:                     break
2387: 
2388:             # Need to update hatching if we also updated fillcolor
2389:             if params == ('_hatch', '_hatch_color') and fill_performed:
2390:                 different = True
2391: 
2392:             if different:
2393:                 if params == ('_fillcolor',):
2394:                     fill_performed = True
2395:                 theirs = [getattr(other, p) for p in params]
2396:                 cmds.extend(cmd(self, *theirs))
2397:                 for p in params:
2398:                     setattr(self, p, getattr(other, p))
2399:         return cmds
2400: 
2401:     def copy_properties(self, other):
2402:         '''
2403:         Copy properties of other into self.
2404:         '''
2405:         GraphicsContextBase.copy_properties(self, other)
2406:         fillcolor = getattr(other, '_fillcolor', self._fillcolor)
2407:         effective_alphas = getattr(other, '_effective_alphas',
2408:                                    self._effective_alphas)
2409:         self._fillcolor = fillcolor
2410:         self._effective_alphas = effective_alphas
2411: 
2412:     def finalize(self):
2413:         '''
2414:         Make sure every pushed graphics state is popped.
2415:         '''
2416:         cmds = []
2417:         while self.parent is not None:
2418:             cmds.extend(self.pop())
2419:         return cmds
2420: 
2421: ########################################################################
2422: #
2423: # The following functions and classes are for pylab and implement
2424: # window/figure managers, etc...
2425: #
2426: ########################################################################
2427: 
2428: 
2429: class PdfPages(object):
2430:     '''
2431:     A multi-page PDF file.
2432: 
2433:     Examples
2434:     --------
2435: 
2436:     >>> import matplotlib.pyplot as plt
2437:     >>> # Initialize:
2438:     >>> with PdfPages('foo.pdf') as pdf:
2439:     ...     # As many times as you like, create a figure fig and save it:
2440:     ...     fig = plt.figure()
2441:     ...     pdf.savefig(fig)
2442:     ...     # When no figure is specified the current figure is saved
2443:     ...     pdf.savefig()
2444: 
2445:     Notes
2446:     -----
2447: 
2448:     In reality :class:`PdfPages` is a thin wrapper around :class:`PdfFile`, in
2449:     order to avoid confusion when using :func:`~matplotlib.pyplot.savefig` and
2450:     forgetting the format argument.
2451:     '''
2452:     __slots__ = ('_file', 'keep_empty')
2453: 
2454:     def __init__(self, filename, keep_empty=True, metadata=None):
2455:         '''
2456:         Create a new PdfPages object.
2457: 
2458:         Parameters
2459:         ----------
2460: 
2461:         filename : str
2462:             Plots using :meth:`PdfPages.savefig` will be written to a file at
2463:             this location. The file is opened at once and any older file with
2464:             the same name is overwritten.
2465:         keep_empty : bool, optional
2466:             If set to False, then empty pdf files will be deleted automatically
2467:             when closed.
2468:         metadata : dictionary, optional
2469:             Information dictionary object (see PDF reference section 10.2.1
2470:             'Document Information Dictionary'), e.g.:
2471:             `{'Creator': 'My software', 'Author': 'Me',
2472:             'Title': 'Awesome fig'}`
2473: 
2474:             The standard keys are `'Title'`, `'Author'`, `'Subject'`,
2475:             `'Keywords'`, `'Creator'`, `'Producer'`, `'CreationDate'`,
2476:             `'ModDate'`, and `'Trapped'`. Values have been predefined
2477:             for `'Creator'`, `'Producer'` and `'CreationDate'`. They
2478:             can be removed by setting them to `None`.
2479: 
2480:         '''
2481:         self._file = PdfFile(filename, metadata=metadata)
2482:         self.keep_empty = keep_empty
2483: 
2484:     def __enter__(self):
2485:         return self
2486: 
2487:     def __exit__(self, exc_type, exc_val, exc_tb):
2488:         self.close()
2489: 
2490:     def close(self):
2491:         '''
2492:         Finalize this object, making the underlying file a complete
2493:         PDF file.
2494:         '''
2495:         self._file.finalize()
2496:         self._file.close()
2497:         if (self.get_pagecount() == 0 and not self.keep_empty and
2498:                 not self._file.passed_in_file_object):
2499:             os.remove(self._file.fh.name)
2500:         self._file = None
2501: 
2502:     def infodict(self):
2503:         '''
2504:         Return a modifiable information dictionary object
2505:         (see PDF reference section 10.2.1 'Document Information
2506:         Dictionary').
2507:         '''
2508:         return self._file.infoDict
2509: 
2510:     def savefig(self, figure=None, **kwargs):
2511:         '''
2512:         Saves a :class:`~matplotlib.figure.Figure` to this file as a new page.
2513: 
2514:         Any other keyword arguments are passed to
2515:         :meth:`~matplotlib.figure.Figure.savefig`.
2516: 
2517:         Parameters
2518:         ----------
2519: 
2520:         figure : :class:`~matplotlib.figure.Figure` or int, optional
2521:             Specifies what figure is saved to file. If not specified, the
2522:             active figure is saved. If a :class:`~matplotlib.figure.Figure`
2523:             instance is provided, this figure is saved. If an int is specified,
2524:             the figure instance to save is looked up by number.
2525:         '''
2526:         if isinstance(figure, Figure):
2527:             figure.savefig(self, format='pdf', **kwargs)
2528:         else:
2529:             if figure is None:
2530:                 figureManager = Gcf.get_active()
2531:             else:
2532:                 figureManager = Gcf.get_fig_manager(figure)
2533:             if figureManager is None:
2534:                 raise ValueError("No such figure: " + repr(figure))
2535:             else:
2536:                 figureManager.canvas.figure.savefig(self, format='pdf',
2537:                                                     **kwargs)
2538: 
2539:     def get_pagecount(self):
2540:         '''
2541:         Returns the current number of pages in the multipage pdf file.
2542:         '''
2543:         return len(self._file.pageList)
2544: 
2545:     def attach_note(self, text, positionRect=[-100, -100, 0, 0]):
2546:         '''
2547:         Add a new text note to the page to be saved next. The optional
2548:         positionRect specifies the position of the new note on the
2549:         page. It is outside the page per default to make sure it is
2550:         invisible on printouts.
2551:         '''
2552:         self._file.newTextnote(text, positionRect)
2553: 
2554: 
2555: class FigureCanvasPdf(FigureCanvasBase):
2556:     '''
2557:     The canvas the figure renders into.  Calls the draw and print fig
2558:     methods, creates the renderers, etc...
2559: 
2560:     Attributes
2561:     ----------
2562:     figure : `matplotlib.figure.Figure`
2563:         A high-level Figure instance
2564: 
2565:     '''
2566: 
2567:     fixed_dpi = 72
2568: 
2569:     def draw(self):
2570:         pass
2571: 
2572:     filetypes = {'pdf': 'Portable Document Format'}
2573: 
2574:     def get_default_filetype(self):
2575:         return 'pdf'
2576: 
2577:     def print_pdf(self, filename, **kwargs):
2578:         image_dpi = kwargs.get('dpi', 72)  # dpi to use for images
2579:         self.figure.set_dpi(72)            # there are 72 pdf points to an inch
2580:         width, height = self.figure.get_size_inches()
2581:         if isinstance(filename, PdfPages):
2582:             file = filename._file
2583:         else:
2584:             file = PdfFile(filename, metadata=kwargs.pop("metadata", None))
2585:         try:
2586:             file.newPage(width, height)
2587:             _bbox_inches_restore = kwargs.pop("bbox_inches_restore", None)
2588:             renderer = MixedModeRenderer(
2589:                 self.figure, width, height, image_dpi,
2590:                 RendererPdf(file, image_dpi, height, width),
2591:                 bbox_inches_restore=_bbox_inches_restore)
2592:             self.figure.draw(renderer)
2593:             renderer.finalize()
2594:             file.finalize()
2595:         finally:
2596:             if isinstance(filename, PdfPages):  # finish off this page
2597:                 file.endStream()
2598:             else:            # we opened the file above; now finish it off
2599:                 file.close()
2600: 
2601: 
2602: class FigureManagerPdf(FigureManagerBase):
2603:     pass
2604: 
2605: 
2606: @_Backend.export
2607: class _BackendPdf(_Backend):
2608:     FigureCanvas = FigureCanvasPdf
2609:     FigureManager = FigureManagerPdf
2610: 

"""

# Import the stypy library necessary elements
from stypy.type_inference_programs.type_inference_programs_imports import *

# Create the module type store
module_type_store = Context(None, __file__)

# ################# Begin of the type inference program ##################

unicode_231766 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 6, (-1)), 'unicode', u'\nA PDF matplotlib backend\nAuthor: Jouni K Sepp\xe4nen <jks@iki.fi>\n')
stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 10, 0))

# 'import six' statement (line 10)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_231767 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 10, 0), 'six')

if (type(import_231767) is not StypyTypeError):

    if (import_231767 != 'pyd_module'):
        __import__(import_231767)
        sys_modules_231768 = sys.modules[import_231767]
        import_module(stypy.reporting.localization.Localization(__file__, 10, 0), 'six', sys_modules_231768.module_type_store, module_type_store)
    else:
        import six

        import_module(stypy.reporting.localization.Localization(__file__, 10, 0), 'six', six, module_type_store)

else:
    # Assigning a type to the variable 'six' (line 10)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 10, 0), 'six', import_231767)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 12, 0))

# 'import codecs' statement (line 12)
import codecs

import_module(stypy.reporting.localization.Localization(__file__, 12, 0), 'codecs', codecs, module_type_store)

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 13, 0))

# 'import os' statement (line 13)
import os

import_module(stypy.reporting.localization.Localization(__file__, 13, 0), 'os', os, module_type_store)

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 14, 0))

# 'import re' statement (line 14)
import re

import_module(stypy.reporting.localization.Localization(__file__, 14, 0), 're', re, module_type_store)

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 15, 0))

# 'import struct' statement (line 15)
import struct

import_module(stypy.reporting.localization.Localization(__file__, 15, 0), 'struct', struct, module_type_store)

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 16, 0))

# 'import sys' statement (line 16)
import sys

import_module(stypy.reporting.localization.Localization(__file__, 16, 0), 'sys', sys, module_type_store)

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 17, 0))

# 'import time' statement (line 17)
import time

import_module(stypy.reporting.localization.Localization(__file__, 17, 0), 'time', time, module_type_store)

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 18, 0))

# 'import warnings' statement (line 18)
import warnings

import_module(stypy.reporting.localization.Localization(__file__, 18, 0), 'warnings', warnings, module_type_store)

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 19, 0))

# 'import zlib' statement (line 19)
import zlib

import_module(stypy.reporting.localization.Localization(__file__, 19, 0), 'zlib', zlib, module_type_store)

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 20, 0))

# 'import collections' statement (line 20)
import collections

import_module(stypy.reporting.localization.Localization(__file__, 20, 0), 'collections', collections, module_type_store)

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 21, 0))

# 'from io import BytesIO' statement (line 21)
try:
    from io import BytesIO

except:
    BytesIO = UndefinedType
import_from_module(stypy.reporting.localization.Localization(__file__, 21, 0), 'io', None, module_type_store, ['BytesIO'], [BytesIO])

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 22, 0))

# 'from functools import total_ordering' statement (line 22)
try:
    from functools import total_ordering

except:
    total_ordering = UndefinedType
import_from_module(stypy.reporting.localization.Localization(__file__, 22, 0), 'functools', None, module_type_store, ['total_ordering'], [total_ordering])

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 24, 0))

# 'import numpy' statement (line 24)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_231769 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 24, 0), 'numpy')

if (type(import_231769) is not StypyTypeError):

    if (import_231769 != 'pyd_module'):
        __import__(import_231769)
        sys_modules_231770 = sys.modules[import_231769]
        import_module(stypy.reporting.localization.Localization(__file__, 24, 0), 'np', sys_modules_231770.module_type_store, module_type_store)
    else:
        import numpy as np

        import_module(stypy.reporting.localization.Localization(__file__, 24, 0), 'np', numpy, module_type_store)

else:
    # Assigning a type to the variable 'numpy' (line 24)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 24, 0), 'numpy', import_231769)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 25, 0))

# 'from six import unichr' statement (line 25)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_231771 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 25, 0), 'six')

if (type(import_231771) is not StypyTypeError):

    if (import_231771 != 'pyd_module'):
        __import__(import_231771)
        sys_modules_231772 = sys.modules[import_231771]
        import_from_module(stypy.reporting.localization.Localization(__file__, 25, 0), 'six', sys_modules_231772.module_type_store, module_type_store, ['unichr'])
        nest_module(stypy.reporting.localization.Localization(__file__, 25, 0), __file__, sys_modules_231772, sys_modules_231772.module_type_store, module_type_store)
    else:
        from six import unichr

        import_from_module(stypy.reporting.localization.Localization(__file__, 25, 0), 'six', None, module_type_store, ['unichr'], [unichr])

else:
    # Assigning a type to the variable 'six' (line 25)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 25, 0), 'six', import_231771)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 28, 0))

# 'from datetime import datetime, tzinfo, timedelta' statement (line 28)
try:
    from datetime import datetime, tzinfo, timedelta

except:
    datetime = UndefinedType
    tzinfo = UndefinedType
    timedelta = UndefinedType
import_from_module(stypy.reporting.localization.Localization(__file__, 28, 0), 'datetime', None, module_type_store, ['datetime', 'tzinfo', 'timedelta'], [datetime, tzinfo, timedelta])

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 29, 0))

# 'from math import ceil, cos, floor, pi, sin' statement (line 29)
try:
    from math import ceil, cos, floor, pi, sin

except:
    ceil = UndefinedType
    cos = UndefinedType
    floor = UndefinedType
    pi = UndefinedType
    sin = UndefinedType
import_from_module(stypy.reporting.localization.Localization(__file__, 29, 0), 'math', None, module_type_store, ['ceil', 'cos', 'floor', 'pi', 'sin'], [ceil, cos, floor, pi, sin])

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 31, 0))

# 'import matplotlib' statement (line 31)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_231773 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 31, 0), 'matplotlib')

if (type(import_231773) is not StypyTypeError):

    if (import_231773 != 'pyd_module'):
        __import__(import_231773)
        sys_modules_231774 = sys.modules[import_231773]
        import_module(stypy.reporting.localization.Localization(__file__, 31, 0), 'matplotlib', sys_modules_231774.module_type_store, module_type_store)
    else:
        import matplotlib

        import_module(stypy.reporting.localization.Localization(__file__, 31, 0), 'matplotlib', matplotlib, module_type_store)

else:
    # Assigning a type to the variable 'matplotlib' (line 31)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 31, 0), 'matplotlib', import_231773)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 32, 0))

# 'from matplotlib import __version__, rcParams' statement (line 32)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_231775 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 32, 0), 'matplotlib')

if (type(import_231775) is not StypyTypeError):

    if (import_231775 != 'pyd_module'):
        __import__(import_231775)
        sys_modules_231776 = sys.modules[import_231775]
        import_from_module(stypy.reporting.localization.Localization(__file__, 32, 0), 'matplotlib', sys_modules_231776.module_type_store, module_type_store, ['__version__', 'rcParams'])
        nest_module(stypy.reporting.localization.Localization(__file__, 32, 0), __file__, sys_modules_231776, sys_modules_231776.module_type_store, module_type_store)
    else:
        from matplotlib import __version__, rcParams

        import_from_module(stypy.reporting.localization.Localization(__file__, 32, 0), 'matplotlib', None, module_type_store, ['__version__', 'rcParams'], [__version__, rcParams])

else:
    # Assigning a type to the variable 'matplotlib' (line 32)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 32, 0), 'matplotlib', import_231775)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 33, 0))

# 'from matplotlib._pylab_helpers import Gcf' statement (line 33)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_231777 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 33, 0), 'matplotlib._pylab_helpers')

if (type(import_231777) is not StypyTypeError):

    if (import_231777 != 'pyd_module'):
        __import__(import_231777)
        sys_modules_231778 = sys.modules[import_231777]
        import_from_module(stypy.reporting.localization.Localization(__file__, 33, 0), 'matplotlib._pylab_helpers', sys_modules_231778.module_type_store, module_type_store, ['Gcf'])
        nest_module(stypy.reporting.localization.Localization(__file__, 33, 0), __file__, sys_modules_231778, sys_modules_231778.module_type_store, module_type_store)
    else:
        from matplotlib._pylab_helpers import Gcf

        import_from_module(stypy.reporting.localization.Localization(__file__, 33, 0), 'matplotlib._pylab_helpers', None, module_type_store, ['Gcf'], [Gcf])

else:
    # Assigning a type to the variable 'matplotlib._pylab_helpers' (line 33)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 33, 0), 'matplotlib._pylab_helpers', import_231777)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 34, 0))

# 'from matplotlib.backend_bases import _Backend, FigureCanvasBase, FigureManagerBase, GraphicsContextBase, RendererBase' statement (line 34)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_231779 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 34, 0), 'matplotlib.backend_bases')

if (type(import_231779) is not StypyTypeError):

    if (import_231779 != 'pyd_module'):
        __import__(import_231779)
        sys_modules_231780 = sys.modules[import_231779]
        import_from_module(stypy.reporting.localization.Localization(__file__, 34, 0), 'matplotlib.backend_bases', sys_modules_231780.module_type_store, module_type_store, ['_Backend', 'FigureCanvasBase', 'FigureManagerBase', 'GraphicsContextBase', 'RendererBase'])
        nest_module(stypy.reporting.localization.Localization(__file__, 34, 0), __file__, sys_modules_231780, sys_modules_231780.module_type_store, module_type_store)
    else:
        from matplotlib.backend_bases import _Backend, FigureCanvasBase, FigureManagerBase, GraphicsContextBase, RendererBase

        import_from_module(stypy.reporting.localization.Localization(__file__, 34, 0), 'matplotlib.backend_bases', None, module_type_store, ['_Backend', 'FigureCanvasBase', 'FigureManagerBase', 'GraphicsContextBase', 'RendererBase'], [_Backend, FigureCanvasBase, FigureManagerBase, GraphicsContextBase, RendererBase])

else:
    # Assigning a type to the variable 'matplotlib.backend_bases' (line 34)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 34, 0), 'matplotlib.backend_bases', import_231779)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 37, 0))

# 'from matplotlib.backends.backend_mixed import MixedModeRenderer' statement (line 37)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_231781 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 37, 0), 'matplotlib.backends.backend_mixed')

if (type(import_231781) is not StypyTypeError):

    if (import_231781 != 'pyd_module'):
        __import__(import_231781)
        sys_modules_231782 = sys.modules[import_231781]
        import_from_module(stypy.reporting.localization.Localization(__file__, 37, 0), 'matplotlib.backends.backend_mixed', sys_modules_231782.module_type_store, module_type_store, ['MixedModeRenderer'])
        nest_module(stypy.reporting.localization.Localization(__file__, 37, 0), __file__, sys_modules_231782, sys_modules_231782.module_type_store, module_type_store)
    else:
        from matplotlib.backends.backend_mixed import MixedModeRenderer

        import_from_module(stypy.reporting.localization.Localization(__file__, 37, 0), 'matplotlib.backends.backend_mixed', None, module_type_store, ['MixedModeRenderer'], [MixedModeRenderer])

else:
    # Assigning a type to the variable 'matplotlib.backends.backend_mixed' (line 37)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 37, 0), 'matplotlib.backends.backend_mixed', import_231781)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 38, 0))

# 'from matplotlib.cbook import Bunch, get_realpath_and_stat, is_writable_file_like, maxdict' statement (line 38)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_231783 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 38, 0), 'matplotlib.cbook')

if (type(import_231783) is not StypyTypeError):

    if (import_231783 != 'pyd_module'):
        __import__(import_231783)
        sys_modules_231784 = sys.modules[import_231783]
        import_from_module(stypy.reporting.localization.Localization(__file__, 38, 0), 'matplotlib.cbook', sys_modules_231784.module_type_store, module_type_store, ['Bunch', 'get_realpath_and_stat', 'is_writable_file_like', 'maxdict'])
        nest_module(stypy.reporting.localization.Localization(__file__, 38, 0), __file__, sys_modules_231784, sys_modules_231784.module_type_store, module_type_store)
    else:
        from matplotlib.cbook import Bunch, get_realpath_and_stat, is_writable_file_like, maxdict

        import_from_module(stypy.reporting.localization.Localization(__file__, 38, 0), 'matplotlib.cbook', None, module_type_store, ['Bunch', 'get_realpath_and_stat', 'is_writable_file_like', 'maxdict'], [Bunch, get_realpath_and_stat, is_writable_file_like, maxdict])

else:
    # Assigning a type to the variable 'matplotlib.cbook' (line 38)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 38, 0), 'matplotlib.cbook', import_231783)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 40, 0))

# 'from matplotlib.figure import Figure' statement (line 40)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_231785 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 40, 0), 'matplotlib.figure')

if (type(import_231785) is not StypyTypeError):

    if (import_231785 != 'pyd_module'):
        __import__(import_231785)
        sys_modules_231786 = sys.modules[import_231785]
        import_from_module(stypy.reporting.localization.Localization(__file__, 40, 0), 'matplotlib.figure', sys_modules_231786.module_type_store, module_type_store, ['Figure'])
        nest_module(stypy.reporting.localization.Localization(__file__, 40, 0), __file__, sys_modules_231786, sys_modules_231786.module_type_store, module_type_store)
    else:
        from matplotlib.figure import Figure

        import_from_module(stypy.reporting.localization.Localization(__file__, 40, 0), 'matplotlib.figure', None, module_type_store, ['Figure'], [Figure])

else:
    # Assigning a type to the variable 'matplotlib.figure' (line 40)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 40, 0), 'matplotlib.figure', import_231785)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 41, 0))

# 'from matplotlib.font_manager import findfont, is_opentype_cff_font, get_font' statement (line 41)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_231787 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 41, 0), 'matplotlib.font_manager')

if (type(import_231787) is not StypyTypeError):

    if (import_231787 != 'pyd_module'):
        __import__(import_231787)
        sys_modules_231788 = sys.modules[import_231787]
        import_from_module(stypy.reporting.localization.Localization(__file__, 41, 0), 'matplotlib.font_manager', sys_modules_231788.module_type_store, module_type_store, ['findfont', 'is_opentype_cff_font', 'get_font'])
        nest_module(stypy.reporting.localization.Localization(__file__, 41, 0), __file__, sys_modules_231788, sys_modules_231788.module_type_store, module_type_store)
    else:
        from matplotlib.font_manager import findfont, is_opentype_cff_font, get_font

        import_from_module(stypy.reporting.localization.Localization(__file__, 41, 0), 'matplotlib.font_manager', None, module_type_store, ['findfont', 'is_opentype_cff_font', 'get_font'], [findfont, is_opentype_cff_font, get_font])

else:
    # Assigning a type to the variable 'matplotlib.font_manager' (line 41)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 41, 0), 'matplotlib.font_manager', import_231787)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 42, 0))

# 'from matplotlib.afm import AFM' statement (line 42)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_231789 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 42, 0), 'matplotlib.afm')

if (type(import_231789) is not StypyTypeError):

    if (import_231789 != 'pyd_module'):
        __import__(import_231789)
        sys_modules_231790 = sys.modules[import_231789]
        import_from_module(stypy.reporting.localization.Localization(__file__, 42, 0), 'matplotlib.afm', sys_modules_231790.module_type_store, module_type_store, ['AFM'])
        nest_module(stypy.reporting.localization.Localization(__file__, 42, 0), __file__, sys_modules_231790, sys_modules_231790.module_type_store, module_type_store)
    else:
        from matplotlib.afm import AFM

        import_from_module(stypy.reporting.localization.Localization(__file__, 42, 0), 'matplotlib.afm', None, module_type_store, ['AFM'], [AFM])

else:
    # Assigning a type to the variable 'matplotlib.afm' (line 42)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 42, 0), 'matplotlib.afm', import_231789)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 43, 0))

# 'import matplotlib.type1font' statement (line 43)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_231791 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 43, 0), 'matplotlib.type1font')

if (type(import_231791) is not StypyTypeError):

    if (import_231791 != 'pyd_module'):
        __import__(import_231791)
        sys_modules_231792 = sys.modules[import_231791]
        import_module(stypy.reporting.localization.Localization(__file__, 43, 0), 'type1font', sys_modules_231792.module_type_store, module_type_store)
    else:
        import matplotlib.type1font as type1font

        import_module(stypy.reporting.localization.Localization(__file__, 43, 0), 'type1font', matplotlib.type1font, module_type_store)

else:
    # Assigning a type to the variable 'matplotlib.type1font' (line 43)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 43, 0), 'matplotlib.type1font', import_231791)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 44, 0))

# 'import matplotlib.dviread' statement (line 44)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_231793 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 44, 0), 'matplotlib.dviread')

if (type(import_231793) is not StypyTypeError):

    if (import_231793 != 'pyd_module'):
        __import__(import_231793)
        sys_modules_231794 = sys.modules[import_231793]
        import_module(stypy.reporting.localization.Localization(__file__, 44, 0), 'dviread', sys_modules_231794.module_type_store, module_type_store)
    else:
        import matplotlib.dviread as dviread

        import_module(stypy.reporting.localization.Localization(__file__, 44, 0), 'dviread', matplotlib.dviread, module_type_store)

else:
    # Assigning a type to the variable 'matplotlib.dviread' (line 44)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 44, 0), 'matplotlib.dviread', import_231793)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 45, 0))

# 'from matplotlib.ft2font import FIXED_WIDTH, ITALIC, LOAD_NO_SCALE, LOAD_NO_HINTING, KERNING_UNFITTED' statement (line 45)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_231795 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 45, 0), 'matplotlib.ft2font')

if (type(import_231795) is not StypyTypeError):

    if (import_231795 != 'pyd_module'):
        __import__(import_231795)
        sys_modules_231796 = sys.modules[import_231795]
        import_from_module(stypy.reporting.localization.Localization(__file__, 45, 0), 'matplotlib.ft2font', sys_modules_231796.module_type_store, module_type_store, ['FIXED_WIDTH', 'ITALIC', 'LOAD_NO_SCALE', 'LOAD_NO_HINTING', 'KERNING_UNFITTED'])
        nest_module(stypy.reporting.localization.Localization(__file__, 45, 0), __file__, sys_modules_231796, sys_modules_231796.module_type_store, module_type_store)
    else:
        from matplotlib.ft2font import FIXED_WIDTH, ITALIC, LOAD_NO_SCALE, LOAD_NO_HINTING, KERNING_UNFITTED

        import_from_module(stypy.reporting.localization.Localization(__file__, 45, 0), 'matplotlib.ft2font', None, module_type_store, ['FIXED_WIDTH', 'ITALIC', 'LOAD_NO_SCALE', 'LOAD_NO_HINTING', 'KERNING_UNFITTED'], [FIXED_WIDTH, ITALIC, LOAD_NO_SCALE, LOAD_NO_HINTING, KERNING_UNFITTED])

else:
    # Assigning a type to the variable 'matplotlib.ft2font' (line 45)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 45, 0), 'matplotlib.ft2font', import_231795)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 47, 0))

# 'from matplotlib.mathtext import MathTextParser' statement (line 47)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_231797 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 47, 0), 'matplotlib.mathtext')

if (type(import_231797) is not StypyTypeError):

    if (import_231797 != 'pyd_module'):
        __import__(import_231797)
        sys_modules_231798 = sys.modules[import_231797]
        import_from_module(stypy.reporting.localization.Localization(__file__, 47, 0), 'matplotlib.mathtext', sys_modules_231798.module_type_store, module_type_store, ['MathTextParser'])
        nest_module(stypy.reporting.localization.Localization(__file__, 47, 0), __file__, sys_modules_231798, sys_modules_231798.module_type_store, module_type_store)
    else:
        from matplotlib.mathtext import MathTextParser

        import_from_module(stypy.reporting.localization.Localization(__file__, 47, 0), 'matplotlib.mathtext', None, module_type_store, ['MathTextParser'], [MathTextParser])

else:
    # Assigning a type to the variable 'matplotlib.mathtext' (line 47)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 47, 0), 'matplotlib.mathtext', import_231797)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 48, 0))

# 'from matplotlib.transforms import Affine2D, BboxBase' statement (line 48)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_231799 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 48, 0), 'matplotlib.transforms')

if (type(import_231799) is not StypyTypeError):

    if (import_231799 != 'pyd_module'):
        __import__(import_231799)
        sys_modules_231800 = sys.modules[import_231799]
        import_from_module(stypy.reporting.localization.Localization(__file__, 48, 0), 'matplotlib.transforms', sys_modules_231800.module_type_store, module_type_store, ['Affine2D', 'BboxBase'])
        nest_module(stypy.reporting.localization.Localization(__file__, 48, 0), __file__, sys_modules_231800, sys_modules_231800.module_type_store, module_type_store)
    else:
        from matplotlib.transforms import Affine2D, BboxBase

        import_from_module(stypy.reporting.localization.Localization(__file__, 48, 0), 'matplotlib.transforms', None, module_type_store, ['Affine2D', 'BboxBase'], [Affine2D, BboxBase])

else:
    # Assigning a type to the variable 'matplotlib.transforms' (line 48)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 48, 0), 'matplotlib.transforms', import_231799)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 49, 0))

# 'from matplotlib.path import Path' statement (line 49)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_231801 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 49, 0), 'matplotlib.path')

if (type(import_231801) is not StypyTypeError):

    if (import_231801 != 'pyd_module'):
        __import__(import_231801)
        sys_modules_231802 = sys.modules[import_231801]
        import_from_module(stypy.reporting.localization.Localization(__file__, 49, 0), 'matplotlib.path', sys_modules_231802.module_type_store, module_type_store, ['Path'])
        nest_module(stypy.reporting.localization.Localization(__file__, 49, 0), __file__, sys_modules_231802, sys_modules_231802.module_type_store, module_type_store)
    else:
        from matplotlib.path import Path

        import_from_module(stypy.reporting.localization.Localization(__file__, 49, 0), 'matplotlib.path', None, module_type_store, ['Path'], [Path])

else:
    # Assigning a type to the variable 'matplotlib.path' (line 49)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 49, 0), 'matplotlib.path', import_231801)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 50, 0))

# 'from matplotlib.dates import UTC' statement (line 50)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_231803 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 50, 0), 'matplotlib.dates')

if (type(import_231803) is not StypyTypeError):

    if (import_231803 != 'pyd_module'):
        __import__(import_231803)
        sys_modules_231804 = sys.modules[import_231803]
        import_from_module(stypy.reporting.localization.Localization(__file__, 50, 0), 'matplotlib.dates', sys_modules_231804.module_type_store, module_type_store, ['UTC'])
        nest_module(stypy.reporting.localization.Localization(__file__, 50, 0), __file__, sys_modules_231804, sys_modules_231804.module_type_store, module_type_store)
    else:
        from matplotlib.dates import UTC

        import_from_module(stypy.reporting.localization.Localization(__file__, 50, 0), 'matplotlib.dates', None, module_type_store, ['UTC'], [UTC])

else:
    # Assigning a type to the variable 'matplotlib.dates' (line 50)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 50, 0), 'matplotlib.dates', import_231803)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 51, 0))

# 'from matplotlib import _path' statement (line 51)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_231805 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 51, 0), 'matplotlib')

if (type(import_231805) is not StypyTypeError):

    if (import_231805 != 'pyd_module'):
        __import__(import_231805)
        sys_modules_231806 = sys.modules[import_231805]
        import_from_module(stypy.reporting.localization.Localization(__file__, 51, 0), 'matplotlib', sys_modules_231806.module_type_store, module_type_store, ['_path'])
        nest_module(stypy.reporting.localization.Localization(__file__, 51, 0), __file__, sys_modules_231806, sys_modules_231806.module_type_store, module_type_store)
    else:
        from matplotlib import _path

        import_from_module(stypy.reporting.localization.Localization(__file__, 51, 0), 'matplotlib', None, module_type_store, ['_path'], [_path])

else:
    # Assigning a type to the variable 'matplotlib' (line 51)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 51, 0), 'matplotlib', import_231805)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 52, 0))

# 'from matplotlib import _png' statement (line 52)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_231807 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 52, 0), 'matplotlib')

if (type(import_231807) is not StypyTypeError):

    if (import_231807 != 'pyd_module'):
        __import__(import_231807)
        sys_modules_231808 = sys.modules[import_231807]
        import_from_module(stypy.reporting.localization.Localization(__file__, 52, 0), 'matplotlib', sys_modules_231808.module_type_store, module_type_store, ['_png'])
        nest_module(stypy.reporting.localization.Localization(__file__, 52, 0), __file__, sys_modules_231808, sys_modules_231808.module_type_store, module_type_store)
    else:
        from matplotlib import _png

        import_from_module(stypy.reporting.localization.Localization(__file__, 52, 0), 'matplotlib', None, module_type_store, ['_png'], [_png])

else:
    # Assigning a type to the variable 'matplotlib' (line 52)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 52, 0), 'matplotlib', import_231807)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 53, 0))

# 'from matplotlib import ttconv' statement (line 53)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_231809 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 53, 0), 'matplotlib')

if (type(import_231809) is not StypyTypeError):

    if (import_231809 != 'pyd_module'):
        __import__(import_231809)
        sys_modules_231810 = sys.modules[import_231809]
        import_from_module(stypy.reporting.localization.Localization(__file__, 53, 0), 'matplotlib', sys_modules_231810.module_type_store, module_type_store, ['ttconv'])
        nest_module(stypy.reporting.localization.Localization(__file__, 53, 0), __file__, sys_modules_231810, sys_modules_231810.module_type_store, module_type_store)
    else:
        from matplotlib import ttconv

        import_from_module(stypy.reporting.localization.Localization(__file__, 53, 0), 'matplotlib', None, module_type_store, ['ttconv'], [ttconv])

else:
    # Assigning a type to the variable 'matplotlib' (line 53)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 53, 0), 'matplotlib', import_231809)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')


@norecursion
def fill(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    int_231811 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 103, 26), 'int')
    defaults = [int_231811]
    # Create a new context for function 'fill'
    module_type_store = module_type_store.open_function_context('fill', 103, 0, False)
    
    # Passed parameters checking function
    fill.stypy_localization = localization
    fill.stypy_type_of_self = None
    fill.stypy_type_store = module_type_store
    fill.stypy_function_name = 'fill'
    fill.stypy_param_names_list = ['strings', 'linelen']
    fill.stypy_varargs_param_name = None
    fill.stypy_kwargs_param_name = None
    fill.stypy_call_defaults = defaults
    fill.stypy_call_varargs = varargs
    fill.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'fill', ['strings', 'linelen'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'fill', localization, ['strings', 'linelen'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'fill(...)' code ##################

    unicode_231812 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 106, (-1)), 'unicode', u'Make one string from sequence of strings, with whitespace\n    in between. The whitespace is chosen to form lines of at most\n    linelen characters, if possible.')
    
    # Assigning a Num to a Name (line 107):
    
    # Assigning a Num to a Name (line 107):
    int_231813 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 107, 14), 'int')
    # Assigning a type to the variable 'currpos' (line 107)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 107, 4), 'currpos', int_231813)
    
    # Assigning a Num to a Name (line 108):
    
    # Assigning a Num to a Name (line 108):
    int_231814 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 108, 12), 'int')
    # Assigning a type to the variable 'lasti' (line 108)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 108, 4), 'lasti', int_231814)
    
    # Assigning a List to a Name (line 109):
    
    # Assigning a List to a Name (line 109):
    
    # Obtaining an instance of the builtin type 'list' (line 109)
    list_231815 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 109, 13), 'list')
    # Adding type elements to the builtin type 'list' instance (line 109)
    
    # Assigning a type to the variable 'result' (line 109)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 109, 4), 'result', list_231815)
    
    
    # Call to enumerate(...): (line 110)
    # Processing the call arguments (line 110)
    # Getting the type of 'strings' (line 110)
    strings_231817 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 110, 26), 'strings', False)
    # Processing the call keyword arguments (line 110)
    kwargs_231818 = {}
    # Getting the type of 'enumerate' (line 110)
    enumerate_231816 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 110, 16), 'enumerate', False)
    # Calling enumerate(args, kwargs) (line 110)
    enumerate_call_result_231819 = invoke(stypy.reporting.localization.Localization(__file__, 110, 16), enumerate_231816, *[strings_231817], **kwargs_231818)
    
    # Testing the type of a for loop iterable (line 110)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 110, 4), enumerate_call_result_231819)
    # Getting the type of the for loop variable (line 110)
    for_loop_var_231820 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 110, 4), enumerate_call_result_231819)
    # Assigning a type to the variable 'i' (line 110)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 110, 4), 'i', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 110, 4), for_loop_var_231820))
    # Assigning a type to the variable 's' (line 110)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 110, 4), 's', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 110, 4), for_loop_var_231820))
    # SSA begins for a for statement (line 110)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Call to a Name (line 111):
    
    # Assigning a Call to a Name (line 111):
    
    # Call to len(...): (line 111)
    # Processing the call arguments (line 111)
    # Getting the type of 's' (line 111)
    s_231822 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 111, 21), 's', False)
    # Processing the call keyword arguments (line 111)
    kwargs_231823 = {}
    # Getting the type of 'len' (line 111)
    len_231821 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 111, 17), 'len', False)
    # Calling len(args, kwargs) (line 111)
    len_call_result_231824 = invoke(stypy.reporting.localization.Localization(__file__, 111, 17), len_231821, *[s_231822], **kwargs_231823)
    
    # Assigning a type to the variable 'length' (line 111)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 111, 8), 'length', len_call_result_231824)
    
    
    # Getting the type of 'currpos' (line 112)
    currpos_231825 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 112, 11), 'currpos')
    # Getting the type of 'length' (line 112)
    length_231826 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 112, 21), 'length')
    # Applying the binary operator '+' (line 112)
    result_add_231827 = python_operator(stypy.reporting.localization.Localization(__file__, 112, 11), '+', currpos_231825, length_231826)
    
    # Getting the type of 'linelen' (line 112)
    linelen_231828 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 112, 30), 'linelen')
    # Applying the binary operator '<' (line 112)
    result_lt_231829 = python_operator(stypy.reporting.localization.Localization(__file__, 112, 11), '<', result_add_231827, linelen_231828)
    
    # Testing the type of an if condition (line 112)
    if_condition_231830 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 112, 8), result_lt_231829)
    # Assigning a type to the variable 'if_condition_231830' (line 112)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 112, 8), 'if_condition_231830', if_condition_231830)
    # SSA begins for if statement (line 112)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Getting the type of 'currpos' (line 113)
    currpos_231831 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 113, 12), 'currpos')
    # Getting the type of 'length' (line 113)
    length_231832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 113, 23), 'length')
    int_231833 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 113, 32), 'int')
    # Applying the binary operator '+' (line 113)
    result_add_231834 = python_operator(stypy.reporting.localization.Localization(__file__, 113, 23), '+', length_231832, int_231833)
    
    # Applying the binary operator '+=' (line 113)
    result_iadd_231835 = python_operator(stypy.reporting.localization.Localization(__file__, 113, 12), '+=', currpos_231831, result_add_231834)
    # Assigning a type to the variable 'currpos' (line 113)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 113, 12), 'currpos', result_iadd_231835)
    
    # SSA branch for the else part of an if statement (line 112)
    module_type_store.open_ssa_branch('else')
    
    # Call to append(...): (line 115)
    # Processing the call arguments (line 115)
    
    # Call to join(...): (line 115)
    # Processing the call arguments (line 115)
    
    # Obtaining the type of the subscript
    # Getting the type of 'lasti' (line 115)
    lasti_231840 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 115, 44), 'lasti', False)
    # Getting the type of 'i' (line 115)
    i_231841 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 115, 50), 'i', False)
    slice_231842 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 115, 36), lasti_231840, i_231841, None)
    # Getting the type of 'strings' (line 115)
    strings_231843 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 115, 36), 'strings', False)
    # Obtaining the member '__getitem__' of a type (line 115)
    getitem___231844 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 115, 36), strings_231843, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 115)
    subscript_call_result_231845 = invoke(stypy.reporting.localization.Localization(__file__, 115, 36), getitem___231844, slice_231842)
    
    # Processing the call keyword arguments (line 115)
    kwargs_231846 = {}
    str_231838 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 115, 26), 'str', ' ')
    # Obtaining the member 'join' of a type (line 115)
    join_231839 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 115, 26), str_231838, 'join')
    # Calling join(args, kwargs) (line 115)
    join_call_result_231847 = invoke(stypy.reporting.localization.Localization(__file__, 115, 26), join_231839, *[subscript_call_result_231845], **kwargs_231846)
    
    # Processing the call keyword arguments (line 115)
    kwargs_231848 = {}
    # Getting the type of 'result' (line 115)
    result_231836 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 115, 12), 'result', False)
    # Obtaining the member 'append' of a type (line 115)
    append_231837 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 115, 12), result_231836, 'append')
    # Calling append(args, kwargs) (line 115)
    append_call_result_231849 = invoke(stypy.reporting.localization.Localization(__file__, 115, 12), append_231837, *[join_call_result_231847], **kwargs_231848)
    
    
    # Assigning a Name to a Name (line 116):
    
    # Assigning a Name to a Name (line 116):
    # Getting the type of 'i' (line 116)
    i_231850 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 116, 20), 'i')
    # Assigning a type to the variable 'lasti' (line 116)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 116, 12), 'lasti', i_231850)
    
    # Assigning a Name to a Name (line 117):
    
    # Assigning a Name to a Name (line 117):
    # Getting the type of 'length' (line 117)
    length_231851 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 117, 22), 'length')
    # Assigning a type to the variable 'currpos' (line 117)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 117, 12), 'currpos', length_231851)
    # SSA join for if statement (line 112)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Call to append(...): (line 118)
    # Processing the call arguments (line 118)
    
    # Call to join(...): (line 118)
    # Processing the call arguments (line 118)
    
    # Obtaining the type of the subscript
    # Getting the type of 'lasti' (line 118)
    lasti_231856 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 118, 36), 'lasti', False)
    slice_231857 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 118, 28), lasti_231856, None, None)
    # Getting the type of 'strings' (line 118)
    strings_231858 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 118, 28), 'strings', False)
    # Obtaining the member '__getitem__' of a type (line 118)
    getitem___231859 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 118, 28), strings_231858, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 118)
    subscript_call_result_231860 = invoke(stypy.reporting.localization.Localization(__file__, 118, 28), getitem___231859, slice_231857)
    
    # Processing the call keyword arguments (line 118)
    kwargs_231861 = {}
    str_231854 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 118, 18), 'str', ' ')
    # Obtaining the member 'join' of a type (line 118)
    join_231855 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 118, 18), str_231854, 'join')
    # Calling join(args, kwargs) (line 118)
    join_call_result_231862 = invoke(stypy.reporting.localization.Localization(__file__, 118, 18), join_231855, *[subscript_call_result_231860], **kwargs_231861)
    
    # Processing the call keyword arguments (line 118)
    kwargs_231863 = {}
    # Getting the type of 'result' (line 118)
    result_231852 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 118, 4), 'result', False)
    # Obtaining the member 'append' of a type (line 118)
    append_231853 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 118, 4), result_231852, 'append')
    # Calling append(args, kwargs) (line 118)
    append_call_result_231864 = invoke(stypy.reporting.localization.Localization(__file__, 118, 4), append_231853, *[join_call_result_231862], **kwargs_231863)
    
    
    # Call to join(...): (line 119)
    # Processing the call arguments (line 119)
    # Getting the type of 'result' (line 119)
    result_231867 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 119, 22), 'result', False)
    # Processing the call keyword arguments (line 119)
    kwargs_231868 = {}
    str_231865 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 119, 11), 'str', '\n')
    # Obtaining the member 'join' of a type (line 119)
    join_231866 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 119, 11), str_231865, 'join')
    # Calling join(args, kwargs) (line 119)
    join_call_result_231869 = invoke(stypy.reporting.localization.Localization(__file__, 119, 11), join_231866, *[result_231867], **kwargs_231868)
    
    # Assigning a type to the variable 'stypy_return_type' (line 119)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 119, 4), 'stypy_return_type', join_call_result_231869)
    
    # ################# End of 'fill(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'fill' in the type store
    # Getting the type of 'stypy_return_type' (line 103)
    stypy_return_type_231870 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 103, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_231870)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'fill'
    return stypy_return_type_231870

# Assigning a type to the variable 'fill' (line 103)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 103, 0), 'fill', fill)

# Assigning a Call to a Name (line 127):

# Assigning a Call to a Name (line 127):

# Call to compile(...): (line 127)
# Processing the call arguments (line 127)
str_231873 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 127, 34), 'str', '([\\\\()\\r\\n])')
# Processing the call keyword arguments (line 127)
kwargs_231874 = {}
# Getting the type of 're' (line 127)
re_231871 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 127, 23), 're', False)
# Obtaining the member 'compile' of a type (line 127)
compile_231872 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 127, 23), re_231871, 'compile')
# Calling compile(args, kwargs) (line 127)
compile_call_result_231875 = invoke(stypy.reporting.localization.Localization(__file__, 127, 23), compile_231872, *[str_231873], **kwargs_231874)

# Assigning a type to the variable '_string_escape_regex' (line 127)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 127, 0), '_string_escape_regex', compile_call_result_231875)

@norecursion
def _string_escape(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function '_string_escape'
    module_type_store = module_type_store.open_function_context('_string_escape', 130, 0, False)
    
    # Passed parameters checking function
    _string_escape.stypy_localization = localization
    _string_escape.stypy_type_of_self = None
    _string_escape.stypy_type_store = module_type_store
    _string_escape.stypy_function_name = '_string_escape'
    _string_escape.stypy_param_names_list = ['match']
    _string_escape.stypy_varargs_param_name = None
    _string_escape.stypy_kwargs_param_name = None
    _string_escape.stypy_call_defaults = defaults
    _string_escape.stypy_call_varargs = varargs
    _string_escape.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, '_string_escape', ['match'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, '_string_escape', localization, ['match'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of '_string_escape(...)' code ##################

    
    # Assigning a Call to a Name (line 131):
    
    # Assigning a Call to a Name (line 131):
    
    # Call to group(...): (line 131)
    # Processing the call arguments (line 131)
    int_231878 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 131, 20), 'int')
    # Processing the call keyword arguments (line 131)
    kwargs_231879 = {}
    # Getting the type of 'match' (line 131)
    match_231876 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 131, 8), 'match', False)
    # Obtaining the member 'group' of a type (line 131)
    group_231877 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 131, 8), match_231876, 'group')
    # Calling group(args, kwargs) (line 131)
    group_call_result_231880 = invoke(stypy.reporting.localization.Localization(__file__, 131, 8), group_231877, *[int_231878], **kwargs_231879)
    
    # Assigning a type to the variable 'm' (line 131)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 131, 4), 'm', group_call_result_231880)
    
    
    # Getting the type of 'm' (line 132)
    m_231881 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 132, 7), 'm')
    str_231882 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 132, 12), 'str', '\\()')
    # Applying the binary operator 'in' (line 132)
    result_contains_231883 = python_operator(stypy.reporting.localization.Localization(__file__, 132, 7), 'in', m_231881, str_231882)
    
    # Testing the type of an if condition (line 132)
    if_condition_231884 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 132, 4), result_contains_231883)
    # Assigning a type to the variable 'if_condition_231884' (line 132)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 132, 4), 'if_condition_231884', if_condition_231884)
    # SSA begins for if statement (line 132)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    str_231885 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 133, 15), 'str', '\\')
    # Getting the type of 'm' (line 133)
    m_231886 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 133, 23), 'm')
    # Applying the binary operator '+' (line 133)
    result_add_231887 = python_operator(stypy.reporting.localization.Localization(__file__, 133, 15), '+', str_231885, m_231886)
    
    # Assigning a type to the variable 'stypy_return_type' (line 133)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 133, 8), 'stypy_return_type', result_add_231887)
    # SSA branch for the else part of an if statement (line 132)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'm' (line 134)
    m_231888 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 134, 9), 'm')
    str_231889 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 134, 14), 'str', '\n')
    # Applying the binary operator '==' (line 134)
    result_eq_231890 = python_operator(stypy.reporting.localization.Localization(__file__, 134, 9), '==', m_231888, str_231889)
    
    # Testing the type of an if condition (line 134)
    if_condition_231891 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 134, 9), result_eq_231890)
    # Assigning a type to the variable 'if_condition_231891' (line 134)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 134, 9), 'if_condition_231891', if_condition_231891)
    # SSA begins for if statement (line 134)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    str_231892 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 135, 15), 'str', '\\n')
    # Assigning a type to the variable 'stypy_return_type' (line 135)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 135, 8), 'stypy_return_type', str_231892)
    # SSA branch for the else part of an if statement (line 134)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'm' (line 136)
    m_231893 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 136, 9), 'm')
    str_231894 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 136, 14), 'str', '\r')
    # Applying the binary operator '==' (line 136)
    result_eq_231895 = python_operator(stypy.reporting.localization.Localization(__file__, 136, 9), '==', m_231893, str_231894)
    
    # Testing the type of an if condition (line 136)
    if_condition_231896 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 136, 9), result_eq_231895)
    # Assigning a type to the variable 'if_condition_231896' (line 136)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 136, 9), 'if_condition_231896', if_condition_231896)
    # SSA begins for if statement (line 136)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    str_231897 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 137, 15), 'str', '\\r')
    # Assigning a type to the variable 'stypy_return_type' (line 137)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 137, 8), 'stypy_return_type', str_231897)
    # SSA join for if statement (line 136)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 134)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 132)
    module_type_store = module_type_store.join_ssa_context()
    
    # Evaluating assert statement condition
    # Getting the type of 'False' (line 138)
    False_231898 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 138, 11), 'False')
    
    # ################# End of '_string_escape(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function '_string_escape' in the type store
    # Getting the type of 'stypy_return_type' (line 130)
    stypy_return_type_231899 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 130, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_231899)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function '_string_escape'
    return stypy_return_type_231899

# Assigning a type to the variable '_string_escape' (line 130)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 130, 0), '_string_escape', _string_escape)

@norecursion
def pdfRepr(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'pdfRepr'
    module_type_store = module_type_store.open_function_context('pdfRepr', 141, 0, False)
    
    # Passed parameters checking function
    pdfRepr.stypy_localization = localization
    pdfRepr.stypy_type_of_self = None
    pdfRepr.stypy_type_store = module_type_store
    pdfRepr.stypy_function_name = 'pdfRepr'
    pdfRepr.stypy_param_names_list = ['obj']
    pdfRepr.stypy_varargs_param_name = None
    pdfRepr.stypy_kwargs_param_name = None
    pdfRepr.stypy_call_defaults = defaults
    pdfRepr.stypy_call_varargs = varargs
    pdfRepr.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'pdfRepr', ['obj'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'pdfRepr', localization, ['obj'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'pdfRepr(...)' code ##################

    unicode_231900 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 142, 4), 'unicode', u'Map Python objects to PDF syntax.')
    
    # Type idiom detected: calculating its left and rigth part (line 145)
    unicode_231901 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 145, 20), 'unicode', u'pdfRepr')
    # Getting the type of 'obj' (line 145)
    obj_231902 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 145, 15), 'obj')
    
    (may_be_231903, more_types_in_union_231904) = may_provide_member(unicode_231901, obj_231902)

    if may_be_231903:

        if more_types_in_union_231904:
            # Runtime conditional SSA (line 145)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        # Assigning a type to the variable 'obj' (line 145)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 145, 4), 'obj', remove_not_member_provider_from_union(obj_231902, u'pdfRepr'))
        
        # Call to pdfRepr(...): (line 146)
        # Processing the call keyword arguments (line 146)
        kwargs_231907 = {}
        # Getting the type of 'obj' (line 146)
        obj_231905 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 146, 15), 'obj', False)
        # Obtaining the member 'pdfRepr' of a type (line 146)
        pdfRepr_231906 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 146, 15), obj_231905, 'pdfRepr')
        # Calling pdfRepr(args, kwargs) (line 146)
        pdfRepr_call_result_231908 = invoke(stypy.reporting.localization.Localization(__file__, 146, 15), pdfRepr_231906, *[], **kwargs_231907)
        
        # Assigning a type to the variable 'stypy_return_type' (line 146)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 146, 8), 'stypy_return_type', pdfRepr_call_result_231908)

        if more_types_in_union_231904:
            # Runtime conditional SSA for else branch (line 145)
            module_type_store.open_ssa_branch('idiom else')



    if ((not may_be_231903) or more_types_in_union_231904):
        # Assigning a type to the variable 'obj' (line 145)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 145, 4), 'obj', remove_member_provider_from_union(obj_231902, u'pdfRepr'))
        
        
        # Call to isinstance(...): (line 151)
        # Processing the call arguments (line 151)
        # Getting the type of 'obj' (line 151)
        obj_231910 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 151, 20), 'obj', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 151)
        tuple_231911 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 151, 26), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 151)
        # Adding element type (line 151)
        # Getting the type of 'float' (line 151)
        float_231912 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 151, 26), 'float', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 151, 26), tuple_231911, float_231912)
        # Adding element type (line 151)
        # Getting the type of 'np' (line 151)
        np_231913 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 151, 33), 'np', False)
        # Obtaining the member 'floating' of a type (line 151)
        floating_231914 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 151, 33), np_231913, 'floating')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 151, 26), tuple_231911, floating_231914)
        
        # Processing the call keyword arguments (line 151)
        kwargs_231915 = {}
        # Getting the type of 'isinstance' (line 151)
        isinstance_231909 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 151, 9), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 151)
        isinstance_call_result_231916 = invoke(stypy.reporting.localization.Localization(__file__, 151, 9), isinstance_231909, *[obj_231910, tuple_231911], **kwargs_231915)
        
        # Testing the type of an if condition (line 151)
        if_condition_231917 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 151, 9), isinstance_call_result_231916)
        # Assigning a type to the variable 'if_condition_231917' (line 151)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 151, 9), 'if_condition_231917', if_condition_231917)
        # SSA begins for if statement (line 151)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        
        
        # Call to isfinite(...): (line 152)
        # Processing the call arguments (line 152)
        # Getting the type of 'obj' (line 152)
        obj_231920 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 152, 27), 'obj', False)
        # Processing the call keyword arguments (line 152)
        kwargs_231921 = {}
        # Getting the type of 'np' (line 152)
        np_231918 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 152, 15), 'np', False)
        # Obtaining the member 'isfinite' of a type (line 152)
        isfinite_231919 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 152, 15), np_231918, 'isfinite')
        # Calling isfinite(args, kwargs) (line 152)
        isfinite_call_result_231922 = invoke(stypy.reporting.localization.Localization(__file__, 152, 15), isfinite_231919, *[obj_231920], **kwargs_231921)
        
        # Applying the 'not' unary operator (line 152)
        result_not__231923 = python_operator(stypy.reporting.localization.Localization(__file__, 152, 11), 'not', isfinite_call_result_231922)
        
        # Testing the type of an if condition (line 152)
        if_condition_231924 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 152, 8), result_not__231923)
        # Assigning a type to the variable 'if_condition_231924' (line 152)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 152, 8), 'if_condition_231924', if_condition_231924)
        # SSA begins for if statement (line 152)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 153)
        # Processing the call arguments (line 153)
        unicode_231926 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 153, 29), 'unicode', u'Can only output finite numbers in PDF')
        # Processing the call keyword arguments (line 153)
        kwargs_231927 = {}
        # Getting the type of 'ValueError' (line 153)
        ValueError_231925 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 153, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 153)
        ValueError_call_result_231928 = invoke(stypy.reporting.localization.Localization(__file__, 153, 18), ValueError_231925, *[unicode_231926], **kwargs_231927)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 153, 12), ValueError_call_result_231928, 'raise parameter', BaseException)
        # SSA join for if statement (line 152)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 154):
        
        # Assigning a Call to a Name (line 154):
        
        # Call to encode(...): (line 154)
        # Processing the call arguments (line 154)
        unicode_231933 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 154, 35), 'unicode', u'ascii')
        # Processing the call keyword arguments (line 154)
        kwargs_231934 = {}
        unicode_231929 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 154, 13), 'unicode', u'%.10f')
        # Getting the type of 'obj' (line 154)
        obj_231930 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 154, 23), 'obj', False)
        # Applying the binary operator '%' (line 154)
        result_mod_231931 = python_operator(stypy.reporting.localization.Localization(__file__, 154, 13), '%', unicode_231929, obj_231930)
        
        # Obtaining the member 'encode' of a type (line 154)
        encode_231932 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 154, 13), result_mod_231931, 'encode')
        # Calling encode(args, kwargs) (line 154)
        encode_call_result_231935 = invoke(stypy.reporting.localization.Localization(__file__, 154, 13), encode_231932, *[unicode_231933], **kwargs_231934)
        
        # Assigning a type to the variable 'r' (line 154)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 154, 8), 'r', encode_call_result_231935)
        
        # Call to rstrip(...): (line 155)
        # Processing the call arguments (line 155)
        str_231942 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 155, 37), 'str', '.')
        # Processing the call keyword arguments (line 155)
        kwargs_231943 = {}
        
        # Call to rstrip(...): (line 155)
        # Processing the call arguments (line 155)
        str_231938 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 155, 24), 'str', '0')
        # Processing the call keyword arguments (line 155)
        kwargs_231939 = {}
        # Getting the type of 'r' (line 155)
        r_231936 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 155, 15), 'r', False)
        # Obtaining the member 'rstrip' of a type (line 155)
        rstrip_231937 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 155, 15), r_231936, 'rstrip')
        # Calling rstrip(args, kwargs) (line 155)
        rstrip_call_result_231940 = invoke(stypy.reporting.localization.Localization(__file__, 155, 15), rstrip_231937, *[str_231938], **kwargs_231939)
        
        # Obtaining the member 'rstrip' of a type (line 155)
        rstrip_231941 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 155, 15), rstrip_call_result_231940, 'rstrip')
        # Calling rstrip(args, kwargs) (line 155)
        rstrip_call_result_231944 = invoke(stypy.reporting.localization.Localization(__file__, 155, 15), rstrip_231941, *[str_231942], **kwargs_231943)
        
        # Assigning a type to the variable 'stypy_return_type' (line 155)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 155, 8), 'stypy_return_type', rstrip_call_result_231944)
        # SSA branch for the else part of an if statement (line 151)
        module_type_store.open_ssa_branch('else')
        
        # Type idiom detected: calculating its left and rigth part (line 159)
        # Getting the type of 'bool' (line 159)
        bool_231945 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 159, 25), 'bool')
        # Getting the type of 'obj' (line 159)
        obj_231946 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 159, 20), 'obj')
        
        (may_be_231947, more_types_in_union_231948) = may_be_subtype(bool_231945, obj_231946)

        if may_be_231947:

            if more_types_in_union_231948:
                # Runtime conditional SSA (line 159)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            # Assigning a type to the variable 'obj' (line 159)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 159, 9), 'obj', remove_not_subtype_from_union(obj_231946, bool))
            
            # Obtaining the type of the subscript
            # Getting the type of 'obj' (line 160)
            obj_231949 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 160, 35), 'obj')
            
            # Obtaining an instance of the builtin type 'list' (line 160)
            list_231950 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 160, 15), 'list')
            # Adding type elements to the builtin type 'list' instance (line 160)
            # Adding element type (line 160)
            str_231951 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 160, 16), 'str', 'false')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 160, 15), list_231950, str_231951)
            # Adding element type (line 160)
            str_231952 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 160, 26), 'str', 'true')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 160, 15), list_231950, str_231952)
            
            # Obtaining the member '__getitem__' of a type (line 160)
            getitem___231953 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 160, 15), list_231950, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 160)
            subscript_call_result_231954 = invoke(stypy.reporting.localization.Localization(__file__, 160, 15), getitem___231953, obj_231949)
            
            # Assigning a type to the variable 'stypy_return_type' (line 160)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 160, 8), 'stypy_return_type', subscript_call_result_231954)

            if more_types_in_union_231948:
                # Runtime conditional SSA for else branch (line 159)
                module_type_store.open_ssa_branch('idiom else')



        if ((not may_be_231947) or more_types_in_union_231948):
            # Assigning a type to the variable 'obj' (line 159)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 159, 9), 'obj', remove_subtype_from_union(obj_231946, bool))
            
            
            # Call to isinstance(...): (line 163)
            # Processing the call arguments (line 163)
            # Getting the type of 'obj' (line 163)
            obj_231956 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 163, 20), 'obj', False)
            
            # Obtaining an instance of the builtin type 'tuple' (line 163)
            tuple_231957 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 163, 26), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 163)
            # Adding element type (line 163)
            # Getting the type of 'six' (line 163)
            six_231958 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 163, 26), 'six', False)
            # Obtaining the member 'integer_types' of a type (line 163)
            integer_types_231959 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 163, 26), six_231958, 'integer_types')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 163, 26), tuple_231957, integer_types_231959)
            # Adding element type (line 163)
            # Getting the type of 'np' (line 163)
            np_231960 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 163, 45), 'np', False)
            # Obtaining the member 'integer' of a type (line 163)
            integer_231961 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 163, 45), np_231960, 'integer')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 163, 26), tuple_231957, integer_231961)
            
            # Processing the call keyword arguments (line 163)
            kwargs_231962 = {}
            # Getting the type of 'isinstance' (line 163)
            isinstance_231955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 163, 9), 'isinstance', False)
            # Calling isinstance(args, kwargs) (line 163)
            isinstance_call_result_231963 = invoke(stypy.reporting.localization.Localization(__file__, 163, 9), isinstance_231955, *[obj_231956, tuple_231957], **kwargs_231962)
            
            # Testing the type of an if condition (line 163)
            if_condition_231964 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 163, 9), isinstance_call_result_231963)
            # Assigning a type to the variable 'if_condition_231964' (line 163)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 163, 9), 'if_condition_231964', if_condition_231964)
            # SSA begins for if statement (line 163)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Call to encode(...): (line 164)
            # Processing the call arguments (line 164)
            unicode_231969 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 164, 35), 'unicode', u'ascii')
            # Processing the call keyword arguments (line 164)
            kwargs_231970 = {}
            unicode_231965 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 164, 16), 'unicode', u'%d')
            # Getting the type of 'obj' (line 164)
            obj_231966 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 164, 23), 'obj', False)
            # Applying the binary operator '%' (line 164)
            result_mod_231967 = python_operator(stypy.reporting.localization.Localization(__file__, 164, 16), '%', unicode_231965, obj_231966)
            
            # Obtaining the member 'encode' of a type (line 164)
            encode_231968 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 164, 16), result_mod_231967, 'encode')
            # Calling encode(args, kwargs) (line 164)
            encode_call_result_231971 = invoke(stypy.reporting.localization.Localization(__file__, 164, 16), encode_231968, *[unicode_231969], **kwargs_231970)
            
            # Assigning a type to the variable 'stypy_return_type' (line 164)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 164, 8), 'stypy_return_type', encode_call_result_231971)
            # SSA branch for the else part of an if statement (line 163)
            module_type_store.open_ssa_branch('else')
            
            
            # Call to isinstance(...): (line 167)
            # Processing the call arguments (line 167)
            # Getting the type of 'obj' (line 167)
            obj_231973 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 167, 20), 'obj', False)
            # Getting the type of 'six' (line 167)
            six_231974 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 167, 25), 'six', False)
            # Obtaining the member 'text_type' of a type (line 167)
            text_type_231975 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 167, 25), six_231974, 'text_type')
            # Processing the call keyword arguments (line 167)
            kwargs_231976 = {}
            # Getting the type of 'isinstance' (line 167)
            isinstance_231972 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 167, 9), 'isinstance', False)
            # Calling isinstance(args, kwargs) (line 167)
            isinstance_call_result_231977 = invoke(stypy.reporting.localization.Localization(__file__, 167, 9), isinstance_231972, *[obj_231973, text_type_231975], **kwargs_231976)
            
            # Testing the type of an if condition (line 167)
            if_condition_231978 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 167, 9), isinstance_call_result_231977)
            # Assigning a type to the variable 'if_condition_231978' (line 167)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 167, 9), 'if_condition_231978', if_condition_231978)
            # SSA begins for if statement (line 167)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            
            # SSA begins for try-except statement (line 168)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
            
            # Assigning a Call to a Name (line 170):
            
            # Assigning a Call to a Name (line 170):
            
            # Call to encode(...): (line 170)
            # Processing the call arguments (line 170)
            unicode_231981 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 170, 27), 'unicode', u'ASCII')
            # Processing the call keyword arguments (line 170)
            kwargs_231982 = {}
            # Getting the type of 'obj' (line 170)
            obj_231979 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 170, 16), 'obj', False)
            # Obtaining the member 'encode' of a type (line 170)
            encode_231980 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 170, 16), obj_231979, 'encode')
            # Calling encode(args, kwargs) (line 170)
            encode_call_result_231983 = invoke(stypy.reporting.localization.Localization(__file__, 170, 16), encode_231980, *[unicode_231981], **kwargs_231982)
            
            # Assigning a type to the variable 's' (line 170)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 170, 12), 's', encode_call_result_231983)
            
            # Call to pdfRepr(...): (line 171)
            # Processing the call arguments (line 171)
            # Getting the type of 's' (line 171)
            s_231985 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 171, 27), 's', False)
            # Processing the call keyword arguments (line 171)
            kwargs_231986 = {}
            # Getting the type of 'pdfRepr' (line 171)
            pdfRepr_231984 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 171, 19), 'pdfRepr', False)
            # Calling pdfRepr(args, kwargs) (line 171)
            pdfRepr_call_result_231987 = invoke(stypy.reporting.localization.Localization(__file__, 171, 19), pdfRepr_231984, *[s_231985], **kwargs_231986)
            
            # Assigning a type to the variable 'stypy_return_type' (line 171)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 171, 12), 'stypy_return_type', pdfRepr_call_result_231987)
            # SSA branch for the except part of a try statement (line 168)
            # SSA branch for the except 'UnicodeEncodeError' branch of a try statement (line 168)
            module_type_store.open_ssa_branch('except')
            
            # Assigning a BinOp to a Name (line 173):
            
            # Assigning a BinOp to a Name (line 173):
            # Getting the type of 'codecs' (line 173)
            codecs_231988 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 173, 16), 'codecs')
            # Obtaining the member 'BOM_UTF16_BE' of a type (line 173)
            BOM_UTF16_BE_231989 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 173, 16), codecs_231988, 'BOM_UTF16_BE')
            
            # Call to encode(...): (line 173)
            # Processing the call arguments (line 173)
            unicode_231992 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 173, 49), 'unicode', u'UTF-16BE')
            # Processing the call keyword arguments (line 173)
            kwargs_231993 = {}
            # Getting the type of 'obj' (line 173)
            obj_231990 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 173, 38), 'obj', False)
            # Obtaining the member 'encode' of a type (line 173)
            encode_231991 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 173, 38), obj_231990, 'encode')
            # Calling encode(args, kwargs) (line 173)
            encode_call_result_231994 = invoke(stypy.reporting.localization.Localization(__file__, 173, 38), encode_231991, *[unicode_231992], **kwargs_231993)
            
            # Applying the binary operator '+' (line 173)
            result_add_231995 = python_operator(stypy.reporting.localization.Localization(__file__, 173, 16), '+', BOM_UTF16_BE_231989, encode_call_result_231994)
            
            # Assigning a type to the variable 's' (line 173)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 173, 12), 's', result_add_231995)
            
            # Call to pdfRepr(...): (line 174)
            # Processing the call arguments (line 174)
            # Getting the type of 's' (line 174)
            s_231997 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 174, 27), 's', False)
            # Processing the call keyword arguments (line 174)
            kwargs_231998 = {}
            # Getting the type of 'pdfRepr' (line 174)
            pdfRepr_231996 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 174, 19), 'pdfRepr', False)
            # Calling pdfRepr(args, kwargs) (line 174)
            pdfRepr_call_result_231999 = invoke(stypy.reporting.localization.Localization(__file__, 174, 19), pdfRepr_231996, *[s_231997], **kwargs_231998)
            
            # Assigning a type to the variable 'stypy_return_type' (line 174)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 174, 12), 'stypy_return_type', pdfRepr_call_result_231999)
            # SSA join for try-except statement (line 168)
            module_type_store = module_type_store.join_ssa_context()
            
            # SSA branch for the else part of an if statement (line 167)
            module_type_store.open_ssa_branch('else')
            
            # Type idiom detected: calculating its left and rigth part (line 180)
            # Getting the type of 'bytes' (line 180)
            bytes_232000 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 180, 25), 'bytes')
            # Getting the type of 'obj' (line 180)
            obj_232001 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 180, 20), 'obj')
            
            (may_be_232002, more_types_in_union_232003) = may_be_subtype(bytes_232000, obj_232001)

            if may_be_232002:

                if more_types_in_union_232003:
                    # Runtime conditional SSA (line 180)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
                else:
                    module_type_store = module_type_store

                # Assigning a type to the variable 'obj' (line 180)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 180, 9), 'obj', remove_not_subtype_from_union(obj_232001, bytes))
                str_232004 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 181, 15), 'str', '(')
                
                # Call to sub(...): (line 181)
                # Processing the call arguments (line 181)
                # Getting the type of '_string_escape' (line 181)
                _string_escape_232007 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 181, 47), '_string_escape', False)
                # Getting the type of 'obj' (line 181)
                obj_232008 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 181, 63), 'obj', False)
                # Processing the call keyword arguments (line 181)
                kwargs_232009 = {}
                # Getting the type of '_string_escape_regex' (line 181)
                _string_escape_regex_232005 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 181, 22), '_string_escape_regex', False)
                # Obtaining the member 'sub' of a type (line 181)
                sub_232006 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 181, 22), _string_escape_regex_232005, 'sub')
                # Calling sub(args, kwargs) (line 181)
                sub_call_result_232010 = invoke(stypy.reporting.localization.Localization(__file__, 181, 22), sub_232006, *[_string_escape_232007, obj_232008], **kwargs_232009)
                
                # Applying the binary operator '+' (line 181)
                result_add_232011 = python_operator(stypy.reporting.localization.Localization(__file__, 181, 15), '+', str_232004, sub_call_result_232010)
                
                str_232012 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 181, 70), 'str', ')')
                # Applying the binary operator '+' (line 181)
                result_add_232013 = python_operator(stypy.reporting.localization.Localization(__file__, 181, 68), '+', result_add_232011, str_232012)
                
                # Assigning a type to the variable 'stypy_return_type' (line 181)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 181, 8), 'stypy_return_type', result_add_232013)

                if more_types_in_union_232003:
                    # Runtime conditional SSA for else branch (line 180)
                    module_type_store.open_ssa_branch('idiom else')



            if ((not may_be_232002) or more_types_in_union_232003):
                # Assigning a type to the variable 'obj' (line 180)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 180, 9), 'obj', remove_subtype_from_union(obj_232001, bytes))
                
                # Type idiom detected: calculating its left and rigth part (line 187)
                # Getting the type of 'dict' (line 187)
                dict_232014 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 187, 25), 'dict')
                # Getting the type of 'obj' (line 187)
                obj_232015 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 187, 20), 'obj')
                
                (may_be_232016, more_types_in_union_232017) = may_be_subtype(dict_232014, obj_232015)

                if may_be_232016:

                    if more_types_in_union_232017:
                        # Runtime conditional SSA (line 187)
                        module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
                    else:
                        module_type_store = module_type_store

                    # Assigning a type to the variable 'obj' (line 187)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 187, 9), 'obj', remove_not_subtype_from_union(obj_232015, dict))
                    
                    # Assigning a List to a Name (line 188):
                    
                    # Assigning a List to a Name (line 188):
                    
                    # Obtaining an instance of the builtin type 'list' (line 188)
                    list_232018 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 188, 12), 'list')
                    # Adding type elements to the builtin type 'list' instance (line 188)
                    # Adding element type (line 188)
                    str_232019 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 188, 13), 'str', '<<')
                    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 188, 12), list_232018, str_232019)
                    
                    # Assigning a type to the variable 'r' (line 188)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 188, 8), 'r', list_232018)
                    
                    # Call to extend(...): (line 189)
                    # Processing the call arguments (line 189)
                    # Calculating list comprehension
                    # Calculating comprehension expression
                    
                    # Call to sorted(...): (line 190)
                    # Processing the call arguments (line 190)
                    # Getting the type of 'obj' (line 190)
                    obj_232040 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 190, 36), 'obj', False)
                    # Processing the call keyword arguments (line 190)
                    kwargs_232041 = {}
                    # Getting the type of 'sorted' (line 190)
                    sorted_232039 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 190, 29), 'sorted', False)
                    # Calling sorted(args, kwargs) (line 190)
                    sorted_call_result_232042 = invoke(stypy.reporting.localization.Localization(__file__, 190, 29), sorted_232039, *[obj_232040], **kwargs_232041)
                    
                    comprehension_232043 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 189, 18), sorted_call_result_232042)
                    # Assigning a type to the variable 'key' (line 189)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 189, 18), 'key', comprehension_232043)
                    
                    # Call to pdfRepr(...): (line 189)
                    # Processing the call keyword arguments (line 189)
                    kwargs_232027 = {}
                    
                    # Call to Name(...): (line 189)
                    # Processing the call arguments (line 189)
                    # Getting the type of 'key' (line 189)
                    key_232023 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 189, 23), 'key', False)
                    # Processing the call keyword arguments (line 189)
                    kwargs_232024 = {}
                    # Getting the type of 'Name' (line 189)
                    Name_232022 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 189, 18), 'Name', False)
                    # Calling Name(args, kwargs) (line 189)
                    Name_call_result_232025 = invoke(stypy.reporting.localization.Localization(__file__, 189, 18), Name_232022, *[key_232023], **kwargs_232024)
                    
                    # Obtaining the member 'pdfRepr' of a type (line 189)
                    pdfRepr_232026 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 189, 18), Name_call_result_232025, 'pdfRepr')
                    # Calling pdfRepr(args, kwargs) (line 189)
                    pdfRepr_call_result_232028 = invoke(stypy.reporting.localization.Localization(__file__, 189, 18), pdfRepr_232026, *[], **kwargs_232027)
                    
                    str_232029 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 189, 40), 'str', ' ')
                    # Applying the binary operator '+' (line 189)
                    result_add_232030 = python_operator(stypy.reporting.localization.Localization(__file__, 189, 18), '+', pdfRepr_call_result_232028, str_232029)
                    
                    
                    # Call to pdfRepr(...): (line 189)
                    # Processing the call arguments (line 189)
                    
                    # Obtaining the type of the subscript
                    # Getting the type of 'key' (line 189)
                    key_232032 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 189, 59), 'key', False)
                    # Getting the type of 'obj' (line 189)
                    obj_232033 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 189, 55), 'obj', False)
                    # Obtaining the member '__getitem__' of a type (line 189)
                    getitem___232034 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 189, 55), obj_232033, '__getitem__')
                    # Calling the subscript (__getitem__) to obtain the elements type (line 189)
                    subscript_call_result_232035 = invoke(stypy.reporting.localization.Localization(__file__, 189, 55), getitem___232034, key_232032)
                    
                    # Processing the call keyword arguments (line 189)
                    kwargs_232036 = {}
                    # Getting the type of 'pdfRepr' (line 189)
                    pdfRepr_232031 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 189, 47), 'pdfRepr', False)
                    # Calling pdfRepr(args, kwargs) (line 189)
                    pdfRepr_call_result_232037 = invoke(stypy.reporting.localization.Localization(__file__, 189, 47), pdfRepr_232031, *[subscript_call_result_232035], **kwargs_232036)
                    
                    # Applying the binary operator '+' (line 189)
                    result_add_232038 = python_operator(stypy.reporting.localization.Localization(__file__, 189, 45), '+', result_add_232030, pdfRepr_call_result_232037)
                    
                    list_232044 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 189, 18), 'list')
                    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 189, 18), list_232044, result_add_232038)
                    # Processing the call keyword arguments (line 189)
                    kwargs_232045 = {}
                    # Getting the type of 'r' (line 189)
                    r_232020 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 189, 8), 'r', False)
                    # Obtaining the member 'extend' of a type (line 189)
                    extend_232021 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 189, 8), r_232020, 'extend')
                    # Calling extend(args, kwargs) (line 189)
                    extend_call_result_232046 = invoke(stypy.reporting.localization.Localization(__file__, 189, 8), extend_232021, *[list_232044], **kwargs_232045)
                    
                    
                    # Call to append(...): (line 191)
                    # Processing the call arguments (line 191)
                    str_232049 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 191, 17), 'str', '>>')
                    # Processing the call keyword arguments (line 191)
                    kwargs_232050 = {}
                    # Getting the type of 'r' (line 191)
                    r_232047 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 191, 8), 'r', False)
                    # Obtaining the member 'append' of a type (line 191)
                    append_232048 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 191, 8), r_232047, 'append')
                    # Calling append(args, kwargs) (line 191)
                    append_call_result_232051 = invoke(stypy.reporting.localization.Localization(__file__, 191, 8), append_232048, *[str_232049], **kwargs_232050)
                    
                    
                    # Call to fill(...): (line 192)
                    # Processing the call arguments (line 192)
                    # Getting the type of 'r' (line 192)
                    r_232053 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 192, 20), 'r', False)
                    # Processing the call keyword arguments (line 192)
                    kwargs_232054 = {}
                    # Getting the type of 'fill' (line 192)
                    fill_232052 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 192, 15), 'fill', False)
                    # Calling fill(args, kwargs) (line 192)
                    fill_call_result_232055 = invoke(stypy.reporting.localization.Localization(__file__, 192, 15), fill_232052, *[r_232053], **kwargs_232054)
                    
                    # Assigning a type to the variable 'stypy_return_type' (line 192)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 192, 8), 'stypy_return_type', fill_call_result_232055)

                    if more_types_in_union_232017:
                        # Runtime conditional SSA for else branch (line 187)
                        module_type_store.open_ssa_branch('idiom else')



                if ((not may_be_232016) or more_types_in_union_232017):
                    # Assigning a type to the variable 'obj' (line 187)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 187, 9), 'obj', remove_subtype_from_union(obj_232015, dict))
                    
                    
                    # Call to isinstance(...): (line 195)
                    # Processing the call arguments (line 195)
                    # Getting the type of 'obj' (line 195)
                    obj_232057 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 195, 20), 'obj', False)
                    
                    # Obtaining an instance of the builtin type 'tuple' (line 195)
                    tuple_232058 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 195, 26), 'tuple')
                    # Adding type elements to the builtin type 'tuple' instance (line 195)
                    # Adding element type (line 195)
                    # Getting the type of 'list' (line 195)
                    list_232059 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 195, 26), 'list', False)
                    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 195, 26), tuple_232058, list_232059)
                    # Adding element type (line 195)
                    # Getting the type of 'tuple' (line 195)
                    tuple_232060 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 195, 32), 'tuple', False)
                    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 195, 26), tuple_232058, tuple_232060)
                    
                    # Processing the call keyword arguments (line 195)
                    kwargs_232061 = {}
                    # Getting the type of 'isinstance' (line 195)
                    isinstance_232056 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 195, 9), 'isinstance', False)
                    # Calling isinstance(args, kwargs) (line 195)
                    isinstance_call_result_232062 = invoke(stypy.reporting.localization.Localization(__file__, 195, 9), isinstance_232056, *[obj_232057, tuple_232058], **kwargs_232061)
                    
                    # Testing the type of an if condition (line 195)
                    if_condition_232063 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 195, 9), isinstance_call_result_232062)
                    # Assigning a type to the variable 'if_condition_232063' (line 195)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 195, 9), 'if_condition_232063', if_condition_232063)
                    # SSA begins for if statement (line 195)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                    
                    # Assigning a List to a Name (line 196):
                    
                    # Assigning a List to a Name (line 196):
                    
                    # Obtaining an instance of the builtin type 'list' (line 196)
                    list_232064 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 196, 12), 'list')
                    # Adding type elements to the builtin type 'list' instance (line 196)
                    # Adding element type (line 196)
                    str_232065 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 196, 13), 'str', '[')
                    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 196, 12), list_232064, str_232065)
                    
                    # Assigning a type to the variable 'r' (line 196)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 196, 8), 'r', list_232064)
                    
                    # Call to extend(...): (line 197)
                    # Processing the call arguments (line 197)
                    # Calculating list comprehension
                    # Calculating comprehension expression
                    # Getting the type of 'obj' (line 197)
                    obj_232072 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 197, 42), 'obj', False)
                    comprehension_232073 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 197, 18), obj_232072)
                    # Assigning a type to the variable 'val' (line 197)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 197, 18), 'val', comprehension_232073)
                    
                    # Call to pdfRepr(...): (line 197)
                    # Processing the call arguments (line 197)
                    # Getting the type of 'val' (line 197)
                    val_232069 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 197, 26), 'val', False)
                    # Processing the call keyword arguments (line 197)
                    kwargs_232070 = {}
                    # Getting the type of 'pdfRepr' (line 197)
                    pdfRepr_232068 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 197, 18), 'pdfRepr', False)
                    # Calling pdfRepr(args, kwargs) (line 197)
                    pdfRepr_call_result_232071 = invoke(stypy.reporting.localization.Localization(__file__, 197, 18), pdfRepr_232068, *[val_232069], **kwargs_232070)
                    
                    list_232074 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 197, 18), 'list')
                    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 197, 18), list_232074, pdfRepr_call_result_232071)
                    # Processing the call keyword arguments (line 197)
                    kwargs_232075 = {}
                    # Getting the type of 'r' (line 197)
                    r_232066 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 197, 8), 'r', False)
                    # Obtaining the member 'extend' of a type (line 197)
                    extend_232067 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 197, 8), r_232066, 'extend')
                    # Calling extend(args, kwargs) (line 197)
                    extend_call_result_232076 = invoke(stypy.reporting.localization.Localization(__file__, 197, 8), extend_232067, *[list_232074], **kwargs_232075)
                    
                    
                    # Call to append(...): (line 198)
                    # Processing the call arguments (line 198)
                    str_232079 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 198, 17), 'str', ']')
                    # Processing the call keyword arguments (line 198)
                    kwargs_232080 = {}
                    # Getting the type of 'r' (line 198)
                    r_232077 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 198, 8), 'r', False)
                    # Obtaining the member 'append' of a type (line 198)
                    append_232078 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 198, 8), r_232077, 'append')
                    # Calling append(args, kwargs) (line 198)
                    append_call_result_232081 = invoke(stypy.reporting.localization.Localization(__file__, 198, 8), append_232078, *[str_232079], **kwargs_232080)
                    
                    
                    # Call to fill(...): (line 199)
                    # Processing the call arguments (line 199)
                    # Getting the type of 'r' (line 199)
                    r_232083 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 199, 20), 'r', False)
                    # Processing the call keyword arguments (line 199)
                    kwargs_232084 = {}
                    # Getting the type of 'fill' (line 199)
                    fill_232082 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 199, 15), 'fill', False)
                    # Calling fill(args, kwargs) (line 199)
                    fill_call_result_232085 = invoke(stypy.reporting.localization.Localization(__file__, 199, 15), fill_232082, *[r_232083], **kwargs_232084)
                    
                    # Assigning a type to the variable 'stypy_return_type' (line 199)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 199, 8), 'stypy_return_type', fill_call_result_232085)
                    # SSA branch for the else part of an if statement (line 195)
                    module_type_store.open_ssa_branch('else')
                    
                    # Type idiom detected: calculating its left and rigth part (line 202)
                    # Getting the type of 'obj' (line 202)
                    obj_232086 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 202, 9), 'obj')
                    # Getting the type of 'None' (line 202)
                    None_232087 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 202, 16), 'None')
                    
                    (may_be_232088, more_types_in_union_232089) = may_be_none(obj_232086, None_232087)

                    if may_be_232088:

                        if more_types_in_union_232089:
                            # Runtime conditional SSA (line 202)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
                        else:
                            module_type_store = module_type_store

                        str_232090 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 203, 15), 'str', 'null')
                        # Assigning a type to the variable 'stypy_return_type' (line 203)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 203, 8), 'stypy_return_type', str_232090)

                        if more_types_in_union_232089:
                            # Runtime conditional SSA for else branch (line 202)
                            module_type_store.open_ssa_branch('idiom else')



                    if ((not may_be_232088) or more_types_in_union_232089):
                        
                        
                        # Call to isinstance(...): (line 206)
                        # Processing the call arguments (line 206)
                        # Getting the type of 'obj' (line 206)
                        obj_232092 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 206, 20), 'obj', False)
                        # Getting the type of 'datetime' (line 206)
                        datetime_232093 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 206, 25), 'datetime', False)
                        # Processing the call keyword arguments (line 206)
                        kwargs_232094 = {}
                        # Getting the type of 'isinstance' (line 206)
                        isinstance_232091 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 206, 9), 'isinstance', False)
                        # Calling isinstance(args, kwargs) (line 206)
                        isinstance_call_result_232095 = invoke(stypy.reporting.localization.Localization(__file__, 206, 9), isinstance_232091, *[obj_232092, datetime_232093], **kwargs_232094)
                        
                        # Testing the type of an if condition (line 206)
                        if_condition_232096 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 206, 9), isinstance_call_result_232095)
                        # Assigning a type to the variable 'if_condition_232096' (line 206)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 206, 9), 'if_condition_232096', if_condition_232096)
                        # SSA begins for if statement (line 206)
                        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                        
                        # Assigning a Call to a Name (line 207):
                        
                        # Assigning a Call to a Name (line 207):
                        
                        # Call to strftime(...): (line 207)
                        # Processing the call arguments (line 207)
                        unicode_232099 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 207, 25), 'unicode', u'D:%Y%m%d%H%M%S')
                        # Processing the call keyword arguments (line 207)
                        kwargs_232100 = {}
                        # Getting the type of 'obj' (line 207)
                        obj_232097 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 207, 12), 'obj', False)
                        # Obtaining the member 'strftime' of a type (line 207)
                        strftime_232098 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 207, 12), obj_232097, 'strftime')
                        # Calling strftime(args, kwargs) (line 207)
                        strftime_call_result_232101 = invoke(stypy.reporting.localization.Localization(__file__, 207, 12), strftime_232098, *[unicode_232099], **kwargs_232100)
                        
                        # Assigning a type to the variable 'r' (line 207)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 207, 8), 'r', strftime_call_result_232101)
                        
                        # Assigning a Call to a Name (line 208):
                        
                        # Assigning a Call to a Name (line 208):
                        
                        # Call to utcoffset(...): (line 208)
                        # Processing the call keyword arguments (line 208)
                        kwargs_232104 = {}
                        # Getting the type of 'obj' (line 208)
                        obj_232102 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 208, 12), 'obj', False)
                        # Obtaining the member 'utcoffset' of a type (line 208)
                        utcoffset_232103 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 208, 12), obj_232102, 'utcoffset')
                        # Calling utcoffset(args, kwargs) (line 208)
                        utcoffset_call_result_232105 = invoke(stypy.reporting.localization.Localization(__file__, 208, 12), utcoffset_232103, *[], **kwargs_232104)
                        
                        # Assigning a type to the variable 'z' (line 208)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 208, 8), 'z', utcoffset_call_result_232105)
                        
                        # Type idiom detected: calculating its left and rigth part (line 209)
                        # Getting the type of 'z' (line 209)
                        z_232106 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 209, 8), 'z')
                        # Getting the type of 'None' (line 209)
                        None_232107 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 209, 20), 'None')
                        
                        (may_be_232108, more_types_in_union_232109) = may_not_be_none(z_232106, None_232107)

                        if may_be_232108:

                            if more_types_in_union_232109:
                                # Runtime conditional SSA (line 209)
                                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
                            else:
                                module_type_store = module_type_store

                            
                            # Assigning a Attribute to a Name (line 210):
                            
                            # Assigning a Attribute to a Name (line 210):
                            # Getting the type of 'z' (line 210)
                            z_232110 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 210, 16), 'z')
                            # Obtaining the member 'seconds' of a type (line 210)
                            seconds_232111 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 210, 16), z_232110, 'seconds')
                            # Assigning a type to the variable 'z' (line 210)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 210, 12), 'z', seconds_232111)

                            if more_types_in_union_232109:
                                # Runtime conditional SSA for else branch (line 209)
                                module_type_store.open_ssa_branch('idiom else')



                        if ((not may_be_232108) or more_types_in_union_232109):
                            
                            # Getting the type of 'time' (line 212)
                            time_232112 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 212, 15), 'time')
                            # Obtaining the member 'daylight' of a type (line 212)
                            daylight_232113 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 212, 15), time_232112, 'daylight')
                            # Testing the type of an if condition (line 212)
                            if_condition_232114 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 212, 12), daylight_232113)
                            # Assigning a type to the variable 'if_condition_232114' (line 212)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 212, 12), 'if_condition_232114', if_condition_232114)
                            # SSA begins for if statement (line 212)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            # Assigning a Attribute to a Name (line 213):
                            
                            # Assigning a Attribute to a Name (line 213):
                            # Getting the type of 'time' (line 213)
                            time_232115 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 213, 20), 'time')
                            # Obtaining the member 'altzone' of a type (line 213)
                            altzone_232116 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 213, 20), time_232115, 'altzone')
                            # Assigning a type to the variable 'z' (line 213)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 213, 16), 'z', altzone_232116)
                            # SSA branch for the else part of an if statement (line 212)
                            module_type_store.open_ssa_branch('else')
                            
                            # Assigning a Attribute to a Name (line 215):
                            
                            # Assigning a Attribute to a Name (line 215):
                            # Getting the type of 'time' (line 215)
                            time_232117 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 215, 20), 'time')
                            # Obtaining the member 'timezone' of a type (line 215)
                            timezone_232118 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 215, 20), time_232117, 'timezone')
                            # Assigning a type to the variable 'z' (line 215)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 215, 16), 'z', timezone_232118)
                            # SSA join for if statement (line 212)
                            module_type_store = module_type_store.join_ssa_context()
                            

                            if (may_be_232108 and more_types_in_union_232109):
                                # SSA join for if statement (line 209)
                                module_type_store = module_type_store.join_ssa_context()


                        
                        
                        
                        # Getting the type of 'z' (line 216)
                        z_232119 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 216, 11), 'z')
                        int_232120 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 216, 16), 'int')
                        # Applying the binary operator '==' (line 216)
                        result_eq_232121 = python_operator(stypy.reporting.localization.Localization(__file__, 216, 11), '==', z_232119, int_232120)
                        
                        # Testing the type of an if condition (line 216)
                        if_condition_232122 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 216, 8), result_eq_232121)
                        # Assigning a type to the variable 'if_condition_232122' (line 216)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 216, 8), 'if_condition_232122', if_condition_232122)
                        # SSA begins for if statement (line 216)
                        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                        
                        # Getting the type of 'r' (line 217)
                        r_232123 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 217, 12), 'r')
                        unicode_232124 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 217, 17), 'unicode', u'Z')
                        # Applying the binary operator '+=' (line 217)
                        result_iadd_232125 = python_operator(stypy.reporting.localization.Localization(__file__, 217, 12), '+=', r_232123, unicode_232124)
                        # Assigning a type to the variable 'r' (line 217)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 217, 12), 'r', result_iadd_232125)
                        
                        # SSA branch for the else part of an if statement (line 216)
                        module_type_store.open_ssa_branch('else')
                        
                        
                        # Getting the type of 'z' (line 218)
                        z_232126 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 218, 13), 'z')
                        int_232127 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 218, 17), 'int')
                        # Applying the binary operator '<' (line 218)
                        result_lt_232128 = python_operator(stypy.reporting.localization.Localization(__file__, 218, 13), '<', z_232126, int_232127)
                        
                        # Testing the type of an if condition (line 218)
                        if_condition_232129 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 218, 13), result_lt_232128)
                        # Assigning a type to the variable 'if_condition_232129' (line 218)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 218, 13), 'if_condition_232129', if_condition_232129)
                        # SSA begins for if statement (line 218)
                        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                        
                        # Getting the type of 'r' (line 219)
                        r_232130 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 219, 12), 'r')
                        unicode_232131 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 219, 17), 'unicode', u"+%02d'%02d'")
                        
                        # Obtaining an instance of the builtin type 'tuple' (line 219)
                        tuple_232132 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 219, 34), 'tuple')
                        # Adding type elements to the builtin type 'tuple' instance (line 219)
                        # Adding element type (line 219)
                        
                        # Getting the type of 'z' (line 219)
                        z_232133 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 219, 36), 'z')
                        # Applying the 'usub' unary operator (line 219)
                        result___neg___232134 = python_operator(stypy.reporting.localization.Localization(__file__, 219, 35), 'usub', z_232133)
                        
                        int_232135 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 219, 42), 'int')
                        # Applying the binary operator '//' (line 219)
                        result_floordiv_232136 = python_operator(stypy.reporting.localization.Localization(__file__, 219, 34), '//', result___neg___232134, int_232135)
                        
                        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 219, 34), tuple_232132, result_floordiv_232136)
                        # Adding element type (line 219)
                        
                        # Getting the type of 'z' (line 219)
                        z_232137 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 219, 50), 'z')
                        # Applying the 'usub' unary operator (line 219)
                        result___neg___232138 = python_operator(stypy.reporting.localization.Localization(__file__, 219, 49), 'usub', z_232137)
                        
                        int_232139 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 219, 55), 'int')
                        # Applying the binary operator '%' (line 219)
                        result_mod_232140 = python_operator(stypy.reporting.localization.Localization(__file__, 219, 48), '%', result___neg___232138, int_232139)
                        
                        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 219, 34), tuple_232132, result_mod_232140)
                        
                        # Applying the binary operator '%' (line 219)
                        result_mod_232141 = python_operator(stypy.reporting.localization.Localization(__file__, 219, 17), '%', unicode_232131, tuple_232132)
                        
                        # Applying the binary operator '+=' (line 219)
                        result_iadd_232142 = python_operator(stypy.reporting.localization.Localization(__file__, 219, 12), '+=', r_232130, result_mod_232141)
                        # Assigning a type to the variable 'r' (line 219)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 219, 12), 'r', result_iadd_232142)
                        
                        # SSA branch for the else part of an if statement (line 218)
                        module_type_store.open_ssa_branch('else')
                        
                        # Getting the type of 'r' (line 221)
                        r_232143 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 221, 12), 'r')
                        unicode_232144 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 221, 17), 'unicode', u"-%02d'%02d'")
                        
                        # Obtaining an instance of the builtin type 'tuple' (line 221)
                        tuple_232145 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 221, 34), 'tuple')
                        # Adding type elements to the builtin type 'tuple' instance (line 221)
                        # Adding element type (line 221)
                        # Getting the type of 'z' (line 221)
                        z_232146 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 221, 34), 'z')
                        int_232147 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 221, 39), 'int')
                        # Applying the binary operator '//' (line 221)
                        result_floordiv_232148 = python_operator(stypy.reporting.localization.Localization(__file__, 221, 34), '//', z_232146, int_232147)
                        
                        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 221, 34), tuple_232145, result_floordiv_232148)
                        # Adding element type (line 221)
                        # Getting the type of 'z' (line 221)
                        z_232149 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 221, 45), 'z')
                        int_232150 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 221, 49), 'int')
                        # Applying the binary operator '%' (line 221)
                        result_mod_232151 = python_operator(stypy.reporting.localization.Localization(__file__, 221, 45), '%', z_232149, int_232150)
                        
                        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 221, 34), tuple_232145, result_mod_232151)
                        
                        # Applying the binary operator '%' (line 221)
                        result_mod_232152 = python_operator(stypy.reporting.localization.Localization(__file__, 221, 17), '%', unicode_232144, tuple_232145)
                        
                        # Applying the binary operator '+=' (line 221)
                        result_iadd_232153 = python_operator(stypy.reporting.localization.Localization(__file__, 221, 12), '+=', r_232143, result_mod_232152)
                        # Assigning a type to the variable 'r' (line 221)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 221, 12), 'r', result_iadd_232153)
                        
                        # SSA join for if statement (line 218)
                        module_type_store = module_type_store.join_ssa_context()
                        
                        # SSA join for if statement (line 216)
                        module_type_store = module_type_store.join_ssa_context()
                        
                        
                        # Call to pdfRepr(...): (line 222)
                        # Processing the call arguments (line 222)
                        # Getting the type of 'r' (line 222)
                        r_232155 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 222, 23), 'r', False)
                        # Processing the call keyword arguments (line 222)
                        kwargs_232156 = {}
                        # Getting the type of 'pdfRepr' (line 222)
                        pdfRepr_232154 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 222, 15), 'pdfRepr', False)
                        # Calling pdfRepr(args, kwargs) (line 222)
                        pdfRepr_call_result_232157 = invoke(stypy.reporting.localization.Localization(__file__, 222, 15), pdfRepr_232154, *[r_232155], **kwargs_232156)
                        
                        # Assigning a type to the variable 'stypy_return_type' (line 222)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 222, 8), 'stypy_return_type', pdfRepr_call_result_232157)
                        # SSA branch for the else part of an if statement (line 206)
                        module_type_store.open_ssa_branch('else')
                        
                        
                        # Call to isinstance(...): (line 225)
                        # Processing the call arguments (line 225)
                        # Getting the type of 'obj' (line 225)
                        obj_232159 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 225, 20), 'obj', False)
                        # Getting the type of 'BboxBase' (line 225)
                        BboxBase_232160 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 225, 25), 'BboxBase', False)
                        # Processing the call keyword arguments (line 225)
                        kwargs_232161 = {}
                        # Getting the type of 'isinstance' (line 225)
                        isinstance_232158 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 225, 9), 'isinstance', False)
                        # Calling isinstance(args, kwargs) (line 225)
                        isinstance_call_result_232162 = invoke(stypy.reporting.localization.Localization(__file__, 225, 9), isinstance_232158, *[obj_232159, BboxBase_232160], **kwargs_232161)
                        
                        # Testing the type of an if condition (line 225)
                        if_condition_232163 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 225, 9), isinstance_call_result_232162)
                        # Assigning a type to the variable 'if_condition_232163' (line 225)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 225, 9), 'if_condition_232163', if_condition_232163)
                        # SSA begins for if statement (line 225)
                        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                        
                        # Call to fill(...): (line 226)
                        # Processing the call arguments (line 226)
                        # Calculating list comprehension
                        # Calculating comprehension expression
                        # Getting the type of 'obj' (line 226)
                        obj_232169 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 226, 45), 'obj', False)
                        # Obtaining the member 'bounds' of a type (line 226)
                        bounds_232170 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 226, 45), obj_232169, 'bounds')
                        comprehension_232171 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 226, 21), bounds_232170)
                        # Assigning a type to the variable 'val' (line 226)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 226, 21), 'val', comprehension_232171)
                        
                        # Call to pdfRepr(...): (line 226)
                        # Processing the call arguments (line 226)
                        # Getting the type of 'val' (line 226)
                        val_232166 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 226, 29), 'val', False)
                        # Processing the call keyword arguments (line 226)
                        kwargs_232167 = {}
                        # Getting the type of 'pdfRepr' (line 226)
                        pdfRepr_232165 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 226, 21), 'pdfRepr', False)
                        # Calling pdfRepr(args, kwargs) (line 226)
                        pdfRepr_call_result_232168 = invoke(stypy.reporting.localization.Localization(__file__, 226, 21), pdfRepr_232165, *[val_232166], **kwargs_232167)
                        
                        list_232172 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 226, 21), 'list')
                        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 226, 21), list_232172, pdfRepr_call_result_232168)
                        # Processing the call keyword arguments (line 226)
                        kwargs_232173 = {}
                        # Getting the type of 'fill' (line 226)
                        fill_232164 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 226, 15), 'fill', False)
                        # Calling fill(args, kwargs) (line 226)
                        fill_call_result_232174 = invoke(stypy.reporting.localization.Localization(__file__, 226, 15), fill_232164, *[list_232172], **kwargs_232173)
                        
                        # Assigning a type to the variable 'stypy_return_type' (line 226)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 226, 8), 'stypy_return_type', fill_call_result_232174)
                        # SSA branch for the else part of an if statement (line 225)
                        module_type_store.open_ssa_branch('else')
                        
                        # Assigning a BinOp to a Name (line 229):
                        
                        # Assigning a BinOp to a Name (line 229):
                        unicode_232175 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 229, 14), 'unicode', u"Don't know a PDF representation for %s objects.")
                        
                        # Call to type(...): (line 229)
                        # Processing the call arguments (line 229)
                        # Getting the type of 'obj' (line 229)
                        obj_232177 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 229, 71), 'obj', False)
                        # Processing the call keyword arguments (line 229)
                        kwargs_232178 = {}
                        # Getting the type of 'type' (line 229)
                        type_232176 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 229, 66), 'type', False)
                        # Calling type(args, kwargs) (line 229)
                        type_call_result_232179 = invoke(stypy.reporting.localization.Localization(__file__, 229, 66), type_232176, *[obj_232177], **kwargs_232178)
                        
                        # Applying the binary operator '%' (line 229)
                        result_mod_232180 = python_operator(stypy.reporting.localization.Localization(__file__, 229, 14), '%', unicode_232175, type_call_result_232179)
                        
                        # Assigning a type to the variable 'msg' (line 229)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 229, 8), 'msg', result_mod_232180)
                        
                        # Call to TypeError(...): (line 230)
                        # Processing the call arguments (line 230)
                        # Getting the type of 'msg' (line 230)
                        msg_232182 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 230, 24), 'msg', False)
                        # Processing the call keyword arguments (line 230)
                        kwargs_232183 = {}
                        # Getting the type of 'TypeError' (line 230)
                        TypeError_232181 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 230, 14), 'TypeError', False)
                        # Calling TypeError(args, kwargs) (line 230)
                        TypeError_call_result_232184 = invoke(stypy.reporting.localization.Localization(__file__, 230, 14), TypeError_232181, *[msg_232182], **kwargs_232183)
                        
                        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 230, 8), TypeError_call_result_232184, 'raise parameter', BaseException)
                        # SSA join for if statement (line 225)
                        module_type_store = module_type_store.join_ssa_context()
                        
                        # SSA join for if statement (line 206)
                        module_type_store = module_type_store.join_ssa_context()
                        

                        if (may_be_232088 and more_types_in_union_232089):
                            # SSA join for if statement (line 202)
                            module_type_store = module_type_store.join_ssa_context()


                    
                    # SSA join for if statement (line 195)
                    module_type_store = module_type_store.join_ssa_context()
                    

                    if (may_be_232016 and more_types_in_union_232017):
                        # SSA join for if statement (line 187)
                        module_type_store = module_type_store.join_ssa_context()


                

                if (may_be_232002 and more_types_in_union_232003):
                    # SSA join for if statement (line 180)
                    module_type_store = module_type_store.join_ssa_context()


            
            # SSA join for if statement (line 167)
            module_type_store = module_type_store.join_ssa_context()
            
            # SSA join for if statement (line 163)
            module_type_store = module_type_store.join_ssa_context()
            

            if (may_be_231947 and more_types_in_union_231948):
                # SSA join for if statement (line 159)
                module_type_store = module_type_store.join_ssa_context()


        
        # SSA join for if statement (line 151)
        module_type_store = module_type_store.join_ssa_context()
        

        if (may_be_231903 and more_types_in_union_231904):
            # SSA join for if statement (line 145)
            module_type_store = module_type_store.join_ssa_context()


    
    
    # ################# End of 'pdfRepr(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'pdfRepr' in the type store
    # Getting the type of 'stypy_return_type' (line 141)
    stypy_return_type_232185 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 141, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_232185)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'pdfRepr'
    return stypy_return_type_232185

# Assigning a type to the variable 'pdfRepr' (line 141)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 141, 0), 'pdfRepr', pdfRepr)
# Declaration of the 'Reference' class

class Reference(object, ):
    unicode_232186 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 236, (-1)), 'unicode', u'PDF reference object.\n    Use PdfFile.reserveObject() to create References.\n    ')

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 238, 4, False)
        # Assigning a type to the variable 'self' (line 239)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 239, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Reference.__init__', ['id'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['id'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Assigning a Name to a Attribute (line 239):
        
        # Assigning a Name to a Attribute (line 239):
        # Getting the type of 'id' (line 239)
        id_232187 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 239, 18), 'id')
        # Getting the type of 'self' (line 239)
        self_232188 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 239, 8), 'self')
        # Setting the type of the member 'id' of a type (line 239)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 239, 8), self_232188, 'id', id_232187)
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def stypy__repr__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__repr__'
        module_type_store = module_type_store.open_function_context('__repr__', 241, 4, False)
        # Assigning a type to the variable 'self' (line 242)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 242, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Reference.stypy__repr__.__dict__.__setitem__('stypy_localization', localization)
        Reference.stypy__repr__.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Reference.stypy__repr__.__dict__.__setitem__('stypy_type_store', module_type_store)
        Reference.stypy__repr__.__dict__.__setitem__('stypy_function_name', 'Reference.stypy__repr__')
        Reference.stypy__repr__.__dict__.__setitem__('stypy_param_names_list', [])
        Reference.stypy__repr__.__dict__.__setitem__('stypy_varargs_param_name', None)
        Reference.stypy__repr__.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Reference.stypy__repr__.__dict__.__setitem__('stypy_call_defaults', defaults)
        Reference.stypy__repr__.__dict__.__setitem__('stypy_call_varargs', varargs)
        Reference.stypy__repr__.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Reference.stypy__repr__.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Reference.stypy__repr__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '__repr__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__repr__(...)' code ##################

        unicode_232189 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 242, 15), 'unicode', u'<Reference %d>')
        # Getting the type of 'self' (line 242)
        self_232190 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 242, 34), 'self')
        # Obtaining the member 'id' of a type (line 242)
        id_232191 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 242, 34), self_232190, 'id')
        # Applying the binary operator '%' (line 242)
        result_mod_232192 = python_operator(stypy.reporting.localization.Localization(__file__, 242, 15), '%', unicode_232189, id_232191)
        
        # Assigning a type to the variable 'stypy_return_type' (line 242)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 242, 8), 'stypy_return_type', result_mod_232192)
        
        # ################# End of '__repr__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '__repr__' in the type store
        # Getting the type of 'stypy_return_type' (line 241)
        stypy_return_type_232193 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 241, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_232193)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '__repr__'
        return stypy_return_type_232193


    @norecursion
    def pdfRepr(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'pdfRepr'
        module_type_store = module_type_store.open_function_context('pdfRepr', 244, 4, False)
        # Assigning a type to the variable 'self' (line 245)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 245, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Reference.pdfRepr.__dict__.__setitem__('stypy_localization', localization)
        Reference.pdfRepr.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Reference.pdfRepr.__dict__.__setitem__('stypy_type_store', module_type_store)
        Reference.pdfRepr.__dict__.__setitem__('stypy_function_name', 'Reference.pdfRepr')
        Reference.pdfRepr.__dict__.__setitem__('stypy_param_names_list', [])
        Reference.pdfRepr.__dict__.__setitem__('stypy_varargs_param_name', None)
        Reference.pdfRepr.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Reference.pdfRepr.__dict__.__setitem__('stypy_call_defaults', defaults)
        Reference.pdfRepr.__dict__.__setitem__('stypy_call_varargs', varargs)
        Reference.pdfRepr.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Reference.pdfRepr.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Reference.pdfRepr', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'pdfRepr', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'pdfRepr(...)' code ##################

        
        # Call to encode(...): (line 245)
        # Processing the call arguments (line 245)
        unicode_232199 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 245, 43), 'unicode', u'ascii')
        # Processing the call keyword arguments (line 245)
        kwargs_232200 = {}
        unicode_232194 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 245, 16), 'unicode', u'%d 0 R')
        # Getting the type of 'self' (line 245)
        self_232195 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 245, 27), 'self', False)
        # Obtaining the member 'id' of a type (line 245)
        id_232196 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 245, 27), self_232195, 'id')
        # Applying the binary operator '%' (line 245)
        result_mod_232197 = python_operator(stypy.reporting.localization.Localization(__file__, 245, 16), '%', unicode_232194, id_232196)
        
        # Obtaining the member 'encode' of a type (line 245)
        encode_232198 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 245, 16), result_mod_232197, 'encode')
        # Calling encode(args, kwargs) (line 245)
        encode_call_result_232201 = invoke(stypy.reporting.localization.Localization(__file__, 245, 16), encode_232198, *[unicode_232199], **kwargs_232200)
        
        # Assigning a type to the variable 'stypy_return_type' (line 245)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 245, 8), 'stypy_return_type', encode_call_result_232201)
        
        # ################# End of 'pdfRepr(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'pdfRepr' in the type store
        # Getting the type of 'stypy_return_type' (line 244)
        stypy_return_type_232202 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 244, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_232202)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'pdfRepr'
        return stypy_return_type_232202


    @norecursion
    def write(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'write'
        module_type_store = module_type_store.open_function_context('write', 247, 4, False)
        # Assigning a type to the variable 'self' (line 248)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 248, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Reference.write.__dict__.__setitem__('stypy_localization', localization)
        Reference.write.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Reference.write.__dict__.__setitem__('stypy_type_store', module_type_store)
        Reference.write.__dict__.__setitem__('stypy_function_name', 'Reference.write')
        Reference.write.__dict__.__setitem__('stypy_param_names_list', ['contents', 'file'])
        Reference.write.__dict__.__setitem__('stypy_varargs_param_name', None)
        Reference.write.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Reference.write.__dict__.__setitem__('stypy_call_defaults', defaults)
        Reference.write.__dict__.__setitem__('stypy_call_varargs', varargs)
        Reference.write.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Reference.write.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Reference.write', ['contents', 'file'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'write', localization, ['contents', 'file'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'write(...)' code ##################

        
        # Assigning a Attribute to a Name (line 248):
        
        # Assigning a Attribute to a Name (line 248):
        # Getting the type of 'file' (line 248)
        file_232203 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 248, 16), 'file')
        # Obtaining the member 'write' of a type (line 248)
        write_232204 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 248, 16), file_232203, 'write')
        # Assigning a type to the variable 'write' (line 248)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 248, 8), 'write', write_232204)
        
        # Call to write(...): (line 249)
        # Processing the call arguments (line 249)
        
        # Call to encode(...): (line 249)
        # Processing the call arguments (line 249)
        unicode_232211 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 249, 46), 'unicode', u'ascii')
        # Processing the call keyword arguments (line 249)
        kwargs_232212 = {}
        unicode_232206 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 249, 15), 'unicode', u'%d 0 obj\n')
        # Getting the type of 'self' (line 249)
        self_232207 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 249, 30), 'self', False)
        # Obtaining the member 'id' of a type (line 249)
        id_232208 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 249, 30), self_232207, 'id')
        # Applying the binary operator '%' (line 249)
        result_mod_232209 = python_operator(stypy.reporting.localization.Localization(__file__, 249, 15), '%', unicode_232206, id_232208)
        
        # Obtaining the member 'encode' of a type (line 249)
        encode_232210 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 249, 15), result_mod_232209, 'encode')
        # Calling encode(args, kwargs) (line 249)
        encode_call_result_232213 = invoke(stypy.reporting.localization.Localization(__file__, 249, 15), encode_232210, *[unicode_232211], **kwargs_232212)
        
        # Processing the call keyword arguments (line 249)
        kwargs_232214 = {}
        # Getting the type of 'write' (line 249)
        write_232205 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 249, 8), 'write', False)
        # Calling write(args, kwargs) (line 249)
        write_call_result_232215 = invoke(stypy.reporting.localization.Localization(__file__, 249, 8), write_232205, *[encode_call_result_232213], **kwargs_232214)
        
        
        # Call to write(...): (line 250)
        # Processing the call arguments (line 250)
        
        # Call to pdfRepr(...): (line 250)
        # Processing the call arguments (line 250)
        # Getting the type of 'contents' (line 250)
        contents_232218 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 250, 22), 'contents', False)
        # Processing the call keyword arguments (line 250)
        kwargs_232219 = {}
        # Getting the type of 'pdfRepr' (line 250)
        pdfRepr_232217 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 250, 14), 'pdfRepr', False)
        # Calling pdfRepr(args, kwargs) (line 250)
        pdfRepr_call_result_232220 = invoke(stypy.reporting.localization.Localization(__file__, 250, 14), pdfRepr_232217, *[contents_232218], **kwargs_232219)
        
        # Processing the call keyword arguments (line 250)
        kwargs_232221 = {}
        # Getting the type of 'write' (line 250)
        write_232216 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 250, 8), 'write', False)
        # Calling write(args, kwargs) (line 250)
        write_call_result_232222 = invoke(stypy.reporting.localization.Localization(__file__, 250, 8), write_232216, *[pdfRepr_call_result_232220], **kwargs_232221)
        
        
        # Call to write(...): (line 251)
        # Processing the call arguments (line 251)
        str_232224 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 251, 14), 'str', '\nendobj\n')
        # Processing the call keyword arguments (line 251)
        kwargs_232225 = {}
        # Getting the type of 'write' (line 251)
        write_232223 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 251, 8), 'write', False)
        # Calling write(args, kwargs) (line 251)
        write_call_result_232226 = invoke(stypy.reporting.localization.Localization(__file__, 251, 8), write_232223, *[str_232224], **kwargs_232225)
        
        
        # ################# End of 'write(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'write' in the type store
        # Getting the type of 'stypy_return_type' (line 247)
        stypy_return_type_232227 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 247, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_232227)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'write'
        return stypy_return_type_232227


# Assigning a type to the variable 'Reference' (line 233)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 233, 0), 'Reference', Reference)
# Declaration of the 'Name' class
# Getting the type of 'total_ordering' (line 254)
total_ordering_232228 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 254, 0), 'total_ordering')

class Name(object, ):
    unicode_232229 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 256, 4), 'unicode', u'PDF name object.')
    
    # Assigning a Tuple to a Name (line 257):
    
    # Assigning a Call to a Name (line 258):

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 260, 4, False)
        # Assigning a type to the variable 'self' (line 261)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 261, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Name.__init__', ['name'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['name'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        
        # Call to isinstance(...): (line 261)
        # Processing the call arguments (line 261)
        # Getting the type of 'name' (line 261)
        name_232231 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 261, 22), 'name', False)
        # Getting the type of 'Name' (line 261)
        Name_232232 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 261, 28), 'Name', False)
        # Processing the call keyword arguments (line 261)
        kwargs_232233 = {}
        # Getting the type of 'isinstance' (line 261)
        isinstance_232230 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 261, 11), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 261)
        isinstance_call_result_232234 = invoke(stypy.reporting.localization.Localization(__file__, 261, 11), isinstance_232230, *[name_232231, Name_232232], **kwargs_232233)
        
        # Testing the type of an if condition (line 261)
        if_condition_232235 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 261, 8), isinstance_call_result_232234)
        # Assigning a type to the variable 'if_condition_232235' (line 261)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 261, 8), 'if_condition_232235', if_condition_232235)
        # SSA begins for if statement (line 261)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Attribute to a Attribute (line 262):
        
        # Assigning a Attribute to a Attribute (line 262):
        # Getting the type of 'name' (line 262)
        name_232236 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 262, 24), 'name')
        # Obtaining the member 'name' of a type (line 262)
        name_232237 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 262, 24), name_232236, 'name')
        # Getting the type of 'self' (line 262)
        self_232238 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 262, 12), 'self')
        # Setting the type of the member 'name' of a type (line 262)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 262, 12), self_232238, 'name', name_232237)
        # SSA branch for the else part of an if statement (line 261)
        module_type_store.open_ssa_branch('else')
        
        # Type idiom detected: calculating its left and rigth part (line 264)
        # Getting the type of 'bytes' (line 264)
        bytes_232239 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 264, 32), 'bytes')
        # Getting the type of 'name' (line 264)
        name_232240 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 264, 26), 'name')
        
        (may_be_232241, more_types_in_union_232242) = may_be_subtype(bytes_232239, name_232240)

        if may_be_232241:

            if more_types_in_union_232242:
                # Runtime conditional SSA (line 264)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            # Assigning a type to the variable 'name' (line 264)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 264, 12), 'name', remove_not_subtype_from_union(name_232240, bytes))
            
            # Assigning a Call to a Name (line 265):
            
            # Assigning a Call to a Name (line 265):
            
            # Call to decode(...): (line 265)
            # Processing the call arguments (line 265)
            unicode_232245 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 265, 35), 'unicode', u'ascii')
            # Processing the call keyword arguments (line 265)
            kwargs_232246 = {}
            # Getting the type of 'name' (line 265)
            name_232243 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 265, 23), 'name', False)
            # Obtaining the member 'decode' of a type (line 265)
            decode_232244 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 265, 23), name_232243, 'decode')
            # Calling decode(args, kwargs) (line 265)
            decode_call_result_232247 = invoke(stypy.reporting.localization.Localization(__file__, 265, 23), decode_232244, *[unicode_232245], **kwargs_232246)
            
            # Assigning a type to the variable 'name' (line 265)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 265, 16), 'name', decode_call_result_232247)

            if more_types_in_union_232242:
                # SSA join for if statement (line 264)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Call to a Attribute (line 266):
        
        # Assigning a Call to a Attribute (line 266):
        
        # Call to encode(...): (line 266)
        # Processing the call arguments (line 266)
        unicode_232257 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 266, 66), 'unicode', u'ascii')
        # Processing the call keyword arguments (line 266)
        kwargs_232258 = {}
        
        # Call to sub(...): (line 266)
        # Processing the call arguments (line 266)
        # Getting the type of 'Name' (line 266)
        Name_232251 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 266, 40), 'Name', False)
        # Obtaining the member 'hexify' of a type (line 266)
        hexify_232252 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 266, 40), Name_232251, 'hexify')
        # Getting the type of 'name' (line 266)
        name_232253 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 266, 53), 'name', False)
        # Processing the call keyword arguments (line 266)
        kwargs_232254 = {}
        # Getting the type of 'self' (line 266)
        self_232248 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 266, 24), 'self', False)
        # Obtaining the member '_regex' of a type (line 266)
        _regex_232249 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 266, 24), self_232248, '_regex')
        # Obtaining the member 'sub' of a type (line 266)
        sub_232250 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 266, 24), _regex_232249, 'sub')
        # Calling sub(args, kwargs) (line 266)
        sub_call_result_232255 = invoke(stypy.reporting.localization.Localization(__file__, 266, 24), sub_232250, *[hexify_232252, name_232253], **kwargs_232254)
        
        # Obtaining the member 'encode' of a type (line 266)
        encode_232256 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 266, 24), sub_call_result_232255, 'encode')
        # Calling encode(args, kwargs) (line 266)
        encode_call_result_232259 = invoke(stypy.reporting.localization.Localization(__file__, 266, 24), encode_232256, *[unicode_232257], **kwargs_232258)
        
        # Getting the type of 'self' (line 266)
        self_232260 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 266, 12), 'self')
        # Setting the type of the member 'name' of a type (line 266)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 266, 12), self_232260, 'name', encode_call_result_232259)
        # SSA join for if statement (line 261)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def stypy__repr__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__repr__'
        module_type_store = module_type_store.open_function_context('__repr__', 268, 4, False)
        # Assigning a type to the variable 'self' (line 269)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 269, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Name.stypy__repr__.__dict__.__setitem__('stypy_localization', localization)
        Name.stypy__repr__.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Name.stypy__repr__.__dict__.__setitem__('stypy_type_store', module_type_store)
        Name.stypy__repr__.__dict__.__setitem__('stypy_function_name', 'Name.stypy__repr__')
        Name.stypy__repr__.__dict__.__setitem__('stypy_param_names_list', [])
        Name.stypy__repr__.__dict__.__setitem__('stypy_varargs_param_name', None)
        Name.stypy__repr__.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Name.stypy__repr__.__dict__.__setitem__('stypy_call_defaults', defaults)
        Name.stypy__repr__.__dict__.__setitem__('stypy_call_varargs', varargs)
        Name.stypy__repr__.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Name.stypy__repr__.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Name.stypy__repr__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '__repr__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__repr__(...)' code ##################

        unicode_232261 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 269, 15), 'unicode', u'<Name %s>')
        # Getting the type of 'self' (line 269)
        self_232262 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 269, 29), 'self')
        # Obtaining the member 'name' of a type (line 269)
        name_232263 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 269, 29), self_232262, 'name')
        # Applying the binary operator '%' (line 269)
        result_mod_232264 = python_operator(stypy.reporting.localization.Localization(__file__, 269, 15), '%', unicode_232261, name_232263)
        
        # Assigning a type to the variable 'stypy_return_type' (line 269)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 269, 8), 'stypy_return_type', result_mod_232264)
        
        # ################# End of '__repr__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '__repr__' in the type store
        # Getting the type of 'stypy_return_type' (line 268)
        stypy_return_type_232265 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 268, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_232265)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '__repr__'
        return stypy_return_type_232265


    @norecursion
    def stypy__str__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__str__'
        module_type_store = module_type_store.open_function_context('__str__', 271, 4, False)
        # Assigning a type to the variable 'self' (line 272)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 272, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Name.stypy__str__.__dict__.__setitem__('stypy_localization', localization)
        Name.stypy__str__.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Name.stypy__str__.__dict__.__setitem__('stypy_type_store', module_type_store)
        Name.stypy__str__.__dict__.__setitem__('stypy_function_name', 'Name.stypy__str__')
        Name.stypy__str__.__dict__.__setitem__('stypy_param_names_list', [])
        Name.stypy__str__.__dict__.__setitem__('stypy_varargs_param_name', None)
        Name.stypy__str__.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Name.stypy__str__.__dict__.__setitem__('stypy_call_defaults', defaults)
        Name.stypy__str__.__dict__.__setitem__('stypy_call_varargs', varargs)
        Name.stypy__str__.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Name.stypy__str__.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Name.stypy__str__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '__str__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__str__(...)' code ##################

        unicode_232266 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 272, 15), 'unicode', u'/')
        
        # Call to text_type(...): (line 272)
        # Processing the call arguments (line 272)
        # Getting the type of 'self' (line 272)
        self_232269 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 272, 35), 'self', False)
        # Obtaining the member 'name' of a type (line 272)
        name_232270 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 272, 35), self_232269, 'name')
        # Processing the call keyword arguments (line 272)
        kwargs_232271 = {}
        # Getting the type of 'six' (line 272)
        six_232267 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 272, 21), 'six', False)
        # Obtaining the member 'text_type' of a type (line 272)
        text_type_232268 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 272, 21), six_232267, 'text_type')
        # Calling text_type(args, kwargs) (line 272)
        text_type_call_result_232272 = invoke(stypy.reporting.localization.Localization(__file__, 272, 21), text_type_232268, *[name_232270], **kwargs_232271)
        
        # Applying the binary operator '+' (line 272)
        result_add_232273 = python_operator(stypy.reporting.localization.Localization(__file__, 272, 15), '+', unicode_232266, text_type_call_result_232272)
        
        # Assigning a type to the variable 'stypy_return_type' (line 272)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 272, 8), 'stypy_return_type', result_add_232273)
        
        # ################# End of '__str__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '__str__' in the type store
        # Getting the type of 'stypy_return_type' (line 271)
        stypy_return_type_232274 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_232274)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '__str__'
        return stypy_return_type_232274


    @norecursion
    def stypy__eq__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__eq__'
        module_type_store = module_type_store.open_function_context('__eq__', 274, 4, False)
        # Assigning a type to the variable 'self' (line 275)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 275, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Name.stypy__eq__.__dict__.__setitem__('stypy_localization', localization)
        Name.stypy__eq__.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Name.stypy__eq__.__dict__.__setitem__('stypy_type_store', module_type_store)
        Name.stypy__eq__.__dict__.__setitem__('stypy_function_name', 'Name.stypy__eq__')
        Name.stypy__eq__.__dict__.__setitem__('stypy_param_names_list', ['other'])
        Name.stypy__eq__.__dict__.__setitem__('stypy_varargs_param_name', None)
        Name.stypy__eq__.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Name.stypy__eq__.__dict__.__setitem__('stypy_call_defaults', defaults)
        Name.stypy__eq__.__dict__.__setitem__('stypy_call_varargs', varargs)
        Name.stypy__eq__.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Name.stypy__eq__.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Name.stypy__eq__', ['other'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '__eq__', localization, ['other'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__eq__(...)' code ##################

        
        # Evaluating a boolean operation
        
        # Call to isinstance(...): (line 275)
        # Processing the call arguments (line 275)
        # Getting the type of 'other' (line 275)
        other_232276 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 26), 'other', False)
        # Getting the type of 'Name' (line 275)
        Name_232277 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 33), 'Name', False)
        # Processing the call keyword arguments (line 275)
        kwargs_232278 = {}
        # Getting the type of 'isinstance' (line 275)
        isinstance_232275 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 15), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 275)
        isinstance_call_result_232279 = invoke(stypy.reporting.localization.Localization(__file__, 275, 15), isinstance_232275, *[other_232276, Name_232277], **kwargs_232278)
        
        
        # Getting the type of 'self' (line 275)
        self_232280 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 43), 'self')
        # Obtaining the member 'name' of a type (line 275)
        name_232281 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 275, 43), self_232280, 'name')
        # Getting the type of 'other' (line 275)
        other_232282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 56), 'other')
        # Obtaining the member 'name' of a type (line 275)
        name_232283 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 275, 56), other_232282, 'name')
        # Applying the binary operator '==' (line 275)
        result_eq_232284 = python_operator(stypy.reporting.localization.Localization(__file__, 275, 43), '==', name_232281, name_232283)
        
        # Applying the binary operator 'and' (line 275)
        result_and_keyword_232285 = python_operator(stypy.reporting.localization.Localization(__file__, 275, 15), 'and', isinstance_call_result_232279, result_eq_232284)
        
        # Assigning a type to the variable 'stypy_return_type' (line 275)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 275, 8), 'stypy_return_type', result_and_keyword_232285)
        
        # ################# End of '__eq__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '__eq__' in the type store
        # Getting the type of 'stypy_return_type' (line 274)
        stypy_return_type_232286 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 274, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_232286)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '__eq__'
        return stypy_return_type_232286


    @norecursion
    def __lt__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__lt__'
        module_type_store = module_type_store.open_function_context('__lt__', 277, 4, False)
        # Assigning a type to the variable 'self' (line 278)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 278, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Name.__lt__.__dict__.__setitem__('stypy_localization', localization)
        Name.__lt__.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Name.__lt__.__dict__.__setitem__('stypy_type_store', module_type_store)
        Name.__lt__.__dict__.__setitem__('stypy_function_name', 'Name.__lt__')
        Name.__lt__.__dict__.__setitem__('stypy_param_names_list', ['other'])
        Name.__lt__.__dict__.__setitem__('stypy_varargs_param_name', None)
        Name.__lt__.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Name.__lt__.__dict__.__setitem__('stypy_call_defaults', defaults)
        Name.__lt__.__dict__.__setitem__('stypy_call_varargs', varargs)
        Name.__lt__.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Name.__lt__.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Name.__lt__', ['other'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '__lt__', localization, ['other'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__lt__(...)' code ##################

        
        # Evaluating a boolean operation
        
        # Call to isinstance(...): (line 278)
        # Processing the call arguments (line 278)
        # Getting the type of 'other' (line 278)
        other_232288 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 278, 26), 'other', False)
        # Getting the type of 'Name' (line 278)
        Name_232289 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 278, 33), 'Name', False)
        # Processing the call keyword arguments (line 278)
        kwargs_232290 = {}
        # Getting the type of 'isinstance' (line 278)
        isinstance_232287 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 278, 15), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 278)
        isinstance_call_result_232291 = invoke(stypy.reporting.localization.Localization(__file__, 278, 15), isinstance_232287, *[other_232288, Name_232289], **kwargs_232290)
        
        
        # Getting the type of 'self' (line 278)
        self_232292 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 278, 43), 'self')
        # Obtaining the member 'name' of a type (line 278)
        name_232293 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 278, 43), self_232292, 'name')
        # Getting the type of 'other' (line 278)
        other_232294 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 278, 55), 'other')
        # Obtaining the member 'name' of a type (line 278)
        name_232295 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 278, 55), other_232294, 'name')
        # Applying the binary operator '<' (line 278)
        result_lt_232296 = python_operator(stypy.reporting.localization.Localization(__file__, 278, 43), '<', name_232293, name_232295)
        
        # Applying the binary operator 'and' (line 278)
        result_and_keyword_232297 = python_operator(stypy.reporting.localization.Localization(__file__, 278, 15), 'and', isinstance_call_result_232291, result_lt_232296)
        
        # Assigning a type to the variable 'stypy_return_type' (line 278)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 278, 8), 'stypy_return_type', result_and_keyword_232297)
        
        # ################# End of '__lt__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '__lt__' in the type store
        # Getting the type of 'stypy_return_type' (line 277)
        stypy_return_type_232298 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_232298)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '__lt__'
        return stypy_return_type_232298


    @norecursion
    def stypy__hash__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__hash__'
        module_type_store = module_type_store.open_function_context('__hash__', 280, 4, False)
        # Assigning a type to the variable 'self' (line 281)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 281, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Name.stypy__hash__.__dict__.__setitem__('stypy_localization', localization)
        Name.stypy__hash__.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Name.stypy__hash__.__dict__.__setitem__('stypy_type_store', module_type_store)
        Name.stypy__hash__.__dict__.__setitem__('stypy_function_name', 'Name.stypy__hash__')
        Name.stypy__hash__.__dict__.__setitem__('stypy_param_names_list', [])
        Name.stypy__hash__.__dict__.__setitem__('stypy_varargs_param_name', None)
        Name.stypy__hash__.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Name.stypy__hash__.__dict__.__setitem__('stypy_call_defaults', defaults)
        Name.stypy__hash__.__dict__.__setitem__('stypy_call_varargs', varargs)
        Name.stypy__hash__.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Name.stypy__hash__.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Name.stypy__hash__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '__hash__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__hash__(...)' code ##################

        
        # Call to hash(...): (line 281)
        # Processing the call arguments (line 281)
        # Getting the type of 'self' (line 281)
        self_232300 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 281, 20), 'self', False)
        # Obtaining the member 'name' of a type (line 281)
        name_232301 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 281, 20), self_232300, 'name')
        # Processing the call keyword arguments (line 281)
        kwargs_232302 = {}
        # Getting the type of 'hash' (line 281)
        hash_232299 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 281, 15), 'hash', False)
        # Calling hash(args, kwargs) (line 281)
        hash_call_result_232303 = invoke(stypy.reporting.localization.Localization(__file__, 281, 15), hash_232299, *[name_232301], **kwargs_232302)
        
        # Assigning a type to the variable 'stypy_return_type' (line 281)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 281, 8), 'stypy_return_type', hash_call_result_232303)
        
        # ################# End of '__hash__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '__hash__' in the type store
        # Getting the type of 'stypy_return_type' (line 280)
        stypy_return_type_232304 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 280, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_232304)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '__hash__'
        return stypy_return_type_232304


    @staticmethod
    @norecursion
    def hexify(localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'hexify'
        module_type_store = module_type_store.open_function_context('hexify', 283, 4, False)
        
        # Passed parameters checking function
        Name.hexify.__dict__.__setitem__('stypy_localization', localization)
        Name.hexify.__dict__.__setitem__('stypy_type_of_self', None)
        Name.hexify.__dict__.__setitem__('stypy_type_store', module_type_store)
        Name.hexify.__dict__.__setitem__('stypy_function_name', 'hexify')
        Name.hexify.__dict__.__setitem__('stypy_param_names_list', ['match'])
        Name.hexify.__dict__.__setitem__('stypy_varargs_param_name', None)
        Name.hexify.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Name.hexify.__dict__.__setitem__('stypy_call_defaults', defaults)
        Name.hexify.__dict__.__setitem__('stypy_call_varargs', varargs)
        Name.hexify.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Name.hexify.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, None, module_type_store, 'hexify', ['match'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'hexify', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'hexify(...)' code ##################

        unicode_232305 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 285, 15), 'unicode', u'#%02x')
        
        # Call to ord(...): (line 285)
        # Processing the call arguments (line 285)
        
        # Call to group(...): (line 285)
        # Processing the call keyword arguments (line 285)
        kwargs_232309 = {}
        # Getting the type of 'match' (line 285)
        match_232307 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 285, 29), 'match', False)
        # Obtaining the member 'group' of a type (line 285)
        group_232308 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 285, 29), match_232307, 'group')
        # Calling group(args, kwargs) (line 285)
        group_call_result_232310 = invoke(stypy.reporting.localization.Localization(__file__, 285, 29), group_232308, *[], **kwargs_232309)
        
        # Processing the call keyword arguments (line 285)
        kwargs_232311 = {}
        # Getting the type of 'ord' (line 285)
        ord_232306 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 285, 25), 'ord', False)
        # Calling ord(args, kwargs) (line 285)
        ord_call_result_232312 = invoke(stypy.reporting.localization.Localization(__file__, 285, 25), ord_232306, *[group_call_result_232310], **kwargs_232311)
        
        # Applying the binary operator '%' (line 285)
        result_mod_232313 = python_operator(stypy.reporting.localization.Localization(__file__, 285, 15), '%', unicode_232305, ord_call_result_232312)
        
        # Assigning a type to the variable 'stypy_return_type' (line 285)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 285, 8), 'stypy_return_type', result_mod_232313)
        
        # ################# End of 'hexify(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'hexify' in the type store
        # Getting the type of 'stypy_return_type' (line 283)
        stypy_return_type_232314 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 283, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_232314)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'hexify'
        return stypy_return_type_232314


    @norecursion
    def pdfRepr(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'pdfRepr'
        module_type_store = module_type_store.open_function_context('pdfRepr', 287, 4, False)
        # Assigning a type to the variable 'self' (line 288)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 288, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Name.pdfRepr.__dict__.__setitem__('stypy_localization', localization)
        Name.pdfRepr.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Name.pdfRepr.__dict__.__setitem__('stypy_type_store', module_type_store)
        Name.pdfRepr.__dict__.__setitem__('stypy_function_name', 'Name.pdfRepr')
        Name.pdfRepr.__dict__.__setitem__('stypy_param_names_list', [])
        Name.pdfRepr.__dict__.__setitem__('stypy_varargs_param_name', None)
        Name.pdfRepr.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Name.pdfRepr.__dict__.__setitem__('stypy_call_defaults', defaults)
        Name.pdfRepr.__dict__.__setitem__('stypy_call_varargs', varargs)
        Name.pdfRepr.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Name.pdfRepr.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Name.pdfRepr', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'pdfRepr', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'pdfRepr(...)' code ##################

        str_232315 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 288, 15), 'str', '/')
        # Getting the type of 'self' (line 288)
        self_232316 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 288, 22), 'self')
        # Obtaining the member 'name' of a type (line 288)
        name_232317 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 288, 22), self_232316, 'name')
        # Applying the binary operator '+' (line 288)
        result_add_232318 = python_operator(stypy.reporting.localization.Localization(__file__, 288, 15), '+', str_232315, name_232317)
        
        # Assigning a type to the variable 'stypy_return_type' (line 288)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 288, 8), 'stypy_return_type', result_add_232318)
        
        # ################# End of 'pdfRepr(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'pdfRepr' in the type store
        # Getting the type of 'stypy_return_type' (line 287)
        stypy_return_type_232319 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 287, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_232319)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'pdfRepr'
        return stypy_return_type_232319


# Assigning a type to the variable 'Name' (line 254)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 254, 0), 'Name', Name)
# Getting the type of 'Name' (line 254)
Name_232320 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 254, 0), 'Name')
class_232321 = invoke(stypy.reporting.localization.Localization(__file__, 254, 0), total_ordering_232228, Name_232320)
# Assigning a type to the variable 'Name' (line 254)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 254, 0), 'Name', class_232321)

# Assigning a Tuple to a Name (line 257):

# Obtaining an instance of the builtin type 'tuple' (line 257)
tuple_232322 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 257, 17), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 257)
# Adding element type (line 257)
unicode_232323 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 257, 17), 'unicode', u'name')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 257, 17), tuple_232322, unicode_232323)

# Getting the type of 'Name'
Name_232324 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'Name')
# Setting the type of the member '__slots__' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), Name_232324, '__slots__', tuple_232322)

# Assigning a Call to a Name (line 258):

# Call to compile(...): (line 258)
# Processing the call arguments (line 258)
unicode_232327 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 258, 24), 'unicode', u'[^!-~]')
# Processing the call keyword arguments (line 258)
kwargs_232328 = {}
# Getting the type of 're' (line 258)
re_232325 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 258, 13), 're', False)
# Obtaining the member 'compile' of a type (line 258)
compile_232326 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 258, 13), re_232325, 'compile')
# Calling compile(args, kwargs) (line 258)
compile_call_result_232329 = invoke(stypy.reporting.localization.Localization(__file__, 258, 13), compile_232326, *[unicode_232327], **kwargs_232328)

# Getting the type of 'Name'
Name_232330 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'Name')
# Setting the type of the member '_regex' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), Name_232330, '_regex', compile_call_result_232329)
# Declaration of the 'Operator' class

class Operator(object, ):
    unicode_232331 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 292, 4), 'unicode', u'PDF operator object.')
    
    # Assigning a Tuple to a Name (line 293):

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 295, 4, False)
        # Assigning a type to the variable 'self' (line 296)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 296, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Operator.__init__', ['op'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['op'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Assigning a Name to a Attribute (line 296):
        
        # Assigning a Name to a Attribute (line 296):
        # Getting the type of 'op' (line 296)
        op_232332 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 296, 18), 'op')
        # Getting the type of 'self' (line 296)
        self_232333 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 296, 8), 'self')
        # Setting the type of the member 'op' of a type (line 296)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 296, 8), self_232333, 'op', op_232332)
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def stypy__repr__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__repr__'
        module_type_store = module_type_store.open_function_context('__repr__', 298, 4, False)
        # Assigning a type to the variable 'self' (line 299)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 299, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Operator.stypy__repr__.__dict__.__setitem__('stypy_localization', localization)
        Operator.stypy__repr__.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Operator.stypy__repr__.__dict__.__setitem__('stypy_type_store', module_type_store)
        Operator.stypy__repr__.__dict__.__setitem__('stypy_function_name', 'Operator.stypy__repr__')
        Operator.stypy__repr__.__dict__.__setitem__('stypy_param_names_list', [])
        Operator.stypy__repr__.__dict__.__setitem__('stypy_varargs_param_name', None)
        Operator.stypy__repr__.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Operator.stypy__repr__.__dict__.__setitem__('stypy_call_defaults', defaults)
        Operator.stypy__repr__.__dict__.__setitem__('stypy_call_varargs', varargs)
        Operator.stypy__repr__.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Operator.stypy__repr__.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Operator.stypy__repr__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '__repr__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__repr__(...)' code ##################

        unicode_232334 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 299, 15), 'unicode', u'<Operator %s>')
        # Getting the type of 'self' (line 299)
        self_232335 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 299, 33), 'self')
        # Obtaining the member 'op' of a type (line 299)
        op_232336 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 299, 33), self_232335, 'op')
        # Applying the binary operator '%' (line 299)
        result_mod_232337 = python_operator(stypy.reporting.localization.Localization(__file__, 299, 15), '%', unicode_232334, op_232336)
        
        # Assigning a type to the variable 'stypy_return_type' (line 299)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 299, 8), 'stypy_return_type', result_mod_232337)
        
        # ################# End of '__repr__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '__repr__' in the type store
        # Getting the type of 'stypy_return_type' (line 298)
        stypy_return_type_232338 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 298, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_232338)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '__repr__'
        return stypy_return_type_232338


    @norecursion
    def pdfRepr(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'pdfRepr'
        module_type_store = module_type_store.open_function_context('pdfRepr', 301, 4, False)
        # Assigning a type to the variable 'self' (line 302)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 302, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Operator.pdfRepr.__dict__.__setitem__('stypy_localization', localization)
        Operator.pdfRepr.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Operator.pdfRepr.__dict__.__setitem__('stypy_type_store', module_type_store)
        Operator.pdfRepr.__dict__.__setitem__('stypy_function_name', 'Operator.pdfRepr')
        Operator.pdfRepr.__dict__.__setitem__('stypy_param_names_list', [])
        Operator.pdfRepr.__dict__.__setitem__('stypy_varargs_param_name', None)
        Operator.pdfRepr.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Operator.pdfRepr.__dict__.__setitem__('stypy_call_defaults', defaults)
        Operator.pdfRepr.__dict__.__setitem__('stypy_call_varargs', varargs)
        Operator.pdfRepr.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Operator.pdfRepr.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Operator.pdfRepr', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'pdfRepr', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'pdfRepr(...)' code ##################

        # Getting the type of 'self' (line 302)
        self_232339 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 302, 15), 'self')
        # Obtaining the member 'op' of a type (line 302)
        op_232340 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 302, 15), self_232339, 'op')
        # Assigning a type to the variable 'stypy_return_type' (line 302)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 302, 8), 'stypy_return_type', op_232340)
        
        # ################# End of 'pdfRepr(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'pdfRepr' in the type store
        # Getting the type of 'stypy_return_type' (line 301)
        stypy_return_type_232341 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 301, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_232341)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'pdfRepr'
        return stypy_return_type_232341


# Assigning a type to the variable 'Operator' (line 291)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 291, 0), 'Operator', Operator)

# Assigning a Tuple to a Name (line 293):

# Obtaining an instance of the builtin type 'tuple' (line 293)
tuple_232342 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 293, 17), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 293)
# Adding element type (line 293)
unicode_232343 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 293, 17), 'unicode', u'op')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 293, 17), tuple_232342, unicode_232343)

# Getting the type of 'Operator'
Operator_232344 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'Operator')
# Setting the type of the member '__slots__' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), Operator_232344, '__slots__', tuple_232342)
# Declaration of the 'Verbatim' class

class Verbatim(object, ):
    unicode_232345 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 307, (-1)), 'unicode', u'Store verbatim PDF command content for later inclusion in the\n    stream.')

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 308, 4, False)
        # Assigning a type to the variable 'self' (line 309)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 309, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Verbatim.__init__', ['x'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['x'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Assigning a Name to a Attribute (line 309):
        
        # Assigning a Name to a Attribute (line 309):
        # Getting the type of 'x' (line 309)
        x_232346 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 309, 18), 'x')
        # Getting the type of 'self' (line 309)
        self_232347 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 309, 8), 'self')
        # Setting the type of the member '_x' of a type (line 309)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 309, 8), self_232347, '_x', x_232346)
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def pdfRepr(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'pdfRepr'
        module_type_store = module_type_store.open_function_context('pdfRepr', 311, 4, False)
        # Assigning a type to the variable 'self' (line 312)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 312, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Verbatim.pdfRepr.__dict__.__setitem__('stypy_localization', localization)
        Verbatim.pdfRepr.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Verbatim.pdfRepr.__dict__.__setitem__('stypy_type_store', module_type_store)
        Verbatim.pdfRepr.__dict__.__setitem__('stypy_function_name', 'Verbatim.pdfRepr')
        Verbatim.pdfRepr.__dict__.__setitem__('stypy_param_names_list', [])
        Verbatim.pdfRepr.__dict__.__setitem__('stypy_varargs_param_name', None)
        Verbatim.pdfRepr.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Verbatim.pdfRepr.__dict__.__setitem__('stypy_call_defaults', defaults)
        Verbatim.pdfRepr.__dict__.__setitem__('stypy_call_varargs', varargs)
        Verbatim.pdfRepr.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Verbatim.pdfRepr.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Verbatim.pdfRepr', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'pdfRepr', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'pdfRepr(...)' code ##################

        # Getting the type of 'self' (line 312)
        self_232348 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 312, 15), 'self')
        # Obtaining the member '_x' of a type (line 312)
        _x_232349 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 312, 15), self_232348, '_x')
        # Assigning a type to the variable 'stypy_return_type' (line 312)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 312, 8), 'stypy_return_type', _x_232349)
        
        # ################# End of 'pdfRepr(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'pdfRepr' in the type store
        # Getting the type of 'stypy_return_type' (line 311)
        stypy_return_type_232350 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 311, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_232350)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'pdfRepr'
        return stypy_return_type_232350


# Assigning a type to the variable 'Verbatim' (line 305)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 305, 0), 'Verbatim', Verbatim)

# Assigning a Call to a Name (line 316):

# Assigning a Call to a Name (line 316):

# Call to dict(...): (line 316)
# Processing the call keyword arguments (line 316)
str_232352 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 317, 22), 'str', 'b')
keyword_232353 = str_232352
str_232354 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 317, 40), 'str', 'B')
keyword_232355 = str_232354
str_232356 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 317, 51), 'str', 'f')
keyword_232357 = str_232356
str_232358 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 317, 67), 'str', 'h')
keyword_232359 = str_232358
str_232360 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 318, 17), 'str', 's')
keyword_232361 = str_232360
str_232362 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 318, 30), 'str', 'S')
keyword_232363 = str_232362
str_232364 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 318, 44), 'str', 'n')
keyword_232365 = str_232364
str_232366 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 318, 61), 'str', 'BT')
keyword_232367 = str_232366
str_232368 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 319, 13), 'str', 'ET')
keyword_232369 = str_232368
str_232370 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 319, 28), 'str', 'c')
keyword_232371 = str_232370
str_232372 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 319, 44), 'str', 're')
keyword_232373 = str_232372
str_232374 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 319, 58), 'str', 'l')
keyword_232375 = str_232374
str_232376 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 319, 71), 'str', 'm')
keyword_232377 = str_232376
str_232378 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 320, 18), 'str', 'cm')
keyword_232379 = str_232378
str_232380 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 320, 37), 'str', 'Do')
keyword_232381 = str_232380
str_232382 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 320, 59), 'str', 'G')
keyword_232383 = str_232382
str_232384 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 321, 22), 'str', 'g')
keyword_232385 = str_232384
str_232386 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 321, 42), 'str', 'RG')
keyword_232387 = str_232386
str_232388 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 321, 66), 'str', 'rg')
keyword_232389 = str_232388
str_232390 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 322, 25), 'str', 'CS')
keyword_232391 = str_232390
str_232392 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 322, 56), 'str', 'cs')
keyword_232393 = str_232392
str_232394 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 323, 20), 'str', 'SCN')
keyword_232395 = str_232394
str_232396 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 323, 47), 'str', 'scn')
keyword_232397 = str_232396
str_232398 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 323, 63), 'str', 'd')
keyword_232399 = str_232398
str_232400 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 324, 16), 'str', 'j')
keyword_232401 = str_232400
str_232402 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 324, 33), 'str', 'J')
keyword_232403 = str_232402
str_232404 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 324, 49), 'str', 'gs')
keyword_232405 = str_232404
str_232406 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 324, 62), 'str', 'q')
keyword_232407 = str_232406
str_232408 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 325, 13), 'str', 'Q')
keyword_232409 = str_232408
str_232410 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 325, 27), 'str', 'Td')
keyword_232411 = str_232410
str_232412 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 325, 45), 'str', 'Tf')
keyword_232413 = str_232412
str_232414 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 325, 63), 'str', 'Tm')
keyword_232415 = str_232414
str_232416 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 326, 9), 'str', 'Tj')
keyword_232417 = str_232416
str_232418 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 326, 25), 'str', 'TJ')
keyword_232419 = str_232418
str_232420 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 326, 45), 'str', 'w')
keyword_232421 = str_232420
str_232422 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 326, 56), 'str', 'W')
keyword_232423 = str_232422
str_232424 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 326, 70), 'str', 'sh')
keyword_232425 = str_232424
kwargs_232426 = {'setcolor_nonstroke': keyword_232397, 'begin_text': keyword_232367, 'clip': keyword_232423, 'show': keyword_232417, 'setcolorspace_stroke': keyword_232391, 'stroke': keyword_232363, 'setdash': keyword_232399, 'showkern': keyword_232419, 'closepath': keyword_232359, 'setlinewidth': keyword_232421, 'setrgb_stroke': keyword_232387, 'lineto': keyword_232375, 'setlinecap': keyword_232403, 'shading': keyword_232425, 'end_text': keyword_232369, 'fill_stroke': keyword_232355, 'setrgb_nonstroke': keyword_232389, 'concat_matrix': keyword_232379, 'setcolorspace_nonstroke': keyword_232393, 'fill': keyword_232357, 'curveto': keyword_232371, 'textpos': keyword_232411, 'rectangle': keyword_232373, 'close_stroke': keyword_232361, 'textmatrix': keyword_232415, 'close_fill_stroke': keyword_232353, 'setgstate': keyword_232405, 'grestore': keyword_232409, 'endpath': keyword_232365, 'setlinejoin': keyword_232401, 'moveto': keyword_232377, 'setcolor_stroke': keyword_232395, 'setgray_stroke': keyword_232383, 'gsave': keyword_232407, 'selectfont': keyword_232413, 'setgray_nonstroke': keyword_232385, 'use_xobject': keyword_232381}
# Getting the type of 'dict' (line 316)
dict_232351 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 316, 10), 'dict', False)
# Calling dict(args, kwargs) (line 316)
dict_call_result_232427 = invoke(stypy.reporting.localization.Localization(__file__, 316, 10), dict_232351, *[], **kwargs_232426)

# Assigning a type to the variable '_pdfops' (line 316)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 316, 0), '_pdfops', dict_call_result_232427)

# Assigning a Call to a Name (line 328):

# Assigning a Call to a Name (line 328):

# Call to Bunch(...): (line 328)
# Processing the call keyword arguments (line 328)
# Calculating dict comprehension
module_type_store = module_type_store.open_function_context('dict comprehension expression', 328, 14, True)
# Calculating comprehension expression

# Call to iteritems(...): (line 328)
# Processing the call arguments (line 328)
# Getting the type of '_pdfops' (line 328)
_pdfops_232436 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 328, 69), '_pdfops', False)
# Processing the call keyword arguments (line 328)
kwargs_232437 = {}
# Getting the type of 'six' (line 328)
six_232434 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 328, 55), 'six', False)
# Obtaining the member 'iteritems' of a type (line 328)
iteritems_232435 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 328, 55), six_232434, 'iteritems')
# Calling iteritems(args, kwargs) (line 328)
iteritems_call_result_232438 = invoke(stypy.reporting.localization.Localization(__file__, 328, 55), iteritems_232435, *[_pdfops_232436], **kwargs_232437)

comprehension_232439 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 328, 14), iteritems_call_result_232438)
# Assigning a type to the variable 'name' (line 328)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 328, 14), 'name', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 328, 14), comprehension_232439))
# Assigning a type to the variable 'value' (line 328)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 328, 14), 'value', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 328, 14), comprehension_232439))
# Getting the type of 'name' (line 328)
name_232429 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 328, 14), 'name', False)

# Call to Operator(...): (line 328)
# Processing the call arguments (line 328)
# Getting the type of 'value' (line 328)
value_232431 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 328, 29), 'value', False)
# Processing the call keyword arguments (line 328)
kwargs_232432 = {}
# Getting the type of 'Operator' (line 328)
Operator_232430 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 328, 20), 'Operator', False)
# Calling Operator(args, kwargs) (line 328)
Operator_call_result_232433 = invoke(stypy.reporting.localization.Localization(__file__, 328, 20), Operator_232430, *[value_232431], **kwargs_232432)

dict_232440 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 328, 14), 'dict')
# Destroy the current context
module_type_store = module_type_store.close_function_context()
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 328, 14), dict_232440, (name_232429, Operator_call_result_232433))
kwargs_232441 = {'dict_232440': dict_232440}
# Getting the type of 'Bunch' (line 328)
Bunch_232428 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 328, 5), 'Bunch', False)
# Calling Bunch(args, kwargs) (line 328)
Bunch_call_result_232442 = invoke(stypy.reporting.localization.Localization(__file__, 328, 5), Bunch_232428, *[], **kwargs_232441)

# Assigning a type to the variable 'Op' (line 328)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 328, 0), 'Op', Bunch_call_result_232442)

@norecursion
def _paint_path(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function '_paint_path'
    module_type_store = module_type_store.open_function_context('_paint_path', 331, 0, False)
    
    # Passed parameters checking function
    _paint_path.stypy_localization = localization
    _paint_path.stypy_type_of_self = None
    _paint_path.stypy_type_store = module_type_store
    _paint_path.stypy_function_name = '_paint_path'
    _paint_path.stypy_param_names_list = ['fill', 'stroke']
    _paint_path.stypy_varargs_param_name = None
    _paint_path.stypy_kwargs_param_name = None
    _paint_path.stypy_call_defaults = defaults
    _paint_path.stypy_call_varargs = varargs
    _paint_path.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, '_paint_path', ['fill', 'stroke'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, '_paint_path', localization, ['fill', 'stroke'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of '_paint_path(...)' code ##################

    unicode_232443 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 334, (-1)), 'unicode', u'Return the PDF operator to paint a path in the following way:\n    fill:   fill the path with the fill color\n    stroke: stroke the outline of the path with the line color')
    
    # Getting the type of 'stroke' (line 335)
    stroke_232444 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 335, 7), 'stroke')
    # Testing the type of an if condition (line 335)
    if_condition_232445 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 335, 4), stroke_232444)
    # Assigning a type to the variable 'if_condition_232445' (line 335)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 335, 4), 'if_condition_232445', if_condition_232445)
    # SSA begins for if statement (line 335)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Getting the type of 'fill' (line 336)
    fill_232446 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 336, 11), 'fill')
    # Testing the type of an if condition (line 336)
    if_condition_232447 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 336, 8), fill_232446)
    # Assigning a type to the variable 'if_condition_232447' (line 336)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 336, 8), 'if_condition_232447', if_condition_232447)
    # SSA begins for if statement (line 336)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Getting the type of 'Op' (line 337)
    Op_232448 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 337, 19), 'Op')
    # Obtaining the member 'fill_stroke' of a type (line 337)
    fill_stroke_232449 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 337, 19), Op_232448, 'fill_stroke')
    # Assigning a type to the variable 'stypy_return_type' (line 337)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 337, 12), 'stypy_return_type', fill_stroke_232449)
    # SSA branch for the else part of an if statement (line 336)
    module_type_store.open_ssa_branch('else')
    # Getting the type of 'Op' (line 339)
    Op_232450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 339, 19), 'Op')
    # Obtaining the member 'stroke' of a type (line 339)
    stroke_232451 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 339, 19), Op_232450, 'stroke')
    # Assigning a type to the variable 'stypy_return_type' (line 339)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 339, 12), 'stypy_return_type', stroke_232451)
    # SSA join for if statement (line 336)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else part of an if statement (line 335)
    module_type_store.open_ssa_branch('else')
    
    # Getting the type of 'fill' (line 341)
    fill_232452 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 341, 11), 'fill')
    # Testing the type of an if condition (line 341)
    if_condition_232453 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 341, 8), fill_232452)
    # Assigning a type to the variable 'if_condition_232453' (line 341)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 341, 8), 'if_condition_232453', if_condition_232453)
    # SSA begins for if statement (line 341)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Getting the type of 'Op' (line 342)
    Op_232454 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 342, 19), 'Op')
    # Obtaining the member 'fill' of a type (line 342)
    fill_232455 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 342, 19), Op_232454, 'fill')
    # Assigning a type to the variable 'stypy_return_type' (line 342)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 342, 12), 'stypy_return_type', fill_232455)
    # SSA branch for the else part of an if statement (line 341)
    module_type_store.open_ssa_branch('else')
    # Getting the type of 'Op' (line 344)
    Op_232456 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 344, 19), 'Op')
    # Obtaining the member 'endpath' of a type (line 344)
    endpath_232457 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 344, 19), Op_232456, 'endpath')
    # Assigning a type to the variable 'stypy_return_type' (line 344)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 344, 12), 'stypy_return_type', endpath_232457)
    # SSA join for if statement (line 341)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 335)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # ################# End of '_paint_path(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function '_paint_path' in the type store
    # Getting the type of 'stypy_return_type' (line 331)
    stypy_return_type_232458 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 331, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_232458)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function '_paint_path'
    return stypy_return_type_232458

# Assigning a type to the variable '_paint_path' (line 331)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 331, 0), '_paint_path', _paint_path)

# Assigning a Name to a Attribute (line 345):

# Assigning a Name to a Attribute (line 345):
# Getting the type of '_paint_path' (line 345)
_paint_path_232459 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 345, 16), '_paint_path')
# Getting the type of 'Op' (line 345)
Op_232460 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 345, 0), 'Op')
# Setting the type of the member 'paint_path' of a type (line 345)
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 345, 0), Op_232460, 'paint_path', _paint_path_232459)
# Declaration of the 'Stream' class

class Stream(object, ):
    unicode_232461 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 353, (-1)), 'unicode', u'PDF stream object.\n\n    This has no pdfRepr method. Instead, call begin(), then output the\n    contents of the stream by calling write(), and finally call end().\n    ')
    
    # Assigning a Tuple to a Name (line 354):

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'None' (line 356)
        None_232462 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 356, 44), 'None')
        # Getting the type of 'None' (line 356)
        None_232463 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 356, 54), 'None')
        defaults = [None_232462, None_232463]
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 356, 4, False)
        # Assigning a type to the variable 'self' (line 357)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 357, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Stream.__init__', ['id', 'len', 'file', 'extra', 'png'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['id', 'len', 'file', 'extra', 'png'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        unicode_232464 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 361, (-1)), 'unicode', u'id: object id of stream; len: an unused Reference object for the\n        length of the stream, or None (to use a memory buffer); file:\n        a PdfFile; extra: a dictionary of extra key-value pairs to\n        include in the stream header; png: if the data is already\n        png compressed, the decode parameters')
        
        # Assigning a Name to a Attribute (line 362):
        
        # Assigning a Name to a Attribute (line 362):
        # Getting the type of 'id' (line 362)
        id_232465 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 362, 18), 'id')
        # Getting the type of 'self' (line 362)
        self_232466 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 362, 8), 'self')
        # Setting the type of the member 'id' of a type (line 362)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 362, 8), self_232466, 'id', id_232465)
        
        # Assigning a Name to a Attribute (line 363):
        
        # Assigning a Name to a Attribute (line 363):
        # Getting the type of 'len' (line 363)
        len_232467 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 363, 19), 'len')
        # Getting the type of 'self' (line 363)
        self_232468 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 363, 8), 'self')
        # Setting the type of the member 'len' of a type (line 363)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 363, 8), self_232468, 'len', len_232467)
        
        # Assigning a Name to a Attribute (line 364):
        
        # Assigning a Name to a Attribute (line 364):
        # Getting the type of 'file' (line 364)
        file_232469 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 364, 23), 'file')
        # Getting the type of 'self' (line 364)
        self_232470 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 364, 8), 'self')
        # Setting the type of the member 'pdfFile' of a type (line 364)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 364, 8), self_232470, 'pdfFile', file_232469)
        
        # Assigning a Attribute to a Attribute (line 365):
        
        # Assigning a Attribute to a Attribute (line 365):
        # Getting the type of 'file' (line 365)
        file_232471 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 365, 20), 'file')
        # Obtaining the member 'fh' of a type (line 365)
        fh_232472 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 365, 20), file_232471, 'fh')
        # Getting the type of 'self' (line 365)
        self_232473 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 365, 8), 'self')
        # Setting the type of the member 'file' of a type (line 365)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 365, 8), self_232473, 'file', fh_232472)
        
        # Assigning a Name to a Attribute (line 366):
        
        # Assigning a Name to a Attribute (line 366):
        # Getting the type of 'None' (line 366)
        None_232474 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 366, 27), 'None')
        # Getting the type of 'self' (line 366)
        self_232475 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 366, 8), 'self')
        # Setting the type of the member 'compressobj' of a type (line 366)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 366, 8), self_232475, 'compressobj', None_232474)
        
        # Type idiom detected: calculating its left and rigth part (line 367)
        # Getting the type of 'extra' (line 367)
        extra_232476 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 367, 11), 'extra')
        # Getting the type of 'None' (line 367)
        None_232477 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 367, 20), 'None')
        
        (may_be_232478, more_types_in_union_232479) = may_be_none(extra_232476, None_232477)

        if may_be_232478:

            if more_types_in_union_232479:
                # Runtime conditional SSA (line 367)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Call to a Attribute (line 368):
            
            # Assigning a Call to a Attribute (line 368):
            
            # Call to dict(...): (line 368)
            # Processing the call keyword arguments (line 368)
            kwargs_232481 = {}
            # Getting the type of 'dict' (line 368)
            dict_232480 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 368, 25), 'dict', False)
            # Calling dict(args, kwargs) (line 368)
            dict_call_result_232482 = invoke(stypy.reporting.localization.Localization(__file__, 368, 25), dict_232480, *[], **kwargs_232481)
            
            # Getting the type of 'self' (line 368)
            self_232483 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 368, 12), 'self')
            # Setting the type of the member 'extra' of a type (line 368)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 368, 12), self_232483, 'extra', dict_call_result_232482)

            if more_types_in_union_232479:
                # Runtime conditional SSA for else branch (line 367)
                module_type_store.open_ssa_branch('idiom else')



        if ((not may_be_232478) or more_types_in_union_232479):
            
            # Assigning a Call to a Attribute (line 370):
            
            # Assigning a Call to a Attribute (line 370):
            
            # Call to copy(...): (line 370)
            # Processing the call keyword arguments (line 370)
            kwargs_232486 = {}
            # Getting the type of 'extra' (line 370)
            extra_232484 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 370, 25), 'extra', False)
            # Obtaining the member 'copy' of a type (line 370)
            copy_232485 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 370, 25), extra_232484, 'copy')
            # Calling copy(args, kwargs) (line 370)
            copy_call_result_232487 = invoke(stypy.reporting.localization.Localization(__file__, 370, 25), copy_232485, *[], **kwargs_232486)
            
            # Getting the type of 'self' (line 370)
            self_232488 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 370, 12), 'self')
            # Setting the type of the member 'extra' of a type (line 370)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 370, 12), self_232488, 'extra', copy_call_result_232487)

            if (may_be_232478 and more_types_in_union_232479):
                # SSA join for if statement (line 367)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Type idiom detected: calculating its left and rigth part (line 371)
        # Getting the type of 'png' (line 371)
        png_232489 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 371, 8), 'png')
        # Getting the type of 'None' (line 371)
        None_232490 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 371, 22), 'None')
        
        (may_be_232491, more_types_in_union_232492) = may_not_be_none(png_232489, None_232490)

        if may_be_232491:

            if more_types_in_union_232492:
                # Runtime conditional SSA (line 371)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Call to update(...): (line 372)
            # Processing the call arguments (line 372)
            
            # Obtaining an instance of the builtin type 'dict' (line 372)
            dict_232496 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 372, 30), 'dict')
            # Adding type elements to the builtin type 'dict' instance (line 372)
            # Adding element type (key, value) (line 372)
            unicode_232497 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 372, 31), 'unicode', u'Filter')
            
            # Call to Name(...): (line 372)
            # Processing the call arguments (line 372)
            unicode_232499 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 372, 51), 'unicode', u'FlateDecode')
            # Processing the call keyword arguments (line 372)
            kwargs_232500 = {}
            # Getting the type of 'Name' (line 372)
            Name_232498 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 372, 46), 'Name', False)
            # Calling Name(args, kwargs) (line 372)
            Name_call_result_232501 = invoke(stypy.reporting.localization.Localization(__file__, 372, 46), Name_232498, *[unicode_232499], **kwargs_232500)
            
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 372, 30), dict_232496, (unicode_232497, Name_call_result_232501))
            # Adding element type (key, value) (line 372)
            unicode_232502 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 373, 31), 'unicode', u'DecodeParms')
            # Getting the type of 'png' (line 373)
            png_232503 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 373, 46), 'png', False)
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 372, 30), dict_232496, (unicode_232502, png_232503))
            
            # Processing the call keyword arguments (line 372)
            kwargs_232504 = {}
            # Getting the type of 'self' (line 372)
            self_232493 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 372, 12), 'self', False)
            # Obtaining the member 'extra' of a type (line 372)
            extra_232494 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 372, 12), self_232493, 'extra')
            # Obtaining the member 'update' of a type (line 372)
            update_232495 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 372, 12), extra_232494, 'update')
            # Calling update(args, kwargs) (line 372)
            update_call_result_232505 = invoke(stypy.reporting.localization.Localization(__file__, 372, 12), update_232495, *[dict_232496], **kwargs_232504)
            

            if more_types_in_union_232492:
                # SSA join for if statement (line 371)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Call to recordXref(...): (line 375)
        # Processing the call arguments (line 375)
        # Getting the type of 'self' (line 375)
        self_232509 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 375, 32), 'self', False)
        # Obtaining the member 'id' of a type (line 375)
        id_232510 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 375, 32), self_232509, 'id')
        # Processing the call keyword arguments (line 375)
        kwargs_232511 = {}
        # Getting the type of 'self' (line 375)
        self_232506 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 375, 8), 'self', False)
        # Obtaining the member 'pdfFile' of a type (line 375)
        pdfFile_232507 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 375, 8), self_232506, 'pdfFile')
        # Obtaining the member 'recordXref' of a type (line 375)
        recordXref_232508 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 375, 8), pdfFile_232507, 'recordXref')
        # Calling recordXref(args, kwargs) (line 375)
        recordXref_call_result_232512 = invoke(stypy.reporting.localization.Localization(__file__, 375, 8), recordXref_232508, *[id_232510], **kwargs_232511)
        
        
        
        # Evaluating a boolean operation
        
        # Obtaining the type of the subscript
        unicode_232513 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 376, 20), 'unicode', u'pdf.compression')
        # Getting the type of 'rcParams' (line 376)
        rcParams_232514 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 376, 11), 'rcParams')
        # Obtaining the member '__getitem__' of a type (line 376)
        getitem___232515 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 376, 11), rcParams_232514, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 376)
        subscript_call_result_232516 = invoke(stypy.reporting.localization.Localization(__file__, 376, 11), getitem___232515, unicode_232513)
        
        
        # Getting the type of 'png' (line 376)
        png_232517 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 376, 47), 'png')
        # Applying the 'not' unary operator (line 376)
        result_not__232518 = python_operator(stypy.reporting.localization.Localization(__file__, 376, 43), 'not', png_232517)
        
        # Applying the binary operator 'and' (line 376)
        result_and_keyword_232519 = python_operator(stypy.reporting.localization.Localization(__file__, 376, 11), 'and', subscript_call_result_232516, result_not__232518)
        
        # Testing the type of an if condition (line 376)
        if_condition_232520 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 376, 8), result_and_keyword_232519)
        # Assigning a type to the variable 'if_condition_232520' (line 376)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 376, 8), 'if_condition_232520', if_condition_232520)
        # SSA begins for if statement (line 376)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Attribute (line 377):
        
        # Assigning a Call to a Attribute (line 377):
        
        # Call to compressobj(...): (line 377)
        # Processing the call arguments (line 377)
        
        # Obtaining the type of the subscript
        unicode_232523 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 377, 57), 'unicode', u'pdf.compression')
        # Getting the type of 'rcParams' (line 377)
        rcParams_232524 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 377, 48), 'rcParams', False)
        # Obtaining the member '__getitem__' of a type (line 377)
        getitem___232525 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 377, 48), rcParams_232524, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 377)
        subscript_call_result_232526 = invoke(stypy.reporting.localization.Localization(__file__, 377, 48), getitem___232525, unicode_232523)
        
        # Processing the call keyword arguments (line 377)
        kwargs_232527 = {}
        # Getting the type of 'zlib' (line 377)
        zlib_232521 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 377, 31), 'zlib', False)
        # Obtaining the member 'compressobj' of a type (line 377)
        compressobj_232522 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 377, 31), zlib_232521, 'compressobj')
        # Calling compressobj(args, kwargs) (line 377)
        compressobj_call_result_232528 = invoke(stypy.reporting.localization.Localization(__file__, 377, 31), compressobj_232522, *[subscript_call_result_232526], **kwargs_232527)
        
        # Getting the type of 'self' (line 377)
        self_232529 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 377, 12), 'self')
        # Setting the type of the member 'compressobj' of a type (line 377)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 377, 12), self_232529, 'compressobj', compressobj_call_result_232528)
        # SSA join for if statement (line 376)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Type idiom detected: calculating its left and rigth part (line 378)
        # Getting the type of 'self' (line 378)
        self_232530 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 378, 11), 'self')
        # Obtaining the member 'len' of a type (line 378)
        len_232531 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 378, 11), self_232530, 'len')
        # Getting the type of 'None' (line 378)
        None_232532 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 378, 23), 'None')
        
        (may_be_232533, more_types_in_union_232534) = may_be_none(len_232531, None_232532)

        if may_be_232533:

            if more_types_in_union_232534:
                # Runtime conditional SSA (line 378)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Call to a Attribute (line 379):
            
            # Assigning a Call to a Attribute (line 379):
            
            # Call to BytesIO(...): (line 379)
            # Processing the call keyword arguments (line 379)
            kwargs_232536 = {}
            # Getting the type of 'BytesIO' (line 379)
            BytesIO_232535 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 24), 'BytesIO', False)
            # Calling BytesIO(args, kwargs) (line 379)
            BytesIO_call_result_232537 = invoke(stypy.reporting.localization.Localization(__file__, 379, 24), BytesIO_232535, *[], **kwargs_232536)
            
            # Getting the type of 'self' (line 379)
            self_232538 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 12), 'self')
            # Setting the type of the member 'file' of a type (line 379)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 379, 12), self_232538, 'file', BytesIO_call_result_232537)

            if more_types_in_union_232534:
                # Runtime conditional SSA for else branch (line 378)
                module_type_store.open_ssa_branch('idiom else')



        if ((not may_be_232533) or more_types_in_union_232534):
            
            # Call to _writeHeader(...): (line 381)
            # Processing the call keyword arguments (line 381)
            kwargs_232541 = {}
            # Getting the type of 'self' (line 381)
            self_232539 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 381, 12), 'self', False)
            # Obtaining the member '_writeHeader' of a type (line 381)
            _writeHeader_232540 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 381, 12), self_232539, '_writeHeader')
            # Calling _writeHeader(args, kwargs) (line 381)
            _writeHeader_call_result_232542 = invoke(stypy.reporting.localization.Localization(__file__, 381, 12), _writeHeader_232540, *[], **kwargs_232541)
            
            
            # Assigning a Call to a Attribute (line 382):
            
            # Assigning a Call to a Attribute (line 382):
            
            # Call to tell(...): (line 382)
            # Processing the call keyword arguments (line 382)
            kwargs_232546 = {}
            # Getting the type of 'self' (line 382)
            self_232543 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 382, 23), 'self', False)
            # Obtaining the member 'file' of a type (line 382)
            file_232544 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 382, 23), self_232543, 'file')
            # Obtaining the member 'tell' of a type (line 382)
            tell_232545 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 382, 23), file_232544, 'tell')
            # Calling tell(args, kwargs) (line 382)
            tell_call_result_232547 = invoke(stypy.reporting.localization.Localization(__file__, 382, 23), tell_232545, *[], **kwargs_232546)
            
            # Getting the type of 'self' (line 382)
            self_232548 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 382, 12), 'self')
            # Setting the type of the member 'pos' of a type (line 382)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 382, 12), self_232548, 'pos', tell_call_result_232547)

            if (may_be_232533 and more_types_in_union_232534):
                # SSA join for if statement (line 378)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def _writeHeader(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_writeHeader'
        module_type_store = module_type_store.open_function_context('_writeHeader', 384, 4, False)
        # Assigning a type to the variable 'self' (line 385)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 385, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Stream._writeHeader.__dict__.__setitem__('stypy_localization', localization)
        Stream._writeHeader.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Stream._writeHeader.__dict__.__setitem__('stypy_type_store', module_type_store)
        Stream._writeHeader.__dict__.__setitem__('stypy_function_name', 'Stream._writeHeader')
        Stream._writeHeader.__dict__.__setitem__('stypy_param_names_list', [])
        Stream._writeHeader.__dict__.__setitem__('stypy_varargs_param_name', None)
        Stream._writeHeader.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Stream._writeHeader.__dict__.__setitem__('stypy_call_defaults', defaults)
        Stream._writeHeader.__dict__.__setitem__('stypy_call_varargs', varargs)
        Stream._writeHeader.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Stream._writeHeader.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Stream._writeHeader', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_writeHeader', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_writeHeader(...)' code ##################

        
        # Assigning a Attribute to a Name (line 385):
        
        # Assigning a Attribute to a Name (line 385):
        # Getting the type of 'self' (line 385)
        self_232549 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 385, 16), 'self')
        # Obtaining the member 'file' of a type (line 385)
        file_232550 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 385, 16), self_232549, 'file')
        # Obtaining the member 'write' of a type (line 385)
        write_232551 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 385, 16), file_232550, 'write')
        # Assigning a type to the variable 'write' (line 385)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 385, 8), 'write', write_232551)
        
        # Call to write(...): (line 386)
        # Processing the call arguments (line 386)
        
        # Call to encode(...): (line 386)
        # Processing the call arguments (line 386)
        unicode_232558 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 386, 46), 'unicode', u'ascii')
        # Processing the call keyword arguments (line 386)
        kwargs_232559 = {}
        unicode_232553 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 386, 15), 'unicode', u'%d 0 obj\n')
        # Getting the type of 'self' (line 386)
        self_232554 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 386, 30), 'self', False)
        # Obtaining the member 'id' of a type (line 386)
        id_232555 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 386, 30), self_232554, 'id')
        # Applying the binary operator '%' (line 386)
        result_mod_232556 = python_operator(stypy.reporting.localization.Localization(__file__, 386, 15), '%', unicode_232553, id_232555)
        
        # Obtaining the member 'encode' of a type (line 386)
        encode_232557 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 386, 15), result_mod_232556, 'encode')
        # Calling encode(args, kwargs) (line 386)
        encode_call_result_232560 = invoke(stypy.reporting.localization.Localization(__file__, 386, 15), encode_232557, *[unicode_232558], **kwargs_232559)
        
        # Processing the call keyword arguments (line 386)
        kwargs_232561 = {}
        # Getting the type of 'write' (line 386)
        write_232552 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 386, 8), 'write', False)
        # Calling write(args, kwargs) (line 386)
        write_call_result_232562 = invoke(stypy.reporting.localization.Localization(__file__, 386, 8), write_232552, *[encode_call_result_232560], **kwargs_232561)
        
        
        # Assigning a Attribute to a Name (line 387):
        
        # Assigning a Attribute to a Name (line 387):
        # Getting the type of 'self' (line 387)
        self_232563 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 387, 15), 'self')
        # Obtaining the member 'extra' of a type (line 387)
        extra_232564 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 387, 15), self_232563, 'extra')
        # Assigning a type to the variable 'dict' (line 387)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 387, 8), 'dict', extra_232564)
        
        # Assigning a Attribute to a Subscript (line 388):
        
        # Assigning a Attribute to a Subscript (line 388):
        # Getting the type of 'self' (line 388)
        self_232565 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 388, 25), 'self')
        # Obtaining the member 'len' of a type (line 388)
        len_232566 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 388, 25), self_232565, 'len')
        # Getting the type of 'dict' (line 388)
        dict_232567 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 388, 8), 'dict')
        unicode_232568 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 388, 13), 'unicode', u'Length')
        # Storing an element on a container (line 388)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 388, 8), dict_232567, (unicode_232568, len_232566))
        
        
        # Obtaining the type of the subscript
        unicode_232569 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 389, 20), 'unicode', u'pdf.compression')
        # Getting the type of 'rcParams' (line 389)
        rcParams_232570 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 389, 11), 'rcParams')
        # Obtaining the member '__getitem__' of a type (line 389)
        getitem___232571 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 389, 11), rcParams_232570, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 389)
        subscript_call_result_232572 = invoke(stypy.reporting.localization.Localization(__file__, 389, 11), getitem___232571, unicode_232569)
        
        # Testing the type of an if condition (line 389)
        if_condition_232573 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 389, 8), subscript_call_result_232572)
        # Assigning a type to the variable 'if_condition_232573' (line 389)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 389, 8), 'if_condition_232573', if_condition_232573)
        # SSA begins for if statement (line 389)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Subscript (line 390):
        
        # Assigning a Call to a Subscript (line 390):
        
        # Call to Name(...): (line 390)
        # Processing the call arguments (line 390)
        unicode_232575 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 390, 34), 'unicode', u'FlateDecode')
        # Processing the call keyword arguments (line 390)
        kwargs_232576 = {}
        # Getting the type of 'Name' (line 390)
        Name_232574 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 390, 29), 'Name', False)
        # Calling Name(args, kwargs) (line 390)
        Name_call_result_232577 = invoke(stypy.reporting.localization.Localization(__file__, 390, 29), Name_232574, *[unicode_232575], **kwargs_232576)
        
        # Getting the type of 'dict' (line 390)
        dict_232578 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 390, 12), 'dict')
        unicode_232579 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 390, 17), 'unicode', u'Filter')
        # Storing an element on a container (line 390)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 390, 12), dict_232578, (unicode_232579, Name_call_result_232577))
        # SSA join for if statement (line 389)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to write(...): (line 392)
        # Processing the call arguments (line 392)
        
        # Call to pdfRepr(...): (line 392)
        # Processing the call arguments (line 392)
        # Getting the type of 'dict' (line 392)
        dict_232582 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 22), 'dict', False)
        # Processing the call keyword arguments (line 392)
        kwargs_232583 = {}
        # Getting the type of 'pdfRepr' (line 392)
        pdfRepr_232581 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 14), 'pdfRepr', False)
        # Calling pdfRepr(args, kwargs) (line 392)
        pdfRepr_call_result_232584 = invoke(stypy.reporting.localization.Localization(__file__, 392, 14), pdfRepr_232581, *[dict_232582], **kwargs_232583)
        
        # Processing the call keyword arguments (line 392)
        kwargs_232585 = {}
        # Getting the type of 'write' (line 392)
        write_232580 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 8), 'write', False)
        # Calling write(args, kwargs) (line 392)
        write_call_result_232586 = invoke(stypy.reporting.localization.Localization(__file__, 392, 8), write_232580, *[pdfRepr_call_result_232584], **kwargs_232585)
        
        
        # Call to write(...): (line 393)
        # Processing the call arguments (line 393)
        str_232588 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 393, 14), 'str', '\nstream\n')
        # Processing the call keyword arguments (line 393)
        kwargs_232589 = {}
        # Getting the type of 'write' (line 393)
        write_232587 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 393, 8), 'write', False)
        # Calling write(args, kwargs) (line 393)
        write_call_result_232590 = invoke(stypy.reporting.localization.Localization(__file__, 393, 8), write_232587, *[str_232588], **kwargs_232589)
        
        
        # ################# End of '_writeHeader(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_writeHeader' in the type store
        # Getting the type of 'stypy_return_type' (line 384)
        stypy_return_type_232591 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 384, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_232591)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_writeHeader'
        return stypy_return_type_232591


    @norecursion
    def end(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'end'
        module_type_store = module_type_store.open_function_context('end', 395, 4, False)
        # Assigning a type to the variable 'self' (line 396)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 396, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Stream.end.__dict__.__setitem__('stypy_localization', localization)
        Stream.end.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Stream.end.__dict__.__setitem__('stypy_type_store', module_type_store)
        Stream.end.__dict__.__setitem__('stypy_function_name', 'Stream.end')
        Stream.end.__dict__.__setitem__('stypy_param_names_list', [])
        Stream.end.__dict__.__setitem__('stypy_varargs_param_name', None)
        Stream.end.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Stream.end.__dict__.__setitem__('stypy_call_defaults', defaults)
        Stream.end.__dict__.__setitem__('stypy_call_varargs', varargs)
        Stream.end.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Stream.end.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Stream.end', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'end', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'end(...)' code ##################

        unicode_232592 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 396, 8), 'unicode', u'Finalize stream.')
        
        # Call to _flush(...): (line 398)
        # Processing the call keyword arguments (line 398)
        kwargs_232595 = {}
        # Getting the type of 'self' (line 398)
        self_232593 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 398, 8), 'self', False)
        # Obtaining the member '_flush' of a type (line 398)
        _flush_232594 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 398, 8), self_232593, '_flush')
        # Calling _flush(args, kwargs) (line 398)
        _flush_call_result_232596 = invoke(stypy.reporting.localization.Localization(__file__, 398, 8), _flush_232594, *[], **kwargs_232595)
        
        
        # Type idiom detected: calculating its left and rigth part (line 399)
        # Getting the type of 'self' (line 399)
        self_232597 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 399, 11), 'self')
        # Obtaining the member 'len' of a type (line 399)
        len_232598 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 399, 11), self_232597, 'len')
        # Getting the type of 'None' (line 399)
        None_232599 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 399, 23), 'None')
        
        (may_be_232600, more_types_in_union_232601) = may_be_none(len_232598, None_232599)

        if may_be_232600:

            if more_types_in_union_232601:
                # Runtime conditional SSA (line 399)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Call to a Name (line 400):
            
            # Assigning a Call to a Name (line 400):
            
            # Call to getvalue(...): (line 400)
            # Processing the call keyword arguments (line 400)
            kwargs_232605 = {}
            # Getting the type of 'self' (line 400)
            self_232602 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 400, 23), 'self', False)
            # Obtaining the member 'file' of a type (line 400)
            file_232603 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 400, 23), self_232602, 'file')
            # Obtaining the member 'getvalue' of a type (line 400)
            getvalue_232604 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 400, 23), file_232603, 'getvalue')
            # Calling getvalue(args, kwargs) (line 400)
            getvalue_call_result_232606 = invoke(stypy.reporting.localization.Localization(__file__, 400, 23), getvalue_232604, *[], **kwargs_232605)
            
            # Assigning a type to the variable 'contents' (line 400)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 400, 12), 'contents', getvalue_call_result_232606)
            
            # Assigning a Call to a Attribute (line 401):
            
            # Assigning a Call to a Attribute (line 401):
            
            # Call to len(...): (line 401)
            # Processing the call arguments (line 401)
            # Getting the type of 'contents' (line 401)
            contents_232608 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 401, 27), 'contents', False)
            # Processing the call keyword arguments (line 401)
            kwargs_232609 = {}
            # Getting the type of 'len' (line 401)
            len_232607 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 401, 23), 'len', False)
            # Calling len(args, kwargs) (line 401)
            len_call_result_232610 = invoke(stypy.reporting.localization.Localization(__file__, 401, 23), len_232607, *[contents_232608], **kwargs_232609)
            
            # Getting the type of 'self' (line 401)
            self_232611 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 401, 12), 'self')
            # Setting the type of the member 'len' of a type (line 401)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 401, 12), self_232611, 'len', len_call_result_232610)
            
            # Assigning a Attribute to a Attribute (line 402):
            
            # Assigning a Attribute to a Attribute (line 402):
            # Getting the type of 'self' (line 402)
            self_232612 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 402, 24), 'self')
            # Obtaining the member 'pdfFile' of a type (line 402)
            pdfFile_232613 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 402, 24), self_232612, 'pdfFile')
            # Obtaining the member 'fh' of a type (line 402)
            fh_232614 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 402, 24), pdfFile_232613, 'fh')
            # Getting the type of 'self' (line 402)
            self_232615 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 402, 12), 'self')
            # Setting the type of the member 'file' of a type (line 402)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 402, 12), self_232615, 'file', fh_232614)
            
            # Call to _writeHeader(...): (line 403)
            # Processing the call keyword arguments (line 403)
            kwargs_232618 = {}
            # Getting the type of 'self' (line 403)
            self_232616 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 403, 12), 'self', False)
            # Obtaining the member '_writeHeader' of a type (line 403)
            _writeHeader_232617 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 403, 12), self_232616, '_writeHeader')
            # Calling _writeHeader(args, kwargs) (line 403)
            _writeHeader_call_result_232619 = invoke(stypy.reporting.localization.Localization(__file__, 403, 12), _writeHeader_232617, *[], **kwargs_232618)
            
            
            # Call to write(...): (line 404)
            # Processing the call arguments (line 404)
            # Getting the type of 'contents' (line 404)
            contents_232623 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 404, 28), 'contents', False)
            # Processing the call keyword arguments (line 404)
            kwargs_232624 = {}
            # Getting the type of 'self' (line 404)
            self_232620 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 404, 12), 'self', False)
            # Obtaining the member 'file' of a type (line 404)
            file_232621 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 404, 12), self_232620, 'file')
            # Obtaining the member 'write' of a type (line 404)
            write_232622 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 404, 12), file_232621, 'write')
            # Calling write(args, kwargs) (line 404)
            write_call_result_232625 = invoke(stypy.reporting.localization.Localization(__file__, 404, 12), write_232622, *[contents_232623], **kwargs_232624)
            
            
            # Call to write(...): (line 405)
            # Processing the call arguments (line 405)
            str_232629 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 405, 28), 'str', '\nendstream\nendobj\n')
            # Processing the call keyword arguments (line 405)
            kwargs_232630 = {}
            # Getting the type of 'self' (line 405)
            self_232626 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 405, 12), 'self', False)
            # Obtaining the member 'file' of a type (line 405)
            file_232627 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 405, 12), self_232626, 'file')
            # Obtaining the member 'write' of a type (line 405)
            write_232628 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 405, 12), file_232627, 'write')
            # Calling write(args, kwargs) (line 405)
            write_call_result_232631 = invoke(stypy.reporting.localization.Localization(__file__, 405, 12), write_232628, *[str_232629], **kwargs_232630)
            

            if more_types_in_union_232601:
                # Runtime conditional SSA for else branch (line 399)
                module_type_store.open_ssa_branch('idiom else')



        if ((not may_be_232600) or more_types_in_union_232601):
            
            # Assigning a BinOp to a Name (line 407):
            
            # Assigning a BinOp to a Name (line 407):
            
            # Call to tell(...): (line 407)
            # Processing the call keyword arguments (line 407)
            kwargs_232635 = {}
            # Getting the type of 'self' (line 407)
            self_232632 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 407, 21), 'self', False)
            # Obtaining the member 'file' of a type (line 407)
            file_232633 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 407, 21), self_232632, 'file')
            # Obtaining the member 'tell' of a type (line 407)
            tell_232634 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 407, 21), file_232633, 'tell')
            # Calling tell(args, kwargs) (line 407)
            tell_call_result_232636 = invoke(stypy.reporting.localization.Localization(__file__, 407, 21), tell_232634, *[], **kwargs_232635)
            
            # Getting the type of 'self' (line 407)
            self_232637 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 407, 40), 'self')
            # Obtaining the member 'pos' of a type (line 407)
            pos_232638 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 407, 40), self_232637, 'pos')
            # Applying the binary operator '-' (line 407)
            result_sub_232639 = python_operator(stypy.reporting.localization.Localization(__file__, 407, 21), '-', tell_call_result_232636, pos_232638)
            
            # Assigning a type to the variable 'length' (line 407)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 407, 12), 'length', result_sub_232639)
            
            # Call to write(...): (line 408)
            # Processing the call arguments (line 408)
            str_232643 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 408, 28), 'str', '\nendstream\nendobj\n')
            # Processing the call keyword arguments (line 408)
            kwargs_232644 = {}
            # Getting the type of 'self' (line 408)
            self_232640 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 408, 12), 'self', False)
            # Obtaining the member 'file' of a type (line 408)
            file_232641 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 408, 12), self_232640, 'file')
            # Obtaining the member 'write' of a type (line 408)
            write_232642 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 408, 12), file_232641, 'write')
            # Calling write(args, kwargs) (line 408)
            write_call_result_232645 = invoke(stypy.reporting.localization.Localization(__file__, 408, 12), write_232642, *[str_232643], **kwargs_232644)
            
            
            # Call to writeObject(...): (line 409)
            # Processing the call arguments (line 409)
            # Getting the type of 'self' (line 409)
            self_232649 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 409, 37), 'self', False)
            # Obtaining the member 'len' of a type (line 409)
            len_232650 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 409, 37), self_232649, 'len')
            # Getting the type of 'length' (line 409)
            length_232651 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 409, 47), 'length', False)
            # Processing the call keyword arguments (line 409)
            kwargs_232652 = {}
            # Getting the type of 'self' (line 409)
            self_232646 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 409, 12), 'self', False)
            # Obtaining the member 'pdfFile' of a type (line 409)
            pdfFile_232647 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 409, 12), self_232646, 'pdfFile')
            # Obtaining the member 'writeObject' of a type (line 409)
            writeObject_232648 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 409, 12), pdfFile_232647, 'writeObject')
            # Calling writeObject(args, kwargs) (line 409)
            writeObject_call_result_232653 = invoke(stypy.reporting.localization.Localization(__file__, 409, 12), writeObject_232648, *[len_232650, length_232651], **kwargs_232652)
            

            if (may_be_232600 and more_types_in_union_232601):
                # SSA join for if statement (line 399)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # ################# End of 'end(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'end' in the type store
        # Getting the type of 'stypy_return_type' (line 395)
        stypy_return_type_232654 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 395, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_232654)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'end'
        return stypy_return_type_232654


    @norecursion
    def write(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'write'
        module_type_store = module_type_store.open_function_context('write', 411, 4, False)
        # Assigning a type to the variable 'self' (line 412)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 412, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Stream.write.__dict__.__setitem__('stypy_localization', localization)
        Stream.write.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Stream.write.__dict__.__setitem__('stypy_type_store', module_type_store)
        Stream.write.__dict__.__setitem__('stypy_function_name', 'Stream.write')
        Stream.write.__dict__.__setitem__('stypy_param_names_list', ['data'])
        Stream.write.__dict__.__setitem__('stypy_varargs_param_name', None)
        Stream.write.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Stream.write.__dict__.__setitem__('stypy_call_defaults', defaults)
        Stream.write.__dict__.__setitem__('stypy_call_varargs', varargs)
        Stream.write.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Stream.write.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Stream.write', ['data'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'write', localization, ['data'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'write(...)' code ##################

        unicode_232655 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 412, 8), 'unicode', u'Write some data on the stream.')
        
        # Type idiom detected: calculating its left and rigth part (line 414)
        # Getting the type of 'self' (line 414)
        self_232656 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 414, 11), 'self')
        # Obtaining the member 'compressobj' of a type (line 414)
        compressobj_232657 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 414, 11), self_232656, 'compressobj')
        # Getting the type of 'None' (line 414)
        None_232658 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 414, 31), 'None')
        
        (may_be_232659, more_types_in_union_232660) = may_be_none(compressobj_232657, None_232658)

        if may_be_232659:

            if more_types_in_union_232660:
                # Runtime conditional SSA (line 414)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Call to write(...): (line 415)
            # Processing the call arguments (line 415)
            # Getting the type of 'data' (line 415)
            data_232664 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 415, 28), 'data', False)
            # Processing the call keyword arguments (line 415)
            kwargs_232665 = {}
            # Getting the type of 'self' (line 415)
            self_232661 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 415, 12), 'self', False)
            # Obtaining the member 'file' of a type (line 415)
            file_232662 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 415, 12), self_232661, 'file')
            # Obtaining the member 'write' of a type (line 415)
            write_232663 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 415, 12), file_232662, 'write')
            # Calling write(args, kwargs) (line 415)
            write_call_result_232666 = invoke(stypy.reporting.localization.Localization(__file__, 415, 12), write_232663, *[data_232664], **kwargs_232665)
            

            if more_types_in_union_232660:
                # Runtime conditional SSA for else branch (line 414)
                module_type_store.open_ssa_branch('idiom else')



        if ((not may_be_232659) or more_types_in_union_232660):
            
            # Assigning a Call to a Name (line 417):
            
            # Assigning a Call to a Name (line 417):
            
            # Call to compress(...): (line 417)
            # Processing the call arguments (line 417)
            # Getting the type of 'data' (line 417)
            data_232670 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 417, 51), 'data', False)
            # Processing the call keyword arguments (line 417)
            kwargs_232671 = {}
            # Getting the type of 'self' (line 417)
            self_232667 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 417, 25), 'self', False)
            # Obtaining the member 'compressobj' of a type (line 417)
            compressobj_232668 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 417, 25), self_232667, 'compressobj')
            # Obtaining the member 'compress' of a type (line 417)
            compress_232669 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 417, 25), compressobj_232668, 'compress')
            # Calling compress(args, kwargs) (line 417)
            compress_call_result_232672 = invoke(stypy.reporting.localization.Localization(__file__, 417, 25), compress_232669, *[data_232670], **kwargs_232671)
            
            # Assigning a type to the variable 'compressed' (line 417)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 417, 12), 'compressed', compress_call_result_232672)
            
            # Call to write(...): (line 418)
            # Processing the call arguments (line 418)
            # Getting the type of 'compressed' (line 418)
            compressed_232676 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 418, 28), 'compressed', False)
            # Processing the call keyword arguments (line 418)
            kwargs_232677 = {}
            # Getting the type of 'self' (line 418)
            self_232673 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 418, 12), 'self', False)
            # Obtaining the member 'file' of a type (line 418)
            file_232674 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 418, 12), self_232673, 'file')
            # Obtaining the member 'write' of a type (line 418)
            write_232675 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 418, 12), file_232674, 'write')
            # Calling write(args, kwargs) (line 418)
            write_call_result_232678 = invoke(stypy.reporting.localization.Localization(__file__, 418, 12), write_232675, *[compressed_232676], **kwargs_232677)
            

            if (may_be_232659 and more_types_in_union_232660):
                # SSA join for if statement (line 414)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # ################# End of 'write(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'write' in the type store
        # Getting the type of 'stypy_return_type' (line 411)
        stypy_return_type_232679 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 411, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_232679)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'write'
        return stypy_return_type_232679


    @norecursion
    def _flush(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_flush'
        module_type_store = module_type_store.open_function_context('_flush', 420, 4, False)
        # Assigning a type to the variable 'self' (line 421)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 421, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Stream._flush.__dict__.__setitem__('stypy_localization', localization)
        Stream._flush.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Stream._flush.__dict__.__setitem__('stypy_type_store', module_type_store)
        Stream._flush.__dict__.__setitem__('stypy_function_name', 'Stream._flush')
        Stream._flush.__dict__.__setitem__('stypy_param_names_list', [])
        Stream._flush.__dict__.__setitem__('stypy_varargs_param_name', None)
        Stream._flush.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Stream._flush.__dict__.__setitem__('stypy_call_defaults', defaults)
        Stream._flush.__dict__.__setitem__('stypy_call_varargs', varargs)
        Stream._flush.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Stream._flush.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Stream._flush', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_flush', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_flush(...)' code ##################

        unicode_232680 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 421, 8), 'unicode', u'Flush the compression object.')
        
        
        # Getting the type of 'self' (line 423)
        self_232681 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 423, 11), 'self')
        # Obtaining the member 'compressobj' of a type (line 423)
        compressobj_232682 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 423, 11), self_232681, 'compressobj')
        # Getting the type of 'None' (line 423)
        None_232683 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 423, 35), 'None')
        # Applying the binary operator 'isnot' (line 423)
        result_is_not_232684 = python_operator(stypy.reporting.localization.Localization(__file__, 423, 11), 'isnot', compressobj_232682, None_232683)
        
        # Testing the type of an if condition (line 423)
        if_condition_232685 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 423, 8), result_is_not_232684)
        # Assigning a type to the variable 'if_condition_232685' (line 423)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 423, 8), 'if_condition_232685', if_condition_232685)
        # SSA begins for if statement (line 423)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 424):
        
        # Assigning a Call to a Name (line 424):
        
        # Call to flush(...): (line 424)
        # Processing the call keyword arguments (line 424)
        kwargs_232689 = {}
        # Getting the type of 'self' (line 424)
        self_232686 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 424, 25), 'self', False)
        # Obtaining the member 'compressobj' of a type (line 424)
        compressobj_232687 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 424, 25), self_232686, 'compressobj')
        # Obtaining the member 'flush' of a type (line 424)
        flush_232688 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 424, 25), compressobj_232687, 'flush')
        # Calling flush(args, kwargs) (line 424)
        flush_call_result_232690 = invoke(stypy.reporting.localization.Localization(__file__, 424, 25), flush_232688, *[], **kwargs_232689)
        
        # Assigning a type to the variable 'compressed' (line 424)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 424, 12), 'compressed', flush_call_result_232690)
        
        # Call to write(...): (line 425)
        # Processing the call arguments (line 425)
        # Getting the type of 'compressed' (line 425)
        compressed_232694 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 425, 28), 'compressed', False)
        # Processing the call keyword arguments (line 425)
        kwargs_232695 = {}
        # Getting the type of 'self' (line 425)
        self_232691 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 425, 12), 'self', False)
        # Obtaining the member 'file' of a type (line 425)
        file_232692 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 425, 12), self_232691, 'file')
        # Obtaining the member 'write' of a type (line 425)
        write_232693 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 425, 12), file_232692, 'write')
        # Calling write(args, kwargs) (line 425)
        write_call_result_232696 = invoke(stypy.reporting.localization.Localization(__file__, 425, 12), write_232693, *[compressed_232694], **kwargs_232695)
        
        
        # Assigning a Name to a Attribute (line 426):
        
        # Assigning a Name to a Attribute (line 426):
        # Getting the type of 'None' (line 426)
        None_232697 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 426, 31), 'None')
        # Getting the type of 'self' (line 426)
        self_232698 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 426, 12), 'self')
        # Setting the type of the member 'compressobj' of a type (line 426)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 426, 12), self_232698, 'compressobj', None_232697)
        # SSA join for if statement (line 423)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of '_flush(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_flush' in the type store
        # Getting the type of 'stypy_return_type' (line 420)
        stypy_return_type_232699 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 420, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_232699)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_flush'
        return stypy_return_type_232699


# Assigning a type to the variable 'Stream' (line 348)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 348, 0), 'Stream', Stream)

# Assigning a Tuple to a Name (line 354):

# Obtaining an instance of the builtin type 'tuple' (line 354)
tuple_232700 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 354, 17), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 354)
# Adding element type (line 354)
unicode_232701 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 354, 17), 'unicode', u'id')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 354, 17), tuple_232700, unicode_232701)
# Adding element type (line 354)
unicode_232702 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 354, 23), 'unicode', u'len')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 354, 17), tuple_232700, unicode_232702)
# Adding element type (line 354)
unicode_232703 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 354, 30), 'unicode', u'pdfFile')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 354, 17), tuple_232700, unicode_232703)
# Adding element type (line 354)
unicode_232704 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 354, 41), 'unicode', u'file')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 354, 17), tuple_232700, unicode_232704)
# Adding element type (line 354)
unicode_232705 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 354, 49), 'unicode', u'compressobj')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 354, 17), tuple_232700, unicode_232705)
# Adding element type (line 354)
unicode_232706 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 354, 64), 'unicode', u'extra')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 354, 17), tuple_232700, unicode_232706)
# Adding element type (line 354)
unicode_232707 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 354, 73), 'unicode', u'pos')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 354, 17), tuple_232700, unicode_232707)

# Getting the type of 'Stream'
Stream_232708 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'Stream')
# Setting the type of the member '__slots__' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), Stream_232708, '__slots__', tuple_232700)
# Declaration of the 'PdfFile' class

class PdfFile(object, ):
    unicode_232709 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 430, 4), 'unicode', u'PDF file object.')

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'None' (line 432)
        None_232710 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 432, 42), 'None')
        defaults = [None_232710]
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 432, 4, False)
        # Assigning a type to the variable 'self' (line 433)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 433, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'PdfFile.__init__', ['filename', 'metadata'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['filename', 'metadata'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Assigning a Num to a Attribute (line 433):
        
        # Assigning a Num to a Attribute (line 433):
        int_232711 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 433, 26), 'int')
        # Getting the type of 'self' (line 433)
        self_232712 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 433, 8), 'self')
        # Setting the type of the member 'nextObject' of a type (line 433)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 433, 8), self_232712, 'nextObject', int_232711)
        
        # Assigning a List to a Attribute (line 434):
        
        # Assigning a List to a Attribute (line 434):
        
        # Obtaining an instance of the builtin type 'list' (line 434)
        list_232713 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 434, 25), 'list')
        # Adding type elements to the builtin type 'list' instance (line 434)
        # Adding element type (line 434)
        
        # Obtaining an instance of the builtin type 'list' (line 434)
        list_232714 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 434, 26), 'list')
        # Adding type elements to the builtin type 'list' instance (line 434)
        # Adding element type (line 434)
        int_232715 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 434, 27), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 434, 26), list_232714, int_232715)
        # Adding element type (line 434)
        int_232716 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 434, 30), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 434, 26), list_232714, int_232716)
        # Adding element type (line 434)
        unicode_232717 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 434, 37), 'unicode', u'the zero object')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 434, 26), list_232714, unicode_232717)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 434, 25), list_232713, list_232714)
        
        # Getting the type of 'self' (line 434)
        self_232718 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 434, 8), 'self')
        # Setting the type of the member 'xrefTable' of a type (line 434)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 434, 8), self_232718, 'xrefTable', list_232713)
        
        # Assigning a Name to a Attribute (line 435):
        
        # Assigning a Name to a Attribute (line 435):
        # Getting the type of 'False' (line 435)
        False_232719 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 435, 37), 'False')
        # Getting the type of 'self' (line 435)
        self_232720 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 435, 8), 'self')
        # Setting the type of the member 'passed_in_file_object' of a type (line 435)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 435, 8), self_232720, 'passed_in_file_object', False_232719)
        
        # Assigning a Name to a Attribute (line 436):
        
        # Assigning a Name to a Attribute (line 436):
        # Getting the type of 'None' (line 436)
        None_232721 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 436, 34), 'None')
        # Getting the type of 'self' (line 436)
        self_232722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 436, 8), 'self')
        # Setting the type of the member 'original_file_like' of a type (line 436)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 436, 8), self_232722, 'original_file_like', None_232721)
        
        # Assigning a Num to a Attribute (line 437):
        
        # Assigning a Num to a Attribute (line 437):
        int_232723 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 437, 25), 'int')
        # Getting the type of 'self' (line 437)
        self_232724 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 437, 8), 'self')
        # Setting the type of the member 'tell_base' of a type (line 437)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 437, 8), self_232724, 'tell_base', int_232723)
        
        
        # Call to isinstance(...): (line 438)
        # Processing the call arguments (line 438)
        # Getting the type of 'filename' (line 438)
        filename_232726 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 438, 22), 'filename', False)
        # Getting the type of 'six' (line 438)
        six_232727 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 438, 32), 'six', False)
        # Obtaining the member 'string_types' of a type (line 438)
        string_types_232728 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 438, 32), six_232727, 'string_types')
        # Processing the call keyword arguments (line 438)
        kwargs_232729 = {}
        # Getting the type of 'isinstance' (line 438)
        isinstance_232725 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 438, 11), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 438)
        isinstance_call_result_232730 = invoke(stypy.reporting.localization.Localization(__file__, 438, 11), isinstance_232725, *[filename_232726, string_types_232728], **kwargs_232729)
        
        # Testing the type of an if condition (line 438)
        if_condition_232731 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 438, 8), isinstance_call_result_232730)
        # Assigning a type to the variable 'if_condition_232731' (line 438)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 438, 8), 'if_condition_232731', if_condition_232731)
        # SSA begins for if statement (line 438)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 439):
        
        # Assigning a Call to a Name (line 439):
        
        # Call to open(...): (line 439)
        # Processing the call arguments (line 439)
        # Getting the type of 'filename' (line 439)
        filename_232733 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 439, 22), 'filename', False)
        unicode_232734 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 439, 32), 'unicode', u'wb')
        # Processing the call keyword arguments (line 439)
        kwargs_232735 = {}
        # Getting the type of 'open' (line 439)
        open_232732 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 439, 17), 'open', False)
        # Calling open(args, kwargs) (line 439)
        open_call_result_232736 = invoke(stypy.reporting.localization.Localization(__file__, 439, 17), open_232732, *[filename_232733, unicode_232734], **kwargs_232735)
        
        # Assigning a type to the variable 'fh' (line 439)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 439, 12), 'fh', open_call_result_232736)
        # SSA branch for the else part of an if statement (line 438)
        module_type_store.open_ssa_branch('else')
        
        
        # Call to is_writable_file_like(...): (line 440)
        # Processing the call arguments (line 440)
        # Getting the type of 'filename' (line 440)
        filename_232738 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 440, 35), 'filename', False)
        # Processing the call keyword arguments (line 440)
        kwargs_232739 = {}
        # Getting the type of 'is_writable_file_like' (line 440)
        is_writable_file_like_232737 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 440, 13), 'is_writable_file_like', False)
        # Calling is_writable_file_like(args, kwargs) (line 440)
        is_writable_file_like_call_result_232740 = invoke(stypy.reporting.localization.Localization(__file__, 440, 13), is_writable_file_like_232737, *[filename_232738], **kwargs_232739)
        
        # Testing the type of an if condition (line 440)
        if_condition_232741 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 440, 13), is_writable_file_like_call_result_232740)
        # Assigning a type to the variable 'if_condition_232741' (line 440)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 440, 13), 'if_condition_232741', if_condition_232741)
        # SSA begins for if statement (line 440)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        
        # SSA begins for try-except statement (line 441)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
        
        # Assigning a Call to a Attribute (line 442):
        
        # Assigning a Call to a Attribute (line 442):
        
        # Call to tell(...): (line 442)
        # Processing the call keyword arguments (line 442)
        kwargs_232744 = {}
        # Getting the type of 'filename' (line 442)
        filename_232742 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 442, 33), 'filename', False)
        # Obtaining the member 'tell' of a type (line 442)
        tell_232743 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 442, 33), filename_232742, 'tell')
        # Calling tell(args, kwargs) (line 442)
        tell_call_result_232745 = invoke(stypy.reporting.localization.Localization(__file__, 442, 33), tell_232743, *[], **kwargs_232744)
        
        # Getting the type of 'self' (line 442)
        self_232746 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 442, 16), 'self')
        # Setting the type of the member 'tell_base' of a type (line 442)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 442, 16), self_232746, 'tell_base', tell_call_result_232745)
        # SSA branch for the except part of a try statement (line 441)
        # SSA branch for the except 'IOError' branch of a try statement (line 441)
        module_type_store.open_ssa_branch('except')
        
        # Assigning a Call to a Name (line 444):
        
        # Assigning a Call to a Name (line 444):
        
        # Call to BytesIO(...): (line 444)
        # Processing the call keyword arguments (line 444)
        kwargs_232748 = {}
        # Getting the type of 'BytesIO' (line 444)
        BytesIO_232747 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 444, 21), 'BytesIO', False)
        # Calling BytesIO(args, kwargs) (line 444)
        BytesIO_call_result_232749 = invoke(stypy.reporting.localization.Localization(__file__, 444, 21), BytesIO_232747, *[], **kwargs_232748)
        
        # Assigning a type to the variable 'fh' (line 444)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 444, 16), 'fh', BytesIO_call_result_232749)
        
        # Assigning a Name to a Attribute (line 445):
        
        # Assigning a Name to a Attribute (line 445):
        # Getting the type of 'filename' (line 445)
        filename_232750 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 445, 42), 'filename')
        # Getting the type of 'self' (line 445)
        self_232751 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 445, 16), 'self')
        # Setting the type of the member 'original_file_like' of a type (line 445)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 445, 16), self_232751, 'original_file_like', filename_232750)
        # SSA branch for the else branch of a try statement (line 441)
        module_type_store.open_ssa_branch('except else')
        
        # Assigning a Name to a Name (line 447):
        
        # Assigning a Name to a Name (line 447):
        # Getting the type of 'filename' (line 447)
        filename_232752 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 447, 21), 'filename')
        # Assigning a type to the variable 'fh' (line 447)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 447, 16), 'fh', filename_232752)
        
        # Assigning a Name to a Attribute (line 448):
        
        # Assigning a Name to a Attribute (line 448):
        # Getting the type of 'True' (line 448)
        True_232753 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 45), 'True')
        # Getting the type of 'self' (line 448)
        self_232754 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 16), 'self')
        # Setting the type of the member 'passed_in_file_object' of a type (line 448)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 448, 16), self_232754, 'passed_in_file_object', True_232753)
        # SSA join for try-except statement (line 441)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA branch for the else part of an if statement (line 440)
        module_type_store.open_ssa_branch('else')
        
        # Call to ValueError(...): (line 450)
        # Processing the call arguments (line 450)
        unicode_232756 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 450, 29), 'unicode', u'filename must be a path or a file-like object')
        # Processing the call keyword arguments (line 450)
        kwargs_232757 = {}
        # Getting the type of 'ValueError' (line 450)
        ValueError_232755 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 450, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 450)
        ValueError_call_result_232758 = invoke(stypy.reporting.localization.Localization(__file__, 450, 18), ValueError_232755, *[unicode_232756], **kwargs_232757)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 450, 12), ValueError_call_result_232758, 'raise parameter', BaseException)
        # SSA join for if statement (line 440)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 438)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Attribute (line 452):
        
        # Assigning a Call to a Attribute (line 452):
        
        # Call to join(...): (line 452)
        # Processing the call arguments (line 452)
        
        # Obtaining the type of the subscript
        unicode_232762 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 453, 21), 'unicode', u'datapath')
        # Getting the type of 'rcParams' (line 453)
        rcParams_232763 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 453, 12), 'rcParams', False)
        # Obtaining the member '__getitem__' of a type (line 453)
        getitem___232764 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 453, 12), rcParams_232763, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 453)
        subscript_call_result_232765 = invoke(stypy.reporting.localization.Localization(__file__, 453, 12), getitem___232764, unicode_232762)
        
        unicode_232766 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 453, 34), 'unicode', u'fonts')
        unicode_232767 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 453, 43), 'unicode', u'pdfcorefonts')
        # Processing the call keyword arguments (line 452)
        kwargs_232768 = {}
        # Getting the type of 'os' (line 452)
        os_232759 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 452, 30), 'os', False)
        # Obtaining the member 'path' of a type (line 452)
        path_232760 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 452, 30), os_232759, 'path')
        # Obtaining the member 'join' of a type (line 452)
        join_232761 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 452, 30), path_232760, 'join')
        # Calling join(args, kwargs) (line 452)
        join_call_result_232769 = invoke(stypy.reporting.localization.Localization(__file__, 452, 30), join_232761, *[subscript_call_result_232765, unicode_232766, unicode_232767], **kwargs_232768)
        
        # Getting the type of 'self' (line 452)
        self_232770 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 452, 8), 'self')
        # Setting the type of the member '_core14fontdir' of a type (line 452)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 452, 8), self_232770, '_core14fontdir', join_call_result_232769)
        
        # Assigning a Name to a Attribute (line 454):
        
        # Assigning a Name to a Attribute (line 454):
        # Getting the type of 'fh' (line 454)
        fh_232771 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 454, 18), 'fh')
        # Getting the type of 'self' (line 454)
        self_232772 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 454, 8), 'self')
        # Setting the type of the member 'fh' of a type (line 454)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 454, 8), self_232772, 'fh', fh_232771)
        
        # Assigning a Name to a Attribute (line 455):
        
        # Assigning a Name to a Attribute (line 455):
        # Getting the type of 'None' (line 455)
        None_232773 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 455, 29), 'None')
        # Getting the type of 'self' (line 455)
        self_232774 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 455, 8), 'self')
        # Setting the type of the member 'currentstream' of a type (line 455)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 455, 8), self_232774, 'currentstream', None_232773)
        
        # Call to write(...): (line 456)
        # Processing the call arguments (line 456)
        str_232777 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 456, 17), 'str', '%PDF-1.4\n')
        # Processing the call keyword arguments (line 456)
        kwargs_232778 = {}
        # Getting the type of 'fh' (line 456)
        fh_232775 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 456, 8), 'fh', False)
        # Obtaining the member 'write' of a type (line 456)
        write_232776 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 456, 8), fh_232775, 'write')
        # Calling write(args, kwargs) (line 456)
        write_call_result_232779 = invoke(stypy.reporting.localization.Localization(__file__, 456, 8), write_232776, *[str_232777], **kwargs_232778)
        
        
        # Call to write(...): (line 460)
        # Processing the call arguments (line 460)
        str_232782 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 460, 17), 'str', '%\xac\xdc \xab\xba\n')
        # Processing the call keyword arguments (line 460)
        kwargs_232783 = {}
        # Getting the type of 'fh' (line 460)
        fh_232780 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 460, 8), 'fh', False)
        # Obtaining the member 'write' of a type (line 460)
        write_232781 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 460, 8), fh_232780, 'write')
        # Calling write(args, kwargs) (line 460)
        write_call_result_232784 = invoke(stypy.reporting.localization.Localization(__file__, 460, 8), write_232781, *[str_232782], **kwargs_232783)
        
        
        # Assigning a Call to a Attribute (line 462):
        
        # Assigning a Call to a Attribute (line 462):
        
        # Call to reserveObject(...): (line 462)
        # Processing the call arguments (line 462)
        unicode_232787 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 462, 45), 'unicode', u'root')
        # Processing the call keyword arguments (line 462)
        kwargs_232788 = {}
        # Getting the type of 'self' (line 462)
        self_232785 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 462, 26), 'self', False)
        # Obtaining the member 'reserveObject' of a type (line 462)
        reserveObject_232786 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 462, 26), self_232785, 'reserveObject')
        # Calling reserveObject(args, kwargs) (line 462)
        reserveObject_call_result_232789 = invoke(stypy.reporting.localization.Localization(__file__, 462, 26), reserveObject_232786, *[unicode_232787], **kwargs_232788)
        
        # Getting the type of 'self' (line 462)
        self_232790 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 462, 8), 'self')
        # Setting the type of the member 'rootObject' of a type (line 462)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 462, 8), self_232790, 'rootObject', reserveObject_call_result_232789)
        
        # Assigning a Call to a Attribute (line 463):
        
        # Assigning a Call to a Attribute (line 463):
        
        # Call to reserveObject(...): (line 463)
        # Processing the call arguments (line 463)
        unicode_232793 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 463, 46), 'unicode', u'pages')
        # Processing the call keyword arguments (line 463)
        kwargs_232794 = {}
        # Getting the type of 'self' (line 463)
        self_232791 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 463, 27), 'self', False)
        # Obtaining the member 'reserveObject' of a type (line 463)
        reserveObject_232792 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 463, 27), self_232791, 'reserveObject')
        # Calling reserveObject(args, kwargs) (line 463)
        reserveObject_call_result_232795 = invoke(stypy.reporting.localization.Localization(__file__, 463, 27), reserveObject_232792, *[unicode_232793], **kwargs_232794)
        
        # Getting the type of 'self' (line 463)
        self_232796 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 463, 8), 'self')
        # Setting the type of the member 'pagesObject' of a type (line 463)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 463, 8), self_232796, 'pagesObject', reserveObject_call_result_232795)
        
        # Assigning a List to a Attribute (line 464):
        
        # Assigning a List to a Attribute (line 464):
        
        # Obtaining an instance of the builtin type 'list' (line 464)
        list_232797 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 464, 24), 'list')
        # Adding type elements to the builtin type 'list' instance (line 464)
        
        # Getting the type of 'self' (line 464)
        self_232798 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 464, 8), 'self')
        # Setting the type of the member 'pageList' of a type (line 464)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 464, 8), self_232798, 'pageList', list_232797)
        
        # Assigning a Call to a Attribute (line 465):
        
        # Assigning a Call to a Attribute (line 465):
        
        # Call to reserveObject(...): (line 465)
        # Processing the call arguments (line 465)
        unicode_232801 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 465, 45), 'unicode', u'fonts')
        # Processing the call keyword arguments (line 465)
        kwargs_232802 = {}
        # Getting the type of 'self' (line 465)
        self_232799 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 465, 26), 'self', False)
        # Obtaining the member 'reserveObject' of a type (line 465)
        reserveObject_232800 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 465, 26), self_232799, 'reserveObject')
        # Calling reserveObject(args, kwargs) (line 465)
        reserveObject_call_result_232803 = invoke(stypy.reporting.localization.Localization(__file__, 465, 26), reserveObject_232800, *[unicode_232801], **kwargs_232802)
        
        # Getting the type of 'self' (line 465)
        self_232804 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 465, 8), 'self')
        # Setting the type of the member 'fontObject' of a type (line 465)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 465, 8), self_232804, 'fontObject', reserveObject_call_result_232803)
        
        # Assigning a Call to a Attribute (line 466):
        
        # Assigning a Call to a Attribute (line 466):
        
        # Call to reserveObject(...): (line 466)
        # Processing the call arguments (line 466)
        unicode_232807 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 466, 51), 'unicode', u'extended graphics states')
        # Processing the call keyword arguments (line 466)
        kwargs_232808 = {}
        # Getting the type of 'self' (line 466)
        self_232805 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 466, 32), 'self', False)
        # Obtaining the member 'reserveObject' of a type (line 466)
        reserveObject_232806 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 466, 32), self_232805, 'reserveObject')
        # Calling reserveObject(args, kwargs) (line 466)
        reserveObject_call_result_232809 = invoke(stypy.reporting.localization.Localization(__file__, 466, 32), reserveObject_232806, *[unicode_232807], **kwargs_232808)
        
        # Getting the type of 'self' (line 466)
        self_232810 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 466, 8), 'self')
        # Setting the type of the member 'alphaStateObject' of a type (line 466)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 466, 8), self_232810, 'alphaStateObject', reserveObject_call_result_232809)
        
        # Assigning a Call to a Attribute (line 467):
        
        # Assigning a Call to a Attribute (line 467):
        
        # Call to reserveObject(...): (line 467)
        # Processing the call arguments (line 467)
        unicode_232813 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 467, 46), 'unicode', u'tiling patterns')
        # Processing the call keyword arguments (line 467)
        kwargs_232814 = {}
        # Getting the type of 'self' (line 467)
        self_232811 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 467, 27), 'self', False)
        # Obtaining the member 'reserveObject' of a type (line 467)
        reserveObject_232812 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 467, 27), self_232811, 'reserveObject')
        # Calling reserveObject(args, kwargs) (line 467)
        reserveObject_call_result_232815 = invoke(stypy.reporting.localization.Localization(__file__, 467, 27), reserveObject_232812, *[unicode_232813], **kwargs_232814)
        
        # Getting the type of 'self' (line 467)
        self_232816 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 467, 8), 'self')
        # Setting the type of the member 'hatchObject' of a type (line 467)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 467, 8), self_232816, 'hatchObject', reserveObject_call_result_232815)
        
        # Assigning a Call to a Attribute (line 468):
        
        # Assigning a Call to a Attribute (line 468):
        
        # Call to reserveObject(...): (line 468)
        # Processing the call arguments (line 468)
        unicode_232819 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 468, 48), 'unicode', u'Gouraud triangles')
        # Processing the call keyword arguments (line 468)
        kwargs_232820 = {}
        # Getting the type of 'self' (line 468)
        self_232817 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 468, 29), 'self', False)
        # Obtaining the member 'reserveObject' of a type (line 468)
        reserveObject_232818 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 468, 29), self_232817, 'reserveObject')
        # Calling reserveObject(args, kwargs) (line 468)
        reserveObject_call_result_232821 = invoke(stypy.reporting.localization.Localization(__file__, 468, 29), reserveObject_232818, *[unicode_232819], **kwargs_232820)
        
        # Getting the type of 'self' (line 468)
        self_232822 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 468, 8), 'self')
        # Setting the type of the member 'gouraudObject' of a type (line 468)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 468, 8), self_232822, 'gouraudObject', reserveObject_call_result_232821)
        
        # Assigning a Call to a Attribute (line 469):
        
        # Assigning a Call to a Attribute (line 469):
        
        # Call to reserveObject(...): (line 469)
        # Processing the call arguments (line 469)
        unicode_232825 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 469, 48), 'unicode', u'external objects')
        # Processing the call keyword arguments (line 469)
        kwargs_232826 = {}
        # Getting the type of 'self' (line 469)
        self_232823 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 469, 29), 'self', False)
        # Obtaining the member 'reserveObject' of a type (line 469)
        reserveObject_232824 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 469, 29), self_232823, 'reserveObject')
        # Calling reserveObject(args, kwargs) (line 469)
        reserveObject_call_result_232827 = invoke(stypy.reporting.localization.Localization(__file__, 469, 29), reserveObject_232824, *[unicode_232825], **kwargs_232826)
        
        # Getting the type of 'self' (line 469)
        self_232828 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 469, 8), 'self')
        # Setting the type of the member 'XObjectObject' of a type (line 469)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 469, 8), self_232828, 'XObjectObject', reserveObject_call_result_232827)
        
        # Assigning a Call to a Attribute (line 470):
        
        # Assigning a Call to a Attribute (line 470):
        
        # Call to reserveObject(...): (line 470)
        # Processing the call arguments (line 470)
        unicode_232831 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 470, 49), 'unicode', u'resources')
        # Processing the call keyword arguments (line 470)
        kwargs_232832 = {}
        # Getting the type of 'self' (line 470)
        self_232829 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 470, 30), 'self', False)
        # Obtaining the member 'reserveObject' of a type (line 470)
        reserveObject_232830 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 470, 30), self_232829, 'reserveObject')
        # Calling reserveObject(args, kwargs) (line 470)
        reserveObject_call_result_232833 = invoke(stypy.reporting.localization.Localization(__file__, 470, 30), reserveObject_232830, *[unicode_232831], **kwargs_232832)
        
        # Getting the type of 'self' (line 470)
        self_232834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 470, 8), 'self')
        # Setting the type of the member 'resourceObject' of a type (line 470)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 470, 8), self_232834, 'resourceObject', reserveObject_call_result_232833)
        
        # Assigning a Dict to a Name (line 472):
        
        # Assigning a Dict to a Name (line 472):
        
        # Obtaining an instance of the builtin type 'dict' (line 472)
        dict_232835 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 472, 15), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 472)
        # Adding element type (key, value) (line 472)
        unicode_232836 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 472, 16), 'unicode', u'Type')
        
        # Call to Name(...): (line 472)
        # Processing the call arguments (line 472)
        unicode_232838 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 472, 29), 'unicode', u'Catalog')
        # Processing the call keyword arguments (line 472)
        kwargs_232839 = {}
        # Getting the type of 'Name' (line 472)
        Name_232837 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 472, 24), 'Name', False)
        # Calling Name(args, kwargs) (line 472)
        Name_call_result_232840 = invoke(stypy.reporting.localization.Localization(__file__, 472, 24), Name_232837, *[unicode_232838], **kwargs_232839)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 472, 15), dict_232835, (unicode_232836, Name_call_result_232840))
        # Adding element type (key, value) (line 472)
        unicode_232841 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 473, 16), 'unicode', u'Pages')
        # Getting the type of 'self' (line 473)
        self_232842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 473, 25), 'self')
        # Obtaining the member 'pagesObject' of a type (line 473)
        pagesObject_232843 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 473, 25), self_232842, 'pagesObject')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 472, 15), dict_232835, (unicode_232841, pagesObject_232843))
        
        # Assigning a type to the variable 'root' (line 472)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 472, 8), 'root', dict_232835)
        
        # Call to writeObject(...): (line 474)
        # Processing the call arguments (line 474)
        # Getting the type of 'self' (line 474)
        self_232846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 474, 25), 'self', False)
        # Obtaining the member 'rootObject' of a type (line 474)
        rootObject_232847 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 474, 25), self_232846, 'rootObject')
        # Getting the type of 'root' (line 474)
        root_232848 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 474, 42), 'root', False)
        # Processing the call keyword arguments (line 474)
        kwargs_232849 = {}
        # Getting the type of 'self' (line 474)
        self_232844 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 474, 8), 'self', False)
        # Obtaining the member 'writeObject' of a type (line 474)
        writeObject_232845 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 474, 8), self_232844, 'writeObject')
        # Calling writeObject(args, kwargs) (line 474)
        writeObject_call_result_232850 = invoke(stypy.reporting.localization.Localization(__file__, 474, 8), writeObject_232845, *[rootObject_232847, root_232848], **kwargs_232849)
        
        
        # Assigning a Call to a Name (line 478):
        
        # Assigning a Call to a Name (line 478):
        
        # Call to getenv(...): (line 478)
        # Processing the call arguments (line 478)
        unicode_232853 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 478, 38), 'unicode', u'SOURCE_DATE_EPOCH')
        # Processing the call keyword arguments (line 478)
        kwargs_232854 = {}
        # Getting the type of 'os' (line 478)
        os_232851 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 478, 28), 'os', False)
        # Obtaining the member 'getenv' of a type (line 478)
        getenv_232852 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 478, 28), os_232851, 'getenv')
        # Calling getenv(args, kwargs) (line 478)
        getenv_call_result_232855 = invoke(stypy.reporting.localization.Localization(__file__, 478, 28), getenv_232852, *[unicode_232853], **kwargs_232854)
        
        # Assigning a type to the variable 'source_date_epoch' (line 478)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 478, 8), 'source_date_epoch', getenv_call_result_232855)
        
        # Getting the type of 'source_date_epoch' (line 479)
        source_date_epoch_232856 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 479, 11), 'source_date_epoch')
        # Testing the type of an if condition (line 479)
        if_condition_232857 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 479, 8), source_date_epoch_232856)
        # Assigning a type to the variable 'if_condition_232857' (line 479)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 479, 8), 'if_condition_232857', if_condition_232857)
        # SSA begins for if statement (line 479)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 480):
        
        # Assigning a Call to a Name (line 480):
        
        # Call to utcfromtimestamp(...): (line 480)
        # Processing the call arguments (line 480)
        
        # Call to int(...): (line 480)
        # Processing the call arguments (line 480)
        # Getting the type of 'source_date_epoch' (line 480)
        source_date_epoch_232861 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 480, 56), 'source_date_epoch', False)
        # Processing the call keyword arguments (line 480)
        kwargs_232862 = {}
        # Getting the type of 'int' (line 480)
        int_232860 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 480, 52), 'int', False)
        # Calling int(args, kwargs) (line 480)
        int_call_result_232863 = invoke(stypy.reporting.localization.Localization(__file__, 480, 52), int_232860, *[source_date_epoch_232861], **kwargs_232862)
        
        # Processing the call keyword arguments (line 480)
        kwargs_232864 = {}
        # Getting the type of 'datetime' (line 480)
        datetime_232858 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 480, 26), 'datetime', False)
        # Obtaining the member 'utcfromtimestamp' of a type (line 480)
        utcfromtimestamp_232859 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 480, 26), datetime_232858, 'utcfromtimestamp')
        # Calling utcfromtimestamp(args, kwargs) (line 480)
        utcfromtimestamp_call_result_232865 = invoke(stypy.reporting.localization.Localization(__file__, 480, 26), utcfromtimestamp_232859, *[int_call_result_232863], **kwargs_232864)
        
        # Assigning a type to the variable 'source_date' (line 480)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 480, 12), 'source_date', utcfromtimestamp_call_result_232865)
        
        # Assigning a Call to a Name (line 481):
        
        # Assigning a Call to a Name (line 481):
        
        # Call to replace(...): (line 481)
        # Processing the call keyword arguments (line 481)
        # Getting the type of 'UTC' (line 481)
        UTC_232868 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 481, 53), 'UTC', False)
        keyword_232869 = UTC_232868
        kwargs_232870 = {'tzinfo': keyword_232869}
        # Getting the type of 'source_date' (line 481)
        source_date_232866 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 481, 26), 'source_date', False)
        # Obtaining the member 'replace' of a type (line 481)
        replace_232867 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 481, 26), source_date_232866, 'replace')
        # Calling replace(args, kwargs) (line 481)
        replace_call_result_232871 = invoke(stypy.reporting.localization.Localization(__file__, 481, 26), replace_232867, *[], **kwargs_232870)
        
        # Assigning a type to the variable 'source_date' (line 481)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 481, 12), 'source_date', replace_call_result_232871)
        # SSA branch for the else part of an if statement (line 479)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Call to a Name (line 483):
        
        # Assigning a Call to a Name (line 483):
        
        # Call to today(...): (line 483)
        # Processing the call keyword arguments (line 483)
        kwargs_232874 = {}
        # Getting the type of 'datetime' (line 483)
        datetime_232872 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 483, 26), 'datetime', False)
        # Obtaining the member 'today' of a type (line 483)
        today_232873 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 483, 26), datetime_232872, 'today')
        # Calling today(args, kwargs) (line 483)
        today_call_result_232875 = invoke(stypy.reporting.localization.Localization(__file__, 483, 26), today_232873, *[], **kwargs_232874)
        
        # Assigning a type to the variable 'source_date' (line 483)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 483, 12), 'source_date', today_call_result_232875)
        # SSA join for if statement (line 479)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Dict to a Attribute (line 485):
        
        # Assigning a Dict to a Attribute (line 485):
        
        # Obtaining an instance of the builtin type 'dict' (line 485)
        dict_232876 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 485, 24), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 485)
        # Adding element type (key, value) (line 485)
        unicode_232877 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 486, 12), 'unicode', u'Creator')
        unicode_232878 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 486, 23), 'unicode', u'matplotlib %s, http://matplotlib.org')
        # Getting the type of '__version__' (line 486)
        version___232879 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 486, 64), '__version__')
        # Applying the binary operator '%' (line 486)
        result_mod_232880 = python_operator(stypy.reporting.localization.Localization(__file__, 486, 23), '%', unicode_232878, version___232879)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 485, 24), dict_232876, (unicode_232877, result_mod_232880))
        # Adding element type (key, value) (line 485)
        unicode_232881 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 487, 12), 'unicode', u'Producer')
        unicode_232882 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 487, 24), 'unicode', u'matplotlib pdf backend %s')
        # Getting the type of '__version__' (line 487)
        version___232883 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 487, 54), '__version__')
        # Applying the binary operator '%' (line 487)
        result_mod_232884 = python_operator(stypy.reporting.localization.Localization(__file__, 487, 24), '%', unicode_232882, version___232883)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 485, 24), dict_232876, (unicode_232881, result_mod_232884))
        # Adding element type (key, value) (line 485)
        unicode_232885 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 488, 12), 'unicode', u'CreationDate')
        # Getting the type of 'source_date' (line 488)
        source_date_232886 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 488, 28), 'source_date')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 485, 24), dict_232876, (unicode_232885, source_date_232886))
        
        # Getting the type of 'self' (line 485)
        self_232887 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 485, 8), 'self')
        # Setting the type of the member 'infoDict' of a type (line 485)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 485, 8), self_232887, 'infoDict', dict_232876)
        
        # Type idiom detected: calculating its left and rigth part (line 490)
        # Getting the type of 'metadata' (line 490)
        metadata_232888 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 490, 8), 'metadata')
        # Getting the type of 'None' (line 490)
        None_232889 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 490, 27), 'None')
        
        (may_be_232890, more_types_in_union_232891) = may_not_be_none(metadata_232888, None_232889)

        if may_be_232890:

            if more_types_in_union_232891:
                # Runtime conditional SSA (line 490)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Call to update(...): (line 491)
            # Processing the call arguments (line 491)
            # Getting the type of 'metadata' (line 491)
            metadata_232895 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 491, 33), 'metadata', False)
            # Processing the call keyword arguments (line 491)
            kwargs_232896 = {}
            # Getting the type of 'self' (line 491)
            self_232892 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 491, 12), 'self', False)
            # Obtaining the member 'infoDict' of a type (line 491)
            infoDict_232893 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 491, 12), self_232892, 'infoDict')
            # Obtaining the member 'update' of a type (line 491)
            update_232894 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 491, 12), infoDict_232893, 'update')
            # Calling update(args, kwargs) (line 491)
            update_call_result_232897 = invoke(stypy.reporting.localization.Localization(__file__, 491, 12), update_232894, *[metadata_232895], **kwargs_232896)
            

            if more_types_in_union_232891:
                # SSA join for if statement (line 490)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a DictComp to a Attribute (line 492):
        
        # Assigning a DictComp to a Attribute (line 492):
        # Calculating dict comprehension
        module_type_store = module_type_store.open_function_context('dict comprehension expression', 492, 25, True)
        # Calculating comprehension expression
        
        # Call to items(...): (line 492)
        # Processing the call keyword arguments (line 492)
        kwargs_232906 = {}
        # Getting the type of 'self' (line 492)
        self_232903 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 492, 44), 'self', False)
        # Obtaining the member 'infoDict' of a type (line 492)
        infoDict_232904 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 492, 44), self_232903, 'infoDict')
        # Obtaining the member 'items' of a type (line 492)
        items_232905 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 492, 44), infoDict_232904, 'items')
        # Calling items(args, kwargs) (line 492)
        items_call_result_232907 = invoke(stypy.reporting.localization.Localization(__file__, 492, 44), items_232905, *[], **kwargs_232906)
        
        comprehension_232908 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 492, 25), items_call_result_232907)
        # Assigning a type to the variable 'k' (line 492)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 492, 25), 'k', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 492, 25), comprehension_232908))
        # Assigning a type to the variable 'v' (line 492)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 492, 25), 'v', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 492, 25), comprehension_232908))
        
        # Getting the type of 'v' (line 493)
        v_232900 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 493, 28), 'v')
        # Getting the type of 'None' (line 493)
        None_232901 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 493, 37), 'None')
        # Applying the binary operator 'isnot' (line 493)
        result_is_not_232902 = python_operator(stypy.reporting.localization.Localization(__file__, 493, 28), 'isnot', v_232900, None_232901)
        
        # Getting the type of 'k' (line 492)
        k_232898 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 492, 25), 'k')
        # Getting the type of 'v' (line 492)
        v_232899 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 492, 28), 'v')
        dict_232909 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 492, 25), 'dict')
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 492, 25), dict_232909, (k_232898, v_232899))
        # Getting the type of 'self' (line 492)
        self_232910 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 492, 8), 'self')
        # Setting the type of the member 'infoDict' of a type (line 492)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 492, 8), self_232910, 'infoDict', dict_232909)
        
        # Assigning a Dict to a Attribute (line 495):
        
        # Assigning a Dict to a Attribute (line 495):
        
        # Obtaining an instance of the builtin type 'dict' (line 495)
        dict_232911 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 495, 25), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 495)
        
        # Getting the type of 'self' (line 495)
        self_232912 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 495, 8), 'self')
        # Setting the type of the member 'fontNames' of a type (line 495)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 495, 8), self_232912, 'fontNames', dict_232911)
        
        # Assigning a Num to a Attribute (line 496):
        
        # Assigning a Num to a Attribute (line 496):
        int_232913 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 496, 24), 'int')
        # Getting the type of 'self' (line 496)
        self_232914 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 496, 8), 'self')
        # Setting the type of the member 'nextFont' of a type (line 496)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 496, 8), self_232914, 'nextFont', int_232913)
        
        # Assigning a Dict to a Attribute (line 497):
        
        # Assigning a Dict to a Attribute (line 497):
        
        # Obtaining an instance of the builtin type 'dict' (line 497)
        dict_232915 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 497, 27), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 497)
        
        # Getting the type of 'self' (line 497)
        self_232916 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 497, 8), 'self')
        # Setting the type of the member 'dviFontInfo' of a type (line 497)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 497, 8), self_232916, 'dviFontInfo', dict_232915)
        
        # Assigning a Name to a Attribute (line 498):
        
        # Assigning a Name to a Attribute (line 498):
        # Getting the type of 'None' (line 498)
        None_232917 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 498, 27), 'None')
        # Getting the type of 'self' (line 498)
        self_232918 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 498, 8), 'self')
        # Setting the type of the member '_texFontMap' of a type (line 498)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 498, 8), self_232918, '_texFontMap', None_232917)
        
        # Assigning a Dict to a Attribute (line 500):
        
        # Assigning a Dict to a Attribute (line 500):
        
        # Obtaining an instance of the builtin type 'dict' (line 500)
        dict_232919 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 500, 32), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 500)
        
        # Getting the type of 'self' (line 500)
        self_232920 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 500, 8), 'self')
        # Setting the type of the member 'type1Descriptors' of a type (line 500)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 500, 8), self_232920, 'type1Descriptors', dict_232919)
        
        # Assigning a Dict to a Attribute (line 501):
        
        # Assigning a Dict to a Attribute (line 501):
        
        # Obtaining an instance of the builtin type 'dict' (line 501)
        dict_232921 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 501, 31), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 501)
        
        # Getting the type of 'self' (line 501)
        self_232922 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 501, 8), 'self')
        # Setting the type of the member 'used_characters' of a type (line 501)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 501, 8), self_232922, 'used_characters', dict_232921)
        
        # Assigning a Dict to a Attribute (line 503):
        
        # Assigning a Dict to a Attribute (line 503):
        
        # Obtaining an instance of the builtin type 'dict' (line 503)
        dict_232923 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 503, 27), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 503)
        
        # Getting the type of 'self' (line 503)
        self_232924 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 503, 8), 'self')
        # Setting the type of the member 'alphaStates' of a type (line 503)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 503, 8), self_232924, 'alphaStates', dict_232923)
        
        # Assigning a Num to a Attribute (line 504):
        
        # Assigning a Num to a Attribute (line 504):
        int_232925 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 504, 30), 'int')
        # Getting the type of 'self' (line 504)
        self_232926 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 504, 8), 'self')
        # Setting the type of the member 'nextAlphaState' of a type (line 504)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 504, 8), self_232926, 'nextAlphaState', int_232925)
        
        # Assigning a Call to a Attribute (line 506):
        
        # Assigning a Call to a Attribute (line 506):
        
        # Call to OrderedDict(...): (line 506)
        # Processing the call keyword arguments (line 506)
        kwargs_232929 = {}
        # Getting the type of 'collections' (line 506)
        collections_232927 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 506, 29), 'collections', False)
        # Obtaining the member 'OrderedDict' of a type (line 506)
        OrderedDict_232928 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 506, 29), collections_232927, 'OrderedDict')
        # Calling OrderedDict(args, kwargs) (line 506)
        OrderedDict_call_result_232930 = invoke(stypy.reporting.localization.Localization(__file__, 506, 29), OrderedDict_232928, *[], **kwargs_232929)
        
        # Getting the type of 'self' (line 506)
        self_232931 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 506, 8), 'self')
        # Setting the type of the member 'hatchPatterns' of a type (line 506)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 506, 8), self_232931, 'hatchPatterns', OrderedDict_call_result_232930)
        
        # Assigning a Num to a Attribute (line 507):
        
        # Assigning a Num to a Attribute (line 507):
        int_232932 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 507, 25), 'int')
        # Getting the type of 'self' (line 507)
        self_232933 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 507, 8), 'self')
        # Setting the type of the member 'nextHatch' of a type (line 507)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 507, 8), self_232933, 'nextHatch', int_232932)
        
        # Assigning a List to a Attribute (line 508):
        
        # Assigning a List to a Attribute (line 508):
        
        # Obtaining an instance of the builtin type 'list' (line 508)
        list_232934 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 508, 32), 'list')
        # Adding type elements to the builtin type 'list' instance (line 508)
        
        # Getting the type of 'self' (line 508)
        self_232935 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 508, 8), 'self')
        # Setting the type of the member 'gouraudTriangles' of a type (line 508)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 508, 8), self_232935, 'gouraudTriangles', list_232934)
        
        # Assigning a Call to a Attribute (line 510):
        
        # Assigning a Call to a Attribute (line 510):
        
        # Call to OrderedDict(...): (line 510)
        # Processing the call keyword arguments (line 510)
        kwargs_232938 = {}
        # Getting the type of 'collections' (line 510)
        collections_232936 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 510, 23), 'collections', False)
        # Obtaining the member 'OrderedDict' of a type (line 510)
        OrderedDict_232937 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 510, 23), collections_232936, 'OrderedDict')
        # Calling OrderedDict(args, kwargs) (line 510)
        OrderedDict_call_result_232939 = invoke(stypy.reporting.localization.Localization(__file__, 510, 23), OrderedDict_232937, *[], **kwargs_232938)
        
        # Getting the type of 'self' (line 510)
        self_232940 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 510, 8), 'self')
        # Setting the type of the member '_images' of a type (line 510)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 510, 8), self_232940, '_images', OrderedDict_call_result_232939)
        
        # Assigning a Num to a Attribute (line 511):
        
        # Assigning a Num to a Attribute (line 511):
        int_232941 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 511, 25), 'int')
        # Getting the type of 'self' (line 511)
        self_232942 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 511, 8), 'self')
        # Setting the type of the member 'nextImage' of a type (line 511)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 511, 8), self_232942, 'nextImage', int_232941)
        
        # Assigning a Call to a Attribute (line 513):
        
        # Assigning a Call to a Attribute (line 513):
        
        # Call to OrderedDict(...): (line 513)
        # Processing the call keyword arguments (line 513)
        kwargs_232945 = {}
        # Getting the type of 'collections' (line 513)
        collections_232943 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 513, 23), 'collections', False)
        # Obtaining the member 'OrderedDict' of a type (line 513)
        OrderedDict_232944 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 513, 23), collections_232943, 'OrderedDict')
        # Calling OrderedDict(args, kwargs) (line 513)
        OrderedDict_call_result_232946 = invoke(stypy.reporting.localization.Localization(__file__, 513, 23), OrderedDict_232944, *[], **kwargs_232945)
        
        # Getting the type of 'self' (line 513)
        self_232947 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 513, 8), 'self')
        # Setting the type of the member 'markers' of a type (line 513)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 513, 8), self_232947, 'markers', OrderedDict_call_result_232946)
        
        # Assigning a Dict to a Attribute (line 514):
        
        # Assigning a Dict to a Attribute (line 514):
        
        # Obtaining an instance of the builtin type 'dict' (line 514)
        dict_232948 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 514, 36), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 514)
        
        # Getting the type of 'self' (line 514)
        self_232949 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 514, 8), 'self')
        # Setting the type of the member 'multi_byte_charprocs' of a type (line 514)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 514, 8), self_232949, 'multi_byte_charprocs', dict_232948)
        
        # Assigning a List to a Attribute (line 516):
        
        # Assigning a List to a Attribute (line 516):
        
        # Obtaining an instance of the builtin type 'list' (line 516)
        list_232950 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 516, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 516)
        
        # Getting the type of 'self' (line 516)
        self_232951 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 516, 8), 'self')
        # Setting the type of the member 'paths' of a type (line 516)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 516, 8), self_232951, 'paths', list_232950)
        
        # Assigning a List to a Attribute (line 518):
        
        # Assigning a List to a Attribute (line 518):
        
        # Obtaining an instance of the builtin type 'list' (line 518)
        list_232952 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 518, 31), 'list')
        # Adding type elements to the builtin type 'list' instance (line 518)
        
        # Getting the type of 'self' (line 518)
        self_232953 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 518, 8), 'self')
        # Setting the type of the member 'pageAnnotations' of a type (line 518)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 518, 8), self_232953, 'pageAnnotations', list_232952)
        
        # Assigning a ListComp to a Name (line 522):
        
        # Assigning a ListComp to a Name (line 522):
        # Calculating list comprehension
        # Calculating comprehension expression
        
        # Call to split(...): (line 523)
        # Processing the call keyword arguments (line 523)
        kwargs_232960 = {}
        unicode_232958 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 523, 29), 'unicode', u'PDF Text ImageB ImageC ImageI')
        # Obtaining the member 'split' of a type (line 523)
        split_232959 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 523, 29), unicode_232958, 'split')
        # Calling split(args, kwargs) (line 523)
        split_call_result_232961 = invoke(stypy.reporting.localization.Localization(__file__, 523, 29), split_232959, *[], **kwargs_232960)
        
        comprehension_232962 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 522, 20), split_call_result_232961)
        # Assigning a type to the variable 'x' (line 522)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 522, 20), 'x', comprehension_232962)
        
        # Call to Name(...): (line 522)
        # Processing the call arguments (line 522)
        # Getting the type of 'x' (line 522)
        x_232955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 522, 25), 'x', False)
        # Processing the call keyword arguments (line 522)
        kwargs_232956 = {}
        # Getting the type of 'Name' (line 522)
        Name_232954 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 522, 20), 'Name', False)
        # Calling Name(args, kwargs) (line 522)
        Name_call_result_232957 = invoke(stypy.reporting.localization.Localization(__file__, 522, 20), Name_232954, *[x_232955], **kwargs_232956)
        
        list_232963 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 522, 20), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 522, 20), list_232963, Name_call_result_232957)
        # Assigning a type to the variable 'procsets' (line 522)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 522, 8), 'procsets', list_232963)
        
        # Assigning a Dict to a Name (line 528):
        
        # Assigning a Dict to a Name (line 528):
        
        # Obtaining an instance of the builtin type 'dict' (line 528)
        dict_232964 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 528, 20), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 528)
        # Adding element type (key, value) (line 528)
        unicode_232965 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 528, 21), 'unicode', u'Font')
        # Getting the type of 'self' (line 528)
        self_232966 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 528, 29), 'self')
        # Obtaining the member 'fontObject' of a type (line 528)
        fontObject_232967 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 528, 29), self_232966, 'fontObject')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 528, 20), dict_232964, (unicode_232965, fontObject_232967))
        # Adding element type (key, value) (line 528)
        unicode_232968 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 529, 21), 'unicode', u'XObject')
        # Getting the type of 'self' (line 529)
        self_232969 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 529, 32), 'self')
        # Obtaining the member 'XObjectObject' of a type (line 529)
        XObjectObject_232970 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 529, 32), self_232969, 'XObjectObject')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 528, 20), dict_232964, (unicode_232968, XObjectObject_232970))
        # Adding element type (key, value) (line 528)
        unicode_232971 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 530, 21), 'unicode', u'ExtGState')
        # Getting the type of 'self' (line 530)
        self_232972 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 530, 34), 'self')
        # Obtaining the member 'alphaStateObject' of a type (line 530)
        alphaStateObject_232973 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 530, 34), self_232972, 'alphaStateObject')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 528, 20), dict_232964, (unicode_232971, alphaStateObject_232973))
        # Adding element type (key, value) (line 528)
        unicode_232974 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 531, 21), 'unicode', u'Pattern')
        # Getting the type of 'self' (line 531)
        self_232975 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 531, 32), 'self')
        # Obtaining the member 'hatchObject' of a type (line 531)
        hatchObject_232976 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 531, 32), self_232975, 'hatchObject')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 528, 20), dict_232964, (unicode_232974, hatchObject_232976))
        # Adding element type (key, value) (line 528)
        unicode_232977 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 532, 21), 'unicode', u'Shading')
        # Getting the type of 'self' (line 532)
        self_232978 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 532, 32), 'self')
        # Obtaining the member 'gouraudObject' of a type (line 532)
        gouraudObject_232979 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 532, 32), self_232978, 'gouraudObject')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 528, 20), dict_232964, (unicode_232977, gouraudObject_232979))
        # Adding element type (key, value) (line 528)
        unicode_232980 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 533, 21), 'unicode', u'ProcSet')
        # Getting the type of 'procsets' (line 533)
        procsets_232981 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 533, 32), 'procsets')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 528, 20), dict_232964, (unicode_232980, procsets_232981))
        
        # Assigning a type to the variable 'resources' (line 528)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 528, 8), 'resources', dict_232964)
        
        # Call to writeObject(...): (line 534)
        # Processing the call arguments (line 534)
        # Getting the type of 'self' (line 534)
        self_232984 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 534, 25), 'self', False)
        # Obtaining the member 'resourceObject' of a type (line 534)
        resourceObject_232985 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 534, 25), self_232984, 'resourceObject')
        # Getting the type of 'resources' (line 534)
        resources_232986 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 534, 46), 'resources', False)
        # Processing the call keyword arguments (line 534)
        kwargs_232987 = {}
        # Getting the type of 'self' (line 534)
        self_232982 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 534, 8), 'self', False)
        # Obtaining the member 'writeObject' of a type (line 534)
        writeObject_232983 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 534, 8), self_232982, 'writeObject')
        # Calling writeObject(args, kwargs) (line 534)
        writeObject_call_result_232988 = invoke(stypy.reporting.localization.Localization(__file__, 534, 8), writeObject_232983, *[resourceObject_232985, resources_232986], **kwargs_232987)
        
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def newPage(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'newPage'
        module_type_store = module_type_store.open_function_context('newPage', 536, 4, False)
        # Assigning a type to the variable 'self' (line 537)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 537, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        PdfFile.newPage.__dict__.__setitem__('stypy_localization', localization)
        PdfFile.newPage.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        PdfFile.newPage.__dict__.__setitem__('stypy_type_store', module_type_store)
        PdfFile.newPage.__dict__.__setitem__('stypy_function_name', 'PdfFile.newPage')
        PdfFile.newPage.__dict__.__setitem__('stypy_param_names_list', ['width', 'height'])
        PdfFile.newPage.__dict__.__setitem__('stypy_varargs_param_name', None)
        PdfFile.newPage.__dict__.__setitem__('stypy_kwargs_param_name', None)
        PdfFile.newPage.__dict__.__setitem__('stypy_call_defaults', defaults)
        PdfFile.newPage.__dict__.__setitem__('stypy_call_varargs', varargs)
        PdfFile.newPage.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        PdfFile.newPage.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'PdfFile.newPage', ['width', 'height'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'newPage', localization, ['width', 'height'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'newPage(...)' code ##################

        
        # Call to endStream(...): (line 537)
        # Processing the call keyword arguments (line 537)
        kwargs_232991 = {}
        # Getting the type of 'self' (line 537)
        self_232989 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 537, 8), 'self', False)
        # Obtaining the member 'endStream' of a type (line 537)
        endStream_232990 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 537, 8), self_232989, 'endStream')
        # Calling endStream(args, kwargs) (line 537)
        endStream_call_result_232992 = invoke(stypy.reporting.localization.Localization(__file__, 537, 8), endStream_232990, *[], **kwargs_232991)
        
        
        # Assigning a Tuple to a Tuple (line 539):
        
        # Assigning a Name to a Name (line 539):
        # Getting the type of 'width' (line 539)
        width_232993 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 539, 34), 'width')
        # Assigning a type to the variable 'tuple_assignment_231654' (line 539)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 539, 8), 'tuple_assignment_231654', width_232993)
        
        # Assigning a Name to a Name (line 539):
        # Getting the type of 'height' (line 539)
        height_232994 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 539, 41), 'height')
        # Assigning a type to the variable 'tuple_assignment_231655' (line 539)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 539, 8), 'tuple_assignment_231655', height_232994)
        
        # Assigning a Name to a Attribute (line 539):
        # Getting the type of 'tuple_assignment_231654' (line 539)
        tuple_assignment_231654_232995 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 539, 8), 'tuple_assignment_231654')
        # Getting the type of 'self' (line 539)
        self_232996 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 539, 8), 'self')
        # Setting the type of the member 'width' of a type (line 539)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 539, 8), self_232996, 'width', tuple_assignment_231654_232995)
        
        # Assigning a Name to a Attribute (line 539):
        # Getting the type of 'tuple_assignment_231655' (line 539)
        tuple_assignment_231655_232997 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 539, 8), 'tuple_assignment_231655')
        # Getting the type of 'self' (line 539)
        self_232998 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 539, 20), 'self')
        # Setting the type of the member 'height' of a type (line 539)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 539, 20), self_232998, 'height', tuple_assignment_231655_232997)
        
        # Assigning a Call to a Name (line 540):
        
        # Assigning a Call to a Name (line 540):
        
        # Call to reserveObject(...): (line 540)
        # Processing the call arguments (line 540)
        unicode_233001 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 540, 43), 'unicode', u'page contents')
        # Processing the call keyword arguments (line 540)
        kwargs_233002 = {}
        # Getting the type of 'self' (line 540)
        self_232999 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 540, 24), 'self', False)
        # Obtaining the member 'reserveObject' of a type (line 540)
        reserveObject_233000 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 540, 24), self_232999, 'reserveObject')
        # Calling reserveObject(args, kwargs) (line 540)
        reserveObject_call_result_233003 = invoke(stypy.reporting.localization.Localization(__file__, 540, 24), reserveObject_233000, *[unicode_233001], **kwargs_233002)
        
        # Assigning a type to the variable 'contentObject' (line 540)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 540, 8), 'contentObject', reserveObject_call_result_233003)
        
        # Assigning a Dict to a Name (line 541):
        
        # Assigning a Dict to a Name (line 541):
        
        # Obtaining an instance of the builtin type 'dict' (line 541)
        dict_233004 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 541, 18), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 541)
        # Adding element type (key, value) (line 541)
        unicode_233005 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 541, 19), 'unicode', u'Type')
        
        # Call to Name(...): (line 541)
        # Processing the call arguments (line 541)
        unicode_233007 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 541, 32), 'unicode', u'Page')
        # Processing the call keyword arguments (line 541)
        kwargs_233008 = {}
        # Getting the type of 'Name' (line 541)
        Name_233006 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 541, 27), 'Name', False)
        # Calling Name(args, kwargs) (line 541)
        Name_call_result_233009 = invoke(stypy.reporting.localization.Localization(__file__, 541, 27), Name_233006, *[unicode_233007], **kwargs_233008)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 541, 18), dict_233004, (unicode_233005, Name_call_result_233009))
        # Adding element type (key, value) (line 541)
        unicode_233010 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 542, 19), 'unicode', u'Parent')
        # Getting the type of 'self' (line 542)
        self_233011 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 542, 29), 'self')
        # Obtaining the member 'pagesObject' of a type (line 542)
        pagesObject_233012 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 542, 29), self_233011, 'pagesObject')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 541, 18), dict_233004, (unicode_233010, pagesObject_233012))
        # Adding element type (key, value) (line 541)
        unicode_233013 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 543, 19), 'unicode', u'Resources')
        # Getting the type of 'self' (line 543)
        self_233014 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 543, 32), 'self')
        # Obtaining the member 'resourceObject' of a type (line 543)
        resourceObject_233015 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 543, 32), self_233014, 'resourceObject')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 541, 18), dict_233004, (unicode_233013, resourceObject_233015))
        # Adding element type (key, value) (line 541)
        unicode_233016 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 544, 19), 'unicode', u'MediaBox')
        
        # Obtaining an instance of the builtin type 'list' (line 544)
        list_233017 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 544, 31), 'list')
        # Adding type elements to the builtin type 'list' instance (line 544)
        # Adding element type (line 544)
        int_233018 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 544, 32), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 544, 31), list_233017, int_233018)
        # Adding element type (line 544)
        int_233019 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 544, 35), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 544, 31), list_233017, int_233019)
        # Adding element type (line 544)
        int_233020 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 544, 38), 'int')
        # Getting the type of 'width' (line 544)
        width_233021 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 544, 43), 'width')
        # Applying the binary operator '*' (line 544)
        result_mul_233022 = python_operator(stypy.reporting.localization.Localization(__file__, 544, 38), '*', int_233020, width_233021)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 544, 31), list_233017, result_mul_233022)
        # Adding element type (line 544)
        int_233023 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 544, 50), 'int')
        # Getting the type of 'height' (line 544)
        height_233024 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 544, 55), 'height')
        # Applying the binary operator '*' (line 544)
        result_mul_233025 = python_operator(stypy.reporting.localization.Localization(__file__, 544, 50), '*', int_233023, height_233024)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 544, 31), list_233017, result_mul_233025)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 541, 18), dict_233004, (unicode_233016, list_233017))
        # Adding element type (key, value) (line 541)
        unicode_233026 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 545, 19), 'unicode', u'Contents')
        # Getting the type of 'contentObject' (line 545)
        contentObject_233027 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 545, 31), 'contentObject')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 541, 18), dict_233004, (unicode_233026, contentObject_233027))
        # Adding element type (key, value) (line 541)
        unicode_233028 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 546, 19), 'unicode', u'Group')
        
        # Obtaining an instance of the builtin type 'dict' (line 546)
        dict_233029 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 546, 28), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 546)
        # Adding element type (key, value) (line 546)
        unicode_233030 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 546, 29), 'unicode', u'Type')
        
        # Call to Name(...): (line 546)
        # Processing the call arguments (line 546)
        unicode_233032 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 546, 42), 'unicode', u'Group')
        # Processing the call keyword arguments (line 546)
        kwargs_233033 = {}
        # Getting the type of 'Name' (line 546)
        Name_233031 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 546, 37), 'Name', False)
        # Calling Name(args, kwargs) (line 546)
        Name_call_result_233034 = invoke(stypy.reporting.localization.Localization(__file__, 546, 37), Name_233031, *[unicode_233032], **kwargs_233033)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 546, 28), dict_233029, (unicode_233030, Name_call_result_233034))
        # Adding element type (key, value) (line 546)
        unicode_233035 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 547, 29), 'unicode', u'S')
        
        # Call to Name(...): (line 547)
        # Processing the call arguments (line 547)
        unicode_233037 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 547, 39), 'unicode', u'Transparency')
        # Processing the call keyword arguments (line 547)
        kwargs_233038 = {}
        # Getting the type of 'Name' (line 547)
        Name_233036 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 547, 34), 'Name', False)
        # Calling Name(args, kwargs) (line 547)
        Name_call_result_233039 = invoke(stypy.reporting.localization.Localization(__file__, 547, 34), Name_233036, *[unicode_233037], **kwargs_233038)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 546, 28), dict_233029, (unicode_233035, Name_call_result_233039))
        # Adding element type (key, value) (line 546)
        unicode_233040 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 548, 29), 'unicode', u'CS')
        
        # Call to Name(...): (line 548)
        # Processing the call arguments (line 548)
        unicode_233042 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 548, 40), 'unicode', u'DeviceRGB')
        # Processing the call keyword arguments (line 548)
        kwargs_233043 = {}
        # Getting the type of 'Name' (line 548)
        Name_233041 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 548, 35), 'Name', False)
        # Calling Name(args, kwargs) (line 548)
        Name_call_result_233044 = invoke(stypy.reporting.localization.Localization(__file__, 548, 35), Name_233041, *[unicode_233042], **kwargs_233043)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 546, 28), dict_233029, (unicode_233040, Name_call_result_233044))
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 541, 18), dict_233004, (unicode_233028, dict_233029))
        # Adding element type (key, value) (line 541)
        unicode_233045 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 549, 19), 'unicode', u'Annots')
        # Getting the type of 'self' (line 549)
        self_233046 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 549, 29), 'self')
        # Obtaining the member 'pageAnnotations' of a type (line 549)
        pageAnnotations_233047 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 549, 29), self_233046, 'pageAnnotations')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 541, 18), dict_233004, (unicode_233045, pageAnnotations_233047))
        
        # Assigning a type to the variable 'thePage' (line 541)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 541, 8), 'thePage', dict_233004)
        
        # Assigning a Call to a Name (line 551):
        
        # Assigning a Call to a Name (line 551):
        
        # Call to reserveObject(...): (line 551)
        # Processing the call arguments (line 551)
        unicode_233050 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 551, 40), 'unicode', u'page')
        # Processing the call keyword arguments (line 551)
        kwargs_233051 = {}
        # Getting the type of 'self' (line 551)
        self_233048 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 551, 21), 'self', False)
        # Obtaining the member 'reserveObject' of a type (line 551)
        reserveObject_233049 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 551, 21), self_233048, 'reserveObject')
        # Calling reserveObject(args, kwargs) (line 551)
        reserveObject_call_result_233052 = invoke(stypy.reporting.localization.Localization(__file__, 551, 21), reserveObject_233049, *[unicode_233050], **kwargs_233051)
        
        # Assigning a type to the variable 'pageObject' (line 551)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 551, 8), 'pageObject', reserveObject_call_result_233052)
        
        # Call to writeObject(...): (line 552)
        # Processing the call arguments (line 552)
        # Getting the type of 'pageObject' (line 552)
        pageObject_233055 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 552, 25), 'pageObject', False)
        # Getting the type of 'thePage' (line 552)
        thePage_233056 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 552, 37), 'thePage', False)
        # Processing the call keyword arguments (line 552)
        kwargs_233057 = {}
        # Getting the type of 'self' (line 552)
        self_233053 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 552, 8), 'self', False)
        # Obtaining the member 'writeObject' of a type (line 552)
        writeObject_233054 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 552, 8), self_233053, 'writeObject')
        # Calling writeObject(args, kwargs) (line 552)
        writeObject_call_result_233058 = invoke(stypy.reporting.localization.Localization(__file__, 552, 8), writeObject_233054, *[pageObject_233055, thePage_233056], **kwargs_233057)
        
        
        # Call to append(...): (line 553)
        # Processing the call arguments (line 553)
        # Getting the type of 'pageObject' (line 553)
        pageObject_233062 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 553, 29), 'pageObject', False)
        # Processing the call keyword arguments (line 553)
        kwargs_233063 = {}
        # Getting the type of 'self' (line 553)
        self_233059 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 553, 8), 'self', False)
        # Obtaining the member 'pageList' of a type (line 553)
        pageList_233060 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 553, 8), self_233059, 'pageList')
        # Obtaining the member 'append' of a type (line 553)
        append_233061 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 553, 8), pageList_233060, 'append')
        # Calling append(args, kwargs) (line 553)
        append_call_result_233064 = invoke(stypy.reporting.localization.Localization(__file__, 553, 8), append_233061, *[pageObject_233062], **kwargs_233063)
        
        
        # Call to beginStream(...): (line 555)
        # Processing the call arguments (line 555)
        # Getting the type of 'contentObject' (line 555)
        contentObject_233067 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 555, 25), 'contentObject', False)
        # Obtaining the member 'id' of a type (line 555)
        id_233068 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 555, 25), contentObject_233067, 'id')
        
        # Call to reserveObject(...): (line 556)
        # Processing the call arguments (line 556)
        unicode_233071 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 556, 44), 'unicode', u'length of content stream')
        # Processing the call keyword arguments (line 556)
        kwargs_233072 = {}
        # Getting the type of 'self' (line 556)
        self_233069 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 556, 25), 'self', False)
        # Obtaining the member 'reserveObject' of a type (line 556)
        reserveObject_233070 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 556, 25), self_233069, 'reserveObject')
        # Calling reserveObject(args, kwargs) (line 556)
        reserveObject_call_result_233073 = invoke(stypy.reporting.localization.Localization(__file__, 556, 25), reserveObject_233070, *[unicode_233071], **kwargs_233072)
        
        # Processing the call keyword arguments (line 555)
        kwargs_233074 = {}
        # Getting the type of 'self' (line 555)
        self_233065 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 555, 8), 'self', False)
        # Obtaining the member 'beginStream' of a type (line 555)
        beginStream_233066 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 555, 8), self_233065, 'beginStream')
        # Calling beginStream(args, kwargs) (line 555)
        beginStream_call_result_233075 = invoke(stypy.reporting.localization.Localization(__file__, 555, 8), beginStream_233066, *[id_233068, reserveObject_call_result_233073], **kwargs_233074)
        
        
        # Call to output(...): (line 559)
        # Processing the call arguments (line 559)
        
        # Obtaining the type of the subscript
        unicode_233078 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 559, 50), 'unicode', u'round')
        # Getting the type of 'GraphicsContextPdf' (line 559)
        GraphicsContextPdf_233079 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 559, 20), 'GraphicsContextPdf', False)
        # Obtaining the member 'joinstyles' of a type (line 559)
        joinstyles_233080 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 559, 20), GraphicsContextPdf_233079, 'joinstyles')
        # Obtaining the member '__getitem__' of a type (line 559)
        getitem___233081 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 559, 20), joinstyles_233080, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 559)
        subscript_call_result_233082 = invoke(stypy.reporting.localization.Localization(__file__, 559, 20), getitem___233081, unicode_233078)
        
        # Getting the type of 'Op' (line 559)
        Op_233083 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 559, 60), 'Op', False)
        # Obtaining the member 'setlinejoin' of a type (line 559)
        setlinejoin_233084 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 559, 60), Op_233083, 'setlinejoin')
        # Processing the call keyword arguments (line 559)
        kwargs_233085 = {}
        # Getting the type of 'self' (line 559)
        self_233076 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 559, 8), 'self', False)
        # Obtaining the member 'output' of a type (line 559)
        output_233077 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 559, 8), self_233076, 'output')
        # Calling output(args, kwargs) (line 559)
        output_call_result_233086 = invoke(stypy.reporting.localization.Localization(__file__, 559, 8), output_233077, *[subscript_call_result_233082, setlinejoin_233084], **kwargs_233085)
        
        
        # Assigning a List to a Attribute (line 562):
        
        # Assigning a List to a Attribute (line 562):
        
        # Obtaining an instance of the builtin type 'list' (line 562)
        list_233087 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 562, 31), 'list')
        # Adding type elements to the builtin type 'list' instance (line 562)
        
        # Getting the type of 'self' (line 562)
        self_233088 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 562, 8), 'self')
        # Setting the type of the member 'pageAnnotations' of a type (line 562)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 562, 8), self_233088, 'pageAnnotations', list_233087)
        
        # ################# End of 'newPage(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'newPage' in the type store
        # Getting the type of 'stypy_return_type' (line 536)
        stypy_return_type_233089 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_233089)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'newPage'
        return stypy_return_type_233089


    @norecursion
    def newTextnote(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        
        # Obtaining an instance of the builtin type 'list' (line 564)
        list_233090 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 564, 45), 'list')
        # Adding type elements to the builtin type 'list' instance (line 564)
        # Adding element type (line 564)
        int_233091 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 564, 46), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 564, 45), list_233090, int_233091)
        # Adding element type (line 564)
        int_233092 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 564, 52), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 564, 45), list_233090, int_233092)
        # Adding element type (line 564)
        int_233093 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 564, 58), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 564, 45), list_233090, int_233093)
        # Adding element type (line 564)
        int_233094 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 564, 61), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 564, 45), list_233090, int_233094)
        
        defaults = [list_233090]
        # Create a new context for function 'newTextnote'
        module_type_store = module_type_store.open_function_context('newTextnote', 564, 4, False)
        # Assigning a type to the variable 'self' (line 565)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 565, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        PdfFile.newTextnote.__dict__.__setitem__('stypy_localization', localization)
        PdfFile.newTextnote.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        PdfFile.newTextnote.__dict__.__setitem__('stypy_type_store', module_type_store)
        PdfFile.newTextnote.__dict__.__setitem__('stypy_function_name', 'PdfFile.newTextnote')
        PdfFile.newTextnote.__dict__.__setitem__('stypy_param_names_list', ['text', 'positionRect'])
        PdfFile.newTextnote.__dict__.__setitem__('stypy_varargs_param_name', None)
        PdfFile.newTextnote.__dict__.__setitem__('stypy_kwargs_param_name', None)
        PdfFile.newTextnote.__dict__.__setitem__('stypy_call_defaults', defaults)
        PdfFile.newTextnote.__dict__.__setitem__('stypy_call_varargs', varargs)
        PdfFile.newTextnote.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        PdfFile.newTextnote.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'PdfFile.newTextnote', ['text', 'positionRect'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'newTextnote', localization, ['text', 'positionRect'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'newTextnote(...)' code ##################

        
        # Assigning a Dict to a Name (line 566):
        
        # Assigning a Dict to a Name (line 566):
        
        # Obtaining an instance of the builtin type 'dict' (line 566)
        dict_233095 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 566, 18), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 566)
        # Adding element type (key, value) (line 566)
        unicode_233096 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 566, 19), 'unicode', u'Type')
        
        # Call to Name(...): (line 566)
        # Processing the call arguments (line 566)
        unicode_233098 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 566, 32), 'unicode', u'Annot')
        # Processing the call keyword arguments (line 566)
        kwargs_233099 = {}
        # Getting the type of 'Name' (line 566)
        Name_233097 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 566, 27), 'Name', False)
        # Calling Name(args, kwargs) (line 566)
        Name_call_result_233100 = invoke(stypy.reporting.localization.Localization(__file__, 566, 27), Name_233097, *[unicode_233098], **kwargs_233099)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 566, 18), dict_233095, (unicode_233096, Name_call_result_233100))
        # Adding element type (key, value) (line 566)
        unicode_233101 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 567, 19), 'unicode', u'Subtype')
        
        # Call to Name(...): (line 567)
        # Processing the call arguments (line 567)
        unicode_233103 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 567, 35), 'unicode', u'Text')
        # Processing the call keyword arguments (line 567)
        kwargs_233104 = {}
        # Getting the type of 'Name' (line 567)
        Name_233102 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 567, 30), 'Name', False)
        # Calling Name(args, kwargs) (line 567)
        Name_call_result_233105 = invoke(stypy.reporting.localization.Localization(__file__, 567, 30), Name_233102, *[unicode_233103], **kwargs_233104)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 566, 18), dict_233095, (unicode_233101, Name_call_result_233105))
        # Adding element type (key, value) (line 566)
        unicode_233106 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 568, 19), 'unicode', u'Contents')
        # Getting the type of 'text' (line 568)
        text_233107 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 568, 31), 'text')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 566, 18), dict_233095, (unicode_233106, text_233107))
        # Adding element type (key, value) (line 566)
        unicode_233108 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 569, 19), 'unicode', u'Rect')
        # Getting the type of 'positionRect' (line 569)
        positionRect_233109 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 569, 27), 'positionRect')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 566, 18), dict_233095, (unicode_233108, positionRect_233109))
        
        # Assigning a type to the variable 'theNote' (line 566)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 566, 8), 'theNote', dict_233095)
        
        # Assigning a Call to a Name (line 571):
        
        # Assigning a Call to a Name (line 571):
        
        # Call to reserveObject(...): (line 571)
        # Processing the call arguments (line 571)
        unicode_233112 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 571, 41), 'unicode', u'annotation')
        # Processing the call keyword arguments (line 571)
        kwargs_233113 = {}
        # Getting the type of 'self' (line 571)
        self_233110 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 571, 22), 'self', False)
        # Obtaining the member 'reserveObject' of a type (line 571)
        reserveObject_233111 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 571, 22), self_233110, 'reserveObject')
        # Calling reserveObject(args, kwargs) (line 571)
        reserveObject_call_result_233114 = invoke(stypy.reporting.localization.Localization(__file__, 571, 22), reserveObject_233111, *[unicode_233112], **kwargs_233113)
        
        # Assigning a type to the variable 'annotObject' (line 571)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 571, 8), 'annotObject', reserveObject_call_result_233114)
        
        # Call to writeObject(...): (line 572)
        # Processing the call arguments (line 572)
        # Getting the type of 'annotObject' (line 572)
        annotObject_233117 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 572, 25), 'annotObject', False)
        # Getting the type of 'theNote' (line 572)
        theNote_233118 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 572, 38), 'theNote', False)
        # Processing the call keyword arguments (line 572)
        kwargs_233119 = {}
        # Getting the type of 'self' (line 572)
        self_233115 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 572, 8), 'self', False)
        # Obtaining the member 'writeObject' of a type (line 572)
        writeObject_233116 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 572, 8), self_233115, 'writeObject')
        # Calling writeObject(args, kwargs) (line 572)
        writeObject_call_result_233120 = invoke(stypy.reporting.localization.Localization(__file__, 572, 8), writeObject_233116, *[annotObject_233117, theNote_233118], **kwargs_233119)
        
        
        # Call to append(...): (line 573)
        # Processing the call arguments (line 573)
        # Getting the type of 'annotObject' (line 573)
        annotObject_233124 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 573, 36), 'annotObject', False)
        # Processing the call keyword arguments (line 573)
        kwargs_233125 = {}
        # Getting the type of 'self' (line 573)
        self_233121 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 573, 8), 'self', False)
        # Obtaining the member 'pageAnnotations' of a type (line 573)
        pageAnnotations_233122 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 573, 8), self_233121, 'pageAnnotations')
        # Obtaining the member 'append' of a type (line 573)
        append_233123 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 573, 8), pageAnnotations_233122, 'append')
        # Calling append(args, kwargs) (line 573)
        append_call_result_233126 = invoke(stypy.reporting.localization.Localization(__file__, 573, 8), append_233123, *[annotObject_233124], **kwargs_233125)
        
        
        # ################# End of 'newTextnote(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'newTextnote' in the type store
        # Getting the type of 'stypy_return_type' (line 564)
        stypy_return_type_233127 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 564, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_233127)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'newTextnote'
        return stypy_return_type_233127


    @norecursion
    def finalize(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'finalize'
        module_type_store = module_type_store.open_function_context('finalize', 575, 4, False)
        # Assigning a type to the variable 'self' (line 576)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 576, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        PdfFile.finalize.__dict__.__setitem__('stypy_localization', localization)
        PdfFile.finalize.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        PdfFile.finalize.__dict__.__setitem__('stypy_type_store', module_type_store)
        PdfFile.finalize.__dict__.__setitem__('stypy_function_name', 'PdfFile.finalize')
        PdfFile.finalize.__dict__.__setitem__('stypy_param_names_list', [])
        PdfFile.finalize.__dict__.__setitem__('stypy_varargs_param_name', None)
        PdfFile.finalize.__dict__.__setitem__('stypy_kwargs_param_name', None)
        PdfFile.finalize.__dict__.__setitem__('stypy_call_defaults', defaults)
        PdfFile.finalize.__dict__.__setitem__('stypy_call_varargs', varargs)
        PdfFile.finalize.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        PdfFile.finalize.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'PdfFile.finalize', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'finalize', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'finalize(...)' code ##################

        unicode_233128 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 576, 8), 'unicode', u'Write out the various deferred objects and the pdf end matter.')
        
        # Call to endStream(...): (line 578)
        # Processing the call keyword arguments (line 578)
        kwargs_233131 = {}
        # Getting the type of 'self' (line 578)
        self_233129 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 578, 8), 'self', False)
        # Obtaining the member 'endStream' of a type (line 578)
        endStream_233130 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 578, 8), self_233129, 'endStream')
        # Calling endStream(args, kwargs) (line 578)
        endStream_call_result_233132 = invoke(stypy.reporting.localization.Localization(__file__, 578, 8), endStream_233130, *[], **kwargs_233131)
        
        
        # Call to writeFonts(...): (line 579)
        # Processing the call keyword arguments (line 579)
        kwargs_233135 = {}
        # Getting the type of 'self' (line 579)
        self_233133 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 579, 8), 'self', False)
        # Obtaining the member 'writeFonts' of a type (line 579)
        writeFonts_233134 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 579, 8), self_233133, 'writeFonts')
        # Calling writeFonts(args, kwargs) (line 579)
        writeFonts_call_result_233136 = invoke(stypy.reporting.localization.Localization(__file__, 579, 8), writeFonts_233134, *[], **kwargs_233135)
        
        
        # Call to writeObject(...): (line 580)
        # Processing the call arguments (line 580)
        # Getting the type of 'self' (line 581)
        self_233139 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 581, 12), 'self', False)
        # Obtaining the member 'alphaStateObject' of a type (line 581)
        alphaStateObject_233140 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 581, 12), self_233139, 'alphaStateObject')
        # Calculating dict comprehension
        module_type_store = module_type_store.open_function_context('dict comprehension expression', 582, 13, True)
        # Calculating comprehension expression
        
        # Call to itervalues(...): (line 582)
        # Processing the call arguments (line 582)
        # Getting the type of 'self' (line 582)
        self_233151 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 582, 54), 'self', False)
        # Obtaining the member 'alphaStates' of a type (line 582)
        alphaStates_233152 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 582, 54), self_233151, 'alphaStates')
        # Processing the call keyword arguments (line 582)
        kwargs_233153 = {}
        # Getting the type of 'six' (line 582)
        six_233149 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 582, 39), 'six', False)
        # Obtaining the member 'itervalues' of a type (line 582)
        itervalues_233150 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 582, 39), six_233149, 'itervalues')
        # Calling itervalues(args, kwargs) (line 582)
        itervalues_call_result_233154 = invoke(stypy.reporting.localization.Localization(__file__, 582, 39), itervalues_233150, *[alphaStates_233152], **kwargs_233153)
        
        comprehension_233155 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 582, 13), itervalues_call_result_233154)
        # Assigning a type to the variable 'val' (line 582)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 582, 13), 'val', comprehension_233155)
        
        # Obtaining the type of the subscript
        int_233141 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 582, 17), 'int')
        # Getting the type of 'val' (line 582)
        val_233142 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 582, 13), 'val', False)
        # Obtaining the member '__getitem__' of a type (line 582)
        getitem___233143 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 582, 13), val_233142, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 582)
        subscript_call_result_233144 = invoke(stypy.reporting.localization.Localization(__file__, 582, 13), getitem___233143, int_233141)
        
        
        # Obtaining the type of the subscript
        int_233145 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 582, 25), 'int')
        # Getting the type of 'val' (line 582)
        val_233146 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 582, 21), 'val', False)
        # Obtaining the member '__getitem__' of a type (line 582)
        getitem___233147 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 582, 21), val_233146, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 582)
        subscript_call_result_233148 = invoke(stypy.reporting.localization.Localization(__file__, 582, 21), getitem___233147, int_233145)
        
        dict_233156 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 582, 13), 'dict')
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 582, 13), dict_233156, (subscript_call_result_233144, subscript_call_result_233148))
        # Processing the call keyword arguments (line 580)
        kwargs_233157 = {}
        # Getting the type of 'self' (line 580)
        self_233137 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 580, 8), 'self', False)
        # Obtaining the member 'writeObject' of a type (line 580)
        writeObject_233138 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 580, 8), self_233137, 'writeObject')
        # Calling writeObject(args, kwargs) (line 580)
        writeObject_call_result_233158 = invoke(stypy.reporting.localization.Localization(__file__, 580, 8), writeObject_233138, *[alphaStateObject_233140, dict_233156], **kwargs_233157)
        
        
        # Call to writeHatches(...): (line 583)
        # Processing the call keyword arguments (line 583)
        kwargs_233161 = {}
        # Getting the type of 'self' (line 583)
        self_233159 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 583, 8), 'self', False)
        # Obtaining the member 'writeHatches' of a type (line 583)
        writeHatches_233160 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 583, 8), self_233159, 'writeHatches')
        # Calling writeHatches(args, kwargs) (line 583)
        writeHatches_call_result_233162 = invoke(stypy.reporting.localization.Localization(__file__, 583, 8), writeHatches_233160, *[], **kwargs_233161)
        
        
        # Call to writeGouraudTriangles(...): (line 584)
        # Processing the call keyword arguments (line 584)
        kwargs_233165 = {}
        # Getting the type of 'self' (line 584)
        self_233163 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 584, 8), 'self', False)
        # Obtaining the member 'writeGouraudTriangles' of a type (line 584)
        writeGouraudTriangles_233164 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 584, 8), self_233163, 'writeGouraudTriangles')
        # Calling writeGouraudTriangles(args, kwargs) (line 584)
        writeGouraudTriangles_call_result_233166 = invoke(stypy.reporting.localization.Localization(__file__, 584, 8), writeGouraudTriangles_233164, *[], **kwargs_233165)
        
        
        # Assigning a DictComp to a Name (line 585):
        
        # Assigning a DictComp to a Name (line 585):
        # Calculating dict comprehension
        module_type_store = module_type_store.open_function_context('dict comprehension expression', 586, 12, True)
        # Calculating comprehension expression
        
        # Call to itervalues(...): (line 586)
        # Processing the call arguments (line 586)
        # Getting the type of 'self' (line 586)
        self_233171 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 586, 59), 'self', False)
        # Obtaining the member '_images' of a type (line 586)
        _images_233172 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 586, 59), self_233171, '_images')
        # Processing the call keyword arguments (line 586)
        kwargs_233173 = {}
        # Getting the type of 'six' (line 586)
        six_233169 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 586, 44), 'six', False)
        # Obtaining the member 'itervalues' of a type (line 586)
        itervalues_233170 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 586, 44), six_233169, 'itervalues')
        # Calling itervalues(args, kwargs) (line 586)
        itervalues_call_result_233174 = invoke(stypy.reporting.localization.Localization(__file__, 586, 44), itervalues_233170, *[_images_233172], **kwargs_233173)
        
        comprehension_233175 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 586, 12), itervalues_call_result_233174)
        # Assigning a type to the variable 'image' (line 586)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 586, 12), 'image', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 586, 12), comprehension_233175))
        # Assigning a type to the variable 'name' (line 586)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 586, 12), 'name', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 586, 12), comprehension_233175))
        # Assigning a type to the variable 'ob' (line 586)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 586, 12), 'ob', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 586, 12), comprehension_233175))
        # Getting the type of 'name' (line 586)
        name_233167 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 586, 12), 'name')
        # Getting the type of 'ob' (line 586)
        ob_233168 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 586, 18), 'ob')
        dict_233176 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 586, 12), 'dict')
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 586, 12), dict_233176, (name_233167, ob_233168))
        # Assigning a type to the variable 'xobjects' (line 585)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 585, 8), 'xobjects', dict_233176)
        
        
        # Call to itervalues(...): (line 587)
        # Processing the call arguments (line 587)
        # Getting the type of 'self' (line 587)
        self_233179 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 587, 34), 'self', False)
        # Obtaining the member 'markers' of a type (line 587)
        markers_233180 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 587, 34), self_233179, 'markers')
        # Processing the call keyword arguments (line 587)
        kwargs_233181 = {}
        # Getting the type of 'six' (line 587)
        six_233177 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 587, 19), 'six', False)
        # Obtaining the member 'itervalues' of a type (line 587)
        itervalues_233178 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 587, 19), six_233177, 'itervalues')
        # Calling itervalues(args, kwargs) (line 587)
        itervalues_call_result_233182 = invoke(stypy.reporting.localization.Localization(__file__, 587, 19), itervalues_233178, *[markers_233180], **kwargs_233181)
        
        # Testing the type of a for loop iterable (line 587)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 587, 8), itervalues_call_result_233182)
        # Getting the type of the for loop variable (line 587)
        for_loop_var_233183 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 587, 8), itervalues_call_result_233182)
        # Assigning a type to the variable 'tup' (line 587)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 587, 8), 'tup', for_loop_var_233183)
        # SSA begins for a for statement (line 587)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Subscript to a Subscript (line 588):
        
        # Assigning a Subscript to a Subscript (line 588):
        
        # Obtaining the type of the subscript
        int_233184 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 588, 35), 'int')
        # Getting the type of 'tup' (line 588)
        tup_233185 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 588, 31), 'tup')
        # Obtaining the member '__getitem__' of a type (line 588)
        getitem___233186 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 588, 31), tup_233185, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 588)
        subscript_call_result_233187 = invoke(stypy.reporting.localization.Localization(__file__, 588, 31), getitem___233186, int_233184)
        
        # Getting the type of 'xobjects' (line 588)
        xobjects_233188 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 588, 12), 'xobjects')
        
        # Obtaining the type of the subscript
        int_233189 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 588, 25), 'int')
        # Getting the type of 'tup' (line 588)
        tup_233190 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 588, 21), 'tup')
        # Obtaining the member '__getitem__' of a type (line 588)
        getitem___233191 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 588, 21), tup_233190, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 588)
        subscript_call_result_233192 = invoke(stypy.reporting.localization.Localization(__file__, 588, 21), getitem___233191, int_233189)
        
        # Storing an element on a container (line 588)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 588, 12), xobjects_233188, (subscript_call_result_233192, subscript_call_result_233187))
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Call to iteritems(...): (line 589)
        # Processing the call arguments (line 589)
        # Getting the type of 'self' (line 589)
        self_233195 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 589, 41), 'self', False)
        # Obtaining the member 'multi_byte_charprocs' of a type (line 589)
        multi_byte_charprocs_233196 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 589, 41), self_233195, 'multi_byte_charprocs')
        # Processing the call keyword arguments (line 589)
        kwargs_233197 = {}
        # Getting the type of 'six' (line 589)
        six_233193 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 589, 27), 'six', False)
        # Obtaining the member 'iteritems' of a type (line 589)
        iteritems_233194 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 589, 27), six_233193, 'iteritems')
        # Calling iteritems(args, kwargs) (line 589)
        iteritems_call_result_233198 = invoke(stypy.reporting.localization.Localization(__file__, 589, 27), iteritems_233194, *[multi_byte_charprocs_233196], **kwargs_233197)
        
        # Testing the type of a for loop iterable (line 589)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 589, 8), iteritems_call_result_233198)
        # Getting the type of the for loop variable (line 589)
        for_loop_var_233199 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 589, 8), iteritems_call_result_233198)
        # Assigning a type to the variable 'name' (line 589)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 589, 8), 'name', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 589, 8), for_loop_var_233199))
        # Assigning a type to the variable 'value' (line 589)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 589, 8), 'value', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 589, 8), for_loop_var_233199))
        # SSA begins for a for statement (line 589)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Name to a Subscript (line 590):
        
        # Assigning a Name to a Subscript (line 590):
        # Getting the type of 'value' (line 590)
        value_233200 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 590, 29), 'value')
        # Getting the type of 'xobjects' (line 590)
        xobjects_233201 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 590, 12), 'xobjects')
        # Getting the type of 'name' (line 590)
        name_233202 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 590, 21), 'name')
        # Storing an element on a container (line 590)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 590, 12), xobjects_233201, (name_233202, value_233200))
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'self' (line 592)
        self_233203 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 592, 19), 'self')
        # Obtaining the member 'paths' of a type (line 592)
        paths_233204 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 592, 19), self_233203, 'paths')
        # Testing the type of a for loop iterable (line 591)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 591, 8), paths_233204)
        # Getting the type of the for loop variable (line 591)
        for_loop_var_233205 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 591, 8), paths_233204)
        # Assigning a type to the variable 'name' (line 591)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 591, 8), 'name', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 591, 8), for_loop_var_233205))
        # Assigning a type to the variable 'path' (line 591)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 591, 8), 'path', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 591, 8), for_loop_var_233205))
        # Assigning a type to the variable 'trans' (line 591)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 591, 8), 'trans', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 591, 8), for_loop_var_233205))
        # Assigning a type to the variable 'ob' (line 591)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 591, 8), 'ob', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 591, 8), for_loop_var_233205))
        # Assigning a type to the variable 'join' (line 591)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 591, 8), 'join', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 591, 8), for_loop_var_233205))
        # Assigning a type to the variable 'cap' (line 591)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 591, 8), 'cap', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 591, 8), for_loop_var_233205))
        # Assigning a type to the variable 'padding' (line 591)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 591, 8), 'padding', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 591, 8), for_loop_var_233205))
        # Assigning a type to the variable 'filled' (line 591)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 591, 8), 'filled', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 591, 8), for_loop_var_233205))
        # Assigning a type to the variable 'stroked' (line 591)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 591, 8), 'stroked', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 591, 8), for_loop_var_233205))
        # SSA begins for a for statement (line 591)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Name to a Subscript (line 593):
        
        # Assigning a Name to a Subscript (line 593):
        # Getting the type of 'ob' (line 593)
        ob_233206 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 593, 29), 'ob')
        # Getting the type of 'xobjects' (line 593)
        xobjects_233207 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 593, 12), 'xobjects')
        # Getting the type of 'name' (line 593)
        name_233208 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 593, 21), 'name')
        # Storing an element on a container (line 593)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 593, 12), xobjects_233207, (name_233208, ob_233206))
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to writeObject(...): (line 594)
        # Processing the call arguments (line 594)
        # Getting the type of 'self' (line 594)
        self_233211 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 594, 25), 'self', False)
        # Obtaining the member 'XObjectObject' of a type (line 594)
        XObjectObject_233212 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 594, 25), self_233211, 'XObjectObject')
        # Getting the type of 'xobjects' (line 594)
        xobjects_233213 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 594, 45), 'xobjects', False)
        # Processing the call keyword arguments (line 594)
        kwargs_233214 = {}
        # Getting the type of 'self' (line 594)
        self_233209 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 594, 8), 'self', False)
        # Obtaining the member 'writeObject' of a type (line 594)
        writeObject_233210 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 594, 8), self_233209, 'writeObject')
        # Calling writeObject(args, kwargs) (line 594)
        writeObject_call_result_233215 = invoke(stypy.reporting.localization.Localization(__file__, 594, 8), writeObject_233210, *[XObjectObject_233212, xobjects_233213], **kwargs_233214)
        
        
        # Call to writeImages(...): (line 595)
        # Processing the call keyword arguments (line 595)
        kwargs_233218 = {}
        # Getting the type of 'self' (line 595)
        self_233216 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 595, 8), 'self', False)
        # Obtaining the member 'writeImages' of a type (line 595)
        writeImages_233217 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 595, 8), self_233216, 'writeImages')
        # Calling writeImages(args, kwargs) (line 595)
        writeImages_call_result_233219 = invoke(stypy.reporting.localization.Localization(__file__, 595, 8), writeImages_233217, *[], **kwargs_233218)
        
        
        # Call to writeMarkers(...): (line 596)
        # Processing the call keyword arguments (line 596)
        kwargs_233222 = {}
        # Getting the type of 'self' (line 596)
        self_233220 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 596, 8), 'self', False)
        # Obtaining the member 'writeMarkers' of a type (line 596)
        writeMarkers_233221 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 596, 8), self_233220, 'writeMarkers')
        # Calling writeMarkers(args, kwargs) (line 596)
        writeMarkers_call_result_233223 = invoke(stypy.reporting.localization.Localization(__file__, 596, 8), writeMarkers_233221, *[], **kwargs_233222)
        
        
        # Call to writePathCollectionTemplates(...): (line 597)
        # Processing the call keyword arguments (line 597)
        kwargs_233226 = {}
        # Getting the type of 'self' (line 597)
        self_233224 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 597, 8), 'self', False)
        # Obtaining the member 'writePathCollectionTemplates' of a type (line 597)
        writePathCollectionTemplates_233225 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 597, 8), self_233224, 'writePathCollectionTemplates')
        # Calling writePathCollectionTemplates(args, kwargs) (line 597)
        writePathCollectionTemplates_call_result_233227 = invoke(stypy.reporting.localization.Localization(__file__, 597, 8), writePathCollectionTemplates_233225, *[], **kwargs_233226)
        
        
        # Call to writeObject(...): (line 598)
        # Processing the call arguments (line 598)
        # Getting the type of 'self' (line 598)
        self_233230 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 598, 25), 'self', False)
        # Obtaining the member 'pagesObject' of a type (line 598)
        pagesObject_233231 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 598, 25), self_233230, 'pagesObject')
        
        # Obtaining an instance of the builtin type 'dict' (line 599)
        dict_233232 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 599, 25), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 599)
        # Adding element type (key, value) (line 599)
        unicode_233233 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 599, 26), 'unicode', u'Type')
        
        # Call to Name(...): (line 599)
        # Processing the call arguments (line 599)
        unicode_233235 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 599, 39), 'unicode', u'Pages')
        # Processing the call keyword arguments (line 599)
        kwargs_233236 = {}
        # Getting the type of 'Name' (line 599)
        Name_233234 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 599, 34), 'Name', False)
        # Calling Name(args, kwargs) (line 599)
        Name_call_result_233237 = invoke(stypy.reporting.localization.Localization(__file__, 599, 34), Name_233234, *[unicode_233235], **kwargs_233236)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 599, 25), dict_233232, (unicode_233233, Name_call_result_233237))
        # Adding element type (key, value) (line 599)
        unicode_233238 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 600, 26), 'unicode', u'Kids')
        # Getting the type of 'self' (line 600)
        self_233239 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 600, 34), 'self', False)
        # Obtaining the member 'pageList' of a type (line 600)
        pageList_233240 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 600, 34), self_233239, 'pageList')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 599, 25), dict_233232, (unicode_233238, pageList_233240))
        # Adding element type (key, value) (line 599)
        unicode_233241 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 601, 26), 'unicode', u'Count')
        
        # Call to len(...): (line 601)
        # Processing the call arguments (line 601)
        # Getting the type of 'self' (line 601)
        self_233243 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 601, 39), 'self', False)
        # Obtaining the member 'pageList' of a type (line 601)
        pageList_233244 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 601, 39), self_233243, 'pageList')
        # Processing the call keyword arguments (line 601)
        kwargs_233245 = {}
        # Getting the type of 'len' (line 601)
        len_233242 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 601, 35), 'len', False)
        # Calling len(args, kwargs) (line 601)
        len_call_result_233246 = invoke(stypy.reporting.localization.Localization(__file__, 601, 35), len_233242, *[pageList_233244], **kwargs_233245)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 599, 25), dict_233232, (unicode_233241, len_call_result_233246))
        
        # Processing the call keyword arguments (line 598)
        kwargs_233247 = {}
        # Getting the type of 'self' (line 598)
        self_233228 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 598, 8), 'self', False)
        # Obtaining the member 'writeObject' of a type (line 598)
        writeObject_233229 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 598, 8), self_233228, 'writeObject')
        # Calling writeObject(args, kwargs) (line 598)
        writeObject_call_result_233248 = invoke(stypy.reporting.localization.Localization(__file__, 598, 8), writeObject_233229, *[pagesObject_233231, dict_233232], **kwargs_233247)
        
        
        # Call to writeInfoDict(...): (line 602)
        # Processing the call keyword arguments (line 602)
        kwargs_233251 = {}
        # Getting the type of 'self' (line 602)
        self_233249 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 602, 8), 'self', False)
        # Obtaining the member 'writeInfoDict' of a type (line 602)
        writeInfoDict_233250 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 602, 8), self_233249, 'writeInfoDict')
        # Calling writeInfoDict(args, kwargs) (line 602)
        writeInfoDict_call_result_233252 = invoke(stypy.reporting.localization.Localization(__file__, 602, 8), writeInfoDict_233250, *[], **kwargs_233251)
        
        
        # Call to writeXref(...): (line 605)
        # Processing the call keyword arguments (line 605)
        kwargs_233255 = {}
        # Getting the type of 'self' (line 605)
        self_233253 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 605, 8), 'self', False)
        # Obtaining the member 'writeXref' of a type (line 605)
        writeXref_233254 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 605, 8), self_233253, 'writeXref')
        # Calling writeXref(args, kwargs) (line 605)
        writeXref_call_result_233256 = invoke(stypy.reporting.localization.Localization(__file__, 605, 8), writeXref_233254, *[], **kwargs_233255)
        
        
        # Call to writeTrailer(...): (line 606)
        # Processing the call keyword arguments (line 606)
        kwargs_233259 = {}
        # Getting the type of 'self' (line 606)
        self_233257 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 606, 8), 'self', False)
        # Obtaining the member 'writeTrailer' of a type (line 606)
        writeTrailer_233258 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 606, 8), self_233257, 'writeTrailer')
        # Calling writeTrailer(args, kwargs) (line 606)
        writeTrailer_call_result_233260 = invoke(stypy.reporting.localization.Localization(__file__, 606, 8), writeTrailer_233258, *[], **kwargs_233259)
        
        
        # ################# End of 'finalize(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'finalize' in the type store
        # Getting the type of 'stypy_return_type' (line 575)
        stypy_return_type_233261 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 575, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_233261)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'finalize'
        return stypy_return_type_233261


    @norecursion
    def close(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'close'
        module_type_store = module_type_store.open_function_context('close', 608, 4, False)
        # Assigning a type to the variable 'self' (line 609)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 609, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        PdfFile.close.__dict__.__setitem__('stypy_localization', localization)
        PdfFile.close.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        PdfFile.close.__dict__.__setitem__('stypy_type_store', module_type_store)
        PdfFile.close.__dict__.__setitem__('stypy_function_name', 'PdfFile.close')
        PdfFile.close.__dict__.__setitem__('stypy_param_names_list', [])
        PdfFile.close.__dict__.__setitem__('stypy_varargs_param_name', None)
        PdfFile.close.__dict__.__setitem__('stypy_kwargs_param_name', None)
        PdfFile.close.__dict__.__setitem__('stypy_call_defaults', defaults)
        PdfFile.close.__dict__.__setitem__('stypy_call_varargs', varargs)
        PdfFile.close.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        PdfFile.close.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'PdfFile.close', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'close', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'close(...)' code ##################

        unicode_233262 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 609, 8), 'unicode', u'Flush all buffers and free all resources.')
        
        # Call to endStream(...): (line 611)
        # Processing the call keyword arguments (line 611)
        kwargs_233265 = {}
        # Getting the type of 'self' (line 611)
        self_233263 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 611, 8), 'self', False)
        # Obtaining the member 'endStream' of a type (line 611)
        endStream_233264 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 611, 8), self_233263, 'endStream')
        # Calling endStream(args, kwargs) (line 611)
        endStream_call_result_233266 = invoke(stypy.reporting.localization.Localization(__file__, 611, 8), endStream_233264, *[], **kwargs_233265)
        
        
        # Getting the type of 'self' (line 612)
        self_233267 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 612, 11), 'self')
        # Obtaining the member 'passed_in_file_object' of a type (line 612)
        passed_in_file_object_233268 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 612, 11), self_233267, 'passed_in_file_object')
        # Testing the type of an if condition (line 612)
        if_condition_233269 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 612, 8), passed_in_file_object_233268)
        # Assigning a type to the variable 'if_condition_233269' (line 612)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 612, 8), 'if_condition_233269', if_condition_233269)
        # SSA begins for if statement (line 612)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to flush(...): (line 613)
        # Processing the call keyword arguments (line 613)
        kwargs_233273 = {}
        # Getting the type of 'self' (line 613)
        self_233270 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 613, 12), 'self', False)
        # Obtaining the member 'fh' of a type (line 613)
        fh_233271 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 613, 12), self_233270, 'fh')
        # Obtaining the member 'flush' of a type (line 613)
        flush_233272 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 613, 12), fh_233271, 'flush')
        # Calling flush(args, kwargs) (line 613)
        flush_call_result_233274 = invoke(stypy.reporting.localization.Localization(__file__, 613, 12), flush_233272, *[], **kwargs_233273)
        
        # SSA branch for the else part of an if statement (line 612)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'self' (line 615)
        self_233275 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 615, 15), 'self')
        # Obtaining the member 'original_file_like' of a type (line 615)
        original_file_like_233276 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 615, 15), self_233275, 'original_file_like')
        # Getting the type of 'None' (line 615)
        None_233277 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 615, 46), 'None')
        # Applying the binary operator 'isnot' (line 615)
        result_is_not_233278 = python_operator(stypy.reporting.localization.Localization(__file__, 615, 15), 'isnot', original_file_like_233276, None_233277)
        
        # Testing the type of an if condition (line 615)
        if_condition_233279 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 615, 12), result_is_not_233278)
        # Assigning a type to the variable 'if_condition_233279' (line 615)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 615, 12), 'if_condition_233279', if_condition_233279)
        # SSA begins for if statement (line 615)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to write(...): (line 616)
        # Processing the call arguments (line 616)
        
        # Call to getvalue(...): (line 616)
        # Processing the call keyword arguments (line 616)
        kwargs_233286 = {}
        # Getting the type of 'self' (line 616)
        self_233283 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 616, 46), 'self', False)
        # Obtaining the member 'fh' of a type (line 616)
        fh_233284 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 616, 46), self_233283, 'fh')
        # Obtaining the member 'getvalue' of a type (line 616)
        getvalue_233285 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 616, 46), fh_233284, 'getvalue')
        # Calling getvalue(args, kwargs) (line 616)
        getvalue_call_result_233287 = invoke(stypy.reporting.localization.Localization(__file__, 616, 46), getvalue_233285, *[], **kwargs_233286)
        
        # Processing the call keyword arguments (line 616)
        kwargs_233288 = {}
        # Getting the type of 'self' (line 616)
        self_233280 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 616, 16), 'self', False)
        # Obtaining the member 'original_file_like' of a type (line 616)
        original_file_like_233281 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 616, 16), self_233280, 'original_file_like')
        # Obtaining the member 'write' of a type (line 616)
        write_233282 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 616, 16), original_file_like_233281, 'write')
        # Calling write(args, kwargs) (line 616)
        write_call_result_233289 = invoke(stypy.reporting.localization.Localization(__file__, 616, 16), write_233282, *[getvalue_call_result_233287], **kwargs_233288)
        
        # SSA join for if statement (line 615)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to close(...): (line 617)
        # Processing the call keyword arguments (line 617)
        kwargs_233293 = {}
        # Getting the type of 'self' (line 617)
        self_233290 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 617, 12), 'self', False)
        # Obtaining the member 'fh' of a type (line 617)
        fh_233291 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 617, 12), self_233290, 'fh')
        # Obtaining the member 'close' of a type (line 617)
        close_233292 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 617, 12), fh_233291, 'close')
        # Calling close(args, kwargs) (line 617)
        close_call_result_233294 = invoke(stypy.reporting.localization.Localization(__file__, 617, 12), close_233292, *[], **kwargs_233293)
        
        # SSA join for if statement (line 612)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'close(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'close' in the type store
        # Getting the type of 'stypy_return_type' (line 608)
        stypy_return_type_233295 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 608, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_233295)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'close'
        return stypy_return_type_233295


    @norecursion
    def write(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'write'
        module_type_store = module_type_store.open_function_context('write', 619, 4, False)
        # Assigning a type to the variable 'self' (line 620)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 620, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        PdfFile.write.__dict__.__setitem__('stypy_localization', localization)
        PdfFile.write.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        PdfFile.write.__dict__.__setitem__('stypy_type_store', module_type_store)
        PdfFile.write.__dict__.__setitem__('stypy_function_name', 'PdfFile.write')
        PdfFile.write.__dict__.__setitem__('stypy_param_names_list', ['data'])
        PdfFile.write.__dict__.__setitem__('stypy_varargs_param_name', None)
        PdfFile.write.__dict__.__setitem__('stypy_kwargs_param_name', None)
        PdfFile.write.__dict__.__setitem__('stypy_call_defaults', defaults)
        PdfFile.write.__dict__.__setitem__('stypy_call_varargs', varargs)
        PdfFile.write.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        PdfFile.write.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'PdfFile.write', ['data'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'write', localization, ['data'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'write(...)' code ##################

        
        # Type idiom detected: calculating its left and rigth part (line 620)
        # Getting the type of 'self' (line 620)
        self_233296 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 620, 11), 'self')
        # Obtaining the member 'currentstream' of a type (line 620)
        currentstream_233297 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 620, 11), self_233296, 'currentstream')
        # Getting the type of 'None' (line 620)
        None_233298 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 620, 33), 'None')
        
        (may_be_233299, more_types_in_union_233300) = may_be_none(currentstream_233297, None_233298)

        if may_be_233299:

            if more_types_in_union_233300:
                # Runtime conditional SSA (line 620)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Call to write(...): (line 621)
            # Processing the call arguments (line 621)
            # Getting the type of 'data' (line 621)
            data_233304 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 621, 26), 'data', False)
            # Processing the call keyword arguments (line 621)
            kwargs_233305 = {}
            # Getting the type of 'self' (line 621)
            self_233301 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 621, 12), 'self', False)
            # Obtaining the member 'fh' of a type (line 621)
            fh_233302 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 621, 12), self_233301, 'fh')
            # Obtaining the member 'write' of a type (line 621)
            write_233303 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 621, 12), fh_233302, 'write')
            # Calling write(args, kwargs) (line 621)
            write_call_result_233306 = invoke(stypy.reporting.localization.Localization(__file__, 621, 12), write_233303, *[data_233304], **kwargs_233305)
            

            if more_types_in_union_233300:
                # Runtime conditional SSA for else branch (line 620)
                module_type_store.open_ssa_branch('idiom else')



        if ((not may_be_233299) or more_types_in_union_233300):
            
            # Call to write(...): (line 623)
            # Processing the call arguments (line 623)
            # Getting the type of 'data' (line 623)
            data_233310 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 623, 37), 'data', False)
            # Processing the call keyword arguments (line 623)
            kwargs_233311 = {}
            # Getting the type of 'self' (line 623)
            self_233307 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 623, 12), 'self', False)
            # Obtaining the member 'currentstream' of a type (line 623)
            currentstream_233308 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 623, 12), self_233307, 'currentstream')
            # Obtaining the member 'write' of a type (line 623)
            write_233309 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 623, 12), currentstream_233308, 'write')
            # Calling write(args, kwargs) (line 623)
            write_call_result_233312 = invoke(stypy.reporting.localization.Localization(__file__, 623, 12), write_233309, *[data_233310], **kwargs_233311)
            

            if (may_be_233299 and more_types_in_union_233300):
                # SSA join for if statement (line 620)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # ################# End of 'write(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'write' in the type store
        # Getting the type of 'stypy_return_type' (line 619)
        stypy_return_type_233313 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 619, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_233313)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'write'
        return stypy_return_type_233313


    @norecursion
    def output(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'output'
        module_type_store = module_type_store.open_function_context('output', 625, 4, False)
        # Assigning a type to the variable 'self' (line 626)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 626, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        PdfFile.output.__dict__.__setitem__('stypy_localization', localization)
        PdfFile.output.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        PdfFile.output.__dict__.__setitem__('stypy_type_store', module_type_store)
        PdfFile.output.__dict__.__setitem__('stypy_function_name', 'PdfFile.output')
        PdfFile.output.__dict__.__setitem__('stypy_param_names_list', [])
        PdfFile.output.__dict__.__setitem__('stypy_varargs_param_name', 'data')
        PdfFile.output.__dict__.__setitem__('stypy_kwargs_param_name', None)
        PdfFile.output.__dict__.__setitem__('stypy_call_defaults', defaults)
        PdfFile.output.__dict__.__setitem__('stypy_call_varargs', varargs)
        PdfFile.output.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        PdfFile.output.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'PdfFile.output', [], 'data', None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'output', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'output(...)' code ##################

        
        # Call to write(...): (line 626)
        # Processing the call arguments (line 626)
        
        # Call to fill(...): (line 626)
        # Processing the call arguments (line 626)
        # Calculating list comprehension
        # Calculating comprehension expression
        # Getting the type of 'data' (line 626)
        data_233321 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 626, 45), 'data', False)
        comprehension_233322 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 626, 25), data_233321)
        # Assigning a type to the variable 'x' (line 626)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 626, 25), 'x', comprehension_233322)
        
        # Call to pdfRepr(...): (line 626)
        # Processing the call arguments (line 626)
        # Getting the type of 'x' (line 626)
        x_233318 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 626, 33), 'x', False)
        # Processing the call keyword arguments (line 626)
        kwargs_233319 = {}
        # Getting the type of 'pdfRepr' (line 626)
        pdfRepr_233317 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 626, 25), 'pdfRepr', False)
        # Calling pdfRepr(args, kwargs) (line 626)
        pdfRepr_call_result_233320 = invoke(stypy.reporting.localization.Localization(__file__, 626, 25), pdfRepr_233317, *[x_233318], **kwargs_233319)
        
        list_233323 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 626, 25), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 626, 25), list_233323, pdfRepr_call_result_233320)
        # Processing the call keyword arguments (line 626)
        kwargs_233324 = {}
        # Getting the type of 'fill' (line 626)
        fill_233316 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 626, 19), 'fill', False)
        # Calling fill(args, kwargs) (line 626)
        fill_call_result_233325 = invoke(stypy.reporting.localization.Localization(__file__, 626, 19), fill_233316, *[list_233323], **kwargs_233324)
        
        # Processing the call keyword arguments (line 626)
        kwargs_233326 = {}
        # Getting the type of 'self' (line 626)
        self_233314 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 626, 8), 'self', False)
        # Obtaining the member 'write' of a type (line 626)
        write_233315 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 626, 8), self_233314, 'write')
        # Calling write(args, kwargs) (line 626)
        write_call_result_233327 = invoke(stypy.reporting.localization.Localization(__file__, 626, 8), write_233315, *[fill_call_result_233325], **kwargs_233326)
        
        
        # Call to write(...): (line 627)
        # Processing the call arguments (line 627)
        str_233330 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 627, 19), 'str', '\n')
        # Processing the call keyword arguments (line 627)
        kwargs_233331 = {}
        # Getting the type of 'self' (line 627)
        self_233328 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 627, 8), 'self', False)
        # Obtaining the member 'write' of a type (line 627)
        write_233329 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 627, 8), self_233328, 'write')
        # Calling write(args, kwargs) (line 627)
        write_call_result_233332 = invoke(stypy.reporting.localization.Localization(__file__, 627, 8), write_233329, *[str_233330], **kwargs_233331)
        
        
        # ################# End of 'output(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'output' in the type store
        # Getting the type of 'stypy_return_type' (line 625)
        stypy_return_type_233333 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 625, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_233333)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'output'
        return stypy_return_type_233333


    @norecursion
    def beginStream(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'None' (line 629)
        None_233334 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 629, 41), 'None')
        # Getting the type of 'None' (line 629)
        None_233335 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 629, 51), 'None')
        defaults = [None_233334, None_233335]
        # Create a new context for function 'beginStream'
        module_type_store = module_type_store.open_function_context('beginStream', 629, 4, False)
        # Assigning a type to the variable 'self' (line 630)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 630, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        PdfFile.beginStream.__dict__.__setitem__('stypy_localization', localization)
        PdfFile.beginStream.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        PdfFile.beginStream.__dict__.__setitem__('stypy_type_store', module_type_store)
        PdfFile.beginStream.__dict__.__setitem__('stypy_function_name', 'PdfFile.beginStream')
        PdfFile.beginStream.__dict__.__setitem__('stypy_param_names_list', ['id', 'len', 'extra', 'png'])
        PdfFile.beginStream.__dict__.__setitem__('stypy_varargs_param_name', None)
        PdfFile.beginStream.__dict__.__setitem__('stypy_kwargs_param_name', None)
        PdfFile.beginStream.__dict__.__setitem__('stypy_call_defaults', defaults)
        PdfFile.beginStream.__dict__.__setitem__('stypy_call_varargs', varargs)
        PdfFile.beginStream.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        PdfFile.beginStream.__dict__.__setitem__('stypy_declared_arg_number', 5)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'PdfFile.beginStream', ['id', 'len', 'extra', 'png'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'beginStream', localization, ['id', 'len', 'extra', 'png'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'beginStream(...)' code ##################

        # Evaluating assert statement condition
        
        # Getting the type of 'self' (line 630)
        self_233336 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 630, 15), 'self')
        # Obtaining the member 'currentstream' of a type (line 630)
        currentstream_233337 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 630, 15), self_233336, 'currentstream')
        # Getting the type of 'None' (line 630)
        None_233338 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 630, 37), 'None')
        # Applying the binary operator 'is' (line 630)
        result_is__233339 = python_operator(stypy.reporting.localization.Localization(__file__, 630, 15), 'is', currentstream_233337, None_233338)
        
        
        # Assigning a Call to a Attribute (line 631):
        
        # Assigning a Call to a Attribute (line 631):
        
        # Call to Stream(...): (line 631)
        # Processing the call arguments (line 631)
        # Getting the type of 'id' (line 631)
        id_233341 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 631, 36), 'id', False)
        # Getting the type of 'len' (line 631)
        len_233342 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 631, 40), 'len', False)
        # Getting the type of 'self' (line 631)
        self_233343 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 631, 45), 'self', False)
        # Getting the type of 'extra' (line 631)
        extra_233344 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 631, 51), 'extra', False)
        # Getting the type of 'png' (line 631)
        png_233345 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 631, 58), 'png', False)
        # Processing the call keyword arguments (line 631)
        kwargs_233346 = {}
        # Getting the type of 'Stream' (line 631)
        Stream_233340 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 631, 29), 'Stream', False)
        # Calling Stream(args, kwargs) (line 631)
        Stream_call_result_233347 = invoke(stypy.reporting.localization.Localization(__file__, 631, 29), Stream_233340, *[id_233341, len_233342, self_233343, extra_233344, png_233345], **kwargs_233346)
        
        # Getting the type of 'self' (line 631)
        self_233348 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 631, 8), 'self')
        # Setting the type of the member 'currentstream' of a type (line 631)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 631, 8), self_233348, 'currentstream', Stream_call_result_233347)
        
        # ################# End of 'beginStream(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'beginStream' in the type store
        # Getting the type of 'stypy_return_type' (line 629)
        stypy_return_type_233349 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 629, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_233349)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'beginStream'
        return stypy_return_type_233349


    @norecursion
    def endStream(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'endStream'
        module_type_store = module_type_store.open_function_context('endStream', 633, 4, False)
        # Assigning a type to the variable 'self' (line 634)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 634, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        PdfFile.endStream.__dict__.__setitem__('stypy_localization', localization)
        PdfFile.endStream.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        PdfFile.endStream.__dict__.__setitem__('stypy_type_store', module_type_store)
        PdfFile.endStream.__dict__.__setitem__('stypy_function_name', 'PdfFile.endStream')
        PdfFile.endStream.__dict__.__setitem__('stypy_param_names_list', [])
        PdfFile.endStream.__dict__.__setitem__('stypy_varargs_param_name', None)
        PdfFile.endStream.__dict__.__setitem__('stypy_kwargs_param_name', None)
        PdfFile.endStream.__dict__.__setitem__('stypy_call_defaults', defaults)
        PdfFile.endStream.__dict__.__setitem__('stypy_call_varargs', varargs)
        PdfFile.endStream.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        PdfFile.endStream.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'PdfFile.endStream', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'endStream', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'endStream(...)' code ##################

        
        
        # Getting the type of 'self' (line 634)
        self_233350 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 634, 11), 'self')
        # Obtaining the member 'currentstream' of a type (line 634)
        currentstream_233351 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 634, 11), self_233350, 'currentstream')
        # Getting the type of 'None' (line 634)
        None_233352 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 634, 37), 'None')
        # Applying the binary operator 'isnot' (line 634)
        result_is_not_233353 = python_operator(stypy.reporting.localization.Localization(__file__, 634, 11), 'isnot', currentstream_233351, None_233352)
        
        # Testing the type of an if condition (line 634)
        if_condition_233354 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 634, 8), result_is_not_233353)
        # Assigning a type to the variable 'if_condition_233354' (line 634)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 634, 8), 'if_condition_233354', if_condition_233354)
        # SSA begins for if statement (line 634)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to end(...): (line 635)
        # Processing the call keyword arguments (line 635)
        kwargs_233358 = {}
        # Getting the type of 'self' (line 635)
        self_233355 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 635, 12), 'self', False)
        # Obtaining the member 'currentstream' of a type (line 635)
        currentstream_233356 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 635, 12), self_233355, 'currentstream')
        # Obtaining the member 'end' of a type (line 635)
        end_233357 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 635, 12), currentstream_233356, 'end')
        # Calling end(args, kwargs) (line 635)
        end_call_result_233359 = invoke(stypy.reporting.localization.Localization(__file__, 635, 12), end_233357, *[], **kwargs_233358)
        
        
        # Assigning a Name to a Attribute (line 636):
        
        # Assigning a Name to a Attribute (line 636):
        # Getting the type of 'None' (line 636)
        None_233360 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 636, 33), 'None')
        # Getting the type of 'self' (line 636)
        self_233361 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 636, 12), 'self')
        # Setting the type of the member 'currentstream' of a type (line 636)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 636, 12), self_233361, 'currentstream', None_233360)
        # SSA join for if statement (line 634)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'endStream(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'endStream' in the type store
        # Getting the type of 'stypy_return_type' (line 633)
        stypy_return_type_233362 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 633, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_233362)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'endStream'
        return stypy_return_type_233362


    @norecursion
    def fontName(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'fontName'
        module_type_store = module_type_store.open_function_context('fontName', 638, 4, False)
        # Assigning a type to the variable 'self' (line 639)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 639, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        PdfFile.fontName.__dict__.__setitem__('stypy_localization', localization)
        PdfFile.fontName.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        PdfFile.fontName.__dict__.__setitem__('stypy_type_store', module_type_store)
        PdfFile.fontName.__dict__.__setitem__('stypy_function_name', 'PdfFile.fontName')
        PdfFile.fontName.__dict__.__setitem__('stypy_param_names_list', ['fontprop'])
        PdfFile.fontName.__dict__.__setitem__('stypy_varargs_param_name', None)
        PdfFile.fontName.__dict__.__setitem__('stypy_kwargs_param_name', None)
        PdfFile.fontName.__dict__.__setitem__('stypy_call_defaults', defaults)
        PdfFile.fontName.__dict__.__setitem__('stypy_call_varargs', varargs)
        PdfFile.fontName.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        PdfFile.fontName.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'PdfFile.fontName', ['fontprop'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'fontName', localization, ['fontprop'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'fontName(...)' code ##################

        unicode_233363 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 643, (-1)), 'unicode', u'\n        Select a font based on fontprop and return a name suitable for\n        Op.selectfont. If fontprop is a string, it will be interpreted\n        as the filename of the font.\n        ')
        
        
        # Call to isinstance(...): (line 645)
        # Processing the call arguments (line 645)
        # Getting the type of 'fontprop' (line 645)
        fontprop_233365 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 645, 22), 'fontprop', False)
        # Getting the type of 'six' (line 645)
        six_233366 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 645, 32), 'six', False)
        # Obtaining the member 'string_types' of a type (line 645)
        string_types_233367 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 645, 32), six_233366, 'string_types')
        # Processing the call keyword arguments (line 645)
        kwargs_233368 = {}
        # Getting the type of 'isinstance' (line 645)
        isinstance_233364 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 645, 11), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 645)
        isinstance_call_result_233369 = invoke(stypy.reporting.localization.Localization(__file__, 645, 11), isinstance_233364, *[fontprop_233365, string_types_233367], **kwargs_233368)
        
        # Testing the type of an if condition (line 645)
        if_condition_233370 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 645, 8), isinstance_call_result_233369)
        # Assigning a type to the variable 'if_condition_233370' (line 645)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 645, 8), 'if_condition_233370', if_condition_233370)
        # SSA begins for if statement (line 645)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Name to a Name (line 646):
        
        # Assigning a Name to a Name (line 646):
        # Getting the type of 'fontprop' (line 646)
        fontprop_233371 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 646, 23), 'fontprop')
        # Assigning a type to the variable 'filename' (line 646)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 646, 12), 'filename', fontprop_233371)
        # SSA branch for the else part of an if statement (line 645)
        module_type_store.open_ssa_branch('else')
        
        
        # Obtaining the type of the subscript
        unicode_233372 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 647, 22), 'unicode', u'pdf.use14corefonts')
        # Getting the type of 'rcParams' (line 647)
        rcParams_233373 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 647, 13), 'rcParams')
        # Obtaining the member '__getitem__' of a type (line 647)
        getitem___233374 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 647, 13), rcParams_233373, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 647)
        subscript_call_result_233375 = invoke(stypy.reporting.localization.Localization(__file__, 647, 13), getitem___233374, unicode_233372)
        
        # Testing the type of an if condition (line 647)
        if_condition_233376 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 647, 13), subscript_call_result_233375)
        # Assigning a type to the variable 'if_condition_233376' (line 647)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 647, 13), 'if_condition_233376', if_condition_233376)
        # SSA begins for if statement (line 647)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 648):
        
        # Assigning a Call to a Name (line 648):
        
        # Call to findfont(...): (line 648)
        # Processing the call arguments (line 648)
        # Getting the type of 'fontprop' (line 649)
        fontprop_233378 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 649, 16), 'fontprop', False)
        # Processing the call keyword arguments (line 648)
        unicode_233379 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 649, 34), 'unicode', u'afm')
        keyword_233380 = unicode_233379
        # Getting the type of 'self' (line 649)
        self_233381 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 649, 51), 'self', False)
        # Obtaining the member '_core14fontdir' of a type (line 649)
        _core14fontdir_233382 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 649, 51), self_233381, '_core14fontdir')
        keyword_233383 = _core14fontdir_233382
        kwargs_233384 = {'directory': keyword_233383, 'fontext': keyword_233380}
        # Getting the type of 'findfont' (line 648)
        findfont_233377 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 648, 23), 'findfont', False)
        # Calling findfont(args, kwargs) (line 648)
        findfont_call_result_233385 = invoke(stypy.reporting.localization.Localization(__file__, 648, 23), findfont_233377, *[fontprop_233378], **kwargs_233384)
        
        # Assigning a type to the variable 'filename' (line 648)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 648, 12), 'filename', findfont_call_result_233385)
        
        # Type idiom detected: calculating its left and rigth part (line 650)
        # Getting the type of 'filename' (line 650)
        filename_233386 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 650, 15), 'filename')
        # Getting the type of 'None' (line 650)
        None_233387 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 650, 27), 'None')
        
        (may_be_233388, more_types_in_union_233389) = may_be_none(filename_233386, None_233387)

        if may_be_233388:

            if more_types_in_union_233389:
                # Runtime conditional SSA (line 650)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Call to a Name (line 651):
            
            # Assigning a Call to a Name (line 651):
            
            # Call to findfont(...): (line 651)
            # Processing the call arguments (line 651)
            unicode_233391 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 652, 20), 'unicode', u'Helvetica')
            # Processing the call keyword arguments (line 651)
            unicode_233392 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 652, 41), 'unicode', u'afm')
            keyword_233393 = unicode_233392
            # Getting the type of 'self' (line 652)
            self_233394 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 652, 58), 'self', False)
            # Obtaining the member '_core14fontdir' of a type (line 652)
            _core14fontdir_233395 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 652, 58), self_233394, '_core14fontdir')
            keyword_233396 = _core14fontdir_233395
            kwargs_233397 = {'directory': keyword_233396, 'fontext': keyword_233393}
            # Getting the type of 'findfont' (line 651)
            findfont_233390 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 651, 27), 'findfont', False)
            # Calling findfont(args, kwargs) (line 651)
            findfont_call_result_233398 = invoke(stypy.reporting.localization.Localization(__file__, 651, 27), findfont_233390, *[unicode_233391], **kwargs_233397)
            
            # Assigning a type to the variable 'filename' (line 651)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 651, 16), 'filename', findfont_call_result_233398)

            if more_types_in_union_233389:
                # SSA join for if statement (line 650)
                module_type_store = module_type_store.join_ssa_context()


        
        # SSA branch for the else part of an if statement (line 647)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Call to a Name (line 654):
        
        # Assigning a Call to a Name (line 654):
        
        # Call to findfont(...): (line 654)
        # Processing the call arguments (line 654)
        # Getting the type of 'fontprop' (line 654)
        fontprop_233400 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 654, 32), 'fontprop', False)
        # Processing the call keyword arguments (line 654)
        kwargs_233401 = {}
        # Getting the type of 'findfont' (line 654)
        findfont_233399 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 654, 23), 'findfont', False)
        # Calling findfont(args, kwargs) (line 654)
        findfont_call_result_233402 = invoke(stypy.reporting.localization.Localization(__file__, 654, 23), findfont_233399, *[fontprop_233400], **kwargs_233401)
        
        # Assigning a type to the variable 'filename' (line 654)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 654, 12), 'filename', findfont_call_result_233402)
        # SSA join for if statement (line 647)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 645)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 656):
        
        # Assigning a Call to a Name (line 656):
        
        # Call to get(...): (line 656)
        # Processing the call arguments (line 656)
        # Getting the type of 'filename' (line 656)
        filename_233406 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 656, 32), 'filename', False)
        # Processing the call keyword arguments (line 656)
        kwargs_233407 = {}
        # Getting the type of 'self' (line 656)
        self_233403 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 656, 13), 'self', False)
        # Obtaining the member 'fontNames' of a type (line 656)
        fontNames_233404 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 656, 13), self_233403, 'fontNames')
        # Obtaining the member 'get' of a type (line 656)
        get_233405 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 656, 13), fontNames_233404, 'get')
        # Calling get(args, kwargs) (line 656)
        get_call_result_233408 = invoke(stypy.reporting.localization.Localization(__file__, 656, 13), get_233405, *[filename_233406], **kwargs_233407)
        
        # Assigning a type to the variable 'Fx' (line 656)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 656, 8), 'Fx', get_call_result_233408)
        
        # Type idiom detected: calculating its left and rigth part (line 657)
        # Getting the type of 'Fx' (line 657)
        Fx_233409 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 657, 11), 'Fx')
        # Getting the type of 'None' (line 657)
        None_233410 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 657, 17), 'None')
        
        (may_be_233411, more_types_in_union_233412) = may_be_none(Fx_233409, None_233410)

        if may_be_233411:

            if more_types_in_union_233412:
                # Runtime conditional SSA (line 657)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Call to a Name (line 658):
            
            # Assigning a Call to a Name (line 658):
            
            # Call to Name(...): (line 658)
            # Processing the call arguments (line 658)
            unicode_233414 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 658, 22), 'unicode', u'F%d')
            # Getting the type of 'self' (line 658)
            self_233415 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 658, 30), 'self', False)
            # Obtaining the member 'nextFont' of a type (line 658)
            nextFont_233416 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 658, 30), self_233415, 'nextFont')
            # Applying the binary operator '%' (line 658)
            result_mod_233417 = python_operator(stypy.reporting.localization.Localization(__file__, 658, 22), '%', unicode_233414, nextFont_233416)
            
            # Processing the call keyword arguments (line 658)
            kwargs_233418 = {}
            # Getting the type of 'Name' (line 658)
            Name_233413 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 658, 17), 'Name', False)
            # Calling Name(args, kwargs) (line 658)
            Name_call_result_233419 = invoke(stypy.reporting.localization.Localization(__file__, 658, 17), Name_233413, *[result_mod_233417], **kwargs_233418)
            
            # Assigning a type to the variable 'Fx' (line 658)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 658, 12), 'Fx', Name_call_result_233419)
            
            # Assigning a Name to a Subscript (line 659):
            
            # Assigning a Name to a Subscript (line 659):
            # Getting the type of 'Fx' (line 659)
            Fx_233420 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 659, 39), 'Fx')
            # Getting the type of 'self' (line 659)
            self_233421 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 659, 12), 'self')
            # Obtaining the member 'fontNames' of a type (line 659)
            fontNames_233422 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 659, 12), self_233421, 'fontNames')
            # Getting the type of 'filename' (line 659)
            filename_233423 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 659, 27), 'filename')
            # Storing an element on a container (line 659)
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 659, 12), fontNames_233422, (filename_233423, Fx_233420))
            
            # Getting the type of 'self' (line 660)
            self_233424 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 660, 12), 'self')
            # Obtaining the member 'nextFont' of a type (line 660)
            nextFont_233425 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 660, 12), self_233424, 'nextFont')
            int_233426 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 660, 29), 'int')
            # Applying the binary operator '+=' (line 660)
            result_iadd_233427 = python_operator(stypy.reporting.localization.Localization(__file__, 660, 12), '+=', nextFont_233425, int_233426)
            # Getting the type of 'self' (line 660)
            self_233428 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 660, 12), 'self')
            # Setting the type of the member 'nextFont' of a type (line 660)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 660, 12), self_233428, 'nextFont', result_iadd_233427)
            
            
            # Call to report(...): (line 661)
            # Processing the call arguments (line 661)
            unicode_233432 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 662, 16), 'unicode', u'Assigning font %s = %r')
            
            # Obtaining an instance of the builtin type 'tuple' (line 662)
            tuple_233433 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 662, 44), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 662)
            # Adding element type (line 662)
            # Getting the type of 'Fx' (line 662)
            Fx_233434 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 662, 44), 'Fx', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 662, 44), tuple_233433, Fx_233434)
            # Adding element type (line 662)
            # Getting the type of 'filename' (line 662)
            filename_233435 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 662, 48), 'filename', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 662, 44), tuple_233433, filename_233435)
            
            # Applying the binary operator '%' (line 662)
            result_mod_233436 = python_operator(stypy.reporting.localization.Localization(__file__, 662, 16), '%', unicode_233432, tuple_233433)
            
            unicode_233437 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 663, 16), 'unicode', u'debug')
            # Processing the call keyword arguments (line 661)
            kwargs_233438 = {}
            # Getting the type of 'matplotlib' (line 661)
            matplotlib_233429 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 661, 12), 'matplotlib', False)
            # Obtaining the member 'verbose' of a type (line 661)
            verbose_233430 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 661, 12), matplotlib_233429, 'verbose')
            # Obtaining the member 'report' of a type (line 661)
            report_233431 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 661, 12), verbose_233430, 'report')
            # Calling report(args, kwargs) (line 661)
            report_call_result_233439 = invoke(stypy.reporting.localization.Localization(__file__, 661, 12), report_233431, *[result_mod_233436, unicode_233437], **kwargs_233438)
            

            if more_types_in_union_233412:
                # SSA join for if statement (line 657)
                module_type_store = module_type_store.join_ssa_context()


        
        # Getting the type of 'Fx' (line 665)
        Fx_233440 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 665, 15), 'Fx')
        # Assigning a type to the variable 'stypy_return_type' (line 665)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 665, 8), 'stypy_return_type', Fx_233440)
        
        # ################# End of 'fontName(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'fontName' in the type store
        # Getting the type of 'stypy_return_type' (line 638)
        stypy_return_type_233441 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 638, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_233441)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'fontName'
        return stypy_return_type_233441


    @norecursion
    def texFontMap(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'texFontMap'
        module_type_store = module_type_store.open_function_context('texFontMap', 667, 4, False)
        # Assigning a type to the variable 'self' (line 668)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 668, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        PdfFile.texFontMap.__dict__.__setitem__('stypy_localization', localization)
        PdfFile.texFontMap.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        PdfFile.texFontMap.__dict__.__setitem__('stypy_type_store', module_type_store)
        PdfFile.texFontMap.__dict__.__setitem__('stypy_function_name', 'PdfFile.texFontMap')
        PdfFile.texFontMap.__dict__.__setitem__('stypy_param_names_list', [])
        PdfFile.texFontMap.__dict__.__setitem__('stypy_varargs_param_name', None)
        PdfFile.texFontMap.__dict__.__setitem__('stypy_kwargs_param_name', None)
        PdfFile.texFontMap.__dict__.__setitem__('stypy_call_defaults', defaults)
        PdfFile.texFontMap.__dict__.__setitem__('stypy_call_varargs', varargs)
        PdfFile.texFontMap.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        PdfFile.texFontMap.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'PdfFile.texFontMap', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'texFontMap', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'texFontMap(...)' code ##################

        
        # Type idiom detected: calculating its left and rigth part (line 671)
        # Getting the type of 'self' (line 671)
        self_233442 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 671, 11), 'self')
        # Obtaining the member '_texFontMap' of a type (line 671)
        _texFontMap_233443 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 671, 11), self_233442, '_texFontMap')
        # Getting the type of 'None' (line 671)
        None_233444 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 671, 31), 'None')
        
        (may_be_233445, more_types_in_union_233446) = may_be_none(_texFontMap_233443, None_233444)

        if may_be_233445:

            if more_types_in_union_233446:
                # Runtime conditional SSA (line 671)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Call to a Attribute (line 672):
            
            # Assigning a Call to a Attribute (line 672):
            
            # Call to PsfontsMap(...): (line 672)
            # Processing the call arguments (line 672)
            
            # Call to find_tex_file(...): (line 673)
            # Processing the call arguments (line 673)
            unicode_233451 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 673, 38), 'unicode', u'pdftex.map')
            # Processing the call keyword arguments (line 673)
            kwargs_233452 = {}
            # Getting the type of 'dviread' (line 673)
            dviread_233449 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 673, 16), 'dviread', False)
            # Obtaining the member 'find_tex_file' of a type (line 673)
            find_tex_file_233450 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 673, 16), dviread_233449, 'find_tex_file')
            # Calling find_tex_file(args, kwargs) (line 673)
            find_tex_file_call_result_233453 = invoke(stypy.reporting.localization.Localization(__file__, 673, 16), find_tex_file_233450, *[unicode_233451], **kwargs_233452)
            
            # Processing the call keyword arguments (line 672)
            kwargs_233454 = {}
            # Getting the type of 'dviread' (line 672)
            dviread_233447 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 672, 31), 'dviread', False)
            # Obtaining the member 'PsfontsMap' of a type (line 672)
            PsfontsMap_233448 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 672, 31), dviread_233447, 'PsfontsMap')
            # Calling PsfontsMap(args, kwargs) (line 672)
            PsfontsMap_call_result_233455 = invoke(stypy.reporting.localization.Localization(__file__, 672, 31), PsfontsMap_233448, *[find_tex_file_call_result_233453], **kwargs_233454)
            
            # Getting the type of 'self' (line 672)
            self_233456 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 672, 12), 'self')
            # Setting the type of the member '_texFontMap' of a type (line 672)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 672, 12), self_233456, '_texFontMap', PsfontsMap_call_result_233455)

            if more_types_in_union_233446:
                # SSA join for if statement (line 671)
                module_type_store = module_type_store.join_ssa_context()


        
        # Getting the type of 'self' (line 675)
        self_233457 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 675, 15), 'self')
        # Obtaining the member '_texFontMap' of a type (line 675)
        _texFontMap_233458 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 675, 15), self_233457, '_texFontMap')
        # Assigning a type to the variable 'stypy_return_type' (line 675)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 675, 8), 'stypy_return_type', _texFontMap_233458)
        
        # ################# End of 'texFontMap(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'texFontMap' in the type store
        # Getting the type of 'stypy_return_type' (line 667)
        stypy_return_type_233459 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 667, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_233459)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'texFontMap'
        return stypy_return_type_233459


    @norecursion
    def dviFontName(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'dviFontName'
        module_type_store = module_type_store.open_function_context('dviFontName', 677, 4, False)
        # Assigning a type to the variable 'self' (line 678)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 678, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        PdfFile.dviFontName.__dict__.__setitem__('stypy_localization', localization)
        PdfFile.dviFontName.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        PdfFile.dviFontName.__dict__.__setitem__('stypy_type_store', module_type_store)
        PdfFile.dviFontName.__dict__.__setitem__('stypy_function_name', 'PdfFile.dviFontName')
        PdfFile.dviFontName.__dict__.__setitem__('stypy_param_names_list', ['dvifont'])
        PdfFile.dviFontName.__dict__.__setitem__('stypy_varargs_param_name', None)
        PdfFile.dviFontName.__dict__.__setitem__('stypy_kwargs_param_name', None)
        PdfFile.dviFontName.__dict__.__setitem__('stypy_call_defaults', defaults)
        PdfFile.dviFontName.__dict__.__setitem__('stypy_call_varargs', varargs)
        PdfFile.dviFontName.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        PdfFile.dviFontName.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'PdfFile.dviFontName', ['dvifont'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'dviFontName', localization, ['dvifont'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'dviFontName(...)' code ##################

        unicode_233460 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 682, (-1)), 'unicode', u'\n        Given a dvi font object, return a name suitable for Op.selectfont.\n        This registers the font information in self.dviFontInfo if not yet\n        registered.\n        ')
        
        # Assigning a Call to a Name (line 684):
        
        # Assigning a Call to a Name (line 684):
        
        # Call to get(...): (line 684)
        # Processing the call arguments (line 684)
        # Getting the type of 'dvifont' (line 684)
        dvifont_233464 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 684, 40), 'dvifont', False)
        # Obtaining the member 'texname' of a type (line 684)
        texname_233465 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 684, 40), dvifont_233464, 'texname')
        # Processing the call keyword arguments (line 684)
        kwargs_233466 = {}
        # Getting the type of 'self' (line 684)
        self_233461 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 684, 19), 'self', False)
        # Obtaining the member 'dviFontInfo' of a type (line 684)
        dviFontInfo_233462 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 684, 19), self_233461, 'dviFontInfo')
        # Obtaining the member 'get' of a type (line 684)
        get_233463 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 684, 19), dviFontInfo_233462, 'get')
        # Calling get(args, kwargs) (line 684)
        get_call_result_233467 = invoke(stypy.reporting.localization.Localization(__file__, 684, 19), get_233463, *[texname_233465], **kwargs_233466)
        
        # Assigning a type to the variable 'dvi_info' (line 684)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 684, 8), 'dvi_info', get_call_result_233467)
        
        # Type idiom detected: calculating its left and rigth part (line 685)
        # Getting the type of 'dvi_info' (line 685)
        dvi_info_233468 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 685, 8), 'dvi_info')
        # Getting the type of 'None' (line 685)
        None_233469 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 685, 27), 'None')
        
        (may_be_233470, more_types_in_union_233471) = may_not_be_none(dvi_info_233468, None_233469)

        if may_be_233470:

            if more_types_in_union_233471:
                # Runtime conditional SSA (line 685)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            # Getting the type of 'dvi_info' (line 686)
            dvi_info_233472 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 686, 19), 'dvi_info')
            # Obtaining the member 'pdfname' of a type (line 686)
            pdfname_233473 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 686, 19), dvi_info_233472, 'pdfname')
            # Assigning a type to the variable 'stypy_return_type' (line 686)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 686, 12), 'stypy_return_type', pdfname_233473)

            if more_types_in_union_233471:
                # SSA join for if statement (line 685)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Subscript to a Name (line 688):
        
        # Assigning a Subscript to a Name (line 688):
        
        # Obtaining the type of the subscript
        # Getting the type of 'dvifont' (line 688)
        dvifont_233474 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 688, 33), 'dvifont')
        # Obtaining the member 'texname' of a type (line 688)
        texname_233475 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 688, 33), dvifont_233474, 'texname')
        # Getting the type of 'self' (line 688)
        self_233476 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 688, 17), 'self')
        # Obtaining the member 'texFontMap' of a type (line 688)
        texFontMap_233477 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 688, 17), self_233476, 'texFontMap')
        # Obtaining the member '__getitem__' of a type (line 688)
        getitem___233478 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 688, 17), texFontMap_233477, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 688)
        subscript_call_result_233479 = invoke(stypy.reporting.localization.Localization(__file__, 688, 17), getitem___233478, texname_233475)
        
        # Assigning a type to the variable 'psfont' (line 688)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 688, 8), 'psfont', subscript_call_result_233479)
        
        # Type idiom detected: calculating its left and rigth part (line 689)
        # Getting the type of 'psfont' (line 689)
        psfont_233480 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 689, 11), 'psfont')
        # Obtaining the member 'filename' of a type (line 689)
        filename_233481 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 689, 11), psfont_233480, 'filename')
        # Getting the type of 'None' (line 689)
        None_233482 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 689, 30), 'None')
        
        (may_be_233483, more_types_in_union_233484) = may_be_none(filename_233481, None_233482)

        if may_be_233483:

            if more_types_in_union_233484:
                # Runtime conditional SSA (line 689)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Call to ValueError(...): (line 690)
            # Processing the call arguments (line 690)
            
            # Call to format(...): (line 691)
            # Processing the call arguments (line 691)
            # Getting the type of 'psfont' (line 693)
            psfont_233488 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 693, 24), 'psfont', False)
            # Obtaining the member 'psname' of a type (line 693)
            psname_233489 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 693, 24), psfont_233488, 'psname')
            # Getting the type of 'dvifont' (line 693)
            dvifont_233490 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 693, 39), 'dvifont', False)
            # Obtaining the member 'texname' of a type (line 693)
            texname_233491 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 693, 39), dvifont_233490, 'texname')
            # Processing the call keyword arguments (line 691)
            kwargs_233492 = {}
            unicode_233486 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 691, 17), 'unicode', u'No usable font file found for {0} (TeX: {1}). The font may lack a Type-1 version.')
            # Obtaining the member 'format' of a type (line 691)
            format_233487 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 691, 17), unicode_233486, 'format')
            # Calling format(args, kwargs) (line 691)
            format_call_result_233493 = invoke(stypy.reporting.localization.Localization(__file__, 691, 17), format_233487, *[psname_233489, texname_233491], **kwargs_233492)
            
            # Processing the call keyword arguments (line 690)
            kwargs_233494 = {}
            # Getting the type of 'ValueError' (line 690)
            ValueError_233485 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 690, 18), 'ValueError', False)
            # Calling ValueError(args, kwargs) (line 690)
            ValueError_call_result_233495 = invoke(stypy.reporting.localization.Localization(__file__, 690, 18), ValueError_233485, *[format_call_result_233493], **kwargs_233494)
            
            ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 690, 12), ValueError_call_result_233495, 'raise parameter', BaseException)

            if more_types_in_union_233484:
                # SSA join for if statement (line 689)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Call to a Name (line 695):
        
        # Assigning a Call to a Name (line 695):
        
        # Call to Name(...): (line 695)
        # Processing the call arguments (line 695)
        unicode_233497 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 695, 23), 'unicode', u'F%d')
        # Getting the type of 'self' (line 695)
        self_233498 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 695, 31), 'self', False)
        # Obtaining the member 'nextFont' of a type (line 695)
        nextFont_233499 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 695, 31), self_233498, 'nextFont')
        # Applying the binary operator '%' (line 695)
        result_mod_233500 = python_operator(stypy.reporting.localization.Localization(__file__, 695, 23), '%', unicode_233497, nextFont_233499)
        
        # Processing the call keyword arguments (line 695)
        kwargs_233501 = {}
        # Getting the type of 'Name' (line 695)
        Name_233496 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 695, 18), 'Name', False)
        # Calling Name(args, kwargs) (line 695)
        Name_call_result_233502 = invoke(stypy.reporting.localization.Localization(__file__, 695, 18), Name_233496, *[result_mod_233500], **kwargs_233501)
        
        # Assigning a type to the variable 'pdfname' (line 695)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 695, 8), 'pdfname', Name_call_result_233502)
        
        # Getting the type of 'self' (line 696)
        self_233503 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 696, 8), 'self')
        # Obtaining the member 'nextFont' of a type (line 696)
        nextFont_233504 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 696, 8), self_233503, 'nextFont')
        int_233505 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 696, 25), 'int')
        # Applying the binary operator '+=' (line 696)
        result_iadd_233506 = python_operator(stypy.reporting.localization.Localization(__file__, 696, 8), '+=', nextFont_233504, int_233505)
        # Getting the type of 'self' (line 696)
        self_233507 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 696, 8), 'self')
        # Setting the type of the member 'nextFont' of a type (line 696)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 696, 8), self_233507, 'nextFont', result_iadd_233506)
        
        
        # Call to report(...): (line 697)
        # Processing the call arguments (line 697)
        
        # Call to format(...): (line 698)
        # Processing the call arguments (line 698)
        # Getting the type of 'pdfname' (line 698)
        pdfname_233513 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 698, 52), 'pdfname', False)
        # Getting the type of 'dvifont' (line 698)
        dvifont_233514 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 698, 61), 'dvifont', False)
        # Obtaining the member 'texname' of a type (line 698)
        texname_233515 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 698, 61), dvifont_233514, 'texname')
        # Processing the call keyword arguments (line 698)
        kwargs_233516 = {}
        unicode_233511 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 698, 12), 'unicode', u'Assigning font {0} = {1} (dvi)')
        # Obtaining the member 'format' of a type (line 698)
        format_233512 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 698, 12), unicode_233511, 'format')
        # Calling format(args, kwargs) (line 698)
        format_call_result_233517 = invoke(stypy.reporting.localization.Localization(__file__, 698, 12), format_233512, *[pdfname_233513, texname_233515], **kwargs_233516)
        
        unicode_233518 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 699, 12), 'unicode', u'debug')
        # Processing the call keyword arguments (line 697)
        kwargs_233519 = {}
        # Getting the type of 'matplotlib' (line 697)
        matplotlib_233508 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 697, 8), 'matplotlib', False)
        # Obtaining the member 'verbose' of a type (line 697)
        verbose_233509 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 697, 8), matplotlib_233508, 'verbose')
        # Obtaining the member 'report' of a type (line 697)
        report_233510 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 697, 8), verbose_233509, 'report')
        # Calling report(args, kwargs) (line 697)
        report_call_result_233520 = invoke(stypy.reporting.localization.Localization(__file__, 697, 8), report_233510, *[format_call_result_233517, unicode_233518], **kwargs_233519)
        
        
        # Assigning a Call to a Subscript (line 700):
        
        # Assigning a Call to a Subscript (line 700):
        
        # Call to Bunch(...): (line 700)
        # Processing the call keyword arguments (line 700)
        # Getting the type of 'dvifont' (line 701)
        dvifont_233522 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 701, 20), 'dvifont', False)
        keyword_233523 = dvifont_233522
        # Getting the type of 'pdfname' (line 702)
        pdfname_233524 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 702, 20), 'pdfname', False)
        keyword_233525 = pdfname_233524
        # Getting the type of 'psfont' (line 703)
        psfont_233526 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 703, 21), 'psfont', False)
        # Obtaining the member 'filename' of a type (line 703)
        filename_233527 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 703, 21), psfont_233526, 'filename')
        keyword_233528 = filename_233527
        # Getting the type of 'psfont' (line 704)
        psfont_233529 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 704, 21), 'psfont', False)
        # Obtaining the member 'psname' of a type (line 704)
        psname_233530 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 704, 21), psfont_233529, 'psname')
        keyword_233531 = psname_233530
        # Getting the type of 'psfont' (line 705)
        psfont_233532 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 705, 25), 'psfont', False)
        # Obtaining the member 'encoding' of a type (line 705)
        encoding_233533 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 705, 25), psfont_233532, 'encoding')
        keyword_233534 = encoding_233533
        # Getting the type of 'psfont' (line 706)
        psfont_233535 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 706, 20), 'psfont', False)
        # Obtaining the member 'effects' of a type (line 706)
        effects_233536 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 706, 20), psfont_233535, 'effects')
        keyword_233537 = effects_233536
        kwargs_233538 = {'fontfile': keyword_233528, 'pdfname': keyword_233525, 'basefont': keyword_233531, 'encodingfile': keyword_233534, 'dvifont': keyword_233523, 'effects': keyword_233537}
        # Getting the type of 'Bunch' (line 700)
        Bunch_233521 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 700, 44), 'Bunch', False)
        # Calling Bunch(args, kwargs) (line 700)
        Bunch_call_result_233539 = invoke(stypy.reporting.localization.Localization(__file__, 700, 44), Bunch_233521, *[], **kwargs_233538)
        
        # Getting the type of 'self' (line 700)
        self_233540 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 700, 8), 'self')
        # Obtaining the member 'dviFontInfo' of a type (line 700)
        dviFontInfo_233541 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 700, 8), self_233540, 'dviFontInfo')
        # Getting the type of 'dvifont' (line 700)
        dvifont_233542 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 700, 25), 'dvifont')
        # Obtaining the member 'texname' of a type (line 700)
        texname_233543 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 700, 25), dvifont_233542, 'texname')
        # Storing an element on a container (line 700)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 700, 8), dviFontInfo_233541, (texname_233543, Bunch_call_result_233539))
        # Getting the type of 'pdfname' (line 707)
        pdfname_233544 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 707, 15), 'pdfname')
        # Assigning a type to the variable 'stypy_return_type' (line 707)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 707, 8), 'stypy_return_type', pdfname_233544)
        
        # ################# End of 'dviFontName(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'dviFontName' in the type store
        # Getting the type of 'stypy_return_type' (line 677)
        stypy_return_type_233545 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 677, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_233545)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'dviFontName'
        return stypy_return_type_233545


    @norecursion
    def writeFonts(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'writeFonts'
        module_type_store = module_type_store.open_function_context('writeFonts', 709, 4, False)
        # Assigning a type to the variable 'self' (line 710)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 710, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        PdfFile.writeFonts.__dict__.__setitem__('stypy_localization', localization)
        PdfFile.writeFonts.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        PdfFile.writeFonts.__dict__.__setitem__('stypy_type_store', module_type_store)
        PdfFile.writeFonts.__dict__.__setitem__('stypy_function_name', 'PdfFile.writeFonts')
        PdfFile.writeFonts.__dict__.__setitem__('stypy_param_names_list', [])
        PdfFile.writeFonts.__dict__.__setitem__('stypy_varargs_param_name', None)
        PdfFile.writeFonts.__dict__.__setitem__('stypy_kwargs_param_name', None)
        PdfFile.writeFonts.__dict__.__setitem__('stypy_call_defaults', defaults)
        PdfFile.writeFonts.__dict__.__setitem__('stypy_call_varargs', varargs)
        PdfFile.writeFonts.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        PdfFile.writeFonts.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'PdfFile.writeFonts', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'writeFonts', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'writeFonts(...)' code ##################

        
        # Assigning a Dict to a Name (line 710):
        
        # Assigning a Dict to a Name (line 710):
        
        # Obtaining an instance of the builtin type 'dict' (line 710)
        dict_233546 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 710, 16), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 710)
        
        # Assigning a type to the variable 'fonts' (line 710)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 710, 8), 'fonts', dict_233546)
        
        
        # Call to sorted(...): (line 711)
        # Processing the call arguments (line 711)
        
        # Call to items(...): (line 711)
        # Processing the call keyword arguments (line 711)
        kwargs_233551 = {}
        # Getting the type of 'self' (line 711)
        self_233548 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 711, 36), 'self', False)
        # Obtaining the member 'dviFontInfo' of a type (line 711)
        dviFontInfo_233549 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 711, 36), self_233548, 'dviFontInfo')
        # Obtaining the member 'items' of a type (line 711)
        items_233550 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 711, 36), dviFontInfo_233549, 'items')
        # Calling items(args, kwargs) (line 711)
        items_call_result_233552 = invoke(stypy.reporting.localization.Localization(__file__, 711, 36), items_233550, *[], **kwargs_233551)
        
        # Processing the call keyword arguments (line 711)
        kwargs_233553 = {}
        # Getting the type of 'sorted' (line 711)
        sorted_233547 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 711, 29), 'sorted', False)
        # Calling sorted(args, kwargs) (line 711)
        sorted_call_result_233554 = invoke(stypy.reporting.localization.Localization(__file__, 711, 29), sorted_233547, *[items_call_result_233552], **kwargs_233553)
        
        # Testing the type of a for loop iterable (line 711)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 711, 8), sorted_call_result_233554)
        # Getting the type of the for loop variable (line 711)
        for_loop_var_233555 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 711, 8), sorted_call_result_233554)
        # Assigning a type to the variable 'dviname' (line 711)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 711, 8), 'dviname', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 711, 8), for_loop_var_233555))
        # Assigning a type to the variable 'info' (line 711)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 711, 8), 'info', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 711, 8), for_loop_var_233555))
        # SSA begins for a for statement (line 711)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Attribute to a Name (line 712):
        
        # Assigning a Attribute to a Name (line 712):
        # Getting the type of 'info' (line 712)
        info_233556 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 712, 17), 'info')
        # Obtaining the member 'pdfname' of a type (line 712)
        pdfname_233557 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 712, 17), info_233556, 'pdfname')
        # Assigning a type to the variable 'Fx' (line 712)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 712, 12), 'Fx', pdfname_233557)
        
        # Call to report(...): (line 713)
        # Processing the call arguments (line 713)
        unicode_233561 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 713, 38), 'unicode', u'Embedding Type-1 font %s from dvi')
        # Getting the type of 'dviname' (line 714)
        dviname_233562 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 714, 40), 'dviname', False)
        # Applying the binary operator '%' (line 713)
        result_mod_233563 = python_operator(stypy.reporting.localization.Localization(__file__, 713, 38), '%', unicode_233561, dviname_233562)
        
        unicode_233564 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 714, 49), 'unicode', u'debug')
        # Processing the call keyword arguments (line 713)
        kwargs_233565 = {}
        # Getting the type of 'matplotlib' (line 713)
        matplotlib_233558 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 713, 12), 'matplotlib', False)
        # Obtaining the member 'verbose' of a type (line 713)
        verbose_233559 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 713, 12), matplotlib_233558, 'verbose')
        # Obtaining the member 'report' of a type (line 713)
        report_233560 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 713, 12), verbose_233559, 'report')
        # Calling report(args, kwargs) (line 713)
        report_call_result_233566 = invoke(stypy.reporting.localization.Localization(__file__, 713, 12), report_233560, *[result_mod_233563, unicode_233564], **kwargs_233565)
        
        
        # Assigning a Call to a Subscript (line 715):
        
        # Assigning a Call to a Subscript (line 715):
        
        # Call to _embedTeXFont(...): (line 715)
        # Processing the call arguments (line 715)
        # Getting the type of 'info' (line 715)
        info_233569 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 715, 43), 'info', False)
        # Processing the call keyword arguments (line 715)
        kwargs_233570 = {}
        # Getting the type of 'self' (line 715)
        self_233567 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 715, 24), 'self', False)
        # Obtaining the member '_embedTeXFont' of a type (line 715)
        _embedTeXFont_233568 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 715, 24), self_233567, '_embedTeXFont')
        # Calling _embedTeXFont(args, kwargs) (line 715)
        _embedTeXFont_call_result_233571 = invoke(stypy.reporting.localization.Localization(__file__, 715, 24), _embedTeXFont_233568, *[info_233569], **kwargs_233570)
        
        # Getting the type of 'fonts' (line 715)
        fonts_233572 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 715, 12), 'fonts')
        # Getting the type of 'Fx' (line 715)
        Fx_233573 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 715, 18), 'Fx')
        # Storing an element on a container (line 715)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 715, 12), fonts_233572, (Fx_233573, _embedTeXFont_call_result_233571))
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Call to sorted(...): (line 716)
        # Processing the call arguments (line 716)
        # Getting the type of 'self' (line 716)
        self_233575 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 716, 31), 'self', False)
        # Obtaining the member 'fontNames' of a type (line 716)
        fontNames_233576 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 716, 31), self_233575, 'fontNames')
        # Processing the call keyword arguments (line 716)
        kwargs_233577 = {}
        # Getting the type of 'sorted' (line 716)
        sorted_233574 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 716, 24), 'sorted', False)
        # Calling sorted(args, kwargs) (line 716)
        sorted_call_result_233578 = invoke(stypy.reporting.localization.Localization(__file__, 716, 24), sorted_233574, *[fontNames_233576], **kwargs_233577)
        
        # Testing the type of a for loop iterable (line 716)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 716, 8), sorted_call_result_233578)
        # Getting the type of the for loop variable (line 716)
        for_loop_var_233579 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 716, 8), sorted_call_result_233578)
        # Assigning a type to the variable 'filename' (line 716)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 716, 8), 'filename', for_loop_var_233579)
        # SSA begins for a for statement (line 716)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Subscript to a Name (line 717):
        
        # Assigning a Subscript to a Name (line 717):
        
        # Obtaining the type of the subscript
        # Getting the type of 'filename' (line 717)
        filename_233580 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 717, 32), 'filename')
        # Getting the type of 'self' (line 717)
        self_233581 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 717, 17), 'self')
        # Obtaining the member 'fontNames' of a type (line 717)
        fontNames_233582 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 717, 17), self_233581, 'fontNames')
        # Obtaining the member '__getitem__' of a type (line 717)
        getitem___233583 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 717, 17), fontNames_233582, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 717)
        subscript_call_result_233584 = invoke(stypy.reporting.localization.Localization(__file__, 717, 17), getitem___233583, filename_233580)
        
        # Assigning a type to the variable 'Fx' (line 717)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 717, 12), 'Fx', subscript_call_result_233584)
        
        # Call to report(...): (line 718)
        # Processing the call arguments (line 718)
        unicode_233588 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 718, 38), 'unicode', u'Embedding font %s')
        # Getting the type of 'filename' (line 718)
        filename_233589 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 718, 60), 'filename', False)
        # Applying the binary operator '%' (line 718)
        result_mod_233590 = python_operator(stypy.reporting.localization.Localization(__file__, 718, 38), '%', unicode_233588, filename_233589)
        
        unicode_233591 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 718, 70), 'unicode', u'debug')
        # Processing the call keyword arguments (line 718)
        kwargs_233592 = {}
        # Getting the type of 'matplotlib' (line 718)
        matplotlib_233585 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 718, 12), 'matplotlib', False)
        # Obtaining the member 'verbose' of a type (line 718)
        verbose_233586 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 718, 12), matplotlib_233585, 'verbose')
        # Obtaining the member 'report' of a type (line 718)
        report_233587 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 718, 12), verbose_233586, 'report')
        # Calling report(args, kwargs) (line 718)
        report_call_result_233593 = invoke(stypy.reporting.localization.Localization(__file__, 718, 12), report_233587, *[result_mod_233590, unicode_233591], **kwargs_233592)
        
        
        
        # Call to endswith(...): (line 719)
        # Processing the call arguments (line 719)
        unicode_233596 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 719, 33), 'unicode', u'.afm')
        # Processing the call keyword arguments (line 719)
        kwargs_233597 = {}
        # Getting the type of 'filename' (line 719)
        filename_233594 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 719, 15), 'filename', False)
        # Obtaining the member 'endswith' of a type (line 719)
        endswith_233595 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 719, 15), filename_233594, 'endswith')
        # Calling endswith(args, kwargs) (line 719)
        endswith_call_result_233598 = invoke(stypy.reporting.localization.Localization(__file__, 719, 15), endswith_233595, *[unicode_233596], **kwargs_233597)
        
        # Testing the type of an if condition (line 719)
        if_condition_233599 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 719, 12), endswith_call_result_233598)
        # Assigning a type to the variable 'if_condition_233599' (line 719)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 719, 12), 'if_condition_233599', if_condition_233599)
        # SSA begins for if statement (line 719)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to report(...): (line 721)
        # Processing the call arguments (line 721)
        unicode_233603 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 721, 42), 'unicode', u'Writing AFM font')
        unicode_233604 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 721, 62), 'unicode', u'debug')
        # Processing the call keyword arguments (line 721)
        kwargs_233605 = {}
        # Getting the type of 'matplotlib' (line 721)
        matplotlib_233600 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 16), 'matplotlib', False)
        # Obtaining the member 'verbose' of a type (line 721)
        verbose_233601 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 721, 16), matplotlib_233600, 'verbose')
        # Obtaining the member 'report' of a type (line 721)
        report_233602 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 721, 16), verbose_233601, 'report')
        # Calling report(args, kwargs) (line 721)
        report_call_result_233606 = invoke(stypy.reporting.localization.Localization(__file__, 721, 16), report_233602, *[unicode_233603, unicode_233604], **kwargs_233605)
        
        
        # Assigning a Call to a Subscript (line 722):
        
        # Assigning a Call to a Subscript (line 722):
        
        # Call to _write_afm_font(...): (line 722)
        # Processing the call arguments (line 722)
        # Getting the type of 'filename' (line 722)
        filename_233609 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 49), 'filename', False)
        # Processing the call keyword arguments (line 722)
        kwargs_233610 = {}
        # Getting the type of 'self' (line 722)
        self_233607 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 28), 'self', False)
        # Obtaining the member '_write_afm_font' of a type (line 722)
        _write_afm_font_233608 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 722, 28), self_233607, '_write_afm_font')
        # Calling _write_afm_font(args, kwargs) (line 722)
        _write_afm_font_call_result_233611 = invoke(stypy.reporting.localization.Localization(__file__, 722, 28), _write_afm_font_233608, *[filename_233609], **kwargs_233610)
        
        # Getting the type of 'fonts' (line 722)
        fonts_233612 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 16), 'fonts')
        # Getting the type of 'Fx' (line 722)
        Fx_233613 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 22), 'Fx')
        # Storing an element on a container (line 722)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 722, 16), fonts_233612, (Fx_233613, _write_afm_font_call_result_233611))
        # SSA branch for the else part of an if statement (line 719)
        module_type_store.open_ssa_branch('else')
        
        # Call to report(...): (line 725)
        # Processing the call arguments (line 725)
        unicode_233617 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 725, 42), 'unicode', u'Writing TrueType font')
        unicode_233618 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 725, 67), 'unicode', u'debug')
        # Processing the call keyword arguments (line 725)
        kwargs_233619 = {}
        # Getting the type of 'matplotlib' (line 725)
        matplotlib_233614 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 725, 16), 'matplotlib', False)
        # Obtaining the member 'verbose' of a type (line 725)
        verbose_233615 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 725, 16), matplotlib_233614, 'verbose')
        # Obtaining the member 'report' of a type (line 725)
        report_233616 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 725, 16), verbose_233615, 'report')
        # Calling report(args, kwargs) (line 725)
        report_call_result_233620 = invoke(stypy.reporting.localization.Localization(__file__, 725, 16), report_233616, *[unicode_233617, unicode_233618], **kwargs_233619)
        
        
        # Assigning a Call to a Tuple (line 726):
        
        # Assigning a Call to a Name:
        
        # Call to get_realpath_and_stat(...): (line 726)
        # Processing the call arguments (line 726)
        # Getting the type of 'filename' (line 726)
        filename_233622 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 726, 59), 'filename', False)
        # Processing the call keyword arguments (line 726)
        kwargs_233623 = {}
        # Getting the type of 'get_realpath_and_stat' (line 726)
        get_realpath_and_stat_233621 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 726, 37), 'get_realpath_and_stat', False)
        # Calling get_realpath_and_stat(args, kwargs) (line 726)
        get_realpath_and_stat_call_result_233624 = invoke(stypy.reporting.localization.Localization(__file__, 726, 37), get_realpath_and_stat_233621, *[filename_233622], **kwargs_233623)
        
        # Assigning a type to the variable 'call_assignment_231656' (line 726)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 726, 16), 'call_assignment_231656', get_realpath_and_stat_call_result_233624)
        
        # Assigning a Call to a Name (line 726):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_233627 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 726, 16), 'int')
        # Processing the call keyword arguments
        kwargs_233628 = {}
        # Getting the type of 'call_assignment_231656' (line 726)
        call_assignment_231656_233625 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 726, 16), 'call_assignment_231656', False)
        # Obtaining the member '__getitem__' of a type (line 726)
        getitem___233626 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 726, 16), call_assignment_231656_233625, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_233629 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___233626, *[int_233627], **kwargs_233628)
        
        # Assigning a type to the variable 'call_assignment_231657' (line 726)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 726, 16), 'call_assignment_231657', getitem___call_result_233629)
        
        # Assigning a Name to a Name (line 726):
        # Getting the type of 'call_assignment_231657' (line 726)
        call_assignment_231657_233630 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 726, 16), 'call_assignment_231657')
        # Assigning a type to the variable 'realpath' (line 726)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 726, 16), 'realpath', call_assignment_231657_233630)
        
        # Assigning a Call to a Name (line 726):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_233633 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 726, 16), 'int')
        # Processing the call keyword arguments
        kwargs_233634 = {}
        # Getting the type of 'call_assignment_231656' (line 726)
        call_assignment_231656_233631 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 726, 16), 'call_assignment_231656', False)
        # Obtaining the member '__getitem__' of a type (line 726)
        getitem___233632 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 726, 16), call_assignment_231656_233631, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_233635 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___233632, *[int_233633], **kwargs_233634)
        
        # Assigning a type to the variable 'call_assignment_231658' (line 726)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 726, 16), 'call_assignment_231658', getitem___call_result_233635)
        
        # Assigning a Name to a Name (line 726):
        # Getting the type of 'call_assignment_231658' (line 726)
        call_assignment_231658_233636 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 726, 16), 'call_assignment_231658')
        # Assigning a type to the variable 'stat_key' (line 726)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 726, 26), 'stat_key', call_assignment_231658_233636)
        
        # Assigning a Call to a Name (line 727):
        
        # Assigning a Call to a Name (line 727):
        
        # Call to get(...): (line 727)
        # Processing the call arguments (line 727)
        # Getting the type of 'stat_key' (line 727)
        stat_key_233640 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 727, 49), 'stat_key', False)
        # Processing the call keyword arguments (line 727)
        kwargs_233641 = {}
        # Getting the type of 'self' (line 727)
        self_233637 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 727, 24), 'self', False)
        # Obtaining the member 'used_characters' of a type (line 727)
        used_characters_233638 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 727, 24), self_233637, 'used_characters')
        # Obtaining the member 'get' of a type (line 727)
        get_233639 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 727, 24), used_characters_233638, 'get')
        # Calling get(args, kwargs) (line 727)
        get_call_result_233642 = invoke(stypy.reporting.localization.Localization(__file__, 727, 24), get_233639, *[stat_key_233640], **kwargs_233641)
        
        # Assigning a type to the variable 'chars' (line 727)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 727, 16), 'chars', get_call_result_233642)
        
        
        # Evaluating a boolean operation
        
        # Getting the type of 'chars' (line 728)
        chars_233643 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 728, 19), 'chars')
        # Getting the type of 'None' (line 728)
        None_233644 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 728, 32), 'None')
        # Applying the binary operator 'isnot' (line 728)
        result_is_not_233645 = python_operator(stypy.reporting.localization.Localization(__file__, 728, 19), 'isnot', chars_233643, None_233644)
        
        
        # Call to len(...): (line 728)
        # Processing the call arguments (line 728)
        
        # Obtaining the type of the subscript
        int_233647 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 728, 51), 'int')
        # Getting the type of 'chars' (line 728)
        chars_233648 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 728, 45), 'chars', False)
        # Obtaining the member '__getitem__' of a type (line 728)
        getitem___233649 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 728, 45), chars_233648, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 728)
        subscript_call_result_233650 = invoke(stypy.reporting.localization.Localization(__file__, 728, 45), getitem___233649, int_233647)
        
        # Processing the call keyword arguments (line 728)
        kwargs_233651 = {}
        # Getting the type of 'len' (line 728)
        len_233646 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 728, 41), 'len', False)
        # Calling len(args, kwargs) (line 728)
        len_call_result_233652 = invoke(stypy.reporting.localization.Localization(__file__, 728, 41), len_233646, *[subscript_call_result_233650], **kwargs_233651)
        
        # Applying the binary operator 'and' (line 728)
        result_and_keyword_233653 = python_operator(stypy.reporting.localization.Localization(__file__, 728, 19), 'and', result_is_not_233645, len_call_result_233652)
        
        # Testing the type of an if condition (line 728)
        if_condition_233654 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 728, 16), result_and_keyword_233653)
        # Assigning a type to the variable 'if_condition_233654' (line 728)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 728, 16), 'if_condition_233654', if_condition_233654)
        # SSA begins for if statement (line 728)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Subscript (line 729):
        
        # Assigning a Call to a Subscript (line 729):
        
        # Call to embedTTF(...): (line 729)
        # Processing the call arguments (line 729)
        # Getting the type of 'realpath' (line 729)
        realpath_233657 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 46), 'realpath', False)
        
        # Obtaining the type of the subscript
        int_233658 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 729, 62), 'int')
        # Getting the type of 'chars' (line 729)
        chars_233659 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 56), 'chars', False)
        # Obtaining the member '__getitem__' of a type (line 729)
        getitem___233660 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 729, 56), chars_233659, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 729)
        subscript_call_result_233661 = invoke(stypy.reporting.localization.Localization(__file__, 729, 56), getitem___233660, int_233658)
        
        # Processing the call keyword arguments (line 729)
        kwargs_233662 = {}
        # Getting the type of 'self' (line 729)
        self_233655 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 32), 'self', False)
        # Obtaining the member 'embedTTF' of a type (line 729)
        embedTTF_233656 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 729, 32), self_233655, 'embedTTF')
        # Calling embedTTF(args, kwargs) (line 729)
        embedTTF_call_result_233663 = invoke(stypy.reporting.localization.Localization(__file__, 729, 32), embedTTF_233656, *[realpath_233657, subscript_call_result_233661], **kwargs_233662)
        
        # Getting the type of 'fonts' (line 729)
        fonts_233664 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 20), 'fonts')
        # Getting the type of 'Fx' (line 729)
        Fx_233665 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 26), 'Fx')
        # Storing an element on a container (line 729)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 729, 20), fonts_233664, (Fx_233665, embedTTF_call_result_233663))
        # SSA join for if statement (line 728)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 719)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to writeObject(...): (line 730)
        # Processing the call arguments (line 730)
        # Getting the type of 'self' (line 730)
        self_233668 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 730, 25), 'self', False)
        # Obtaining the member 'fontObject' of a type (line 730)
        fontObject_233669 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 730, 25), self_233668, 'fontObject')
        # Getting the type of 'fonts' (line 730)
        fonts_233670 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 730, 42), 'fonts', False)
        # Processing the call keyword arguments (line 730)
        kwargs_233671 = {}
        # Getting the type of 'self' (line 730)
        self_233666 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 730, 8), 'self', False)
        # Obtaining the member 'writeObject' of a type (line 730)
        writeObject_233667 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 730, 8), self_233666, 'writeObject')
        # Calling writeObject(args, kwargs) (line 730)
        writeObject_call_result_233672 = invoke(stypy.reporting.localization.Localization(__file__, 730, 8), writeObject_233667, *[fontObject_233669, fonts_233670], **kwargs_233671)
        
        
        # ################# End of 'writeFonts(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'writeFonts' in the type store
        # Getting the type of 'stypy_return_type' (line 709)
        stypy_return_type_233673 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 709, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_233673)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'writeFonts'
        return stypy_return_type_233673


    @norecursion
    def _write_afm_font(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_write_afm_font'
        module_type_store = module_type_store.open_function_context('_write_afm_font', 732, 4, False)
        # Assigning a type to the variable 'self' (line 733)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 733, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        PdfFile._write_afm_font.__dict__.__setitem__('stypy_localization', localization)
        PdfFile._write_afm_font.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        PdfFile._write_afm_font.__dict__.__setitem__('stypy_type_store', module_type_store)
        PdfFile._write_afm_font.__dict__.__setitem__('stypy_function_name', 'PdfFile._write_afm_font')
        PdfFile._write_afm_font.__dict__.__setitem__('stypy_param_names_list', ['filename'])
        PdfFile._write_afm_font.__dict__.__setitem__('stypy_varargs_param_name', None)
        PdfFile._write_afm_font.__dict__.__setitem__('stypy_kwargs_param_name', None)
        PdfFile._write_afm_font.__dict__.__setitem__('stypy_call_defaults', defaults)
        PdfFile._write_afm_font.__dict__.__setitem__('stypy_call_varargs', varargs)
        PdfFile._write_afm_font.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        PdfFile._write_afm_font.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'PdfFile._write_afm_font', ['filename'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_write_afm_font', localization, ['filename'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_write_afm_font(...)' code ##################

        
        # Call to open(...): (line 733)
        # Processing the call arguments (line 733)
        # Getting the type of 'filename' (line 733)
        filename_233675 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 733, 18), 'filename', False)
        unicode_233676 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 733, 28), 'unicode', u'rb')
        # Processing the call keyword arguments (line 733)
        kwargs_233677 = {}
        # Getting the type of 'open' (line 733)
        open_233674 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 733, 13), 'open', False)
        # Calling open(args, kwargs) (line 733)
        open_call_result_233678 = invoke(stypy.reporting.localization.Localization(__file__, 733, 13), open_233674, *[filename_233675, unicode_233676], **kwargs_233677)
        
        with_233679 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 733, 13), open_call_result_233678, 'with parameter', '__enter__', '__exit__')

        if with_233679:
            # Calling the __enter__ method to initiate a with section
            # Obtaining the member '__enter__' of a type (line 733)
            enter___233680 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 733, 13), open_call_result_233678, '__enter__')
            with_enter_233681 = invoke(stypy.reporting.localization.Localization(__file__, 733, 13), enter___233680)
            # Assigning a type to the variable 'fh' (line 733)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 733, 13), 'fh', with_enter_233681)
            
            # Assigning a Call to a Name (line 734):
            
            # Assigning a Call to a Name (line 734):
            
            # Call to AFM(...): (line 734)
            # Processing the call arguments (line 734)
            # Getting the type of 'fh' (line 734)
            fh_233683 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 734, 23), 'fh', False)
            # Processing the call keyword arguments (line 734)
            kwargs_233684 = {}
            # Getting the type of 'AFM' (line 734)
            AFM_233682 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 734, 19), 'AFM', False)
            # Calling AFM(args, kwargs) (line 734)
            AFM_call_result_233685 = invoke(stypy.reporting.localization.Localization(__file__, 734, 19), AFM_233682, *[fh_233683], **kwargs_233684)
            
            # Assigning a type to the variable 'font' (line 734)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 734, 12), 'font', AFM_call_result_233685)
            # Calling the __exit__ method to finish a with section
            # Obtaining the member '__exit__' of a type (line 733)
            exit___233686 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 733, 13), open_call_result_233678, '__exit__')
            with_exit_233687 = invoke(stypy.reporting.localization.Localization(__file__, 733, 13), exit___233686, None, None, None)

        
        # Assigning a Call to a Name (line 735):
        
        # Assigning a Call to a Name (line 735):
        
        # Call to get_fontname(...): (line 735)
        # Processing the call keyword arguments (line 735)
        kwargs_233690 = {}
        # Getting the type of 'font' (line 735)
        font_233688 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 735, 19), 'font', False)
        # Obtaining the member 'get_fontname' of a type (line 735)
        get_fontname_233689 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 735, 19), font_233688, 'get_fontname')
        # Calling get_fontname(args, kwargs) (line 735)
        get_fontname_call_result_233691 = invoke(stypy.reporting.localization.Localization(__file__, 735, 19), get_fontname_233689, *[], **kwargs_233690)
        
        # Assigning a type to the variable 'fontname' (line 735)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 735, 8), 'fontname', get_fontname_call_result_233691)
        
        # Assigning a Dict to a Name (line 736):
        
        # Assigning a Dict to a Name (line 736):
        
        # Obtaining an instance of the builtin type 'dict' (line 736)
        dict_233692 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 736, 19), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 736)
        # Adding element type (key, value) (line 736)
        unicode_233693 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 736, 20), 'unicode', u'Type')
        
        # Call to Name(...): (line 736)
        # Processing the call arguments (line 736)
        unicode_233695 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 736, 33), 'unicode', u'Font')
        # Processing the call keyword arguments (line 736)
        kwargs_233696 = {}
        # Getting the type of 'Name' (line 736)
        Name_233694 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 736, 28), 'Name', False)
        # Calling Name(args, kwargs) (line 736)
        Name_call_result_233697 = invoke(stypy.reporting.localization.Localization(__file__, 736, 28), Name_233694, *[unicode_233695], **kwargs_233696)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 736, 19), dict_233692, (unicode_233693, Name_call_result_233697))
        # Adding element type (key, value) (line 736)
        unicode_233698 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 737, 20), 'unicode', u'Subtype')
        
        # Call to Name(...): (line 737)
        # Processing the call arguments (line 737)
        unicode_233700 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 737, 36), 'unicode', u'Type1')
        # Processing the call keyword arguments (line 737)
        kwargs_233701 = {}
        # Getting the type of 'Name' (line 737)
        Name_233699 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 737, 31), 'Name', False)
        # Calling Name(args, kwargs) (line 737)
        Name_call_result_233702 = invoke(stypy.reporting.localization.Localization(__file__, 737, 31), Name_233699, *[unicode_233700], **kwargs_233701)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 736, 19), dict_233692, (unicode_233698, Name_call_result_233702))
        # Adding element type (key, value) (line 736)
        unicode_233703 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 738, 20), 'unicode', u'BaseFont')
        
        # Call to Name(...): (line 738)
        # Processing the call arguments (line 738)
        # Getting the type of 'fontname' (line 738)
        fontname_233705 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 738, 37), 'fontname', False)
        # Processing the call keyword arguments (line 738)
        kwargs_233706 = {}
        # Getting the type of 'Name' (line 738)
        Name_233704 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 738, 32), 'Name', False)
        # Calling Name(args, kwargs) (line 738)
        Name_call_result_233707 = invoke(stypy.reporting.localization.Localization(__file__, 738, 32), Name_233704, *[fontname_233705], **kwargs_233706)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 736, 19), dict_233692, (unicode_233703, Name_call_result_233707))
        # Adding element type (key, value) (line 736)
        unicode_233708 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 739, 20), 'unicode', u'Encoding')
        
        # Call to Name(...): (line 739)
        # Processing the call arguments (line 739)
        unicode_233710 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 739, 37), 'unicode', u'WinAnsiEncoding')
        # Processing the call keyword arguments (line 739)
        kwargs_233711 = {}
        # Getting the type of 'Name' (line 739)
        Name_233709 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 739, 32), 'Name', False)
        # Calling Name(args, kwargs) (line 739)
        Name_call_result_233712 = invoke(stypy.reporting.localization.Localization(__file__, 739, 32), Name_233709, *[unicode_233710], **kwargs_233711)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 736, 19), dict_233692, (unicode_233708, Name_call_result_233712))
        
        # Assigning a type to the variable 'fontdict' (line 736)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 736, 8), 'fontdict', dict_233692)
        
        # Assigning a Call to a Name (line 740):
        
        # Assigning a Call to a Name (line 740):
        
        # Call to reserveObject(...): (line 740)
        # Processing the call arguments (line 740)
        unicode_233715 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 740, 44), 'unicode', u'font dictionary')
        # Processing the call keyword arguments (line 740)
        kwargs_233716 = {}
        # Getting the type of 'self' (line 740)
        self_233713 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 740, 25), 'self', False)
        # Obtaining the member 'reserveObject' of a type (line 740)
        reserveObject_233714 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 740, 25), self_233713, 'reserveObject')
        # Calling reserveObject(args, kwargs) (line 740)
        reserveObject_call_result_233717 = invoke(stypy.reporting.localization.Localization(__file__, 740, 25), reserveObject_233714, *[unicode_233715], **kwargs_233716)
        
        # Assigning a type to the variable 'fontdictObject' (line 740)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 740, 8), 'fontdictObject', reserveObject_call_result_233717)
        
        # Call to writeObject(...): (line 741)
        # Processing the call arguments (line 741)
        # Getting the type of 'fontdictObject' (line 741)
        fontdictObject_233720 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 741, 25), 'fontdictObject', False)
        # Getting the type of 'fontdict' (line 741)
        fontdict_233721 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 741, 41), 'fontdict', False)
        # Processing the call keyword arguments (line 741)
        kwargs_233722 = {}
        # Getting the type of 'self' (line 741)
        self_233718 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 741, 8), 'self', False)
        # Obtaining the member 'writeObject' of a type (line 741)
        writeObject_233719 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 741, 8), self_233718, 'writeObject')
        # Calling writeObject(args, kwargs) (line 741)
        writeObject_call_result_233723 = invoke(stypy.reporting.localization.Localization(__file__, 741, 8), writeObject_233719, *[fontdictObject_233720, fontdict_233721], **kwargs_233722)
        
        # Getting the type of 'fontdictObject' (line 742)
        fontdictObject_233724 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 742, 15), 'fontdictObject')
        # Assigning a type to the variable 'stypy_return_type' (line 742)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 742, 8), 'stypy_return_type', fontdictObject_233724)
        
        # ################# End of '_write_afm_font(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_write_afm_font' in the type store
        # Getting the type of 'stypy_return_type' (line 732)
        stypy_return_type_233725 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 732, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_233725)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_write_afm_font'
        return stypy_return_type_233725


    @norecursion
    def _embedTeXFont(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_embedTeXFont'
        module_type_store = module_type_store.open_function_context('_embedTeXFont', 744, 4, False)
        # Assigning a type to the variable 'self' (line 745)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 745, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        PdfFile._embedTeXFont.__dict__.__setitem__('stypy_localization', localization)
        PdfFile._embedTeXFont.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        PdfFile._embedTeXFont.__dict__.__setitem__('stypy_type_store', module_type_store)
        PdfFile._embedTeXFont.__dict__.__setitem__('stypy_function_name', 'PdfFile._embedTeXFont')
        PdfFile._embedTeXFont.__dict__.__setitem__('stypy_param_names_list', ['fontinfo'])
        PdfFile._embedTeXFont.__dict__.__setitem__('stypy_varargs_param_name', None)
        PdfFile._embedTeXFont.__dict__.__setitem__('stypy_kwargs_param_name', None)
        PdfFile._embedTeXFont.__dict__.__setitem__('stypy_call_defaults', defaults)
        PdfFile._embedTeXFont.__dict__.__setitem__('stypy_call_varargs', varargs)
        PdfFile._embedTeXFont.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        PdfFile._embedTeXFont.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'PdfFile._embedTeXFont', ['fontinfo'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_embedTeXFont', localization, ['fontinfo'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_embedTeXFont(...)' code ##################

        
        # Assigning a Call to a Name (line 745):
        
        # Assigning a Call to a Name (line 745):
        
        # Call to format(...): (line 745)
        # Processing the call arguments (line 745)
        # Getting the type of 'fontinfo' (line 746)
        fontinfo_233728 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 746, 23), 'fontinfo', False)
        # Obtaining the member 'dvifont' of a type (line 746)
        dvifont_233729 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 746, 23), fontinfo_233728, 'dvifont')
        # Obtaining the member 'texname' of a type (line 746)
        texname_233730 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 746, 23), dvifont_233729, 'texname')
        # Getting the type of 'fontinfo' (line 746)
        fontinfo_233731 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 746, 49), 'fontinfo', False)
        # Obtaining the member '__dict__' of a type (line 746)
        dict___233732 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 746, 49), fontinfo_233731, '__dict__')
        # Processing the call keyword arguments (line 745)
        kwargs_233733 = {}
        unicode_233726 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 745, 15), 'unicode', u'Embedding TeX font {0} - fontinfo={1}')
        # Obtaining the member 'format' of a type (line 745)
        format_233727 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 745, 15), unicode_233726, 'format')
        # Calling format(args, kwargs) (line 745)
        format_call_result_233734 = invoke(stypy.reporting.localization.Localization(__file__, 745, 15), format_233727, *[texname_233730, dict___233732], **kwargs_233733)
        
        # Assigning a type to the variable 'msg' (line 745)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 745, 8), 'msg', format_call_result_233734)
        
        # Call to report(...): (line 747)
        # Processing the call arguments (line 747)
        # Getting the type of 'msg' (line 747)
        msg_233738 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 747, 34), 'msg', False)
        unicode_233739 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 747, 39), 'unicode', u'debug')
        # Processing the call keyword arguments (line 747)
        kwargs_233740 = {}
        # Getting the type of 'matplotlib' (line 747)
        matplotlib_233735 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 747, 8), 'matplotlib', False)
        # Obtaining the member 'verbose' of a type (line 747)
        verbose_233736 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 747, 8), matplotlib_233735, 'verbose')
        # Obtaining the member 'report' of a type (line 747)
        report_233737 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 747, 8), verbose_233736, 'report')
        # Calling report(args, kwargs) (line 747)
        report_call_result_233741 = invoke(stypy.reporting.localization.Localization(__file__, 747, 8), report_233737, *[msg_233738, unicode_233739], **kwargs_233740)
        
        
        # Assigning a Call to a Name (line 750):
        
        # Assigning a Call to a Name (line 750):
        
        # Call to reserveObject(...): (line 750)
        # Processing the call arguments (line 750)
        unicode_233744 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 750, 42), 'unicode', u'font widths')
        # Processing the call keyword arguments (line 750)
        kwargs_233745 = {}
        # Getting the type of 'self' (line 750)
        self_233742 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 750, 23), 'self', False)
        # Obtaining the member 'reserveObject' of a type (line 750)
        reserveObject_233743 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 750, 23), self_233742, 'reserveObject')
        # Calling reserveObject(args, kwargs) (line 750)
        reserveObject_call_result_233746 = invoke(stypy.reporting.localization.Localization(__file__, 750, 23), reserveObject_233743, *[unicode_233744], **kwargs_233745)
        
        # Assigning a type to the variable 'widthsObject' (line 750)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 750, 8), 'widthsObject', reserveObject_call_result_233746)
        
        # Call to writeObject(...): (line 751)
        # Processing the call arguments (line 751)
        # Getting the type of 'widthsObject' (line 751)
        widthsObject_233749 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 751, 25), 'widthsObject', False)
        # Getting the type of 'fontinfo' (line 751)
        fontinfo_233750 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 751, 39), 'fontinfo', False)
        # Obtaining the member 'dvifont' of a type (line 751)
        dvifont_233751 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 751, 39), fontinfo_233750, 'dvifont')
        # Obtaining the member 'widths' of a type (line 751)
        widths_233752 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 751, 39), dvifont_233751, 'widths')
        # Processing the call keyword arguments (line 751)
        kwargs_233753 = {}
        # Getting the type of 'self' (line 751)
        self_233747 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 751, 8), 'self', False)
        # Obtaining the member 'writeObject' of a type (line 751)
        writeObject_233748 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 751, 8), self_233747, 'writeObject')
        # Calling writeObject(args, kwargs) (line 751)
        writeObject_call_result_233754 = invoke(stypy.reporting.localization.Localization(__file__, 751, 8), writeObject_233748, *[widthsObject_233749, widths_233752], **kwargs_233753)
        
        
        # Assigning a Call to a Name (line 754):
        
        # Assigning a Call to a Name (line 754):
        
        # Call to reserveObject(...): (line 754)
        # Processing the call arguments (line 754)
        unicode_233757 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 754, 44), 'unicode', u'font dictionary')
        # Processing the call keyword arguments (line 754)
        kwargs_233758 = {}
        # Getting the type of 'self' (line 754)
        self_233755 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 754, 25), 'self', False)
        # Obtaining the member 'reserveObject' of a type (line 754)
        reserveObject_233756 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 754, 25), self_233755, 'reserveObject')
        # Calling reserveObject(args, kwargs) (line 754)
        reserveObject_call_result_233759 = invoke(stypy.reporting.localization.Localization(__file__, 754, 25), reserveObject_233756, *[unicode_233757], **kwargs_233758)
        
        # Assigning a type to the variable 'fontdictObject' (line 754)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 754, 8), 'fontdictObject', reserveObject_call_result_233759)
        
        # Assigning a Dict to a Name (line 755):
        
        # Assigning a Dict to a Name (line 755):
        
        # Obtaining an instance of the builtin type 'dict' (line 755)
        dict_233760 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 755, 19), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 755)
        # Adding element type (key, value) (line 755)
        unicode_233761 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 756, 12), 'unicode', u'Type')
        
        # Call to Name(...): (line 756)
        # Processing the call arguments (line 756)
        unicode_233763 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 756, 30), 'unicode', u'Font')
        # Processing the call keyword arguments (line 756)
        kwargs_233764 = {}
        # Getting the type of 'Name' (line 756)
        Name_233762 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 756, 25), 'Name', False)
        # Calling Name(args, kwargs) (line 756)
        Name_call_result_233765 = invoke(stypy.reporting.localization.Localization(__file__, 756, 25), Name_233762, *[unicode_233763], **kwargs_233764)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 755, 19), dict_233760, (unicode_233761, Name_call_result_233765))
        # Adding element type (key, value) (line 755)
        unicode_233766 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 757, 12), 'unicode', u'Subtype')
        
        # Call to Name(...): (line 757)
        # Processing the call arguments (line 757)
        unicode_233768 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 757, 30), 'unicode', u'Type1')
        # Processing the call keyword arguments (line 757)
        kwargs_233769 = {}
        # Getting the type of 'Name' (line 757)
        Name_233767 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 757, 25), 'Name', False)
        # Calling Name(args, kwargs) (line 757)
        Name_call_result_233770 = invoke(stypy.reporting.localization.Localization(__file__, 757, 25), Name_233767, *[unicode_233768], **kwargs_233769)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 755, 19), dict_233760, (unicode_233766, Name_call_result_233770))
        # Adding element type (key, value) (line 755)
        unicode_233771 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 758, 12), 'unicode', u'FirstChar')
        int_233772 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 758, 25), 'int')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 755, 19), dict_233760, (unicode_233771, int_233772))
        # Adding element type (key, value) (line 755)
        unicode_233773 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 759, 12), 'unicode', u'LastChar')
        
        # Call to len(...): (line 759)
        # Processing the call arguments (line 759)
        # Getting the type of 'fontinfo' (line 759)
        fontinfo_233775 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 759, 29), 'fontinfo', False)
        # Obtaining the member 'dvifont' of a type (line 759)
        dvifont_233776 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 759, 29), fontinfo_233775, 'dvifont')
        # Obtaining the member 'widths' of a type (line 759)
        widths_233777 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 759, 29), dvifont_233776, 'widths')
        # Processing the call keyword arguments (line 759)
        kwargs_233778 = {}
        # Getting the type of 'len' (line 759)
        len_233774 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 759, 25), 'len', False)
        # Calling len(args, kwargs) (line 759)
        len_call_result_233779 = invoke(stypy.reporting.localization.Localization(__file__, 759, 25), len_233774, *[widths_233777], **kwargs_233778)
        
        int_233780 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 759, 56), 'int')
        # Applying the binary operator '-' (line 759)
        result_sub_233781 = python_operator(stypy.reporting.localization.Localization(__file__, 759, 25), '-', len_call_result_233779, int_233780)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 755, 19), dict_233760, (unicode_233773, result_sub_233781))
        # Adding element type (key, value) (line 755)
        unicode_233782 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 760, 12), 'unicode', u'Widths')
        # Getting the type of 'widthsObject' (line 760)
        widthsObject_233783 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 760, 25), 'widthsObject')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 755, 19), dict_233760, (unicode_233782, widthsObject_233783))
        
        # Assigning a type to the variable 'fontdict' (line 755)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 755, 8), 'fontdict', dict_233760)
        
        
        # Getting the type of 'fontinfo' (line 764)
        fontinfo_233784 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 764, 11), 'fontinfo')
        # Obtaining the member 'encodingfile' of a type (line 764)
        encodingfile_233785 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 764, 11), fontinfo_233784, 'encodingfile')
        # Getting the type of 'None' (line 764)
        None_233786 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 764, 40), 'None')
        # Applying the binary operator 'isnot' (line 764)
        result_is_not_233787 = python_operator(stypy.reporting.localization.Localization(__file__, 764, 11), 'isnot', encodingfile_233785, None_233786)
        
        # Testing the type of an if condition (line 764)
        if_condition_233788 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 764, 8), result_is_not_233787)
        # Assigning a type to the variable 'if_condition_233788' (line 764)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 764, 8), 'if_condition_233788', if_condition_233788)
        # SSA begins for if statement (line 764)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 765):
        
        # Assigning a Call to a Name (line 765):
        
        # Call to Encoding(...): (line 765)
        # Processing the call arguments (line 765)
        # Getting the type of 'fontinfo' (line 765)
        fontinfo_233791 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 765, 35), 'fontinfo', False)
        # Obtaining the member 'encodingfile' of a type (line 765)
        encodingfile_233792 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 765, 35), fontinfo_233791, 'encodingfile')
        # Processing the call keyword arguments (line 765)
        kwargs_233793 = {}
        # Getting the type of 'dviread' (line 765)
        dviread_233789 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 765, 18), 'dviread', False)
        # Obtaining the member 'Encoding' of a type (line 765)
        Encoding_233790 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 765, 18), dviread_233789, 'Encoding')
        # Calling Encoding(args, kwargs) (line 765)
        Encoding_call_result_233794 = invoke(stypy.reporting.localization.Localization(__file__, 765, 18), Encoding_233790, *[encodingfile_233792], **kwargs_233793)
        
        # Assigning a type to the variable 'enc' (line 765)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 765, 12), 'enc', Encoding_call_result_233794)
        
        # Assigning a ListComp to a Name (line 766):
        
        # Assigning a ListComp to a Name (line 766):
        # Calculating list comprehension
        # Calculating comprehension expression
        # Getting the type of 'enc' (line 766)
        enc_233799 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 766, 51), 'enc')
        comprehension_233800 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 766, 32), enc_233799)
        # Assigning a type to the variable 'ch' (line 766)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 766, 32), 'ch', comprehension_233800)
        
        # Call to Name(...): (line 766)
        # Processing the call arguments (line 766)
        # Getting the type of 'ch' (line 766)
        ch_233796 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 766, 37), 'ch', False)
        # Processing the call keyword arguments (line 766)
        kwargs_233797 = {}
        # Getting the type of 'Name' (line 766)
        Name_233795 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 766, 32), 'Name', False)
        # Calling Name(args, kwargs) (line 766)
        Name_call_result_233798 = invoke(stypy.reporting.localization.Localization(__file__, 766, 32), Name_233795, *[ch_233796], **kwargs_233797)
        
        list_233801 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 766, 32), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 766, 32), list_233801, Name_call_result_233798)
        # Assigning a type to the variable 'differencesArray' (line 766)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 766, 12), 'differencesArray', list_233801)
        
        # Assigning a BinOp to a Name (line 767):
        
        # Assigning a BinOp to a Name (line 767):
        
        # Obtaining an instance of the builtin type 'list' (line 767)
        list_233802 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 767, 31), 'list')
        # Adding type elements to the builtin type 'list' instance (line 767)
        # Adding element type (line 767)
        int_233803 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 767, 32), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 767, 31), list_233802, int_233803)
        
        # Getting the type of 'differencesArray' (line 767)
        differencesArray_233804 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 767, 37), 'differencesArray')
        # Applying the binary operator '+' (line 767)
        result_add_233805 = python_operator(stypy.reporting.localization.Localization(__file__, 767, 31), '+', list_233802, differencesArray_233804)
        
        # Assigning a type to the variable 'differencesArray' (line 767)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 767, 12), 'differencesArray', result_add_233805)
        
        # Assigning a Dict to a Subscript (line 768):
        
        # Assigning a Dict to a Subscript (line 768):
        
        # Obtaining an instance of the builtin type 'dict' (line 769)
        dict_233806 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 769, 16), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 769)
        # Adding element type (key, value) (line 769)
        unicode_233807 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 769, 17), 'unicode', u'Type')
        
        # Call to Name(...): (line 769)
        # Processing the call arguments (line 769)
        unicode_233809 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 769, 30), 'unicode', u'Encoding')
        # Processing the call keyword arguments (line 769)
        kwargs_233810 = {}
        # Getting the type of 'Name' (line 769)
        Name_233808 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 769, 25), 'Name', False)
        # Calling Name(args, kwargs) (line 769)
        Name_call_result_233811 = invoke(stypy.reporting.localization.Localization(__file__, 769, 25), Name_233808, *[unicode_233809], **kwargs_233810)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 769, 16), dict_233806, (unicode_233807, Name_call_result_233811))
        # Adding element type (key, value) (line 769)
        unicode_233812 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 770, 17), 'unicode', u'Differences')
        # Getting the type of 'differencesArray' (line 770)
        differencesArray_233813 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 770, 32), 'differencesArray')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 769, 16), dict_233806, (unicode_233812, differencesArray_233813))
        
        # Getting the type of 'fontdict' (line 768)
        fontdict_233814 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 768, 12), 'fontdict')
        unicode_233815 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 768, 21), 'unicode', u'Encoding')
        # Storing an element on a container (line 768)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 768, 12), fontdict_233814, (unicode_233815, dict_233806))
        # SSA join for if statement (line 764)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Type idiom detected: calculating its left and rigth part (line 773)
        # Getting the type of 'fontinfo' (line 773)
        fontinfo_233816 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 773, 11), 'fontinfo')
        # Obtaining the member 'fontfile' of a type (line 773)
        fontfile_233817 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 773, 11), fontinfo_233816, 'fontfile')
        # Getting the type of 'None' (line 773)
        None_233818 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 773, 32), 'None')
        
        (may_be_233819, more_types_in_union_233820) = may_be_none(fontfile_233817, None_233818)

        if may_be_233819:

            if more_types_in_union_233820:
                # Runtime conditional SSA (line 773)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Call to a Name (line 774):
            
            # Assigning a Call to a Name (line 774):
            
            # Call to format(...): (line 774)
            # Processing the call arguments (line 774)
            # Getting the type of 'fontinfo' (line 778)
            fontinfo_233823 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 778, 47), 'fontinfo', False)
            # Obtaining the member 'basefont' of a type (line 778)
            basefont_233824 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 778, 47), fontinfo_233823, 'basefont')
            # Processing the call keyword arguments (line 774)
            kwargs_233825 = {}
            unicode_233821 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 774, 19), 'unicode', u'Because of TeX configuration (pdftex.map, see updmap option pdftexDownloadBase14) the font {0} is not embedded. This is deprecated as of PDF 1.5 and it may cause the consumer application to show something that was not intended.')
            # Obtaining the member 'format' of a type (line 774)
            format_233822 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 774, 19), unicode_233821, 'format')
            # Calling format(args, kwargs) (line 774)
            format_call_result_233826 = invoke(stypy.reporting.localization.Localization(__file__, 774, 19), format_233822, *[basefont_233824], **kwargs_233825)
            
            # Assigning a type to the variable 'msg' (line 774)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 774, 12), 'msg', format_call_result_233826)
            
            # Call to warn(...): (line 779)
            # Processing the call arguments (line 779)
            # Getting the type of 'msg' (line 779)
            msg_233829 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 779, 26), 'msg', False)
            # Processing the call keyword arguments (line 779)
            kwargs_233830 = {}
            # Getting the type of 'warnings' (line 779)
            warnings_233827 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 779, 12), 'warnings', False)
            # Obtaining the member 'warn' of a type (line 779)
            warn_233828 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 779, 12), warnings_233827, 'warn')
            # Calling warn(args, kwargs) (line 779)
            warn_call_result_233831 = invoke(stypy.reporting.localization.Localization(__file__, 779, 12), warn_233828, *[msg_233829], **kwargs_233830)
            
            
            # Assigning a Call to a Subscript (line 780):
            
            # Assigning a Call to a Subscript (line 780):
            
            # Call to Name(...): (line 780)
            # Processing the call arguments (line 780)
            # Getting the type of 'fontinfo' (line 780)
            fontinfo_233833 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 780, 40), 'fontinfo', False)
            # Obtaining the member 'basefont' of a type (line 780)
            basefont_233834 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 780, 40), fontinfo_233833, 'basefont')
            # Processing the call keyword arguments (line 780)
            kwargs_233835 = {}
            # Getting the type of 'Name' (line 780)
            Name_233832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 780, 35), 'Name', False)
            # Calling Name(args, kwargs) (line 780)
            Name_call_result_233836 = invoke(stypy.reporting.localization.Localization(__file__, 780, 35), Name_233832, *[basefont_233834], **kwargs_233835)
            
            # Getting the type of 'fontdict' (line 780)
            fontdict_233837 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 780, 12), 'fontdict')
            unicode_233838 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 780, 21), 'unicode', u'BaseFont')
            # Storing an element on a container (line 780)
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 780, 12), fontdict_233837, (unicode_233838, Name_call_result_233836))
            
            # Call to writeObject(...): (line 781)
            # Processing the call arguments (line 781)
            # Getting the type of 'fontdictObject' (line 781)
            fontdictObject_233841 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 781, 29), 'fontdictObject', False)
            # Getting the type of 'fontdict' (line 781)
            fontdict_233842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 781, 45), 'fontdict', False)
            # Processing the call keyword arguments (line 781)
            kwargs_233843 = {}
            # Getting the type of 'self' (line 781)
            self_233839 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 781, 12), 'self', False)
            # Obtaining the member 'writeObject' of a type (line 781)
            writeObject_233840 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 781, 12), self_233839, 'writeObject')
            # Calling writeObject(args, kwargs) (line 781)
            writeObject_call_result_233844 = invoke(stypy.reporting.localization.Localization(__file__, 781, 12), writeObject_233840, *[fontdictObject_233841, fontdict_233842], **kwargs_233843)
            
            # Getting the type of 'fontdictObject' (line 782)
            fontdictObject_233845 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 782, 19), 'fontdictObject')
            # Assigning a type to the variable 'stypy_return_type' (line 782)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 782, 12), 'stypy_return_type', fontdictObject_233845)

            if more_types_in_union_233820:
                # SSA join for if statement (line 773)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Call to a Name (line 785):
        
        # Assigning a Call to a Name (line 785):
        
        # Call to Type1Font(...): (line 785)
        # Processing the call arguments (line 785)
        # Getting the type of 'fontinfo' (line 785)
        fontinfo_233848 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 785, 37), 'fontinfo', False)
        # Obtaining the member 'fontfile' of a type (line 785)
        fontfile_233849 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 785, 37), fontinfo_233848, 'fontfile')
        # Processing the call keyword arguments (line 785)
        kwargs_233850 = {}
        # Getting the type of 'type1font' (line 785)
        type1font_233846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 785, 17), 'type1font', False)
        # Obtaining the member 'Type1Font' of a type (line 785)
        Type1Font_233847 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 785, 17), type1font_233846, 'Type1Font')
        # Calling Type1Font(args, kwargs) (line 785)
        Type1Font_call_result_233851 = invoke(stypy.reporting.localization.Localization(__file__, 785, 17), Type1Font_233847, *[fontfile_233849], **kwargs_233850)
        
        # Assigning a type to the variable 't1font' (line 785)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 785, 8), 't1font', Type1Font_call_result_233851)
        
        # Getting the type of 'fontinfo' (line 786)
        fontinfo_233852 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 786, 11), 'fontinfo')
        # Obtaining the member 'effects' of a type (line 786)
        effects_233853 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 786, 11), fontinfo_233852, 'effects')
        # Testing the type of an if condition (line 786)
        if_condition_233854 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 786, 8), effects_233853)
        # Assigning a type to the variable 'if_condition_233854' (line 786)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 786, 8), 'if_condition_233854', if_condition_233854)
        # SSA begins for if statement (line 786)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 787):
        
        # Assigning a Call to a Name (line 787):
        
        # Call to transform(...): (line 787)
        # Processing the call arguments (line 787)
        # Getting the type of 'fontinfo' (line 787)
        fontinfo_233857 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 787, 38), 'fontinfo', False)
        # Obtaining the member 'effects' of a type (line 787)
        effects_233858 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 787, 38), fontinfo_233857, 'effects')
        # Processing the call keyword arguments (line 787)
        kwargs_233859 = {}
        # Getting the type of 't1font' (line 787)
        t1font_233855 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 787, 21), 't1font', False)
        # Obtaining the member 'transform' of a type (line 787)
        transform_233856 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 787, 21), t1font_233855, 'transform')
        # Calling transform(args, kwargs) (line 787)
        transform_call_result_233860 = invoke(stypy.reporting.localization.Localization(__file__, 787, 21), transform_233856, *[effects_233858], **kwargs_233859)
        
        # Assigning a type to the variable 't1font' (line 787)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 787, 12), 't1font', transform_call_result_233860)
        # SSA join for if statement (line 786)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Subscript (line 788):
        
        # Assigning a Call to a Subscript (line 788):
        
        # Call to Name(...): (line 788)
        # Processing the call arguments (line 788)
        
        # Obtaining the type of the subscript
        unicode_233862 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 788, 48), 'unicode', u'FontName')
        # Getting the type of 't1font' (line 788)
        t1font_233863 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 788, 36), 't1font', False)
        # Obtaining the member 'prop' of a type (line 788)
        prop_233864 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 788, 36), t1font_233863, 'prop')
        # Obtaining the member '__getitem__' of a type (line 788)
        getitem___233865 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 788, 36), prop_233864, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 788)
        subscript_call_result_233866 = invoke(stypy.reporting.localization.Localization(__file__, 788, 36), getitem___233865, unicode_233862)
        
        # Processing the call keyword arguments (line 788)
        kwargs_233867 = {}
        # Getting the type of 'Name' (line 788)
        Name_233861 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 788, 31), 'Name', False)
        # Calling Name(args, kwargs) (line 788)
        Name_call_result_233868 = invoke(stypy.reporting.localization.Localization(__file__, 788, 31), Name_233861, *[subscript_call_result_233866], **kwargs_233867)
        
        # Getting the type of 'fontdict' (line 788)
        fontdict_233869 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 788, 8), 'fontdict')
        unicode_233870 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 788, 17), 'unicode', u'BaseFont')
        # Storing an element on a container (line 788)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 788, 8), fontdict_233869, (unicode_233870, Name_call_result_233868))
        
        # Assigning a Tuple to a Name (line 793):
        
        # Assigning a Tuple to a Name (line 793):
        
        # Obtaining an instance of the builtin type 'tuple' (line 793)
        tuple_233871 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 793, 19), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 793)
        # Adding element type (line 793)
        
        # Call to get(...): (line 793)
        # Processing the call arguments (line 793)
        unicode_233875 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 793, 40), 'unicode', u'slant')
        float_233876 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 793, 49), 'float')
        # Processing the call keyword arguments (line 793)
        kwargs_233877 = {}
        # Getting the type of 'fontinfo' (line 793)
        fontinfo_233872 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 793, 19), 'fontinfo', False)
        # Obtaining the member 'effects' of a type (line 793)
        effects_233873 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 793, 19), fontinfo_233872, 'effects')
        # Obtaining the member 'get' of a type (line 793)
        get_233874 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 793, 19), effects_233873, 'get')
        # Calling get(args, kwargs) (line 793)
        get_call_result_233878 = invoke(stypy.reporting.localization.Localization(__file__, 793, 19), get_233874, *[unicode_233875, float_233876], **kwargs_233877)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 793, 19), tuple_233871, get_call_result_233878)
        # Adding element type (line 793)
        
        # Call to get(...): (line 794)
        # Processing the call arguments (line 794)
        unicode_233882 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 794, 40), 'unicode', u'extend')
        float_233883 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 794, 50), 'float')
        # Processing the call keyword arguments (line 794)
        kwargs_233884 = {}
        # Getting the type of 'fontinfo' (line 794)
        fontinfo_233879 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 794, 19), 'fontinfo', False)
        # Obtaining the member 'effects' of a type (line 794)
        effects_233880 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 794, 19), fontinfo_233879, 'effects')
        # Obtaining the member 'get' of a type (line 794)
        get_233881 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 794, 19), effects_233880, 'get')
        # Calling get(args, kwargs) (line 794)
        get_call_result_233885 = invoke(stypy.reporting.localization.Localization(__file__, 794, 19), get_233881, *[unicode_233882, float_233883], **kwargs_233884)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 793, 19), tuple_233871, get_call_result_233885)
        
        # Assigning a type to the variable 'effects' (line 793)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 793, 8), 'effects', tuple_233871)
        
        # Assigning a Call to a Name (line 795):
        
        # Assigning a Call to a Name (line 795):
        
        # Call to get(...): (line 795)
        # Processing the call arguments (line 795)
        
        # Obtaining an instance of the builtin type 'tuple' (line 795)
        tuple_233889 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 795, 46), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 795)
        # Adding element type (line 795)
        # Getting the type of 'fontinfo' (line 795)
        fontinfo_233890 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 795, 46), 'fontinfo', False)
        # Obtaining the member 'fontfile' of a type (line 795)
        fontfile_233891 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 795, 46), fontinfo_233890, 'fontfile')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 795, 46), tuple_233889, fontfile_233891)
        # Adding element type (line 795)
        # Getting the type of 'effects' (line 795)
        effects_233892 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 795, 65), 'effects', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 795, 46), tuple_233889, effects_233892)
        
        # Processing the call keyword arguments (line 795)
        kwargs_233893 = {}
        # Getting the type of 'self' (line 795)
        self_233886 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 795, 19), 'self', False)
        # Obtaining the member 'type1Descriptors' of a type (line 795)
        type1Descriptors_233887 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 795, 19), self_233886, 'type1Descriptors')
        # Obtaining the member 'get' of a type (line 795)
        get_233888 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 795, 19), type1Descriptors_233887, 'get')
        # Calling get(args, kwargs) (line 795)
        get_call_result_233894 = invoke(stypy.reporting.localization.Localization(__file__, 795, 19), get_233888, *[tuple_233889], **kwargs_233893)
        
        # Assigning a type to the variable 'fontdesc' (line 795)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 795, 8), 'fontdesc', get_call_result_233894)
        
        # Type idiom detected: calculating its left and rigth part (line 796)
        # Getting the type of 'fontdesc' (line 796)
        fontdesc_233895 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 796, 11), 'fontdesc')
        # Getting the type of 'None' (line 796)
        None_233896 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 796, 23), 'None')
        
        (may_be_233897, more_types_in_union_233898) = may_be_none(fontdesc_233895, None_233896)

        if may_be_233897:

            if more_types_in_union_233898:
                # Runtime conditional SSA (line 796)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Call to a Name (line 797):
            
            # Assigning a Call to a Name (line 797):
            
            # Call to createType1Descriptor(...): (line 797)
            # Processing the call arguments (line 797)
            # Getting the type of 't1font' (line 797)
            t1font_233901 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 797, 50), 't1font', False)
            # Getting the type of 'fontinfo' (line 797)
            fontinfo_233902 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 797, 58), 'fontinfo', False)
            # Obtaining the member 'fontfile' of a type (line 797)
            fontfile_233903 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 797, 58), fontinfo_233902, 'fontfile')
            # Processing the call keyword arguments (line 797)
            kwargs_233904 = {}
            # Getting the type of 'self' (line 797)
            self_233899 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 797, 23), 'self', False)
            # Obtaining the member 'createType1Descriptor' of a type (line 797)
            createType1Descriptor_233900 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 797, 23), self_233899, 'createType1Descriptor')
            # Calling createType1Descriptor(args, kwargs) (line 797)
            createType1Descriptor_call_result_233905 = invoke(stypy.reporting.localization.Localization(__file__, 797, 23), createType1Descriptor_233900, *[t1font_233901, fontfile_233903], **kwargs_233904)
            
            # Assigning a type to the variable 'fontdesc' (line 797)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 797, 12), 'fontdesc', createType1Descriptor_call_result_233905)
            
            # Assigning a Name to a Subscript (line 798):
            
            # Assigning a Name to a Subscript (line 798):
            # Getting the type of 'fontdesc' (line 798)
            fontdesc_233906 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 798, 66), 'fontdesc')
            # Getting the type of 'self' (line 798)
            self_233907 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 798, 12), 'self')
            # Obtaining the member 'type1Descriptors' of a type (line 798)
            type1Descriptors_233908 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 798, 12), self_233907, 'type1Descriptors')
            
            # Obtaining an instance of the builtin type 'tuple' (line 798)
            tuple_233909 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 798, 35), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 798)
            # Adding element type (line 798)
            # Getting the type of 'fontinfo' (line 798)
            fontinfo_233910 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 798, 35), 'fontinfo')
            # Obtaining the member 'fontfile' of a type (line 798)
            fontfile_233911 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 798, 35), fontinfo_233910, 'fontfile')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 798, 35), tuple_233909, fontfile_233911)
            # Adding element type (line 798)
            # Getting the type of 'effects' (line 798)
            effects_233912 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 798, 54), 'effects')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 798, 35), tuple_233909, effects_233912)
            
            # Storing an element on a container (line 798)
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 798, 12), type1Descriptors_233908, (tuple_233909, fontdesc_233906))

            if more_types_in_union_233898:
                # SSA join for if statement (line 796)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Name to a Subscript (line 799):
        
        # Assigning a Name to a Subscript (line 799):
        # Getting the type of 'fontdesc' (line 799)
        fontdesc_233913 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 799, 37), 'fontdesc')
        # Getting the type of 'fontdict' (line 799)
        fontdict_233914 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 799, 8), 'fontdict')
        unicode_233915 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 799, 17), 'unicode', u'FontDescriptor')
        # Storing an element on a container (line 799)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 799, 8), fontdict_233914, (unicode_233915, fontdesc_233913))
        
        # Call to writeObject(...): (line 801)
        # Processing the call arguments (line 801)
        # Getting the type of 'fontdictObject' (line 801)
        fontdictObject_233918 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 801, 25), 'fontdictObject', False)
        # Getting the type of 'fontdict' (line 801)
        fontdict_233919 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 801, 41), 'fontdict', False)
        # Processing the call keyword arguments (line 801)
        kwargs_233920 = {}
        # Getting the type of 'self' (line 801)
        self_233916 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 801, 8), 'self', False)
        # Obtaining the member 'writeObject' of a type (line 801)
        writeObject_233917 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 801, 8), self_233916, 'writeObject')
        # Calling writeObject(args, kwargs) (line 801)
        writeObject_call_result_233921 = invoke(stypy.reporting.localization.Localization(__file__, 801, 8), writeObject_233917, *[fontdictObject_233918, fontdict_233919], **kwargs_233920)
        
        # Getting the type of 'fontdictObject' (line 802)
        fontdictObject_233922 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 802, 15), 'fontdictObject')
        # Assigning a type to the variable 'stypy_return_type' (line 802)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 802, 8), 'stypy_return_type', fontdictObject_233922)
        
        # ################# End of '_embedTeXFont(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_embedTeXFont' in the type store
        # Getting the type of 'stypy_return_type' (line 744)
        stypy_return_type_233923 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 744, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_233923)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_embedTeXFont'
        return stypy_return_type_233923


    @norecursion
    def createType1Descriptor(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'createType1Descriptor'
        module_type_store = module_type_store.open_function_context('createType1Descriptor', 804, 4, False)
        # Assigning a type to the variable 'self' (line 805)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 805, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        PdfFile.createType1Descriptor.__dict__.__setitem__('stypy_localization', localization)
        PdfFile.createType1Descriptor.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        PdfFile.createType1Descriptor.__dict__.__setitem__('stypy_type_store', module_type_store)
        PdfFile.createType1Descriptor.__dict__.__setitem__('stypy_function_name', 'PdfFile.createType1Descriptor')
        PdfFile.createType1Descriptor.__dict__.__setitem__('stypy_param_names_list', ['t1font', 'fontfile'])
        PdfFile.createType1Descriptor.__dict__.__setitem__('stypy_varargs_param_name', None)
        PdfFile.createType1Descriptor.__dict__.__setitem__('stypy_kwargs_param_name', None)
        PdfFile.createType1Descriptor.__dict__.__setitem__('stypy_call_defaults', defaults)
        PdfFile.createType1Descriptor.__dict__.__setitem__('stypy_call_varargs', varargs)
        PdfFile.createType1Descriptor.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        PdfFile.createType1Descriptor.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'PdfFile.createType1Descriptor', ['t1font', 'fontfile'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'createType1Descriptor', localization, ['t1font', 'fontfile'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'createType1Descriptor(...)' code ##################

        
        # Assigning a Call to a Name (line 807):
        
        # Assigning a Call to a Name (line 807):
        
        # Call to reserveObject(...): (line 807)
        # Processing the call arguments (line 807)
        unicode_233926 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 807, 44), 'unicode', u'font descriptor')
        # Processing the call keyword arguments (line 807)
        kwargs_233927 = {}
        # Getting the type of 'self' (line 807)
        self_233924 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 807, 25), 'self', False)
        # Obtaining the member 'reserveObject' of a type (line 807)
        reserveObject_233925 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 807, 25), self_233924, 'reserveObject')
        # Calling reserveObject(args, kwargs) (line 807)
        reserveObject_call_result_233928 = invoke(stypy.reporting.localization.Localization(__file__, 807, 25), reserveObject_233925, *[unicode_233926], **kwargs_233927)
        
        # Assigning a type to the variable 'fontdescObject' (line 807)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 807, 8), 'fontdescObject', reserveObject_call_result_233928)
        
        # Assigning a Call to a Name (line 808):
        
        # Assigning a Call to a Name (line 808):
        
        # Call to reserveObject(...): (line 808)
        # Processing the call arguments (line 808)
        unicode_233931 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 808, 44), 'unicode', u'font file')
        # Processing the call keyword arguments (line 808)
        kwargs_233932 = {}
        # Getting the type of 'self' (line 808)
        self_233929 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 808, 25), 'self', False)
        # Obtaining the member 'reserveObject' of a type (line 808)
        reserveObject_233930 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 808, 25), self_233929, 'reserveObject')
        # Calling reserveObject(args, kwargs) (line 808)
        reserveObject_call_result_233933 = invoke(stypy.reporting.localization.Localization(__file__, 808, 25), reserveObject_233930, *[unicode_233931], **kwargs_233932)
        
        # Assigning a type to the variable 'fontfileObject' (line 808)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 808, 8), 'fontfileObject', reserveObject_call_result_233933)
        
        # Assigning a Subscript to a Name (line 810):
        
        # Assigning a Subscript to a Name (line 810):
        
        # Obtaining the type of the subscript
        unicode_233934 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 810, 35), 'unicode', u'ItalicAngle')
        # Getting the type of 't1font' (line 810)
        t1font_233935 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 810, 23), 't1font')
        # Obtaining the member 'prop' of a type (line 810)
        prop_233936 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 810, 23), t1font_233935, 'prop')
        # Obtaining the member '__getitem__' of a type (line 810)
        getitem___233937 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 810, 23), prop_233936, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 810)
        subscript_call_result_233938 = invoke(stypy.reporting.localization.Localization(__file__, 810, 23), getitem___233937, unicode_233934)
        
        # Assigning a type to the variable 'italic_angle' (line 810)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 810, 8), 'italic_angle', subscript_call_result_233938)
        
        # Assigning a Subscript to a Name (line 811):
        
        # Assigning a Subscript to a Name (line 811):
        
        # Obtaining the type of the subscript
        unicode_233939 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 811, 34), 'unicode', u'isFixedPitch')
        # Getting the type of 't1font' (line 811)
        t1font_233940 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 811, 22), 't1font')
        # Obtaining the member 'prop' of a type (line 811)
        prop_233941 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 811, 22), t1font_233940, 'prop')
        # Obtaining the member '__getitem__' of a type (line 811)
        getitem___233942 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 811, 22), prop_233941, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 811)
        subscript_call_result_233943 = invoke(stypy.reporting.localization.Localization(__file__, 811, 22), getitem___233942, unicode_233939)
        
        # Assigning a type to the variable 'fixed_pitch' (line 811)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 811, 8), 'fixed_pitch', subscript_call_result_233943)
        
        # Assigning a Num to a Name (line 813):
        
        # Assigning a Num to a Name (line 813):
        int_233944 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 813, 16), 'int')
        # Assigning a type to the variable 'flags' (line 813)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 813, 8), 'flags', int_233944)
        
        # Getting the type of 'fixed_pitch' (line 815)
        fixed_pitch_233945 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 815, 11), 'fixed_pitch')
        # Testing the type of an if condition (line 815)
        if_condition_233946 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 815, 8), fixed_pitch_233945)
        # Assigning a type to the variable 'if_condition_233946' (line 815)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 815, 8), 'if_condition_233946', if_condition_233946)
        # SSA begins for if statement (line 815)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'flags' (line 816)
        flags_233947 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 816, 12), 'flags')
        int_233948 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 816, 21), 'int')
        int_233949 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 816, 26), 'int')
        # Applying the binary operator '<<' (line 816)
        result_lshift_233950 = python_operator(stypy.reporting.localization.Localization(__file__, 816, 21), '<<', int_233948, int_233949)
        
        # Applying the binary operator '|=' (line 816)
        result_ior_233951 = python_operator(stypy.reporting.localization.Localization(__file__, 816, 12), '|=', flags_233947, result_lshift_233950)
        # Assigning a type to the variable 'flags' (line 816)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 816, 12), 'flags', result_ior_233951)
        
        # SSA join for if statement (line 815)
        module_type_store = module_type_store.join_ssa_context()
        
        
        int_233952 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 818, 11), 'int')
        # Testing the type of an if condition (line 818)
        if_condition_233953 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 818, 8), int_233952)
        # Assigning a type to the variable 'if_condition_233953' (line 818)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 818, 8), 'if_condition_233953', if_condition_233953)
        # SSA begins for if statement (line 818)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'flags' (line 819)
        flags_233954 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 819, 12), 'flags')
        int_233955 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 819, 21), 'int')
        int_233956 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 819, 26), 'int')
        # Applying the binary operator '<<' (line 819)
        result_lshift_233957 = python_operator(stypy.reporting.localization.Localization(__file__, 819, 21), '<<', int_233955, int_233956)
        
        # Applying the binary operator '|=' (line 819)
        result_ior_233958 = python_operator(stypy.reporting.localization.Localization(__file__, 819, 12), '|=', flags_233954, result_lshift_233957)
        # Assigning a type to the variable 'flags' (line 819)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 819, 12), 'flags', result_ior_233958)
        
        # SSA join for if statement (line 818)
        module_type_store = module_type_store.join_ssa_context()
        
        
        int_233959 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 821, 11), 'int')
        # Testing the type of an if condition (line 821)
        if_condition_233960 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 821, 8), int_233959)
        # Assigning a type to the variable 'if_condition_233960' (line 821)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 821, 8), 'if_condition_233960', if_condition_233960)
        # SSA begins for if statement (line 821)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'flags' (line 822)
        flags_233961 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 822, 12), 'flags')
        int_233962 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 822, 21), 'int')
        int_233963 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 822, 26), 'int')
        # Applying the binary operator '<<' (line 822)
        result_lshift_233964 = python_operator(stypy.reporting.localization.Localization(__file__, 822, 21), '<<', int_233962, int_233963)
        
        # Applying the binary operator '|=' (line 822)
        result_ior_233965 = python_operator(stypy.reporting.localization.Localization(__file__, 822, 12), '|=', flags_233961, result_lshift_233964)
        # Assigning a type to the variable 'flags' (line 822)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 822, 12), 'flags', result_ior_233965)
        
        # SSA branch for the else part of an if statement (line 821)
        module_type_store.open_ssa_branch('else')
        
        # Getting the type of 'flags' (line 825)
        flags_233966 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 825, 12), 'flags')
        int_233967 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 825, 21), 'int')
        int_233968 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 825, 26), 'int')
        # Applying the binary operator '<<' (line 825)
        result_lshift_233969 = python_operator(stypy.reporting.localization.Localization(__file__, 825, 21), '<<', int_233967, int_233968)
        
        # Applying the binary operator '|=' (line 825)
        result_ior_233970 = python_operator(stypy.reporting.localization.Localization(__file__, 825, 12), '|=', flags_233966, result_lshift_233969)
        # Assigning a type to the variable 'flags' (line 825)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 825, 12), 'flags', result_ior_233970)
        
        # SSA join for if statement (line 821)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'italic_angle' (line 827)
        italic_angle_233971 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 827, 11), 'italic_angle')
        # Testing the type of an if condition (line 827)
        if_condition_233972 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 827, 8), italic_angle_233971)
        # Assigning a type to the variable 'if_condition_233972' (line 827)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 827, 8), 'if_condition_233972', if_condition_233972)
        # SSA begins for if statement (line 827)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'flags' (line 828)
        flags_233973 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 828, 12), 'flags')
        int_233974 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 828, 21), 'int')
        int_233975 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 828, 26), 'int')
        # Applying the binary operator '<<' (line 828)
        result_lshift_233976 = python_operator(stypy.reporting.localization.Localization(__file__, 828, 21), '<<', int_233974, int_233975)
        
        # Applying the binary operator '|=' (line 828)
        result_ior_233977 = python_operator(stypy.reporting.localization.Localization(__file__, 828, 12), '|=', flags_233973, result_lshift_233976)
        # Assigning a type to the variable 'flags' (line 828)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 828, 12), 'flags', result_ior_233977)
        
        # SSA join for if statement (line 827)
        module_type_store = module_type_store.join_ssa_context()
        
        
        int_233978 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 830, 11), 'int')
        # Testing the type of an if condition (line 830)
        if_condition_233979 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 830, 8), int_233978)
        # Assigning a type to the variable 'if_condition_233979' (line 830)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 830, 8), 'if_condition_233979', if_condition_233979)
        # SSA begins for if statement (line 830)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'flags' (line 831)
        flags_233980 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 831, 12), 'flags')
        int_233981 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 831, 21), 'int')
        int_233982 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 831, 26), 'int')
        # Applying the binary operator '<<' (line 831)
        result_lshift_233983 = python_operator(stypy.reporting.localization.Localization(__file__, 831, 21), '<<', int_233981, int_233982)
        
        # Applying the binary operator '|=' (line 831)
        result_ior_233984 = python_operator(stypy.reporting.localization.Localization(__file__, 831, 12), '|=', flags_233980, result_lshift_233983)
        # Assigning a type to the variable 'flags' (line 831)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 831, 12), 'flags', result_ior_233984)
        
        # SSA join for if statement (line 830)
        module_type_store = module_type_store.join_ssa_context()
        
        
        int_233985 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 833, 11), 'int')
        # Testing the type of an if condition (line 833)
        if_condition_233986 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 833, 8), int_233985)
        # Assigning a type to the variable 'if_condition_233986' (line 833)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 833, 8), 'if_condition_233986', if_condition_233986)
        # SSA begins for if statement (line 833)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'flags' (line 834)
        flags_233987 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 834, 12), 'flags')
        int_233988 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 834, 21), 'int')
        int_233989 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 834, 26), 'int')
        # Applying the binary operator '<<' (line 834)
        result_lshift_233990 = python_operator(stypy.reporting.localization.Localization(__file__, 834, 21), '<<', int_233988, int_233989)
        
        # Applying the binary operator '|=' (line 834)
        result_ior_233991 = python_operator(stypy.reporting.localization.Localization(__file__, 834, 12), '|=', flags_233987, result_lshift_233990)
        # Assigning a type to the variable 'flags' (line 834)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 834, 12), 'flags', result_ior_233991)
        
        # SSA join for if statement (line 833)
        module_type_store = module_type_store.join_ssa_context()
        
        
        int_233992 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 836, 11), 'int')
        # Testing the type of an if condition (line 836)
        if_condition_233993 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 836, 8), int_233992)
        # Assigning a type to the variable 'if_condition_233993' (line 836)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 836, 8), 'if_condition_233993', if_condition_233993)
        # SSA begins for if statement (line 836)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'flags' (line 837)
        flags_233994 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 837, 12), 'flags')
        int_233995 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 837, 21), 'int')
        int_233996 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 837, 26), 'int')
        # Applying the binary operator '<<' (line 837)
        result_lshift_233997 = python_operator(stypy.reporting.localization.Localization(__file__, 837, 21), '<<', int_233995, int_233996)
        
        # Applying the binary operator '|=' (line 837)
        result_ior_233998 = python_operator(stypy.reporting.localization.Localization(__file__, 837, 12), '|=', flags_233994, result_lshift_233997)
        # Assigning a type to the variable 'flags' (line 837)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 837, 12), 'flags', result_ior_233998)
        
        # SSA join for if statement (line 836)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 839):
        
        # Assigning a Call to a Name (line 839):
        
        # Call to get_font(...): (line 839)
        # Processing the call arguments (line 839)
        # Getting the type of 'fontfile' (line 839)
        fontfile_234000 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 839, 27), 'fontfile', False)
        # Processing the call keyword arguments (line 839)
        kwargs_234001 = {}
        # Getting the type of 'get_font' (line 839)
        get_font_233999 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 839, 18), 'get_font', False)
        # Calling get_font(args, kwargs) (line 839)
        get_font_call_result_234002 = invoke(stypy.reporting.localization.Localization(__file__, 839, 18), get_font_233999, *[fontfile_234000], **kwargs_234001)
        
        # Assigning a type to the variable 'ft2font' (line 839)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 839, 8), 'ft2font', get_font_call_result_234002)
        
        # Assigning a Dict to a Name (line 841):
        
        # Assigning a Dict to a Name (line 841):
        
        # Obtaining an instance of the builtin type 'dict' (line 841)
        dict_234003 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 841, 21), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 841)
        # Adding element type (key, value) (line 841)
        unicode_234004 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 842, 12), 'unicode', u'Type')
        
        # Call to Name(...): (line 842)
        # Processing the call arguments (line 842)
        unicode_234006 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 842, 32), 'unicode', u'FontDescriptor')
        # Processing the call keyword arguments (line 842)
        kwargs_234007 = {}
        # Getting the type of 'Name' (line 842)
        Name_234005 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 842, 27), 'Name', False)
        # Calling Name(args, kwargs) (line 842)
        Name_call_result_234008 = invoke(stypy.reporting.localization.Localization(__file__, 842, 27), Name_234005, *[unicode_234006], **kwargs_234007)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 841, 21), dict_234003, (unicode_234004, Name_call_result_234008))
        # Adding element type (key, value) (line 841)
        unicode_234009 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 843, 12), 'unicode', u'FontName')
        
        # Call to Name(...): (line 843)
        # Processing the call arguments (line 843)
        
        # Obtaining the type of the subscript
        unicode_234011 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 843, 44), 'unicode', u'FontName')
        # Getting the type of 't1font' (line 843)
        t1font_234012 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 843, 32), 't1font', False)
        # Obtaining the member 'prop' of a type (line 843)
        prop_234013 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 843, 32), t1font_234012, 'prop')
        # Obtaining the member '__getitem__' of a type (line 843)
        getitem___234014 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 843, 32), prop_234013, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 843)
        subscript_call_result_234015 = invoke(stypy.reporting.localization.Localization(__file__, 843, 32), getitem___234014, unicode_234011)
        
        # Processing the call keyword arguments (line 843)
        kwargs_234016 = {}
        # Getting the type of 'Name' (line 843)
        Name_234010 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 843, 27), 'Name', False)
        # Calling Name(args, kwargs) (line 843)
        Name_call_result_234017 = invoke(stypy.reporting.localization.Localization(__file__, 843, 27), Name_234010, *[subscript_call_result_234015], **kwargs_234016)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 841, 21), dict_234003, (unicode_234009, Name_call_result_234017))
        # Adding element type (key, value) (line 841)
        unicode_234018 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 844, 12), 'unicode', u'Flags')
        # Getting the type of 'flags' (line 844)
        flags_234019 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 844, 27), 'flags')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 841, 21), dict_234003, (unicode_234018, flags_234019))
        # Adding element type (key, value) (line 841)
        unicode_234020 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 845, 12), 'unicode', u'FontBBox')
        # Getting the type of 'ft2font' (line 845)
        ft2font_234021 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 845, 27), 'ft2font')
        # Obtaining the member 'bbox' of a type (line 845)
        bbox_234022 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 845, 27), ft2font_234021, 'bbox')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 841, 21), dict_234003, (unicode_234020, bbox_234022))
        # Adding element type (key, value) (line 841)
        unicode_234023 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 846, 12), 'unicode', u'ItalicAngle')
        # Getting the type of 'italic_angle' (line 846)
        italic_angle_234024 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 846, 27), 'italic_angle')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 841, 21), dict_234003, (unicode_234023, italic_angle_234024))
        # Adding element type (key, value) (line 841)
        unicode_234025 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 847, 12), 'unicode', u'Ascent')
        # Getting the type of 'ft2font' (line 847)
        ft2font_234026 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 847, 27), 'ft2font')
        # Obtaining the member 'ascender' of a type (line 847)
        ascender_234027 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 847, 27), ft2font_234026, 'ascender')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 841, 21), dict_234003, (unicode_234025, ascender_234027))
        # Adding element type (key, value) (line 841)
        unicode_234028 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 848, 12), 'unicode', u'Descent')
        # Getting the type of 'ft2font' (line 848)
        ft2font_234029 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 848, 27), 'ft2font')
        # Obtaining the member 'descender' of a type (line 848)
        descender_234030 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 848, 27), ft2font_234029, 'descender')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 841, 21), dict_234003, (unicode_234028, descender_234030))
        # Adding element type (key, value) (line 841)
        unicode_234031 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 849, 12), 'unicode', u'CapHeight')
        int_234032 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 849, 27), 'int')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 841, 21), dict_234003, (unicode_234031, int_234032))
        # Adding element type (key, value) (line 841)
        unicode_234033 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 850, 12), 'unicode', u'XHeight')
        int_234034 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 850, 27), 'int')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 841, 21), dict_234003, (unicode_234033, int_234034))
        # Adding element type (key, value) (line 841)
        unicode_234035 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 851, 12), 'unicode', u'FontFile')
        # Getting the type of 'fontfileObject' (line 851)
        fontfileObject_234036 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 851, 27), 'fontfileObject')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 841, 21), dict_234003, (unicode_234035, fontfileObject_234036))
        # Adding element type (key, value) (line 841)
        unicode_234037 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 852, 12), 'unicode', u'FontFamily')
        
        # Obtaining the type of the subscript
        unicode_234038 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 852, 39), 'unicode', u'FamilyName')
        # Getting the type of 't1font' (line 852)
        t1font_234039 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 852, 27), 't1font')
        # Obtaining the member 'prop' of a type (line 852)
        prop_234040 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 852, 27), t1font_234039, 'prop')
        # Obtaining the member '__getitem__' of a type (line 852)
        getitem___234041 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 852, 27), prop_234040, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 852)
        subscript_call_result_234042 = invoke(stypy.reporting.localization.Localization(__file__, 852, 27), getitem___234041, unicode_234038)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 841, 21), dict_234003, (unicode_234037, subscript_call_result_234042))
        # Adding element type (key, value) (line 841)
        unicode_234043 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 853, 12), 'unicode', u'StemV')
        int_234044 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 853, 27), 'int')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 841, 21), dict_234003, (unicode_234043, int_234044))
        
        # Assigning a type to the variable 'descriptor' (line 841)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 841, 8), 'descriptor', dict_234003)
        
        # Call to writeObject(...): (line 858)
        # Processing the call arguments (line 858)
        # Getting the type of 'fontdescObject' (line 858)
        fontdescObject_234047 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 858, 25), 'fontdescObject', False)
        # Getting the type of 'descriptor' (line 858)
        descriptor_234048 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 858, 41), 'descriptor', False)
        # Processing the call keyword arguments (line 858)
        kwargs_234049 = {}
        # Getting the type of 'self' (line 858)
        self_234045 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 858, 8), 'self', False)
        # Obtaining the member 'writeObject' of a type (line 858)
        writeObject_234046 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 858, 8), self_234045, 'writeObject')
        # Calling writeObject(args, kwargs) (line 858)
        writeObject_call_result_234050 = invoke(stypy.reporting.localization.Localization(__file__, 858, 8), writeObject_234046, *[fontdescObject_234047, descriptor_234048], **kwargs_234049)
        
        
        # Call to beginStream(...): (line 860)
        # Processing the call arguments (line 860)
        # Getting the type of 'fontfileObject' (line 860)
        fontfileObject_234053 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 860, 25), 'fontfileObject', False)
        # Obtaining the member 'id' of a type (line 860)
        id_234054 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 860, 25), fontfileObject_234053, 'id')
        # Getting the type of 'None' (line 860)
        None_234055 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 860, 44), 'None', False)
        
        # Obtaining an instance of the builtin type 'dict' (line 861)
        dict_234056 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 861, 25), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 861)
        # Adding element type (key, value) (line 861)
        unicode_234057 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 861, 26), 'unicode', u'Length1')
        
        # Call to len(...): (line 861)
        # Processing the call arguments (line 861)
        
        # Obtaining the type of the subscript
        int_234059 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 861, 54), 'int')
        # Getting the type of 't1font' (line 861)
        t1font_234060 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 861, 41), 't1font', False)
        # Obtaining the member 'parts' of a type (line 861)
        parts_234061 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 861, 41), t1font_234060, 'parts')
        # Obtaining the member '__getitem__' of a type (line 861)
        getitem___234062 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 861, 41), parts_234061, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 861)
        subscript_call_result_234063 = invoke(stypy.reporting.localization.Localization(__file__, 861, 41), getitem___234062, int_234059)
        
        # Processing the call keyword arguments (line 861)
        kwargs_234064 = {}
        # Getting the type of 'len' (line 861)
        len_234058 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 861, 37), 'len', False)
        # Calling len(args, kwargs) (line 861)
        len_call_result_234065 = invoke(stypy.reporting.localization.Localization(__file__, 861, 37), len_234058, *[subscript_call_result_234063], **kwargs_234064)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 861, 25), dict_234056, (unicode_234057, len_call_result_234065))
        # Adding element type (key, value) (line 861)
        unicode_234066 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 862, 26), 'unicode', u'Length2')
        
        # Call to len(...): (line 862)
        # Processing the call arguments (line 862)
        
        # Obtaining the type of the subscript
        int_234068 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 862, 54), 'int')
        # Getting the type of 't1font' (line 862)
        t1font_234069 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 862, 41), 't1font', False)
        # Obtaining the member 'parts' of a type (line 862)
        parts_234070 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 862, 41), t1font_234069, 'parts')
        # Obtaining the member '__getitem__' of a type (line 862)
        getitem___234071 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 862, 41), parts_234070, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 862)
        subscript_call_result_234072 = invoke(stypy.reporting.localization.Localization(__file__, 862, 41), getitem___234071, int_234068)
        
        # Processing the call keyword arguments (line 862)
        kwargs_234073 = {}
        # Getting the type of 'len' (line 862)
        len_234067 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 862, 37), 'len', False)
        # Calling len(args, kwargs) (line 862)
        len_call_result_234074 = invoke(stypy.reporting.localization.Localization(__file__, 862, 37), len_234067, *[subscript_call_result_234072], **kwargs_234073)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 861, 25), dict_234056, (unicode_234066, len_call_result_234074))
        # Adding element type (key, value) (line 861)
        unicode_234075 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 863, 26), 'unicode', u'Length3')
        int_234076 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 863, 37), 'int')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 861, 25), dict_234056, (unicode_234075, int_234076))
        
        # Processing the call keyword arguments (line 860)
        kwargs_234077 = {}
        # Getting the type of 'self' (line 860)
        self_234051 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 860, 8), 'self', False)
        # Obtaining the member 'beginStream' of a type (line 860)
        beginStream_234052 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 860, 8), self_234051, 'beginStream')
        # Calling beginStream(args, kwargs) (line 860)
        beginStream_call_result_234078 = invoke(stypy.reporting.localization.Localization(__file__, 860, 8), beginStream_234052, *[id_234054, None_234055, dict_234056], **kwargs_234077)
        
        
        # Call to write(...): (line 864)
        # Processing the call arguments (line 864)
        
        # Obtaining the type of the subscript
        int_234082 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 864, 46), 'int')
        # Getting the type of 't1font' (line 864)
        t1font_234083 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 864, 33), 't1font', False)
        # Obtaining the member 'parts' of a type (line 864)
        parts_234084 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 864, 33), t1font_234083, 'parts')
        # Obtaining the member '__getitem__' of a type (line 864)
        getitem___234085 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 864, 33), parts_234084, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 864)
        subscript_call_result_234086 = invoke(stypy.reporting.localization.Localization(__file__, 864, 33), getitem___234085, int_234082)
        
        # Processing the call keyword arguments (line 864)
        kwargs_234087 = {}
        # Getting the type of 'self' (line 864)
        self_234079 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 864, 8), 'self', False)
        # Obtaining the member 'currentstream' of a type (line 864)
        currentstream_234080 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 864, 8), self_234079, 'currentstream')
        # Obtaining the member 'write' of a type (line 864)
        write_234081 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 864, 8), currentstream_234080, 'write')
        # Calling write(args, kwargs) (line 864)
        write_call_result_234088 = invoke(stypy.reporting.localization.Localization(__file__, 864, 8), write_234081, *[subscript_call_result_234086], **kwargs_234087)
        
        
        # Call to write(...): (line 865)
        # Processing the call arguments (line 865)
        
        # Obtaining the type of the subscript
        int_234092 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 865, 46), 'int')
        # Getting the type of 't1font' (line 865)
        t1font_234093 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 865, 33), 't1font', False)
        # Obtaining the member 'parts' of a type (line 865)
        parts_234094 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 865, 33), t1font_234093, 'parts')
        # Obtaining the member '__getitem__' of a type (line 865)
        getitem___234095 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 865, 33), parts_234094, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 865)
        subscript_call_result_234096 = invoke(stypy.reporting.localization.Localization(__file__, 865, 33), getitem___234095, int_234092)
        
        # Processing the call keyword arguments (line 865)
        kwargs_234097 = {}
        # Getting the type of 'self' (line 865)
        self_234089 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 865, 8), 'self', False)
        # Obtaining the member 'currentstream' of a type (line 865)
        currentstream_234090 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 865, 8), self_234089, 'currentstream')
        # Obtaining the member 'write' of a type (line 865)
        write_234091 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 865, 8), currentstream_234090, 'write')
        # Calling write(args, kwargs) (line 865)
        write_call_result_234098 = invoke(stypy.reporting.localization.Localization(__file__, 865, 8), write_234091, *[subscript_call_result_234096], **kwargs_234097)
        
        
        # Call to endStream(...): (line 866)
        # Processing the call keyword arguments (line 866)
        kwargs_234101 = {}
        # Getting the type of 'self' (line 866)
        self_234099 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 866, 8), 'self', False)
        # Obtaining the member 'endStream' of a type (line 866)
        endStream_234100 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 866, 8), self_234099, 'endStream')
        # Calling endStream(args, kwargs) (line 866)
        endStream_call_result_234102 = invoke(stypy.reporting.localization.Localization(__file__, 866, 8), endStream_234100, *[], **kwargs_234101)
        
        # Getting the type of 'fontdescObject' (line 868)
        fontdescObject_234103 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 868, 15), 'fontdescObject')
        # Assigning a type to the variable 'stypy_return_type' (line 868)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 868, 8), 'stypy_return_type', fontdescObject_234103)
        
        # ################# End of 'createType1Descriptor(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'createType1Descriptor' in the type store
        # Getting the type of 'stypy_return_type' (line 804)
        stypy_return_type_234104 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 804, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_234104)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'createType1Descriptor'
        return stypy_return_type_234104


    @norecursion
    def _get_xobject_symbol_name(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_get_xobject_symbol_name'
        module_type_store = module_type_store.open_function_context('_get_xobject_symbol_name', 870, 4, False)
        # Assigning a type to the variable 'self' (line 871)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 871, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        PdfFile._get_xobject_symbol_name.__dict__.__setitem__('stypy_localization', localization)
        PdfFile._get_xobject_symbol_name.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        PdfFile._get_xobject_symbol_name.__dict__.__setitem__('stypy_type_store', module_type_store)
        PdfFile._get_xobject_symbol_name.__dict__.__setitem__('stypy_function_name', 'PdfFile._get_xobject_symbol_name')
        PdfFile._get_xobject_symbol_name.__dict__.__setitem__('stypy_param_names_list', ['filename', 'symbol_name'])
        PdfFile._get_xobject_symbol_name.__dict__.__setitem__('stypy_varargs_param_name', None)
        PdfFile._get_xobject_symbol_name.__dict__.__setitem__('stypy_kwargs_param_name', None)
        PdfFile._get_xobject_symbol_name.__dict__.__setitem__('stypy_call_defaults', defaults)
        PdfFile._get_xobject_symbol_name.__dict__.__setitem__('stypy_call_varargs', varargs)
        PdfFile._get_xobject_symbol_name.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        PdfFile._get_xobject_symbol_name.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'PdfFile._get_xobject_symbol_name', ['filename', 'symbol_name'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_get_xobject_symbol_name', localization, ['filename', 'symbol_name'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_get_xobject_symbol_name(...)' code ##################

        unicode_234105 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 871, 15), 'unicode', u'%s-%s')
        
        # Obtaining an instance of the builtin type 'tuple' (line 872)
        tuple_234106 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 872, 12), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 872)
        # Adding element type (line 872)
        
        # Obtaining the type of the subscript
        int_234107 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 872, 57), 'int')
        
        # Call to splitext(...): (line 872)
        # Processing the call arguments (line 872)
        
        # Call to basename(...): (line 872)
        # Processing the call arguments (line 872)
        # Getting the type of 'filename' (line 872)
        filename_234114 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 872, 46), 'filename', False)
        # Processing the call keyword arguments (line 872)
        kwargs_234115 = {}
        # Getting the type of 'os' (line 872)
        os_234111 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 872, 29), 'os', False)
        # Obtaining the member 'path' of a type (line 872)
        path_234112 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 872, 29), os_234111, 'path')
        # Obtaining the member 'basename' of a type (line 872)
        basename_234113 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 872, 29), path_234112, 'basename')
        # Calling basename(args, kwargs) (line 872)
        basename_call_result_234116 = invoke(stypy.reporting.localization.Localization(__file__, 872, 29), basename_234113, *[filename_234114], **kwargs_234115)
        
        # Processing the call keyword arguments (line 872)
        kwargs_234117 = {}
        # Getting the type of 'os' (line 872)
        os_234108 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 872, 12), 'os', False)
        # Obtaining the member 'path' of a type (line 872)
        path_234109 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 872, 12), os_234108, 'path')
        # Obtaining the member 'splitext' of a type (line 872)
        splitext_234110 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 872, 12), path_234109, 'splitext')
        # Calling splitext(args, kwargs) (line 872)
        splitext_call_result_234118 = invoke(stypy.reporting.localization.Localization(__file__, 872, 12), splitext_234110, *[basename_call_result_234116], **kwargs_234117)
        
        # Obtaining the member '__getitem__' of a type (line 872)
        getitem___234119 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 872, 12), splitext_call_result_234118, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 872)
        subscript_call_result_234120 = invoke(stypy.reporting.localization.Localization(__file__, 872, 12), getitem___234119, int_234107)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 872, 12), tuple_234106, subscript_call_result_234120)
        # Adding element type (line 872)
        # Getting the type of 'symbol_name' (line 873)
        symbol_name_234121 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 873, 12), 'symbol_name')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 872, 12), tuple_234106, symbol_name_234121)
        
        # Applying the binary operator '%' (line 871)
        result_mod_234122 = python_operator(stypy.reporting.localization.Localization(__file__, 871, 15), '%', unicode_234105, tuple_234106)
        
        # Assigning a type to the variable 'stypy_return_type' (line 871)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 871, 8), 'stypy_return_type', result_mod_234122)
        
        # ################# End of '_get_xobject_symbol_name(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_get_xobject_symbol_name' in the type store
        # Getting the type of 'stypy_return_type' (line 870)
        stypy_return_type_234123 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 870, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_234123)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_get_xobject_symbol_name'
        return stypy_return_type_234123

    
    # Assigning a Str to a Name (line 875):

    @norecursion
    def embedTTF(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'embedTTF'
        module_type_store = module_type_store.open_function_context('embedTTF', 896, 4, False)
        # Assigning a type to the variable 'self' (line 897)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 897, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        PdfFile.embedTTF.__dict__.__setitem__('stypy_localization', localization)
        PdfFile.embedTTF.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        PdfFile.embedTTF.__dict__.__setitem__('stypy_type_store', module_type_store)
        PdfFile.embedTTF.__dict__.__setitem__('stypy_function_name', 'PdfFile.embedTTF')
        PdfFile.embedTTF.__dict__.__setitem__('stypy_param_names_list', ['filename', 'characters'])
        PdfFile.embedTTF.__dict__.__setitem__('stypy_varargs_param_name', None)
        PdfFile.embedTTF.__dict__.__setitem__('stypy_kwargs_param_name', None)
        PdfFile.embedTTF.__dict__.__setitem__('stypy_call_defaults', defaults)
        PdfFile.embedTTF.__dict__.__setitem__('stypy_call_varargs', varargs)
        PdfFile.embedTTF.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        PdfFile.embedTTF.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'PdfFile.embedTTF', ['filename', 'characters'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'embedTTF', localization, ['filename', 'characters'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'embedTTF(...)' code ##################

        unicode_234124 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 897, 8), 'unicode', u'Embed the TTF font from the named file into the document.')
        
        # Assigning a Call to a Name (line 899):
        
        # Assigning a Call to a Name (line 899):
        
        # Call to get_font(...): (line 899)
        # Processing the call arguments (line 899)
        # Getting the type of 'filename' (line 899)
        filename_234126 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 899, 24), 'filename', False)
        # Processing the call keyword arguments (line 899)
        kwargs_234127 = {}
        # Getting the type of 'get_font' (line 899)
        get_font_234125 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 899, 15), 'get_font', False)
        # Calling get_font(args, kwargs) (line 899)
        get_font_call_result_234128 = invoke(stypy.reporting.localization.Localization(__file__, 899, 15), get_font_234125, *[filename_234126], **kwargs_234127)
        
        # Assigning a type to the variable 'font' (line 899)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 899, 8), 'font', get_font_call_result_234128)
        
        # Assigning a Subscript to a Name (line 900):
        
        # Assigning a Subscript to a Name (line 900):
        
        # Obtaining the type of the subscript
        unicode_234129 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 900, 28), 'unicode', u'pdf.fonttype')
        # Getting the type of 'rcParams' (line 900)
        rcParams_234130 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 900, 19), 'rcParams')
        # Obtaining the member '__getitem__' of a type (line 900)
        getitem___234131 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 900, 19), rcParams_234130, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 900)
        subscript_call_result_234132 = invoke(stypy.reporting.localization.Localization(__file__, 900, 19), getitem___234131, unicode_234129)
        
        # Assigning a type to the variable 'fonttype' (line 900)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 900, 8), 'fonttype', subscript_call_result_234132)

        @norecursion
        def cvt(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            # Getting the type of 'font' (line 902)
            font_234133 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 902, 28), 'font')
            # Obtaining the member 'units_per_EM' of a type (line 902)
            units_per_EM_234134 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 902, 28), font_234133, 'units_per_EM')
            # Getting the type of 'True' (line 902)
            True_234135 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 902, 55), 'True')
            defaults = [units_per_EM_234134, True_234135]
            # Create a new context for function 'cvt'
            module_type_store = module_type_store.open_function_context('cvt', 902, 8, False)
            
            # Passed parameters checking function
            cvt.stypy_localization = localization
            cvt.stypy_type_of_self = None
            cvt.stypy_type_store = module_type_store
            cvt.stypy_function_name = 'cvt'
            cvt.stypy_param_names_list = ['length', 'upe', 'nearest']
            cvt.stypy_varargs_param_name = None
            cvt.stypy_kwargs_param_name = None
            cvt.stypy_call_defaults = defaults
            cvt.stypy_call_varargs = varargs
            cvt.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'cvt', ['length', 'upe', 'nearest'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'cvt', localization, ['length', 'upe', 'nearest'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'cvt(...)' code ##################

            unicode_234136 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 903, 12), 'unicode', u'Convert font coordinates to PDF glyph coordinates')
            
            # Assigning a BinOp to a Name (line 904):
            
            # Assigning a BinOp to a Name (line 904):
            # Getting the type of 'length' (line 904)
            length_234137 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 904, 20), 'length')
            # Getting the type of 'upe' (line 904)
            upe_234138 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 904, 29), 'upe')
            # Applying the binary operator 'div' (line 904)
            result_div_234139 = python_operator(stypy.reporting.localization.Localization(__file__, 904, 20), 'div', length_234137, upe_234138)
            
            int_234140 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 904, 35), 'int')
            # Applying the binary operator '*' (line 904)
            result_mul_234141 = python_operator(stypy.reporting.localization.Localization(__file__, 904, 33), '*', result_div_234139, int_234140)
            
            # Assigning a type to the variable 'value' (line 904)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 904, 12), 'value', result_mul_234141)
            
            # Getting the type of 'nearest' (line 905)
            nearest_234142 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 905, 15), 'nearest')
            # Testing the type of an if condition (line 905)
            if_condition_234143 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 905, 12), nearest_234142)
            # Assigning a type to the variable 'if_condition_234143' (line 905)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 905, 12), 'if_condition_234143', if_condition_234143)
            # SSA begins for if statement (line 905)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Call to round(...): (line 906)
            # Processing the call arguments (line 906)
            # Getting the type of 'value' (line 906)
            value_234146 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 906, 32), 'value', False)
            # Processing the call keyword arguments (line 906)
            kwargs_234147 = {}
            # Getting the type of 'np' (line 906)
            np_234144 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 906, 23), 'np', False)
            # Obtaining the member 'round' of a type (line 906)
            round_234145 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 906, 23), np_234144, 'round')
            # Calling round(args, kwargs) (line 906)
            round_call_result_234148 = invoke(stypy.reporting.localization.Localization(__file__, 906, 23), round_234145, *[value_234146], **kwargs_234147)
            
            # Assigning a type to the variable 'stypy_return_type' (line 906)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 906, 16), 'stypy_return_type', round_call_result_234148)
            # SSA join for if statement (line 905)
            module_type_store = module_type_store.join_ssa_context()
            
            
            
            # Getting the type of 'value' (line 909)
            value_234149 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 909, 15), 'value')
            int_234150 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 909, 23), 'int')
            # Applying the binary operator '<' (line 909)
            result_lt_234151 = python_operator(stypy.reporting.localization.Localization(__file__, 909, 15), '<', value_234149, int_234150)
            
            # Testing the type of an if condition (line 909)
            if_condition_234152 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 909, 12), result_lt_234151)
            # Assigning a type to the variable 'if_condition_234152' (line 909)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 909, 12), 'if_condition_234152', if_condition_234152)
            # SSA begins for if statement (line 909)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Call to floor(...): (line 910)
            # Processing the call arguments (line 910)
            # Getting the type of 'value' (line 910)
            value_234154 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 910, 29), 'value', False)
            # Processing the call keyword arguments (line 910)
            kwargs_234155 = {}
            # Getting the type of 'floor' (line 910)
            floor_234153 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 910, 23), 'floor', False)
            # Calling floor(args, kwargs) (line 910)
            floor_call_result_234156 = invoke(stypy.reporting.localization.Localization(__file__, 910, 23), floor_234153, *[value_234154], **kwargs_234155)
            
            # Assigning a type to the variable 'stypy_return_type' (line 910)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 910, 16), 'stypy_return_type', floor_call_result_234156)
            # SSA branch for the else part of an if statement (line 909)
            module_type_store.open_ssa_branch('else')
            
            # Call to ceil(...): (line 912)
            # Processing the call arguments (line 912)
            # Getting the type of 'value' (line 912)
            value_234158 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 912, 28), 'value', False)
            # Processing the call keyword arguments (line 912)
            kwargs_234159 = {}
            # Getting the type of 'ceil' (line 912)
            ceil_234157 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 912, 23), 'ceil', False)
            # Calling ceil(args, kwargs) (line 912)
            ceil_call_result_234160 = invoke(stypy.reporting.localization.Localization(__file__, 912, 23), ceil_234157, *[value_234158], **kwargs_234159)
            
            # Assigning a type to the variable 'stypy_return_type' (line 912)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 912, 16), 'stypy_return_type', ceil_call_result_234160)
            # SSA join for if statement (line 909)
            module_type_store = module_type_store.join_ssa_context()
            
            
            # ################# End of 'cvt(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'cvt' in the type store
            # Getting the type of 'stypy_return_type' (line 902)
            stypy_return_type_234161 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 902, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_234161)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'cvt'
            return stypy_return_type_234161

        # Assigning a type to the variable 'cvt' (line 902)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 902, 8), 'cvt', cvt)

        @norecursion
        def embedTTFType3(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'embedTTFType3'
            module_type_store = module_type_store.open_function_context('embedTTFType3', 914, 8, False)
            
            # Passed parameters checking function
            embedTTFType3.stypy_localization = localization
            embedTTFType3.stypy_type_of_self = None
            embedTTFType3.stypy_type_store = module_type_store
            embedTTFType3.stypy_function_name = 'embedTTFType3'
            embedTTFType3.stypy_param_names_list = ['font', 'characters', 'descriptor']
            embedTTFType3.stypy_varargs_param_name = None
            embedTTFType3.stypy_kwargs_param_name = None
            embedTTFType3.stypy_call_defaults = defaults
            embedTTFType3.stypy_call_varargs = varargs
            embedTTFType3.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'embedTTFType3', ['font', 'characters', 'descriptor'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'embedTTFType3', localization, ['font', 'characters', 'descriptor'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'embedTTFType3(...)' code ##################

            unicode_234162 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 915, 12), 'unicode', u'The Type 3-specific part of embedding a Truetype font')
            
            # Assigning a Call to a Name (line 916):
            
            # Assigning a Call to a Name (line 916):
            
            # Call to reserveObject(...): (line 916)
            # Processing the call arguments (line 916)
            unicode_234165 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 916, 46), 'unicode', u'font widths')
            # Processing the call keyword arguments (line 916)
            kwargs_234166 = {}
            # Getting the type of 'self' (line 916)
            self_234163 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 916, 27), 'self', False)
            # Obtaining the member 'reserveObject' of a type (line 916)
            reserveObject_234164 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 916, 27), self_234163, 'reserveObject')
            # Calling reserveObject(args, kwargs) (line 916)
            reserveObject_call_result_234167 = invoke(stypy.reporting.localization.Localization(__file__, 916, 27), reserveObject_234164, *[unicode_234165], **kwargs_234166)
            
            # Assigning a type to the variable 'widthsObject' (line 916)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 916, 12), 'widthsObject', reserveObject_call_result_234167)
            
            # Assigning a Call to a Name (line 917):
            
            # Assigning a Call to a Name (line 917):
            
            # Call to reserveObject(...): (line 917)
            # Processing the call arguments (line 917)
            unicode_234170 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 917, 48), 'unicode', u'font descriptor')
            # Processing the call keyword arguments (line 917)
            kwargs_234171 = {}
            # Getting the type of 'self' (line 917)
            self_234168 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 917, 29), 'self', False)
            # Obtaining the member 'reserveObject' of a type (line 917)
            reserveObject_234169 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 917, 29), self_234168, 'reserveObject')
            # Calling reserveObject(args, kwargs) (line 917)
            reserveObject_call_result_234172 = invoke(stypy.reporting.localization.Localization(__file__, 917, 29), reserveObject_234169, *[unicode_234170], **kwargs_234171)
            
            # Assigning a type to the variable 'fontdescObject' (line 917)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 917, 12), 'fontdescObject', reserveObject_call_result_234172)
            
            # Assigning a Call to a Name (line 918):
            
            # Assigning a Call to a Name (line 918):
            
            # Call to reserveObject(...): (line 918)
            # Processing the call arguments (line 918)
            unicode_234175 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 918, 48), 'unicode', u'font dictionary')
            # Processing the call keyword arguments (line 918)
            kwargs_234176 = {}
            # Getting the type of 'self' (line 918)
            self_234173 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 918, 29), 'self', False)
            # Obtaining the member 'reserveObject' of a type (line 918)
            reserveObject_234174 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 918, 29), self_234173, 'reserveObject')
            # Calling reserveObject(args, kwargs) (line 918)
            reserveObject_call_result_234177 = invoke(stypy.reporting.localization.Localization(__file__, 918, 29), reserveObject_234174, *[unicode_234175], **kwargs_234176)
            
            # Assigning a type to the variable 'fontdictObject' (line 918)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 918, 12), 'fontdictObject', reserveObject_call_result_234177)
            
            # Assigning a Call to a Name (line 919):
            
            # Assigning a Call to a Name (line 919):
            
            # Call to reserveObject(...): (line 919)
            # Processing the call arguments (line 919)
            unicode_234180 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 919, 49), 'unicode', u'character procs')
            # Processing the call keyword arguments (line 919)
            kwargs_234181 = {}
            # Getting the type of 'self' (line 919)
            self_234178 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 919, 30), 'self', False)
            # Obtaining the member 'reserveObject' of a type (line 919)
            reserveObject_234179 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 919, 30), self_234178, 'reserveObject')
            # Calling reserveObject(args, kwargs) (line 919)
            reserveObject_call_result_234182 = invoke(stypy.reporting.localization.Localization(__file__, 919, 30), reserveObject_234179, *[unicode_234180], **kwargs_234181)
            
            # Assigning a type to the variable 'charprocsObject' (line 919)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 919, 12), 'charprocsObject', reserveObject_call_result_234182)
            
            # Assigning a List to a Name (line 920):
            
            # Assigning a List to a Name (line 920):
            
            # Obtaining an instance of the builtin type 'list' (line 920)
            list_234183 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 920, 31), 'list')
            # Adding type elements to the builtin type 'list' instance (line 920)
            
            # Assigning a type to the variable 'differencesArray' (line 920)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 920, 12), 'differencesArray', list_234183)
            
            # Assigning a Tuple to a Tuple (line 921):
            
            # Assigning a Num to a Name (line 921):
            int_234184 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 921, 34), 'int')
            # Assigning a type to the variable 'tuple_assignment_231659' (line 921)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 921, 12), 'tuple_assignment_231659', int_234184)
            
            # Assigning a Num to a Name (line 921):
            int_234185 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 921, 37), 'int')
            # Assigning a type to the variable 'tuple_assignment_231660' (line 921)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 921, 12), 'tuple_assignment_231660', int_234185)
            
            # Assigning a Name to a Name (line 921):
            # Getting the type of 'tuple_assignment_231659' (line 921)
            tuple_assignment_231659_234186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 921, 12), 'tuple_assignment_231659')
            # Assigning a type to the variable 'firstchar' (line 921)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 921, 12), 'firstchar', tuple_assignment_231659_234186)
            
            # Assigning a Name to a Name (line 921):
            # Getting the type of 'tuple_assignment_231660' (line 921)
            tuple_assignment_231660_234187 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 921, 12), 'tuple_assignment_231660')
            # Assigning a type to the variable 'lastchar' (line 921)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 921, 23), 'lastchar', tuple_assignment_231660_234187)
            
            # Assigning a ListComp to a Name (line 922):
            
            # Assigning a ListComp to a Name (line 922):
            # Calculating list comprehension
            # Calculating comprehension expression
            # Getting the type of 'font' (line 922)
            font_234194 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 922, 51), 'font')
            # Obtaining the member 'bbox' of a type (line 922)
            bbox_234195 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 922, 51), font_234194, 'bbox')
            comprehension_234196 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 922, 20), bbox_234195)
            # Assigning a type to the variable 'x' (line 922)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 922, 20), 'x', comprehension_234196)
            
            # Call to cvt(...): (line 922)
            # Processing the call arguments (line 922)
            # Getting the type of 'x' (line 922)
            x_234189 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 922, 24), 'x', False)
            # Processing the call keyword arguments (line 922)
            # Getting the type of 'False' (line 922)
            False_234190 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 922, 35), 'False', False)
            keyword_234191 = False_234190
            kwargs_234192 = {'nearest': keyword_234191}
            # Getting the type of 'cvt' (line 922)
            cvt_234188 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 922, 20), 'cvt', False)
            # Calling cvt(args, kwargs) (line 922)
            cvt_call_result_234193 = invoke(stypy.reporting.localization.Localization(__file__, 922, 20), cvt_234188, *[x_234189], **kwargs_234192)
            
            list_234197 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 922, 20), 'list')
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 922, 20), list_234197, cvt_call_result_234193)
            # Assigning a type to the variable 'bbox' (line 922)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 922, 12), 'bbox', list_234197)
            
            # Assigning a Dict to a Name (line 924):
            
            # Assigning a Dict to a Name (line 924):
            
            # Obtaining an instance of the builtin type 'dict' (line 924)
            dict_234198 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 924, 23), 'dict')
            # Adding type elements to the builtin type 'dict' instance (line 924)
            # Adding element type (key, value) (line 924)
            unicode_234199 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 925, 16), 'unicode', u'Type')
            
            # Call to Name(...): (line 925)
            # Processing the call arguments (line 925)
            unicode_234201 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 925, 29), 'unicode', u'Font')
            # Processing the call keyword arguments (line 925)
            kwargs_234202 = {}
            # Getting the type of 'Name' (line 925)
            Name_234200 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 925, 24), 'Name', False)
            # Calling Name(args, kwargs) (line 925)
            Name_call_result_234203 = invoke(stypy.reporting.localization.Localization(__file__, 925, 24), Name_234200, *[unicode_234201], **kwargs_234202)
            
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 924, 23), dict_234198, (unicode_234199, Name_call_result_234203))
            # Adding element type (key, value) (line 924)
            unicode_234204 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 926, 16), 'unicode', u'BaseFont')
            # Getting the type of 'ps_name' (line 926)
            ps_name_234205 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 926, 28), 'ps_name')
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 924, 23), dict_234198, (unicode_234204, ps_name_234205))
            # Adding element type (key, value) (line 924)
            unicode_234206 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 927, 16), 'unicode', u'FirstChar')
            # Getting the type of 'firstchar' (line 927)
            firstchar_234207 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 927, 29), 'firstchar')
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 924, 23), dict_234198, (unicode_234206, firstchar_234207))
            # Adding element type (key, value) (line 924)
            unicode_234208 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 928, 16), 'unicode', u'LastChar')
            # Getting the type of 'lastchar' (line 928)
            lastchar_234209 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 928, 28), 'lastchar')
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 924, 23), dict_234198, (unicode_234208, lastchar_234209))
            # Adding element type (key, value) (line 924)
            unicode_234210 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 929, 16), 'unicode', u'FontDescriptor')
            # Getting the type of 'fontdescObject' (line 929)
            fontdescObject_234211 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 929, 34), 'fontdescObject')
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 924, 23), dict_234198, (unicode_234210, fontdescObject_234211))
            # Adding element type (key, value) (line 924)
            unicode_234212 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 930, 16), 'unicode', u'Subtype')
            
            # Call to Name(...): (line 930)
            # Processing the call arguments (line 930)
            unicode_234214 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 930, 32), 'unicode', u'Type3')
            # Processing the call keyword arguments (line 930)
            kwargs_234215 = {}
            # Getting the type of 'Name' (line 930)
            Name_234213 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 930, 27), 'Name', False)
            # Calling Name(args, kwargs) (line 930)
            Name_call_result_234216 = invoke(stypy.reporting.localization.Localization(__file__, 930, 27), Name_234213, *[unicode_234214], **kwargs_234215)
            
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 924, 23), dict_234198, (unicode_234212, Name_call_result_234216))
            # Adding element type (key, value) (line 924)
            unicode_234217 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 931, 16), 'unicode', u'Name')
            
            # Obtaining the type of the subscript
            unicode_234218 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 931, 35), 'unicode', u'FontName')
            # Getting the type of 'descriptor' (line 931)
            descriptor_234219 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 931, 24), 'descriptor')
            # Obtaining the member '__getitem__' of a type (line 931)
            getitem___234220 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 931, 24), descriptor_234219, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 931)
            subscript_call_result_234221 = invoke(stypy.reporting.localization.Localization(__file__, 931, 24), getitem___234220, unicode_234218)
            
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 924, 23), dict_234198, (unicode_234217, subscript_call_result_234221))
            # Adding element type (key, value) (line 924)
            unicode_234222 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 932, 16), 'unicode', u'FontBBox')
            # Getting the type of 'bbox' (line 932)
            bbox_234223 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 932, 28), 'bbox')
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 924, 23), dict_234198, (unicode_234222, bbox_234223))
            # Adding element type (key, value) (line 924)
            unicode_234224 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 933, 16), 'unicode', u'FontMatrix')
            
            # Obtaining an instance of the builtin type 'list' (line 933)
            list_234225 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 933, 30), 'list')
            # Adding type elements to the builtin type 'list' instance (line 933)
            # Adding element type (line 933)
            float_234226 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 933, 31), 'float')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 933, 30), list_234225, float_234226)
            # Adding element type (line 933)
            int_234227 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 933, 37), 'int')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 933, 30), list_234225, int_234227)
            # Adding element type (line 933)
            int_234228 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 933, 40), 'int')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 933, 30), list_234225, int_234228)
            # Adding element type (line 933)
            float_234229 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 933, 43), 'float')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 933, 30), list_234225, float_234229)
            # Adding element type (line 933)
            int_234230 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 933, 49), 'int')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 933, 30), list_234225, int_234230)
            # Adding element type (line 933)
            int_234231 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 933, 52), 'int')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 933, 30), list_234225, int_234231)
            
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 924, 23), dict_234198, (unicode_234224, list_234225))
            # Adding element type (key, value) (line 924)
            unicode_234232 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 934, 16), 'unicode', u'CharProcs')
            # Getting the type of 'charprocsObject' (line 934)
            charprocsObject_234233 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 934, 29), 'charprocsObject')
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 924, 23), dict_234198, (unicode_234232, charprocsObject_234233))
            # Adding element type (key, value) (line 924)
            unicode_234234 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 935, 16), 'unicode', u'Encoding')
            
            # Obtaining an instance of the builtin type 'dict' (line 935)
            dict_234235 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 935, 28), 'dict')
            # Adding type elements to the builtin type 'dict' instance (line 935)
            # Adding element type (key, value) (line 935)
            unicode_234236 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 936, 20), 'unicode', u'Type')
            
            # Call to Name(...): (line 936)
            # Processing the call arguments (line 936)
            unicode_234238 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 936, 33), 'unicode', u'Encoding')
            # Processing the call keyword arguments (line 936)
            kwargs_234239 = {}
            # Getting the type of 'Name' (line 936)
            Name_234237 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 936, 28), 'Name', False)
            # Calling Name(args, kwargs) (line 936)
            Name_call_result_234240 = invoke(stypy.reporting.localization.Localization(__file__, 936, 28), Name_234237, *[unicode_234238], **kwargs_234239)
            
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 935, 28), dict_234235, (unicode_234236, Name_call_result_234240))
            # Adding element type (key, value) (line 935)
            unicode_234241 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 937, 20), 'unicode', u'Differences')
            # Getting the type of 'differencesArray' (line 937)
            differencesArray_234242 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 937, 35), 'differencesArray')
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 935, 28), dict_234235, (unicode_234241, differencesArray_234242))
            
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 924, 23), dict_234198, (unicode_234234, dict_234235))
            # Adding element type (key, value) (line 924)
            unicode_234243 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 938, 16), 'unicode', u'Widths')
            # Getting the type of 'widthsObject' (line 938)
            widthsObject_234244 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 938, 26), 'widthsObject')
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 924, 23), dict_234198, (unicode_234243, widthsObject_234244))
            
            # Assigning a type to the variable 'fontdict' (line 924)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 924, 12), 'fontdict', dict_234198)
            stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 942, 12))
            
            # 'from encodings import cp1252' statement (line 942)
            try:
                from encodings import cp1252

            except:
                cp1252 = UndefinedType
            import_from_module(stypy.reporting.localization.Localization(__file__, 942, 12), 'encodings', None, module_type_store, ['cp1252'], [cp1252])
            
            
            # Type idiom detected: calculating its left and rigth part (line 945)
            unicode_234245 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 945, 31), 'unicode', u'decoding_map')
            # Getting the type of 'cp1252' (line 945)
            cp1252_234246 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 945, 23), 'cp1252')
            
            (may_be_234247, more_types_in_union_234248) = may_provide_member(unicode_234245, cp1252_234246)

            if may_be_234247:

                if more_types_in_union_234248:
                    # Runtime conditional SSA (line 945)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
                else:
                    module_type_store = module_type_store

                # Assigning a type to the variable 'cp1252' (line 945)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 945, 12), 'cp1252', remove_not_member_provider_from_union(cp1252_234246, u'decoding_map'))

                @norecursion
                def decode_char(localization, *varargs, **kwargs):
                    global module_type_store
                    # Assign values to the parameters with defaults
                    defaults = []
                    # Create a new context for function 'decode_char'
                    module_type_store = module_type_store.open_function_context('decode_char', 946, 16, False)
                    
                    # Passed parameters checking function
                    decode_char.stypy_localization = localization
                    decode_char.stypy_type_of_self = None
                    decode_char.stypy_type_store = module_type_store
                    decode_char.stypy_function_name = 'decode_char'
                    decode_char.stypy_param_names_list = ['charcode']
                    decode_char.stypy_varargs_param_name = None
                    decode_char.stypy_kwargs_param_name = None
                    decode_char.stypy_call_defaults = defaults
                    decode_char.stypy_call_varargs = varargs
                    decode_char.stypy_call_kwargs = kwargs
                    arguments = process_argument_values(localization, None, module_type_store, 'decode_char', ['charcode'], None, None, defaults, varargs, kwargs)

                    if is_error_type(arguments):
                        # Destroy the current context
                        module_type_store = module_type_store.close_function_context()
                        return arguments

                    # Initialize method data
                    init_call_information(module_type_store, 'decode_char', localization, ['charcode'], arguments)
                    
                    # Default return type storage variable (SSA)
                    # Assigning a type to the variable 'stypy_return_type'
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
                    
                    
                    # ################# Begin of 'decode_char(...)' code ##################

                    
                    # Evaluating a boolean operation
                    
                    # Obtaining the type of the subscript
                    # Getting the type of 'charcode' (line 947)
                    charcode_234249 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 947, 47), 'charcode')
                    # Getting the type of 'cp1252' (line 947)
                    cp1252_234250 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 947, 27), 'cp1252')
                    # Obtaining the member 'decoding_map' of a type (line 947)
                    decoding_map_234251 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 947, 27), cp1252_234250, 'decoding_map')
                    # Obtaining the member '__getitem__' of a type (line 947)
                    getitem___234252 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 947, 27), decoding_map_234251, '__getitem__')
                    # Calling the subscript (__getitem__) to obtain the elements type (line 947)
                    subscript_call_result_234253 = invoke(stypy.reporting.localization.Localization(__file__, 947, 27), getitem___234252, charcode_234249)
                    
                    int_234254 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 947, 60), 'int')
                    # Applying the binary operator 'or' (line 947)
                    result_or_keyword_234255 = python_operator(stypy.reporting.localization.Localization(__file__, 947, 27), 'or', subscript_call_result_234253, int_234254)
                    
                    # Assigning a type to the variable 'stypy_return_type' (line 947)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 947, 20), 'stypy_return_type', result_or_keyword_234255)
                    
                    # ################# End of 'decode_char(...)' code ##################

                    # Teardown call information
                    teardown_call_information(localization, arguments)
                    
                    # Storing the return type of function 'decode_char' in the type store
                    # Getting the type of 'stypy_return_type' (line 946)
                    stypy_return_type_234256 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 946, 16), 'stypy_return_type')
                    module_type_store.store_return_type_of_current_context(stypy_return_type_234256)
                    
                    # Destroy the current context
                    module_type_store = module_type_store.close_function_context()
                    
                    # Return type of the function 'decode_char'
                    return stypy_return_type_234256

                # Assigning a type to the variable 'decode_char' (line 946)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 946, 16), 'decode_char', decode_char)

                if more_types_in_union_234248:
                    # Runtime conditional SSA for else branch (line 945)
                    module_type_store.open_ssa_branch('idiom else')



            if ((not may_be_234247) or more_types_in_union_234248):
                # Assigning a type to the variable 'cp1252' (line 945)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 945, 12), 'cp1252', remove_member_provider_from_union(cp1252_234246, u'decoding_map'))

                @norecursion
                def decode_char(localization, *varargs, **kwargs):
                    global module_type_store
                    # Assign values to the parameters with defaults
                    defaults = []
                    # Create a new context for function 'decode_char'
                    module_type_store = module_type_store.open_function_context('decode_char', 949, 16, False)
                    
                    # Passed parameters checking function
                    decode_char.stypy_localization = localization
                    decode_char.stypy_type_of_self = None
                    decode_char.stypy_type_store = module_type_store
                    decode_char.stypy_function_name = 'decode_char'
                    decode_char.stypy_param_names_list = ['charcode']
                    decode_char.stypy_varargs_param_name = None
                    decode_char.stypy_kwargs_param_name = None
                    decode_char.stypy_call_defaults = defaults
                    decode_char.stypy_call_varargs = varargs
                    decode_char.stypy_call_kwargs = kwargs
                    arguments = process_argument_values(localization, None, module_type_store, 'decode_char', ['charcode'], None, None, defaults, varargs, kwargs)

                    if is_error_type(arguments):
                        # Destroy the current context
                        module_type_store = module_type_store.close_function_context()
                        return arguments

                    # Initialize method data
                    init_call_information(module_type_store, 'decode_char', localization, ['charcode'], arguments)
                    
                    # Default return type storage variable (SSA)
                    # Assigning a type to the variable 'stypy_return_type'
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
                    
                    
                    # ################# Begin of 'decode_char(...)' code ##################

                    
                    # Call to ord(...): (line 950)
                    # Processing the call arguments (line 950)
                    
                    # Obtaining the type of the subscript
                    # Getting the type of 'charcode' (line 950)
                    charcode_234258 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 950, 53), 'charcode', False)
                    # Getting the type of 'cp1252' (line 950)
                    cp1252_234259 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 950, 31), 'cp1252', False)
                    # Obtaining the member 'decoding_table' of a type (line 950)
                    decoding_table_234260 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 950, 31), cp1252_234259, 'decoding_table')
                    # Obtaining the member '__getitem__' of a type (line 950)
                    getitem___234261 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 950, 31), decoding_table_234260, '__getitem__')
                    # Calling the subscript (__getitem__) to obtain the elements type (line 950)
                    subscript_call_result_234262 = invoke(stypy.reporting.localization.Localization(__file__, 950, 31), getitem___234261, charcode_234258)
                    
                    # Processing the call keyword arguments (line 950)
                    kwargs_234263 = {}
                    # Getting the type of 'ord' (line 950)
                    ord_234257 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 950, 27), 'ord', False)
                    # Calling ord(args, kwargs) (line 950)
                    ord_call_result_234264 = invoke(stypy.reporting.localization.Localization(__file__, 950, 27), ord_234257, *[subscript_call_result_234262], **kwargs_234263)
                    
                    # Assigning a type to the variable 'stypy_return_type' (line 950)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 950, 20), 'stypy_return_type', ord_call_result_234264)
                    
                    # ################# End of 'decode_char(...)' code ##################

                    # Teardown call information
                    teardown_call_information(localization, arguments)
                    
                    # Storing the return type of function 'decode_char' in the type store
                    # Getting the type of 'stypy_return_type' (line 949)
                    stypy_return_type_234265 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 949, 16), 'stypy_return_type')
                    module_type_store.store_return_type_of_current_context(stypy_return_type_234265)
                    
                    # Destroy the current context
                    module_type_store = module_type_store.close_function_context()
                    
                    # Return type of the function 'decode_char'
                    return stypy_return_type_234265

                # Assigning a type to the variable 'decode_char' (line 949)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 949, 16), 'decode_char', decode_char)

                if (may_be_234247 and more_types_in_union_234248):
                    # SSA join for if statement (line 945)
                    module_type_store = module_type_store.join_ssa_context()


            

            @norecursion
            def get_char_width(localization, *varargs, **kwargs):
                global module_type_store
                # Assign values to the parameters with defaults
                defaults = []
                # Create a new context for function 'get_char_width'
                module_type_store = module_type_store.open_function_context('get_char_width', 952, 12, False)
                
                # Passed parameters checking function
                get_char_width.stypy_localization = localization
                get_char_width.stypy_type_of_self = None
                get_char_width.stypy_type_store = module_type_store
                get_char_width.stypy_function_name = 'get_char_width'
                get_char_width.stypy_param_names_list = ['charcode']
                get_char_width.stypy_varargs_param_name = None
                get_char_width.stypy_kwargs_param_name = None
                get_char_width.stypy_call_defaults = defaults
                get_char_width.stypy_call_varargs = varargs
                get_char_width.stypy_call_kwargs = kwargs
                arguments = process_argument_values(localization, None, module_type_store, 'get_char_width', ['charcode'], None, None, defaults, varargs, kwargs)

                if is_error_type(arguments):
                    # Destroy the current context
                    module_type_store = module_type_store.close_function_context()
                    return arguments

                # Initialize method data
                init_call_information(module_type_store, 'get_char_width', localization, ['charcode'], arguments)
                
                # Default return type storage variable (SSA)
                # Assigning a type to the variable 'stypy_return_type'
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
                
                
                # ################# Begin of 'get_char_width(...)' code ##################

                
                # Assigning a Call to a Name (line 953):
                
                # Assigning a Call to a Name (line 953):
                
                # Call to decode_char(...): (line 953)
                # Processing the call arguments (line 953)
                # Getting the type of 'charcode' (line 953)
                charcode_234267 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 953, 32), 'charcode', False)
                # Processing the call keyword arguments (line 953)
                kwargs_234268 = {}
                # Getting the type of 'decode_char' (line 953)
                decode_char_234266 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 953, 20), 'decode_char', False)
                # Calling decode_char(args, kwargs) (line 953)
                decode_char_call_result_234269 = invoke(stypy.reporting.localization.Localization(__file__, 953, 20), decode_char_234266, *[charcode_234267], **kwargs_234268)
                
                # Assigning a type to the variable 's' (line 953)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 953, 16), 's', decode_char_call_result_234269)
                
                # Assigning a Attribute to a Name (line 954):
                
                # Assigning a Attribute to a Name (line 954):
                
                # Call to load_char(...): (line 954)
                # Processing the call arguments (line 954)
                # Getting the type of 's' (line 955)
                s_234272 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 955, 20), 's', False)
                # Processing the call keyword arguments (line 954)
                # Getting the type of 'LOAD_NO_SCALE' (line 955)
                LOAD_NO_SCALE_234273 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 955, 29), 'LOAD_NO_SCALE', False)
                # Getting the type of 'LOAD_NO_HINTING' (line 955)
                LOAD_NO_HINTING_234274 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 955, 45), 'LOAD_NO_HINTING', False)
                # Applying the binary operator '|' (line 955)
                result_or__234275 = python_operator(stypy.reporting.localization.Localization(__file__, 955, 29), '|', LOAD_NO_SCALE_234273, LOAD_NO_HINTING_234274)
                
                keyword_234276 = result_or__234275
                kwargs_234277 = {'flags': keyword_234276}
                # Getting the type of 'font' (line 954)
                font_234270 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 954, 24), 'font', False)
                # Obtaining the member 'load_char' of a type (line 954)
                load_char_234271 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 954, 24), font_234270, 'load_char')
                # Calling load_char(args, kwargs) (line 954)
                load_char_call_result_234278 = invoke(stypy.reporting.localization.Localization(__file__, 954, 24), load_char_234271, *[s_234272], **kwargs_234277)
                
                # Obtaining the member 'horiAdvance' of a type (line 954)
                horiAdvance_234279 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 954, 24), load_char_call_result_234278, 'horiAdvance')
                # Assigning a type to the variable 'width' (line 954)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 954, 16), 'width', horiAdvance_234279)
                
                # Call to cvt(...): (line 956)
                # Processing the call arguments (line 956)
                # Getting the type of 'width' (line 956)
                width_234281 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 956, 27), 'width', False)
                # Processing the call keyword arguments (line 956)
                kwargs_234282 = {}
                # Getting the type of 'cvt' (line 956)
                cvt_234280 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 956, 23), 'cvt', False)
                # Calling cvt(args, kwargs) (line 956)
                cvt_call_result_234283 = invoke(stypy.reporting.localization.Localization(__file__, 956, 23), cvt_234280, *[width_234281], **kwargs_234282)
                
                # Assigning a type to the variable 'stypy_return_type' (line 956)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 956, 16), 'stypy_return_type', cvt_call_result_234283)
                
                # ################# End of 'get_char_width(...)' code ##################

                # Teardown call information
                teardown_call_information(localization, arguments)
                
                # Storing the return type of function 'get_char_width' in the type store
                # Getting the type of 'stypy_return_type' (line 952)
                stypy_return_type_234284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 952, 12), 'stypy_return_type')
                module_type_store.store_return_type_of_current_context(stypy_return_type_234284)
                
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                
                # Return type of the function 'get_char_width'
                return stypy_return_type_234284

            # Assigning a type to the variable 'get_char_width' (line 952)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 952, 12), 'get_char_width', get_char_width)
            
            # Assigning a ListComp to a Name (line 958):
            
            # Assigning a ListComp to a Name (line 958):
            # Calculating list comprehension
            # Calculating comprehension expression
            
            # Call to range(...): (line 959)
            # Processing the call arguments (line 959)
            # Getting the type of 'firstchar' (line 959)
            firstchar_234290 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 959, 44), 'firstchar', False)
            # Getting the type of 'lastchar' (line 959)
            lastchar_234291 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 959, 55), 'lastchar', False)
            int_234292 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 959, 64), 'int')
            # Applying the binary operator '+' (line 959)
            result_add_234293 = python_operator(stypy.reporting.localization.Localization(__file__, 959, 55), '+', lastchar_234291, int_234292)
            
            # Processing the call keyword arguments (line 959)
            kwargs_234294 = {}
            # Getting the type of 'range' (line 959)
            range_234289 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 959, 38), 'range', False)
            # Calling range(args, kwargs) (line 959)
            range_call_result_234295 = invoke(stypy.reporting.localization.Localization(__file__, 959, 38), range_234289, *[firstchar_234290, result_add_234293], **kwargs_234294)
            
            comprehension_234296 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 958, 22), range_call_result_234295)
            # Assigning a type to the variable 'charcode' (line 958)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 958, 22), 'charcode', comprehension_234296)
            
            # Call to get_char_width(...): (line 958)
            # Processing the call arguments (line 958)
            # Getting the type of 'charcode' (line 958)
            charcode_234286 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 958, 37), 'charcode', False)
            # Processing the call keyword arguments (line 958)
            kwargs_234287 = {}
            # Getting the type of 'get_char_width' (line 958)
            get_char_width_234285 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 958, 22), 'get_char_width', False)
            # Calling get_char_width(args, kwargs) (line 958)
            get_char_width_call_result_234288 = invoke(stypy.reporting.localization.Localization(__file__, 958, 22), get_char_width_234285, *[charcode_234286], **kwargs_234287)
            
            list_234297 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 958, 22), 'list')
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 958, 22), list_234297, get_char_width_call_result_234288)
            # Assigning a type to the variable 'widths' (line 958)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 958, 12), 'widths', list_234297)
            
            # Assigning a Call to a Subscript (line 960):
            
            # Assigning a Call to a Subscript (line 960):
            
            # Call to max(...): (line 960)
            # Processing the call arguments (line 960)
            # Getting the type of 'widths' (line 960)
            widths_234299 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 960, 41), 'widths', False)
            # Processing the call keyword arguments (line 960)
            kwargs_234300 = {}
            # Getting the type of 'max' (line 960)
            max_234298 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 960, 37), 'max', False)
            # Calling max(args, kwargs) (line 960)
            max_call_result_234301 = invoke(stypy.reporting.localization.Localization(__file__, 960, 37), max_234298, *[widths_234299], **kwargs_234300)
            
            # Getting the type of 'descriptor' (line 960)
            descriptor_234302 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 960, 12), 'descriptor')
            unicode_234303 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 960, 23), 'unicode', u'MaxWidth')
            # Storing an element on a container (line 960)
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 960, 12), descriptor_234302, (unicode_234303, max_call_result_234301))
            
            # Assigning a List to a Name (line 965):
            
            # Assigning a List to a Name (line 965):
            
            # Obtaining an instance of the builtin type 'list' (line 965)
            list_234304 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 965, 24), 'list')
            # Adding type elements to the builtin type 'list' instance (line 965)
            
            # Assigning a type to the variable 'glyph_ids' (line 965)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 965, 12), 'glyph_ids', list_234304)
            
            # Assigning a List to a Name (line 966):
            
            # Assigning a List to a Name (line 966):
            
            # Obtaining an instance of the builtin type 'list' (line 966)
            list_234305 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 966, 26), 'list')
            # Adding type elements to the builtin type 'list' instance (line 966)
            
            # Assigning a type to the variable 'differences' (line 966)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 966, 12), 'differences', list_234305)
            
            # Assigning a Call to a Name (line 967):
            
            # Assigning a Call to a Name (line 967):
            
            # Call to set(...): (line 967)
            # Processing the call keyword arguments (line 967)
            kwargs_234307 = {}
            # Getting the type of 'set' (line 967)
            set_234306 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 967, 31), 'set', False)
            # Calling set(args, kwargs) (line 967)
            set_call_result_234308 = invoke(stypy.reporting.localization.Localization(__file__, 967, 31), set_234306, *[], **kwargs_234307)
            
            # Assigning a type to the variable 'multi_byte_chars' (line 967)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 967, 12), 'multi_byte_chars', set_call_result_234308)
            
            # Getting the type of 'characters' (line 968)
            characters_234309 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 968, 21), 'characters')
            # Testing the type of a for loop iterable (line 968)
            is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 968, 12), characters_234309)
            # Getting the type of the for loop variable (line 968)
            for_loop_var_234310 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 968, 12), characters_234309)
            # Assigning a type to the variable 'c' (line 968)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 968, 12), 'c', for_loop_var_234310)
            # SSA begins for a for statement (line 968)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
            
            # Assigning a Name to a Name (line 969):
            
            # Assigning a Name to a Name (line 969):
            # Getting the type of 'c' (line 969)
            c_234311 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 969, 24), 'c')
            # Assigning a type to the variable 'ccode' (line 969)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 969, 16), 'ccode', c_234311)
            
            # Assigning a Call to a Name (line 970):
            
            # Assigning a Call to a Name (line 970):
            
            # Call to get_char_index(...): (line 970)
            # Processing the call arguments (line 970)
            # Getting the type of 'ccode' (line 970)
            ccode_234314 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 970, 43), 'ccode', False)
            # Processing the call keyword arguments (line 970)
            kwargs_234315 = {}
            # Getting the type of 'font' (line 970)
            font_234312 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 970, 23), 'font', False)
            # Obtaining the member 'get_char_index' of a type (line 970)
            get_char_index_234313 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 970, 23), font_234312, 'get_char_index')
            # Calling get_char_index(args, kwargs) (line 970)
            get_char_index_call_result_234316 = invoke(stypy.reporting.localization.Localization(__file__, 970, 23), get_char_index_234313, *[ccode_234314], **kwargs_234315)
            
            # Assigning a type to the variable 'gind' (line 970)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 970, 16), 'gind', get_char_index_call_result_234316)
            
            # Call to append(...): (line 971)
            # Processing the call arguments (line 971)
            # Getting the type of 'gind' (line 971)
            gind_234319 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 971, 33), 'gind', False)
            # Processing the call keyword arguments (line 971)
            kwargs_234320 = {}
            # Getting the type of 'glyph_ids' (line 971)
            glyph_ids_234317 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 971, 16), 'glyph_ids', False)
            # Obtaining the member 'append' of a type (line 971)
            append_234318 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 971, 16), glyph_ids_234317, 'append')
            # Calling append(args, kwargs) (line 971)
            append_call_result_234321 = invoke(stypy.reporting.localization.Localization(__file__, 971, 16), append_234318, *[gind_234319], **kwargs_234320)
            
            
            # Assigning a Call to a Name (line 972):
            
            # Assigning a Call to a Name (line 972):
            
            # Call to get_glyph_name(...): (line 972)
            # Processing the call arguments (line 972)
            # Getting the type of 'gind' (line 972)
            gind_234324 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 972, 49), 'gind', False)
            # Processing the call keyword arguments (line 972)
            kwargs_234325 = {}
            # Getting the type of 'font' (line 972)
            font_234322 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 972, 29), 'font', False)
            # Obtaining the member 'get_glyph_name' of a type (line 972)
            get_glyph_name_234323 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 972, 29), font_234322, 'get_glyph_name')
            # Calling get_glyph_name(args, kwargs) (line 972)
            get_glyph_name_call_result_234326 = invoke(stypy.reporting.localization.Localization(__file__, 972, 29), get_glyph_name_234323, *[gind_234324], **kwargs_234325)
            
            # Assigning a type to the variable 'glyph_name' (line 972)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 972, 16), 'glyph_name', get_glyph_name_call_result_234326)
            
            
            # Getting the type of 'ccode' (line 973)
            ccode_234327 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 973, 19), 'ccode')
            int_234328 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 973, 28), 'int')
            # Applying the binary operator '<=' (line 973)
            result_le_234329 = python_operator(stypy.reporting.localization.Localization(__file__, 973, 19), '<=', ccode_234327, int_234328)
            
            # Testing the type of an if condition (line 973)
            if_condition_234330 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 973, 16), result_le_234329)
            # Assigning a type to the variable 'if_condition_234330' (line 973)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 973, 16), 'if_condition_234330', if_condition_234330)
            # SSA begins for if statement (line 973)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Call to append(...): (line 974)
            # Processing the call arguments (line 974)
            
            # Obtaining an instance of the builtin type 'tuple' (line 974)
            tuple_234333 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 974, 40), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 974)
            # Adding element type (line 974)
            # Getting the type of 'ccode' (line 974)
            ccode_234334 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 974, 40), 'ccode', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 974, 40), tuple_234333, ccode_234334)
            # Adding element type (line 974)
            # Getting the type of 'glyph_name' (line 974)
            glyph_name_234335 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 974, 47), 'glyph_name', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 974, 40), tuple_234333, glyph_name_234335)
            
            # Processing the call keyword arguments (line 974)
            kwargs_234336 = {}
            # Getting the type of 'differences' (line 974)
            differences_234331 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 974, 20), 'differences', False)
            # Obtaining the member 'append' of a type (line 974)
            append_234332 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 974, 20), differences_234331, 'append')
            # Calling append(args, kwargs) (line 974)
            append_call_result_234337 = invoke(stypy.reporting.localization.Localization(__file__, 974, 20), append_234332, *[tuple_234333], **kwargs_234336)
            
            # SSA branch for the else part of an if statement (line 973)
            module_type_store.open_ssa_branch('else')
            
            # Call to add(...): (line 976)
            # Processing the call arguments (line 976)
            # Getting the type of 'glyph_name' (line 976)
            glyph_name_234340 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 976, 41), 'glyph_name', False)
            # Processing the call keyword arguments (line 976)
            kwargs_234341 = {}
            # Getting the type of 'multi_byte_chars' (line 976)
            multi_byte_chars_234338 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 976, 20), 'multi_byte_chars', False)
            # Obtaining the member 'add' of a type (line 976)
            add_234339 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 976, 20), multi_byte_chars_234338, 'add')
            # Calling add(args, kwargs) (line 976)
            add_call_result_234342 = invoke(stypy.reporting.localization.Localization(__file__, 976, 20), add_234339, *[glyph_name_234340], **kwargs_234341)
            
            # SSA join for if statement (line 973)
            module_type_store = module_type_store.join_ssa_context()
            
            # SSA join for a for statement
            module_type_store = module_type_store.join_ssa_context()
            
            
            # Call to sort(...): (line 977)
            # Processing the call keyword arguments (line 977)
            kwargs_234345 = {}
            # Getting the type of 'differences' (line 977)
            differences_234343 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 977, 12), 'differences', False)
            # Obtaining the member 'sort' of a type (line 977)
            sort_234344 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 977, 12), differences_234343, 'sort')
            # Calling sort(args, kwargs) (line 977)
            sort_call_result_234346 = invoke(stypy.reporting.localization.Localization(__file__, 977, 12), sort_234344, *[], **kwargs_234345)
            
            
            # Assigning a Num to a Name (line 979):
            
            # Assigning a Num to a Name (line 979):
            int_234347 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 979, 21), 'int')
            # Assigning a type to the variable 'last_c' (line 979)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 979, 12), 'last_c', int_234347)
            
            # Getting the type of 'differences' (line 980)
            differences_234348 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 980, 27), 'differences')
            # Testing the type of a for loop iterable (line 980)
            is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 980, 12), differences_234348)
            # Getting the type of the for loop variable (line 980)
            for_loop_var_234349 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 980, 12), differences_234348)
            # Assigning a type to the variable 'c' (line 980)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 980, 12), 'c', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 980, 12), for_loop_var_234349))
            # Assigning a type to the variable 'name' (line 980)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 980, 12), 'name', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 980, 12), for_loop_var_234349))
            # SSA begins for a for statement (line 980)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
            
            
            # Getting the type of 'c' (line 981)
            c_234350 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 981, 19), 'c')
            # Getting the type of 'last_c' (line 981)
            last_c_234351 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 981, 24), 'last_c')
            int_234352 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 981, 33), 'int')
            # Applying the binary operator '+' (line 981)
            result_add_234353 = python_operator(stypy.reporting.localization.Localization(__file__, 981, 24), '+', last_c_234351, int_234352)
            
            # Applying the binary operator '!=' (line 981)
            result_ne_234354 = python_operator(stypy.reporting.localization.Localization(__file__, 981, 19), '!=', c_234350, result_add_234353)
            
            # Testing the type of an if condition (line 981)
            if_condition_234355 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 981, 16), result_ne_234354)
            # Assigning a type to the variable 'if_condition_234355' (line 981)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 981, 16), 'if_condition_234355', if_condition_234355)
            # SSA begins for if statement (line 981)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Call to append(...): (line 982)
            # Processing the call arguments (line 982)
            # Getting the type of 'c' (line 982)
            c_234358 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 982, 44), 'c', False)
            # Processing the call keyword arguments (line 982)
            kwargs_234359 = {}
            # Getting the type of 'differencesArray' (line 982)
            differencesArray_234356 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 982, 20), 'differencesArray', False)
            # Obtaining the member 'append' of a type (line 982)
            append_234357 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 982, 20), differencesArray_234356, 'append')
            # Calling append(args, kwargs) (line 982)
            append_call_result_234360 = invoke(stypy.reporting.localization.Localization(__file__, 982, 20), append_234357, *[c_234358], **kwargs_234359)
            
            # SSA join for if statement (line 981)
            module_type_store = module_type_store.join_ssa_context()
            
            
            # Call to append(...): (line 983)
            # Processing the call arguments (line 983)
            
            # Call to Name(...): (line 983)
            # Processing the call arguments (line 983)
            # Getting the type of 'name' (line 983)
            name_234364 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 983, 45), 'name', False)
            # Processing the call keyword arguments (line 983)
            kwargs_234365 = {}
            # Getting the type of 'Name' (line 983)
            Name_234363 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 983, 40), 'Name', False)
            # Calling Name(args, kwargs) (line 983)
            Name_call_result_234366 = invoke(stypy.reporting.localization.Localization(__file__, 983, 40), Name_234363, *[name_234364], **kwargs_234365)
            
            # Processing the call keyword arguments (line 983)
            kwargs_234367 = {}
            # Getting the type of 'differencesArray' (line 983)
            differencesArray_234361 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 983, 16), 'differencesArray', False)
            # Obtaining the member 'append' of a type (line 983)
            append_234362 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 983, 16), differencesArray_234361, 'append')
            # Calling append(args, kwargs) (line 983)
            append_call_result_234368 = invoke(stypy.reporting.localization.Localization(__file__, 983, 16), append_234362, *[Name_call_result_234366], **kwargs_234367)
            
            
            # Assigning a Name to a Name (line 984):
            
            # Assigning a Name to a Name (line 984):
            # Getting the type of 'c' (line 984)
            c_234369 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 984, 25), 'c')
            # Assigning a type to the variable 'last_c' (line 984)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 984, 16), 'last_c', c_234369)
            # SSA join for a for statement
            module_type_store = module_type_store.join_ssa_context()
            
            
            # Assigning a Call to a Name (line 988):
            
            # Assigning a Call to a Name (line 988):
            
            # Call to get_pdf_charprocs(...): (line 988)
            # Processing the call arguments (line 988)
            
            # Call to encode(...): (line 989)
            # Processing the call arguments (line 989)
            
            # Call to getfilesystemencoding(...): (line 989)
            # Processing the call keyword arguments (line 989)
            kwargs_234376 = {}
            # Getting the type of 'sys' (line 989)
            sys_234374 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 989, 32), 'sys', False)
            # Obtaining the member 'getfilesystemencoding' of a type (line 989)
            getfilesystemencoding_234375 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 989, 32), sys_234374, 'getfilesystemencoding')
            # Calling getfilesystemencoding(args, kwargs) (line 989)
            getfilesystemencoding_call_result_234377 = invoke(stypy.reporting.localization.Localization(__file__, 989, 32), getfilesystemencoding_234375, *[], **kwargs_234376)
            
            # Processing the call keyword arguments (line 989)
            kwargs_234378 = {}
            # Getting the type of 'filename' (line 989)
            filename_234372 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 989, 16), 'filename', False)
            # Obtaining the member 'encode' of a type (line 989)
            encode_234373 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 989, 16), filename_234372, 'encode')
            # Calling encode(args, kwargs) (line 989)
            encode_call_result_234379 = invoke(stypy.reporting.localization.Localization(__file__, 989, 16), encode_234373, *[getfilesystemencoding_call_result_234377], **kwargs_234378)
            
            # Getting the type of 'glyph_ids' (line 989)
            glyph_ids_234380 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 989, 62), 'glyph_ids', False)
            # Processing the call keyword arguments (line 988)
            kwargs_234381 = {}
            # Getting the type of 'ttconv' (line 988)
            ttconv_234370 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 988, 27), 'ttconv', False)
            # Obtaining the member 'get_pdf_charprocs' of a type (line 988)
            get_pdf_charprocs_234371 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 988, 27), ttconv_234370, 'get_pdf_charprocs')
            # Calling get_pdf_charprocs(args, kwargs) (line 988)
            get_pdf_charprocs_call_result_234382 = invoke(stypy.reporting.localization.Localization(__file__, 988, 27), get_pdf_charprocs_234371, *[encode_call_result_234379, glyph_ids_234380], **kwargs_234381)
            
            # Assigning a type to the variable 'rawcharprocs' (line 988)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 988, 12), 'rawcharprocs', get_pdf_charprocs_call_result_234382)
            
            # Assigning a Dict to a Name (line 990):
            
            # Assigning a Dict to a Name (line 990):
            
            # Obtaining an instance of the builtin type 'dict' (line 990)
            dict_234383 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 990, 24), 'dict')
            # Adding type elements to the builtin type 'dict' instance (line 990)
            
            # Assigning a type to the variable 'charprocs' (line 990)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 990, 12), 'charprocs', dict_234383)
            
            
            # Call to sorted(...): (line 991)
            # Processing the call arguments (line 991)
            # Getting the type of 'rawcharprocs' (line 991)
            rawcharprocs_234385 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 991, 35), 'rawcharprocs', False)
            # Processing the call keyword arguments (line 991)
            kwargs_234386 = {}
            # Getting the type of 'sorted' (line 991)
            sorted_234384 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 991, 28), 'sorted', False)
            # Calling sorted(args, kwargs) (line 991)
            sorted_call_result_234387 = invoke(stypy.reporting.localization.Localization(__file__, 991, 28), sorted_234384, *[rawcharprocs_234385], **kwargs_234386)
            
            # Testing the type of a for loop iterable (line 991)
            is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 991, 12), sorted_call_result_234387)
            # Getting the type of the for loop variable (line 991)
            for_loop_var_234388 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 991, 12), sorted_call_result_234387)
            # Assigning a type to the variable 'charname' (line 991)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 991, 12), 'charname', for_loop_var_234388)
            # SSA begins for a for statement (line 991)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
            
            # Assigning a Subscript to a Name (line 992):
            
            # Assigning a Subscript to a Name (line 992):
            
            # Obtaining the type of the subscript
            # Getting the type of 'charname' (line 992)
            charname_234389 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 992, 38), 'charname')
            # Getting the type of 'rawcharprocs' (line 992)
            rawcharprocs_234390 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 992, 25), 'rawcharprocs')
            # Obtaining the member '__getitem__' of a type (line 992)
            getitem___234391 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 992, 25), rawcharprocs_234390, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 992)
            subscript_call_result_234392 = invoke(stypy.reporting.localization.Localization(__file__, 992, 25), getitem___234391, charname_234389)
            
            # Assigning a type to the variable 'stream' (line 992)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 992, 16), 'stream', subscript_call_result_234392)
            
            # Assigning a Dict to a Name (line 993):
            
            # Assigning a Dict to a Name (line 993):
            
            # Obtaining an instance of the builtin type 'dict' (line 993)
            dict_234393 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 993, 31), 'dict')
            # Adding type elements to the builtin type 'dict' instance (line 993)
            # Adding element type (key, value) (line 993)
            unicode_234394 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 993, 32), 'unicode', u'Length')
            
            # Call to len(...): (line 993)
            # Processing the call arguments (line 993)
            # Getting the type of 'stream' (line 993)
            stream_234396 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 993, 46), 'stream', False)
            # Processing the call keyword arguments (line 993)
            kwargs_234397 = {}
            # Getting the type of 'len' (line 993)
            len_234395 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 993, 42), 'len', False)
            # Calling len(args, kwargs) (line 993)
            len_call_result_234398 = invoke(stypy.reporting.localization.Localization(__file__, 993, 42), len_234395, *[stream_234396], **kwargs_234397)
            
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 993, 31), dict_234393, (unicode_234394, len_call_result_234398))
            
            # Assigning a type to the variable 'charprocDict' (line 993)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 993, 16), 'charprocDict', dict_234393)
            
            
            # Getting the type of 'charname' (line 996)
            charname_234399 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 996, 19), 'charname')
            # Getting the type of 'multi_byte_chars' (line 996)
            multi_byte_chars_234400 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 996, 31), 'multi_byte_chars')
            # Applying the binary operator 'in' (line 996)
            result_contains_234401 = python_operator(stypy.reporting.localization.Localization(__file__, 996, 19), 'in', charname_234399, multi_byte_chars_234400)
            
            # Testing the type of an if condition (line 996)
            if_condition_234402 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 996, 16), result_contains_234401)
            # Assigning a type to the variable 'if_condition_234402' (line 996)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 996, 16), 'if_condition_234402', if_condition_234402)
            # SSA begins for if statement (line 996)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Call to a Subscript (line 997):
            
            # Assigning a Call to a Subscript (line 997):
            
            # Call to Name(...): (line 997)
            # Processing the call arguments (line 997)
            unicode_234404 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 997, 48), 'unicode', u'XObject')
            # Processing the call keyword arguments (line 997)
            kwargs_234405 = {}
            # Getting the type of 'Name' (line 997)
            Name_234403 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 997, 43), 'Name', False)
            # Calling Name(args, kwargs) (line 997)
            Name_call_result_234406 = invoke(stypy.reporting.localization.Localization(__file__, 997, 43), Name_234403, *[unicode_234404], **kwargs_234405)
            
            # Getting the type of 'charprocDict' (line 997)
            charprocDict_234407 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 997, 20), 'charprocDict')
            unicode_234408 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 997, 33), 'unicode', u'Type')
            # Storing an element on a container (line 997)
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 997, 20), charprocDict_234407, (unicode_234408, Name_call_result_234406))
            
            # Assigning a Call to a Subscript (line 998):
            
            # Assigning a Call to a Subscript (line 998):
            
            # Call to Name(...): (line 998)
            # Processing the call arguments (line 998)
            unicode_234410 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 998, 51), 'unicode', u'Form')
            # Processing the call keyword arguments (line 998)
            kwargs_234411 = {}
            # Getting the type of 'Name' (line 998)
            Name_234409 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 998, 46), 'Name', False)
            # Calling Name(args, kwargs) (line 998)
            Name_call_result_234412 = invoke(stypy.reporting.localization.Localization(__file__, 998, 46), Name_234409, *[unicode_234410], **kwargs_234411)
            
            # Getting the type of 'charprocDict' (line 998)
            charprocDict_234413 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 998, 20), 'charprocDict')
            unicode_234414 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 998, 33), 'unicode', u'Subtype')
            # Storing an element on a container (line 998)
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 998, 20), charprocDict_234413, (unicode_234414, Name_call_result_234412))
            
            # Assigning a Name to a Subscript (line 999):
            
            # Assigning a Name to a Subscript (line 999):
            # Getting the type of 'bbox' (line 999)
            bbox_234415 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 999, 43), 'bbox')
            # Getting the type of 'charprocDict' (line 999)
            charprocDict_234416 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 999, 20), 'charprocDict')
            unicode_234417 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 999, 33), 'unicode', u'BBox')
            # Storing an element on a container (line 999)
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 999, 20), charprocDict_234416, (unicode_234417, bbox_234415))
            
            # Assigning a Subscript to a Name (line 1006):
            
            # Assigning a Subscript to a Name (line 1006):
            
            # Obtaining the type of the subscript
            
            # Call to find(...): (line 1006)
            # Processing the call arguments (line 1006)
            str_234420 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1006, 48), 'str', 'd1')
            # Processing the call keyword arguments (line 1006)
            kwargs_234421 = {}
            # Getting the type of 'stream' (line 1006)
            stream_234418 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1006, 36), 'stream', False)
            # Obtaining the member 'find' of a type (line 1006)
            find_234419 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1006, 36), stream_234418, 'find')
            # Calling find(args, kwargs) (line 1006)
            find_call_result_234422 = invoke(stypy.reporting.localization.Localization(__file__, 1006, 36), find_234419, *[str_234420], **kwargs_234421)
            
            int_234423 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1006, 57), 'int')
            # Applying the binary operator '+' (line 1006)
            result_add_234424 = python_operator(stypy.reporting.localization.Localization(__file__, 1006, 36), '+', find_call_result_234422, int_234423)
            
            slice_234425 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1006, 29), result_add_234424, None, None)
            # Getting the type of 'stream' (line 1006)
            stream_234426 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1006, 29), 'stream')
            # Obtaining the member '__getitem__' of a type (line 1006)
            getitem___234427 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1006, 29), stream_234426, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 1006)
            subscript_call_result_234428 = invoke(stypy.reporting.localization.Localization(__file__, 1006, 29), getitem___234427, slice_234425)
            
            # Assigning a type to the variable 'stream' (line 1006)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1006, 20), 'stream', subscript_call_result_234428)
            # SSA join for if statement (line 996)
            module_type_store = module_type_store.join_ssa_context()
            
            
            # Assigning a Call to a Name (line 1007):
            
            # Assigning a Call to a Name (line 1007):
            
            # Call to reserveObject(...): (line 1007)
            # Processing the call arguments (line 1007)
            unicode_234431 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1007, 52), 'unicode', u'charProc')
            # Processing the call keyword arguments (line 1007)
            kwargs_234432 = {}
            # Getting the type of 'self' (line 1007)
            self_234429 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1007, 33), 'self', False)
            # Obtaining the member 'reserveObject' of a type (line 1007)
            reserveObject_234430 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1007, 33), self_234429, 'reserveObject')
            # Calling reserveObject(args, kwargs) (line 1007)
            reserveObject_call_result_234433 = invoke(stypy.reporting.localization.Localization(__file__, 1007, 33), reserveObject_234430, *[unicode_234431], **kwargs_234432)
            
            # Assigning a type to the variable 'charprocObject' (line 1007)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1007, 16), 'charprocObject', reserveObject_call_result_234433)
            
            # Call to beginStream(...): (line 1008)
            # Processing the call arguments (line 1008)
            # Getting the type of 'charprocObject' (line 1008)
            charprocObject_234436 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1008, 33), 'charprocObject', False)
            # Obtaining the member 'id' of a type (line 1008)
            id_234437 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1008, 33), charprocObject_234436, 'id')
            # Getting the type of 'None' (line 1008)
            None_234438 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1008, 52), 'None', False)
            # Getting the type of 'charprocDict' (line 1008)
            charprocDict_234439 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1008, 58), 'charprocDict', False)
            # Processing the call keyword arguments (line 1008)
            kwargs_234440 = {}
            # Getting the type of 'self' (line 1008)
            self_234434 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1008, 16), 'self', False)
            # Obtaining the member 'beginStream' of a type (line 1008)
            beginStream_234435 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1008, 16), self_234434, 'beginStream')
            # Calling beginStream(args, kwargs) (line 1008)
            beginStream_call_result_234441 = invoke(stypy.reporting.localization.Localization(__file__, 1008, 16), beginStream_234435, *[id_234437, None_234438, charprocDict_234439], **kwargs_234440)
            
            
            # Call to write(...): (line 1009)
            # Processing the call arguments (line 1009)
            # Getting the type of 'stream' (line 1009)
            stream_234445 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1009, 41), 'stream', False)
            # Processing the call keyword arguments (line 1009)
            kwargs_234446 = {}
            # Getting the type of 'self' (line 1009)
            self_234442 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1009, 16), 'self', False)
            # Obtaining the member 'currentstream' of a type (line 1009)
            currentstream_234443 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1009, 16), self_234442, 'currentstream')
            # Obtaining the member 'write' of a type (line 1009)
            write_234444 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1009, 16), currentstream_234443, 'write')
            # Calling write(args, kwargs) (line 1009)
            write_call_result_234447 = invoke(stypy.reporting.localization.Localization(__file__, 1009, 16), write_234444, *[stream_234445], **kwargs_234446)
            
            
            # Call to endStream(...): (line 1010)
            # Processing the call keyword arguments (line 1010)
            kwargs_234450 = {}
            # Getting the type of 'self' (line 1010)
            self_234448 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1010, 16), 'self', False)
            # Obtaining the member 'endStream' of a type (line 1010)
            endStream_234449 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1010, 16), self_234448, 'endStream')
            # Calling endStream(args, kwargs) (line 1010)
            endStream_call_result_234451 = invoke(stypy.reporting.localization.Localization(__file__, 1010, 16), endStream_234449, *[], **kwargs_234450)
            
            
            
            # Getting the type of 'charname' (line 1014)
            charname_234452 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1014, 19), 'charname')
            # Getting the type of 'multi_byte_chars' (line 1014)
            multi_byte_chars_234453 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1014, 31), 'multi_byte_chars')
            # Applying the binary operator 'in' (line 1014)
            result_contains_234454 = python_operator(stypy.reporting.localization.Localization(__file__, 1014, 19), 'in', charname_234452, multi_byte_chars_234453)
            
            # Testing the type of an if condition (line 1014)
            if_condition_234455 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1014, 16), result_contains_234454)
            # Assigning a type to the variable 'if_condition_234455' (line 1014)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1014, 16), 'if_condition_234455', if_condition_234455)
            # SSA begins for if statement (line 1014)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Call to a Name (line 1015):
            
            # Assigning a Call to a Name (line 1015):
            
            # Call to _get_xobject_symbol_name(...): (line 1015)
            # Processing the call arguments (line 1015)
            # Getting the type of 'filename' (line 1015)
            filename_234458 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1015, 57), 'filename', False)
            # Getting the type of 'charname' (line 1015)
            charname_234459 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1015, 67), 'charname', False)
            # Processing the call keyword arguments (line 1015)
            kwargs_234460 = {}
            # Getting the type of 'self' (line 1015)
            self_234456 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1015, 27), 'self', False)
            # Obtaining the member '_get_xobject_symbol_name' of a type (line 1015)
            _get_xobject_symbol_name_234457 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1015, 27), self_234456, '_get_xobject_symbol_name')
            # Calling _get_xobject_symbol_name(args, kwargs) (line 1015)
            _get_xobject_symbol_name_call_result_234461 = invoke(stypy.reporting.localization.Localization(__file__, 1015, 27), _get_xobject_symbol_name_234457, *[filename_234458, charname_234459], **kwargs_234460)
            
            # Assigning a type to the variable 'name' (line 1015)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1015, 20), 'name', _get_xobject_symbol_name_call_result_234461)
            
            # Assigning a Name to a Subscript (line 1016):
            
            # Assigning a Name to a Subscript (line 1016):
            # Getting the type of 'charprocObject' (line 1016)
            charprocObject_234462 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1016, 54), 'charprocObject')
            # Getting the type of 'self' (line 1016)
            self_234463 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1016, 20), 'self')
            # Obtaining the member 'multi_byte_charprocs' of a type (line 1016)
            multi_byte_charprocs_234464 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1016, 20), self_234463, 'multi_byte_charprocs')
            # Getting the type of 'name' (line 1016)
            name_234465 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1016, 46), 'name')
            # Storing an element on a container (line 1016)
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1016, 20), multi_byte_charprocs_234464, (name_234465, charprocObject_234462))
            # SSA branch for the else part of an if statement (line 1014)
            module_type_store.open_ssa_branch('else')
            
            # Assigning a Name to a Subscript (line 1018):
            
            # Assigning a Name to a Subscript (line 1018):
            # Getting the type of 'charprocObject' (line 1018)
            charprocObject_234466 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1018, 42), 'charprocObject')
            # Getting the type of 'charprocs' (line 1018)
            charprocs_234467 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1018, 20), 'charprocs')
            # Getting the type of 'charname' (line 1018)
            charname_234468 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1018, 30), 'charname')
            # Storing an element on a container (line 1018)
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1018, 20), charprocs_234467, (charname_234468, charprocObject_234466))
            # SSA join for if statement (line 1014)
            module_type_store = module_type_store.join_ssa_context()
            
            # SSA join for a for statement
            module_type_store = module_type_store.join_ssa_context()
            
            
            # Call to writeObject(...): (line 1021)
            # Processing the call arguments (line 1021)
            # Getting the type of 'fontdictObject' (line 1021)
            fontdictObject_234471 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1021, 29), 'fontdictObject', False)
            # Getting the type of 'fontdict' (line 1021)
            fontdict_234472 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1021, 45), 'fontdict', False)
            # Processing the call keyword arguments (line 1021)
            kwargs_234473 = {}
            # Getting the type of 'self' (line 1021)
            self_234469 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1021, 12), 'self', False)
            # Obtaining the member 'writeObject' of a type (line 1021)
            writeObject_234470 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1021, 12), self_234469, 'writeObject')
            # Calling writeObject(args, kwargs) (line 1021)
            writeObject_call_result_234474 = invoke(stypy.reporting.localization.Localization(__file__, 1021, 12), writeObject_234470, *[fontdictObject_234471, fontdict_234472], **kwargs_234473)
            
            
            # Call to writeObject(...): (line 1022)
            # Processing the call arguments (line 1022)
            # Getting the type of 'fontdescObject' (line 1022)
            fontdescObject_234477 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1022, 29), 'fontdescObject', False)
            # Getting the type of 'descriptor' (line 1022)
            descriptor_234478 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1022, 45), 'descriptor', False)
            # Processing the call keyword arguments (line 1022)
            kwargs_234479 = {}
            # Getting the type of 'self' (line 1022)
            self_234475 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1022, 12), 'self', False)
            # Obtaining the member 'writeObject' of a type (line 1022)
            writeObject_234476 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1022, 12), self_234475, 'writeObject')
            # Calling writeObject(args, kwargs) (line 1022)
            writeObject_call_result_234480 = invoke(stypy.reporting.localization.Localization(__file__, 1022, 12), writeObject_234476, *[fontdescObject_234477, descriptor_234478], **kwargs_234479)
            
            
            # Call to writeObject(...): (line 1023)
            # Processing the call arguments (line 1023)
            # Getting the type of 'widthsObject' (line 1023)
            widthsObject_234483 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1023, 29), 'widthsObject', False)
            # Getting the type of 'widths' (line 1023)
            widths_234484 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1023, 43), 'widths', False)
            # Processing the call keyword arguments (line 1023)
            kwargs_234485 = {}
            # Getting the type of 'self' (line 1023)
            self_234481 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1023, 12), 'self', False)
            # Obtaining the member 'writeObject' of a type (line 1023)
            writeObject_234482 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1023, 12), self_234481, 'writeObject')
            # Calling writeObject(args, kwargs) (line 1023)
            writeObject_call_result_234486 = invoke(stypy.reporting.localization.Localization(__file__, 1023, 12), writeObject_234482, *[widthsObject_234483, widths_234484], **kwargs_234485)
            
            
            # Call to writeObject(...): (line 1024)
            # Processing the call arguments (line 1024)
            # Getting the type of 'charprocsObject' (line 1024)
            charprocsObject_234489 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1024, 29), 'charprocsObject', False)
            # Getting the type of 'charprocs' (line 1024)
            charprocs_234490 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1024, 46), 'charprocs', False)
            # Processing the call keyword arguments (line 1024)
            kwargs_234491 = {}
            # Getting the type of 'self' (line 1024)
            self_234487 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1024, 12), 'self', False)
            # Obtaining the member 'writeObject' of a type (line 1024)
            writeObject_234488 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1024, 12), self_234487, 'writeObject')
            # Calling writeObject(args, kwargs) (line 1024)
            writeObject_call_result_234492 = invoke(stypy.reporting.localization.Localization(__file__, 1024, 12), writeObject_234488, *[charprocsObject_234489, charprocs_234490], **kwargs_234491)
            
            # Getting the type of 'fontdictObject' (line 1026)
            fontdictObject_234493 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1026, 19), 'fontdictObject')
            # Assigning a type to the variable 'stypy_return_type' (line 1026)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1026, 12), 'stypy_return_type', fontdictObject_234493)
            
            # ################# End of 'embedTTFType3(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'embedTTFType3' in the type store
            # Getting the type of 'stypy_return_type' (line 914)
            stypy_return_type_234494 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 914, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_234494)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'embedTTFType3'
            return stypy_return_type_234494

        # Assigning a type to the variable 'embedTTFType3' (line 914)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 914, 8), 'embedTTFType3', embedTTFType3)

        @norecursion
        def embedTTFType42(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'embedTTFType42'
            module_type_store = module_type_store.open_function_context('embedTTFType42', 1028, 8, False)
            
            # Passed parameters checking function
            embedTTFType42.stypy_localization = localization
            embedTTFType42.stypy_type_of_self = None
            embedTTFType42.stypy_type_store = module_type_store
            embedTTFType42.stypy_function_name = 'embedTTFType42'
            embedTTFType42.stypy_param_names_list = ['font', 'characters', 'descriptor']
            embedTTFType42.stypy_varargs_param_name = None
            embedTTFType42.stypy_kwargs_param_name = None
            embedTTFType42.stypy_call_defaults = defaults
            embedTTFType42.stypy_call_varargs = varargs
            embedTTFType42.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'embedTTFType42', ['font', 'characters', 'descriptor'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'embedTTFType42', localization, ['font', 'characters', 'descriptor'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'embedTTFType42(...)' code ##################

            unicode_234495 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1029, 12), 'unicode', u'The Type 42-specific part of embedding a Truetype font')
            
            # Assigning a Call to a Name (line 1030):
            
            # Assigning a Call to a Name (line 1030):
            
            # Call to reserveObject(...): (line 1030)
            # Processing the call arguments (line 1030)
            unicode_234498 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1030, 48), 'unicode', u'font descriptor')
            # Processing the call keyword arguments (line 1030)
            kwargs_234499 = {}
            # Getting the type of 'self' (line 1030)
            self_234496 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1030, 29), 'self', False)
            # Obtaining the member 'reserveObject' of a type (line 1030)
            reserveObject_234497 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1030, 29), self_234496, 'reserveObject')
            # Calling reserveObject(args, kwargs) (line 1030)
            reserveObject_call_result_234500 = invoke(stypy.reporting.localization.Localization(__file__, 1030, 29), reserveObject_234497, *[unicode_234498], **kwargs_234499)
            
            # Assigning a type to the variable 'fontdescObject' (line 1030)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1030, 12), 'fontdescObject', reserveObject_call_result_234500)
            
            # Assigning a Call to a Name (line 1031):
            
            # Assigning a Call to a Name (line 1031):
            
            # Call to reserveObject(...): (line 1031)
            # Processing the call arguments (line 1031)
            unicode_234503 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1031, 51), 'unicode', u'CID font dictionary')
            # Processing the call keyword arguments (line 1031)
            kwargs_234504 = {}
            # Getting the type of 'self' (line 1031)
            self_234501 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1031, 32), 'self', False)
            # Obtaining the member 'reserveObject' of a type (line 1031)
            reserveObject_234502 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1031, 32), self_234501, 'reserveObject')
            # Calling reserveObject(args, kwargs) (line 1031)
            reserveObject_call_result_234505 = invoke(stypy.reporting.localization.Localization(__file__, 1031, 32), reserveObject_234502, *[unicode_234503], **kwargs_234504)
            
            # Assigning a type to the variable 'cidFontDictObject' (line 1031)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1031, 12), 'cidFontDictObject', reserveObject_call_result_234505)
            
            # Assigning a Call to a Name (line 1032):
            
            # Assigning a Call to a Name (line 1032):
            
            # Call to reserveObject(...): (line 1032)
            # Processing the call arguments (line 1032)
            unicode_234508 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1032, 53), 'unicode', u'Type 0 font dictionary')
            # Processing the call keyword arguments (line 1032)
            kwargs_234509 = {}
            # Getting the type of 'self' (line 1032)
            self_234506 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1032, 34), 'self', False)
            # Obtaining the member 'reserveObject' of a type (line 1032)
            reserveObject_234507 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1032, 34), self_234506, 'reserveObject')
            # Calling reserveObject(args, kwargs) (line 1032)
            reserveObject_call_result_234510 = invoke(stypy.reporting.localization.Localization(__file__, 1032, 34), reserveObject_234507, *[unicode_234508], **kwargs_234509)
            
            # Assigning a type to the variable 'type0FontDictObject' (line 1032)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1032, 12), 'type0FontDictObject', reserveObject_call_result_234510)
            
            # Assigning a Call to a Name (line 1033):
            
            # Assigning a Call to a Name (line 1033):
            
            # Call to reserveObject(...): (line 1033)
            # Processing the call arguments (line 1033)
            unicode_234513 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1033, 51), 'unicode', u'CIDToGIDMap stream')
            # Processing the call keyword arguments (line 1033)
            kwargs_234514 = {}
            # Getting the type of 'self' (line 1033)
            self_234511 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1033, 32), 'self', False)
            # Obtaining the member 'reserveObject' of a type (line 1033)
            reserveObject_234512 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1033, 32), self_234511, 'reserveObject')
            # Calling reserveObject(args, kwargs) (line 1033)
            reserveObject_call_result_234515 = invoke(stypy.reporting.localization.Localization(__file__, 1033, 32), reserveObject_234512, *[unicode_234513], **kwargs_234514)
            
            # Assigning a type to the variable 'cidToGidMapObject' (line 1033)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1033, 12), 'cidToGidMapObject', reserveObject_call_result_234515)
            
            # Assigning a Call to a Name (line 1034):
            
            # Assigning a Call to a Name (line 1034):
            
            # Call to reserveObject(...): (line 1034)
            # Processing the call arguments (line 1034)
            unicode_234518 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1034, 48), 'unicode', u'font file stream')
            # Processing the call keyword arguments (line 1034)
            kwargs_234519 = {}
            # Getting the type of 'self' (line 1034)
            self_234516 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1034, 29), 'self', False)
            # Obtaining the member 'reserveObject' of a type (line 1034)
            reserveObject_234517 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1034, 29), self_234516, 'reserveObject')
            # Calling reserveObject(args, kwargs) (line 1034)
            reserveObject_call_result_234520 = invoke(stypy.reporting.localization.Localization(__file__, 1034, 29), reserveObject_234517, *[unicode_234518], **kwargs_234519)
            
            # Assigning a type to the variable 'fontfileObject' (line 1034)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1034, 12), 'fontfileObject', reserveObject_call_result_234520)
            
            # Assigning a Call to a Name (line 1035):
            
            # Assigning a Call to a Name (line 1035):
            
            # Call to reserveObject(...): (line 1035)
            # Processing the call arguments (line 1035)
            unicode_234523 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1035, 41), 'unicode', u'Type 0 widths')
            # Processing the call keyword arguments (line 1035)
            kwargs_234524 = {}
            # Getting the type of 'self' (line 1035)
            self_234521 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 22), 'self', False)
            # Obtaining the member 'reserveObject' of a type (line 1035)
            reserveObject_234522 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1035, 22), self_234521, 'reserveObject')
            # Calling reserveObject(args, kwargs) (line 1035)
            reserveObject_call_result_234525 = invoke(stypy.reporting.localization.Localization(__file__, 1035, 22), reserveObject_234522, *[unicode_234523], **kwargs_234524)
            
            # Assigning a type to the variable 'wObject' (line 1035)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1035, 12), 'wObject', reserveObject_call_result_234525)
            
            # Assigning a Call to a Name (line 1036):
            
            # Assigning a Call to a Name (line 1036):
            
            # Call to reserveObject(...): (line 1036)
            # Processing the call arguments (line 1036)
            unicode_234528 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1036, 52), 'unicode', u'ToUnicode map')
            # Processing the call keyword arguments (line 1036)
            kwargs_234529 = {}
            # Getting the type of 'self' (line 1036)
            self_234526 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1036, 33), 'self', False)
            # Obtaining the member 'reserveObject' of a type (line 1036)
            reserveObject_234527 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1036, 33), self_234526, 'reserveObject')
            # Calling reserveObject(args, kwargs) (line 1036)
            reserveObject_call_result_234530 = invoke(stypy.reporting.localization.Localization(__file__, 1036, 33), reserveObject_234527, *[unicode_234528], **kwargs_234529)
            
            # Assigning a type to the variable 'toUnicodeMapObject' (line 1036)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1036, 12), 'toUnicodeMapObject', reserveObject_call_result_234530)
            
            # Assigning a Dict to a Name (line 1038):
            
            # Assigning a Dict to a Name (line 1038):
            
            # Obtaining an instance of the builtin type 'dict' (line 1038)
            dict_234531 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1038, 26), 'dict')
            # Adding type elements to the builtin type 'dict' instance (line 1038)
            # Adding element type (key, value) (line 1038)
            unicode_234532 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1039, 16), 'unicode', u'Type')
            
            # Call to Name(...): (line 1039)
            # Processing the call arguments (line 1039)
            unicode_234534 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1039, 29), 'unicode', u'Font')
            # Processing the call keyword arguments (line 1039)
            kwargs_234535 = {}
            # Getting the type of 'Name' (line 1039)
            Name_234533 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1039, 24), 'Name', False)
            # Calling Name(args, kwargs) (line 1039)
            Name_call_result_234536 = invoke(stypy.reporting.localization.Localization(__file__, 1039, 24), Name_234533, *[unicode_234534], **kwargs_234535)
            
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1038, 26), dict_234531, (unicode_234532, Name_call_result_234536))
            # Adding element type (key, value) (line 1038)
            unicode_234537 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1040, 16), 'unicode', u'Subtype')
            
            # Call to Name(...): (line 1040)
            # Processing the call arguments (line 1040)
            unicode_234539 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1040, 32), 'unicode', u'CIDFontType2')
            # Processing the call keyword arguments (line 1040)
            kwargs_234540 = {}
            # Getting the type of 'Name' (line 1040)
            Name_234538 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1040, 27), 'Name', False)
            # Calling Name(args, kwargs) (line 1040)
            Name_call_result_234541 = invoke(stypy.reporting.localization.Localization(__file__, 1040, 27), Name_234538, *[unicode_234539], **kwargs_234540)
            
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1038, 26), dict_234531, (unicode_234537, Name_call_result_234541))
            # Adding element type (key, value) (line 1038)
            unicode_234542 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1041, 16), 'unicode', u'BaseFont')
            # Getting the type of 'ps_name' (line 1041)
            ps_name_234543 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1041, 28), 'ps_name')
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1038, 26), dict_234531, (unicode_234542, ps_name_234543))
            # Adding element type (key, value) (line 1038)
            unicode_234544 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1042, 16), 'unicode', u'CIDSystemInfo')
            
            # Obtaining an instance of the builtin type 'dict' (line 1042)
            dict_234545 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1042, 33), 'dict')
            # Adding type elements to the builtin type 'dict' instance (line 1042)
            # Adding element type (key, value) (line 1042)
            unicode_234546 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1043, 20), 'unicode', u'Registry')
            unicode_234547 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1043, 32), 'unicode', u'Adobe')
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1042, 33), dict_234545, (unicode_234546, unicode_234547))
            # Adding element type (key, value) (line 1042)
            unicode_234548 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1044, 20), 'unicode', u'Ordering')
            unicode_234549 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1044, 32), 'unicode', u'Identity')
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1042, 33), dict_234545, (unicode_234548, unicode_234549))
            # Adding element type (key, value) (line 1042)
            unicode_234550 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1045, 20), 'unicode', u'Supplement')
            int_234551 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1045, 34), 'int')
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1042, 33), dict_234545, (unicode_234550, int_234551))
            
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1038, 26), dict_234531, (unicode_234544, dict_234545))
            # Adding element type (key, value) (line 1038)
            unicode_234552 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1046, 16), 'unicode', u'FontDescriptor')
            # Getting the type of 'fontdescObject' (line 1046)
            fontdescObject_234553 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1046, 34), 'fontdescObject')
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1038, 26), dict_234531, (unicode_234552, fontdescObject_234553))
            # Adding element type (key, value) (line 1038)
            unicode_234554 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1047, 16), 'unicode', u'W')
            # Getting the type of 'wObject' (line 1047)
            wObject_234555 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1047, 21), 'wObject')
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1038, 26), dict_234531, (unicode_234554, wObject_234555))
            # Adding element type (key, value) (line 1038)
            unicode_234556 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1048, 16), 'unicode', u'CIDToGIDMap')
            # Getting the type of 'cidToGidMapObject' (line 1048)
            cidToGidMapObject_234557 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1048, 31), 'cidToGidMapObject')
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1038, 26), dict_234531, (unicode_234556, cidToGidMapObject_234557))
            
            # Assigning a type to the variable 'cidFontDict' (line 1038)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1038, 12), 'cidFontDict', dict_234531)
            
            # Assigning a Dict to a Name (line 1051):
            
            # Assigning a Dict to a Name (line 1051):
            
            # Obtaining an instance of the builtin type 'dict' (line 1051)
            dict_234558 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1051, 28), 'dict')
            # Adding type elements to the builtin type 'dict' instance (line 1051)
            # Adding element type (key, value) (line 1051)
            unicode_234559 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1052, 16), 'unicode', u'Type')
            
            # Call to Name(...): (line 1052)
            # Processing the call arguments (line 1052)
            unicode_234561 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1052, 29), 'unicode', u'Font')
            # Processing the call keyword arguments (line 1052)
            kwargs_234562 = {}
            # Getting the type of 'Name' (line 1052)
            Name_234560 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1052, 24), 'Name', False)
            # Calling Name(args, kwargs) (line 1052)
            Name_call_result_234563 = invoke(stypy.reporting.localization.Localization(__file__, 1052, 24), Name_234560, *[unicode_234561], **kwargs_234562)
            
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1051, 28), dict_234558, (unicode_234559, Name_call_result_234563))
            # Adding element type (key, value) (line 1051)
            unicode_234564 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1053, 16), 'unicode', u'Subtype')
            
            # Call to Name(...): (line 1053)
            # Processing the call arguments (line 1053)
            unicode_234566 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1053, 32), 'unicode', u'Type0')
            # Processing the call keyword arguments (line 1053)
            kwargs_234567 = {}
            # Getting the type of 'Name' (line 1053)
            Name_234565 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1053, 27), 'Name', False)
            # Calling Name(args, kwargs) (line 1053)
            Name_call_result_234568 = invoke(stypy.reporting.localization.Localization(__file__, 1053, 27), Name_234565, *[unicode_234566], **kwargs_234567)
            
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1051, 28), dict_234558, (unicode_234564, Name_call_result_234568))
            # Adding element type (key, value) (line 1051)
            unicode_234569 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1054, 16), 'unicode', u'BaseFont')
            # Getting the type of 'ps_name' (line 1054)
            ps_name_234570 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1054, 28), 'ps_name')
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1051, 28), dict_234558, (unicode_234569, ps_name_234570))
            # Adding element type (key, value) (line 1051)
            unicode_234571 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1055, 16), 'unicode', u'Encoding')
            
            # Call to Name(...): (line 1055)
            # Processing the call arguments (line 1055)
            unicode_234573 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1055, 33), 'unicode', u'Identity-H')
            # Processing the call keyword arguments (line 1055)
            kwargs_234574 = {}
            # Getting the type of 'Name' (line 1055)
            Name_234572 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1055, 28), 'Name', False)
            # Calling Name(args, kwargs) (line 1055)
            Name_call_result_234575 = invoke(stypy.reporting.localization.Localization(__file__, 1055, 28), Name_234572, *[unicode_234573], **kwargs_234574)
            
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1051, 28), dict_234558, (unicode_234571, Name_call_result_234575))
            # Adding element type (key, value) (line 1051)
            unicode_234576 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1056, 16), 'unicode', u'DescendantFonts')
            
            # Obtaining an instance of the builtin type 'list' (line 1056)
            list_234577 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1056, 35), 'list')
            # Adding type elements to the builtin type 'list' instance (line 1056)
            # Adding element type (line 1056)
            # Getting the type of 'cidFontDictObject' (line 1056)
            cidFontDictObject_234578 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1056, 36), 'cidFontDictObject')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1056, 35), list_234577, cidFontDictObject_234578)
            
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1051, 28), dict_234558, (unicode_234576, list_234577))
            # Adding element type (key, value) (line 1051)
            unicode_234579 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1057, 16), 'unicode', u'ToUnicode')
            # Getting the type of 'toUnicodeMapObject' (line 1057)
            toUnicodeMapObject_234580 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1057, 29), 'toUnicodeMapObject')
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1051, 28), dict_234558, (unicode_234579, toUnicodeMapObject_234580))
            
            # Assigning a type to the variable 'type0FontDict' (line 1051)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1051, 12), 'type0FontDict', dict_234558)
            
            # Assigning a Name to a Subscript (line 1061):
            
            # Assigning a Name to a Subscript (line 1061):
            # Getting the type of 'fontfileObject' (line 1061)
            fontfileObject_234581 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1061, 38), 'fontfileObject')
            # Getting the type of 'descriptor' (line 1061)
            descriptor_234582 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1061, 12), 'descriptor')
            unicode_234583 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1061, 23), 'unicode', u'FontFile2')
            # Storing an element on a container (line 1061)
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1061, 12), descriptor_234582, (unicode_234583, fontfileObject_234581))
            
            # Assigning a Call to a Name (line 1062):
            
            # Assigning a Call to a Name (line 1062):
            
            # Call to reserveObject(...): (line 1062)
            # Processing the call arguments (line 1062)
            unicode_234586 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1062, 47), 'unicode', u'decoded length of a font')
            # Processing the call keyword arguments (line 1062)
            kwargs_234587 = {}
            # Getting the type of 'self' (line 1062)
            self_234584 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1062, 28), 'self', False)
            # Obtaining the member 'reserveObject' of a type (line 1062)
            reserveObject_234585 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1062, 28), self_234584, 'reserveObject')
            # Calling reserveObject(args, kwargs) (line 1062)
            reserveObject_call_result_234588 = invoke(stypy.reporting.localization.Localization(__file__, 1062, 28), reserveObject_234585, *[unicode_234586], **kwargs_234587)
            
            # Assigning a type to the variable 'length1Object' (line 1062)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1062, 12), 'length1Object', reserveObject_call_result_234588)
            
            # Call to beginStream(...): (line 1063)
            # Processing the call arguments (line 1063)
            # Getting the type of 'fontfileObject' (line 1064)
            fontfileObject_234591 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1064, 16), 'fontfileObject', False)
            # Obtaining the member 'id' of a type (line 1064)
            id_234592 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1064, 16), fontfileObject_234591, 'id')
            
            # Call to reserveObject(...): (line 1065)
            # Processing the call arguments (line 1065)
            unicode_234595 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1065, 35), 'unicode', u'length of font stream')
            # Processing the call keyword arguments (line 1065)
            kwargs_234596 = {}
            # Getting the type of 'self' (line 1065)
            self_234593 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1065, 16), 'self', False)
            # Obtaining the member 'reserveObject' of a type (line 1065)
            reserveObject_234594 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1065, 16), self_234593, 'reserveObject')
            # Calling reserveObject(args, kwargs) (line 1065)
            reserveObject_call_result_234597 = invoke(stypy.reporting.localization.Localization(__file__, 1065, 16), reserveObject_234594, *[unicode_234595], **kwargs_234596)
            
            
            # Obtaining an instance of the builtin type 'dict' (line 1066)
            dict_234598 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1066, 16), 'dict')
            # Adding type elements to the builtin type 'dict' instance (line 1066)
            # Adding element type (key, value) (line 1066)
            unicode_234599 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1066, 17), 'unicode', u'Length1')
            # Getting the type of 'length1Object' (line 1066)
            length1Object_234600 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1066, 28), 'length1Object', False)
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1066, 16), dict_234598, (unicode_234599, length1Object_234600))
            
            # Processing the call keyword arguments (line 1063)
            kwargs_234601 = {}
            # Getting the type of 'self' (line 1063)
            self_234589 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1063, 12), 'self', False)
            # Obtaining the member 'beginStream' of a type (line 1063)
            beginStream_234590 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1063, 12), self_234589, 'beginStream')
            # Calling beginStream(args, kwargs) (line 1063)
            beginStream_call_result_234602 = invoke(stypy.reporting.localization.Localization(__file__, 1063, 12), beginStream_234590, *[id_234592, reserveObject_call_result_234597, dict_234598], **kwargs_234601)
            
            
            # Call to open(...): (line 1067)
            # Processing the call arguments (line 1067)
            # Getting the type of 'filename' (line 1067)
            filename_234604 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1067, 22), 'filename', False)
            unicode_234605 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1067, 32), 'unicode', u'rb')
            # Processing the call keyword arguments (line 1067)
            kwargs_234606 = {}
            # Getting the type of 'open' (line 1067)
            open_234603 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1067, 17), 'open', False)
            # Calling open(args, kwargs) (line 1067)
            open_call_result_234607 = invoke(stypy.reporting.localization.Localization(__file__, 1067, 17), open_234603, *[filename_234604, unicode_234605], **kwargs_234606)
            
            with_234608 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 1067, 17), open_call_result_234607, 'with parameter', '__enter__', '__exit__')

            if with_234608:
                # Calling the __enter__ method to initiate a with section
                # Obtaining the member '__enter__' of a type (line 1067)
                enter___234609 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1067, 17), open_call_result_234607, '__enter__')
                with_enter_234610 = invoke(stypy.reporting.localization.Localization(__file__, 1067, 17), enter___234609)
                # Assigning a type to the variable 'fontfile' (line 1067)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1067, 17), 'fontfile', with_enter_234610)
                
                # Assigning a Num to a Name (line 1068):
                
                # Assigning a Num to a Name (line 1068):
                int_234611 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1068, 26), 'int')
                # Assigning a type to the variable 'length1' (line 1068)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1068, 16), 'length1', int_234611)
                
                # Getting the type of 'True' (line 1069)
                True_234612 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1069, 22), 'True')
                # Testing the type of an if condition (line 1069)
                is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1069, 16), True_234612)
                # SSA begins for while statement (line 1069)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'while loop')
                
                # Assigning a Call to a Name (line 1070):
                
                # Assigning a Call to a Name (line 1070):
                
                # Call to read(...): (line 1070)
                # Processing the call arguments (line 1070)
                int_234615 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1070, 41), 'int')
                # Processing the call keyword arguments (line 1070)
                kwargs_234616 = {}
                # Getting the type of 'fontfile' (line 1070)
                fontfile_234613 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1070, 27), 'fontfile', False)
                # Obtaining the member 'read' of a type (line 1070)
                read_234614 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1070, 27), fontfile_234613, 'read')
                # Calling read(args, kwargs) (line 1070)
                read_call_result_234617 = invoke(stypy.reporting.localization.Localization(__file__, 1070, 27), read_234614, *[int_234615], **kwargs_234616)
                
                # Assigning a type to the variable 'data' (line 1070)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1070, 20), 'data', read_call_result_234617)
                
                
                # Getting the type of 'data' (line 1071)
                data_234618 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1071, 27), 'data')
                # Applying the 'not' unary operator (line 1071)
                result_not__234619 = python_operator(stypy.reporting.localization.Localization(__file__, 1071, 23), 'not', data_234618)
                
                # Testing the type of an if condition (line 1071)
                if_condition_234620 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1071, 20), result_not__234619)
                # Assigning a type to the variable 'if_condition_234620' (line 1071)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1071, 20), 'if_condition_234620', if_condition_234620)
                # SSA begins for if statement (line 1071)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                # SSA join for if statement (line 1071)
                module_type_store = module_type_store.join_ssa_context()
                
                
                # Getting the type of 'length1' (line 1073)
                length1_234621 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1073, 20), 'length1')
                
                # Call to len(...): (line 1073)
                # Processing the call arguments (line 1073)
                # Getting the type of 'data' (line 1073)
                data_234623 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1073, 35), 'data', False)
                # Processing the call keyword arguments (line 1073)
                kwargs_234624 = {}
                # Getting the type of 'len' (line 1073)
                len_234622 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1073, 31), 'len', False)
                # Calling len(args, kwargs) (line 1073)
                len_call_result_234625 = invoke(stypy.reporting.localization.Localization(__file__, 1073, 31), len_234622, *[data_234623], **kwargs_234624)
                
                # Applying the binary operator '+=' (line 1073)
                result_iadd_234626 = python_operator(stypy.reporting.localization.Localization(__file__, 1073, 20), '+=', length1_234621, len_call_result_234625)
                # Assigning a type to the variable 'length1' (line 1073)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1073, 20), 'length1', result_iadd_234626)
                
                
                # Call to write(...): (line 1074)
                # Processing the call arguments (line 1074)
                # Getting the type of 'data' (line 1074)
                data_234630 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1074, 45), 'data', False)
                # Processing the call keyword arguments (line 1074)
                kwargs_234631 = {}
                # Getting the type of 'self' (line 1074)
                self_234627 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1074, 20), 'self', False)
                # Obtaining the member 'currentstream' of a type (line 1074)
                currentstream_234628 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1074, 20), self_234627, 'currentstream')
                # Obtaining the member 'write' of a type (line 1074)
                write_234629 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1074, 20), currentstream_234628, 'write')
                # Calling write(args, kwargs) (line 1074)
                write_call_result_234632 = invoke(stypy.reporting.localization.Localization(__file__, 1074, 20), write_234629, *[data_234630], **kwargs_234631)
                
                # SSA join for while statement (line 1069)
                module_type_store = module_type_store.join_ssa_context()
                
                # Calling the __exit__ method to finish a with section
                # Obtaining the member '__exit__' of a type (line 1067)
                exit___234633 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1067, 17), open_call_result_234607, '__exit__')
                with_exit_234634 = invoke(stypy.reporting.localization.Localization(__file__, 1067, 17), exit___234633, None, None, None)

            
            # Call to endStream(...): (line 1075)
            # Processing the call keyword arguments (line 1075)
            kwargs_234637 = {}
            # Getting the type of 'self' (line 1075)
            self_234635 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1075, 12), 'self', False)
            # Obtaining the member 'endStream' of a type (line 1075)
            endStream_234636 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1075, 12), self_234635, 'endStream')
            # Calling endStream(args, kwargs) (line 1075)
            endStream_call_result_234638 = invoke(stypy.reporting.localization.Localization(__file__, 1075, 12), endStream_234636, *[], **kwargs_234637)
            
            
            # Call to writeObject(...): (line 1076)
            # Processing the call arguments (line 1076)
            # Getting the type of 'length1Object' (line 1076)
            length1Object_234641 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1076, 29), 'length1Object', False)
            # Getting the type of 'length1' (line 1076)
            length1_234642 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1076, 44), 'length1', False)
            # Processing the call keyword arguments (line 1076)
            kwargs_234643 = {}
            # Getting the type of 'self' (line 1076)
            self_234639 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1076, 12), 'self', False)
            # Obtaining the member 'writeObject' of a type (line 1076)
            writeObject_234640 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1076, 12), self_234639, 'writeObject')
            # Calling writeObject(args, kwargs) (line 1076)
            writeObject_call_result_234644 = invoke(stypy.reporting.localization.Localization(__file__, 1076, 12), writeObject_234640, *[length1Object_234641, length1_234642], **kwargs_234643)
            
            
            # Assigning a BinOp to a Name (line 1080):
            
            # Assigning a BinOp to a Name (line 1080):
            
            # Obtaining an instance of the builtin type 'list' (line 1080)
            list_234645 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1080, 29), 'list')
            # Adding type elements to the builtin type 'list' instance (line 1080)
            # Adding element type (line 1080)
            unicode_234646 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1080, 30), 'unicode', u'\x00')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1080, 29), list_234645, unicode_234646)
            
            int_234647 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1080, 38), 'int')
            # Applying the binary operator '*' (line 1080)
            result_mul_234648 = python_operator(stypy.reporting.localization.Localization(__file__, 1080, 29), '*', list_234645, int_234647)
            
            # Assigning a type to the variable 'cid_to_gid_map' (line 1080)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1080, 12), 'cid_to_gid_map', result_mul_234648)
            
            # Assigning a List to a Name (line 1081):
            
            # Assigning a List to a Name (line 1081):
            
            # Obtaining an instance of the builtin type 'list' (line 1081)
            list_234649 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1081, 21), 'list')
            # Adding type elements to the builtin type 'list' instance (line 1081)
            
            # Assigning a type to the variable 'widths' (line 1081)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1081, 12), 'widths', list_234649)
            
            # Assigning a Num to a Name (line 1082):
            
            # Assigning a Num to a Name (line 1082):
            int_234650 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1082, 24), 'int')
            # Assigning a type to the variable 'max_ccode' (line 1082)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1082, 12), 'max_ccode', int_234650)
            
            # Getting the type of 'characters' (line 1083)
            characters_234651 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1083, 21), 'characters')
            # Testing the type of a for loop iterable (line 1083)
            is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1083, 12), characters_234651)
            # Getting the type of the for loop variable (line 1083)
            for_loop_var_234652 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1083, 12), characters_234651)
            # Assigning a type to the variable 'c' (line 1083)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1083, 12), 'c', for_loop_var_234652)
            # SSA begins for a for statement (line 1083)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
            
            # Assigning a Name to a Name (line 1084):
            
            # Assigning a Name to a Name (line 1084):
            # Getting the type of 'c' (line 1084)
            c_234653 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1084, 24), 'c')
            # Assigning a type to the variable 'ccode' (line 1084)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1084, 16), 'ccode', c_234653)
            
            # Assigning a Call to a Name (line 1085):
            
            # Assigning a Call to a Name (line 1085):
            
            # Call to get_char_index(...): (line 1085)
            # Processing the call arguments (line 1085)
            # Getting the type of 'ccode' (line 1085)
            ccode_234656 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1085, 43), 'ccode', False)
            # Processing the call keyword arguments (line 1085)
            kwargs_234657 = {}
            # Getting the type of 'font' (line 1085)
            font_234654 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1085, 23), 'font', False)
            # Obtaining the member 'get_char_index' of a type (line 1085)
            get_char_index_234655 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1085, 23), font_234654, 'get_char_index')
            # Calling get_char_index(args, kwargs) (line 1085)
            get_char_index_call_result_234658 = invoke(stypy.reporting.localization.Localization(__file__, 1085, 23), get_char_index_234655, *[ccode_234656], **kwargs_234657)
            
            # Assigning a type to the variable 'gind' (line 1085)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1085, 16), 'gind', get_char_index_call_result_234658)
            
            # Assigning a Call to a Name (line 1086):
            
            # Assigning a Call to a Name (line 1086):
            
            # Call to load_char(...): (line 1086)
            # Processing the call arguments (line 1086)
            # Getting the type of 'ccode' (line 1086)
            ccode_234661 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1086, 39), 'ccode', False)
            # Processing the call keyword arguments (line 1086)
            # Getting the type of 'LOAD_NO_SCALE' (line 1087)
            LOAD_NO_SCALE_234662 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1087, 45), 'LOAD_NO_SCALE', False)
            # Getting the type of 'LOAD_NO_HINTING' (line 1087)
            LOAD_NO_HINTING_234663 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1087, 61), 'LOAD_NO_HINTING', False)
            # Applying the binary operator '|' (line 1087)
            result_or__234664 = python_operator(stypy.reporting.localization.Localization(__file__, 1087, 45), '|', LOAD_NO_SCALE_234662, LOAD_NO_HINTING_234663)
            
            keyword_234665 = result_or__234664
            kwargs_234666 = {'flags': keyword_234665}
            # Getting the type of 'font' (line 1086)
            font_234659 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1086, 24), 'font', False)
            # Obtaining the member 'load_char' of a type (line 1086)
            load_char_234660 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1086, 24), font_234659, 'load_char')
            # Calling load_char(args, kwargs) (line 1086)
            load_char_call_result_234667 = invoke(stypy.reporting.localization.Localization(__file__, 1086, 24), load_char_234660, *[ccode_234661], **kwargs_234666)
            
            # Assigning a type to the variable 'glyph' (line 1086)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1086, 16), 'glyph', load_char_call_result_234667)
            
            # Call to append(...): (line 1088)
            # Processing the call arguments (line 1088)
            
            # Obtaining an instance of the builtin type 'tuple' (line 1088)
            tuple_234670 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1088, 31), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 1088)
            # Adding element type (line 1088)
            # Getting the type of 'ccode' (line 1088)
            ccode_234671 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1088, 31), 'ccode', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1088, 31), tuple_234670, ccode_234671)
            # Adding element type (line 1088)
            
            # Call to cvt(...): (line 1088)
            # Processing the call arguments (line 1088)
            # Getting the type of 'glyph' (line 1088)
            glyph_234673 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1088, 42), 'glyph', False)
            # Obtaining the member 'horiAdvance' of a type (line 1088)
            horiAdvance_234674 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1088, 42), glyph_234673, 'horiAdvance')
            # Processing the call keyword arguments (line 1088)
            kwargs_234675 = {}
            # Getting the type of 'cvt' (line 1088)
            cvt_234672 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1088, 38), 'cvt', False)
            # Calling cvt(args, kwargs) (line 1088)
            cvt_call_result_234676 = invoke(stypy.reporting.localization.Localization(__file__, 1088, 38), cvt_234672, *[horiAdvance_234674], **kwargs_234675)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1088, 31), tuple_234670, cvt_call_result_234676)
            
            # Processing the call keyword arguments (line 1088)
            kwargs_234677 = {}
            # Getting the type of 'widths' (line 1088)
            widths_234668 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1088, 16), 'widths', False)
            # Obtaining the member 'append' of a type (line 1088)
            append_234669 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1088, 16), widths_234668, 'append')
            # Calling append(args, kwargs) (line 1088)
            append_call_result_234678 = invoke(stypy.reporting.localization.Localization(__file__, 1088, 16), append_234669, *[tuple_234670], **kwargs_234677)
            
            
            
            # Getting the type of 'ccode' (line 1089)
            ccode_234679 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1089, 19), 'ccode')
            int_234680 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1089, 27), 'int')
            # Applying the binary operator '<' (line 1089)
            result_lt_234681 = python_operator(stypy.reporting.localization.Localization(__file__, 1089, 19), '<', ccode_234679, int_234680)
            
            # Testing the type of an if condition (line 1089)
            if_condition_234682 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1089, 16), result_lt_234681)
            # Assigning a type to the variable 'if_condition_234682' (line 1089)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1089, 16), 'if_condition_234682', if_condition_234682)
            # SSA begins for if statement (line 1089)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Call to a Subscript (line 1090):
            
            # Assigning a Call to a Subscript (line 1090):
            
            # Call to unichr(...): (line 1090)
            # Processing the call arguments (line 1090)
            # Getting the type of 'gind' (line 1090)
            gind_234684 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1090, 51), 'gind', False)
            # Processing the call keyword arguments (line 1090)
            kwargs_234685 = {}
            # Getting the type of 'unichr' (line 1090)
            unichr_234683 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1090, 44), 'unichr', False)
            # Calling unichr(args, kwargs) (line 1090)
            unichr_call_result_234686 = invoke(stypy.reporting.localization.Localization(__file__, 1090, 44), unichr_234683, *[gind_234684], **kwargs_234685)
            
            # Getting the type of 'cid_to_gid_map' (line 1090)
            cid_to_gid_map_234687 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1090, 20), 'cid_to_gid_map')
            # Getting the type of 'ccode' (line 1090)
            ccode_234688 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1090, 35), 'ccode')
            # Storing an element on a container (line 1090)
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1090, 20), cid_to_gid_map_234687, (ccode_234688, unichr_call_result_234686))
            # SSA join for if statement (line 1089)
            module_type_store = module_type_store.join_ssa_context()
            
            
            # Assigning a Call to a Name (line 1091):
            
            # Assigning a Call to a Name (line 1091):
            
            # Call to max(...): (line 1091)
            # Processing the call arguments (line 1091)
            # Getting the type of 'ccode' (line 1091)
            ccode_234690 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1091, 32), 'ccode', False)
            # Getting the type of 'max_ccode' (line 1091)
            max_ccode_234691 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1091, 39), 'max_ccode', False)
            # Processing the call keyword arguments (line 1091)
            kwargs_234692 = {}
            # Getting the type of 'max' (line 1091)
            max_234689 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1091, 28), 'max', False)
            # Calling max(args, kwargs) (line 1091)
            max_call_result_234693 = invoke(stypy.reporting.localization.Localization(__file__, 1091, 28), max_234689, *[ccode_234690, max_ccode_234691], **kwargs_234692)
            
            # Assigning a type to the variable 'max_ccode' (line 1091)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1091, 16), 'max_ccode', max_call_result_234693)
            # SSA join for a for statement
            module_type_store = module_type_store.join_ssa_context()
            
            
            # Call to sort(...): (line 1092)
            # Processing the call keyword arguments (line 1092)
            kwargs_234696 = {}
            # Getting the type of 'widths' (line 1092)
            widths_234694 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1092, 12), 'widths', False)
            # Obtaining the member 'sort' of a type (line 1092)
            sort_234695 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1092, 12), widths_234694, 'sort')
            # Calling sort(args, kwargs) (line 1092)
            sort_call_result_234697 = invoke(stypy.reporting.localization.Localization(__file__, 1092, 12), sort_234695, *[], **kwargs_234696)
            
            
            # Assigning a Subscript to a Name (line 1093):
            
            # Assigning a Subscript to a Name (line 1093):
            
            # Obtaining the type of the subscript
            # Getting the type of 'max_ccode' (line 1093)
            max_ccode_234698 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1093, 45), 'max_ccode')
            int_234699 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1093, 57), 'int')
            # Applying the binary operator '+' (line 1093)
            result_add_234700 = python_operator(stypy.reporting.localization.Localization(__file__, 1093, 45), '+', max_ccode_234698, int_234699)
            
            slice_234701 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1093, 29), None, result_add_234700, None)
            # Getting the type of 'cid_to_gid_map' (line 1093)
            cid_to_gid_map_234702 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1093, 29), 'cid_to_gid_map')
            # Obtaining the member '__getitem__' of a type (line 1093)
            getitem___234703 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1093, 29), cid_to_gid_map_234702, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 1093)
            subscript_call_result_234704 = invoke(stypy.reporting.localization.Localization(__file__, 1093, 29), getitem___234703, slice_234701)
            
            # Assigning a type to the variable 'cid_to_gid_map' (line 1093)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1093, 12), 'cid_to_gid_map', subscript_call_result_234704)
            
            # Assigning a Num to a Name (line 1095):
            
            # Assigning a Num to a Name (line 1095):
            int_234705 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1095, 25), 'int')
            # Assigning a type to the variable 'last_ccode' (line 1095)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1095, 12), 'last_ccode', int_234705)
            
            # Assigning a List to a Name (line 1096):
            
            # Assigning a List to a Name (line 1096):
            
            # Obtaining an instance of the builtin type 'list' (line 1096)
            list_234706 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1096, 16), 'list')
            # Adding type elements to the builtin type 'list' instance (line 1096)
            
            # Assigning a type to the variable 'w' (line 1096)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1096, 12), 'w', list_234706)
            
            # Assigning a Num to a Name (line 1097):
            
            # Assigning a Num to a Name (line 1097):
            int_234707 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1097, 24), 'int')
            # Assigning a type to the variable 'max_width' (line 1097)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1097, 12), 'max_width', int_234707)
            
            # Assigning a List to a Name (line 1098):
            
            # Assigning a List to a Name (line 1098):
            
            # Obtaining an instance of the builtin type 'list' (line 1098)
            list_234708 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1098, 29), 'list')
            # Adding type elements to the builtin type 'list' instance (line 1098)
            
            # Assigning a type to the variable 'unicode_groups' (line 1098)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1098, 12), 'unicode_groups', list_234708)
            
            # Getting the type of 'widths' (line 1099)
            widths_234709 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1099, 32), 'widths')
            # Testing the type of a for loop iterable (line 1099)
            is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1099, 12), widths_234709)
            # Getting the type of the for loop variable (line 1099)
            for_loop_var_234710 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1099, 12), widths_234709)
            # Assigning a type to the variable 'ccode' (line 1099)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1099, 12), 'ccode', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1099, 12), for_loop_var_234710))
            # Assigning a type to the variable 'width' (line 1099)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1099, 12), 'width', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1099, 12), for_loop_var_234710))
            # SSA begins for a for statement (line 1099)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
            
            
            # Getting the type of 'ccode' (line 1100)
            ccode_234711 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1100, 19), 'ccode')
            # Getting the type of 'last_ccode' (line 1100)
            last_ccode_234712 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1100, 28), 'last_ccode')
            int_234713 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1100, 41), 'int')
            # Applying the binary operator '+' (line 1100)
            result_add_234714 = python_operator(stypy.reporting.localization.Localization(__file__, 1100, 28), '+', last_ccode_234712, int_234713)
            
            # Applying the binary operator '!=' (line 1100)
            result_ne_234715 = python_operator(stypy.reporting.localization.Localization(__file__, 1100, 19), '!=', ccode_234711, result_add_234714)
            
            # Testing the type of an if condition (line 1100)
            if_condition_234716 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1100, 16), result_ne_234715)
            # Assigning a type to the variable 'if_condition_234716' (line 1100)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1100, 16), 'if_condition_234716', if_condition_234716)
            # SSA begins for if statement (line 1100)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Call to append(...): (line 1101)
            # Processing the call arguments (line 1101)
            # Getting the type of 'ccode' (line 1101)
            ccode_234719 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1101, 29), 'ccode', False)
            # Processing the call keyword arguments (line 1101)
            kwargs_234720 = {}
            # Getting the type of 'w' (line 1101)
            w_234717 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1101, 20), 'w', False)
            # Obtaining the member 'append' of a type (line 1101)
            append_234718 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1101, 20), w_234717, 'append')
            # Calling append(args, kwargs) (line 1101)
            append_call_result_234721 = invoke(stypy.reporting.localization.Localization(__file__, 1101, 20), append_234718, *[ccode_234719], **kwargs_234720)
            
            
            # Call to append(...): (line 1102)
            # Processing the call arguments (line 1102)
            
            # Obtaining an instance of the builtin type 'list' (line 1102)
            list_234724 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1102, 29), 'list')
            # Adding type elements to the builtin type 'list' instance (line 1102)
            # Adding element type (line 1102)
            # Getting the type of 'width' (line 1102)
            width_234725 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1102, 30), 'width', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1102, 29), list_234724, width_234725)
            
            # Processing the call keyword arguments (line 1102)
            kwargs_234726 = {}
            # Getting the type of 'w' (line 1102)
            w_234722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1102, 20), 'w', False)
            # Obtaining the member 'append' of a type (line 1102)
            append_234723 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1102, 20), w_234722, 'append')
            # Calling append(args, kwargs) (line 1102)
            append_call_result_234727 = invoke(stypy.reporting.localization.Localization(__file__, 1102, 20), append_234723, *[list_234724], **kwargs_234726)
            
            
            # Call to append(...): (line 1103)
            # Processing the call arguments (line 1103)
            
            # Obtaining an instance of the builtin type 'list' (line 1103)
            list_234730 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1103, 42), 'list')
            # Adding type elements to the builtin type 'list' instance (line 1103)
            # Adding element type (line 1103)
            # Getting the type of 'ccode' (line 1103)
            ccode_234731 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1103, 43), 'ccode', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1103, 42), list_234730, ccode_234731)
            # Adding element type (line 1103)
            # Getting the type of 'ccode' (line 1103)
            ccode_234732 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1103, 50), 'ccode', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1103, 42), list_234730, ccode_234732)
            
            # Processing the call keyword arguments (line 1103)
            kwargs_234733 = {}
            # Getting the type of 'unicode_groups' (line 1103)
            unicode_groups_234728 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1103, 20), 'unicode_groups', False)
            # Obtaining the member 'append' of a type (line 1103)
            append_234729 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1103, 20), unicode_groups_234728, 'append')
            # Calling append(args, kwargs) (line 1103)
            append_call_result_234734 = invoke(stypy.reporting.localization.Localization(__file__, 1103, 20), append_234729, *[list_234730], **kwargs_234733)
            
            # SSA branch for the else part of an if statement (line 1100)
            module_type_store.open_ssa_branch('else')
            
            # Call to append(...): (line 1105)
            # Processing the call arguments (line 1105)
            # Getting the type of 'width' (line 1105)
            width_234740 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1105, 33), 'width', False)
            # Processing the call keyword arguments (line 1105)
            kwargs_234741 = {}
            
            # Obtaining the type of the subscript
            int_234735 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1105, 22), 'int')
            # Getting the type of 'w' (line 1105)
            w_234736 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1105, 20), 'w', False)
            # Obtaining the member '__getitem__' of a type (line 1105)
            getitem___234737 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1105, 20), w_234736, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 1105)
            subscript_call_result_234738 = invoke(stypy.reporting.localization.Localization(__file__, 1105, 20), getitem___234737, int_234735)
            
            # Obtaining the member 'append' of a type (line 1105)
            append_234739 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1105, 20), subscript_call_result_234738, 'append')
            # Calling append(args, kwargs) (line 1105)
            append_call_result_234742 = invoke(stypy.reporting.localization.Localization(__file__, 1105, 20), append_234739, *[width_234740], **kwargs_234741)
            
            
            # Assigning a Name to a Subscript (line 1106):
            
            # Assigning a Name to a Subscript (line 1106):
            # Getting the type of 'ccode' (line 1106)
            ccode_234743 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1106, 44), 'ccode')
            
            # Obtaining the type of the subscript
            int_234744 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1106, 35), 'int')
            # Getting the type of 'unicode_groups' (line 1106)
            unicode_groups_234745 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1106, 20), 'unicode_groups')
            # Obtaining the member '__getitem__' of a type (line 1106)
            getitem___234746 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1106, 20), unicode_groups_234745, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 1106)
            subscript_call_result_234747 = invoke(stypy.reporting.localization.Localization(__file__, 1106, 20), getitem___234746, int_234744)
            
            int_234748 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1106, 39), 'int')
            # Storing an element on a container (line 1106)
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1106, 20), subscript_call_result_234747, (int_234748, ccode_234743))
            # SSA join for if statement (line 1100)
            module_type_store = module_type_store.join_ssa_context()
            
            
            # Assigning a Call to a Name (line 1107):
            
            # Assigning a Call to a Name (line 1107):
            
            # Call to max(...): (line 1107)
            # Processing the call arguments (line 1107)
            # Getting the type of 'max_width' (line 1107)
            max_width_234750 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1107, 32), 'max_width', False)
            # Getting the type of 'width' (line 1107)
            width_234751 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1107, 43), 'width', False)
            # Processing the call keyword arguments (line 1107)
            kwargs_234752 = {}
            # Getting the type of 'max' (line 1107)
            max_234749 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1107, 28), 'max', False)
            # Calling max(args, kwargs) (line 1107)
            max_call_result_234753 = invoke(stypy.reporting.localization.Localization(__file__, 1107, 28), max_234749, *[max_width_234750, width_234751], **kwargs_234752)
            
            # Assigning a type to the variable 'max_width' (line 1107)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1107, 16), 'max_width', max_call_result_234753)
            
            # Assigning a Name to a Name (line 1108):
            
            # Assigning a Name to a Name (line 1108):
            # Getting the type of 'ccode' (line 1108)
            ccode_234754 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1108, 29), 'ccode')
            # Assigning a type to the variable 'last_ccode' (line 1108)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1108, 16), 'last_ccode', ccode_234754)
            # SSA join for a for statement
            module_type_store = module_type_store.join_ssa_context()
            
            
            # Assigning a List to a Name (line 1110):
            
            # Assigning a List to a Name (line 1110):
            
            # Obtaining an instance of the builtin type 'list' (line 1110)
            list_234755 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1110, 30), 'list')
            # Adding type elements to the builtin type 'list' instance (line 1110)
            
            # Assigning a type to the variable 'unicode_bfrange' (line 1110)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1110, 12), 'unicode_bfrange', list_234755)
            
            # Getting the type of 'unicode_groups' (line 1111)
            unicode_groups_234756 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1111, 30), 'unicode_groups')
            # Testing the type of a for loop iterable (line 1111)
            is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1111, 12), unicode_groups_234756)
            # Getting the type of the for loop variable (line 1111)
            for_loop_var_234757 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1111, 12), unicode_groups_234756)
            # Assigning a type to the variable 'start' (line 1111)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1111, 12), 'start', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1111, 12), for_loop_var_234757))
            # Assigning a type to the variable 'end' (line 1111)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1111, 12), 'end', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1111, 12), for_loop_var_234757))
            # SSA begins for a for statement (line 1111)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
            
            # Call to append(...): (line 1112)
            # Processing the call arguments (line 1112)
            unicode_234760 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1113, 20), 'unicode', u'<%04x> <%04x> [%s]')
            
            # Obtaining an instance of the builtin type 'tuple' (line 1114)
            tuple_234761 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1114, 21), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 1114)
            # Adding element type (line 1114)
            # Getting the type of 'start' (line 1114)
            start_234762 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1114, 21), 'start', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1114, 21), tuple_234761, start_234762)
            # Adding element type (line 1114)
            # Getting the type of 'end' (line 1114)
            end_234763 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1114, 28), 'end', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1114, 21), tuple_234761, end_234763)
            # Adding element type (line 1114)
            
            # Call to join(...): (line 1115)
            # Processing the call arguments (line 1115)
            # Calculating list comprehension
            # Calculating comprehension expression
            
            # Call to range(...): (line 1115)
            # Processing the call arguments (line 1115)
            # Getting the type of 'start' (line 1115)
            start_234770 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1115, 59), 'start', False)
            # Getting the type of 'end' (line 1115)
            end_234771 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1115, 66), 'end', False)
            int_234772 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1115, 70), 'int')
            # Applying the binary operator '+' (line 1115)
            result_add_234773 = python_operator(stypy.reporting.localization.Localization(__file__, 1115, 66), '+', end_234771, int_234772)
            
            # Processing the call keyword arguments (line 1115)
            kwargs_234774 = {}
            # Getting the type of 'range' (line 1115)
            range_234769 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1115, 53), 'range', False)
            # Calling range(args, kwargs) (line 1115)
            range_call_result_234775 = invoke(stypy.reporting.localization.Localization(__file__, 1115, 53), range_234769, *[start_234770, result_add_234773], **kwargs_234774)
            
            comprehension_234776 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1115, 31), range_call_result_234775)
            # Assigning a type to the variable 'x' (line 1115)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1115, 31), 'x', comprehension_234776)
            unicode_234766 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1115, 31), 'unicode', u'<%04x>')
            # Getting the type of 'x' (line 1115)
            x_234767 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1115, 42), 'x', False)
            # Applying the binary operator '%' (line 1115)
            result_mod_234768 = python_operator(stypy.reporting.localization.Localization(__file__, 1115, 31), '%', unicode_234766, x_234767)
            
            list_234777 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1115, 31), 'list')
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1115, 31), list_234777, result_mod_234768)
            # Processing the call keyword arguments (line 1115)
            kwargs_234778 = {}
            unicode_234764 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1115, 21), 'unicode', u' ')
            # Obtaining the member 'join' of a type (line 1115)
            join_234765 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1115, 21), unicode_234764, 'join')
            # Calling join(args, kwargs) (line 1115)
            join_call_result_234779 = invoke(stypy.reporting.localization.Localization(__file__, 1115, 21), join_234765, *[list_234777], **kwargs_234778)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1114, 21), tuple_234761, join_call_result_234779)
            
            # Applying the binary operator '%' (line 1113)
            result_mod_234780 = python_operator(stypy.reporting.localization.Localization(__file__, 1113, 20), '%', unicode_234760, tuple_234761)
            
            # Processing the call keyword arguments (line 1112)
            kwargs_234781 = {}
            # Getting the type of 'unicode_bfrange' (line 1112)
            unicode_bfrange_234758 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1112, 16), 'unicode_bfrange', False)
            # Obtaining the member 'append' of a type (line 1112)
            append_234759 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1112, 16), unicode_bfrange_234758, 'append')
            # Calling append(args, kwargs) (line 1112)
            append_call_result_234782 = invoke(stypy.reporting.localization.Localization(__file__, 1112, 16), append_234759, *[result_mod_234780], **kwargs_234781)
            
            # SSA join for a for statement
            module_type_store = module_type_store.join_ssa_context()
            
            
            # Assigning a Call to a Name (line 1116):
            
            # Assigning a Call to a Name (line 1116):
            
            # Call to encode(...): (line 1116)
            # Processing the call arguments (line 1116)
            unicode_234797 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1118, 65), 'unicode', u'ascii')
            # Processing the call keyword arguments (line 1116)
            kwargs_234798 = {}
            # Getting the type of 'self' (line 1116)
            self_234783 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1116, 28), 'self', False)
            # Obtaining the member '_identityToUnicodeCMap' of a type (line 1116)
            _identityToUnicodeCMap_234784 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1116, 28), self_234783, '_identityToUnicodeCMap')
            
            # Obtaining an instance of the builtin type 'tuple' (line 1117)
            tuple_234785 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1117, 29), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 1117)
            # Adding element type (line 1117)
            
            # Call to len(...): (line 1117)
            # Processing the call arguments (line 1117)
            # Getting the type of 'unicode_groups' (line 1117)
            unicode_groups_234787 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1117, 33), 'unicode_groups', False)
            # Processing the call keyword arguments (line 1117)
            kwargs_234788 = {}
            # Getting the type of 'len' (line 1117)
            len_234786 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1117, 29), 'len', False)
            # Calling len(args, kwargs) (line 1117)
            len_call_result_234789 = invoke(stypy.reporting.localization.Localization(__file__, 1117, 29), len_234786, *[unicode_groups_234787], **kwargs_234788)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1117, 29), tuple_234785, len_call_result_234789)
            # Adding element type (line 1117)
            
            # Call to join(...): (line 1118)
            # Processing the call arguments (line 1118)
            # Getting the type of 'unicode_bfrange' (line 1118)
            unicode_bfrange_234792 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1118, 39), 'unicode_bfrange', False)
            # Processing the call keyword arguments (line 1118)
            kwargs_234793 = {}
            unicode_234790 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1118, 29), 'unicode', u'\n')
            # Obtaining the member 'join' of a type (line 1118)
            join_234791 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1118, 29), unicode_234790, 'join')
            # Calling join(args, kwargs) (line 1118)
            join_call_result_234794 = invoke(stypy.reporting.localization.Localization(__file__, 1118, 29), join_234791, *[unicode_bfrange_234792], **kwargs_234793)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1117, 29), tuple_234785, join_call_result_234794)
            
            # Applying the binary operator '%' (line 1116)
            result_mod_234795 = python_operator(stypy.reporting.localization.Localization(__file__, 1116, 28), '%', _identityToUnicodeCMap_234784, tuple_234785)
            
            # Obtaining the member 'encode' of a type (line 1116)
            encode_234796 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1116, 28), result_mod_234795, 'encode')
            # Calling encode(args, kwargs) (line 1116)
            encode_call_result_234799 = invoke(stypy.reporting.localization.Localization(__file__, 1116, 28), encode_234796, *[unicode_234797], **kwargs_234798)
            
            # Assigning a type to the variable 'unicode_cmap' (line 1116)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1116, 12), 'unicode_cmap', encode_call_result_234799)
            
            # Assigning a Call to a Name (line 1121):
            
            # Assigning a Call to a Name (line 1121):
            
            # Call to encode(...): (line 1121)
            # Processing the call arguments (line 1121)
            unicode_234806 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1121, 60), 'unicode', u'utf-16be')
            # Processing the call keyword arguments (line 1121)
            kwargs_234807 = {}
            
            # Call to join(...): (line 1121)
            # Processing the call arguments (line 1121)
            # Getting the type of 'cid_to_gid_map' (line 1121)
            cid_to_gid_map_234802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1121, 37), 'cid_to_gid_map', False)
            # Processing the call keyword arguments (line 1121)
            kwargs_234803 = {}
            unicode_234800 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1121, 29), 'unicode', u'')
            # Obtaining the member 'join' of a type (line 1121)
            join_234801 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1121, 29), unicode_234800, 'join')
            # Calling join(args, kwargs) (line 1121)
            join_call_result_234804 = invoke(stypy.reporting.localization.Localization(__file__, 1121, 29), join_234801, *[cid_to_gid_map_234802], **kwargs_234803)
            
            # Obtaining the member 'encode' of a type (line 1121)
            encode_234805 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1121, 29), join_call_result_234804, 'encode')
            # Calling encode(args, kwargs) (line 1121)
            encode_call_result_234808 = invoke(stypy.reporting.localization.Localization(__file__, 1121, 29), encode_234805, *[unicode_234806], **kwargs_234807)
            
            # Assigning a type to the variable 'cid_to_gid_map' (line 1121)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1121, 12), 'cid_to_gid_map', encode_call_result_234808)
            
            # Call to beginStream(...): (line 1122)
            # Processing the call arguments (line 1122)
            # Getting the type of 'cidToGidMapObject' (line 1122)
            cidToGidMapObject_234811 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1122, 29), 'cidToGidMapObject', False)
            # Obtaining the member 'id' of a type (line 1122)
            id_234812 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1122, 29), cidToGidMapObject_234811, 'id')
            # Getting the type of 'None' (line 1123)
            None_234813 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1123, 29), 'None', False)
            
            # Obtaining an instance of the builtin type 'dict' (line 1124)
            dict_234814 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1124, 29), 'dict')
            # Adding type elements to the builtin type 'dict' instance (line 1124)
            # Adding element type (key, value) (line 1124)
            unicode_234815 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1124, 30), 'unicode', u'Length')
            
            # Call to len(...): (line 1124)
            # Processing the call arguments (line 1124)
            # Getting the type of 'cid_to_gid_map' (line 1124)
            cid_to_gid_map_234817 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1124, 45), 'cid_to_gid_map', False)
            # Processing the call keyword arguments (line 1124)
            kwargs_234818 = {}
            # Getting the type of 'len' (line 1124)
            len_234816 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1124, 41), 'len', False)
            # Calling len(args, kwargs) (line 1124)
            len_call_result_234819 = invoke(stypy.reporting.localization.Localization(__file__, 1124, 41), len_234816, *[cid_to_gid_map_234817], **kwargs_234818)
            
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1124, 29), dict_234814, (unicode_234815, len_call_result_234819))
            
            # Processing the call keyword arguments (line 1122)
            kwargs_234820 = {}
            # Getting the type of 'self' (line 1122)
            self_234809 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1122, 12), 'self', False)
            # Obtaining the member 'beginStream' of a type (line 1122)
            beginStream_234810 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1122, 12), self_234809, 'beginStream')
            # Calling beginStream(args, kwargs) (line 1122)
            beginStream_call_result_234821 = invoke(stypy.reporting.localization.Localization(__file__, 1122, 12), beginStream_234810, *[id_234812, None_234813, dict_234814], **kwargs_234820)
            
            
            # Call to write(...): (line 1125)
            # Processing the call arguments (line 1125)
            # Getting the type of 'cid_to_gid_map' (line 1125)
            cid_to_gid_map_234825 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1125, 37), 'cid_to_gid_map', False)
            # Processing the call keyword arguments (line 1125)
            kwargs_234826 = {}
            # Getting the type of 'self' (line 1125)
            self_234822 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1125, 12), 'self', False)
            # Obtaining the member 'currentstream' of a type (line 1125)
            currentstream_234823 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1125, 12), self_234822, 'currentstream')
            # Obtaining the member 'write' of a type (line 1125)
            write_234824 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1125, 12), currentstream_234823, 'write')
            # Calling write(args, kwargs) (line 1125)
            write_call_result_234827 = invoke(stypy.reporting.localization.Localization(__file__, 1125, 12), write_234824, *[cid_to_gid_map_234825], **kwargs_234826)
            
            
            # Call to endStream(...): (line 1126)
            # Processing the call keyword arguments (line 1126)
            kwargs_234830 = {}
            # Getting the type of 'self' (line 1126)
            self_234828 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1126, 12), 'self', False)
            # Obtaining the member 'endStream' of a type (line 1126)
            endStream_234829 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1126, 12), self_234828, 'endStream')
            # Calling endStream(args, kwargs) (line 1126)
            endStream_call_result_234831 = invoke(stypy.reporting.localization.Localization(__file__, 1126, 12), endStream_234829, *[], **kwargs_234830)
            
            
            # Call to beginStream(...): (line 1129)
            # Processing the call arguments (line 1129)
            # Getting the type of 'toUnicodeMapObject' (line 1129)
            toUnicodeMapObject_234834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1129, 29), 'toUnicodeMapObject', False)
            # Obtaining the member 'id' of a type (line 1129)
            id_234835 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1129, 29), toUnicodeMapObject_234834, 'id')
            # Getting the type of 'None' (line 1130)
            None_234836 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1130, 29), 'None', False)
            
            # Obtaining an instance of the builtin type 'dict' (line 1131)
            dict_234837 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1131, 29), 'dict')
            # Adding type elements to the builtin type 'dict' instance (line 1131)
            # Adding element type (key, value) (line 1131)
            unicode_234838 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1131, 30), 'unicode', u'Length')
            # Getting the type of 'unicode_cmap' (line 1131)
            unicode_cmap_234839 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1131, 40), 'unicode_cmap', False)
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1131, 29), dict_234837, (unicode_234838, unicode_cmap_234839))
            
            # Processing the call keyword arguments (line 1129)
            kwargs_234840 = {}
            # Getting the type of 'self' (line 1129)
            self_234832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1129, 12), 'self', False)
            # Obtaining the member 'beginStream' of a type (line 1129)
            beginStream_234833 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1129, 12), self_234832, 'beginStream')
            # Calling beginStream(args, kwargs) (line 1129)
            beginStream_call_result_234841 = invoke(stypy.reporting.localization.Localization(__file__, 1129, 12), beginStream_234833, *[id_234835, None_234836, dict_234837], **kwargs_234840)
            
            
            # Call to write(...): (line 1132)
            # Processing the call arguments (line 1132)
            # Getting the type of 'unicode_cmap' (line 1132)
            unicode_cmap_234845 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1132, 37), 'unicode_cmap', False)
            # Processing the call keyword arguments (line 1132)
            kwargs_234846 = {}
            # Getting the type of 'self' (line 1132)
            self_234842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1132, 12), 'self', False)
            # Obtaining the member 'currentstream' of a type (line 1132)
            currentstream_234843 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1132, 12), self_234842, 'currentstream')
            # Obtaining the member 'write' of a type (line 1132)
            write_234844 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1132, 12), currentstream_234843, 'write')
            # Calling write(args, kwargs) (line 1132)
            write_call_result_234847 = invoke(stypy.reporting.localization.Localization(__file__, 1132, 12), write_234844, *[unicode_cmap_234845], **kwargs_234846)
            
            
            # Call to endStream(...): (line 1133)
            # Processing the call keyword arguments (line 1133)
            kwargs_234850 = {}
            # Getting the type of 'self' (line 1133)
            self_234848 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1133, 12), 'self', False)
            # Obtaining the member 'endStream' of a type (line 1133)
            endStream_234849 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1133, 12), self_234848, 'endStream')
            # Calling endStream(args, kwargs) (line 1133)
            endStream_call_result_234851 = invoke(stypy.reporting.localization.Localization(__file__, 1133, 12), endStream_234849, *[], **kwargs_234850)
            
            
            # Assigning a Name to a Subscript (line 1135):
            
            # Assigning a Name to a Subscript (line 1135):
            # Getting the type of 'max_width' (line 1135)
            max_width_234852 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1135, 37), 'max_width')
            # Getting the type of 'descriptor' (line 1135)
            descriptor_234853 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1135, 12), 'descriptor')
            unicode_234854 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1135, 23), 'unicode', u'MaxWidth')
            # Storing an element on a container (line 1135)
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1135, 12), descriptor_234853, (unicode_234854, max_width_234852))
            
            # Call to writeObject(...): (line 1138)
            # Processing the call arguments (line 1138)
            # Getting the type of 'cidFontDictObject' (line 1138)
            cidFontDictObject_234857 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1138, 29), 'cidFontDictObject', False)
            # Getting the type of 'cidFontDict' (line 1138)
            cidFontDict_234858 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1138, 48), 'cidFontDict', False)
            # Processing the call keyword arguments (line 1138)
            kwargs_234859 = {}
            # Getting the type of 'self' (line 1138)
            self_234855 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1138, 12), 'self', False)
            # Obtaining the member 'writeObject' of a type (line 1138)
            writeObject_234856 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1138, 12), self_234855, 'writeObject')
            # Calling writeObject(args, kwargs) (line 1138)
            writeObject_call_result_234860 = invoke(stypy.reporting.localization.Localization(__file__, 1138, 12), writeObject_234856, *[cidFontDictObject_234857, cidFontDict_234858], **kwargs_234859)
            
            
            # Call to writeObject(...): (line 1139)
            # Processing the call arguments (line 1139)
            # Getting the type of 'type0FontDictObject' (line 1139)
            type0FontDictObject_234863 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1139, 29), 'type0FontDictObject', False)
            # Getting the type of 'type0FontDict' (line 1139)
            type0FontDict_234864 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1139, 50), 'type0FontDict', False)
            # Processing the call keyword arguments (line 1139)
            kwargs_234865 = {}
            # Getting the type of 'self' (line 1139)
            self_234861 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1139, 12), 'self', False)
            # Obtaining the member 'writeObject' of a type (line 1139)
            writeObject_234862 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1139, 12), self_234861, 'writeObject')
            # Calling writeObject(args, kwargs) (line 1139)
            writeObject_call_result_234866 = invoke(stypy.reporting.localization.Localization(__file__, 1139, 12), writeObject_234862, *[type0FontDictObject_234863, type0FontDict_234864], **kwargs_234865)
            
            
            # Call to writeObject(...): (line 1140)
            # Processing the call arguments (line 1140)
            # Getting the type of 'fontdescObject' (line 1140)
            fontdescObject_234869 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1140, 29), 'fontdescObject', False)
            # Getting the type of 'descriptor' (line 1140)
            descriptor_234870 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1140, 45), 'descriptor', False)
            # Processing the call keyword arguments (line 1140)
            kwargs_234871 = {}
            # Getting the type of 'self' (line 1140)
            self_234867 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1140, 12), 'self', False)
            # Obtaining the member 'writeObject' of a type (line 1140)
            writeObject_234868 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1140, 12), self_234867, 'writeObject')
            # Calling writeObject(args, kwargs) (line 1140)
            writeObject_call_result_234872 = invoke(stypy.reporting.localization.Localization(__file__, 1140, 12), writeObject_234868, *[fontdescObject_234869, descriptor_234870], **kwargs_234871)
            
            
            # Call to writeObject(...): (line 1141)
            # Processing the call arguments (line 1141)
            # Getting the type of 'wObject' (line 1141)
            wObject_234875 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1141, 29), 'wObject', False)
            # Getting the type of 'w' (line 1141)
            w_234876 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1141, 38), 'w', False)
            # Processing the call keyword arguments (line 1141)
            kwargs_234877 = {}
            # Getting the type of 'self' (line 1141)
            self_234873 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1141, 12), 'self', False)
            # Obtaining the member 'writeObject' of a type (line 1141)
            writeObject_234874 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1141, 12), self_234873, 'writeObject')
            # Calling writeObject(args, kwargs) (line 1141)
            writeObject_call_result_234878 = invoke(stypy.reporting.localization.Localization(__file__, 1141, 12), writeObject_234874, *[wObject_234875, w_234876], **kwargs_234877)
            
            # Getting the type of 'type0FontDictObject' (line 1143)
            type0FontDictObject_234879 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1143, 19), 'type0FontDictObject')
            # Assigning a type to the variable 'stypy_return_type' (line 1143)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1143, 12), 'stypy_return_type', type0FontDictObject_234879)
            
            # ################# End of 'embedTTFType42(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'embedTTFType42' in the type store
            # Getting the type of 'stypy_return_type' (line 1028)
            stypy_return_type_234880 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1028, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_234880)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'embedTTFType42'
            return stypy_return_type_234880

        # Assigning a type to the variable 'embedTTFType42' (line 1028)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1028, 8), 'embedTTFType42', embedTTFType42)
        
        # Assigning a Call to a Name (line 1148):
        
        # Assigning a Call to a Name (line 1148):
        
        # Call to get_sfnt(...): (line 1148)
        # Processing the call keyword arguments (line 1148)
        kwargs_234883 = {}
        # Getting the type of 'font' (line 1148)
        font_234881 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1148, 15), 'font', False)
        # Obtaining the member 'get_sfnt' of a type (line 1148)
        get_sfnt_234882 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1148, 15), font_234881, 'get_sfnt')
        # Calling get_sfnt(args, kwargs) (line 1148)
        get_sfnt_call_result_234884 = invoke(stypy.reporting.localization.Localization(__file__, 1148, 15), get_sfnt_234882, *[], **kwargs_234883)
        
        # Assigning a type to the variable 'sfnt' (line 1148)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1148, 8), 'sfnt', get_sfnt_call_result_234884)
        
        
        # SSA begins for try-except statement (line 1149)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
        
        # Assigning a Call to a Name (line 1150):
        
        # Assigning a Call to a Name (line 1150):
        
        # Call to decode(...): (line 1150)
        # Processing the call arguments (line 1150)
        unicode_234894 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1150, 48), 'unicode', u'macroman')
        # Processing the call keyword arguments (line 1150)
        kwargs_234895 = {}
        
        # Obtaining the type of the subscript
        
        # Obtaining an instance of the builtin type 'tuple' (line 1150)
        tuple_234885 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1150, 28), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1150)
        # Adding element type (line 1150)
        int_234886 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1150, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1150, 28), tuple_234885, int_234886)
        # Adding element type (line 1150)
        int_234887 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1150, 31), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1150, 28), tuple_234885, int_234887)
        # Adding element type (line 1150)
        int_234888 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1150, 34), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1150, 28), tuple_234885, int_234888)
        # Adding element type (line 1150)
        int_234889 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1150, 37), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1150, 28), tuple_234885, int_234889)
        
        # Getting the type of 'sfnt' (line 1150)
        sfnt_234890 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1150, 22), 'sfnt', False)
        # Obtaining the member '__getitem__' of a type (line 1150)
        getitem___234891 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1150, 22), sfnt_234890, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1150)
        subscript_call_result_234892 = invoke(stypy.reporting.localization.Localization(__file__, 1150, 22), getitem___234891, tuple_234885)
        
        # Obtaining the member 'decode' of a type (line 1150)
        decode_234893 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1150, 22), subscript_call_result_234892, 'decode')
        # Calling decode(args, kwargs) (line 1150)
        decode_call_result_234896 = invoke(stypy.reporting.localization.Localization(__file__, 1150, 22), decode_234893, *[unicode_234894], **kwargs_234895)
        
        # Assigning a type to the variable 'ps_name' (line 1150)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1150, 12), 'ps_name', decode_call_result_234896)
        # SSA branch for the except part of a try statement (line 1149)
        # SSA branch for the except 'KeyError' branch of a try statement (line 1149)
        module_type_store.open_ssa_branch('except')
        
        # Assigning a Call to a Name (line 1153):
        
        # Assigning a Call to a Name (line 1153):
        
        # Call to decode(...): (line 1153)
        # Processing the call arguments (line 1153)
        unicode_234906 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1153, 53), 'unicode', u'utf-16be')
        # Processing the call keyword arguments (line 1153)
        kwargs_234907 = {}
        
        # Obtaining the type of the subscript
        
        # Obtaining an instance of the builtin type 'tuple' (line 1153)
        tuple_234897 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1153, 28), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1153)
        # Adding element type (line 1153)
        int_234898 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1153, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1153, 28), tuple_234897, int_234898)
        # Adding element type (line 1153)
        int_234899 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1153, 31), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1153, 28), tuple_234897, int_234899)
        # Adding element type (line 1153)
        int_234900 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1153, 34), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1153, 28), tuple_234897, int_234900)
        # Adding element type (line 1153)
        int_234901 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1153, 42), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1153, 28), tuple_234897, int_234901)
        
        # Getting the type of 'sfnt' (line 1153)
        sfnt_234902 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1153, 22), 'sfnt', False)
        # Obtaining the member '__getitem__' of a type (line 1153)
        getitem___234903 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1153, 22), sfnt_234902, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1153)
        subscript_call_result_234904 = invoke(stypy.reporting.localization.Localization(__file__, 1153, 22), getitem___234903, tuple_234897)
        
        # Obtaining the member 'decode' of a type (line 1153)
        decode_234905 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1153, 22), subscript_call_result_234904, 'decode')
        # Calling decode(args, kwargs) (line 1153)
        decode_call_result_234908 = invoke(stypy.reporting.localization.Localization(__file__, 1153, 22), decode_234905, *[unicode_234906], **kwargs_234907)
        
        # Assigning a type to the variable 'ps_name' (line 1153)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1153, 12), 'ps_name', decode_call_result_234908)
        # SSA join for try-except statement (line 1149)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 1155):
        
        # Assigning a Call to a Name (line 1155):
        
        # Call to encode(...): (line 1155)
        # Processing the call arguments (line 1155)
        unicode_234911 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1155, 33), 'unicode', u'ascii')
        unicode_234912 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1155, 42), 'unicode', u'replace')
        # Processing the call keyword arguments (line 1155)
        kwargs_234913 = {}
        # Getting the type of 'ps_name' (line 1155)
        ps_name_234909 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1155, 18), 'ps_name', False)
        # Obtaining the member 'encode' of a type (line 1155)
        encode_234910 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1155, 18), ps_name_234909, 'encode')
        # Calling encode(args, kwargs) (line 1155)
        encode_call_result_234914 = invoke(stypy.reporting.localization.Localization(__file__, 1155, 18), encode_234910, *[unicode_234911, unicode_234912], **kwargs_234913)
        
        # Assigning a type to the variable 'ps_name' (line 1155)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1155, 8), 'ps_name', encode_call_result_234914)
        
        # Assigning a Call to a Name (line 1156):
        
        # Assigning a Call to a Name (line 1156):
        
        # Call to Name(...): (line 1156)
        # Processing the call arguments (line 1156)
        # Getting the type of 'ps_name' (line 1156)
        ps_name_234916 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1156, 23), 'ps_name', False)
        # Processing the call keyword arguments (line 1156)
        kwargs_234917 = {}
        # Getting the type of 'Name' (line 1156)
        Name_234915 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1156, 18), 'Name', False)
        # Calling Name(args, kwargs) (line 1156)
        Name_call_result_234918 = invoke(stypy.reporting.localization.Localization(__file__, 1156, 18), Name_234915, *[ps_name_234916], **kwargs_234917)
        
        # Assigning a type to the variable 'ps_name' (line 1156)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1156, 8), 'ps_name', Name_call_result_234918)
        
        # Assigning a BoolOp to a Name (line 1157):
        
        # Assigning a BoolOp to a Name (line 1157):
        
        # Evaluating a boolean operation
        
        # Call to get_sfnt_table(...): (line 1157)
        # Processing the call arguments (line 1157)
        unicode_234921 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1157, 35), 'unicode', u'pclt')
        # Processing the call keyword arguments (line 1157)
        kwargs_234922 = {}
        # Getting the type of 'font' (line 1157)
        font_234919 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1157, 15), 'font', False)
        # Obtaining the member 'get_sfnt_table' of a type (line 1157)
        get_sfnt_table_234920 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1157, 15), font_234919, 'get_sfnt_table')
        # Calling get_sfnt_table(args, kwargs) (line 1157)
        get_sfnt_table_call_result_234923 = invoke(stypy.reporting.localization.Localization(__file__, 1157, 15), get_sfnt_table_234920, *[unicode_234921], **kwargs_234922)
        
        
        # Obtaining an instance of the builtin type 'dict' (line 1157)
        dict_234924 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1157, 46), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 1157)
        # Adding element type (key, value) (line 1157)
        unicode_234925 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1157, 47), 'unicode', u'capHeight')
        int_234926 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1157, 60), 'int')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1157, 46), dict_234924, (unicode_234925, int_234926))
        # Adding element type (key, value) (line 1157)
        unicode_234927 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1157, 63), 'unicode', u'xHeight')
        int_234928 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1157, 74), 'int')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1157, 46), dict_234924, (unicode_234927, int_234928))
        
        # Applying the binary operator 'or' (line 1157)
        result_or_keyword_234929 = python_operator(stypy.reporting.localization.Localization(__file__, 1157, 15), 'or', get_sfnt_table_call_result_234923, dict_234924)
        
        # Assigning a type to the variable 'pclt' (line 1157)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1157, 8), 'pclt', result_or_keyword_234929)
        
        # Assigning a BoolOp to a Name (line 1158):
        
        # Assigning a BoolOp to a Name (line 1158):
        
        # Evaluating a boolean operation
        
        # Call to get_sfnt_table(...): (line 1158)
        # Processing the call arguments (line 1158)
        unicode_234932 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1158, 35), 'unicode', u'post')
        # Processing the call keyword arguments (line 1158)
        kwargs_234933 = {}
        # Getting the type of 'font' (line 1158)
        font_234930 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1158, 15), 'font', False)
        # Obtaining the member 'get_sfnt_table' of a type (line 1158)
        get_sfnt_table_234931 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1158, 15), font_234930, 'get_sfnt_table')
        # Calling get_sfnt_table(args, kwargs) (line 1158)
        get_sfnt_table_call_result_234934 = invoke(stypy.reporting.localization.Localization(__file__, 1158, 15), get_sfnt_table_234931, *[unicode_234932], **kwargs_234933)
        
        
        # Obtaining an instance of the builtin type 'dict' (line 1158)
        dict_234935 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1158, 46), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 1158)
        # Adding element type (key, value) (line 1158)
        unicode_234936 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1158, 47), 'unicode', u'italicAngle')
        
        # Obtaining an instance of the builtin type 'tuple' (line 1158)
        tuple_234937 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1158, 63), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1158)
        # Adding element type (line 1158)
        int_234938 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1158, 63), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1158, 63), tuple_234937, int_234938)
        # Adding element type (line 1158)
        int_234939 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1158, 66), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1158, 63), tuple_234937, int_234939)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1158, 46), dict_234935, (unicode_234936, tuple_234937))
        
        # Applying the binary operator 'or' (line 1158)
        result_or_keyword_234940 = python_operator(stypy.reporting.localization.Localization(__file__, 1158, 15), 'or', get_sfnt_table_call_result_234934, dict_234935)
        
        # Assigning a type to the variable 'post' (line 1158)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1158, 8), 'post', result_or_keyword_234940)
        
        # Assigning a Attribute to a Name (line 1159):
        
        # Assigning a Attribute to a Name (line 1159):
        # Getting the type of 'font' (line 1159)
        font_234941 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1159, 13), 'font')
        # Obtaining the member 'face_flags' of a type (line 1159)
        face_flags_234942 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1159, 13), font_234941, 'face_flags')
        # Assigning a type to the variable 'ff' (line 1159)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1159, 8), 'ff', face_flags_234942)
        
        # Assigning a Attribute to a Name (line 1160):
        
        # Assigning a Attribute to a Name (line 1160):
        # Getting the type of 'font' (line 1160)
        font_234943 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1160, 13), 'font')
        # Obtaining the member 'style_flags' of a type (line 1160)
        style_flags_234944 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1160, 13), font_234943, 'style_flags')
        # Assigning a type to the variable 'sf' (line 1160)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1160, 8), 'sf', style_flags_234944)
        
        # Assigning a Num to a Name (line 1162):
        
        # Assigning a Num to a Name (line 1162):
        int_234945 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1162, 16), 'int')
        # Assigning a type to the variable 'flags' (line 1162)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1162, 8), 'flags', int_234945)
        
        # Assigning a Name to a Name (line 1163):
        
        # Assigning a Name to a Name (line 1163):
        # Getting the type of 'False' (line 1163)
        False_234946 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1163, 19), 'False')
        # Assigning a type to the variable 'symbolic' (line 1163)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1163, 8), 'symbolic', False_234946)
        
        # Getting the type of 'ff' (line 1164)
        ff_234947 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1164, 11), 'ff')
        # Getting the type of 'FIXED_WIDTH' (line 1164)
        FIXED_WIDTH_234948 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1164, 16), 'FIXED_WIDTH')
        # Applying the binary operator '&' (line 1164)
        result_and__234949 = python_operator(stypy.reporting.localization.Localization(__file__, 1164, 11), '&', ff_234947, FIXED_WIDTH_234948)
        
        # Testing the type of an if condition (line 1164)
        if_condition_234950 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1164, 8), result_and__234949)
        # Assigning a type to the variable 'if_condition_234950' (line 1164)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1164, 8), 'if_condition_234950', if_condition_234950)
        # SSA begins for if statement (line 1164)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'flags' (line 1165)
        flags_234951 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1165, 12), 'flags')
        int_234952 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1165, 21), 'int')
        int_234953 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1165, 26), 'int')
        # Applying the binary operator '<<' (line 1165)
        result_lshift_234954 = python_operator(stypy.reporting.localization.Localization(__file__, 1165, 21), '<<', int_234952, int_234953)
        
        # Applying the binary operator '|=' (line 1165)
        result_ior_234955 = python_operator(stypy.reporting.localization.Localization(__file__, 1165, 12), '|=', flags_234951, result_lshift_234954)
        # Assigning a type to the variable 'flags' (line 1165)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1165, 12), 'flags', result_ior_234955)
        
        # SSA join for if statement (line 1164)
        module_type_store = module_type_store.join_ssa_context()
        
        
        int_234956 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1166, 11), 'int')
        # Testing the type of an if condition (line 1166)
        if_condition_234957 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1166, 8), int_234956)
        # Assigning a type to the variable 'if_condition_234957' (line 1166)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1166, 8), 'if_condition_234957', if_condition_234957)
        # SSA begins for if statement (line 1166)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'flags' (line 1167)
        flags_234958 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1167, 12), 'flags')
        int_234959 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1167, 21), 'int')
        int_234960 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1167, 26), 'int')
        # Applying the binary operator '<<' (line 1167)
        result_lshift_234961 = python_operator(stypy.reporting.localization.Localization(__file__, 1167, 21), '<<', int_234959, int_234960)
        
        # Applying the binary operator '|=' (line 1167)
        result_ior_234962 = python_operator(stypy.reporting.localization.Localization(__file__, 1167, 12), '|=', flags_234958, result_lshift_234961)
        # Assigning a type to the variable 'flags' (line 1167)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1167, 12), 'flags', result_ior_234962)
        
        # SSA join for if statement (line 1166)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'symbolic' (line 1168)
        symbolic_234963 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1168, 11), 'symbolic')
        # Testing the type of an if condition (line 1168)
        if_condition_234964 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1168, 8), symbolic_234963)
        # Assigning a type to the variable 'if_condition_234964' (line 1168)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1168, 8), 'if_condition_234964', if_condition_234964)
        # SSA begins for if statement (line 1168)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'flags' (line 1169)
        flags_234965 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1169, 12), 'flags')
        int_234966 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1169, 21), 'int')
        int_234967 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1169, 26), 'int')
        # Applying the binary operator '<<' (line 1169)
        result_lshift_234968 = python_operator(stypy.reporting.localization.Localization(__file__, 1169, 21), '<<', int_234966, int_234967)
        
        # Applying the binary operator '|=' (line 1169)
        result_ior_234969 = python_operator(stypy.reporting.localization.Localization(__file__, 1169, 12), '|=', flags_234965, result_lshift_234968)
        # Assigning a type to the variable 'flags' (line 1169)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1169, 12), 'flags', result_ior_234969)
        
        # SSA branch for the else part of an if statement (line 1168)
        module_type_store.open_ssa_branch('else')
        
        # Getting the type of 'flags' (line 1171)
        flags_234970 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1171, 12), 'flags')
        int_234971 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1171, 21), 'int')
        int_234972 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1171, 26), 'int')
        # Applying the binary operator '<<' (line 1171)
        result_lshift_234973 = python_operator(stypy.reporting.localization.Localization(__file__, 1171, 21), '<<', int_234971, int_234972)
        
        # Applying the binary operator '|=' (line 1171)
        result_ior_234974 = python_operator(stypy.reporting.localization.Localization(__file__, 1171, 12), '|=', flags_234970, result_lshift_234973)
        # Assigning a type to the variable 'flags' (line 1171)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1171, 12), 'flags', result_ior_234974)
        
        # SSA join for if statement (line 1168)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'sf' (line 1172)
        sf_234975 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 11), 'sf')
        # Getting the type of 'ITALIC' (line 1172)
        ITALIC_234976 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 16), 'ITALIC')
        # Applying the binary operator '&' (line 1172)
        result_and__234977 = python_operator(stypy.reporting.localization.Localization(__file__, 1172, 11), '&', sf_234975, ITALIC_234976)
        
        # Testing the type of an if condition (line 1172)
        if_condition_234978 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1172, 8), result_and__234977)
        # Assigning a type to the variable 'if_condition_234978' (line 1172)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1172, 8), 'if_condition_234978', if_condition_234978)
        # SSA begins for if statement (line 1172)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'flags' (line 1173)
        flags_234979 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1173, 12), 'flags')
        int_234980 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1173, 21), 'int')
        int_234981 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1173, 26), 'int')
        # Applying the binary operator '<<' (line 1173)
        result_lshift_234982 = python_operator(stypy.reporting.localization.Localization(__file__, 1173, 21), '<<', int_234980, int_234981)
        
        # Applying the binary operator '|=' (line 1173)
        result_ior_234983 = python_operator(stypy.reporting.localization.Localization(__file__, 1173, 12), '|=', flags_234979, result_lshift_234982)
        # Assigning a type to the variable 'flags' (line 1173)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1173, 12), 'flags', result_ior_234983)
        
        # SSA join for if statement (line 1172)
        module_type_store = module_type_store.join_ssa_context()
        
        
        int_234984 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1174, 11), 'int')
        # Testing the type of an if condition (line 1174)
        if_condition_234985 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1174, 8), int_234984)
        # Assigning a type to the variable 'if_condition_234985' (line 1174)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1174, 8), 'if_condition_234985', if_condition_234985)
        # SSA begins for if statement (line 1174)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'flags' (line 1175)
        flags_234986 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1175, 12), 'flags')
        int_234987 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1175, 21), 'int')
        int_234988 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1175, 26), 'int')
        # Applying the binary operator '<<' (line 1175)
        result_lshift_234989 = python_operator(stypy.reporting.localization.Localization(__file__, 1175, 21), '<<', int_234987, int_234988)
        
        # Applying the binary operator '|=' (line 1175)
        result_ior_234990 = python_operator(stypy.reporting.localization.Localization(__file__, 1175, 12), '|=', flags_234986, result_lshift_234989)
        # Assigning a type to the variable 'flags' (line 1175)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1175, 12), 'flags', result_ior_234990)
        
        # SSA join for if statement (line 1174)
        module_type_store = module_type_store.join_ssa_context()
        
        
        int_234991 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1176, 11), 'int')
        # Testing the type of an if condition (line 1176)
        if_condition_234992 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1176, 8), int_234991)
        # Assigning a type to the variable 'if_condition_234992' (line 1176)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1176, 8), 'if_condition_234992', if_condition_234992)
        # SSA begins for if statement (line 1176)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'flags' (line 1177)
        flags_234993 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1177, 12), 'flags')
        int_234994 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1177, 21), 'int')
        int_234995 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1177, 26), 'int')
        # Applying the binary operator '<<' (line 1177)
        result_lshift_234996 = python_operator(stypy.reporting.localization.Localization(__file__, 1177, 21), '<<', int_234994, int_234995)
        
        # Applying the binary operator '|=' (line 1177)
        result_ior_234997 = python_operator(stypy.reporting.localization.Localization(__file__, 1177, 12), '|=', flags_234993, result_lshift_234996)
        # Assigning a type to the variable 'flags' (line 1177)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1177, 12), 'flags', result_ior_234997)
        
        # SSA join for if statement (line 1176)
        module_type_store = module_type_store.join_ssa_context()
        
        
        int_234998 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1178, 11), 'int')
        # Testing the type of an if condition (line 1178)
        if_condition_234999 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1178, 8), int_234998)
        # Assigning a type to the variable 'if_condition_234999' (line 1178)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1178, 8), 'if_condition_234999', if_condition_234999)
        # SSA begins for if statement (line 1178)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'flags' (line 1179)
        flags_235000 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1179, 12), 'flags')
        int_235001 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1179, 21), 'int')
        int_235002 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1179, 26), 'int')
        # Applying the binary operator '<<' (line 1179)
        result_lshift_235003 = python_operator(stypy.reporting.localization.Localization(__file__, 1179, 21), '<<', int_235001, int_235002)
        
        # Applying the binary operator '|=' (line 1179)
        result_ior_235004 = python_operator(stypy.reporting.localization.Localization(__file__, 1179, 12), '|=', flags_235000, result_lshift_235003)
        # Assigning a type to the variable 'flags' (line 1179)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1179, 12), 'flags', result_ior_235004)
        
        # SSA join for if statement (line 1178)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Dict to a Name (line 1181):
        
        # Assigning a Dict to a Name (line 1181):
        
        # Obtaining an instance of the builtin type 'dict' (line 1181)
        dict_235005 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1181, 21), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 1181)
        # Adding element type (key, value) (line 1181)
        unicode_235006 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1182, 12), 'unicode', u'Type')
        
        # Call to Name(...): (line 1182)
        # Processing the call arguments (line 1182)
        unicode_235008 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1182, 25), 'unicode', u'FontDescriptor')
        # Processing the call keyword arguments (line 1182)
        kwargs_235009 = {}
        # Getting the type of 'Name' (line 1182)
        Name_235007 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1182, 20), 'Name', False)
        # Calling Name(args, kwargs) (line 1182)
        Name_call_result_235010 = invoke(stypy.reporting.localization.Localization(__file__, 1182, 20), Name_235007, *[unicode_235008], **kwargs_235009)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1181, 21), dict_235005, (unicode_235006, Name_call_result_235010))
        # Adding element type (key, value) (line 1181)
        unicode_235011 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1183, 12), 'unicode', u'FontName')
        # Getting the type of 'ps_name' (line 1183)
        ps_name_235012 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1183, 24), 'ps_name')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1181, 21), dict_235005, (unicode_235011, ps_name_235012))
        # Adding element type (key, value) (line 1181)
        unicode_235013 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1184, 12), 'unicode', u'Flags')
        # Getting the type of 'flags' (line 1184)
        flags_235014 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1184, 21), 'flags')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1181, 21), dict_235005, (unicode_235013, flags_235014))
        # Adding element type (key, value) (line 1181)
        unicode_235015 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1185, 12), 'unicode', u'FontBBox')
        # Calculating list comprehension
        # Calculating comprehension expression
        # Getting the type of 'font' (line 1185)
        font_235022 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1185, 56), 'font')
        # Obtaining the member 'bbox' of a type (line 1185)
        bbox_235023 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1185, 56), font_235022, 'bbox')
        comprehension_235024 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1185, 25), bbox_235023)
        # Assigning a type to the variable 'x' (line 1185)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1185, 25), 'x', comprehension_235024)
        
        # Call to cvt(...): (line 1185)
        # Processing the call arguments (line 1185)
        # Getting the type of 'x' (line 1185)
        x_235017 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1185, 29), 'x', False)
        # Processing the call keyword arguments (line 1185)
        # Getting the type of 'False' (line 1185)
        False_235018 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1185, 40), 'False', False)
        keyword_235019 = False_235018
        kwargs_235020 = {'nearest': keyword_235019}
        # Getting the type of 'cvt' (line 1185)
        cvt_235016 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1185, 25), 'cvt', False)
        # Calling cvt(args, kwargs) (line 1185)
        cvt_call_result_235021 = invoke(stypy.reporting.localization.Localization(__file__, 1185, 25), cvt_235016, *[x_235017], **kwargs_235020)
        
        list_235025 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1185, 25), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1185, 25), list_235025, cvt_call_result_235021)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1181, 21), dict_235005, (unicode_235015, list_235025))
        # Adding element type (key, value) (line 1181)
        unicode_235026 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1186, 12), 'unicode', u'Ascent')
        
        # Call to cvt(...): (line 1186)
        # Processing the call arguments (line 1186)
        # Getting the type of 'font' (line 1186)
        font_235028 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1186, 26), 'font', False)
        # Obtaining the member 'ascender' of a type (line 1186)
        ascender_235029 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1186, 26), font_235028, 'ascender')
        # Processing the call keyword arguments (line 1186)
        # Getting the type of 'False' (line 1186)
        False_235030 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1186, 49), 'False', False)
        keyword_235031 = False_235030
        kwargs_235032 = {'nearest': keyword_235031}
        # Getting the type of 'cvt' (line 1186)
        cvt_235027 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1186, 22), 'cvt', False)
        # Calling cvt(args, kwargs) (line 1186)
        cvt_call_result_235033 = invoke(stypy.reporting.localization.Localization(__file__, 1186, 22), cvt_235027, *[ascender_235029], **kwargs_235032)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1181, 21), dict_235005, (unicode_235026, cvt_call_result_235033))
        # Adding element type (key, value) (line 1181)
        unicode_235034 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1187, 12), 'unicode', u'Descent')
        
        # Call to cvt(...): (line 1187)
        # Processing the call arguments (line 1187)
        # Getting the type of 'font' (line 1187)
        font_235036 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1187, 27), 'font', False)
        # Obtaining the member 'descender' of a type (line 1187)
        descender_235037 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1187, 27), font_235036, 'descender')
        # Processing the call keyword arguments (line 1187)
        # Getting the type of 'False' (line 1187)
        False_235038 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1187, 51), 'False', False)
        keyword_235039 = False_235038
        kwargs_235040 = {'nearest': keyword_235039}
        # Getting the type of 'cvt' (line 1187)
        cvt_235035 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1187, 23), 'cvt', False)
        # Calling cvt(args, kwargs) (line 1187)
        cvt_call_result_235041 = invoke(stypy.reporting.localization.Localization(__file__, 1187, 23), cvt_235035, *[descender_235037], **kwargs_235040)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1181, 21), dict_235005, (unicode_235034, cvt_call_result_235041))
        # Adding element type (key, value) (line 1181)
        unicode_235042 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1188, 12), 'unicode', u'CapHeight')
        
        # Call to cvt(...): (line 1188)
        # Processing the call arguments (line 1188)
        
        # Obtaining the type of the subscript
        unicode_235044 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1188, 34), 'unicode', u'capHeight')
        # Getting the type of 'pclt' (line 1188)
        pclt_235045 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1188, 29), 'pclt', False)
        # Obtaining the member '__getitem__' of a type (line 1188)
        getitem___235046 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1188, 29), pclt_235045, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1188)
        subscript_call_result_235047 = invoke(stypy.reporting.localization.Localization(__file__, 1188, 29), getitem___235046, unicode_235044)
        
        # Processing the call keyword arguments (line 1188)
        # Getting the type of 'False' (line 1188)
        False_235048 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1188, 56), 'False', False)
        keyword_235049 = False_235048
        kwargs_235050 = {'nearest': keyword_235049}
        # Getting the type of 'cvt' (line 1188)
        cvt_235043 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1188, 25), 'cvt', False)
        # Calling cvt(args, kwargs) (line 1188)
        cvt_call_result_235051 = invoke(stypy.reporting.localization.Localization(__file__, 1188, 25), cvt_235043, *[subscript_call_result_235047], **kwargs_235050)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1181, 21), dict_235005, (unicode_235042, cvt_call_result_235051))
        # Adding element type (key, value) (line 1181)
        unicode_235052 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1189, 12), 'unicode', u'XHeight')
        
        # Call to cvt(...): (line 1189)
        # Processing the call arguments (line 1189)
        
        # Obtaining the type of the subscript
        unicode_235054 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1189, 32), 'unicode', u'xHeight')
        # Getting the type of 'pclt' (line 1189)
        pclt_235055 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1189, 27), 'pclt', False)
        # Obtaining the member '__getitem__' of a type (line 1189)
        getitem___235056 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1189, 27), pclt_235055, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1189)
        subscript_call_result_235057 = invoke(stypy.reporting.localization.Localization(__file__, 1189, 27), getitem___235056, unicode_235054)
        
        # Processing the call keyword arguments (line 1189)
        kwargs_235058 = {}
        # Getting the type of 'cvt' (line 1189)
        cvt_235053 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1189, 23), 'cvt', False)
        # Calling cvt(args, kwargs) (line 1189)
        cvt_call_result_235059 = invoke(stypy.reporting.localization.Localization(__file__, 1189, 23), cvt_235053, *[subscript_call_result_235057], **kwargs_235058)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1181, 21), dict_235005, (unicode_235052, cvt_call_result_235059))
        # Adding element type (key, value) (line 1181)
        unicode_235060 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1190, 12), 'unicode', u'ItalicAngle')
        
        # Obtaining the type of the subscript
        int_235061 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1190, 47), 'int')
        
        # Obtaining the type of the subscript
        unicode_235062 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1190, 32), 'unicode', u'italicAngle')
        # Getting the type of 'post' (line 1190)
        post_235063 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1190, 27), 'post')
        # Obtaining the member '__getitem__' of a type (line 1190)
        getitem___235064 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1190, 27), post_235063, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1190)
        subscript_call_result_235065 = invoke(stypy.reporting.localization.Localization(__file__, 1190, 27), getitem___235064, unicode_235062)
        
        # Obtaining the member '__getitem__' of a type (line 1190)
        getitem___235066 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1190, 27), subscript_call_result_235065, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1190)
        subscript_call_result_235067 = invoke(stypy.reporting.localization.Localization(__file__, 1190, 27), getitem___235066, int_235061)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1181, 21), dict_235005, (unicode_235060, subscript_call_result_235067))
        # Adding element type (key, value) (line 1181)
        unicode_235068 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1191, 12), 'unicode', u'StemV')
        int_235069 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1191, 21), 'int')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1181, 21), dict_235005, (unicode_235068, int_235069))
        
        # Assigning a type to the variable 'descriptor' (line 1181)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1181, 8), 'descriptor', dict_235005)
        
        
        # Call to is_opentype_cff_font(...): (line 1197)
        # Processing the call arguments (line 1197)
        # Getting the type of 'filename' (line 1197)
        filename_235071 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1197, 32), 'filename', False)
        # Processing the call keyword arguments (line 1197)
        kwargs_235072 = {}
        # Getting the type of 'is_opentype_cff_font' (line 1197)
        is_opentype_cff_font_235070 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1197, 11), 'is_opentype_cff_font', False)
        # Calling is_opentype_cff_font(args, kwargs) (line 1197)
        is_opentype_cff_font_call_result_235073 = invoke(stypy.reporting.localization.Localization(__file__, 1197, 11), is_opentype_cff_font_235070, *[filename_235071], **kwargs_235072)
        
        # Testing the type of an if condition (line 1197)
        if_condition_235074 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1197, 8), is_opentype_cff_font_call_result_235073)
        # Assigning a type to the variable 'if_condition_235074' (line 1197)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1197, 8), 'if_condition_235074', if_condition_235074)
        # SSA begins for if statement (line 1197)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Num to a Name (line 1198):
        
        # Assigning a Num to a Name (line 1198):
        int_235075 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1198, 23), 'int')
        # Assigning a type to the variable 'fonttype' (line 1198)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1198, 12), 'fonttype', int_235075)
        
        # Assigning a Str to a Name (line 1199):
        
        # Assigning a Str to a Name (line 1199):
        unicode_235076 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1199, 19), 'unicode', u"'%s' can not be subsetted into a Type 3 font. The entire font will be embedded in the output.")
        # Assigning a type to the variable 'msg' (line 1199)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1199, 12), 'msg', unicode_235076)
        
        # Call to warn(...): (line 1201)
        # Processing the call arguments (line 1201)
        # Getting the type of 'msg' (line 1201)
        msg_235079 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1201, 26), 'msg', False)
        
        # Call to basename(...): (line 1201)
        # Processing the call arguments (line 1201)
        # Getting the type of 'filename' (line 1201)
        filename_235083 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1201, 49), 'filename', False)
        # Processing the call keyword arguments (line 1201)
        kwargs_235084 = {}
        # Getting the type of 'os' (line 1201)
        os_235080 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1201, 32), 'os', False)
        # Obtaining the member 'path' of a type (line 1201)
        path_235081 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1201, 32), os_235080, 'path')
        # Obtaining the member 'basename' of a type (line 1201)
        basename_235082 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1201, 32), path_235081, 'basename')
        # Calling basename(args, kwargs) (line 1201)
        basename_call_result_235085 = invoke(stypy.reporting.localization.Localization(__file__, 1201, 32), basename_235082, *[filename_235083], **kwargs_235084)
        
        # Applying the binary operator '%' (line 1201)
        result_mod_235086 = python_operator(stypy.reporting.localization.Localization(__file__, 1201, 26), '%', msg_235079, basename_call_result_235085)
        
        # Processing the call keyword arguments (line 1201)
        kwargs_235087 = {}
        # Getting the type of 'warnings' (line 1201)
        warnings_235077 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1201, 12), 'warnings', False)
        # Obtaining the member 'warn' of a type (line 1201)
        warn_235078 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1201, 12), warnings_235077, 'warn')
        # Calling warn(args, kwargs) (line 1201)
        warn_call_result_235088 = invoke(stypy.reporting.localization.Localization(__file__, 1201, 12), warn_235078, *[result_mod_235086], **kwargs_235087)
        
        # SSA join for if statement (line 1197)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'fonttype' (line 1203)
        fonttype_235089 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1203, 11), 'fonttype')
        int_235090 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1203, 23), 'int')
        # Applying the binary operator '==' (line 1203)
        result_eq_235091 = python_operator(stypy.reporting.localization.Localization(__file__, 1203, 11), '==', fonttype_235089, int_235090)
        
        # Testing the type of an if condition (line 1203)
        if_condition_235092 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1203, 8), result_eq_235091)
        # Assigning a type to the variable 'if_condition_235092' (line 1203)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1203, 8), 'if_condition_235092', if_condition_235092)
        # SSA begins for if statement (line 1203)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to embedTTFType3(...): (line 1204)
        # Processing the call arguments (line 1204)
        # Getting the type of 'font' (line 1204)
        font_235094 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1204, 33), 'font', False)
        # Getting the type of 'characters' (line 1204)
        characters_235095 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1204, 39), 'characters', False)
        # Getting the type of 'descriptor' (line 1204)
        descriptor_235096 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1204, 51), 'descriptor', False)
        # Processing the call keyword arguments (line 1204)
        kwargs_235097 = {}
        # Getting the type of 'embedTTFType3' (line 1204)
        embedTTFType3_235093 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1204, 19), 'embedTTFType3', False)
        # Calling embedTTFType3(args, kwargs) (line 1204)
        embedTTFType3_call_result_235098 = invoke(stypy.reporting.localization.Localization(__file__, 1204, 19), embedTTFType3_235093, *[font_235094, characters_235095, descriptor_235096], **kwargs_235097)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1204)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1204, 12), 'stypy_return_type', embedTTFType3_call_result_235098)
        # SSA branch for the else part of an if statement (line 1203)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'fonttype' (line 1205)
        fonttype_235099 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1205, 13), 'fonttype')
        int_235100 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1205, 25), 'int')
        # Applying the binary operator '==' (line 1205)
        result_eq_235101 = python_operator(stypy.reporting.localization.Localization(__file__, 1205, 13), '==', fonttype_235099, int_235100)
        
        # Testing the type of an if condition (line 1205)
        if_condition_235102 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1205, 13), result_eq_235101)
        # Assigning a type to the variable 'if_condition_235102' (line 1205)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1205, 13), 'if_condition_235102', if_condition_235102)
        # SSA begins for if statement (line 1205)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to embedTTFType42(...): (line 1206)
        # Processing the call arguments (line 1206)
        # Getting the type of 'font' (line 1206)
        font_235104 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1206, 34), 'font', False)
        # Getting the type of 'characters' (line 1206)
        characters_235105 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1206, 40), 'characters', False)
        # Getting the type of 'descriptor' (line 1206)
        descriptor_235106 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1206, 52), 'descriptor', False)
        # Processing the call keyword arguments (line 1206)
        kwargs_235107 = {}
        # Getting the type of 'embedTTFType42' (line 1206)
        embedTTFType42_235103 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1206, 19), 'embedTTFType42', False)
        # Calling embedTTFType42(args, kwargs) (line 1206)
        embedTTFType42_call_result_235108 = invoke(stypy.reporting.localization.Localization(__file__, 1206, 19), embedTTFType42_235103, *[font_235104, characters_235105, descriptor_235106], **kwargs_235107)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1206)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1206, 12), 'stypy_return_type', embedTTFType42_call_result_235108)
        # SSA join for if statement (line 1205)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 1203)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'embedTTF(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'embedTTF' in the type store
        # Getting the type of 'stypy_return_type' (line 896)
        stypy_return_type_235109 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 896, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_235109)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'embedTTF'
        return stypy_return_type_235109


    @norecursion
    def alphaState(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'alphaState'
        module_type_store = module_type_store.open_function_context('alphaState', 1208, 4, False)
        # Assigning a type to the variable 'self' (line 1209)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1209, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        PdfFile.alphaState.__dict__.__setitem__('stypy_localization', localization)
        PdfFile.alphaState.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        PdfFile.alphaState.__dict__.__setitem__('stypy_type_store', module_type_store)
        PdfFile.alphaState.__dict__.__setitem__('stypy_function_name', 'PdfFile.alphaState')
        PdfFile.alphaState.__dict__.__setitem__('stypy_param_names_list', ['alpha'])
        PdfFile.alphaState.__dict__.__setitem__('stypy_varargs_param_name', None)
        PdfFile.alphaState.__dict__.__setitem__('stypy_kwargs_param_name', None)
        PdfFile.alphaState.__dict__.__setitem__('stypy_call_defaults', defaults)
        PdfFile.alphaState.__dict__.__setitem__('stypy_call_varargs', varargs)
        PdfFile.alphaState.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        PdfFile.alphaState.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'PdfFile.alphaState', ['alpha'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'alphaState', localization, ['alpha'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'alphaState(...)' code ##################

        unicode_235110 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1209, 8), 'unicode', u'Return name of an ExtGState that sets alpha to the given value')
        
        # Assigning a Call to a Name (line 1211):
        
        # Assigning a Call to a Name (line 1211):
        
        # Call to get(...): (line 1211)
        # Processing the call arguments (line 1211)
        # Getting the type of 'alpha' (line 1211)
        alpha_235114 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1211, 37), 'alpha', False)
        # Getting the type of 'None' (line 1211)
        None_235115 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1211, 44), 'None', False)
        # Processing the call keyword arguments (line 1211)
        kwargs_235116 = {}
        # Getting the type of 'self' (line 1211)
        self_235111 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1211, 16), 'self', False)
        # Obtaining the member 'alphaStates' of a type (line 1211)
        alphaStates_235112 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1211, 16), self_235111, 'alphaStates')
        # Obtaining the member 'get' of a type (line 1211)
        get_235113 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1211, 16), alphaStates_235112, 'get')
        # Calling get(args, kwargs) (line 1211)
        get_call_result_235117 = invoke(stypy.reporting.localization.Localization(__file__, 1211, 16), get_235113, *[alpha_235114, None_235115], **kwargs_235116)
        
        # Assigning a type to the variable 'state' (line 1211)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1211, 8), 'state', get_call_result_235117)
        
        # Type idiom detected: calculating its left and rigth part (line 1212)
        # Getting the type of 'state' (line 1212)
        state_235118 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1212, 8), 'state')
        # Getting the type of 'None' (line 1212)
        None_235119 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1212, 24), 'None')
        
        (may_be_235120, more_types_in_union_235121) = may_not_be_none(state_235118, None_235119)

        if may_be_235120:

            if more_types_in_union_235121:
                # Runtime conditional SSA (line 1212)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Obtaining the type of the subscript
            int_235122 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1213, 25), 'int')
            # Getting the type of 'state' (line 1213)
            state_235123 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1213, 19), 'state')
            # Obtaining the member '__getitem__' of a type (line 1213)
            getitem___235124 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1213, 19), state_235123, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 1213)
            subscript_call_result_235125 = invoke(stypy.reporting.localization.Localization(__file__, 1213, 19), getitem___235124, int_235122)
            
            # Assigning a type to the variable 'stypy_return_type' (line 1213)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1213, 12), 'stypy_return_type', subscript_call_result_235125)

            if more_types_in_union_235121:
                # SSA join for if statement (line 1212)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Call to a Name (line 1215):
        
        # Assigning a Call to a Name (line 1215):
        
        # Call to Name(...): (line 1215)
        # Processing the call arguments (line 1215)
        unicode_235127 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1215, 20), 'unicode', u'A%d')
        # Getting the type of 'self' (line 1215)
        self_235128 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1215, 28), 'self', False)
        # Obtaining the member 'nextAlphaState' of a type (line 1215)
        nextAlphaState_235129 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1215, 28), self_235128, 'nextAlphaState')
        # Applying the binary operator '%' (line 1215)
        result_mod_235130 = python_operator(stypy.reporting.localization.Localization(__file__, 1215, 20), '%', unicode_235127, nextAlphaState_235129)
        
        # Processing the call keyword arguments (line 1215)
        kwargs_235131 = {}
        # Getting the type of 'Name' (line 1215)
        Name_235126 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1215, 15), 'Name', False)
        # Calling Name(args, kwargs) (line 1215)
        Name_call_result_235132 = invoke(stypy.reporting.localization.Localization(__file__, 1215, 15), Name_235126, *[result_mod_235130], **kwargs_235131)
        
        # Assigning a type to the variable 'name' (line 1215)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1215, 8), 'name', Name_call_result_235132)
        
        # Getting the type of 'self' (line 1216)
        self_235133 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1216, 8), 'self')
        # Obtaining the member 'nextAlphaState' of a type (line 1216)
        nextAlphaState_235134 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1216, 8), self_235133, 'nextAlphaState')
        int_235135 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1216, 31), 'int')
        # Applying the binary operator '+=' (line 1216)
        result_iadd_235136 = python_operator(stypy.reporting.localization.Localization(__file__, 1216, 8), '+=', nextAlphaState_235134, int_235135)
        # Getting the type of 'self' (line 1216)
        self_235137 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1216, 8), 'self')
        # Setting the type of the member 'nextAlphaState' of a type (line 1216)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1216, 8), self_235137, 'nextAlphaState', result_iadd_235136)
        
        
        # Assigning a Tuple to a Subscript (line 1217):
        
        # Assigning a Tuple to a Subscript (line 1217):
        
        # Obtaining an instance of the builtin type 'tuple' (line 1218)
        tuple_235138 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1218, 13), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1218)
        # Adding element type (line 1218)
        # Getting the type of 'name' (line 1218)
        name_235139 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1218, 13), 'name')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1218, 13), tuple_235138, name_235139)
        # Adding element type (line 1218)
        
        # Obtaining an instance of the builtin type 'dict' (line 1218)
        dict_235140 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1218, 19), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 1218)
        # Adding element type (key, value) (line 1218)
        unicode_235141 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1218, 20), 'unicode', u'Type')
        
        # Call to Name(...): (line 1218)
        # Processing the call arguments (line 1218)
        unicode_235143 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1218, 33), 'unicode', u'ExtGState')
        # Processing the call keyword arguments (line 1218)
        kwargs_235144 = {}
        # Getting the type of 'Name' (line 1218)
        Name_235142 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1218, 28), 'Name', False)
        # Calling Name(args, kwargs) (line 1218)
        Name_call_result_235145 = invoke(stypy.reporting.localization.Localization(__file__, 1218, 28), Name_235142, *[unicode_235143], **kwargs_235144)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1218, 19), dict_235140, (unicode_235141, Name_call_result_235145))
        # Adding element type (key, value) (line 1218)
        unicode_235146 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1219, 20), 'unicode', u'CA')
        
        # Obtaining the type of the subscript
        int_235147 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1219, 32), 'int')
        # Getting the type of 'alpha' (line 1219)
        alpha_235148 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1219, 26), 'alpha')
        # Obtaining the member '__getitem__' of a type (line 1219)
        getitem___235149 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1219, 26), alpha_235148, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1219)
        subscript_call_result_235150 = invoke(stypy.reporting.localization.Localization(__file__, 1219, 26), getitem___235149, int_235147)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1218, 19), dict_235140, (unicode_235146, subscript_call_result_235150))
        # Adding element type (key, value) (line 1218)
        unicode_235151 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1219, 36), 'unicode', u'ca')
        
        # Obtaining the type of the subscript
        int_235152 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1219, 48), 'int')
        # Getting the type of 'alpha' (line 1219)
        alpha_235153 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1219, 42), 'alpha')
        # Obtaining the member '__getitem__' of a type (line 1219)
        getitem___235154 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1219, 42), alpha_235153, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1219)
        subscript_call_result_235155 = invoke(stypy.reporting.localization.Localization(__file__, 1219, 42), getitem___235154, int_235152)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1218, 19), dict_235140, (unicode_235151, subscript_call_result_235155))
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1218, 13), tuple_235138, dict_235140)
        
        # Getting the type of 'self' (line 1217)
        self_235156 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1217, 8), 'self')
        # Obtaining the member 'alphaStates' of a type (line 1217)
        alphaStates_235157 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1217, 8), self_235156, 'alphaStates')
        # Getting the type of 'alpha' (line 1217)
        alpha_235158 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1217, 25), 'alpha')
        # Storing an element on a container (line 1217)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1217, 8), alphaStates_235157, (alpha_235158, tuple_235138))
        # Getting the type of 'name' (line 1220)
        name_235159 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1220, 15), 'name')
        # Assigning a type to the variable 'stypy_return_type' (line 1220)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1220, 8), 'stypy_return_type', name_235159)
        
        # ################# End of 'alphaState(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'alphaState' in the type store
        # Getting the type of 'stypy_return_type' (line 1208)
        stypy_return_type_235160 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1208, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_235160)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'alphaState'
        return stypy_return_type_235160


    @norecursion
    def hatchPattern(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'hatchPattern'
        module_type_store = module_type_store.open_function_context('hatchPattern', 1222, 4, False)
        # Assigning a type to the variable 'self' (line 1223)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1223, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        PdfFile.hatchPattern.__dict__.__setitem__('stypy_localization', localization)
        PdfFile.hatchPattern.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        PdfFile.hatchPattern.__dict__.__setitem__('stypy_type_store', module_type_store)
        PdfFile.hatchPattern.__dict__.__setitem__('stypy_function_name', 'PdfFile.hatchPattern')
        PdfFile.hatchPattern.__dict__.__setitem__('stypy_param_names_list', ['hatch_style'])
        PdfFile.hatchPattern.__dict__.__setitem__('stypy_varargs_param_name', None)
        PdfFile.hatchPattern.__dict__.__setitem__('stypy_kwargs_param_name', None)
        PdfFile.hatchPattern.__dict__.__setitem__('stypy_call_defaults', defaults)
        PdfFile.hatchPattern.__dict__.__setitem__('stypy_call_varargs', varargs)
        PdfFile.hatchPattern.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        PdfFile.hatchPattern.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'PdfFile.hatchPattern', ['hatch_style'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'hatchPattern', localization, ['hatch_style'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'hatchPattern(...)' code ##################

        
        # Type idiom detected: calculating its left and rigth part (line 1224)
        # Getting the type of 'hatch_style' (line 1224)
        hatch_style_235161 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1224, 8), 'hatch_style')
        # Getting the type of 'None' (line 1224)
        None_235162 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1224, 30), 'None')
        
        (may_be_235163, more_types_in_union_235164) = may_not_be_none(hatch_style_235161, None_235162)

        if may_be_235163:

            if more_types_in_union_235164:
                # Runtime conditional SSA (line 1224)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Name to a Tuple (line 1225):
            
            # Assigning a Subscript to a Name (line 1225):
            
            # Obtaining the type of the subscript
            int_235165 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1225, 12), 'int')
            # Getting the type of 'hatch_style' (line 1225)
            hatch_style_235166 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1225, 32), 'hatch_style')
            # Obtaining the member '__getitem__' of a type (line 1225)
            getitem___235167 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1225, 12), hatch_style_235166, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 1225)
            subscript_call_result_235168 = invoke(stypy.reporting.localization.Localization(__file__, 1225, 12), getitem___235167, int_235165)
            
            # Assigning a type to the variable 'tuple_var_assignment_231661' (line 1225)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1225, 12), 'tuple_var_assignment_231661', subscript_call_result_235168)
            
            # Assigning a Subscript to a Name (line 1225):
            
            # Obtaining the type of the subscript
            int_235169 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1225, 12), 'int')
            # Getting the type of 'hatch_style' (line 1225)
            hatch_style_235170 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1225, 32), 'hatch_style')
            # Obtaining the member '__getitem__' of a type (line 1225)
            getitem___235171 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1225, 12), hatch_style_235170, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 1225)
            subscript_call_result_235172 = invoke(stypy.reporting.localization.Localization(__file__, 1225, 12), getitem___235171, int_235169)
            
            # Assigning a type to the variable 'tuple_var_assignment_231662' (line 1225)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1225, 12), 'tuple_var_assignment_231662', subscript_call_result_235172)
            
            # Assigning a Subscript to a Name (line 1225):
            
            # Obtaining the type of the subscript
            int_235173 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1225, 12), 'int')
            # Getting the type of 'hatch_style' (line 1225)
            hatch_style_235174 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1225, 32), 'hatch_style')
            # Obtaining the member '__getitem__' of a type (line 1225)
            getitem___235175 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1225, 12), hatch_style_235174, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 1225)
            subscript_call_result_235176 = invoke(stypy.reporting.localization.Localization(__file__, 1225, 12), getitem___235175, int_235173)
            
            # Assigning a type to the variable 'tuple_var_assignment_231663' (line 1225)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1225, 12), 'tuple_var_assignment_231663', subscript_call_result_235176)
            
            # Assigning a Name to a Name (line 1225):
            # Getting the type of 'tuple_var_assignment_231661' (line 1225)
            tuple_var_assignment_231661_235177 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1225, 12), 'tuple_var_assignment_231661')
            # Assigning a type to the variable 'edge' (line 1225)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1225, 12), 'edge', tuple_var_assignment_231661_235177)
            
            # Assigning a Name to a Name (line 1225):
            # Getting the type of 'tuple_var_assignment_231662' (line 1225)
            tuple_var_assignment_231662_235178 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1225, 12), 'tuple_var_assignment_231662')
            # Assigning a type to the variable 'face' (line 1225)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1225, 18), 'face', tuple_var_assignment_231662_235178)
            
            # Assigning a Name to a Name (line 1225):
            # Getting the type of 'tuple_var_assignment_231663' (line 1225)
            tuple_var_assignment_231663_235179 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1225, 12), 'tuple_var_assignment_231663')
            # Assigning a type to the variable 'hatch' (line 1225)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1225, 24), 'hatch', tuple_var_assignment_231663_235179)
            
            # Type idiom detected: calculating its left and rigth part (line 1226)
            # Getting the type of 'edge' (line 1226)
            edge_235180 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1226, 12), 'edge')
            # Getting the type of 'None' (line 1226)
            None_235181 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1226, 27), 'None')
            
            (may_be_235182, more_types_in_union_235183) = may_not_be_none(edge_235180, None_235181)

            if may_be_235182:

                if more_types_in_union_235183:
                    # Runtime conditional SSA (line 1226)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
                else:
                    module_type_store = module_type_store

                
                # Assigning a Call to a Name (line 1227):
                
                # Assigning a Call to a Name (line 1227):
                
                # Call to tuple(...): (line 1227)
                # Processing the call arguments (line 1227)
                # Getting the type of 'edge' (line 1227)
                edge_235185 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1227, 29), 'edge', False)
                # Processing the call keyword arguments (line 1227)
                kwargs_235186 = {}
                # Getting the type of 'tuple' (line 1227)
                tuple_235184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1227, 23), 'tuple', False)
                # Calling tuple(args, kwargs) (line 1227)
                tuple_call_result_235187 = invoke(stypy.reporting.localization.Localization(__file__, 1227, 23), tuple_235184, *[edge_235185], **kwargs_235186)
                
                # Assigning a type to the variable 'edge' (line 1227)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1227, 16), 'edge', tuple_call_result_235187)

                if more_types_in_union_235183:
                    # SSA join for if statement (line 1226)
                    module_type_store = module_type_store.join_ssa_context()


            
            
            # Type idiom detected: calculating its left and rigth part (line 1228)
            # Getting the type of 'face' (line 1228)
            face_235188 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1228, 12), 'face')
            # Getting the type of 'None' (line 1228)
            None_235189 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1228, 27), 'None')
            
            (may_be_235190, more_types_in_union_235191) = may_not_be_none(face_235188, None_235189)

            if may_be_235190:

                if more_types_in_union_235191:
                    # Runtime conditional SSA (line 1228)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
                else:
                    module_type_store = module_type_store

                
                # Assigning a Call to a Name (line 1229):
                
                # Assigning a Call to a Name (line 1229):
                
                # Call to tuple(...): (line 1229)
                # Processing the call arguments (line 1229)
                # Getting the type of 'face' (line 1229)
                face_235193 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1229, 29), 'face', False)
                # Processing the call keyword arguments (line 1229)
                kwargs_235194 = {}
                # Getting the type of 'tuple' (line 1229)
                tuple_235192 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1229, 23), 'tuple', False)
                # Calling tuple(args, kwargs) (line 1229)
                tuple_call_result_235195 = invoke(stypy.reporting.localization.Localization(__file__, 1229, 23), tuple_235192, *[face_235193], **kwargs_235194)
                
                # Assigning a type to the variable 'face' (line 1229)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1229, 16), 'face', tuple_call_result_235195)

                if more_types_in_union_235191:
                    # SSA join for if statement (line 1228)
                    module_type_store = module_type_store.join_ssa_context()


            
            
            # Assigning a Tuple to a Name (line 1230):
            
            # Assigning a Tuple to a Name (line 1230):
            
            # Obtaining an instance of the builtin type 'tuple' (line 1230)
            tuple_235196 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1230, 27), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 1230)
            # Adding element type (line 1230)
            # Getting the type of 'edge' (line 1230)
            edge_235197 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1230, 27), 'edge')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1230, 27), tuple_235196, edge_235197)
            # Adding element type (line 1230)
            # Getting the type of 'face' (line 1230)
            face_235198 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1230, 33), 'face')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1230, 27), tuple_235196, face_235198)
            # Adding element type (line 1230)
            # Getting the type of 'hatch' (line 1230)
            hatch_235199 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1230, 39), 'hatch')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1230, 27), tuple_235196, hatch_235199)
            
            # Assigning a type to the variable 'hatch_style' (line 1230)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1230, 12), 'hatch_style', tuple_235196)

            if more_types_in_union_235164:
                # SSA join for if statement (line 1224)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Call to a Name (line 1232):
        
        # Assigning a Call to a Name (line 1232):
        
        # Call to get(...): (line 1232)
        # Processing the call arguments (line 1232)
        # Getting the type of 'hatch_style' (line 1232)
        hatch_style_235203 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1232, 41), 'hatch_style', False)
        # Getting the type of 'None' (line 1232)
        None_235204 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1232, 54), 'None', False)
        # Processing the call keyword arguments (line 1232)
        kwargs_235205 = {}
        # Getting the type of 'self' (line 1232)
        self_235200 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1232, 18), 'self', False)
        # Obtaining the member 'hatchPatterns' of a type (line 1232)
        hatchPatterns_235201 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1232, 18), self_235200, 'hatchPatterns')
        # Obtaining the member 'get' of a type (line 1232)
        get_235202 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1232, 18), hatchPatterns_235201, 'get')
        # Calling get(args, kwargs) (line 1232)
        get_call_result_235206 = invoke(stypy.reporting.localization.Localization(__file__, 1232, 18), get_235202, *[hatch_style_235203, None_235204], **kwargs_235205)
        
        # Assigning a type to the variable 'pattern' (line 1232)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1232, 8), 'pattern', get_call_result_235206)
        
        # Type idiom detected: calculating its left and rigth part (line 1233)
        # Getting the type of 'pattern' (line 1233)
        pattern_235207 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1233, 8), 'pattern')
        # Getting the type of 'None' (line 1233)
        None_235208 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1233, 26), 'None')
        
        (may_be_235209, more_types_in_union_235210) = may_not_be_none(pattern_235207, None_235208)

        if may_be_235209:

            if more_types_in_union_235210:
                # Runtime conditional SSA (line 1233)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            # Getting the type of 'pattern' (line 1234)
            pattern_235211 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1234, 19), 'pattern')
            # Assigning a type to the variable 'stypy_return_type' (line 1234)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1234, 12), 'stypy_return_type', pattern_235211)

            if more_types_in_union_235210:
                # SSA join for if statement (line 1233)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Call to a Name (line 1236):
        
        # Assigning a Call to a Name (line 1236):
        
        # Call to Name(...): (line 1236)
        # Processing the call arguments (line 1236)
        unicode_235213 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1236, 20), 'unicode', u'H%d')
        # Getting the type of 'self' (line 1236)
        self_235214 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1236, 28), 'self', False)
        # Obtaining the member 'nextHatch' of a type (line 1236)
        nextHatch_235215 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1236, 28), self_235214, 'nextHatch')
        # Applying the binary operator '%' (line 1236)
        result_mod_235216 = python_operator(stypy.reporting.localization.Localization(__file__, 1236, 20), '%', unicode_235213, nextHatch_235215)
        
        # Processing the call keyword arguments (line 1236)
        kwargs_235217 = {}
        # Getting the type of 'Name' (line 1236)
        Name_235212 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1236, 15), 'Name', False)
        # Calling Name(args, kwargs) (line 1236)
        Name_call_result_235218 = invoke(stypy.reporting.localization.Localization(__file__, 1236, 15), Name_235212, *[result_mod_235216], **kwargs_235217)
        
        # Assigning a type to the variable 'name' (line 1236)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1236, 8), 'name', Name_call_result_235218)
        
        # Getting the type of 'self' (line 1237)
        self_235219 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1237, 8), 'self')
        # Obtaining the member 'nextHatch' of a type (line 1237)
        nextHatch_235220 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1237, 8), self_235219, 'nextHatch')
        int_235221 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1237, 26), 'int')
        # Applying the binary operator '+=' (line 1237)
        result_iadd_235222 = python_operator(stypy.reporting.localization.Localization(__file__, 1237, 8), '+=', nextHatch_235220, int_235221)
        # Getting the type of 'self' (line 1237)
        self_235223 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1237, 8), 'self')
        # Setting the type of the member 'nextHatch' of a type (line 1237)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1237, 8), self_235223, 'nextHatch', result_iadd_235222)
        
        
        # Assigning a Name to a Subscript (line 1238):
        
        # Assigning a Name to a Subscript (line 1238):
        # Getting the type of 'name' (line 1238)
        name_235224 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1238, 42), 'name')
        # Getting the type of 'self' (line 1238)
        self_235225 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1238, 8), 'self')
        # Obtaining the member 'hatchPatterns' of a type (line 1238)
        hatchPatterns_235226 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1238, 8), self_235225, 'hatchPatterns')
        # Getting the type of 'hatch_style' (line 1238)
        hatch_style_235227 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1238, 27), 'hatch_style')
        # Storing an element on a container (line 1238)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1238, 8), hatchPatterns_235226, (hatch_style_235227, name_235224))
        # Getting the type of 'name' (line 1239)
        name_235228 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1239, 15), 'name')
        # Assigning a type to the variable 'stypy_return_type' (line 1239)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1239, 8), 'stypy_return_type', name_235228)
        
        # ################# End of 'hatchPattern(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'hatchPattern' in the type store
        # Getting the type of 'stypy_return_type' (line 1222)
        stypy_return_type_235229 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1222, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_235229)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'hatchPattern'
        return stypy_return_type_235229


    @norecursion
    def writeHatches(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'writeHatches'
        module_type_store = module_type_store.open_function_context('writeHatches', 1241, 4, False)
        # Assigning a type to the variable 'self' (line 1242)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1242, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        PdfFile.writeHatches.__dict__.__setitem__('stypy_localization', localization)
        PdfFile.writeHatches.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        PdfFile.writeHatches.__dict__.__setitem__('stypy_type_store', module_type_store)
        PdfFile.writeHatches.__dict__.__setitem__('stypy_function_name', 'PdfFile.writeHatches')
        PdfFile.writeHatches.__dict__.__setitem__('stypy_param_names_list', [])
        PdfFile.writeHatches.__dict__.__setitem__('stypy_varargs_param_name', None)
        PdfFile.writeHatches.__dict__.__setitem__('stypy_kwargs_param_name', None)
        PdfFile.writeHatches.__dict__.__setitem__('stypy_call_defaults', defaults)
        PdfFile.writeHatches.__dict__.__setitem__('stypy_call_varargs', varargs)
        PdfFile.writeHatches.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        PdfFile.writeHatches.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'PdfFile.writeHatches', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'writeHatches', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'writeHatches(...)' code ##################

        
        # Assigning a Call to a Name (line 1242):
        
        # Assigning a Call to a Name (line 1242):
        
        # Call to dict(...): (line 1242)
        # Processing the call keyword arguments (line 1242)
        kwargs_235231 = {}
        # Getting the type of 'dict' (line 1242)
        dict_235230 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1242, 20), 'dict', False)
        # Calling dict(args, kwargs) (line 1242)
        dict_call_result_235232 = invoke(stypy.reporting.localization.Localization(__file__, 1242, 20), dict_235230, *[], **kwargs_235231)
        
        # Assigning a type to the variable 'hatchDict' (line 1242)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1242, 8), 'hatchDict', dict_call_result_235232)
        
        # Assigning a Num to a Name (line 1243):
        
        # Assigning a Num to a Name (line 1243):
        float_235233 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1243, 18), 'float')
        # Assigning a type to the variable 'sidelen' (line 1243)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1243, 8), 'sidelen', float_235233)
        
        
        # Call to iteritems(...): (line 1244)
        # Processing the call arguments (line 1244)
        # Getting the type of 'self' (line 1244)
        self_235236 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1244, 47), 'self', False)
        # Obtaining the member 'hatchPatterns' of a type (line 1244)
        hatchPatterns_235237 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1244, 47), self_235236, 'hatchPatterns')
        # Processing the call keyword arguments (line 1244)
        kwargs_235238 = {}
        # Getting the type of 'six' (line 1244)
        six_235234 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1244, 33), 'six', False)
        # Obtaining the member 'iteritems' of a type (line 1244)
        iteritems_235235 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1244, 33), six_235234, 'iteritems')
        # Calling iteritems(args, kwargs) (line 1244)
        iteritems_call_result_235239 = invoke(stypy.reporting.localization.Localization(__file__, 1244, 33), iteritems_235235, *[hatchPatterns_235237], **kwargs_235238)
        
        # Testing the type of a for loop iterable (line 1244)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1244, 8), iteritems_call_result_235239)
        # Getting the type of the for loop variable (line 1244)
        for_loop_var_235240 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1244, 8), iteritems_call_result_235239)
        # Assigning a type to the variable 'hatch_style' (line 1244)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1244, 8), 'hatch_style', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1244, 8), for_loop_var_235240))
        # Assigning a type to the variable 'name' (line 1244)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1244, 8), 'name', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1244, 8), for_loop_var_235240))
        # SSA begins for a for statement (line 1244)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 1245):
        
        # Assigning a Call to a Name (line 1245):
        
        # Call to reserveObject(...): (line 1245)
        # Processing the call arguments (line 1245)
        unicode_235243 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1245, 36), 'unicode', u'hatch pattern')
        # Processing the call keyword arguments (line 1245)
        kwargs_235244 = {}
        # Getting the type of 'self' (line 1245)
        self_235241 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1245, 17), 'self', False)
        # Obtaining the member 'reserveObject' of a type (line 1245)
        reserveObject_235242 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1245, 17), self_235241, 'reserveObject')
        # Calling reserveObject(args, kwargs) (line 1245)
        reserveObject_call_result_235245 = invoke(stypy.reporting.localization.Localization(__file__, 1245, 17), reserveObject_235242, *[unicode_235243], **kwargs_235244)
        
        # Assigning a type to the variable 'ob' (line 1245)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1245, 12), 'ob', reserveObject_call_result_235245)
        
        # Assigning a Name to a Subscript (line 1246):
        
        # Assigning a Name to a Subscript (line 1246):
        # Getting the type of 'ob' (line 1246)
        ob_235246 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1246, 30), 'ob')
        # Getting the type of 'hatchDict' (line 1246)
        hatchDict_235247 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1246, 12), 'hatchDict')
        # Getting the type of 'name' (line 1246)
        name_235248 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1246, 22), 'name')
        # Storing an element on a container (line 1246)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1246, 12), hatchDict_235247, (name_235248, ob_235246))
        
        # Assigning a Dict to a Name (line 1247):
        
        # Assigning a Dict to a Name (line 1247):
        
        # Obtaining an instance of the builtin type 'dict' (line 1247)
        dict_235249 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1247, 18), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 1247)
        # Adding element type (key, value) (line 1247)
        unicode_235250 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1247, 19), 'unicode', u'Procsets')
        # Calculating list comprehension
        # Calculating comprehension expression
        
        # Call to split(...): (line 1248)
        # Processing the call keyword arguments (line 1248)
        kwargs_235257 = {}
        unicode_235255 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1248, 37), 'unicode', u'PDF Text ImageB ImageC ImageI')
        # Obtaining the member 'split' of a type (line 1248)
        split_235256 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1248, 37), unicode_235255, 'split')
        # Calling split(args, kwargs) (line 1248)
        split_call_result_235258 = invoke(stypy.reporting.localization.Localization(__file__, 1248, 37), split_235256, *[], **kwargs_235257)
        
        comprehension_235259 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1248, 20), split_call_result_235258)
        # Assigning a type to the variable 'x' (line 1248)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1248, 20), 'x', comprehension_235259)
        
        # Call to Name(...): (line 1248)
        # Processing the call arguments (line 1248)
        # Getting the type of 'x' (line 1248)
        x_235252 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1248, 25), 'x', False)
        # Processing the call keyword arguments (line 1248)
        kwargs_235253 = {}
        # Getting the type of 'Name' (line 1248)
        Name_235251 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1248, 20), 'Name', False)
        # Calling Name(args, kwargs) (line 1248)
        Name_call_result_235254 = invoke(stypy.reporting.localization.Localization(__file__, 1248, 20), Name_235251, *[x_235252], **kwargs_235253)
        
        list_235260 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1248, 20), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1248, 20), list_235260, Name_call_result_235254)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1247, 18), dict_235249, (unicode_235250, list_235260))
        
        # Assigning a type to the variable 'res' (line 1247)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1247, 12), 'res', dict_235249)
        
        # Call to beginStream(...): (line 1249)
        # Processing the call arguments (line 1249)
        # Getting the type of 'ob' (line 1250)
        ob_235263 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1250, 16), 'ob', False)
        # Obtaining the member 'id' of a type (line 1250)
        id_235264 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1250, 16), ob_235263, 'id')
        # Getting the type of 'None' (line 1250)
        None_235265 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1250, 23), 'None', False)
        
        # Obtaining an instance of the builtin type 'dict' (line 1251)
        dict_235266 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1251, 16), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 1251)
        # Adding element type (key, value) (line 1251)
        unicode_235267 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1251, 17), 'unicode', u'Type')
        
        # Call to Name(...): (line 1251)
        # Processing the call arguments (line 1251)
        unicode_235269 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1251, 30), 'unicode', u'Pattern')
        # Processing the call keyword arguments (line 1251)
        kwargs_235270 = {}
        # Getting the type of 'Name' (line 1251)
        Name_235268 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1251, 25), 'Name', False)
        # Calling Name(args, kwargs) (line 1251)
        Name_call_result_235271 = invoke(stypy.reporting.localization.Localization(__file__, 1251, 25), Name_235268, *[unicode_235269], **kwargs_235270)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1251, 16), dict_235266, (unicode_235267, Name_call_result_235271))
        # Adding element type (key, value) (line 1251)
        unicode_235272 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1252, 17), 'unicode', u'PatternType')
        int_235273 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1252, 32), 'int')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1251, 16), dict_235266, (unicode_235272, int_235273))
        # Adding element type (key, value) (line 1251)
        unicode_235274 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1252, 35), 'unicode', u'PaintType')
        int_235275 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1252, 48), 'int')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1251, 16), dict_235266, (unicode_235274, int_235275))
        # Adding element type (key, value) (line 1251)
        unicode_235276 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1252, 51), 'unicode', u'TilingType')
        int_235277 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1252, 65), 'int')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1251, 16), dict_235266, (unicode_235276, int_235277))
        # Adding element type (key, value) (line 1251)
        unicode_235278 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1253, 17), 'unicode', u'BBox')
        
        # Obtaining an instance of the builtin type 'list' (line 1253)
        list_235279 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1253, 25), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1253)
        # Adding element type (line 1253)
        int_235280 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1253, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1253, 25), list_235279, int_235280)
        # Adding element type (line 1253)
        int_235281 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1253, 29), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1253, 25), list_235279, int_235281)
        # Adding element type (line 1253)
        # Getting the type of 'sidelen' (line 1253)
        sidelen_235282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1253, 32), 'sidelen', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1253, 25), list_235279, sidelen_235282)
        # Adding element type (line 1253)
        # Getting the type of 'sidelen' (line 1253)
        sidelen_235283 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1253, 41), 'sidelen', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1253, 25), list_235279, sidelen_235283)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1251, 16), dict_235266, (unicode_235278, list_235279))
        # Adding element type (key, value) (line 1251)
        unicode_235284 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1254, 17), 'unicode', u'XStep')
        # Getting the type of 'sidelen' (line 1254)
        sidelen_235285 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1254, 26), 'sidelen', False)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1251, 16), dict_235266, (unicode_235284, sidelen_235285))
        # Adding element type (key, value) (line 1251)
        unicode_235286 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1254, 35), 'unicode', u'YStep')
        # Getting the type of 'sidelen' (line 1254)
        sidelen_235287 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1254, 44), 'sidelen', False)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1251, 16), dict_235266, (unicode_235286, sidelen_235287))
        # Adding element type (key, value) (line 1251)
        unicode_235288 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1255, 17), 'unicode', u'Resources')
        # Getting the type of 'res' (line 1255)
        res_235289 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1255, 30), 'res', False)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1251, 16), dict_235266, (unicode_235288, res_235289))
        # Adding element type (key, value) (line 1251)
        unicode_235290 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1257, 17), 'unicode', u'Matrix')
        
        # Obtaining an instance of the builtin type 'list' (line 1257)
        list_235291 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1257, 27), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1257)
        # Adding element type (line 1257)
        int_235292 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1257, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1257, 27), list_235291, int_235292)
        # Adding element type (line 1257)
        int_235293 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1257, 31), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1257, 27), list_235291, int_235293)
        # Adding element type (line 1257)
        int_235294 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1257, 34), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1257, 27), list_235291, int_235294)
        # Adding element type (line 1257)
        int_235295 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1257, 37), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1257, 27), list_235291, int_235295)
        # Adding element type (line 1257)
        int_235296 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1257, 40), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1257, 27), list_235291, int_235296)
        # Adding element type (line 1257)
        # Getting the type of 'self' (line 1257)
        self_235297 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1257, 43), 'self', False)
        # Obtaining the member 'height' of a type (line 1257)
        height_235298 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1257, 43), self_235297, 'height')
        int_235299 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1257, 57), 'int')
        # Applying the binary operator '*' (line 1257)
        result_mul_235300 = python_operator(stypy.reporting.localization.Localization(__file__, 1257, 43), '*', height_235298, int_235299)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1257, 27), list_235291, result_mul_235300)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1251, 16), dict_235266, (unicode_235290, list_235291))
        
        # Processing the call keyword arguments (line 1249)
        kwargs_235301 = {}
        # Getting the type of 'self' (line 1249)
        self_235261 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1249, 12), 'self', False)
        # Obtaining the member 'beginStream' of a type (line 1249)
        beginStream_235262 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1249, 12), self_235261, 'beginStream')
        # Calling beginStream(args, kwargs) (line 1249)
        beginStream_call_result_235302 = invoke(stypy.reporting.localization.Localization(__file__, 1249, 12), beginStream_235262, *[id_235264, None_235265, dict_235266], **kwargs_235301)
        
        
        # Assigning a Name to a Tuple (line 1259):
        
        # Assigning a Subscript to a Name (line 1259):
        
        # Obtaining the type of the subscript
        int_235303 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1259, 12), 'int')
        # Getting the type of 'hatch_style' (line 1259)
        hatch_style_235304 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1259, 41), 'hatch_style')
        # Obtaining the member '__getitem__' of a type (line 1259)
        getitem___235305 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1259, 12), hatch_style_235304, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1259)
        subscript_call_result_235306 = invoke(stypy.reporting.localization.Localization(__file__, 1259, 12), getitem___235305, int_235303)
        
        # Assigning a type to the variable 'tuple_var_assignment_231664' (line 1259)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1259, 12), 'tuple_var_assignment_231664', subscript_call_result_235306)
        
        # Assigning a Subscript to a Name (line 1259):
        
        # Obtaining the type of the subscript
        int_235307 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1259, 12), 'int')
        # Getting the type of 'hatch_style' (line 1259)
        hatch_style_235308 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1259, 41), 'hatch_style')
        # Obtaining the member '__getitem__' of a type (line 1259)
        getitem___235309 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1259, 12), hatch_style_235308, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1259)
        subscript_call_result_235310 = invoke(stypy.reporting.localization.Localization(__file__, 1259, 12), getitem___235309, int_235307)
        
        # Assigning a type to the variable 'tuple_var_assignment_231665' (line 1259)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1259, 12), 'tuple_var_assignment_231665', subscript_call_result_235310)
        
        # Assigning a Subscript to a Name (line 1259):
        
        # Obtaining the type of the subscript
        int_235311 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1259, 12), 'int')
        # Getting the type of 'hatch_style' (line 1259)
        hatch_style_235312 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1259, 41), 'hatch_style')
        # Obtaining the member '__getitem__' of a type (line 1259)
        getitem___235313 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1259, 12), hatch_style_235312, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1259)
        subscript_call_result_235314 = invoke(stypy.reporting.localization.Localization(__file__, 1259, 12), getitem___235313, int_235311)
        
        # Assigning a type to the variable 'tuple_var_assignment_231666' (line 1259)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1259, 12), 'tuple_var_assignment_231666', subscript_call_result_235314)
        
        # Assigning a Name to a Name (line 1259):
        # Getting the type of 'tuple_var_assignment_231664' (line 1259)
        tuple_var_assignment_231664_235315 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1259, 12), 'tuple_var_assignment_231664')
        # Assigning a type to the variable 'stroke_rgb' (line 1259)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1259, 12), 'stroke_rgb', tuple_var_assignment_231664_235315)
        
        # Assigning a Name to a Name (line 1259):
        # Getting the type of 'tuple_var_assignment_231665' (line 1259)
        tuple_var_assignment_231665_235316 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1259, 12), 'tuple_var_assignment_231665')
        # Assigning a type to the variable 'fill_rgb' (line 1259)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1259, 24), 'fill_rgb', tuple_var_assignment_231665_235316)
        
        # Assigning a Name to a Name (line 1259):
        # Getting the type of 'tuple_var_assignment_231666' (line 1259)
        tuple_var_assignment_231666_235317 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1259, 12), 'tuple_var_assignment_231666')
        # Assigning a type to the variable 'path' (line 1259)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1259, 34), 'path', tuple_var_assignment_231666_235317)
        
        # Call to output(...): (line 1260)
        # Processing the call arguments (line 1260)
        
        # Obtaining the type of the subscript
        int_235320 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1260, 35), 'int')
        # Getting the type of 'stroke_rgb' (line 1260)
        stroke_rgb_235321 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1260, 24), 'stroke_rgb', False)
        # Obtaining the member '__getitem__' of a type (line 1260)
        getitem___235322 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1260, 24), stroke_rgb_235321, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1260)
        subscript_call_result_235323 = invoke(stypy.reporting.localization.Localization(__file__, 1260, 24), getitem___235322, int_235320)
        
        
        # Obtaining the type of the subscript
        int_235324 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1260, 50), 'int')
        # Getting the type of 'stroke_rgb' (line 1260)
        stroke_rgb_235325 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1260, 39), 'stroke_rgb', False)
        # Obtaining the member '__getitem__' of a type (line 1260)
        getitem___235326 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1260, 39), stroke_rgb_235325, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1260)
        subscript_call_result_235327 = invoke(stypy.reporting.localization.Localization(__file__, 1260, 39), getitem___235326, int_235324)
        
        
        # Obtaining the type of the subscript
        int_235328 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1260, 65), 'int')
        # Getting the type of 'stroke_rgb' (line 1260)
        stroke_rgb_235329 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1260, 54), 'stroke_rgb', False)
        # Obtaining the member '__getitem__' of a type (line 1260)
        getitem___235330 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1260, 54), stroke_rgb_235329, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1260)
        subscript_call_result_235331 = invoke(stypy.reporting.localization.Localization(__file__, 1260, 54), getitem___235330, int_235328)
        
        # Getting the type of 'Op' (line 1261)
        Op_235332 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1261, 24), 'Op', False)
        # Obtaining the member 'setrgb_stroke' of a type (line 1261)
        setrgb_stroke_235333 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1261, 24), Op_235332, 'setrgb_stroke')
        # Processing the call keyword arguments (line 1260)
        kwargs_235334 = {}
        # Getting the type of 'self' (line 1260)
        self_235318 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1260, 12), 'self', False)
        # Obtaining the member 'output' of a type (line 1260)
        output_235319 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1260, 12), self_235318, 'output')
        # Calling output(args, kwargs) (line 1260)
        output_call_result_235335 = invoke(stypy.reporting.localization.Localization(__file__, 1260, 12), output_235319, *[subscript_call_result_235323, subscript_call_result_235327, subscript_call_result_235331, setrgb_stroke_235333], **kwargs_235334)
        
        
        # Type idiom detected: calculating its left and rigth part (line 1262)
        # Getting the type of 'fill_rgb' (line 1262)
        fill_rgb_235336 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1262, 12), 'fill_rgb')
        # Getting the type of 'None' (line 1262)
        None_235337 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1262, 31), 'None')
        
        (may_be_235338, more_types_in_union_235339) = may_not_be_none(fill_rgb_235336, None_235337)

        if may_be_235338:

            if more_types_in_union_235339:
                # Runtime conditional SSA (line 1262)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Call to output(...): (line 1263)
            # Processing the call arguments (line 1263)
            
            # Obtaining the type of the subscript
            int_235342 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1263, 37), 'int')
            # Getting the type of 'fill_rgb' (line 1263)
            fill_rgb_235343 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1263, 28), 'fill_rgb', False)
            # Obtaining the member '__getitem__' of a type (line 1263)
            getitem___235344 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1263, 28), fill_rgb_235343, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 1263)
            subscript_call_result_235345 = invoke(stypy.reporting.localization.Localization(__file__, 1263, 28), getitem___235344, int_235342)
            
            
            # Obtaining the type of the subscript
            int_235346 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1263, 50), 'int')
            # Getting the type of 'fill_rgb' (line 1263)
            fill_rgb_235347 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1263, 41), 'fill_rgb', False)
            # Obtaining the member '__getitem__' of a type (line 1263)
            getitem___235348 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1263, 41), fill_rgb_235347, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 1263)
            subscript_call_result_235349 = invoke(stypy.reporting.localization.Localization(__file__, 1263, 41), getitem___235348, int_235346)
            
            
            # Obtaining the type of the subscript
            int_235350 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1263, 63), 'int')
            # Getting the type of 'fill_rgb' (line 1263)
            fill_rgb_235351 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1263, 54), 'fill_rgb', False)
            # Obtaining the member '__getitem__' of a type (line 1263)
            getitem___235352 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1263, 54), fill_rgb_235351, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 1263)
            subscript_call_result_235353 = invoke(stypy.reporting.localization.Localization(__file__, 1263, 54), getitem___235352, int_235350)
            
            # Getting the type of 'Op' (line 1264)
            Op_235354 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1264, 28), 'Op', False)
            # Obtaining the member 'setrgb_nonstroke' of a type (line 1264)
            setrgb_nonstroke_235355 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1264, 28), Op_235354, 'setrgb_nonstroke')
            int_235356 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1265, 28), 'int')
            int_235357 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1265, 31), 'int')
            # Getting the type of 'sidelen' (line 1265)
            sidelen_235358 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1265, 34), 'sidelen', False)
            # Getting the type of 'sidelen' (line 1265)
            sidelen_235359 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1265, 43), 'sidelen', False)
            # Getting the type of 'Op' (line 1265)
            Op_235360 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1265, 52), 'Op', False)
            # Obtaining the member 'rectangle' of a type (line 1265)
            rectangle_235361 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1265, 52), Op_235360, 'rectangle')
            # Getting the type of 'Op' (line 1266)
            Op_235362 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1266, 28), 'Op', False)
            # Obtaining the member 'fill' of a type (line 1266)
            fill_235363 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1266, 28), Op_235362, 'fill')
            # Processing the call keyword arguments (line 1263)
            kwargs_235364 = {}
            # Getting the type of 'self' (line 1263)
            self_235340 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1263, 16), 'self', False)
            # Obtaining the member 'output' of a type (line 1263)
            output_235341 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1263, 16), self_235340, 'output')
            # Calling output(args, kwargs) (line 1263)
            output_call_result_235365 = invoke(stypy.reporting.localization.Localization(__file__, 1263, 16), output_235341, *[subscript_call_result_235345, subscript_call_result_235349, subscript_call_result_235353, setrgb_nonstroke_235355, int_235356, int_235357, sidelen_235358, sidelen_235359, rectangle_235361, fill_235363], **kwargs_235364)
            

            if more_types_in_union_235339:
                # SSA join for if statement (line 1262)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Call to output(...): (line 1268)
        # Processing the call arguments (line 1268)
        
        # Obtaining the type of the subscript
        unicode_235368 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1268, 33), 'unicode', u'hatch.linewidth')
        # Getting the type of 'rcParams' (line 1268)
        rcParams_235369 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1268, 24), 'rcParams', False)
        # Obtaining the member '__getitem__' of a type (line 1268)
        getitem___235370 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1268, 24), rcParams_235369, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1268)
        subscript_call_result_235371 = invoke(stypy.reporting.localization.Localization(__file__, 1268, 24), getitem___235370, unicode_235368)
        
        # Getting the type of 'Op' (line 1268)
        Op_235372 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1268, 53), 'Op', False)
        # Obtaining the member 'setlinewidth' of a type (line 1268)
        setlinewidth_235373 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1268, 53), Op_235372, 'setlinewidth')
        # Processing the call keyword arguments (line 1268)
        kwargs_235374 = {}
        # Getting the type of 'self' (line 1268)
        self_235366 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1268, 12), 'self', False)
        # Obtaining the member 'output' of a type (line 1268)
        output_235367 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1268, 12), self_235366, 'output')
        # Calling output(args, kwargs) (line 1268)
        output_call_result_235375 = invoke(stypy.reporting.localization.Localization(__file__, 1268, 12), output_235367, *[subscript_call_result_235371, setlinewidth_235373], **kwargs_235374)
        
        
        # Call to output(...): (line 1270)
        
        # Call to pathOperations(...): (line 1270)
        # Processing the call arguments (line 1270)
        
        # Call to hatch(...): (line 1271)
        # Processing the call arguments (line 1271)
        # Getting the type of 'path' (line 1271)
        path_235382 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1271, 27), 'path', False)
        # Processing the call keyword arguments (line 1271)
        kwargs_235383 = {}
        # Getting the type of 'Path' (line 1271)
        Path_235380 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1271, 16), 'Path', False)
        # Obtaining the member 'hatch' of a type (line 1271)
        hatch_235381 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1271, 16), Path_235380, 'hatch')
        # Calling hatch(args, kwargs) (line 1271)
        hatch_call_result_235384 = invoke(stypy.reporting.localization.Localization(__file__, 1271, 16), hatch_235381, *[path_235382], **kwargs_235383)
        
        
        # Call to scale(...): (line 1272)
        # Processing the call arguments (line 1272)
        # Getting the type of 'sidelen' (line 1272)
        sidelen_235389 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1272, 33), 'sidelen', False)
        # Processing the call keyword arguments (line 1272)
        kwargs_235390 = {}
        
        # Call to Affine2D(...): (line 1272)
        # Processing the call keyword arguments (line 1272)
        kwargs_235386 = {}
        # Getting the type of 'Affine2D' (line 1272)
        Affine2D_235385 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1272, 16), 'Affine2D', False)
        # Calling Affine2D(args, kwargs) (line 1272)
        Affine2D_call_result_235387 = invoke(stypy.reporting.localization.Localization(__file__, 1272, 16), Affine2D_235385, *[], **kwargs_235386)
        
        # Obtaining the member 'scale' of a type (line 1272)
        scale_235388 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1272, 16), Affine2D_call_result_235387, 'scale')
        # Calling scale(args, kwargs) (line 1272)
        scale_call_result_235391 = invoke(stypy.reporting.localization.Localization(__file__, 1272, 16), scale_235388, *[sidelen_235389], **kwargs_235390)
        
        # Processing the call keyword arguments (line 1270)
        # Getting the type of 'False' (line 1273)
        False_235392 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1273, 25), 'False', False)
        keyword_235393 = False_235392
        kwargs_235394 = {'simplify': keyword_235393}
        # Getting the type of 'self' (line 1270)
        self_235378 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1270, 25), 'self', False)
        # Obtaining the member 'pathOperations' of a type (line 1270)
        pathOperations_235379 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1270, 25), self_235378, 'pathOperations')
        # Calling pathOperations(args, kwargs) (line 1270)
        pathOperations_call_result_235395 = invoke(stypy.reporting.localization.Localization(__file__, 1270, 25), pathOperations_235379, *[hatch_call_result_235384, scale_call_result_235391], **kwargs_235394)
        
        # Processing the call keyword arguments (line 1270)
        kwargs_235396 = {}
        # Getting the type of 'self' (line 1270)
        self_235376 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1270, 12), 'self', False)
        # Obtaining the member 'output' of a type (line 1270)
        output_235377 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1270, 12), self_235376, 'output')
        # Calling output(args, kwargs) (line 1270)
        output_call_result_235397 = invoke(stypy.reporting.localization.Localization(__file__, 1270, 12), output_235377, *[pathOperations_call_result_235395], **kwargs_235396)
        
        
        # Call to output(...): (line 1274)
        # Processing the call arguments (line 1274)
        # Getting the type of 'Op' (line 1274)
        Op_235400 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1274, 24), 'Op', False)
        # Obtaining the member 'fill_stroke' of a type (line 1274)
        fill_stroke_235401 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1274, 24), Op_235400, 'fill_stroke')
        # Processing the call keyword arguments (line 1274)
        kwargs_235402 = {}
        # Getting the type of 'self' (line 1274)
        self_235398 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1274, 12), 'self', False)
        # Obtaining the member 'output' of a type (line 1274)
        output_235399 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1274, 12), self_235398, 'output')
        # Calling output(args, kwargs) (line 1274)
        output_call_result_235403 = invoke(stypy.reporting.localization.Localization(__file__, 1274, 12), output_235399, *[fill_stroke_235401], **kwargs_235402)
        
        
        # Call to endStream(...): (line 1276)
        # Processing the call keyword arguments (line 1276)
        kwargs_235406 = {}
        # Getting the type of 'self' (line 1276)
        self_235404 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1276, 12), 'self', False)
        # Obtaining the member 'endStream' of a type (line 1276)
        endStream_235405 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1276, 12), self_235404, 'endStream')
        # Calling endStream(args, kwargs) (line 1276)
        endStream_call_result_235407 = invoke(stypy.reporting.localization.Localization(__file__, 1276, 12), endStream_235405, *[], **kwargs_235406)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to writeObject(...): (line 1277)
        # Processing the call arguments (line 1277)
        # Getting the type of 'self' (line 1277)
        self_235410 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1277, 25), 'self', False)
        # Obtaining the member 'hatchObject' of a type (line 1277)
        hatchObject_235411 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1277, 25), self_235410, 'hatchObject')
        # Getting the type of 'hatchDict' (line 1277)
        hatchDict_235412 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1277, 43), 'hatchDict', False)
        # Processing the call keyword arguments (line 1277)
        kwargs_235413 = {}
        # Getting the type of 'self' (line 1277)
        self_235408 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1277, 8), 'self', False)
        # Obtaining the member 'writeObject' of a type (line 1277)
        writeObject_235409 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1277, 8), self_235408, 'writeObject')
        # Calling writeObject(args, kwargs) (line 1277)
        writeObject_call_result_235414 = invoke(stypy.reporting.localization.Localization(__file__, 1277, 8), writeObject_235409, *[hatchObject_235411, hatchDict_235412], **kwargs_235413)
        
        
        # ################# End of 'writeHatches(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'writeHatches' in the type store
        # Getting the type of 'stypy_return_type' (line 1241)
        stypy_return_type_235415 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1241, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_235415)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'writeHatches'
        return stypy_return_type_235415


    @norecursion
    def addGouraudTriangles(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'addGouraudTriangles'
        module_type_store = module_type_store.open_function_context('addGouraudTriangles', 1279, 4, False)
        # Assigning a type to the variable 'self' (line 1280)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1280, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        PdfFile.addGouraudTriangles.__dict__.__setitem__('stypy_localization', localization)
        PdfFile.addGouraudTriangles.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        PdfFile.addGouraudTriangles.__dict__.__setitem__('stypy_type_store', module_type_store)
        PdfFile.addGouraudTriangles.__dict__.__setitem__('stypy_function_name', 'PdfFile.addGouraudTriangles')
        PdfFile.addGouraudTriangles.__dict__.__setitem__('stypy_param_names_list', ['points', 'colors'])
        PdfFile.addGouraudTriangles.__dict__.__setitem__('stypy_varargs_param_name', None)
        PdfFile.addGouraudTriangles.__dict__.__setitem__('stypy_kwargs_param_name', None)
        PdfFile.addGouraudTriangles.__dict__.__setitem__('stypy_call_defaults', defaults)
        PdfFile.addGouraudTriangles.__dict__.__setitem__('stypy_call_varargs', varargs)
        PdfFile.addGouraudTriangles.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        PdfFile.addGouraudTriangles.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'PdfFile.addGouraudTriangles', ['points', 'colors'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'addGouraudTriangles', localization, ['points', 'colors'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'addGouraudTriangles(...)' code ##################

        
        # Assigning a Call to a Name (line 1280):
        
        # Assigning a Call to a Name (line 1280):
        
        # Call to Name(...): (line 1280)
        # Processing the call arguments (line 1280)
        unicode_235417 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1280, 20), 'unicode', u'GT%d')
        
        # Call to len(...): (line 1280)
        # Processing the call arguments (line 1280)
        # Getting the type of 'self' (line 1280)
        self_235419 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1280, 33), 'self', False)
        # Obtaining the member 'gouraudTriangles' of a type (line 1280)
        gouraudTriangles_235420 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1280, 33), self_235419, 'gouraudTriangles')
        # Processing the call keyword arguments (line 1280)
        kwargs_235421 = {}
        # Getting the type of 'len' (line 1280)
        len_235418 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1280, 29), 'len', False)
        # Calling len(args, kwargs) (line 1280)
        len_call_result_235422 = invoke(stypy.reporting.localization.Localization(__file__, 1280, 29), len_235418, *[gouraudTriangles_235420], **kwargs_235421)
        
        # Applying the binary operator '%' (line 1280)
        result_mod_235423 = python_operator(stypy.reporting.localization.Localization(__file__, 1280, 20), '%', unicode_235417, len_call_result_235422)
        
        # Processing the call keyword arguments (line 1280)
        kwargs_235424 = {}
        # Getting the type of 'Name' (line 1280)
        Name_235416 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1280, 15), 'Name', False)
        # Calling Name(args, kwargs) (line 1280)
        Name_call_result_235425 = invoke(stypy.reporting.localization.Localization(__file__, 1280, 15), Name_235416, *[result_mod_235423], **kwargs_235424)
        
        # Assigning a type to the variable 'name' (line 1280)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1280, 8), 'name', Name_call_result_235425)
        
        # Call to append(...): (line 1281)
        # Processing the call arguments (line 1281)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1281)
        tuple_235429 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1281, 38), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1281)
        # Adding element type (line 1281)
        # Getting the type of 'name' (line 1281)
        name_235430 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1281, 38), 'name', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1281, 38), tuple_235429, name_235430)
        # Adding element type (line 1281)
        # Getting the type of 'points' (line 1281)
        points_235431 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1281, 44), 'points', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1281, 38), tuple_235429, points_235431)
        # Adding element type (line 1281)
        # Getting the type of 'colors' (line 1281)
        colors_235432 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1281, 52), 'colors', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1281, 38), tuple_235429, colors_235432)
        
        # Processing the call keyword arguments (line 1281)
        kwargs_235433 = {}
        # Getting the type of 'self' (line 1281)
        self_235426 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1281, 8), 'self', False)
        # Obtaining the member 'gouraudTriangles' of a type (line 1281)
        gouraudTriangles_235427 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1281, 8), self_235426, 'gouraudTriangles')
        # Obtaining the member 'append' of a type (line 1281)
        append_235428 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1281, 8), gouraudTriangles_235427, 'append')
        # Calling append(args, kwargs) (line 1281)
        append_call_result_235434 = invoke(stypy.reporting.localization.Localization(__file__, 1281, 8), append_235428, *[tuple_235429], **kwargs_235433)
        
        # Getting the type of 'name' (line 1282)
        name_235435 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1282, 15), 'name')
        # Assigning a type to the variable 'stypy_return_type' (line 1282)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1282, 8), 'stypy_return_type', name_235435)
        
        # ################# End of 'addGouraudTriangles(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'addGouraudTriangles' in the type store
        # Getting the type of 'stypy_return_type' (line 1279)
        stypy_return_type_235436 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1279, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_235436)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'addGouraudTriangles'
        return stypy_return_type_235436


    @norecursion
    def writeGouraudTriangles(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'writeGouraudTriangles'
        module_type_store = module_type_store.open_function_context('writeGouraudTriangles', 1284, 4, False)
        # Assigning a type to the variable 'self' (line 1285)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1285, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        PdfFile.writeGouraudTriangles.__dict__.__setitem__('stypy_localization', localization)
        PdfFile.writeGouraudTriangles.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        PdfFile.writeGouraudTriangles.__dict__.__setitem__('stypy_type_store', module_type_store)
        PdfFile.writeGouraudTriangles.__dict__.__setitem__('stypy_function_name', 'PdfFile.writeGouraudTriangles')
        PdfFile.writeGouraudTriangles.__dict__.__setitem__('stypy_param_names_list', [])
        PdfFile.writeGouraudTriangles.__dict__.__setitem__('stypy_varargs_param_name', None)
        PdfFile.writeGouraudTriangles.__dict__.__setitem__('stypy_kwargs_param_name', None)
        PdfFile.writeGouraudTriangles.__dict__.__setitem__('stypy_call_defaults', defaults)
        PdfFile.writeGouraudTriangles.__dict__.__setitem__('stypy_call_varargs', varargs)
        PdfFile.writeGouraudTriangles.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        PdfFile.writeGouraudTriangles.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'PdfFile.writeGouraudTriangles', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'writeGouraudTriangles', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'writeGouraudTriangles(...)' code ##################

        
        # Assigning a Call to a Name (line 1285):
        
        # Assigning a Call to a Name (line 1285):
        
        # Call to dict(...): (line 1285)
        # Processing the call keyword arguments (line 1285)
        kwargs_235438 = {}
        # Getting the type of 'dict' (line 1285)
        dict_235437 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1285, 22), 'dict', False)
        # Calling dict(args, kwargs) (line 1285)
        dict_call_result_235439 = invoke(stypy.reporting.localization.Localization(__file__, 1285, 22), dict_235437, *[], **kwargs_235438)
        
        # Assigning a type to the variable 'gouraudDict' (line 1285)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1285, 8), 'gouraudDict', dict_call_result_235439)
        
        # Getting the type of 'self' (line 1286)
        self_235440 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1286, 36), 'self')
        # Obtaining the member 'gouraudTriangles' of a type (line 1286)
        gouraudTriangles_235441 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1286, 36), self_235440, 'gouraudTriangles')
        # Testing the type of a for loop iterable (line 1286)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1286, 8), gouraudTriangles_235441)
        # Getting the type of the for loop variable (line 1286)
        for_loop_var_235442 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1286, 8), gouraudTriangles_235441)
        # Assigning a type to the variable 'name' (line 1286)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1286, 8), 'name', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1286, 8), for_loop_var_235442))
        # Assigning a type to the variable 'points' (line 1286)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1286, 8), 'points', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1286, 8), for_loop_var_235442))
        # Assigning a type to the variable 'colors' (line 1286)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1286, 8), 'colors', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1286, 8), for_loop_var_235442))
        # SSA begins for a for statement (line 1286)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 1287):
        
        # Assigning a Call to a Name (line 1287):
        
        # Call to reserveObject(...): (line 1287)
        # Processing the call arguments (line 1287)
        unicode_235445 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1287, 36), 'unicode', u'Gouraud triangle')
        # Processing the call keyword arguments (line 1287)
        kwargs_235446 = {}
        # Getting the type of 'self' (line 1287)
        self_235443 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1287, 17), 'self', False)
        # Obtaining the member 'reserveObject' of a type (line 1287)
        reserveObject_235444 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1287, 17), self_235443, 'reserveObject')
        # Calling reserveObject(args, kwargs) (line 1287)
        reserveObject_call_result_235447 = invoke(stypy.reporting.localization.Localization(__file__, 1287, 17), reserveObject_235444, *[unicode_235445], **kwargs_235446)
        
        # Assigning a type to the variable 'ob' (line 1287)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1287, 12), 'ob', reserveObject_call_result_235447)
        
        # Assigning a Name to a Subscript (line 1288):
        
        # Assigning a Name to a Subscript (line 1288):
        # Getting the type of 'ob' (line 1288)
        ob_235448 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1288, 32), 'ob')
        # Getting the type of 'gouraudDict' (line 1288)
        gouraudDict_235449 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1288, 12), 'gouraudDict')
        # Getting the type of 'name' (line 1288)
        name_235450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1288, 24), 'name')
        # Storing an element on a container (line 1288)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1288, 12), gouraudDict_235449, (name_235450, ob_235448))
        
        # Assigning a Attribute to a Name (line 1289):
        
        # Assigning a Attribute to a Name (line 1289):
        # Getting the type of 'points' (line 1289)
        points_235451 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1289, 20), 'points')
        # Obtaining the member 'shape' of a type (line 1289)
        shape_235452 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1289, 20), points_235451, 'shape')
        # Assigning a type to the variable 'shape' (line 1289)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1289, 12), 'shape', shape_235452)
        
        # Assigning a Call to a Name (line 1290):
        
        # Assigning a Call to a Name (line 1290):
        
        # Call to reshape(...): (line 1290)
        # Processing the call arguments (line 1290)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1290)
        tuple_235455 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1290, 42), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1290)
        # Adding element type (line 1290)
        
        # Obtaining the type of the subscript
        int_235456 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1290, 48), 'int')
        # Getting the type of 'shape' (line 1290)
        shape_235457 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1290, 42), 'shape', False)
        # Obtaining the member '__getitem__' of a type (line 1290)
        getitem___235458 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1290, 42), shape_235457, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1290)
        subscript_call_result_235459 = invoke(stypy.reporting.localization.Localization(__file__, 1290, 42), getitem___235458, int_235456)
        
        
        # Obtaining the type of the subscript
        int_235460 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1290, 59), 'int')
        # Getting the type of 'shape' (line 1290)
        shape_235461 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1290, 53), 'shape', False)
        # Obtaining the member '__getitem__' of a type (line 1290)
        getitem___235462 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1290, 53), shape_235461, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1290)
        subscript_call_result_235463 = invoke(stypy.reporting.localization.Localization(__file__, 1290, 53), getitem___235462, int_235460)
        
        # Applying the binary operator '*' (line 1290)
        result_mul_235464 = python_operator(stypy.reporting.localization.Localization(__file__, 1290, 42), '*', subscript_call_result_235459, subscript_call_result_235463)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1290, 42), tuple_235455, result_mul_235464)
        # Adding element type (line 1290)
        int_235465 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1290, 63), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1290, 42), tuple_235455, int_235465)
        
        # Processing the call keyword arguments (line 1290)
        kwargs_235466 = {}
        # Getting the type of 'points' (line 1290)
        points_235453 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1290, 26), 'points', False)
        # Obtaining the member 'reshape' of a type (line 1290)
        reshape_235454 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1290, 26), points_235453, 'reshape')
        # Calling reshape(args, kwargs) (line 1290)
        reshape_call_result_235467 = invoke(stypy.reporting.localization.Localization(__file__, 1290, 26), reshape_235454, *[tuple_235455], **kwargs_235466)
        
        # Assigning a type to the variable 'flat_points' (line 1290)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1290, 12), 'flat_points', reshape_call_result_235467)
        
        # Assigning a Call to a Name (line 1291):
        
        # Assigning a Call to a Name (line 1291):
        
        # Call to reshape(...): (line 1291)
        # Processing the call arguments (line 1291)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1291)
        tuple_235470 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1291, 42), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1291)
        # Adding element type (line 1291)
        
        # Obtaining the type of the subscript
        int_235471 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1291, 48), 'int')
        # Getting the type of 'shape' (line 1291)
        shape_235472 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1291, 42), 'shape', False)
        # Obtaining the member '__getitem__' of a type (line 1291)
        getitem___235473 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1291, 42), shape_235472, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1291)
        subscript_call_result_235474 = invoke(stypy.reporting.localization.Localization(__file__, 1291, 42), getitem___235473, int_235471)
        
        
        # Obtaining the type of the subscript
        int_235475 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1291, 59), 'int')
        # Getting the type of 'shape' (line 1291)
        shape_235476 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1291, 53), 'shape', False)
        # Obtaining the member '__getitem__' of a type (line 1291)
        getitem___235477 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1291, 53), shape_235476, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1291)
        subscript_call_result_235478 = invoke(stypy.reporting.localization.Localization(__file__, 1291, 53), getitem___235477, int_235475)
        
        # Applying the binary operator '*' (line 1291)
        result_mul_235479 = python_operator(stypy.reporting.localization.Localization(__file__, 1291, 42), '*', subscript_call_result_235474, subscript_call_result_235478)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1291, 42), tuple_235470, result_mul_235479)
        # Adding element type (line 1291)
        int_235480 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1291, 63), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1291, 42), tuple_235470, int_235480)
        
        # Processing the call keyword arguments (line 1291)
        kwargs_235481 = {}
        # Getting the type of 'colors' (line 1291)
        colors_235468 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1291, 26), 'colors', False)
        # Obtaining the member 'reshape' of a type (line 1291)
        reshape_235469 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1291, 26), colors_235468, 'reshape')
        # Calling reshape(args, kwargs) (line 1291)
        reshape_call_result_235482 = invoke(stypy.reporting.localization.Localization(__file__, 1291, 26), reshape_235469, *[tuple_235470], **kwargs_235481)
        
        # Assigning a type to the variable 'flat_colors' (line 1291)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1291, 12), 'flat_colors', reshape_call_result_235482)
        
        # Assigning a BinOp to a Name (line 1292):
        
        # Assigning a BinOp to a Name (line 1292):
        
        # Call to min(...): (line 1292)
        # Processing the call arguments (line 1292)
        # Getting the type of 'flat_points' (line 1292)
        flat_points_235485 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1292, 32), 'flat_points', False)
        # Processing the call keyword arguments (line 1292)
        int_235486 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1292, 50), 'int')
        keyword_235487 = int_235486
        kwargs_235488 = {'axis': keyword_235487}
        # Getting the type of 'np' (line 1292)
        np_235483 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1292, 25), 'np', False)
        # Obtaining the member 'min' of a type (line 1292)
        min_235484 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1292, 25), np_235483, 'min')
        # Calling min(args, kwargs) (line 1292)
        min_call_result_235489 = invoke(stypy.reporting.localization.Localization(__file__, 1292, 25), min_235484, *[flat_points_235485], **kwargs_235488)
        
        int_235490 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1292, 56), 'int')
        int_235491 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1292, 61), 'int')
        # Applying the binary operator '<<' (line 1292)
        result_lshift_235492 = python_operator(stypy.reporting.localization.Localization(__file__, 1292, 56), '<<', int_235490, int_235491)
        
        # Applying the binary operator '-' (line 1292)
        result_sub_235493 = python_operator(stypy.reporting.localization.Localization(__file__, 1292, 25), '-', min_call_result_235489, result_lshift_235492)
        
        # Assigning a type to the variable 'points_min' (line 1292)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1292, 12), 'points_min', result_sub_235493)
        
        # Assigning a BinOp to a Name (line 1293):
        
        # Assigning a BinOp to a Name (line 1293):
        
        # Call to max(...): (line 1293)
        # Processing the call arguments (line 1293)
        # Getting the type of 'flat_points' (line 1293)
        flat_points_235496 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1293, 32), 'flat_points', False)
        # Processing the call keyword arguments (line 1293)
        int_235497 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1293, 50), 'int')
        keyword_235498 = int_235497
        kwargs_235499 = {'axis': keyword_235498}
        # Getting the type of 'np' (line 1293)
        np_235494 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1293, 25), 'np', False)
        # Obtaining the member 'max' of a type (line 1293)
        max_235495 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1293, 25), np_235494, 'max')
        # Calling max(args, kwargs) (line 1293)
        max_call_result_235500 = invoke(stypy.reporting.localization.Localization(__file__, 1293, 25), max_235495, *[flat_points_235496], **kwargs_235499)
        
        int_235501 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1293, 56), 'int')
        int_235502 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1293, 61), 'int')
        # Applying the binary operator '<<' (line 1293)
        result_lshift_235503 = python_operator(stypy.reporting.localization.Localization(__file__, 1293, 56), '<<', int_235501, int_235502)
        
        # Applying the binary operator '+' (line 1293)
        result_add_235504 = python_operator(stypy.reporting.localization.Localization(__file__, 1293, 25), '+', max_call_result_235500, result_lshift_235503)
        
        # Assigning a type to the variable 'points_max' (line 1293)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1293, 12), 'points_max', result_add_235504)
        
        # Assigning a BinOp to a Name (line 1294):
        
        # Assigning a BinOp to a Name (line 1294):
        
        # Call to float(...): (line 1294)
        # Processing the call arguments (line 1294)
        long_235506 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1294, 27), 'long')
        # Processing the call keyword arguments (line 1294)
        kwargs_235507 = {}
        # Getting the type of 'float' (line 1294)
        float_235505 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1294, 21), 'float', False)
        # Calling float(args, kwargs) (line 1294)
        float_call_result_235508 = invoke(stypy.reporting.localization.Localization(__file__, 1294, 21), float_235505, *[long_235506], **kwargs_235507)
        
        # Getting the type of 'points_max' (line 1294)
        points_max_235509 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1294, 42), 'points_max')
        # Getting the type of 'points_min' (line 1294)
        points_min_235510 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1294, 55), 'points_min')
        # Applying the binary operator '-' (line 1294)
        result_sub_235511 = python_operator(stypy.reporting.localization.Localization(__file__, 1294, 42), '-', points_max_235509, points_min_235510)
        
        # Applying the binary operator 'div' (line 1294)
        result_div_235512 = python_operator(stypy.reporting.localization.Localization(__file__, 1294, 21), 'div', float_call_result_235508, result_sub_235511)
        
        # Assigning a type to the variable 'factor' (line 1294)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1294, 12), 'factor', result_div_235512)
        
        # Call to beginStream(...): (line 1296)
        # Processing the call arguments (line 1296)
        # Getting the type of 'ob' (line 1297)
        ob_235515 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1297, 16), 'ob', False)
        # Obtaining the member 'id' of a type (line 1297)
        id_235516 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1297, 16), ob_235515, 'id')
        # Getting the type of 'None' (line 1297)
        None_235517 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1297, 23), 'None', False)
        
        # Obtaining an instance of the builtin type 'dict' (line 1298)
        dict_235518 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1298, 16), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 1298)
        # Adding element type (key, value) (line 1298)
        unicode_235519 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1298, 17), 'unicode', u'ShadingType')
        int_235520 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1298, 32), 'int')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1298, 16), dict_235518, (unicode_235519, int_235520))
        # Adding element type (key, value) (line 1298)
        unicode_235521 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1299, 17), 'unicode', u'BitsPerCoordinate')
        int_235522 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1299, 38), 'int')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1298, 16), dict_235518, (unicode_235521, int_235522))
        # Adding element type (key, value) (line 1298)
        unicode_235523 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1300, 17), 'unicode', u'BitsPerComponent')
        int_235524 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1300, 37), 'int')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1298, 16), dict_235518, (unicode_235523, int_235524))
        # Adding element type (key, value) (line 1298)
        unicode_235525 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1301, 17), 'unicode', u'BitsPerFlag')
        int_235526 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1301, 32), 'int')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1298, 16), dict_235518, (unicode_235525, int_235526))
        # Adding element type (key, value) (line 1298)
        unicode_235527 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1302, 17), 'unicode', u'ColorSpace')
        
        # Call to Name(...): (line 1302)
        # Processing the call arguments (line 1302)
        unicode_235529 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1302, 36), 'unicode', u'DeviceRGB')
        # Processing the call keyword arguments (line 1302)
        kwargs_235530 = {}
        # Getting the type of 'Name' (line 1302)
        Name_235528 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1302, 31), 'Name', False)
        # Calling Name(args, kwargs) (line 1302)
        Name_call_result_235531 = invoke(stypy.reporting.localization.Localization(__file__, 1302, 31), Name_235528, *[unicode_235529], **kwargs_235530)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1298, 16), dict_235518, (unicode_235527, Name_call_result_235531))
        # Adding element type (key, value) (line 1298)
        unicode_235532 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1303, 17), 'unicode', u'AntiAlias')
        # Getting the type of 'True' (line 1303)
        True_235533 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1303, 30), 'True', False)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1298, 16), dict_235518, (unicode_235532, True_235533))
        # Adding element type (key, value) (line 1298)
        unicode_235534 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1304, 17), 'unicode', u'Decode')
        
        # Obtaining an instance of the builtin type 'list' (line 1304)
        list_235535 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1304, 27), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1304)
        # Adding element type (line 1304)
        
        # Obtaining the type of the subscript
        int_235536 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1304, 39), 'int')
        # Getting the type of 'points_min' (line 1304)
        points_min_235537 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1304, 28), 'points_min', False)
        # Obtaining the member '__getitem__' of a type (line 1304)
        getitem___235538 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1304, 28), points_min_235537, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1304)
        subscript_call_result_235539 = invoke(stypy.reporting.localization.Localization(__file__, 1304, 28), getitem___235538, int_235536)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1304, 27), list_235535, subscript_call_result_235539)
        # Adding element type (line 1304)
        
        # Obtaining the type of the subscript
        int_235540 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1304, 54), 'int')
        # Getting the type of 'points_max' (line 1304)
        points_max_235541 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1304, 43), 'points_max', False)
        # Obtaining the member '__getitem__' of a type (line 1304)
        getitem___235542 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1304, 43), points_max_235541, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1304)
        subscript_call_result_235543 = invoke(stypy.reporting.localization.Localization(__file__, 1304, 43), getitem___235542, int_235540)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1304, 27), list_235535, subscript_call_result_235543)
        # Adding element type (line 1304)
        
        # Obtaining the type of the subscript
        int_235544 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1305, 39), 'int')
        # Getting the type of 'points_min' (line 1305)
        points_min_235545 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1305, 28), 'points_min', False)
        # Obtaining the member '__getitem__' of a type (line 1305)
        getitem___235546 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1305, 28), points_min_235545, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1305)
        subscript_call_result_235547 = invoke(stypy.reporting.localization.Localization(__file__, 1305, 28), getitem___235546, int_235544)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1304, 27), list_235535, subscript_call_result_235547)
        # Adding element type (line 1304)
        
        # Obtaining the type of the subscript
        int_235548 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1305, 54), 'int')
        # Getting the type of 'points_max' (line 1305)
        points_max_235549 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1305, 43), 'points_max', False)
        # Obtaining the member '__getitem__' of a type (line 1305)
        getitem___235550 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1305, 43), points_max_235549, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1305)
        subscript_call_result_235551 = invoke(stypy.reporting.localization.Localization(__file__, 1305, 43), getitem___235550, int_235548)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1304, 27), list_235535, subscript_call_result_235551)
        # Adding element type (line 1304)
        int_235552 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1306, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1304, 27), list_235535, int_235552)
        # Adding element type (line 1304)
        int_235553 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1306, 31), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1304, 27), list_235535, int_235553)
        # Adding element type (line 1304)
        int_235554 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1306, 34), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1304, 27), list_235535, int_235554)
        # Adding element type (line 1304)
        int_235555 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1306, 37), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1304, 27), list_235535, int_235555)
        # Adding element type (line 1304)
        int_235556 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1306, 40), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1304, 27), list_235535, int_235556)
        # Adding element type (line 1304)
        int_235557 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1306, 43), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1304, 27), list_235535, int_235557)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1298, 16), dict_235518, (unicode_235534, list_235535))
        
        # Processing the call keyword arguments (line 1296)
        kwargs_235558 = {}
        # Getting the type of 'self' (line 1296)
        self_235513 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1296, 12), 'self', False)
        # Obtaining the member 'beginStream' of a type (line 1296)
        beginStream_235514 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1296, 12), self_235513, 'beginStream')
        # Calling beginStream(args, kwargs) (line 1296)
        beginStream_call_result_235559 = invoke(stypy.reporting.localization.Localization(__file__, 1296, 12), beginStream_235514, *[id_235516, None_235517, dict_235518], **kwargs_235558)
        
        
        # Assigning a Call to a Name (line 1309):
        
        # Assigning a Call to a Name (line 1309):
        
        # Call to empty(...): (line 1309)
        # Processing the call arguments (line 1309)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1310)
        tuple_235562 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1310, 17), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1310)
        # Adding element type (line 1310)
        
        # Obtaining the type of the subscript
        int_235563 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1310, 23), 'int')
        # Getting the type of 'shape' (line 1310)
        shape_235564 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1310, 17), 'shape', False)
        # Obtaining the member '__getitem__' of a type (line 1310)
        getitem___235565 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1310, 17), shape_235564, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1310)
        subscript_call_result_235566 = invoke(stypy.reporting.localization.Localization(__file__, 1310, 17), getitem___235565, int_235563)
        
        
        # Obtaining the type of the subscript
        int_235567 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1310, 34), 'int')
        # Getting the type of 'shape' (line 1310)
        shape_235568 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1310, 28), 'shape', False)
        # Obtaining the member '__getitem__' of a type (line 1310)
        getitem___235569 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1310, 28), shape_235568, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1310)
        subscript_call_result_235570 = invoke(stypy.reporting.localization.Localization(__file__, 1310, 28), getitem___235569, int_235567)
        
        # Applying the binary operator '*' (line 1310)
        result_mul_235571 = python_operator(stypy.reporting.localization.Localization(__file__, 1310, 17), '*', subscript_call_result_235566, subscript_call_result_235570)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1310, 17), tuple_235562, result_mul_235571)
        
        # Processing the call keyword arguments (line 1309)
        
        # Obtaining an instance of the builtin type 'list' (line 1311)
        list_235572 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1311, 22), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1311)
        # Adding element type (line 1311)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1311)
        tuple_235573 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1311, 24), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1311)
        # Adding element type (line 1311)
        
        # Call to str(...): (line 1311)
        # Processing the call arguments (line 1311)
        unicode_235575 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1311, 28), 'unicode', u'flags')
        # Processing the call keyword arguments (line 1311)
        kwargs_235576 = {}
        # Getting the type of 'str' (line 1311)
        str_235574 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1311, 24), 'str', False)
        # Calling str(args, kwargs) (line 1311)
        str_call_result_235577 = invoke(stypy.reporting.localization.Localization(__file__, 1311, 24), str_235574, *[unicode_235575], **kwargs_235576)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1311, 24), tuple_235573, str_call_result_235577)
        # Adding element type (line 1311)
        
        # Call to str(...): (line 1311)
        # Processing the call arguments (line 1311)
        unicode_235579 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1311, 42), 'unicode', u'u1')
        # Processing the call keyword arguments (line 1311)
        kwargs_235580 = {}
        # Getting the type of 'str' (line 1311)
        str_235578 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1311, 38), 'str', False)
        # Calling str(args, kwargs) (line 1311)
        str_call_result_235581 = invoke(stypy.reporting.localization.Localization(__file__, 1311, 38), str_235578, *[unicode_235579], **kwargs_235580)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1311, 24), tuple_235573, str_call_result_235581)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1311, 22), list_235572, tuple_235573)
        # Adding element type (line 1311)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1312)
        tuple_235582 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1312, 24), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1312)
        # Adding element type (line 1312)
        
        # Call to str(...): (line 1312)
        # Processing the call arguments (line 1312)
        unicode_235584 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1312, 28), 'unicode', u'points')
        # Processing the call keyword arguments (line 1312)
        kwargs_235585 = {}
        # Getting the type of 'str' (line 1312)
        str_235583 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1312, 24), 'str', False)
        # Calling str(args, kwargs) (line 1312)
        str_call_result_235586 = invoke(stypy.reporting.localization.Localization(__file__, 1312, 24), str_235583, *[unicode_235584], **kwargs_235585)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1312, 24), tuple_235582, str_call_result_235586)
        # Adding element type (line 1312)
        
        # Call to str(...): (line 1312)
        # Processing the call arguments (line 1312)
        unicode_235588 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1312, 43), 'unicode', u'>u4')
        # Processing the call keyword arguments (line 1312)
        kwargs_235589 = {}
        # Getting the type of 'str' (line 1312)
        str_235587 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1312, 39), 'str', False)
        # Calling str(args, kwargs) (line 1312)
        str_call_result_235590 = invoke(stypy.reporting.localization.Localization(__file__, 1312, 39), str_235587, *[unicode_235588], **kwargs_235589)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1312, 24), tuple_235582, str_call_result_235590)
        # Adding element type (line 1312)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1312)
        tuple_235591 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1312, 52), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1312)
        # Adding element type (line 1312)
        int_235592 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1312, 52), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1312, 52), tuple_235591, int_235592)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1312, 24), tuple_235582, tuple_235591)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1311, 22), list_235572, tuple_235582)
        # Adding element type (line 1311)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1313)
        tuple_235593 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1313, 24), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1313)
        # Adding element type (line 1313)
        
        # Call to str(...): (line 1313)
        # Processing the call arguments (line 1313)
        unicode_235595 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1313, 28), 'unicode', u'colors')
        # Processing the call keyword arguments (line 1313)
        kwargs_235596 = {}
        # Getting the type of 'str' (line 1313)
        str_235594 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1313, 24), 'str', False)
        # Calling str(args, kwargs) (line 1313)
        str_call_result_235597 = invoke(stypy.reporting.localization.Localization(__file__, 1313, 24), str_235594, *[unicode_235595], **kwargs_235596)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1313, 24), tuple_235593, str_call_result_235597)
        # Adding element type (line 1313)
        
        # Call to str(...): (line 1313)
        # Processing the call arguments (line 1313)
        unicode_235599 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1313, 43), 'unicode', u'u1')
        # Processing the call keyword arguments (line 1313)
        kwargs_235600 = {}
        # Getting the type of 'str' (line 1313)
        str_235598 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1313, 39), 'str', False)
        # Calling str(args, kwargs) (line 1313)
        str_call_result_235601 = invoke(stypy.reporting.localization.Localization(__file__, 1313, 39), str_235598, *[unicode_235599], **kwargs_235600)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1313, 24), tuple_235593, str_call_result_235601)
        # Adding element type (line 1313)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1313)
        tuple_235602 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1313, 51), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1313)
        # Adding element type (line 1313)
        int_235603 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1313, 51), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1313, 51), tuple_235602, int_235603)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1313, 24), tuple_235593, tuple_235602)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1311, 22), list_235572, tuple_235593)
        
        keyword_235604 = list_235572
        kwargs_235605 = {'dtype': keyword_235604}
        # Getting the type of 'np' (line 1309)
        np_235560 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1309, 24), 'np', False)
        # Obtaining the member 'empty' of a type (line 1309)
        empty_235561 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1309, 24), np_235560, 'empty')
        # Calling empty(args, kwargs) (line 1309)
        empty_call_result_235606 = invoke(stypy.reporting.localization.Localization(__file__, 1309, 24), empty_235561, *[tuple_235562], **kwargs_235605)
        
        # Assigning a type to the variable 'streamarr' (line 1309)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1309, 12), 'streamarr', empty_call_result_235606)
        
        # Assigning a Num to a Subscript (line 1314):
        
        # Assigning a Num to a Subscript (line 1314):
        int_235607 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1314, 33), 'int')
        # Getting the type of 'streamarr' (line 1314)
        streamarr_235608 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1314, 12), 'streamarr')
        unicode_235609 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1314, 22), 'unicode', u'flags')
        # Storing an element on a container (line 1314)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1314, 12), streamarr_235608, (unicode_235609, int_235607))
        
        # Assigning a BinOp to a Subscript (line 1315):
        
        # Assigning a BinOp to a Subscript (line 1315):
        # Getting the type of 'flat_points' (line 1315)
        flat_points_235610 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1315, 35), 'flat_points')
        # Getting the type of 'points_min' (line 1315)
        points_min_235611 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1315, 49), 'points_min')
        # Applying the binary operator '-' (line 1315)
        result_sub_235612 = python_operator(stypy.reporting.localization.Localization(__file__, 1315, 35), '-', flat_points_235610, points_min_235611)
        
        # Getting the type of 'factor' (line 1315)
        factor_235613 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1315, 63), 'factor')
        # Applying the binary operator '*' (line 1315)
        result_mul_235614 = python_operator(stypy.reporting.localization.Localization(__file__, 1315, 34), '*', result_sub_235612, factor_235613)
        
        # Getting the type of 'streamarr' (line 1315)
        streamarr_235615 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1315, 12), 'streamarr')
        unicode_235616 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1315, 22), 'unicode', u'points')
        # Storing an element on a container (line 1315)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1315, 12), streamarr_235615, (unicode_235616, result_mul_235614))
        
        # Assigning a BinOp to a Subscript (line 1316):
        
        # Assigning a BinOp to a Subscript (line 1316):
        
        # Obtaining the type of the subscript
        slice_235617 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1316, 34), None, None, None)
        int_235618 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1316, 50), 'int')
        slice_235619 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1316, 34), None, int_235618, None)
        # Getting the type of 'flat_colors' (line 1316)
        flat_colors_235620 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1316, 34), 'flat_colors')
        # Obtaining the member '__getitem__' of a type (line 1316)
        getitem___235621 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1316, 34), flat_colors_235620, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1316)
        subscript_call_result_235622 = invoke(stypy.reporting.localization.Localization(__file__, 1316, 34), getitem___235621, (slice_235617, slice_235619))
        
        float_235623 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1316, 55), 'float')
        # Applying the binary operator '*' (line 1316)
        result_mul_235624 = python_operator(stypy.reporting.localization.Localization(__file__, 1316, 34), '*', subscript_call_result_235622, float_235623)
        
        # Getting the type of 'streamarr' (line 1316)
        streamarr_235625 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1316, 12), 'streamarr')
        unicode_235626 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1316, 22), 'unicode', u'colors')
        # Storing an element on a container (line 1316)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1316, 12), streamarr_235625, (unicode_235626, result_mul_235624))
        
        # Call to write(...): (line 1318)
        # Processing the call arguments (line 1318)
        
        # Call to tostring(...): (line 1318)
        # Processing the call keyword arguments (line 1318)
        kwargs_235631 = {}
        # Getting the type of 'streamarr' (line 1318)
        streamarr_235629 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1318, 23), 'streamarr', False)
        # Obtaining the member 'tostring' of a type (line 1318)
        tostring_235630 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1318, 23), streamarr_235629, 'tostring')
        # Calling tostring(args, kwargs) (line 1318)
        tostring_call_result_235632 = invoke(stypy.reporting.localization.Localization(__file__, 1318, 23), tostring_235630, *[], **kwargs_235631)
        
        # Processing the call keyword arguments (line 1318)
        kwargs_235633 = {}
        # Getting the type of 'self' (line 1318)
        self_235627 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1318, 12), 'self', False)
        # Obtaining the member 'write' of a type (line 1318)
        write_235628 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1318, 12), self_235627, 'write')
        # Calling write(args, kwargs) (line 1318)
        write_call_result_235634 = invoke(stypy.reporting.localization.Localization(__file__, 1318, 12), write_235628, *[tostring_call_result_235632], **kwargs_235633)
        
        
        # Call to endStream(...): (line 1319)
        # Processing the call keyword arguments (line 1319)
        kwargs_235637 = {}
        # Getting the type of 'self' (line 1319)
        self_235635 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1319, 12), 'self', False)
        # Obtaining the member 'endStream' of a type (line 1319)
        endStream_235636 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1319, 12), self_235635, 'endStream')
        # Calling endStream(args, kwargs) (line 1319)
        endStream_call_result_235638 = invoke(stypy.reporting.localization.Localization(__file__, 1319, 12), endStream_235636, *[], **kwargs_235637)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to writeObject(...): (line 1320)
        # Processing the call arguments (line 1320)
        # Getting the type of 'self' (line 1320)
        self_235641 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1320, 25), 'self', False)
        # Obtaining the member 'gouraudObject' of a type (line 1320)
        gouraudObject_235642 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1320, 25), self_235641, 'gouraudObject')
        # Getting the type of 'gouraudDict' (line 1320)
        gouraudDict_235643 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1320, 45), 'gouraudDict', False)
        # Processing the call keyword arguments (line 1320)
        kwargs_235644 = {}
        # Getting the type of 'self' (line 1320)
        self_235639 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1320, 8), 'self', False)
        # Obtaining the member 'writeObject' of a type (line 1320)
        writeObject_235640 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1320, 8), self_235639, 'writeObject')
        # Calling writeObject(args, kwargs) (line 1320)
        writeObject_call_result_235645 = invoke(stypy.reporting.localization.Localization(__file__, 1320, 8), writeObject_235640, *[gouraudObject_235642, gouraudDict_235643], **kwargs_235644)
        
        
        # ################# End of 'writeGouraudTriangles(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'writeGouraudTriangles' in the type store
        # Getting the type of 'stypy_return_type' (line 1284)
        stypy_return_type_235646 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1284, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_235646)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'writeGouraudTriangles'
        return stypy_return_type_235646


    @norecursion
    def imageObject(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'imageObject'
        module_type_store = module_type_store.open_function_context('imageObject', 1322, 4, False)
        # Assigning a type to the variable 'self' (line 1323)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1323, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        PdfFile.imageObject.__dict__.__setitem__('stypy_localization', localization)
        PdfFile.imageObject.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        PdfFile.imageObject.__dict__.__setitem__('stypy_type_store', module_type_store)
        PdfFile.imageObject.__dict__.__setitem__('stypy_function_name', 'PdfFile.imageObject')
        PdfFile.imageObject.__dict__.__setitem__('stypy_param_names_list', ['image'])
        PdfFile.imageObject.__dict__.__setitem__('stypy_varargs_param_name', None)
        PdfFile.imageObject.__dict__.__setitem__('stypy_kwargs_param_name', None)
        PdfFile.imageObject.__dict__.__setitem__('stypy_call_defaults', defaults)
        PdfFile.imageObject.__dict__.__setitem__('stypy_call_varargs', varargs)
        PdfFile.imageObject.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        PdfFile.imageObject.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'PdfFile.imageObject', ['image'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'imageObject', localization, ['image'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'imageObject(...)' code ##################

        unicode_235647 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1323, 8), 'unicode', u'Return name of an image XObject representing the given image.')
        
        # Assigning a Call to a Name (line 1325):
        
        # Assigning a Call to a Name (line 1325):
        
        # Call to get(...): (line 1325)
        # Processing the call arguments (line 1325)
        
        # Call to id(...): (line 1325)
        # Processing the call arguments (line 1325)
        # Getting the type of 'image' (line 1325)
        image_235652 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1325, 36), 'image', False)
        # Processing the call keyword arguments (line 1325)
        kwargs_235653 = {}
        # Getting the type of 'id' (line 1325)
        id_235651 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1325, 33), 'id', False)
        # Calling id(args, kwargs) (line 1325)
        id_call_result_235654 = invoke(stypy.reporting.localization.Localization(__file__, 1325, 33), id_235651, *[image_235652], **kwargs_235653)
        
        # Getting the type of 'None' (line 1325)
        None_235655 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1325, 44), 'None', False)
        # Processing the call keyword arguments (line 1325)
        kwargs_235656 = {}
        # Getting the type of 'self' (line 1325)
        self_235648 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1325, 16), 'self', False)
        # Obtaining the member '_images' of a type (line 1325)
        _images_235649 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1325, 16), self_235648, '_images')
        # Obtaining the member 'get' of a type (line 1325)
        get_235650 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1325, 16), _images_235649, 'get')
        # Calling get(args, kwargs) (line 1325)
        get_call_result_235657 = invoke(stypy.reporting.localization.Localization(__file__, 1325, 16), get_235650, *[id_call_result_235654, None_235655], **kwargs_235656)
        
        # Assigning a type to the variable 'entry' (line 1325)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1325, 8), 'entry', get_call_result_235657)
        
        # Type idiom detected: calculating its left and rigth part (line 1326)
        # Getting the type of 'entry' (line 1326)
        entry_235658 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1326, 8), 'entry')
        # Getting the type of 'None' (line 1326)
        None_235659 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1326, 24), 'None')
        
        (may_be_235660, more_types_in_union_235661) = may_not_be_none(entry_235658, None_235659)

        if may_be_235660:

            if more_types_in_union_235661:
                # Runtime conditional SSA (line 1326)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Obtaining the type of the subscript
            int_235662 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1327, 25), 'int')
            # Getting the type of 'entry' (line 1327)
            entry_235663 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1327, 19), 'entry')
            # Obtaining the member '__getitem__' of a type (line 1327)
            getitem___235664 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1327, 19), entry_235663, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 1327)
            subscript_call_result_235665 = invoke(stypy.reporting.localization.Localization(__file__, 1327, 19), getitem___235664, int_235662)
            
            # Assigning a type to the variable 'stypy_return_type' (line 1327)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1327, 12), 'stypy_return_type', subscript_call_result_235665)

            if more_types_in_union_235661:
                # SSA join for if statement (line 1326)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Call to a Name (line 1329):
        
        # Assigning a Call to a Name (line 1329):
        
        # Call to Name(...): (line 1329)
        # Processing the call arguments (line 1329)
        unicode_235667 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1329, 20), 'unicode', u'I%d')
        # Getting the type of 'self' (line 1329)
        self_235668 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1329, 28), 'self', False)
        # Obtaining the member 'nextImage' of a type (line 1329)
        nextImage_235669 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1329, 28), self_235668, 'nextImage')
        # Applying the binary operator '%' (line 1329)
        result_mod_235670 = python_operator(stypy.reporting.localization.Localization(__file__, 1329, 20), '%', unicode_235667, nextImage_235669)
        
        # Processing the call keyword arguments (line 1329)
        kwargs_235671 = {}
        # Getting the type of 'Name' (line 1329)
        Name_235666 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1329, 15), 'Name', False)
        # Calling Name(args, kwargs) (line 1329)
        Name_call_result_235672 = invoke(stypy.reporting.localization.Localization(__file__, 1329, 15), Name_235666, *[result_mod_235670], **kwargs_235671)
        
        # Assigning a type to the variable 'name' (line 1329)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1329, 8), 'name', Name_call_result_235672)
        
        # Assigning a Call to a Name (line 1330):
        
        # Assigning a Call to a Name (line 1330):
        
        # Call to reserveObject(...): (line 1330)
        # Processing the call arguments (line 1330)
        unicode_235675 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1330, 32), 'unicode', u'image %d')
        # Getting the type of 'self' (line 1330)
        self_235676 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1330, 45), 'self', False)
        # Obtaining the member 'nextImage' of a type (line 1330)
        nextImage_235677 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1330, 45), self_235676, 'nextImage')
        # Applying the binary operator '%' (line 1330)
        result_mod_235678 = python_operator(stypy.reporting.localization.Localization(__file__, 1330, 32), '%', unicode_235675, nextImage_235677)
        
        # Processing the call keyword arguments (line 1330)
        kwargs_235679 = {}
        # Getting the type of 'self' (line 1330)
        self_235673 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1330, 13), 'self', False)
        # Obtaining the member 'reserveObject' of a type (line 1330)
        reserveObject_235674 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1330, 13), self_235673, 'reserveObject')
        # Calling reserveObject(args, kwargs) (line 1330)
        reserveObject_call_result_235680 = invoke(stypy.reporting.localization.Localization(__file__, 1330, 13), reserveObject_235674, *[result_mod_235678], **kwargs_235679)
        
        # Assigning a type to the variable 'ob' (line 1330)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1330, 8), 'ob', reserveObject_call_result_235680)
        
        # Getting the type of 'self' (line 1331)
        self_235681 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1331, 8), 'self')
        # Obtaining the member 'nextImage' of a type (line 1331)
        nextImage_235682 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1331, 8), self_235681, 'nextImage')
        int_235683 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1331, 26), 'int')
        # Applying the binary operator '+=' (line 1331)
        result_iadd_235684 = python_operator(stypy.reporting.localization.Localization(__file__, 1331, 8), '+=', nextImage_235682, int_235683)
        # Getting the type of 'self' (line 1331)
        self_235685 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1331, 8), 'self')
        # Setting the type of the member 'nextImage' of a type (line 1331)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1331, 8), self_235685, 'nextImage', result_iadd_235684)
        
        
        # Assigning a Tuple to a Subscript (line 1332):
        
        # Assigning a Tuple to a Subscript (line 1332):
        
        # Obtaining an instance of the builtin type 'tuple' (line 1332)
        tuple_235686 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1332, 35), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1332)
        # Adding element type (line 1332)
        # Getting the type of 'image' (line 1332)
        image_235687 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1332, 35), 'image')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1332, 35), tuple_235686, image_235687)
        # Adding element type (line 1332)
        # Getting the type of 'name' (line 1332)
        name_235688 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1332, 42), 'name')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1332, 35), tuple_235686, name_235688)
        # Adding element type (line 1332)
        # Getting the type of 'ob' (line 1332)
        ob_235689 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1332, 48), 'ob')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1332, 35), tuple_235686, ob_235689)
        
        # Getting the type of 'self' (line 1332)
        self_235690 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1332, 8), 'self')
        # Obtaining the member '_images' of a type (line 1332)
        _images_235691 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1332, 8), self_235690, '_images')
        
        # Call to id(...): (line 1332)
        # Processing the call arguments (line 1332)
        # Getting the type of 'image' (line 1332)
        image_235693 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1332, 24), 'image', False)
        # Processing the call keyword arguments (line 1332)
        kwargs_235694 = {}
        # Getting the type of 'id' (line 1332)
        id_235692 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1332, 21), 'id', False)
        # Calling id(args, kwargs) (line 1332)
        id_call_result_235695 = invoke(stypy.reporting.localization.Localization(__file__, 1332, 21), id_235692, *[image_235693], **kwargs_235694)
        
        # Storing an element on a container (line 1332)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1332, 8), _images_235691, (id_call_result_235695, tuple_235686))
        # Getting the type of 'name' (line 1333)
        name_235696 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1333, 15), 'name')
        # Assigning a type to the variable 'stypy_return_type' (line 1333)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1333, 8), 'stypy_return_type', name_235696)
        
        # ################# End of 'imageObject(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'imageObject' in the type store
        # Getting the type of 'stypy_return_type' (line 1322)
        stypy_return_type_235697 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1322, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_235697)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'imageObject'
        return stypy_return_type_235697


    @norecursion
    def _unpack(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_unpack'
        module_type_store = module_type_store.open_function_context('_unpack', 1335, 4, False)
        # Assigning a type to the variable 'self' (line 1336)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1336, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        PdfFile._unpack.__dict__.__setitem__('stypy_localization', localization)
        PdfFile._unpack.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        PdfFile._unpack.__dict__.__setitem__('stypy_type_store', module_type_store)
        PdfFile._unpack.__dict__.__setitem__('stypy_function_name', 'PdfFile._unpack')
        PdfFile._unpack.__dict__.__setitem__('stypy_param_names_list', ['im'])
        PdfFile._unpack.__dict__.__setitem__('stypy_varargs_param_name', None)
        PdfFile._unpack.__dict__.__setitem__('stypy_kwargs_param_name', None)
        PdfFile._unpack.__dict__.__setitem__('stypy_call_defaults', defaults)
        PdfFile._unpack.__dict__.__setitem__('stypy_call_varargs', varargs)
        PdfFile._unpack.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        PdfFile._unpack.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'PdfFile._unpack', ['im'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_unpack', localization, ['im'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_unpack(...)' code ##################

        unicode_235698 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1340, (-1)), 'unicode', u'\n        Unpack the image object im into height, width, data, alpha,\n        where data and alpha are HxWx3 (RGB) or HxWx1 (grayscale or alpha)\n        arrays, except alpha is None if the image is fully opaque.\n        ')
        
        # Assigning a Subscript to a Tuple (line 1341):
        
        # Assigning a Subscript to a Name (line 1341):
        
        # Obtaining the type of the subscript
        int_235699 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1341, 8), 'int')
        
        # Obtaining the type of the subscript
        int_235700 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1341, 25), 'int')
        slice_235701 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1341, 15), None, int_235700, None)
        # Getting the type of 'im' (line 1341)
        im_235702 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1341, 15), 'im')
        # Obtaining the member 'shape' of a type (line 1341)
        shape_235703 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1341, 15), im_235702, 'shape')
        # Obtaining the member '__getitem__' of a type (line 1341)
        getitem___235704 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1341, 15), shape_235703, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1341)
        subscript_call_result_235705 = invoke(stypy.reporting.localization.Localization(__file__, 1341, 15), getitem___235704, slice_235701)
        
        # Obtaining the member '__getitem__' of a type (line 1341)
        getitem___235706 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1341, 8), subscript_call_result_235705, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1341)
        subscript_call_result_235707 = invoke(stypy.reporting.localization.Localization(__file__, 1341, 8), getitem___235706, int_235699)
        
        # Assigning a type to the variable 'tuple_var_assignment_231667' (line 1341)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1341, 8), 'tuple_var_assignment_231667', subscript_call_result_235707)
        
        # Assigning a Subscript to a Name (line 1341):
        
        # Obtaining the type of the subscript
        int_235708 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1341, 8), 'int')
        
        # Obtaining the type of the subscript
        int_235709 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1341, 25), 'int')
        slice_235710 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1341, 15), None, int_235709, None)
        # Getting the type of 'im' (line 1341)
        im_235711 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1341, 15), 'im')
        # Obtaining the member 'shape' of a type (line 1341)
        shape_235712 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1341, 15), im_235711, 'shape')
        # Obtaining the member '__getitem__' of a type (line 1341)
        getitem___235713 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1341, 15), shape_235712, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1341)
        subscript_call_result_235714 = invoke(stypy.reporting.localization.Localization(__file__, 1341, 15), getitem___235713, slice_235710)
        
        # Obtaining the member '__getitem__' of a type (line 1341)
        getitem___235715 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1341, 8), subscript_call_result_235714, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1341)
        subscript_call_result_235716 = invoke(stypy.reporting.localization.Localization(__file__, 1341, 8), getitem___235715, int_235708)
        
        # Assigning a type to the variable 'tuple_var_assignment_231668' (line 1341)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1341, 8), 'tuple_var_assignment_231668', subscript_call_result_235716)
        
        # Assigning a Name to a Name (line 1341):
        # Getting the type of 'tuple_var_assignment_231667' (line 1341)
        tuple_var_assignment_231667_235717 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1341, 8), 'tuple_var_assignment_231667')
        # Assigning a type to the variable 'h' (line 1341)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1341, 8), 'h', tuple_var_assignment_231667_235717)
        
        # Assigning a Name to a Name (line 1341):
        # Getting the type of 'tuple_var_assignment_231668' (line 1341)
        tuple_var_assignment_231668_235718 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1341, 8), 'tuple_var_assignment_231668')
        # Assigning a type to the variable 'w' (line 1341)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1341, 11), 'w', tuple_var_assignment_231668_235718)
        
        # Assigning a Subscript to a Name (line 1342):
        
        # Assigning a Subscript to a Name (line 1342):
        
        # Obtaining the type of the subscript
        int_235719 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1342, 18), 'int')
        slice_235720 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1342, 13), None, None, int_235719)
        # Getting the type of 'im' (line 1342)
        im_235721 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1342, 13), 'im')
        # Obtaining the member '__getitem__' of a type (line 1342)
        getitem___235722 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1342, 13), im_235721, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1342)
        subscript_call_result_235723 = invoke(stypy.reporting.localization.Localization(__file__, 1342, 13), getitem___235722, slice_235720)
        
        # Assigning a type to the variable 'im' (line 1342)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1342, 8), 'im', subscript_call_result_235723)
        
        
        # Getting the type of 'im' (line 1343)
        im_235724 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1343, 11), 'im')
        # Obtaining the member 'ndim' of a type (line 1343)
        ndim_235725 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1343, 11), im_235724, 'ndim')
        int_235726 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1343, 22), 'int')
        # Applying the binary operator '==' (line 1343)
        result_eq_235727 = python_operator(stypy.reporting.localization.Localization(__file__, 1343, 11), '==', ndim_235725, int_235726)
        
        # Testing the type of an if condition (line 1343)
        if_condition_235728 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1343, 8), result_eq_235727)
        # Assigning a type to the variable 'if_condition_235728' (line 1343)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1343, 8), 'if_condition_235728', if_condition_235728)
        # SSA begins for if statement (line 1343)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Obtaining an instance of the builtin type 'tuple' (line 1344)
        tuple_235729 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1344, 19), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1344)
        # Adding element type (line 1344)
        # Getting the type of 'h' (line 1344)
        h_235730 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1344, 19), 'h')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1344, 19), tuple_235729, h_235730)
        # Adding element type (line 1344)
        # Getting the type of 'w' (line 1344)
        w_235731 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1344, 22), 'w')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1344, 19), tuple_235729, w_235731)
        # Adding element type (line 1344)
        # Getting the type of 'im' (line 1344)
        im_235732 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1344, 25), 'im')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1344, 19), tuple_235729, im_235732)
        # Adding element type (line 1344)
        # Getting the type of 'None' (line 1344)
        None_235733 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1344, 29), 'None')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1344, 19), tuple_235729, None_235733)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1344)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1344, 12), 'stypy_return_type', tuple_235729)
        # SSA branch for the else part of an if statement (line 1343)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Subscript to a Name (line 1346):
        
        # Assigning a Subscript to a Name (line 1346):
        
        # Obtaining the type of the subscript
        slice_235734 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1346, 18), None, None, None)
        slice_235735 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1346, 18), None, None, None)
        int_235736 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1346, 28), 'int')
        slice_235737 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1346, 18), None, int_235736, None)
        # Getting the type of 'im' (line 1346)
        im_235738 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1346, 18), 'im')
        # Obtaining the member '__getitem__' of a type (line 1346)
        getitem___235739 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1346, 18), im_235738, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1346)
        subscript_call_result_235740 = invoke(stypy.reporting.localization.Localization(__file__, 1346, 18), getitem___235739, (slice_235734, slice_235735, slice_235737))
        
        # Assigning a type to the variable 'rgb' (line 1346)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1346, 12), 'rgb', subscript_call_result_235740)
        
        # Assigning a Call to a Name (line 1347):
        
        # Assigning a Call to a Name (line 1347):
        
        # Call to array(...): (line 1347)
        # Processing the call arguments (line 1347)
        # Getting the type of 'rgb' (line 1347)
        rgb_235743 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1347, 27), 'rgb', False)
        # Processing the call keyword arguments (line 1347)
        unicode_235744 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1347, 38), 'unicode', u'C')
        keyword_235745 = unicode_235744
        kwargs_235746 = {'order': keyword_235745}
        # Getting the type of 'np' (line 1347)
        np_235741 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1347, 18), 'np', False)
        # Obtaining the member 'array' of a type (line 1347)
        array_235742 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1347, 18), np_235741, 'array')
        # Calling array(args, kwargs) (line 1347)
        array_call_result_235747 = invoke(stypy.reporting.localization.Localization(__file__, 1347, 18), array_235742, *[rgb_235743], **kwargs_235746)
        
        # Assigning a type to the variable 'rgb' (line 1347)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1347, 12), 'rgb', array_call_result_235747)
        
        
        
        # Obtaining the type of the subscript
        int_235748 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1349, 24), 'int')
        # Getting the type of 'im' (line 1349)
        im_235749 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1349, 15), 'im')
        # Obtaining the member 'shape' of a type (line 1349)
        shape_235750 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1349, 15), im_235749, 'shape')
        # Obtaining the member '__getitem__' of a type (line 1349)
        getitem___235751 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1349, 15), shape_235750, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1349)
        subscript_call_result_235752 = invoke(stypy.reporting.localization.Localization(__file__, 1349, 15), getitem___235751, int_235748)
        
        int_235753 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1349, 30), 'int')
        # Applying the binary operator '==' (line 1349)
        result_eq_235754 = python_operator(stypy.reporting.localization.Localization(__file__, 1349, 15), '==', subscript_call_result_235752, int_235753)
        
        # Testing the type of an if condition (line 1349)
        if_condition_235755 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1349, 12), result_eq_235754)
        # Assigning a type to the variable 'if_condition_235755' (line 1349)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1349, 12), 'if_condition_235755', if_condition_235755)
        # SSA begins for if statement (line 1349)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Subscript to a Name (line 1350):
        
        # Assigning a Subscript to a Name (line 1350):
        
        # Obtaining the type of the subscript
        Ellipsis_235756 = Ellipsis
        # Getting the type of 'None' (line 1350)
        None_235757 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1350, 41), 'None')
        
        # Obtaining the type of the subscript
        slice_235758 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1350, 24), None, None, None)
        slice_235759 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1350, 24), None, None, None)
        int_235760 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1350, 33), 'int')
        # Getting the type of 'im' (line 1350)
        im_235761 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1350, 24), 'im')
        # Obtaining the member '__getitem__' of a type (line 1350)
        getitem___235762 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1350, 24), im_235761, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1350)
        subscript_call_result_235763 = invoke(stypy.reporting.localization.Localization(__file__, 1350, 24), getitem___235762, (slice_235758, slice_235759, int_235760))
        
        # Obtaining the member '__getitem__' of a type (line 1350)
        getitem___235764 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1350, 24), subscript_call_result_235763, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1350)
        subscript_call_result_235765 = invoke(stypy.reporting.localization.Localization(__file__, 1350, 24), getitem___235764, (Ellipsis_235756, None_235757))
        
        # Assigning a type to the variable 'alpha' (line 1350)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1350, 16), 'alpha', subscript_call_result_235765)
        
        
        # Call to all(...): (line 1351)
        # Processing the call arguments (line 1351)
        
        # Getting the type of 'alpha' (line 1351)
        alpha_235768 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1351, 26), 'alpha', False)
        int_235769 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1351, 35), 'int')
        # Applying the binary operator '==' (line 1351)
        result_eq_235770 = python_operator(stypy.reporting.localization.Localization(__file__, 1351, 26), '==', alpha_235768, int_235769)
        
        # Processing the call keyword arguments (line 1351)
        kwargs_235771 = {}
        # Getting the type of 'np' (line 1351)
        np_235766 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1351, 19), 'np', False)
        # Obtaining the member 'all' of a type (line 1351)
        all_235767 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1351, 19), np_235766, 'all')
        # Calling all(args, kwargs) (line 1351)
        all_call_result_235772 = invoke(stypy.reporting.localization.Localization(__file__, 1351, 19), all_235767, *[result_eq_235770], **kwargs_235771)
        
        # Testing the type of an if condition (line 1351)
        if_condition_235773 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1351, 16), all_call_result_235772)
        # Assigning a type to the variable 'if_condition_235773' (line 1351)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1351, 16), 'if_condition_235773', if_condition_235773)
        # SSA begins for if statement (line 1351)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Name to a Name (line 1352):
        
        # Assigning a Name to a Name (line 1352):
        # Getting the type of 'None' (line 1352)
        None_235774 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1352, 28), 'None')
        # Assigning a type to the variable 'alpha' (line 1352)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1352, 20), 'alpha', None_235774)
        # SSA branch for the else part of an if statement (line 1351)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Call to a Name (line 1354):
        
        # Assigning a Call to a Name (line 1354):
        
        # Call to array(...): (line 1354)
        # Processing the call arguments (line 1354)
        # Getting the type of 'alpha' (line 1354)
        alpha_235777 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1354, 37), 'alpha', False)
        # Processing the call keyword arguments (line 1354)
        unicode_235778 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1354, 50), 'unicode', u'C')
        keyword_235779 = unicode_235778
        kwargs_235780 = {'order': keyword_235779}
        # Getting the type of 'np' (line 1354)
        np_235775 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1354, 28), 'np', False)
        # Obtaining the member 'array' of a type (line 1354)
        array_235776 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1354, 28), np_235775, 'array')
        # Calling array(args, kwargs) (line 1354)
        array_call_result_235781 = invoke(stypy.reporting.localization.Localization(__file__, 1354, 28), array_235776, *[alpha_235777], **kwargs_235780)
        
        # Assigning a type to the variable 'alpha' (line 1354)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1354, 20), 'alpha', array_call_result_235781)
        # SSA join for if statement (line 1351)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA branch for the else part of an if statement (line 1349)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Name to a Name (line 1356):
        
        # Assigning a Name to a Name (line 1356):
        # Getting the type of 'None' (line 1356)
        None_235782 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1356, 24), 'None')
        # Assigning a type to the variable 'alpha' (line 1356)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1356, 16), 'alpha', None_235782)
        # SSA join for if statement (line 1349)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 1357)
        tuple_235783 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1357, 19), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1357)
        # Adding element type (line 1357)
        # Getting the type of 'h' (line 1357)
        h_235784 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1357, 19), 'h')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1357, 19), tuple_235783, h_235784)
        # Adding element type (line 1357)
        # Getting the type of 'w' (line 1357)
        w_235785 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1357, 22), 'w')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1357, 19), tuple_235783, w_235785)
        # Adding element type (line 1357)
        # Getting the type of 'rgb' (line 1357)
        rgb_235786 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1357, 25), 'rgb')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1357, 19), tuple_235783, rgb_235786)
        # Adding element type (line 1357)
        # Getting the type of 'alpha' (line 1357)
        alpha_235787 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1357, 30), 'alpha')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1357, 19), tuple_235783, alpha_235787)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1357)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1357, 12), 'stypy_return_type', tuple_235783)
        # SSA join for if statement (line 1343)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of '_unpack(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_unpack' in the type store
        # Getting the type of 'stypy_return_type' (line 1335)
        stypy_return_type_235788 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1335, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_235788)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_unpack'
        return stypy_return_type_235788


    @norecursion
    def _writePng(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_writePng'
        module_type_store = module_type_store.open_function_context('_writePng', 1359, 4, False)
        # Assigning a type to the variable 'self' (line 1360)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1360, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        PdfFile._writePng.__dict__.__setitem__('stypy_localization', localization)
        PdfFile._writePng.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        PdfFile._writePng.__dict__.__setitem__('stypy_type_store', module_type_store)
        PdfFile._writePng.__dict__.__setitem__('stypy_function_name', 'PdfFile._writePng')
        PdfFile._writePng.__dict__.__setitem__('stypy_param_names_list', ['data'])
        PdfFile._writePng.__dict__.__setitem__('stypy_varargs_param_name', None)
        PdfFile._writePng.__dict__.__setitem__('stypy_kwargs_param_name', None)
        PdfFile._writePng.__dict__.__setitem__('stypy_call_defaults', defaults)
        PdfFile._writePng.__dict__.__setitem__('stypy_call_varargs', varargs)
        PdfFile._writePng.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        PdfFile._writePng.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'PdfFile._writePng', ['data'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_writePng', localization, ['data'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_writePng(...)' code ##################

        unicode_235789 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1363, (-1)), 'unicode', u'\n        Write the image *data* into the pdf file using png\n        predictors with Flate compression.\n        ')
        
        # Assigning a Call to a Name (line 1365):
        
        # Assigning a Call to a Name (line 1365):
        
        # Call to BytesIO(...): (line 1365)
        # Processing the call keyword arguments (line 1365)
        kwargs_235791 = {}
        # Getting the type of 'BytesIO' (line 1365)
        BytesIO_235790 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1365, 17), 'BytesIO', False)
        # Calling BytesIO(args, kwargs) (line 1365)
        BytesIO_call_result_235792 = invoke(stypy.reporting.localization.Localization(__file__, 1365, 17), BytesIO_235790, *[], **kwargs_235791)
        
        # Assigning a type to the variable 'buffer' (line 1365)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1365, 8), 'buffer', BytesIO_call_result_235792)
        
        # Call to write_png(...): (line 1366)
        # Processing the call arguments (line 1366)
        # Getting the type of 'data' (line 1366)
        data_235795 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1366, 23), 'data', False)
        # Getting the type of 'buffer' (line 1366)
        buffer_235796 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1366, 29), 'buffer', False)
        # Processing the call keyword arguments (line 1366)
        kwargs_235797 = {}
        # Getting the type of '_png' (line 1366)
        _png_235793 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1366, 8), '_png', False)
        # Obtaining the member 'write_png' of a type (line 1366)
        write_png_235794 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1366, 8), _png_235793, 'write_png')
        # Calling write_png(args, kwargs) (line 1366)
        write_png_call_result_235798 = invoke(stypy.reporting.localization.Localization(__file__, 1366, 8), write_png_235794, *[data_235795, buffer_235796], **kwargs_235797)
        
        
        # Call to seek(...): (line 1367)
        # Processing the call arguments (line 1367)
        int_235801 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1367, 20), 'int')
        # Processing the call keyword arguments (line 1367)
        kwargs_235802 = {}
        # Getting the type of 'buffer' (line 1367)
        buffer_235799 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1367, 8), 'buffer', False)
        # Obtaining the member 'seek' of a type (line 1367)
        seek_235800 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1367, 8), buffer_235799, 'seek')
        # Calling seek(args, kwargs) (line 1367)
        seek_call_result_235803 = invoke(stypy.reporting.localization.Localization(__file__, 1367, 8), seek_235800, *[int_235801], **kwargs_235802)
        
        
        # Assigning a Num to a Name (line 1368):
        
        # Assigning a Num to a Name (line 1368):
        int_235804 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1368, 18), 'int')
        # Assigning a type to the variable 'written' (line 1368)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1368, 8), 'written', int_235804)
        
        # Assigning a Call to a Name (line 1369):
        
        # Assigning a Call to a Name (line 1369):
        
        # Call to bytearray(...): (line 1369)
        # Processing the call arguments (line 1369)
        int_235806 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1369, 27), 'int')
        # Processing the call keyword arguments (line 1369)
        kwargs_235807 = {}
        # Getting the type of 'bytearray' (line 1369)
        bytearray_235805 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1369, 17), 'bytearray', False)
        # Calling bytearray(args, kwargs) (line 1369)
        bytearray_call_result_235808 = invoke(stypy.reporting.localization.Localization(__file__, 1369, 17), bytearray_235805, *[int_235806], **kwargs_235807)
        
        # Assigning a type to the variable 'header' (line 1369)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1369, 8), 'header', bytearray_call_result_235808)
        
        # Getting the type of 'True' (line 1370)
        True_235809 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1370, 14), 'True')
        # Testing the type of an if condition (line 1370)
        is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1370, 8), True_235809)
        # SSA begins for while statement (line 1370)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'while loop')
        
        # Assigning a Call to a Name (line 1371):
        
        # Assigning a Call to a Name (line 1371):
        
        # Call to readinto(...): (line 1371)
        # Processing the call arguments (line 1371)
        # Getting the type of 'header' (line 1371)
        header_235812 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1371, 32), 'header', False)
        # Processing the call keyword arguments (line 1371)
        kwargs_235813 = {}
        # Getting the type of 'buffer' (line 1371)
        buffer_235810 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1371, 16), 'buffer', False)
        # Obtaining the member 'readinto' of a type (line 1371)
        readinto_235811 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1371, 16), buffer_235810, 'readinto')
        # Calling readinto(args, kwargs) (line 1371)
        readinto_call_result_235814 = invoke(stypy.reporting.localization.Localization(__file__, 1371, 16), readinto_235811, *[header_235812], **kwargs_235813)
        
        # Assigning a type to the variable 'n' (line 1371)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1371, 12), 'n', readinto_call_result_235814)
        # Evaluating assert statement condition
        
        # Getting the type of 'n' (line 1372)
        n_235815 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1372, 19), 'n')
        int_235816 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1372, 24), 'int')
        # Applying the binary operator '==' (line 1372)
        result_eq_235817 = python_operator(stypy.reporting.localization.Localization(__file__, 1372, 19), '==', n_235815, int_235816)
        
        
        # Assigning a Call to a Tuple (line 1373):
        
        # Assigning a Call to a Name:
        
        # Call to unpack(...): (line 1373)
        # Processing the call arguments (line 1373)
        str_235820 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1373, 41), 'str', '!L4s')
        
        # Call to bytes(...): (line 1373)
        # Processing the call arguments (line 1373)
        # Getting the type of 'header' (line 1373)
        header_235822 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1373, 56), 'header', False)
        # Processing the call keyword arguments (line 1373)
        kwargs_235823 = {}
        # Getting the type of 'bytes' (line 1373)
        bytes_235821 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1373, 50), 'bytes', False)
        # Calling bytes(args, kwargs) (line 1373)
        bytes_call_result_235824 = invoke(stypy.reporting.localization.Localization(__file__, 1373, 50), bytes_235821, *[header_235822], **kwargs_235823)
        
        # Processing the call keyword arguments (line 1373)
        kwargs_235825 = {}
        # Getting the type of 'struct' (line 1373)
        struct_235818 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1373, 27), 'struct', False)
        # Obtaining the member 'unpack' of a type (line 1373)
        unpack_235819 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1373, 27), struct_235818, 'unpack')
        # Calling unpack(args, kwargs) (line 1373)
        unpack_call_result_235826 = invoke(stypy.reporting.localization.Localization(__file__, 1373, 27), unpack_235819, *[str_235820, bytes_call_result_235824], **kwargs_235825)
        
        # Assigning a type to the variable 'call_assignment_231669' (line 1373)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1373, 12), 'call_assignment_231669', unpack_call_result_235826)
        
        # Assigning a Call to a Name (line 1373):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_235829 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1373, 12), 'int')
        # Processing the call keyword arguments
        kwargs_235830 = {}
        # Getting the type of 'call_assignment_231669' (line 1373)
        call_assignment_231669_235827 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1373, 12), 'call_assignment_231669', False)
        # Obtaining the member '__getitem__' of a type (line 1373)
        getitem___235828 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1373, 12), call_assignment_231669_235827, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_235831 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___235828, *[int_235829], **kwargs_235830)
        
        # Assigning a type to the variable 'call_assignment_231670' (line 1373)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1373, 12), 'call_assignment_231670', getitem___call_result_235831)
        
        # Assigning a Name to a Name (line 1373):
        # Getting the type of 'call_assignment_231670' (line 1373)
        call_assignment_231670_235832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1373, 12), 'call_assignment_231670')
        # Assigning a type to the variable 'length' (line 1373)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1373, 12), 'length', call_assignment_231670_235832)
        
        # Assigning a Call to a Name (line 1373):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_235835 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1373, 12), 'int')
        # Processing the call keyword arguments
        kwargs_235836 = {}
        # Getting the type of 'call_assignment_231669' (line 1373)
        call_assignment_231669_235833 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1373, 12), 'call_assignment_231669', False)
        # Obtaining the member '__getitem__' of a type (line 1373)
        getitem___235834 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1373, 12), call_assignment_231669_235833, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_235837 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___235834, *[int_235835], **kwargs_235836)
        
        # Assigning a type to the variable 'call_assignment_231671' (line 1373)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1373, 12), 'call_assignment_231671', getitem___call_result_235837)
        
        # Assigning a Name to a Name (line 1373):
        # Getting the type of 'call_assignment_231671' (line 1373)
        call_assignment_231671_235838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1373, 12), 'call_assignment_231671')
        # Assigning a type to the variable 'type' (line 1373)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1373, 20), 'type', call_assignment_231671_235838)
        
        
        # Getting the type of 'type' (line 1374)
        type_235839 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1374, 15), 'type')
        str_235840 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1374, 23), 'str', 'IDAT')
        # Applying the binary operator '==' (line 1374)
        result_eq_235841 = python_operator(stypy.reporting.localization.Localization(__file__, 1374, 15), '==', type_235839, str_235840)
        
        # Testing the type of an if condition (line 1374)
        if_condition_235842 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1374, 12), result_eq_235841)
        # Assigning a type to the variable 'if_condition_235842' (line 1374)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1374, 12), 'if_condition_235842', if_condition_235842)
        # SSA begins for if statement (line 1374)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 1375):
        
        # Assigning a Call to a Name (line 1375):
        
        # Call to bytearray(...): (line 1375)
        # Processing the call arguments (line 1375)
        # Getting the type of 'length' (line 1375)
        length_235844 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1375, 33), 'length', False)
        # Processing the call keyword arguments (line 1375)
        kwargs_235845 = {}
        # Getting the type of 'bytearray' (line 1375)
        bytearray_235843 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1375, 23), 'bytearray', False)
        # Calling bytearray(args, kwargs) (line 1375)
        bytearray_call_result_235846 = invoke(stypy.reporting.localization.Localization(__file__, 1375, 23), bytearray_235843, *[length_235844], **kwargs_235845)
        
        # Assigning a type to the variable 'data' (line 1375)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1375, 16), 'data', bytearray_call_result_235846)
        
        # Assigning a Call to a Name (line 1376):
        
        # Assigning a Call to a Name (line 1376):
        
        # Call to readinto(...): (line 1376)
        # Processing the call arguments (line 1376)
        # Getting the type of 'data' (line 1376)
        data_235849 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1376, 36), 'data', False)
        # Processing the call keyword arguments (line 1376)
        kwargs_235850 = {}
        # Getting the type of 'buffer' (line 1376)
        buffer_235847 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1376, 20), 'buffer', False)
        # Obtaining the member 'readinto' of a type (line 1376)
        readinto_235848 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1376, 20), buffer_235847, 'readinto')
        # Calling readinto(args, kwargs) (line 1376)
        readinto_call_result_235851 = invoke(stypy.reporting.localization.Localization(__file__, 1376, 20), readinto_235848, *[data_235849], **kwargs_235850)
        
        # Assigning a type to the variable 'n' (line 1376)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1376, 16), 'n', readinto_call_result_235851)
        # Evaluating assert statement condition
        
        # Getting the type of 'n' (line 1377)
        n_235852 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1377, 23), 'n')
        # Getting the type of 'length' (line 1377)
        length_235853 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1377, 28), 'length')
        # Applying the binary operator '==' (line 1377)
        result_eq_235854 = python_operator(stypy.reporting.localization.Localization(__file__, 1377, 23), '==', n_235852, length_235853)
        
        
        # Call to write(...): (line 1378)
        # Processing the call arguments (line 1378)
        
        # Call to bytes(...): (line 1378)
        # Processing the call arguments (line 1378)
        # Getting the type of 'data' (line 1378)
        data_235859 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1378, 47), 'data', False)
        # Processing the call keyword arguments (line 1378)
        kwargs_235860 = {}
        # Getting the type of 'bytes' (line 1378)
        bytes_235858 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1378, 41), 'bytes', False)
        # Calling bytes(args, kwargs) (line 1378)
        bytes_call_result_235861 = invoke(stypy.reporting.localization.Localization(__file__, 1378, 41), bytes_235858, *[data_235859], **kwargs_235860)
        
        # Processing the call keyword arguments (line 1378)
        kwargs_235862 = {}
        # Getting the type of 'self' (line 1378)
        self_235855 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1378, 16), 'self', False)
        # Obtaining the member 'currentstream' of a type (line 1378)
        currentstream_235856 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1378, 16), self_235855, 'currentstream')
        # Obtaining the member 'write' of a type (line 1378)
        write_235857 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1378, 16), currentstream_235856, 'write')
        # Calling write(args, kwargs) (line 1378)
        write_call_result_235863 = invoke(stypy.reporting.localization.Localization(__file__, 1378, 16), write_235857, *[bytes_call_result_235861], **kwargs_235862)
        
        
        # Getting the type of 'written' (line 1379)
        written_235864 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1379, 16), 'written')
        # Getting the type of 'n' (line 1379)
        n_235865 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1379, 27), 'n')
        # Applying the binary operator '+=' (line 1379)
        result_iadd_235866 = python_operator(stypy.reporting.localization.Localization(__file__, 1379, 16), '+=', written_235864, n_235865)
        # Assigning a type to the variable 'written' (line 1379)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1379, 16), 'written', result_iadd_235866)
        
        # SSA branch for the else part of an if statement (line 1374)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'type' (line 1380)
        type_235867 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1380, 17), 'type')
        str_235868 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1380, 25), 'str', 'IEND')
        # Applying the binary operator '==' (line 1380)
        result_eq_235869 = python_operator(stypy.reporting.localization.Localization(__file__, 1380, 17), '==', type_235867, str_235868)
        
        # Testing the type of an if condition (line 1380)
        if_condition_235870 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1380, 17), result_eq_235869)
        # Assigning a type to the variable 'if_condition_235870' (line 1380)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1380, 17), 'if_condition_235870', if_condition_235870)
        # SSA begins for if statement (line 1380)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        # SSA branch for the else part of an if statement (line 1380)
        module_type_store.open_ssa_branch('else')
        
        # Call to seek(...): (line 1383)
        # Processing the call arguments (line 1383)
        # Getting the type of 'length' (line 1383)
        length_235873 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1383, 28), 'length', False)
        int_235874 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1383, 36), 'int')
        # Processing the call keyword arguments (line 1383)
        kwargs_235875 = {}
        # Getting the type of 'buffer' (line 1383)
        buffer_235871 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1383, 16), 'buffer', False)
        # Obtaining the member 'seek' of a type (line 1383)
        seek_235872 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1383, 16), buffer_235871, 'seek')
        # Calling seek(args, kwargs) (line 1383)
        seek_call_result_235876 = invoke(stypy.reporting.localization.Localization(__file__, 1383, 16), seek_235872, *[length_235873, int_235874], **kwargs_235875)
        
        # SSA join for if statement (line 1380)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 1374)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to seek(...): (line 1384)
        # Processing the call arguments (line 1384)
        int_235879 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1384, 24), 'int')
        int_235880 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1384, 27), 'int')
        # Processing the call keyword arguments (line 1384)
        kwargs_235881 = {}
        # Getting the type of 'buffer' (line 1384)
        buffer_235877 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1384, 12), 'buffer', False)
        # Obtaining the member 'seek' of a type (line 1384)
        seek_235878 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1384, 12), buffer_235877, 'seek')
        # Calling seek(args, kwargs) (line 1384)
        seek_call_result_235882 = invoke(stypy.reporting.localization.Localization(__file__, 1384, 12), seek_235878, *[int_235879, int_235880], **kwargs_235881)
        
        # SSA join for while statement (line 1370)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of '_writePng(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_writePng' in the type store
        # Getting the type of 'stypy_return_type' (line 1359)
        stypy_return_type_235883 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1359, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_235883)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_writePng'
        return stypy_return_type_235883


    @norecursion
    def _writeImg(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'None' (line 1386)
        None_235884 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1386, 66), 'None')
        defaults = [None_235884]
        # Create a new context for function '_writeImg'
        module_type_store = module_type_store.open_function_context('_writeImg', 1386, 4, False)
        # Assigning a type to the variable 'self' (line 1387)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1387, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        PdfFile._writeImg.__dict__.__setitem__('stypy_localization', localization)
        PdfFile._writeImg.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        PdfFile._writeImg.__dict__.__setitem__('stypy_type_store', module_type_store)
        PdfFile._writeImg.__dict__.__setitem__('stypy_function_name', 'PdfFile._writeImg')
        PdfFile._writeImg.__dict__.__setitem__('stypy_param_names_list', ['data', 'height', 'width', 'grayscale', 'id', 'smask'])
        PdfFile._writeImg.__dict__.__setitem__('stypy_varargs_param_name', None)
        PdfFile._writeImg.__dict__.__setitem__('stypy_kwargs_param_name', None)
        PdfFile._writeImg.__dict__.__setitem__('stypy_call_defaults', defaults)
        PdfFile._writeImg.__dict__.__setitem__('stypy_call_varargs', varargs)
        PdfFile._writeImg.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        PdfFile._writeImg.__dict__.__setitem__('stypy_declared_arg_number', 7)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'PdfFile._writeImg', ['data', 'height', 'width', 'grayscale', 'id', 'smask'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_writeImg', localization, ['data', 'height', 'width', 'grayscale', 'id', 'smask'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_writeImg(...)' code ##################

        unicode_235885 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1392, (-1)), 'unicode', u'\n        Write the image *data* of size *height* x *width*, as grayscale\n        if *grayscale* is true and RGB otherwise, as pdf object *id*\n        and with the soft mask (alpha channel) *smask*, which should be\n        either None or a *height* x *width* x 1 array.\n        ')
        
        # Assigning a Dict to a Name (line 1394):
        
        # Assigning a Dict to a Name (line 1394):
        
        # Obtaining an instance of the builtin type 'dict' (line 1394)
        dict_235886 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1394, 14), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 1394)
        # Adding element type (key, value) (line 1394)
        unicode_235887 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1394, 15), 'unicode', u'Type')
        
        # Call to Name(...): (line 1394)
        # Processing the call arguments (line 1394)
        unicode_235889 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1394, 40), 'unicode', u'XObject')
        # Processing the call keyword arguments (line 1394)
        kwargs_235890 = {}
        # Getting the type of 'Name' (line 1394)
        Name_235888 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1394, 35), 'Name', False)
        # Calling Name(args, kwargs) (line 1394)
        Name_call_result_235891 = invoke(stypy.reporting.localization.Localization(__file__, 1394, 35), Name_235888, *[unicode_235889], **kwargs_235890)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1394, 14), dict_235886, (unicode_235887, Name_call_result_235891))
        # Adding element type (key, value) (line 1394)
        unicode_235892 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1395, 15), 'unicode', u'Subtype')
        
        # Call to Name(...): (line 1395)
        # Processing the call arguments (line 1395)
        unicode_235894 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1395, 40), 'unicode', u'Image')
        # Processing the call keyword arguments (line 1395)
        kwargs_235895 = {}
        # Getting the type of 'Name' (line 1395)
        Name_235893 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1395, 35), 'Name', False)
        # Calling Name(args, kwargs) (line 1395)
        Name_call_result_235896 = invoke(stypy.reporting.localization.Localization(__file__, 1395, 35), Name_235893, *[unicode_235894], **kwargs_235895)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1394, 14), dict_235886, (unicode_235892, Name_call_result_235896))
        # Adding element type (key, value) (line 1394)
        unicode_235897 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1396, 15), 'unicode', u'Width')
        # Getting the type of 'width' (line 1396)
        width_235898 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1396, 35), 'width')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1394, 14), dict_235886, (unicode_235897, width_235898))
        # Adding element type (key, value) (line 1394)
        unicode_235899 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1397, 15), 'unicode', u'Height')
        # Getting the type of 'height' (line 1397)
        height_235900 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1397, 35), 'height')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1394, 14), dict_235886, (unicode_235899, height_235900))
        # Adding element type (key, value) (line 1394)
        unicode_235901 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1398, 15), 'unicode', u'ColorSpace')
        
        # Call to Name(...): (line 1398)
        # Processing the call arguments (line 1398)
        
        # Getting the type of 'grayscale' (line 1398)
        grayscale_235903 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1398, 56), 'grayscale', False)
        # Testing the type of an if expression (line 1398)
        is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1398, 40), grayscale_235903)
        # SSA begins for if expression (line 1398)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if expression')
        unicode_235904 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1398, 40), 'unicode', u'DeviceGray')
        # SSA branch for the else part of an if expression (line 1398)
        module_type_store.open_ssa_branch('if expression else')
        unicode_235905 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1399, 45), 'unicode', u'DeviceRGB')
        # SSA join for if expression (line 1398)
        module_type_store = module_type_store.join_ssa_context()
        if_exp_235906 = union_type.UnionType.add(unicode_235904, unicode_235905)
        
        # Processing the call keyword arguments (line 1398)
        kwargs_235907 = {}
        # Getting the type of 'Name' (line 1398)
        Name_235902 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1398, 35), 'Name', False)
        # Calling Name(args, kwargs) (line 1398)
        Name_call_result_235908 = invoke(stypy.reporting.localization.Localization(__file__, 1398, 35), Name_235902, *[if_exp_235906], **kwargs_235907)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1394, 14), dict_235886, (unicode_235901, Name_call_result_235908))
        # Adding element type (key, value) (line 1394)
        unicode_235909 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1400, 15), 'unicode', u'BitsPerComponent')
        int_235910 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1400, 35), 'int')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1394, 14), dict_235886, (unicode_235909, int_235910))
        
        # Assigning a type to the variable 'obj' (line 1394)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1394, 8), 'obj', dict_235886)
        
        # Getting the type of 'smask' (line 1401)
        smask_235911 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1401, 11), 'smask')
        # Testing the type of an if condition (line 1401)
        if_condition_235912 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1401, 8), smask_235911)
        # Assigning a type to the variable 'if_condition_235912' (line 1401)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1401, 8), 'if_condition_235912', if_condition_235912)
        # SSA begins for if statement (line 1401)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Name to a Subscript (line 1402):
        
        # Assigning a Name to a Subscript (line 1402):
        # Getting the type of 'smask' (line 1402)
        smask_235913 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1402, 27), 'smask')
        # Getting the type of 'obj' (line 1402)
        obj_235914 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1402, 12), 'obj')
        unicode_235915 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1402, 16), 'unicode', u'SMask')
        # Storing an element on a container (line 1402)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1402, 12), obj_235914, (unicode_235915, smask_235913))
        # SSA join for if statement (line 1401)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Obtaining the type of the subscript
        unicode_235916 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1403, 20), 'unicode', u'pdf.compression')
        # Getting the type of 'rcParams' (line 1403)
        rcParams_235917 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1403, 11), 'rcParams')
        # Obtaining the member '__getitem__' of a type (line 1403)
        getitem___235918 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1403, 11), rcParams_235917, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1403)
        subscript_call_result_235919 = invoke(stypy.reporting.localization.Localization(__file__, 1403, 11), getitem___235918, unicode_235916)
        
        # Testing the type of an if condition (line 1403)
        if_condition_235920 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1403, 8), subscript_call_result_235919)
        # Assigning a type to the variable 'if_condition_235920' (line 1403)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1403, 8), 'if_condition_235920', if_condition_235920)
        # SSA begins for if statement (line 1403)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Dict to a Name (line 1404):
        
        # Assigning a Dict to a Name (line 1404):
        
        # Obtaining an instance of the builtin type 'dict' (line 1404)
        dict_235921 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1404, 18), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 1404)
        # Adding element type (key, value) (line 1404)
        unicode_235922 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1404, 19), 'unicode', u'Predictor')
        int_235923 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1404, 32), 'int')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1404, 18), dict_235921, (unicode_235922, int_235923))
        # Adding element type (key, value) (line 1404)
        unicode_235924 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1405, 19), 'unicode', u'Colors')
        
        # Getting the type of 'grayscale' (line 1405)
        grayscale_235925 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1405, 37), 'grayscale')
        # Testing the type of an if expression (line 1405)
        is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1405, 32), grayscale_235925)
        # SSA begins for if expression (line 1405)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if expression')
        int_235926 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1405, 32), 'int')
        # SSA branch for the else part of an if expression (line 1405)
        module_type_store.open_ssa_branch('if expression else')
        int_235927 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1405, 52), 'int')
        # SSA join for if expression (line 1405)
        module_type_store = module_type_store.join_ssa_context()
        if_exp_235928 = union_type.UnionType.add(int_235926, int_235927)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1404, 18), dict_235921, (unicode_235924, if_exp_235928))
        # Adding element type (key, value) (line 1404)
        unicode_235929 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1406, 19), 'unicode', u'Columns')
        # Getting the type of 'width' (line 1406)
        width_235930 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1406, 32), 'width')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1404, 18), dict_235921, (unicode_235929, width_235930))
        
        # Assigning a type to the variable 'png' (line 1404)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1404, 12), 'png', dict_235921)
        # SSA branch for the else part of an if statement (line 1403)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Name to a Name (line 1408):
        
        # Assigning a Name to a Name (line 1408):
        # Getting the type of 'None' (line 1408)
        None_235931 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1408, 18), 'None')
        # Assigning a type to the variable 'png' (line 1408)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1408, 12), 'png', None_235931)
        # SSA join for if statement (line 1403)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to beginStream(...): (line 1409)
        # Processing the call arguments (line 1409)
        # Getting the type of 'id' (line 1410)
        id_235934 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1410, 12), 'id', False)
        
        # Call to reserveObject(...): (line 1411)
        # Processing the call arguments (line 1411)
        unicode_235937 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1411, 31), 'unicode', u'length of image stream')
        # Processing the call keyword arguments (line 1411)
        kwargs_235938 = {}
        # Getting the type of 'self' (line 1411)
        self_235935 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1411, 12), 'self', False)
        # Obtaining the member 'reserveObject' of a type (line 1411)
        reserveObject_235936 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1411, 12), self_235935, 'reserveObject')
        # Calling reserveObject(args, kwargs) (line 1411)
        reserveObject_call_result_235939 = invoke(stypy.reporting.localization.Localization(__file__, 1411, 12), reserveObject_235936, *[unicode_235937], **kwargs_235938)
        
        # Getting the type of 'obj' (line 1412)
        obj_235940 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1412, 12), 'obj', False)
        # Processing the call keyword arguments (line 1409)
        # Getting the type of 'png' (line 1413)
        png_235941 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1413, 16), 'png', False)
        keyword_235942 = png_235941
        kwargs_235943 = {'png': keyword_235942}
        # Getting the type of 'self' (line 1409)
        self_235932 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1409, 8), 'self', False)
        # Obtaining the member 'beginStream' of a type (line 1409)
        beginStream_235933 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1409, 8), self_235932, 'beginStream')
        # Calling beginStream(args, kwargs) (line 1409)
        beginStream_call_result_235944 = invoke(stypy.reporting.localization.Localization(__file__, 1409, 8), beginStream_235933, *[id_235934, reserveObject_call_result_235939, obj_235940], **kwargs_235943)
        
        
        # Getting the type of 'png' (line 1415)
        png_235945 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1415, 11), 'png')
        # Testing the type of an if condition (line 1415)
        if_condition_235946 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1415, 8), png_235945)
        # Assigning a type to the variable 'if_condition_235946' (line 1415)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1415, 8), 'if_condition_235946', if_condition_235946)
        # SSA begins for if statement (line 1415)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to _writePng(...): (line 1416)
        # Processing the call arguments (line 1416)
        # Getting the type of 'data' (line 1416)
        data_235949 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1416, 27), 'data', False)
        # Processing the call keyword arguments (line 1416)
        kwargs_235950 = {}
        # Getting the type of 'self' (line 1416)
        self_235947 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1416, 12), 'self', False)
        # Obtaining the member '_writePng' of a type (line 1416)
        _writePng_235948 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1416, 12), self_235947, '_writePng')
        # Calling _writePng(args, kwargs) (line 1416)
        _writePng_call_result_235951 = invoke(stypy.reporting.localization.Localization(__file__, 1416, 12), _writePng_235948, *[data_235949], **kwargs_235950)
        
        # SSA branch for the else part of an if statement (line 1415)
        module_type_store.open_ssa_branch('else')
        
        # Call to write(...): (line 1418)
        # Processing the call arguments (line 1418)
        
        # Call to tostring(...): (line 1418)
        # Processing the call keyword arguments (line 1418)
        kwargs_235957 = {}
        # Getting the type of 'data' (line 1418)
        data_235955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1418, 37), 'data', False)
        # Obtaining the member 'tostring' of a type (line 1418)
        tostring_235956 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1418, 37), data_235955, 'tostring')
        # Calling tostring(args, kwargs) (line 1418)
        tostring_call_result_235958 = invoke(stypy.reporting.localization.Localization(__file__, 1418, 37), tostring_235956, *[], **kwargs_235957)
        
        # Processing the call keyword arguments (line 1418)
        kwargs_235959 = {}
        # Getting the type of 'self' (line 1418)
        self_235952 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1418, 12), 'self', False)
        # Obtaining the member 'currentstream' of a type (line 1418)
        currentstream_235953 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1418, 12), self_235952, 'currentstream')
        # Obtaining the member 'write' of a type (line 1418)
        write_235954 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1418, 12), currentstream_235953, 'write')
        # Calling write(args, kwargs) (line 1418)
        write_call_result_235960 = invoke(stypy.reporting.localization.Localization(__file__, 1418, 12), write_235954, *[tostring_call_result_235958], **kwargs_235959)
        
        # SSA join for if statement (line 1415)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to endStream(...): (line 1419)
        # Processing the call keyword arguments (line 1419)
        kwargs_235963 = {}
        # Getting the type of 'self' (line 1419)
        self_235961 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1419, 8), 'self', False)
        # Obtaining the member 'endStream' of a type (line 1419)
        endStream_235962 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1419, 8), self_235961, 'endStream')
        # Calling endStream(args, kwargs) (line 1419)
        endStream_call_result_235964 = invoke(stypy.reporting.localization.Localization(__file__, 1419, 8), endStream_235962, *[], **kwargs_235963)
        
        
        # ################# End of '_writeImg(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_writeImg' in the type store
        # Getting the type of 'stypy_return_type' (line 1386)
        stypy_return_type_235965 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1386, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_235965)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_writeImg'
        return stypy_return_type_235965


    @norecursion
    def writeImages(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'writeImages'
        module_type_store = module_type_store.open_function_context('writeImages', 1421, 4, False)
        # Assigning a type to the variable 'self' (line 1422)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1422, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        PdfFile.writeImages.__dict__.__setitem__('stypy_localization', localization)
        PdfFile.writeImages.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        PdfFile.writeImages.__dict__.__setitem__('stypy_type_store', module_type_store)
        PdfFile.writeImages.__dict__.__setitem__('stypy_function_name', 'PdfFile.writeImages')
        PdfFile.writeImages.__dict__.__setitem__('stypy_param_names_list', [])
        PdfFile.writeImages.__dict__.__setitem__('stypy_varargs_param_name', None)
        PdfFile.writeImages.__dict__.__setitem__('stypy_kwargs_param_name', None)
        PdfFile.writeImages.__dict__.__setitem__('stypy_call_defaults', defaults)
        PdfFile.writeImages.__dict__.__setitem__('stypy_call_varargs', varargs)
        PdfFile.writeImages.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        PdfFile.writeImages.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'PdfFile.writeImages', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'writeImages', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'writeImages(...)' code ##################

        
        
        # Call to itervalues(...): (line 1422)
        # Processing the call arguments (line 1422)
        # Getting the type of 'self' (line 1422)
        self_235968 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1422, 44), 'self', False)
        # Obtaining the member '_images' of a type (line 1422)
        _images_235969 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1422, 44), self_235968, '_images')
        # Processing the call keyword arguments (line 1422)
        kwargs_235970 = {}
        # Getting the type of 'six' (line 1422)
        six_235966 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1422, 29), 'six', False)
        # Obtaining the member 'itervalues' of a type (line 1422)
        itervalues_235967 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1422, 29), six_235966, 'itervalues')
        # Calling itervalues(args, kwargs) (line 1422)
        itervalues_call_result_235971 = invoke(stypy.reporting.localization.Localization(__file__, 1422, 29), itervalues_235967, *[_images_235969], **kwargs_235970)
        
        # Testing the type of a for loop iterable (line 1422)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1422, 8), itervalues_call_result_235971)
        # Getting the type of the for loop variable (line 1422)
        for_loop_var_235972 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1422, 8), itervalues_call_result_235971)
        # Assigning a type to the variable 'img' (line 1422)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1422, 8), 'img', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1422, 8), for_loop_var_235972))
        # Assigning a type to the variable 'name' (line 1422)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1422, 8), 'name', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1422, 8), for_loop_var_235972))
        # Assigning a type to the variable 'ob' (line 1422)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1422, 8), 'ob', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1422, 8), for_loop_var_235972))
        # SSA begins for a for statement (line 1422)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Tuple (line 1423):
        
        # Assigning a Call to a Name:
        
        # Call to _unpack(...): (line 1423)
        # Processing the call arguments (line 1423)
        # Getting the type of 'img' (line 1423)
        img_235975 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1423, 54), 'img', False)
        # Processing the call keyword arguments (line 1423)
        kwargs_235976 = {}
        # Getting the type of 'self' (line 1423)
        self_235973 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1423, 41), 'self', False)
        # Obtaining the member '_unpack' of a type (line 1423)
        _unpack_235974 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1423, 41), self_235973, '_unpack')
        # Calling _unpack(args, kwargs) (line 1423)
        _unpack_call_result_235977 = invoke(stypy.reporting.localization.Localization(__file__, 1423, 41), _unpack_235974, *[img_235975], **kwargs_235976)
        
        # Assigning a type to the variable 'call_assignment_231672' (line 1423)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1423, 12), 'call_assignment_231672', _unpack_call_result_235977)
        
        # Assigning a Call to a Name (line 1423):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_235980 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1423, 12), 'int')
        # Processing the call keyword arguments
        kwargs_235981 = {}
        # Getting the type of 'call_assignment_231672' (line 1423)
        call_assignment_231672_235978 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1423, 12), 'call_assignment_231672', False)
        # Obtaining the member '__getitem__' of a type (line 1423)
        getitem___235979 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1423, 12), call_assignment_231672_235978, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_235982 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___235979, *[int_235980], **kwargs_235981)
        
        # Assigning a type to the variable 'call_assignment_231673' (line 1423)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1423, 12), 'call_assignment_231673', getitem___call_result_235982)
        
        # Assigning a Name to a Name (line 1423):
        # Getting the type of 'call_assignment_231673' (line 1423)
        call_assignment_231673_235983 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1423, 12), 'call_assignment_231673')
        # Assigning a type to the variable 'height' (line 1423)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1423, 12), 'height', call_assignment_231673_235983)
        
        # Assigning a Call to a Name (line 1423):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_235986 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1423, 12), 'int')
        # Processing the call keyword arguments
        kwargs_235987 = {}
        # Getting the type of 'call_assignment_231672' (line 1423)
        call_assignment_231672_235984 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1423, 12), 'call_assignment_231672', False)
        # Obtaining the member '__getitem__' of a type (line 1423)
        getitem___235985 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1423, 12), call_assignment_231672_235984, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_235988 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___235985, *[int_235986], **kwargs_235987)
        
        # Assigning a type to the variable 'call_assignment_231674' (line 1423)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1423, 12), 'call_assignment_231674', getitem___call_result_235988)
        
        # Assigning a Name to a Name (line 1423):
        # Getting the type of 'call_assignment_231674' (line 1423)
        call_assignment_231674_235989 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1423, 12), 'call_assignment_231674')
        # Assigning a type to the variable 'width' (line 1423)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1423, 20), 'width', call_assignment_231674_235989)
        
        # Assigning a Call to a Name (line 1423):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_235992 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1423, 12), 'int')
        # Processing the call keyword arguments
        kwargs_235993 = {}
        # Getting the type of 'call_assignment_231672' (line 1423)
        call_assignment_231672_235990 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1423, 12), 'call_assignment_231672', False)
        # Obtaining the member '__getitem__' of a type (line 1423)
        getitem___235991 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1423, 12), call_assignment_231672_235990, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_235994 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___235991, *[int_235992], **kwargs_235993)
        
        # Assigning a type to the variable 'call_assignment_231675' (line 1423)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1423, 12), 'call_assignment_231675', getitem___call_result_235994)
        
        # Assigning a Name to a Name (line 1423):
        # Getting the type of 'call_assignment_231675' (line 1423)
        call_assignment_231675_235995 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1423, 12), 'call_assignment_231675')
        # Assigning a type to the variable 'data' (line 1423)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1423, 27), 'data', call_assignment_231675_235995)
        
        # Assigning a Call to a Name (line 1423):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_235998 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1423, 12), 'int')
        # Processing the call keyword arguments
        kwargs_235999 = {}
        # Getting the type of 'call_assignment_231672' (line 1423)
        call_assignment_231672_235996 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1423, 12), 'call_assignment_231672', False)
        # Obtaining the member '__getitem__' of a type (line 1423)
        getitem___235997 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1423, 12), call_assignment_231672_235996, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_236000 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___235997, *[int_235998], **kwargs_235999)
        
        # Assigning a type to the variable 'call_assignment_231676' (line 1423)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1423, 12), 'call_assignment_231676', getitem___call_result_236000)
        
        # Assigning a Name to a Name (line 1423):
        # Getting the type of 'call_assignment_231676' (line 1423)
        call_assignment_231676_236001 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1423, 12), 'call_assignment_231676')
        # Assigning a type to the variable 'adata' (line 1423)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1423, 33), 'adata', call_assignment_231676_236001)
        
        # Type idiom detected: calculating its left and rigth part (line 1424)
        # Getting the type of 'adata' (line 1424)
        adata_236002 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1424, 12), 'adata')
        # Getting the type of 'None' (line 1424)
        None_236003 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1424, 28), 'None')
        
        (may_be_236004, more_types_in_union_236005) = may_not_be_none(adata_236002, None_236003)

        if may_be_236004:

            if more_types_in_union_236005:
                # Runtime conditional SSA (line 1424)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Call to a Name (line 1425):
            
            # Assigning a Call to a Name (line 1425):
            
            # Call to reserveObject(...): (line 1425)
            # Processing the call arguments (line 1425)
            unicode_236008 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1425, 49), 'unicode', u'smask')
            # Processing the call keyword arguments (line 1425)
            kwargs_236009 = {}
            # Getting the type of 'self' (line 1425)
            self_236006 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1425, 30), 'self', False)
            # Obtaining the member 'reserveObject' of a type (line 1425)
            reserveObject_236007 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1425, 30), self_236006, 'reserveObject')
            # Calling reserveObject(args, kwargs) (line 1425)
            reserveObject_call_result_236010 = invoke(stypy.reporting.localization.Localization(__file__, 1425, 30), reserveObject_236007, *[unicode_236008], **kwargs_236009)
            
            # Assigning a type to the variable 'smaskObject' (line 1425)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1425, 16), 'smaskObject', reserveObject_call_result_236010)
            
            # Call to _writeImg(...): (line 1426)
            # Processing the call arguments (line 1426)
            # Getting the type of 'adata' (line 1426)
            adata_236013 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1426, 31), 'adata', False)
            # Getting the type of 'height' (line 1426)
            height_236014 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1426, 38), 'height', False)
            # Getting the type of 'width' (line 1426)
            width_236015 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1426, 46), 'width', False)
            # Getting the type of 'True' (line 1426)
            True_236016 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1426, 53), 'True', False)
            # Getting the type of 'smaskObject' (line 1426)
            smaskObject_236017 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1426, 59), 'smaskObject', False)
            # Obtaining the member 'id' of a type (line 1426)
            id_236018 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1426, 59), smaskObject_236017, 'id')
            # Processing the call keyword arguments (line 1426)
            kwargs_236019 = {}
            # Getting the type of 'self' (line 1426)
            self_236011 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1426, 16), 'self', False)
            # Obtaining the member '_writeImg' of a type (line 1426)
            _writeImg_236012 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1426, 16), self_236011, '_writeImg')
            # Calling _writeImg(args, kwargs) (line 1426)
            _writeImg_call_result_236020 = invoke(stypy.reporting.localization.Localization(__file__, 1426, 16), _writeImg_236012, *[adata_236013, height_236014, width_236015, True_236016, id_236018], **kwargs_236019)
            

            if more_types_in_union_236005:
                # Runtime conditional SSA for else branch (line 1424)
                module_type_store.open_ssa_branch('idiom else')



        if ((not may_be_236004) or more_types_in_union_236005):
            
            # Assigning a Name to a Name (line 1428):
            
            # Assigning a Name to a Name (line 1428):
            # Getting the type of 'None' (line 1428)
            None_236021 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1428, 30), 'None')
            # Assigning a type to the variable 'smaskObject' (line 1428)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1428, 16), 'smaskObject', None_236021)

            if (may_be_236004 and more_types_in_union_236005):
                # SSA join for if statement (line 1424)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Call to _writeImg(...): (line 1429)
        # Processing the call arguments (line 1429)
        # Getting the type of 'data' (line 1429)
        data_236024 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1429, 27), 'data', False)
        # Getting the type of 'height' (line 1429)
        height_236025 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1429, 33), 'height', False)
        # Getting the type of 'width' (line 1429)
        width_236026 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1429, 41), 'width', False)
        # Getting the type of 'False' (line 1429)
        False_236027 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1429, 48), 'False', False)
        # Getting the type of 'ob' (line 1430)
        ob_236028 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1430, 27), 'ob', False)
        # Obtaining the member 'id' of a type (line 1430)
        id_236029 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1430, 27), ob_236028, 'id')
        # Getting the type of 'smaskObject' (line 1430)
        smaskObject_236030 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1430, 34), 'smaskObject', False)
        # Processing the call keyword arguments (line 1429)
        kwargs_236031 = {}
        # Getting the type of 'self' (line 1429)
        self_236022 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1429, 12), 'self', False)
        # Obtaining the member '_writeImg' of a type (line 1429)
        _writeImg_236023 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1429, 12), self_236022, '_writeImg')
        # Calling _writeImg(args, kwargs) (line 1429)
        _writeImg_call_result_236032 = invoke(stypy.reporting.localization.Localization(__file__, 1429, 12), _writeImg_236023, *[data_236024, height_236025, width_236026, False_236027, id_236029, smaskObject_236030], **kwargs_236031)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'writeImages(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'writeImages' in the type store
        # Getting the type of 'stypy_return_type' (line 1421)
        stypy_return_type_236033 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1421, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_236033)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'writeImages'
        return stypy_return_type_236033


    @norecursion
    def markerObject(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'markerObject'
        module_type_store = module_type_store.open_function_context('markerObject', 1432, 4, False)
        # Assigning a type to the variable 'self' (line 1433)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1433, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        PdfFile.markerObject.__dict__.__setitem__('stypy_localization', localization)
        PdfFile.markerObject.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        PdfFile.markerObject.__dict__.__setitem__('stypy_type_store', module_type_store)
        PdfFile.markerObject.__dict__.__setitem__('stypy_function_name', 'PdfFile.markerObject')
        PdfFile.markerObject.__dict__.__setitem__('stypy_param_names_list', ['path', 'trans', 'fill', 'stroke', 'lw', 'joinstyle', 'capstyle'])
        PdfFile.markerObject.__dict__.__setitem__('stypy_varargs_param_name', None)
        PdfFile.markerObject.__dict__.__setitem__('stypy_kwargs_param_name', None)
        PdfFile.markerObject.__dict__.__setitem__('stypy_call_defaults', defaults)
        PdfFile.markerObject.__dict__.__setitem__('stypy_call_varargs', varargs)
        PdfFile.markerObject.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        PdfFile.markerObject.__dict__.__setitem__('stypy_declared_arg_number', 8)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'PdfFile.markerObject', ['path', 'trans', 'fill', 'stroke', 'lw', 'joinstyle', 'capstyle'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'markerObject', localization, ['path', 'trans', 'fill', 'stroke', 'lw', 'joinstyle', 'capstyle'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'markerObject(...)' code ##################

        unicode_236034 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1434, 8), 'unicode', u'Return name of a marker XObject representing the given path.')
        
        # Assigning a Call to a Name (line 1447):
        
        # Assigning a Call to a Name (line 1447):
        
        # Call to pathOperations(...): (line 1447)
        # Processing the call arguments (line 1447)
        # Getting the type of 'path' (line 1447)
        path_236037 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1447, 38), 'path', False)
        # Getting the type of 'trans' (line 1447)
        trans_236038 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1447, 44), 'trans', False)
        # Processing the call keyword arguments (line 1447)
        # Getting the type of 'False' (line 1447)
        False_236039 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1447, 60), 'False', False)
        keyword_236040 = False_236039
        kwargs_236041 = {'simplify': keyword_236040}
        # Getting the type of 'self' (line 1447)
        self_236035 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1447, 18), 'self', False)
        # Obtaining the member 'pathOperations' of a type (line 1447)
        pathOperations_236036 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1447, 18), self_236035, 'pathOperations')
        # Calling pathOperations(args, kwargs) (line 1447)
        pathOperations_call_result_236042 = invoke(stypy.reporting.localization.Localization(__file__, 1447, 18), pathOperations_236036, *[path_236037, trans_236038], **kwargs_236041)
        
        # Assigning a type to the variable 'pathops' (line 1447)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1447, 8), 'pathops', pathOperations_call_result_236042)
        
        # Assigning a Tuple to a Name (line 1448):
        
        # Assigning a Tuple to a Name (line 1448):
        
        # Obtaining an instance of the builtin type 'tuple' (line 1448)
        tuple_236043 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1448, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1448)
        # Adding element type (line 1448)
        
        # Call to tuple(...): (line 1448)
        # Processing the call arguments (line 1448)
        # Getting the type of 'pathops' (line 1448)
        pathops_236045 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1448, 21), 'pathops', False)
        # Processing the call keyword arguments (line 1448)
        kwargs_236046 = {}
        # Getting the type of 'tuple' (line 1448)
        tuple_236044 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1448, 15), 'tuple', False)
        # Calling tuple(args, kwargs) (line 1448)
        tuple_call_result_236047 = invoke(stypy.reporting.localization.Localization(__file__, 1448, 15), tuple_236044, *[pathops_236045], **kwargs_236046)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1448, 15), tuple_236043, tuple_call_result_236047)
        # Adding element type (line 1448)
        
        # Call to bool(...): (line 1448)
        # Processing the call arguments (line 1448)
        # Getting the type of 'fill' (line 1448)
        fill_236049 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1448, 36), 'fill', False)
        # Processing the call keyword arguments (line 1448)
        kwargs_236050 = {}
        # Getting the type of 'bool' (line 1448)
        bool_236048 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1448, 31), 'bool', False)
        # Calling bool(args, kwargs) (line 1448)
        bool_call_result_236051 = invoke(stypy.reporting.localization.Localization(__file__, 1448, 31), bool_236048, *[fill_236049], **kwargs_236050)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1448, 15), tuple_236043, bool_call_result_236051)
        # Adding element type (line 1448)
        
        # Call to bool(...): (line 1448)
        # Processing the call arguments (line 1448)
        # Getting the type of 'stroke' (line 1448)
        stroke_236053 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1448, 48), 'stroke', False)
        # Processing the call keyword arguments (line 1448)
        kwargs_236054 = {}
        # Getting the type of 'bool' (line 1448)
        bool_236052 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1448, 43), 'bool', False)
        # Calling bool(args, kwargs) (line 1448)
        bool_call_result_236055 = invoke(stypy.reporting.localization.Localization(__file__, 1448, 43), bool_236052, *[stroke_236053], **kwargs_236054)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1448, 15), tuple_236043, bool_call_result_236055)
        # Adding element type (line 1448)
        # Getting the type of 'joinstyle' (line 1448)
        joinstyle_236056 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1448, 57), 'joinstyle')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1448, 15), tuple_236043, joinstyle_236056)
        # Adding element type (line 1448)
        # Getting the type of 'capstyle' (line 1448)
        capstyle_236057 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1448, 68), 'capstyle')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1448, 15), tuple_236043, capstyle_236057)
        
        # Assigning a type to the variable 'key' (line 1448)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1448, 8), 'key', tuple_236043)
        
        # Assigning a Call to a Name (line 1449):
        
        # Assigning a Call to a Name (line 1449):
        
        # Call to get(...): (line 1449)
        # Processing the call arguments (line 1449)
        # Getting the type of 'key' (line 1449)
        key_236061 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1449, 34), 'key', False)
        # Processing the call keyword arguments (line 1449)
        kwargs_236062 = {}
        # Getting the type of 'self' (line 1449)
        self_236058 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1449, 17), 'self', False)
        # Obtaining the member 'markers' of a type (line 1449)
        markers_236059 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1449, 17), self_236058, 'markers')
        # Obtaining the member 'get' of a type (line 1449)
        get_236060 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1449, 17), markers_236059, 'get')
        # Calling get(args, kwargs) (line 1449)
        get_call_result_236063 = invoke(stypy.reporting.localization.Localization(__file__, 1449, 17), get_236060, *[key_236061], **kwargs_236062)
        
        # Assigning a type to the variable 'result' (line 1449)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1449, 8), 'result', get_call_result_236063)
        
        # Type idiom detected: calculating its left and rigth part (line 1450)
        # Getting the type of 'result' (line 1450)
        result_236064 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1450, 11), 'result')
        # Getting the type of 'None' (line 1450)
        None_236065 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1450, 21), 'None')
        
        (may_be_236066, more_types_in_union_236067) = may_be_none(result_236064, None_236065)

        if may_be_236066:

            if more_types_in_union_236067:
                # Runtime conditional SSA (line 1450)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Call to a Name (line 1451):
            
            # Assigning a Call to a Name (line 1451):
            
            # Call to Name(...): (line 1451)
            # Processing the call arguments (line 1451)
            unicode_236069 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1451, 24), 'unicode', u'M%d')
            
            # Call to len(...): (line 1451)
            # Processing the call arguments (line 1451)
            # Getting the type of 'self' (line 1451)
            self_236071 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1451, 36), 'self', False)
            # Obtaining the member 'markers' of a type (line 1451)
            markers_236072 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1451, 36), self_236071, 'markers')
            # Processing the call keyword arguments (line 1451)
            kwargs_236073 = {}
            # Getting the type of 'len' (line 1451)
            len_236070 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1451, 32), 'len', False)
            # Calling len(args, kwargs) (line 1451)
            len_call_result_236074 = invoke(stypy.reporting.localization.Localization(__file__, 1451, 32), len_236070, *[markers_236072], **kwargs_236073)
            
            # Applying the binary operator '%' (line 1451)
            result_mod_236075 = python_operator(stypy.reporting.localization.Localization(__file__, 1451, 24), '%', unicode_236069, len_call_result_236074)
            
            # Processing the call keyword arguments (line 1451)
            kwargs_236076 = {}
            # Getting the type of 'Name' (line 1451)
            Name_236068 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1451, 19), 'Name', False)
            # Calling Name(args, kwargs) (line 1451)
            Name_call_result_236077 = invoke(stypy.reporting.localization.Localization(__file__, 1451, 19), Name_236068, *[result_mod_236075], **kwargs_236076)
            
            # Assigning a type to the variable 'name' (line 1451)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1451, 12), 'name', Name_call_result_236077)
            
            # Assigning a Call to a Name (line 1452):
            
            # Assigning a Call to a Name (line 1452):
            
            # Call to reserveObject(...): (line 1452)
            # Processing the call arguments (line 1452)
            unicode_236080 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1452, 36), 'unicode', u'marker %d')
            
            # Call to len(...): (line 1452)
            # Processing the call arguments (line 1452)
            # Getting the type of 'self' (line 1452)
            self_236082 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1452, 54), 'self', False)
            # Obtaining the member 'markers' of a type (line 1452)
            markers_236083 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1452, 54), self_236082, 'markers')
            # Processing the call keyword arguments (line 1452)
            kwargs_236084 = {}
            # Getting the type of 'len' (line 1452)
            len_236081 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1452, 50), 'len', False)
            # Calling len(args, kwargs) (line 1452)
            len_call_result_236085 = invoke(stypy.reporting.localization.Localization(__file__, 1452, 50), len_236081, *[markers_236083], **kwargs_236084)
            
            # Applying the binary operator '%' (line 1452)
            result_mod_236086 = python_operator(stypy.reporting.localization.Localization(__file__, 1452, 36), '%', unicode_236080, len_call_result_236085)
            
            # Processing the call keyword arguments (line 1452)
            kwargs_236087 = {}
            # Getting the type of 'self' (line 1452)
            self_236078 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1452, 17), 'self', False)
            # Obtaining the member 'reserveObject' of a type (line 1452)
            reserveObject_236079 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1452, 17), self_236078, 'reserveObject')
            # Calling reserveObject(args, kwargs) (line 1452)
            reserveObject_call_result_236088 = invoke(stypy.reporting.localization.Localization(__file__, 1452, 17), reserveObject_236079, *[result_mod_236086], **kwargs_236087)
            
            # Assigning a type to the variable 'ob' (line 1452)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1452, 12), 'ob', reserveObject_call_result_236088)
            
            # Assigning a Call to a Name (line 1453):
            
            # Assigning a Call to a Name (line 1453):
            
            # Call to get_extents(...): (line 1453)
            # Processing the call arguments (line 1453)
            # Getting the type of 'trans' (line 1453)
            trans_236091 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1453, 36), 'trans', False)
            # Processing the call keyword arguments (line 1453)
            kwargs_236092 = {}
            # Getting the type of 'path' (line 1453)
            path_236089 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1453, 19), 'path', False)
            # Obtaining the member 'get_extents' of a type (line 1453)
            get_extents_236090 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1453, 19), path_236089, 'get_extents')
            # Calling get_extents(args, kwargs) (line 1453)
            get_extents_call_result_236093 = invoke(stypy.reporting.localization.Localization(__file__, 1453, 19), get_extents_236090, *[trans_236091], **kwargs_236092)
            
            # Assigning a type to the variable 'bbox' (line 1453)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1453, 12), 'bbox', get_extents_call_result_236093)
            
            # Assigning a List to a Subscript (line 1454):
            
            # Assigning a List to a Subscript (line 1454):
            
            # Obtaining an instance of the builtin type 'list' (line 1454)
            list_236094 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1454, 32), 'list')
            # Adding type elements to the builtin type 'list' instance (line 1454)
            # Adding element type (line 1454)
            # Getting the type of 'name' (line 1454)
            name_236095 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1454, 33), 'name')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1454, 32), list_236094, name_236095)
            # Adding element type (line 1454)
            # Getting the type of 'ob' (line 1454)
            ob_236096 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1454, 39), 'ob')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1454, 32), list_236094, ob_236096)
            # Adding element type (line 1454)
            # Getting the type of 'bbox' (line 1454)
            bbox_236097 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1454, 43), 'bbox')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1454, 32), list_236094, bbox_236097)
            # Adding element type (line 1454)
            # Getting the type of 'lw' (line 1454)
            lw_236098 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1454, 49), 'lw')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1454, 32), list_236094, lw_236098)
            
            # Getting the type of 'self' (line 1454)
            self_236099 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1454, 12), 'self')
            # Obtaining the member 'markers' of a type (line 1454)
            markers_236100 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1454, 12), self_236099, 'markers')
            # Getting the type of 'key' (line 1454)
            key_236101 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1454, 25), 'key')
            # Storing an element on a container (line 1454)
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1454, 12), markers_236100, (key_236101, list_236094))

            if more_types_in_union_236067:
                # Runtime conditional SSA for else branch (line 1450)
                module_type_store.open_ssa_branch('idiom else')



        if ((not may_be_236066) or more_types_in_union_236067):
            
            
            
            # Obtaining the type of the subscript
            int_236102 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1456, 22), 'int')
            # Getting the type of 'result' (line 1456)
            result_236103 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1456, 15), 'result')
            # Obtaining the member '__getitem__' of a type (line 1456)
            getitem___236104 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1456, 15), result_236103, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 1456)
            subscript_call_result_236105 = invoke(stypy.reporting.localization.Localization(__file__, 1456, 15), getitem___236104, int_236102)
            
            # Getting the type of 'lw' (line 1456)
            lw_236106 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1456, 28), 'lw')
            # Applying the binary operator '<' (line 1456)
            result_lt_236107 = python_operator(stypy.reporting.localization.Localization(__file__, 1456, 15), '<', subscript_call_result_236105, lw_236106)
            
            # Testing the type of an if condition (line 1456)
            if_condition_236108 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1456, 12), result_lt_236107)
            # Assigning a type to the variable 'if_condition_236108' (line 1456)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1456, 12), 'if_condition_236108', if_condition_236108)
            # SSA begins for if statement (line 1456)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Name to a Subscript (line 1457):
            
            # Assigning a Name to a Subscript (line 1457):
            # Getting the type of 'lw' (line 1457)
            lw_236109 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1457, 29), 'lw')
            # Getting the type of 'result' (line 1457)
            result_236110 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1457, 16), 'result')
            int_236111 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1457, 23), 'int')
            # Storing an element on a container (line 1457)
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1457, 16), result_236110, (int_236111, lw_236109))
            # SSA join for if statement (line 1456)
            module_type_store = module_type_store.join_ssa_context()
            
            
            # Assigning a Subscript to a Name (line 1458):
            
            # Assigning a Subscript to a Name (line 1458):
            
            # Obtaining the type of the subscript
            int_236112 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1458, 26), 'int')
            # Getting the type of 'result' (line 1458)
            result_236113 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1458, 19), 'result')
            # Obtaining the member '__getitem__' of a type (line 1458)
            getitem___236114 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1458, 19), result_236113, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 1458)
            subscript_call_result_236115 = invoke(stypy.reporting.localization.Localization(__file__, 1458, 19), getitem___236114, int_236112)
            
            # Assigning a type to the variable 'name' (line 1458)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1458, 12), 'name', subscript_call_result_236115)

            if (may_be_236066 and more_types_in_union_236067):
                # SSA join for if statement (line 1450)
                module_type_store = module_type_store.join_ssa_context()


        
        # Getting the type of 'name' (line 1459)
        name_236116 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1459, 15), 'name')
        # Assigning a type to the variable 'stypy_return_type' (line 1459)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1459, 8), 'stypy_return_type', name_236116)
        
        # ################# End of 'markerObject(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'markerObject' in the type store
        # Getting the type of 'stypy_return_type' (line 1432)
        stypy_return_type_236117 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1432, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_236117)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'markerObject'
        return stypy_return_type_236117


    @norecursion
    def writeMarkers(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'writeMarkers'
        module_type_store = module_type_store.open_function_context('writeMarkers', 1461, 4, False)
        # Assigning a type to the variable 'self' (line 1462)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1462, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        PdfFile.writeMarkers.__dict__.__setitem__('stypy_localization', localization)
        PdfFile.writeMarkers.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        PdfFile.writeMarkers.__dict__.__setitem__('stypy_type_store', module_type_store)
        PdfFile.writeMarkers.__dict__.__setitem__('stypy_function_name', 'PdfFile.writeMarkers')
        PdfFile.writeMarkers.__dict__.__setitem__('stypy_param_names_list', [])
        PdfFile.writeMarkers.__dict__.__setitem__('stypy_varargs_param_name', None)
        PdfFile.writeMarkers.__dict__.__setitem__('stypy_kwargs_param_name', None)
        PdfFile.writeMarkers.__dict__.__setitem__('stypy_call_defaults', defaults)
        PdfFile.writeMarkers.__dict__.__setitem__('stypy_call_varargs', varargs)
        PdfFile.writeMarkers.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        PdfFile.writeMarkers.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'PdfFile.writeMarkers', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'writeMarkers', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'writeMarkers(...)' code ##################

        
        
        # Call to iteritems(...): (line 1463)
        # Processing the call arguments (line 1463)
        # Getting the type of 'self' (line 1463)
        self_236120 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1463, 52), 'self', False)
        # Obtaining the member 'markers' of a type (line 1463)
        markers_236121 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1463, 52), self_236120, 'markers')
        # Processing the call keyword arguments (line 1463)
        kwargs_236122 = {}
        # Getting the type of 'six' (line 1463)
        six_236118 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1463, 38), 'six', False)
        # Obtaining the member 'iteritems' of a type (line 1463)
        iteritems_236119 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1463, 38), six_236118, 'iteritems')
        # Calling iteritems(args, kwargs) (line 1463)
        iteritems_call_result_236123 = invoke(stypy.reporting.localization.Localization(__file__, 1463, 38), iteritems_236119, *[markers_236121], **kwargs_236122)
        
        # Testing the type of a for loop iterable (line 1462)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1462, 8), iteritems_call_result_236123)
        # Getting the type of the for loop variable (line 1462)
        for_loop_var_236124 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1462, 8), iteritems_call_result_236123)
        # Assigning a type to the variable 'pathops' (line 1462)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1462, 8), 'pathops', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1462, 8), for_loop_var_236124))
        # Assigning a type to the variable 'fill' (line 1462)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1462, 8), 'fill', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1462, 8), for_loop_var_236124))
        # Assigning a type to the variable 'stroke' (line 1462)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1462, 8), 'stroke', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1462, 8), for_loop_var_236124))
        # Assigning a type to the variable 'joinstyle' (line 1462)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1462, 8), 'joinstyle', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1462, 8), for_loop_var_236124))
        # Assigning a type to the variable 'capstyle' (line 1462)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1462, 8), 'capstyle', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1462, 8), for_loop_var_236124))
        # Assigning a type to the variable 'name' (line 1462)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1462, 8), 'name', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1462, 8), for_loop_var_236124))
        # Assigning a type to the variable 'ob' (line 1462)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1462, 8), 'ob', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1462, 8), for_loop_var_236124))
        # Assigning a type to the variable 'bbox' (line 1462)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1462, 8), 'bbox', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1462, 8), for_loop_var_236124))
        # Assigning a type to the variable 'lw' (line 1462)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1462, 8), 'lw', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1462, 8), for_loop_var_236124))
        # SSA begins for a for statement (line 1462)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 1464):
        
        # Assigning a Call to a Name (line 1464):
        
        # Call to padded(...): (line 1464)
        # Processing the call arguments (line 1464)
        # Getting the type of 'lw' (line 1464)
        lw_236127 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1464, 31), 'lw', False)
        float_236128 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1464, 36), 'float')
        # Applying the binary operator '*' (line 1464)
        result_mul_236129 = python_operator(stypy.reporting.localization.Localization(__file__, 1464, 31), '*', lw_236127, float_236128)
        
        # Processing the call keyword arguments (line 1464)
        kwargs_236130 = {}
        # Getting the type of 'bbox' (line 1464)
        bbox_236125 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1464, 19), 'bbox', False)
        # Obtaining the member 'padded' of a type (line 1464)
        padded_236126 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1464, 19), bbox_236125, 'padded')
        # Calling padded(args, kwargs) (line 1464)
        padded_call_result_236131 = invoke(stypy.reporting.localization.Localization(__file__, 1464, 19), padded_236126, *[result_mul_236129], **kwargs_236130)
        
        # Assigning a type to the variable 'bbox' (line 1464)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1464, 12), 'bbox', padded_call_result_236131)
        
        # Call to beginStream(...): (line 1465)
        # Processing the call arguments (line 1465)
        # Getting the type of 'ob' (line 1466)
        ob_236134 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1466, 16), 'ob', False)
        # Obtaining the member 'id' of a type (line 1466)
        id_236135 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1466, 16), ob_236134, 'id')
        # Getting the type of 'None' (line 1466)
        None_236136 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1466, 23), 'None', False)
        
        # Obtaining an instance of the builtin type 'dict' (line 1467)
        dict_236137 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1467, 16), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 1467)
        # Adding element type (key, value) (line 1467)
        unicode_236138 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1467, 17), 'unicode', u'Type')
        
        # Call to Name(...): (line 1467)
        # Processing the call arguments (line 1467)
        unicode_236140 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1467, 30), 'unicode', u'XObject')
        # Processing the call keyword arguments (line 1467)
        kwargs_236141 = {}
        # Getting the type of 'Name' (line 1467)
        Name_236139 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1467, 25), 'Name', False)
        # Calling Name(args, kwargs) (line 1467)
        Name_call_result_236142 = invoke(stypy.reporting.localization.Localization(__file__, 1467, 25), Name_236139, *[unicode_236140], **kwargs_236141)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1467, 16), dict_236137, (unicode_236138, Name_call_result_236142))
        # Adding element type (key, value) (line 1467)
        unicode_236143 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1467, 42), 'unicode', u'Subtype')
        
        # Call to Name(...): (line 1467)
        # Processing the call arguments (line 1467)
        unicode_236145 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1467, 58), 'unicode', u'Form')
        # Processing the call keyword arguments (line 1467)
        kwargs_236146 = {}
        # Getting the type of 'Name' (line 1467)
        Name_236144 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1467, 53), 'Name', False)
        # Calling Name(args, kwargs) (line 1467)
        Name_call_result_236147 = invoke(stypy.reporting.localization.Localization(__file__, 1467, 53), Name_236144, *[unicode_236145], **kwargs_236146)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1467, 16), dict_236137, (unicode_236143, Name_call_result_236147))
        # Adding element type (key, value) (line 1467)
        unicode_236148 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1468, 17), 'unicode', u'BBox')
        
        # Call to list(...): (line 1468)
        # Processing the call arguments (line 1468)
        # Getting the type of 'bbox' (line 1468)
        bbox_236150 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1468, 30), 'bbox', False)
        # Obtaining the member 'extents' of a type (line 1468)
        extents_236151 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1468, 30), bbox_236150, 'extents')
        # Processing the call keyword arguments (line 1468)
        kwargs_236152 = {}
        # Getting the type of 'list' (line 1468)
        list_236149 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1468, 25), 'list', False)
        # Calling list(args, kwargs) (line 1468)
        list_call_result_236153 = invoke(stypy.reporting.localization.Localization(__file__, 1468, 25), list_236149, *[extents_236151], **kwargs_236152)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1467, 16), dict_236137, (unicode_236148, list_call_result_236153))
        
        # Processing the call keyword arguments (line 1465)
        kwargs_236154 = {}
        # Getting the type of 'self' (line 1465)
        self_236132 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1465, 12), 'self', False)
        # Obtaining the member 'beginStream' of a type (line 1465)
        beginStream_236133 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1465, 12), self_236132, 'beginStream')
        # Calling beginStream(args, kwargs) (line 1465)
        beginStream_call_result_236155 = invoke(stypy.reporting.localization.Localization(__file__, 1465, 12), beginStream_236133, *[id_236135, None_236136, dict_236137], **kwargs_236154)
        
        
        # Call to output(...): (line 1469)
        # Processing the call arguments (line 1469)
        
        # Obtaining the type of the subscript
        # Getting the type of 'joinstyle' (line 1469)
        joinstyle_236158 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1469, 54), 'joinstyle', False)
        # Getting the type of 'GraphicsContextPdf' (line 1469)
        GraphicsContextPdf_236159 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1469, 24), 'GraphicsContextPdf', False)
        # Obtaining the member 'joinstyles' of a type (line 1469)
        joinstyles_236160 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1469, 24), GraphicsContextPdf_236159, 'joinstyles')
        # Obtaining the member '__getitem__' of a type (line 1469)
        getitem___236161 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1469, 24), joinstyles_236160, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1469)
        subscript_call_result_236162 = invoke(stypy.reporting.localization.Localization(__file__, 1469, 24), getitem___236161, joinstyle_236158)
        
        # Getting the type of 'Op' (line 1470)
        Op_236163 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1470, 24), 'Op', False)
        # Obtaining the member 'setlinejoin' of a type (line 1470)
        setlinejoin_236164 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1470, 24), Op_236163, 'setlinejoin')
        # Processing the call keyword arguments (line 1469)
        kwargs_236165 = {}
        # Getting the type of 'self' (line 1469)
        self_236156 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1469, 12), 'self', False)
        # Obtaining the member 'output' of a type (line 1469)
        output_236157 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1469, 12), self_236156, 'output')
        # Calling output(args, kwargs) (line 1469)
        output_call_result_236166 = invoke(stypy.reporting.localization.Localization(__file__, 1469, 12), output_236157, *[subscript_call_result_236162, setlinejoin_236164], **kwargs_236165)
        
        
        # Call to output(...): (line 1471)
        # Processing the call arguments (line 1471)
        
        # Obtaining the type of the subscript
        # Getting the type of 'capstyle' (line 1471)
        capstyle_236169 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1471, 53), 'capstyle', False)
        # Getting the type of 'GraphicsContextPdf' (line 1471)
        GraphicsContextPdf_236170 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1471, 24), 'GraphicsContextPdf', False)
        # Obtaining the member 'capstyles' of a type (line 1471)
        capstyles_236171 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1471, 24), GraphicsContextPdf_236170, 'capstyles')
        # Obtaining the member '__getitem__' of a type (line 1471)
        getitem___236172 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1471, 24), capstyles_236171, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1471)
        subscript_call_result_236173 = invoke(stypy.reporting.localization.Localization(__file__, 1471, 24), getitem___236172, capstyle_236169)
        
        # Getting the type of 'Op' (line 1471)
        Op_236174 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1471, 64), 'Op', False)
        # Obtaining the member 'setlinecap' of a type (line 1471)
        setlinecap_236175 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1471, 64), Op_236174, 'setlinecap')
        # Processing the call keyword arguments (line 1471)
        kwargs_236176 = {}
        # Getting the type of 'self' (line 1471)
        self_236167 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1471, 12), 'self', False)
        # Obtaining the member 'output' of a type (line 1471)
        output_236168 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1471, 12), self_236167, 'output')
        # Calling output(args, kwargs) (line 1471)
        output_call_result_236177 = invoke(stypy.reporting.localization.Localization(__file__, 1471, 12), output_236168, *[subscript_call_result_236173, setlinecap_236175], **kwargs_236176)
        
        
        # Call to output(...): (line 1472)
        # Getting the type of 'pathops' (line 1472)
        pathops_236180 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1472, 25), 'pathops', False)
        # Processing the call keyword arguments (line 1472)
        kwargs_236181 = {}
        # Getting the type of 'self' (line 1472)
        self_236178 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1472, 12), 'self', False)
        # Obtaining the member 'output' of a type (line 1472)
        output_236179 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1472, 12), self_236178, 'output')
        # Calling output(args, kwargs) (line 1472)
        output_call_result_236182 = invoke(stypy.reporting.localization.Localization(__file__, 1472, 12), output_236179, *[pathops_236180], **kwargs_236181)
        
        
        # Call to output(...): (line 1473)
        # Processing the call arguments (line 1473)
        
        # Call to paint_path(...): (line 1473)
        # Processing the call arguments (line 1473)
        # Getting the type of 'fill' (line 1473)
        fill_236187 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1473, 38), 'fill', False)
        # Getting the type of 'stroke' (line 1473)
        stroke_236188 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1473, 44), 'stroke', False)
        # Processing the call keyword arguments (line 1473)
        kwargs_236189 = {}
        # Getting the type of 'Op' (line 1473)
        Op_236185 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1473, 24), 'Op', False)
        # Obtaining the member 'paint_path' of a type (line 1473)
        paint_path_236186 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1473, 24), Op_236185, 'paint_path')
        # Calling paint_path(args, kwargs) (line 1473)
        paint_path_call_result_236190 = invoke(stypy.reporting.localization.Localization(__file__, 1473, 24), paint_path_236186, *[fill_236187, stroke_236188], **kwargs_236189)
        
        # Processing the call keyword arguments (line 1473)
        kwargs_236191 = {}
        # Getting the type of 'self' (line 1473)
        self_236183 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1473, 12), 'self', False)
        # Obtaining the member 'output' of a type (line 1473)
        output_236184 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1473, 12), self_236183, 'output')
        # Calling output(args, kwargs) (line 1473)
        output_call_result_236192 = invoke(stypy.reporting.localization.Localization(__file__, 1473, 12), output_236184, *[paint_path_call_result_236190], **kwargs_236191)
        
        
        # Call to endStream(...): (line 1474)
        # Processing the call keyword arguments (line 1474)
        kwargs_236195 = {}
        # Getting the type of 'self' (line 1474)
        self_236193 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1474, 12), 'self', False)
        # Obtaining the member 'endStream' of a type (line 1474)
        endStream_236194 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1474, 12), self_236193, 'endStream')
        # Calling endStream(args, kwargs) (line 1474)
        endStream_call_result_236196 = invoke(stypy.reporting.localization.Localization(__file__, 1474, 12), endStream_236194, *[], **kwargs_236195)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'writeMarkers(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'writeMarkers' in the type store
        # Getting the type of 'stypy_return_type' (line 1461)
        stypy_return_type_236197 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1461, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_236197)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'writeMarkers'
        return stypy_return_type_236197


    @norecursion
    def pathCollectionObject(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'pathCollectionObject'
        module_type_store = module_type_store.open_function_context('pathCollectionObject', 1476, 4, False)
        # Assigning a type to the variable 'self' (line 1477)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1477, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        PdfFile.pathCollectionObject.__dict__.__setitem__('stypy_localization', localization)
        PdfFile.pathCollectionObject.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        PdfFile.pathCollectionObject.__dict__.__setitem__('stypy_type_store', module_type_store)
        PdfFile.pathCollectionObject.__dict__.__setitem__('stypy_function_name', 'PdfFile.pathCollectionObject')
        PdfFile.pathCollectionObject.__dict__.__setitem__('stypy_param_names_list', ['gc', 'path', 'trans', 'padding', 'filled', 'stroked'])
        PdfFile.pathCollectionObject.__dict__.__setitem__('stypy_varargs_param_name', None)
        PdfFile.pathCollectionObject.__dict__.__setitem__('stypy_kwargs_param_name', None)
        PdfFile.pathCollectionObject.__dict__.__setitem__('stypy_call_defaults', defaults)
        PdfFile.pathCollectionObject.__dict__.__setitem__('stypy_call_varargs', varargs)
        PdfFile.pathCollectionObject.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        PdfFile.pathCollectionObject.__dict__.__setitem__('stypy_declared_arg_number', 7)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'PdfFile.pathCollectionObject', ['gc', 'path', 'trans', 'padding', 'filled', 'stroked'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'pathCollectionObject', localization, ['gc', 'path', 'trans', 'padding', 'filled', 'stroked'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'pathCollectionObject(...)' code ##################

        
        # Assigning a Call to a Name (line 1477):
        
        # Assigning a Call to a Name (line 1477):
        
        # Call to Name(...): (line 1477)
        # Processing the call arguments (line 1477)
        unicode_236199 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1477, 20), 'unicode', u'P%d')
        
        # Call to len(...): (line 1477)
        # Processing the call arguments (line 1477)
        # Getting the type of 'self' (line 1477)
        self_236201 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1477, 32), 'self', False)
        # Obtaining the member 'paths' of a type (line 1477)
        paths_236202 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1477, 32), self_236201, 'paths')
        # Processing the call keyword arguments (line 1477)
        kwargs_236203 = {}
        # Getting the type of 'len' (line 1477)
        len_236200 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1477, 28), 'len', False)
        # Calling len(args, kwargs) (line 1477)
        len_call_result_236204 = invoke(stypy.reporting.localization.Localization(__file__, 1477, 28), len_236200, *[paths_236202], **kwargs_236203)
        
        # Applying the binary operator '%' (line 1477)
        result_mod_236205 = python_operator(stypy.reporting.localization.Localization(__file__, 1477, 20), '%', unicode_236199, len_call_result_236204)
        
        # Processing the call keyword arguments (line 1477)
        kwargs_236206 = {}
        # Getting the type of 'Name' (line 1477)
        Name_236198 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1477, 15), 'Name', False)
        # Calling Name(args, kwargs) (line 1477)
        Name_call_result_236207 = invoke(stypy.reporting.localization.Localization(__file__, 1477, 15), Name_236198, *[result_mod_236205], **kwargs_236206)
        
        # Assigning a type to the variable 'name' (line 1477)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1477, 8), 'name', Name_call_result_236207)
        
        # Assigning a Call to a Name (line 1478):
        
        # Assigning a Call to a Name (line 1478):
        
        # Call to reserveObject(...): (line 1478)
        # Processing the call arguments (line 1478)
        unicode_236210 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1478, 32), 'unicode', u'path %d')
        
        # Call to len(...): (line 1478)
        # Processing the call arguments (line 1478)
        # Getting the type of 'self' (line 1478)
        self_236212 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1478, 48), 'self', False)
        # Obtaining the member 'paths' of a type (line 1478)
        paths_236213 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1478, 48), self_236212, 'paths')
        # Processing the call keyword arguments (line 1478)
        kwargs_236214 = {}
        # Getting the type of 'len' (line 1478)
        len_236211 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1478, 44), 'len', False)
        # Calling len(args, kwargs) (line 1478)
        len_call_result_236215 = invoke(stypy.reporting.localization.Localization(__file__, 1478, 44), len_236211, *[paths_236213], **kwargs_236214)
        
        # Applying the binary operator '%' (line 1478)
        result_mod_236216 = python_operator(stypy.reporting.localization.Localization(__file__, 1478, 32), '%', unicode_236210, len_call_result_236215)
        
        # Processing the call keyword arguments (line 1478)
        kwargs_236217 = {}
        # Getting the type of 'self' (line 1478)
        self_236208 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1478, 13), 'self', False)
        # Obtaining the member 'reserveObject' of a type (line 1478)
        reserveObject_236209 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1478, 13), self_236208, 'reserveObject')
        # Calling reserveObject(args, kwargs) (line 1478)
        reserveObject_call_result_236218 = invoke(stypy.reporting.localization.Localization(__file__, 1478, 13), reserveObject_236209, *[result_mod_236216], **kwargs_236217)
        
        # Assigning a type to the variable 'ob' (line 1478)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1478, 8), 'ob', reserveObject_call_result_236218)
        
        # Call to append(...): (line 1479)
        # Processing the call arguments (line 1479)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1480)
        tuple_236222 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1480, 13), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1480)
        # Adding element type (line 1480)
        # Getting the type of 'name' (line 1480)
        name_236223 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1480, 13), 'name', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1480, 13), tuple_236222, name_236223)
        # Adding element type (line 1480)
        # Getting the type of 'path' (line 1480)
        path_236224 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1480, 19), 'path', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1480, 13), tuple_236222, path_236224)
        # Adding element type (line 1480)
        # Getting the type of 'trans' (line 1480)
        trans_236225 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1480, 25), 'trans', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1480, 13), tuple_236222, trans_236225)
        # Adding element type (line 1480)
        # Getting the type of 'ob' (line 1480)
        ob_236226 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1480, 32), 'ob', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1480, 13), tuple_236222, ob_236226)
        # Adding element type (line 1480)
        
        # Call to get_joinstyle(...): (line 1480)
        # Processing the call keyword arguments (line 1480)
        kwargs_236229 = {}
        # Getting the type of 'gc' (line 1480)
        gc_236227 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1480, 36), 'gc', False)
        # Obtaining the member 'get_joinstyle' of a type (line 1480)
        get_joinstyle_236228 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1480, 36), gc_236227, 'get_joinstyle')
        # Calling get_joinstyle(args, kwargs) (line 1480)
        get_joinstyle_call_result_236230 = invoke(stypy.reporting.localization.Localization(__file__, 1480, 36), get_joinstyle_236228, *[], **kwargs_236229)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1480, 13), tuple_236222, get_joinstyle_call_result_236230)
        # Adding element type (line 1480)
        
        # Call to get_capstyle(...): (line 1480)
        # Processing the call keyword arguments (line 1480)
        kwargs_236233 = {}
        # Getting the type of 'gc' (line 1480)
        gc_236231 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1480, 56), 'gc', False)
        # Obtaining the member 'get_capstyle' of a type (line 1480)
        get_capstyle_236232 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1480, 56), gc_236231, 'get_capstyle')
        # Calling get_capstyle(args, kwargs) (line 1480)
        get_capstyle_call_result_236234 = invoke(stypy.reporting.localization.Localization(__file__, 1480, 56), get_capstyle_236232, *[], **kwargs_236233)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1480, 13), tuple_236222, get_capstyle_call_result_236234)
        # Adding element type (line 1480)
        # Getting the type of 'padding' (line 1481)
        padding_236235 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1481, 13), 'padding', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1480, 13), tuple_236222, padding_236235)
        # Adding element type (line 1480)
        # Getting the type of 'filled' (line 1481)
        filled_236236 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1481, 22), 'filled', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1480, 13), tuple_236222, filled_236236)
        # Adding element type (line 1480)
        # Getting the type of 'stroked' (line 1481)
        stroked_236237 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1481, 30), 'stroked', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1480, 13), tuple_236222, stroked_236237)
        
        # Processing the call keyword arguments (line 1479)
        kwargs_236238 = {}
        # Getting the type of 'self' (line 1479)
        self_236219 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1479, 8), 'self', False)
        # Obtaining the member 'paths' of a type (line 1479)
        paths_236220 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1479, 8), self_236219, 'paths')
        # Obtaining the member 'append' of a type (line 1479)
        append_236221 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1479, 8), paths_236220, 'append')
        # Calling append(args, kwargs) (line 1479)
        append_call_result_236239 = invoke(stypy.reporting.localization.Localization(__file__, 1479, 8), append_236221, *[tuple_236222], **kwargs_236238)
        
        # Getting the type of 'name' (line 1482)
        name_236240 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1482, 15), 'name')
        # Assigning a type to the variable 'stypy_return_type' (line 1482)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1482, 8), 'stypy_return_type', name_236240)
        
        # ################# End of 'pathCollectionObject(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'pathCollectionObject' in the type store
        # Getting the type of 'stypy_return_type' (line 1476)
        stypy_return_type_236241 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1476, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_236241)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'pathCollectionObject'
        return stypy_return_type_236241


    @norecursion
    def writePathCollectionTemplates(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'writePathCollectionTemplates'
        module_type_store = module_type_store.open_function_context('writePathCollectionTemplates', 1484, 4, False)
        # Assigning a type to the variable 'self' (line 1485)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1485, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        PdfFile.writePathCollectionTemplates.__dict__.__setitem__('stypy_localization', localization)
        PdfFile.writePathCollectionTemplates.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        PdfFile.writePathCollectionTemplates.__dict__.__setitem__('stypy_type_store', module_type_store)
        PdfFile.writePathCollectionTemplates.__dict__.__setitem__('stypy_function_name', 'PdfFile.writePathCollectionTemplates')
        PdfFile.writePathCollectionTemplates.__dict__.__setitem__('stypy_param_names_list', [])
        PdfFile.writePathCollectionTemplates.__dict__.__setitem__('stypy_varargs_param_name', None)
        PdfFile.writePathCollectionTemplates.__dict__.__setitem__('stypy_kwargs_param_name', None)
        PdfFile.writePathCollectionTemplates.__dict__.__setitem__('stypy_call_defaults', defaults)
        PdfFile.writePathCollectionTemplates.__dict__.__setitem__('stypy_call_varargs', varargs)
        PdfFile.writePathCollectionTemplates.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        PdfFile.writePathCollectionTemplates.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'PdfFile.writePathCollectionTemplates', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'writePathCollectionTemplates', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'writePathCollectionTemplates(...)' code ##################

        
        # Getting the type of 'self' (line 1486)
        self_236242 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1486, 25), 'self')
        # Obtaining the member 'paths' of a type (line 1486)
        paths_236243 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1486, 25), self_236242, 'paths')
        # Testing the type of a for loop iterable (line 1485)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1485, 8), paths_236243)
        # Getting the type of the for loop variable (line 1485)
        for_loop_var_236244 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1485, 8), paths_236243)
        # Assigning a type to the variable 'name' (line 1485)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1485, 8), 'name', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1485, 8), for_loop_var_236244))
        # Assigning a type to the variable 'path' (line 1485)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1485, 8), 'path', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1485, 8), for_loop_var_236244))
        # Assigning a type to the variable 'trans' (line 1485)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1485, 8), 'trans', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1485, 8), for_loop_var_236244))
        # Assigning a type to the variable 'ob' (line 1485)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1485, 8), 'ob', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1485, 8), for_loop_var_236244))
        # Assigning a type to the variable 'joinstyle' (line 1485)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1485, 8), 'joinstyle', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1485, 8), for_loop_var_236244))
        # Assigning a type to the variable 'capstyle' (line 1485)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1485, 8), 'capstyle', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1485, 8), for_loop_var_236244))
        # Assigning a type to the variable 'padding' (line 1485)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1485, 8), 'padding', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1485, 8), for_loop_var_236244))
        # Assigning a type to the variable 'filled' (line 1485)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1485, 8), 'filled', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1485, 8), for_loop_var_236244))
        # Assigning a type to the variable 'stroked' (line 1485)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1485, 8), 'stroked', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1485, 8), for_loop_var_236244))
        # SSA begins for a for statement (line 1485)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 1487):
        
        # Assigning a Call to a Name (line 1487):
        
        # Call to pathOperations(...): (line 1487)
        # Processing the call arguments (line 1487)
        # Getting the type of 'path' (line 1487)
        path_236247 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1487, 42), 'path', False)
        # Getting the type of 'trans' (line 1487)
        trans_236248 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1487, 48), 'trans', False)
        # Processing the call keyword arguments (line 1487)
        # Getting the type of 'False' (line 1487)
        False_236249 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1487, 64), 'False', False)
        keyword_236250 = False_236249
        kwargs_236251 = {'simplify': keyword_236250}
        # Getting the type of 'self' (line 1487)
        self_236245 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1487, 22), 'self', False)
        # Obtaining the member 'pathOperations' of a type (line 1487)
        pathOperations_236246 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1487, 22), self_236245, 'pathOperations')
        # Calling pathOperations(args, kwargs) (line 1487)
        pathOperations_call_result_236252 = invoke(stypy.reporting.localization.Localization(__file__, 1487, 22), pathOperations_236246, *[path_236247, trans_236248], **kwargs_236251)
        
        # Assigning a type to the variable 'pathops' (line 1487)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1487, 12), 'pathops', pathOperations_call_result_236252)
        
        # Assigning a Call to a Name (line 1488):
        
        # Assigning a Call to a Name (line 1488):
        
        # Call to get_extents(...): (line 1488)
        # Processing the call arguments (line 1488)
        # Getting the type of 'trans' (line 1488)
        trans_236255 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1488, 36), 'trans', False)
        # Processing the call keyword arguments (line 1488)
        kwargs_236256 = {}
        # Getting the type of 'path' (line 1488)
        path_236253 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1488, 19), 'path', False)
        # Obtaining the member 'get_extents' of a type (line 1488)
        get_extents_236254 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1488, 19), path_236253, 'get_extents')
        # Calling get_extents(args, kwargs) (line 1488)
        get_extents_call_result_236257 = invoke(stypy.reporting.localization.Localization(__file__, 1488, 19), get_extents_236254, *[trans_236255], **kwargs_236256)
        
        # Assigning a type to the variable 'bbox' (line 1488)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1488, 12), 'bbox', get_extents_call_result_236257)
        
        
        
        # Call to all(...): (line 1489)
        # Processing the call arguments (line 1489)
        
        # Call to isfinite(...): (line 1489)
        # Processing the call arguments (line 1489)
        # Getting the type of 'bbox' (line 1489)
        bbox_236262 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1489, 38), 'bbox', False)
        # Obtaining the member 'extents' of a type (line 1489)
        extents_236263 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1489, 38), bbox_236262, 'extents')
        # Processing the call keyword arguments (line 1489)
        kwargs_236264 = {}
        # Getting the type of 'np' (line 1489)
        np_236260 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1489, 26), 'np', False)
        # Obtaining the member 'isfinite' of a type (line 1489)
        isfinite_236261 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1489, 26), np_236260, 'isfinite')
        # Calling isfinite(args, kwargs) (line 1489)
        isfinite_call_result_236265 = invoke(stypy.reporting.localization.Localization(__file__, 1489, 26), isfinite_236261, *[extents_236263], **kwargs_236264)
        
        # Processing the call keyword arguments (line 1489)
        kwargs_236266 = {}
        # Getting the type of 'np' (line 1489)
        np_236258 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1489, 19), 'np', False)
        # Obtaining the member 'all' of a type (line 1489)
        all_236259 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1489, 19), np_236258, 'all')
        # Calling all(args, kwargs) (line 1489)
        all_call_result_236267 = invoke(stypy.reporting.localization.Localization(__file__, 1489, 19), all_236259, *[isfinite_call_result_236265], **kwargs_236266)
        
        # Applying the 'not' unary operator (line 1489)
        result_not__236268 = python_operator(stypy.reporting.localization.Localization(__file__, 1489, 15), 'not', all_call_result_236267)
        
        # Testing the type of an if condition (line 1489)
        if_condition_236269 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1489, 12), result_not__236268)
        # Assigning a type to the variable 'if_condition_236269' (line 1489)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1489, 12), 'if_condition_236269', if_condition_236269)
        # SSA begins for if statement (line 1489)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a List to a Name (line 1490):
        
        # Assigning a List to a Name (line 1490):
        
        # Obtaining an instance of the builtin type 'list' (line 1490)
        list_236270 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1490, 26), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1490)
        # Adding element type (line 1490)
        int_236271 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1490, 27), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1490, 26), list_236270, int_236271)
        # Adding element type (line 1490)
        int_236272 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1490, 30), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1490, 26), list_236270, int_236272)
        # Adding element type (line 1490)
        int_236273 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1490, 33), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1490, 26), list_236270, int_236273)
        # Adding element type (line 1490)
        int_236274 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1490, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1490, 26), list_236270, int_236274)
        
        # Assigning a type to the variable 'extents' (line 1490)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1490, 16), 'extents', list_236270)
        # SSA branch for the else part of an if statement (line 1489)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Call to a Name (line 1492):
        
        # Assigning a Call to a Name (line 1492):
        
        # Call to padded(...): (line 1492)
        # Processing the call arguments (line 1492)
        # Getting the type of 'padding' (line 1492)
        padding_236277 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1492, 35), 'padding', False)
        # Processing the call keyword arguments (line 1492)
        kwargs_236278 = {}
        # Getting the type of 'bbox' (line 1492)
        bbox_236275 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1492, 23), 'bbox', False)
        # Obtaining the member 'padded' of a type (line 1492)
        padded_236276 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1492, 23), bbox_236275, 'padded')
        # Calling padded(args, kwargs) (line 1492)
        padded_call_result_236279 = invoke(stypy.reporting.localization.Localization(__file__, 1492, 23), padded_236276, *[padding_236277], **kwargs_236278)
        
        # Assigning a type to the variable 'bbox' (line 1492)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1492, 16), 'bbox', padded_call_result_236279)
        
        # Assigning a Call to a Name (line 1493):
        
        # Assigning a Call to a Name (line 1493):
        
        # Call to list(...): (line 1493)
        # Processing the call arguments (line 1493)
        # Getting the type of 'bbox' (line 1493)
        bbox_236281 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1493, 31), 'bbox', False)
        # Obtaining the member 'extents' of a type (line 1493)
        extents_236282 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1493, 31), bbox_236281, 'extents')
        # Processing the call keyword arguments (line 1493)
        kwargs_236283 = {}
        # Getting the type of 'list' (line 1493)
        list_236280 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1493, 26), 'list', False)
        # Calling list(args, kwargs) (line 1493)
        list_call_result_236284 = invoke(stypy.reporting.localization.Localization(__file__, 1493, 26), list_236280, *[extents_236282], **kwargs_236283)
        
        # Assigning a type to the variable 'extents' (line 1493)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1493, 16), 'extents', list_call_result_236284)
        # SSA join for if statement (line 1489)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to beginStream(...): (line 1494)
        # Processing the call arguments (line 1494)
        # Getting the type of 'ob' (line 1495)
        ob_236287 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1495, 16), 'ob', False)
        # Obtaining the member 'id' of a type (line 1495)
        id_236288 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1495, 16), ob_236287, 'id')
        # Getting the type of 'None' (line 1495)
        None_236289 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1495, 23), 'None', False)
        
        # Obtaining an instance of the builtin type 'dict' (line 1496)
        dict_236290 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1496, 16), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 1496)
        # Adding element type (key, value) (line 1496)
        unicode_236291 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1496, 17), 'unicode', u'Type')
        
        # Call to Name(...): (line 1496)
        # Processing the call arguments (line 1496)
        unicode_236293 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1496, 30), 'unicode', u'XObject')
        # Processing the call keyword arguments (line 1496)
        kwargs_236294 = {}
        # Getting the type of 'Name' (line 1496)
        Name_236292 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1496, 25), 'Name', False)
        # Calling Name(args, kwargs) (line 1496)
        Name_call_result_236295 = invoke(stypy.reporting.localization.Localization(__file__, 1496, 25), Name_236292, *[unicode_236293], **kwargs_236294)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1496, 16), dict_236290, (unicode_236291, Name_call_result_236295))
        # Adding element type (key, value) (line 1496)
        unicode_236296 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1496, 42), 'unicode', u'Subtype')
        
        # Call to Name(...): (line 1496)
        # Processing the call arguments (line 1496)
        unicode_236298 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1496, 58), 'unicode', u'Form')
        # Processing the call keyword arguments (line 1496)
        kwargs_236299 = {}
        # Getting the type of 'Name' (line 1496)
        Name_236297 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1496, 53), 'Name', False)
        # Calling Name(args, kwargs) (line 1496)
        Name_call_result_236300 = invoke(stypy.reporting.localization.Localization(__file__, 1496, 53), Name_236297, *[unicode_236298], **kwargs_236299)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1496, 16), dict_236290, (unicode_236296, Name_call_result_236300))
        # Adding element type (key, value) (line 1496)
        unicode_236301 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1497, 17), 'unicode', u'BBox')
        # Getting the type of 'extents' (line 1497)
        extents_236302 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1497, 25), 'extents', False)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1496, 16), dict_236290, (unicode_236301, extents_236302))
        
        # Processing the call keyword arguments (line 1494)
        kwargs_236303 = {}
        # Getting the type of 'self' (line 1494)
        self_236285 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1494, 12), 'self', False)
        # Obtaining the member 'beginStream' of a type (line 1494)
        beginStream_236286 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1494, 12), self_236285, 'beginStream')
        # Calling beginStream(args, kwargs) (line 1494)
        beginStream_call_result_236304 = invoke(stypy.reporting.localization.Localization(__file__, 1494, 12), beginStream_236286, *[id_236288, None_236289, dict_236290], **kwargs_236303)
        
        
        # Call to output(...): (line 1498)
        # Processing the call arguments (line 1498)
        
        # Obtaining the type of the subscript
        # Getting the type of 'joinstyle' (line 1498)
        joinstyle_236307 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1498, 54), 'joinstyle', False)
        # Getting the type of 'GraphicsContextPdf' (line 1498)
        GraphicsContextPdf_236308 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1498, 24), 'GraphicsContextPdf', False)
        # Obtaining the member 'joinstyles' of a type (line 1498)
        joinstyles_236309 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1498, 24), GraphicsContextPdf_236308, 'joinstyles')
        # Obtaining the member '__getitem__' of a type (line 1498)
        getitem___236310 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1498, 24), joinstyles_236309, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1498)
        subscript_call_result_236311 = invoke(stypy.reporting.localization.Localization(__file__, 1498, 24), getitem___236310, joinstyle_236307)
        
        # Getting the type of 'Op' (line 1499)
        Op_236312 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1499, 24), 'Op', False)
        # Obtaining the member 'setlinejoin' of a type (line 1499)
        setlinejoin_236313 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1499, 24), Op_236312, 'setlinejoin')
        # Processing the call keyword arguments (line 1498)
        kwargs_236314 = {}
        # Getting the type of 'self' (line 1498)
        self_236305 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1498, 12), 'self', False)
        # Obtaining the member 'output' of a type (line 1498)
        output_236306 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1498, 12), self_236305, 'output')
        # Calling output(args, kwargs) (line 1498)
        output_call_result_236315 = invoke(stypy.reporting.localization.Localization(__file__, 1498, 12), output_236306, *[subscript_call_result_236311, setlinejoin_236313], **kwargs_236314)
        
        
        # Call to output(...): (line 1500)
        # Processing the call arguments (line 1500)
        
        # Obtaining the type of the subscript
        # Getting the type of 'capstyle' (line 1500)
        capstyle_236318 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1500, 53), 'capstyle', False)
        # Getting the type of 'GraphicsContextPdf' (line 1500)
        GraphicsContextPdf_236319 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1500, 24), 'GraphicsContextPdf', False)
        # Obtaining the member 'capstyles' of a type (line 1500)
        capstyles_236320 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1500, 24), GraphicsContextPdf_236319, 'capstyles')
        # Obtaining the member '__getitem__' of a type (line 1500)
        getitem___236321 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1500, 24), capstyles_236320, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1500)
        subscript_call_result_236322 = invoke(stypy.reporting.localization.Localization(__file__, 1500, 24), getitem___236321, capstyle_236318)
        
        # Getting the type of 'Op' (line 1500)
        Op_236323 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1500, 64), 'Op', False)
        # Obtaining the member 'setlinecap' of a type (line 1500)
        setlinecap_236324 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1500, 64), Op_236323, 'setlinecap')
        # Processing the call keyword arguments (line 1500)
        kwargs_236325 = {}
        # Getting the type of 'self' (line 1500)
        self_236316 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1500, 12), 'self', False)
        # Obtaining the member 'output' of a type (line 1500)
        output_236317 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1500, 12), self_236316, 'output')
        # Calling output(args, kwargs) (line 1500)
        output_call_result_236326 = invoke(stypy.reporting.localization.Localization(__file__, 1500, 12), output_236317, *[subscript_call_result_236322, setlinecap_236324], **kwargs_236325)
        
        
        # Call to output(...): (line 1501)
        # Getting the type of 'pathops' (line 1501)
        pathops_236329 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1501, 25), 'pathops', False)
        # Processing the call keyword arguments (line 1501)
        kwargs_236330 = {}
        # Getting the type of 'self' (line 1501)
        self_236327 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1501, 12), 'self', False)
        # Obtaining the member 'output' of a type (line 1501)
        output_236328 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1501, 12), self_236327, 'output')
        # Calling output(args, kwargs) (line 1501)
        output_call_result_236331 = invoke(stypy.reporting.localization.Localization(__file__, 1501, 12), output_236328, *[pathops_236329], **kwargs_236330)
        
        
        # Call to output(...): (line 1502)
        # Processing the call arguments (line 1502)
        
        # Call to paint_path(...): (line 1502)
        # Processing the call arguments (line 1502)
        # Getting the type of 'filled' (line 1502)
        filled_236336 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1502, 38), 'filled', False)
        # Getting the type of 'stroked' (line 1502)
        stroked_236337 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1502, 46), 'stroked', False)
        # Processing the call keyword arguments (line 1502)
        kwargs_236338 = {}
        # Getting the type of 'Op' (line 1502)
        Op_236334 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1502, 24), 'Op', False)
        # Obtaining the member 'paint_path' of a type (line 1502)
        paint_path_236335 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1502, 24), Op_236334, 'paint_path')
        # Calling paint_path(args, kwargs) (line 1502)
        paint_path_call_result_236339 = invoke(stypy.reporting.localization.Localization(__file__, 1502, 24), paint_path_236335, *[filled_236336, stroked_236337], **kwargs_236338)
        
        # Processing the call keyword arguments (line 1502)
        kwargs_236340 = {}
        # Getting the type of 'self' (line 1502)
        self_236332 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1502, 12), 'self', False)
        # Obtaining the member 'output' of a type (line 1502)
        output_236333 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1502, 12), self_236332, 'output')
        # Calling output(args, kwargs) (line 1502)
        output_call_result_236341 = invoke(stypy.reporting.localization.Localization(__file__, 1502, 12), output_236333, *[paint_path_call_result_236339], **kwargs_236340)
        
        
        # Call to endStream(...): (line 1503)
        # Processing the call keyword arguments (line 1503)
        kwargs_236344 = {}
        # Getting the type of 'self' (line 1503)
        self_236342 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1503, 12), 'self', False)
        # Obtaining the member 'endStream' of a type (line 1503)
        endStream_236343 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1503, 12), self_236342, 'endStream')
        # Calling endStream(args, kwargs) (line 1503)
        endStream_call_result_236345 = invoke(stypy.reporting.localization.Localization(__file__, 1503, 12), endStream_236343, *[], **kwargs_236344)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'writePathCollectionTemplates(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'writePathCollectionTemplates' in the type store
        # Getting the type of 'stypy_return_type' (line 1484)
        stypy_return_type_236346 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1484, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_236346)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'writePathCollectionTemplates'
        return stypy_return_type_236346


    @staticmethod
    @norecursion
    def pathOperations(localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'None' (line 1506)
        None_236347 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1506, 45), 'None')
        # Getting the type of 'None' (line 1506)
        None_236348 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1506, 60), 'None')
        # Getting the type of 'None' (line 1506)
        None_236349 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1506, 73), 'None')
        defaults = [None_236347, None_236348, None_236349]
        # Create a new context for function 'pathOperations'
        module_type_store = module_type_store.open_function_context('pathOperations', 1505, 4, False)
        
        # Passed parameters checking function
        PdfFile.pathOperations.__dict__.__setitem__('stypy_localization', localization)
        PdfFile.pathOperations.__dict__.__setitem__('stypy_type_of_self', None)
        PdfFile.pathOperations.__dict__.__setitem__('stypy_type_store', module_type_store)
        PdfFile.pathOperations.__dict__.__setitem__('stypy_function_name', 'pathOperations')
        PdfFile.pathOperations.__dict__.__setitem__('stypy_param_names_list', ['path', 'transform', 'clip', 'simplify', 'sketch'])
        PdfFile.pathOperations.__dict__.__setitem__('stypy_varargs_param_name', None)
        PdfFile.pathOperations.__dict__.__setitem__('stypy_kwargs_param_name', None)
        PdfFile.pathOperations.__dict__.__setitem__('stypy_call_defaults', defaults)
        PdfFile.pathOperations.__dict__.__setitem__('stypy_call_varargs', varargs)
        PdfFile.pathOperations.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        PdfFile.pathOperations.__dict__.__setitem__('stypy_declared_arg_number', 5)
        arguments = process_argument_values(localization, None, module_type_store, 'pathOperations', ['path', 'transform', 'clip', 'simplify', 'sketch'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'pathOperations', localization, ['transform', 'clip', 'simplify', 'sketch'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'pathOperations(...)' code ##################

        
        # Obtaining an instance of the builtin type 'list' (line 1507)
        list_236350 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1507, 15), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1507)
        # Adding element type (line 1507)
        
        # Call to Verbatim(...): (line 1507)
        # Processing the call arguments (line 1507)
        
        # Call to convert_to_string(...): (line 1507)
        # Processing the call arguments (line 1507)
        # Getting the type of 'path' (line 1508)
        path_236354 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1508, 12), 'path', False)
        # Getting the type of 'transform' (line 1508)
        transform_236355 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1508, 18), 'transform', False)
        # Getting the type of 'clip' (line 1508)
        clip_236356 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1508, 29), 'clip', False)
        # Getting the type of 'simplify' (line 1508)
        simplify_236357 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1508, 35), 'simplify', False)
        # Getting the type of 'sketch' (line 1508)
        sketch_236358 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1508, 45), 'sketch', False)
        int_236359 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1509, 12), 'int')
        
        # Obtaining an instance of the builtin type 'list' (line 1510)
        list_236360 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1510, 12), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1510)
        # Adding element type (line 1510)
        # Getting the type of 'Op' (line 1510)
        Op_236361 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1510, 13), 'Op', False)
        # Obtaining the member 'moveto' of a type (line 1510)
        moveto_236362 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1510, 13), Op_236361, 'moveto')
        # Obtaining the member 'op' of a type (line 1510)
        op_236363 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1510, 13), moveto_236362, 'op')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1510, 12), list_236360, op_236363)
        # Adding element type (line 1510)
        # Getting the type of 'Op' (line 1510)
        Op_236364 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1510, 27), 'Op', False)
        # Obtaining the member 'lineto' of a type (line 1510)
        lineto_236365 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1510, 27), Op_236364, 'lineto')
        # Obtaining the member 'op' of a type (line 1510)
        op_236366 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1510, 27), lineto_236365, 'op')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1510, 12), list_236360, op_236366)
        # Adding element type (line 1510)
        str_236367 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1510, 41), 'str', '')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1510, 12), list_236360, str_236367)
        # Adding element type (line 1510)
        # Getting the type of 'Op' (line 1510)
        Op_236368 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1510, 46), 'Op', False)
        # Obtaining the member 'curveto' of a type (line 1510)
        curveto_236369 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1510, 46), Op_236368, 'curveto')
        # Obtaining the member 'op' of a type (line 1510)
        op_236370 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1510, 46), curveto_236369, 'op')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1510, 12), list_236360, op_236370)
        # Adding element type (line 1510)
        # Getting the type of 'Op' (line 1510)
        Op_236371 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1510, 61), 'Op', False)
        # Obtaining the member 'closepath' of a type (line 1510)
        closepath_236372 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1510, 61), Op_236371, 'closepath')
        # Obtaining the member 'op' of a type (line 1510)
        op_236373 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1510, 61), closepath_236372, 'op')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1510, 12), list_236360, op_236373)
        
        # Getting the type of 'True' (line 1511)
        True_236374 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1511, 12), 'True', False)
        # Processing the call keyword arguments (line 1507)
        kwargs_236375 = {}
        # Getting the type of '_path' (line 1507)
        _path_236352 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1507, 25), '_path', False)
        # Obtaining the member 'convert_to_string' of a type (line 1507)
        convert_to_string_236353 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1507, 25), _path_236352, 'convert_to_string')
        # Calling convert_to_string(args, kwargs) (line 1507)
        convert_to_string_call_result_236376 = invoke(stypy.reporting.localization.Localization(__file__, 1507, 25), convert_to_string_236353, *[path_236354, transform_236355, clip_236356, simplify_236357, sketch_236358, int_236359, list_236360, True_236374], **kwargs_236375)
        
        # Processing the call keyword arguments (line 1507)
        kwargs_236377 = {}
        # Getting the type of 'Verbatim' (line 1507)
        Verbatim_236351 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1507, 16), 'Verbatim', False)
        # Calling Verbatim(args, kwargs) (line 1507)
        Verbatim_call_result_236378 = invoke(stypy.reporting.localization.Localization(__file__, 1507, 16), Verbatim_236351, *[convert_to_string_call_result_236376], **kwargs_236377)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1507, 15), list_236350, Verbatim_call_result_236378)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1507)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1507, 8), 'stypy_return_type', list_236350)
        
        # ################# End of 'pathOperations(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'pathOperations' in the type store
        # Getting the type of 'stypy_return_type' (line 1505)
        stypy_return_type_236379 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1505, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_236379)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'pathOperations'
        return stypy_return_type_236379


    @norecursion
    def writePath(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'False' (line 1513)
        False_236380 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1513, 46), 'False')
        # Getting the type of 'None' (line 1513)
        None_236381 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1513, 60), 'None')
        defaults = [False_236380, None_236381]
        # Create a new context for function 'writePath'
        module_type_store = module_type_store.open_function_context('writePath', 1513, 4, False)
        # Assigning a type to the variable 'self' (line 1514)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1514, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        PdfFile.writePath.__dict__.__setitem__('stypy_localization', localization)
        PdfFile.writePath.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        PdfFile.writePath.__dict__.__setitem__('stypy_type_store', module_type_store)
        PdfFile.writePath.__dict__.__setitem__('stypy_function_name', 'PdfFile.writePath')
        PdfFile.writePath.__dict__.__setitem__('stypy_param_names_list', ['path', 'transform', 'clip', 'sketch'])
        PdfFile.writePath.__dict__.__setitem__('stypy_varargs_param_name', None)
        PdfFile.writePath.__dict__.__setitem__('stypy_kwargs_param_name', None)
        PdfFile.writePath.__dict__.__setitem__('stypy_call_defaults', defaults)
        PdfFile.writePath.__dict__.__setitem__('stypy_call_varargs', varargs)
        PdfFile.writePath.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        PdfFile.writePath.__dict__.__setitem__('stypy_declared_arg_number', 5)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'PdfFile.writePath', ['path', 'transform', 'clip', 'sketch'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'writePath', localization, ['path', 'transform', 'clip', 'sketch'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'writePath(...)' code ##################

        
        # Getting the type of 'clip' (line 1514)
        clip_236382 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1514, 11), 'clip')
        # Testing the type of an if condition (line 1514)
        if_condition_236383 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1514, 8), clip_236382)
        # Assigning a type to the variable 'if_condition_236383' (line 1514)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1514, 8), 'if_condition_236383', if_condition_236383)
        # SSA begins for if statement (line 1514)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Tuple to a Name (line 1515):
        
        # Assigning a Tuple to a Name (line 1515):
        
        # Obtaining an instance of the builtin type 'tuple' (line 1515)
        tuple_236384 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1515, 20), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1515)
        # Adding element type (line 1515)
        float_236385 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1515, 20), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1515, 20), tuple_236384, float_236385)
        # Adding element type (line 1515)
        float_236386 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1515, 25), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1515, 20), tuple_236384, float_236386)
        # Adding element type (line 1515)
        # Getting the type of 'self' (line 1515)
        self_236387 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1515, 30), 'self')
        # Obtaining the member 'width' of a type (line 1515)
        width_236388 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1515, 30), self_236387, 'width')
        int_236389 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1515, 43), 'int')
        # Applying the binary operator '*' (line 1515)
        result_mul_236390 = python_operator(stypy.reporting.localization.Localization(__file__, 1515, 30), '*', width_236388, int_236389)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1515, 20), tuple_236384, result_mul_236390)
        # Adding element type (line 1515)
        # Getting the type of 'self' (line 1515)
        self_236391 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1515, 47), 'self')
        # Obtaining the member 'height' of a type (line 1515)
        height_236392 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1515, 47), self_236391, 'height')
        int_236393 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1515, 61), 'int')
        # Applying the binary operator '*' (line 1515)
        result_mul_236394 = python_operator(stypy.reporting.localization.Localization(__file__, 1515, 47), '*', height_236392, int_236393)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1515, 20), tuple_236384, result_mul_236394)
        
        # Assigning a type to the variable 'clip' (line 1515)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1515, 12), 'clip', tuple_236384)
        
        # Assigning a Attribute to a Name (line 1516):
        
        # Assigning a Attribute to a Name (line 1516):
        # Getting the type of 'path' (line 1516)
        path_236395 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1516, 23), 'path')
        # Obtaining the member 'should_simplify' of a type (line 1516)
        should_simplify_236396 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1516, 23), path_236395, 'should_simplify')
        # Assigning a type to the variable 'simplify' (line 1516)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1516, 12), 'simplify', should_simplify_236396)
        # SSA branch for the else part of an if statement (line 1514)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Name to a Name (line 1518):
        
        # Assigning a Name to a Name (line 1518):
        # Getting the type of 'None' (line 1518)
        None_236397 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1518, 19), 'None')
        # Assigning a type to the variable 'clip' (line 1518)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1518, 12), 'clip', None_236397)
        
        # Assigning a Name to a Name (line 1519):
        
        # Assigning a Name to a Name (line 1519):
        # Getting the type of 'False' (line 1519)
        False_236398 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1519, 23), 'False')
        # Assigning a type to the variable 'simplify' (line 1519)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1519, 12), 'simplify', False_236398)
        # SSA join for if statement (line 1514)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 1520):
        
        # Assigning a Call to a Name (line 1520):
        
        # Call to pathOperations(...): (line 1520)
        # Processing the call arguments (line 1520)
        # Getting the type of 'path' (line 1520)
        path_236401 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1520, 35), 'path', False)
        # Getting the type of 'transform' (line 1520)
        transform_236402 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1520, 41), 'transform', False)
        # Getting the type of 'clip' (line 1520)
        clip_236403 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1520, 52), 'clip', False)
        # Processing the call keyword arguments (line 1520)
        # Getting the type of 'simplify' (line 1520)
        simplify_236404 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1520, 67), 'simplify', False)
        keyword_236405 = simplify_236404
        # Getting the type of 'sketch' (line 1521)
        sketch_236406 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1521, 42), 'sketch', False)
        keyword_236407 = sketch_236406
        kwargs_236408 = {'simplify': keyword_236405, 'sketch': keyword_236407}
        # Getting the type of 'self' (line 1520)
        self_236399 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1520, 15), 'self', False)
        # Obtaining the member 'pathOperations' of a type (line 1520)
        pathOperations_236400 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1520, 15), self_236399, 'pathOperations')
        # Calling pathOperations(args, kwargs) (line 1520)
        pathOperations_call_result_236409 = invoke(stypy.reporting.localization.Localization(__file__, 1520, 15), pathOperations_236400, *[path_236401, transform_236402, clip_236403], **kwargs_236408)
        
        # Assigning a type to the variable 'cmds' (line 1520)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1520, 8), 'cmds', pathOperations_call_result_236409)
        
        # Call to output(...): (line 1522)
        # Getting the type of 'cmds' (line 1522)
        cmds_236412 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1522, 21), 'cmds', False)
        # Processing the call keyword arguments (line 1522)
        kwargs_236413 = {}
        # Getting the type of 'self' (line 1522)
        self_236410 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1522, 8), 'self', False)
        # Obtaining the member 'output' of a type (line 1522)
        output_236411 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1522, 8), self_236410, 'output')
        # Calling output(args, kwargs) (line 1522)
        output_call_result_236414 = invoke(stypy.reporting.localization.Localization(__file__, 1522, 8), output_236411, *[cmds_236412], **kwargs_236413)
        
        
        # ################# End of 'writePath(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'writePath' in the type store
        # Getting the type of 'stypy_return_type' (line 1513)
        stypy_return_type_236415 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1513, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_236415)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'writePath'
        return stypy_return_type_236415


    @norecursion
    def reserveObject(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        unicode_236416 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1524, 33), 'unicode', u'')
        defaults = [unicode_236416]
        # Create a new context for function 'reserveObject'
        module_type_store = module_type_store.open_function_context('reserveObject', 1524, 4, False)
        # Assigning a type to the variable 'self' (line 1525)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1525, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        PdfFile.reserveObject.__dict__.__setitem__('stypy_localization', localization)
        PdfFile.reserveObject.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        PdfFile.reserveObject.__dict__.__setitem__('stypy_type_store', module_type_store)
        PdfFile.reserveObject.__dict__.__setitem__('stypy_function_name', 'PdfFile.reserveObject')
        PdfFile.reserveObject.__dict__.__setitem__('stypy_param_names_list', ['name'])
        PdfFile.reserveObject.__dict__.__setitem__('stypy_varargs_param_name', None)
        PdfFile.reserveObject.__dict__.__setitem__('stypy_kwargs_param_name', None)
        PdfFile.reserveObject.__dict__.__setitem__('stypy_call_defaults', defaults)
        PdfFile.reserveObject.__dict__.__setitem__('stypy_call_varargs', varargs)
        PdfFile.reserveObject.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        PdfFile.reserveObject.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'PdfFile.reserveObject', ['name'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'reserveObject', localization, ['name'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'reserveObject(...)' code ##################

        unicode_236417 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1528, (-1)), 'unicode', u'Reserve an ID for an indirect object.\n        The name is used for debugging in case we forget to print out\n        the object with writeObject.\n        ')
        
        # Assigning a Attribute to a Name (line 1530):
        
        # Assigning a Attribute to a Name (line 1530):
        # Getting the type of 'self' (line 1530)
        self_236418 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1530, 13), 'self')
        # Obtaining the member 'nextObject' of a type (line 1530)
        nextObject_236419 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1530, 13), self_236418, 'nextObject')
        # Assigning a type to the variable 'id' (line 1530)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1530, 8), 'id', nextObject_236419)
        
        # Getting the type of 'self' (line 1531)
        self_236420 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1531, 8), 'self')
        # Obtaining the member 'nextObject' of a type (line 1531)
        nextObject_236421 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1531, 8), self_236420, 'nextObject')
        int_236422 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1531, 27), 'int')
        # Applying the binary operator '+=' (line 1531)
        result_iadd_236423 = python_operator(stypy.reporting.localization.Localization(__file__, 1531, 8), '+=', nextObject_236421, int_236422)
        # Getting the type of 'self' (line 1531)
        self_236424 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1531, 8), 'self')
        # Setting the type of the member 'nextObject' of a type (line 1531)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1531, 8), self_236424, 'nextObject', result_iadd_236423)
        
        
        # Call to append(...): (line 1532)
        # Processing the call arguments (line 1532)
        
        # Obtaining an instance of the builtin type 'list' (line 1532)
        list_236428 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1532, 30), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1532)
        # Adding element type (line 1532)
        # Getting the type of 'None' (line 1532)
        None_236429 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1532, 31), 'None', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1532, 30), list_236428, None_236429)
        # Adding element type (line 1532)
        int_236430 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1532, 37), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1532, 30), list_236428, int_236430)
        # Adding element type (line 1532)
        # Getting the type of 'name' (line 1532)
        name_236431 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1532, 40), 'name', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1532, 30), list_236428, name_236431)
        
        # Processing the call keyword arguments (line 1532)
        kwargs_236432 = {}
        # Getting the type of 'self' (line 1532)
        self_236425 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1532, 8), 'self', False)
        # Obtaining the member 'xrefTable' of a type (line 1532)
        xrefTable_236426 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1532, 8), self_236425, 'xrefTable')
        # Obtaining the member 'append' of a type (line 1532)
        append_236427 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1532, 8), xrefTable_236426, 'append')
        # Calling append(args, kwargs) (line 1532)
        append_call_result_236433 = invoke(stypy.reporting.localization.Localization(__file__, 1532, 8), append_236427, *[list_236428], **kwargs_236432)
        
        
        # Call to Reference(...): (line 1533)
        # Processing the call arguments (line 1533)
        # Getting the type of 'id' (line 1533)
        id_236435 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1533, 25), 'id', False)
        # Processing the call keyword arguments (line 1533)
        kwargs_236436 = {}
        # Getting the type of 'Reference' (line 1533)
        Reference_236434 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1533, 15), 'Reference', False)
        # Calling Reference(args, kwargs) (line 1533)
        Reference_call_result_236437 = invoke(stypy.reporting.localization.Localization(__file__, 1533, 15), Reference_236434, *[id_236435], **kwargs_236436)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1533)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1533, 8), 'stypy_return_type', Reference_call_result_236437)
        
        # ################# End of 'reserveObject(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'reserveObject' in the type store
        # Getting the type of 'stypy_return_type' (line 1524)
        stypy_return_type_236438 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1524, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_236438)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'reserveObject'
        return stypy_return_type_236438


    @norecursion
    def recordXref(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'recordXref'
        module_type_store = module_type_store.open_function_context('recordXref', 1535, 4, False)
        # Assigning a type to the variable 'self' (line 1536)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1536, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        PdfFile.recordXref.__dict__.__setitem__('stypy_localization', localization)
        PdfFile.recordXref.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        PdfFile.recordXref.__dict__.__setitem__('stypy_type_store', module_type_store)
        PdfFile.recordXref.__dict__.__setitem__('stypy_function_name', 'PdfFile.recordXref')
        PdfFile.recordXref.__dict__.__setitem__('stypy_param_names_list', ['id'])
        PdfFile.recordXref.__dict__.__setitem__('stypy_varargs_param_name', None)
        PdfFile.recordXref.__dict__.__setitem__('stypy_kwargs_param_name', None)
        PdfFile.recordXref.__dict__.__setitem__('stypy_call_defaults', defaults)
        PdfFile.recordXref.__dict__.__setitem__('stypy_call_varargs', varargs)
        PdfFile.recordXref.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        PdfFile.recordXref.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'PdfFile.recordXref', ['id'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'recordXref', localization, ['id'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'recordXref(...)' code ##################

        
        # Assigning a BinOp to a Subscript (line 1536):
        
        # Assigning a BinOp to a Subscript (line 1536):
        
        # Call to tell(...): (line 1536)
        # Processing the call keyword arguments (line 1536)
        kwargs_236442 = {}
        # Getting the type of 'self' (line 1536)
        self_236439 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1536, 32), 'self', False)
        # Obtaining the member 'fh' of a type (line 1536)
        fh_236440 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1536, 32), self_236439, 'fh')
        # Obtaining the member 'tell' of a type (line 1536)
        tell_236441 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1536, 32), fh_236440, 'tell')
        # Calling tell(args, kwargs) (line 1536)
        tell_call_result_236443 = invoke(stypy.reporting.localization.Localization(__file__, 1536, 32), tell_236441, *[], **kwargs_236442)
        
        # Getting the type of 'self' (line 1536)
        self_236444 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1536, 49), 'self')
        # Obtaining the member 'tell_base' of a type (line 1536)
        tell_base_236445 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1536, 49), self_236444, 'tell_base')
        # Applying the binary operator '-' (line 1536)
        result_sub_236446 = python_operator(stypy.reporting.localization.Localization(__file__, 1536, 32), '-', tell_call_result_236443, tell_base_236445)
        
        
        # Obtaining the type of the subscript
        # Getting the type of 'id' (line 1536)
        id_236447 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1536, 23), 'id')
        # Getting the type of 'self' (line 1536)
        self_236448 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1536, 8), 'self')
        # Obtaining the member 'xrefTable' of a type (line 1536)
        xrefTable_236449 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1536, 8), self_236448, 'xrefTable')
        # Obtaining the member '__getitem__' of a type (line 1536)
        getitem___236450 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1536, 8), xrefTable_236449, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1536)
        subscript_call_result_236451 = invoke(stypy.reporting.localization.Localization(__file__, 1536, 8), getitem___236450, id_236447)
        
        int_236452 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1536, 27), 'int')
        # Storing an element on a container (line 1536)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1536, 8), subscript_call_result_236451, (int_236452, result_sub_236446))
        
        # ################# End of 'recordXref(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'recordXref' in the type store
        # Getting the type of 'stypy_return_type' (line 1535)
        stypy_return_type_236453 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1535, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_236453)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'recordXref'
        return stypy_return_type_236453


    @norecursion
    def writeObject(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'writeObject'
        module_type_store = module_type_store.open_function_context('writeObject', 1538, 4, False)
        # Assigning a type to the variable 'self' (line 1539)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1539, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        PdfFile.writeObject.__dict__.__setitem__('stypy_localization', localization)
        PdfFile.writeObject.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        PdfFile.writeObject.__dict__.__setitem__('stypy_type_store', module_type_store)
        PdfFile.writeObject.__dict__.__setitem__('stypy_function_name', 'PdfFile.writeObject')
        PdfFile.writeObject.__dict__.__setitem__('stypy_param_names_list', ['object', 'contents'])
        PdfFile.writeObject.__dict__.__setitem__('stypy_varargs_param_name', None)
        PdfFile.writeObject.__dict__.__setitem__('stypy_kwargs_param_name', None)
        PdfFile.writeObject.__dict__.__setitem__('stypy_call_defaults', defaults)
        PdfFile.writeObject.__dict__.__setitem__('stypy_call_varargs', varargs)
        PdfFile.writeObject.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        PdfFile.writeObject.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'PdfFile.writeObject', ['object', 'contents'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'writeObject', localization, ['object', 'contents'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'writeObject(...)' code ##################

        
        # Call to recordXref(...): (line 1539)
        # Processing the call arguments (line 1539)
        # Getting the type of 'object' (line 1539)
        object_236456 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1539, 24), 'object', False)
        # Obtaining the member 'id' of a type (line 1539)
        id_236457 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1539, 24), object_236456, 'id')
        # Processing the call keyword arguments (line 1539)
        kwargs_236458 = {}
        # Getting the type of 'self' (line 1539)
        self_236454 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1539, 8), 'self', False)
        # Obtaining the member 'recordXref' of a type (line 1539)
        recordXref_236455 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1539, 8), self_236454, 'recordXref')
        # Calling recordXref(args, kwargs) (line 1539)
        recordXref_call_result_236459 = invoke(stypy.reporting.localization.Localization(__file__, 1539, 8), recordXref_236455, *[id_236457], **kwargs_236458)
        
        
        # Call to write(...): (line 1540)
        # Processing the call arguments (line 1540)
        # Getting the type of 'contents' (line 1540)
        contents_236462 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1540, 21), 'contents', False)
        # Getting the type of 'self' (line 1540)
        self_236463 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1540, 31), 'self', False)
        # Processing the call keyword arguments (line 1540)
        kwargs_236464 = {}
        # Getting the type of 'object' (line 1540)
        object_236460 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1540, 8), 'object', False)
        # Obtaining the member 'write' of a type (line 1540)
        write_236461 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1540, 8), object_236460, 'write')
        # Calling write(args, kwargs) (line 1540)
        write_call_result_236465 = invoke(stypy.reporting.localization.Localization(__file__, 1540, 8), write_236461, *[contents_236462, self_236463], **kwargs_236464)
        
        
        # ################# End of 'writeObject(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'writeObject' in the type store
        # Getting the type of 'stypy_return_type' (line 1538)
        stypy_return_type_236466 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1538, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_236466)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'writeObject'
        return stypy_return_type_236466


    @norecursion
    def writeXref(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'writeXref'
        module_type_store = module_type_store.open_function_context('writeXref', 1542, 4, False)
        # Assigning a type to the variable 'self' (line 1543)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1543, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        PdfFile.writeXref.__dict__.__setitem__('stypy_localization', localization)
        PdfFile.writeXref.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        PdfFile.writeXref.__dict__.__setitem__('stypy_type_store', module_type_store)
        PdfFile.writeXref.__dict__.__setitem__('stypy_function_name', 'PdfFile.writeXref')
        PdfFile.writeXref.__dict__.__setitem__('stypy_param_names_list', [])
        PdfFile.writeXref.__dict__.__setitem__('stypy_varargs_param_name', None)
        PdfFile.writeXref.__dict__.__setitem__('stypy_kwargs_param_name', None)
        PdfFile.writeXref.__dict__.__setitem__('stypy_call_defaults', defaults)
        PdfFile.writeXref.__dict__.__setitem__('stypy_call_varargs', varargs)
        PdfFile.writeXref.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        PdfFile.writeXref.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'PdfFile.writeXref', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'writeXref', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'writeXref(...)' code ##################

        unicode_236467 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1543, 8), 'unicode', u'Write out the xref table.')
        
        # Assigning a BinOp to a Attribute (line 1545):
        
        # Assigning a BinOp to a Attribute (line 1545):
        
        # Call to tell(...): (line 1545)
        # Processing the call keyword arguments (line 1545)
        kwargs_236471 = {}
        # Getting the type of 'self' (line 1545)
        self_236468 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1545, 25), 'self', False)
        # Obtaining the member 'fh' of a type (line 1545)
        fh_236469 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1545, 25), self_236468, 'fh')
        # Obtaining the member 'tell' of a type (line 1545)
        tell_236470 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1545, 25), fh_236469, 'tell')
        # Calling tell(args, kwargs) (line 1545)
        tell_call_result_236472 = invoke(stypy.reporting.localization.Localization(__file__, 1545, 25), tell_236470, *[], **kwargs_236471)
        
        # Getting the type of 'self' (line 1545)
        self_236473 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1545, 42), 'self')
        # Obtaining the member 'tell_base' of a type (line 1545)
        tell_base_236474 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1545, 42), self_236473, 'tell_base')
        # Applying the binary operator '-' (line 1545)
        result_sub_236475 = python_operator(stypy.reporting.localization.Localization(__file__, 1545, 25), '-', tell_call_result_236472, tell_base_236474)
        
        # Getting the type of 'self' (line 1545)
        self_236476 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1545, 8), 'self')
        # Setting the type of the member 'startxref' of a type (line 1545)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1545, 8), self_236476, 'startxref', result_sub_236475)
        
        # Call to write(...): (line 1546)
        # Processing the call arguments (line 1546)
        
        # Call to encode(...): (line 1546)
        # Processing the call arguments (line 1546)
        unicode_236484 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1546, 61), 'unicode', u'ascii')
        # Processing the call keyword arguments (line 1546)
        kwargs_236485 = {}
        unicode_236479 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1546, 20), 'unicode', u'xref\n0 %d\n')
        # Getting the type of 'self' (line 1546)
        self_236480 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1546, 37), 'self', False)
        # Obtaining the member 'nextObject' of a type (line 1546)
        nextObject_236481 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1546, 37), self_236480, 'nextObject')
        # Applying the binary operator '%' (line 1546)
        result_mod_236482 = python_operator(stypy.reporting.localization.Localization(__file__, 1546, 20), '%', unicode_236479, nextObject_236481)
        
        # Obtaining the member 'encode' of a type (line 1546)
        encode_236483 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1546, 20), result_mod_236482, 'encode')
        # Calling encode(args, kwargs) (line 1546)
        encode_call_result_236486 = invoke(stypy.reporting.localization.Localization(__file__, 1546, 20), encode_236483, *[unicode_236484], **kwargs_236485)
        
        # Processing the call keyword arguments (line 1546)
        kwargs_236487 = {}
        # Getting the type of 'self' (line 1546)
        self_236477 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1546, 8), 'self', False)
        # Obtaining the member 'write' of a type (line 1546)
        write_236478 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1546, 8), self_236477, 'write')
        # Calling write(args, kwargs) (line 1546)
        write_call_result_236488 = invoke(stypy.reporting.localization.Localization(__file__, 1546, 8), write_236478, *[encode_call_result_236486], **kwargs_236487)
        
        
        # Assigning a Num to a Name (line 1547):
        
        # Assigning a Num to a Name (line 1547):
        int_236489 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1547, 12), 'int')
        # Assigning a type to the variable 'i' (line 1547)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1547, 8), 'i', int_236489)
        
        # Assigning a Name to a Name (line 1548):
        
        # Assigning a Name to a Name (line 1548):
        # Getting the type of 'False' (line 1548)
        False_236490 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1548, 17), 'False')
        # Assigning a type to the variable 'borken' (line 1548)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1548, 8), 'borken', False_236490)
        
        # Getting the type of 'self' (line 1549)
        self_236491 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1549, 40), 'self')
        # Obtaining the member 'xrefTable' of a type (line 1549)
        xrefTable_236492 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1549, 40), self_236491, 'xrefTable')
        # Testing the type of a for loop iterable (line 1549)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1549, 8), xrefTable_236492)
        # Getting the type of the for loop variable (line 1549)
        for_loop_var_236493 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1549, 8), xrefTable_236492)
        # Assigning a type to the variable 'offset' (line 1549)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1549, 8), 'offset', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1549, 8), for_loop_var_236493))
        # Assigning a type to the variable 'generation' (line 1549)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1549, 8), 'generation', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1549, 8), for_loop_var_236493))
        # Assigning a type to the variable 'name' (line 1549)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1549, 8), 'name', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1549, 8), for_loop_var_236493))
        # SSA begins for a for statement (line 1549)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Type idiom detected: calculating its left and rigth part (line 1550)
        # Getting the type of 'offset' (line 1550)
        offset_236494 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1550, 15), 'offset')
        # Getting the type of 'None' (line 1550)
        None_236495 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1550, 25), 'None')
        
        (may_be_236496, more_types_in_union_236497) = may_be_none(offset_236494, None_236495)

        if may_be_236496:

            if more_types_in_union_236497:
                # Runtime conditional SSA (line 1550)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Call to print(...): (line 1551)
            # Processing the call arguments (line 1551)
            unicode_236499 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1551, 22), 'unicode', u'No offset for object %d (%s)')
            
            # Obtaining an instance of the builtin type 'tuple' (line 1551)
            tuple_236500 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1551, 56), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 1551)
            # Adding element type (line 1551)
            # Getting the type of 'i' (line 1551)
            i_236501 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1551, 56), 'i', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1551, 56), tuple_236500, i_236501)
            # Adding element type (line 1551)
            # Getting the type of 'name' (line 1551)
            name_236502 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1551, 59), 'name', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1551, 56), tuple_236500, name_236502)
            
            # Applying the binary operator '%' (line 1551)
            result_mod_236503 = python_operator(stypy.reporting.localization.Localization(__file__, 1551, 22), '%', unicode_236499, tuple_236500)
            
            # Processing the call keyword arguments (line 1551)
            # Getting the type of 'sys' (line 1552)
            sys_236504 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1552, 27), 'sys', False)
            # Obtaining the member 'stderr' of a type (line 1552)
            stderr_236505 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1552, 27), sys_236504, 'stderr')
            keyword_236506 = stderr_236505
            kwargs_236507 = {'file': keyword_236506}
            # Getting the type of 'print' (line 1551)
            print_236498 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1551, 16), 'print', False)
            # Calling print(args, kwargs) (line 1551)
            print_call_result_236508 = invoke(stypy.reporting.localization.Localization(__file__, 1551, 16), print_236498, *[result_mod_236503], **kwargs_236507)
            
            
            # Assigning a Name to a Name (line 1553):
            
            # Assigning a Name to a Name (line 1553):
            # Getting the type of 'True' (line 1553)
            True_236509 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1553, 25), 'True')
            # Assigning a type to the variable 'borken' (line 1553)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1553, 16), 'borken', True_236509)

            if more_types_in_union_236497:
                # Runtime conditional SSA for else branch (line 1550)
                module_type_store.open_ssa_branch('idiom else')



        if ((not may_be_236496) or more_types_in_union_236497):
            
            
            # Getting the type of 'name' (line 1555)
            name_236510 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1555, 19), 'name')
            unicode_236511 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1555, 27), 'unicode', u'the zero object')
            # Applying the binary operator '==' (line 1555)
            result_eq_236512 = python_operator(stypy.reporting.localization.Localization(__file__, 1555, 19), '==', name_236510, unicode_236511)
            
            # Testing the type of an if condition (line 1555)
            if_condition_236513 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1555, 16), result_eq_236512)
            # Assigning a type to the variable 'if_condition_236513' (line 1555)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1555, 16), 'if_condition_236513', if_condition_236513)
            # SSA begins for if statement (line 1555)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Str to a Name (line 1556):
            
            # Assigning a Str to a Name (line 1556):
            unicode_236514 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1556, 26), 'unicode', u'f')
            # Assigning a type to the variable 'key' (line 1556)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1556, 20), 'key', unicode_236514)
            # SSA branch for the else part of an if statement (line 1555)
            module_type_store.open_ssa_branch('else')
            
            # Assigning a Str to a Name (line 1558):
            
            # Assigning a Str to a Name (line 1558):
            unicode_236515 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1558, 26), 'unicode', u'n')
            # Assigning a type to the variable 'key' (line 1558)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1558, 20), 'key', unicode_236515)
            # SSA join for if statement (line 1555)
            module_type_store = module_type_store.join_ssa_context()
            
            
            # Assigning a BinOp to a Name (line 1559):
            
            # Assigning a BinOp to a Name (line 1559):
            unicode_236516 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1559, 23), 'unicode', u'%010d %05d %s \n')
            
            # Obtaining an instance of the builtin type 'tuple' (line 1559)
            tuple_236517 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1559, 45), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 1559)
            # Adding element type (line 1559)
            # Getting the type of 'offset' (line 1559)
            offset_236518 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1559, 45), 'offset')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1559, 45), tuple_236517, offset_236518)
            # Adding element type (line 1559)
            # Getting the type of 'generation' (line 1559)
            generation_236519 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1559, 53), 'generation')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1559, 45), tuple_236517, generation_236519)
            # Adding element type (line 1559)
            # Getting the type of 'key' (line 1559)
            key_236520 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1559, 65), 'key')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1559, 45), tuple_236517, key_236520)
            
            # Applying the binary operator '%' (line 1559)
            result_mod_236521 = python_operator(stypy.reporting.localization.Localization(__file__, 1559, 23), '%', unicode_236516, tuple_236517)
            
            # Assigning a type to the variable 'text' (line 1559)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1559, 16), 'text', result_mod_236521)
            
            # Call to write(...): (line 1560)
            # Processing the call arguments (line 1560)
            
            # Call to encode(...): (line 1560)
            # Processing the call arguments (line 1560)
            unicode_236526 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1560, 39), 'unicode', u'ascii')
            # Processing the call keyword arguments (line 1560)
            kwargs_236527 = {}
            # Getting the type of 'text' (line 1560)
            text_236524 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1560, 27), 'text', False)
            # Obtaining the member 'encode' of a type (line 1560)
            encode_236525 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1560, 27), text_236524, 'encode')
            # Calling encode(args, kwargs) (line 1560)
            encode_call_result_236528 = invoke(stypy.reporting.localization.Localization(__file__, 1560, 27), encode_236525, *[unicode_236526], **kwargs_236527)
            
            # Processing the call keyword arguments (line 1560)
            kwargs_236529 = {}
            # Getting the type of 'self' (line 1560)
            self_236522 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1560, 16), 'self', False)
            # Obtaining the member 'write' of a type (line 1560)
            write_236523 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1560, 16), self_236522, 'write')
            # Calling write(args, kwargs) (line 1560)
            write_call_result_236530 = invoke(stypy.reporting.localization.Localization(__file__, 1560, 16), write_236523, *[encode_call_result_236528], **kwargs_236529)
            

            if (may_be_236496 and more_types_in_union_236497):
                # SSA join for if statement (line 1550)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Getting the type of 'i' (line 1561)
        i_236531 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1561, 12), 'i')
        int_236532 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1561, 17), 'int')
        # Applying the binary operator '+=' (line 1561)
        result_iadd_236533 = python_operator(stypy.reporting.localization.Localization(__file__, 1561, 12), '+=', i_236531, int_236532)
        # Assigning a type to the variable 'i' (line 1561)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1561, 12), 'i', result_iadd_236533)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'borken' (line 1562)
        borken_236534 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1562, 11), 'borken')
        # Testing the type of an if condition (line 1562)
        if_condition_236535 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1562, 8), borken_236534)
        # Assigning a type to the variable 'if_condition_236535' (line 1562)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1562, 8), 'if_condition_236535', if_condition_236535)
        # SSA begins for if statement (line 1562)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to AssertionError(...): (line 1563)
        # Processing the call arguments (line 1563)
        unicode_236537 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1563, 33), 'unicode', u'Indirect object does not exist')
        # Processing the call keyword arguments (line 1563)
        kwargs_236538 = {}
        # Getting the type of 'AssertionError' (line 1563)
        AssertionError_236536 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1563, 18), 'AssertionError', False)
        # Calling AssertionError(args, kwargs) (line 1563)
        AssertionError_call_result_236539 = invoke(stypy.reporting.localization.Localization(__file__, 1563, 18), AssertionError_236536, *[unicode_236537], **kwargs_236538)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1563, 12), AssertionError_call_result_236539, 'raise parameter', BaseException)
        # SSA join for if statement (line 1562)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'writeXref(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'writeXref' in the type store
        # Getting the type of 'stypy_return_type' (line 1542)
        stypy_return_type_236540 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1542, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_236540)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'writeXref'
        return stypy_return_type_236540


    @norecursion
    def writeInfoDict(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'writeInfoDict'
        module_type_store = module_type_store.open_function_context('writeInfoDict', 1565, 4, False)
        # Assigning a type to the variable 'self' (line 1566)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1566, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        PdfFile.writeInfoDict.__dict__.__setitem__('stypy_localization', localization)
        PdfFile.writeInfoDict.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        PdfFile.writeInfoDict.__dict__.__setitem__('stypy_type_store', module_type_store)
        PdfFile.writeInfoDict.__dict__.__setitem__('stypy_function_name', 'PdfFile.writeInfoDict')
        PdfFile.writeInfoDict.__dict__.__setitem__('stypy_param_names_list', [])
        PdfFile.writeInfoDict.__dict__.__setitem__('stypy_varargs_param_name', None)
        PdfFile.writeInfoDict.__dict__.__setitem__('stypy_kwargs_param_name', None)
        PdfFile.writeInfoDict.__dict__.__setitem__('stypy_call_defaults', defaults)
        PdfFile.writeInfoDict.__dict__.__setitem__('stypy_call_varargs', varargs)
        PdfFile.writeInfoDict.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        PdfFile.writeInfoDict.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'PdfFile.writeInfoDict', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'writeInfoDict', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'writeInfoDict(...)' code ##################

        unicode_236541 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1566, 8), 'unicode', u'Write out the info dictionary, checking it for good form')

        @norecursion
        def is_string_like(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'is_string_like'
            module_type_store = module_type_store.open_function_context('is_string_like', 1568, 8, False)
            
            # Passed parameters checking function
            is_string_like.stypy_localization = localization
            is_string_like.stypy_type_of_self = None
            is_string_like.stypy_type_store = module_type_store
            is_string_like.stypy_function_name = 'is_string_like'
            is_string_like.stypy_param_names_list = ['x']
            is_string_like.stypy_varargs_param_name = None
            is_string_like.stypy_kwargs_param_name = None
            is_string_like.stypy_call_defaults = defaults
            is_string_like.stypy_call_varargs = varargs
            is_string_like.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'is_string_like', ['x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'is_string_like', localization, ['x'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'is_string_like(...)' code ##################

            
            # Call to isinstance(...): (line 1569)
            # Processing the call arguments (line 1569)
            # Getting the type of 'x' (line 1569)
            x_236543 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1569, 30), 'x', False)
            # Getting the type of 'six' (line 1569)
            six_236544 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1569, 33), 'six', False)
            # Obtaining the member 'string_types' of a type (line 1569)
            string_types_236545 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1569, 33), six_236544, 'string_types')
            # Processing the call keyword arguments (line 1569)
            kwargs_236546 = {}
            # Getting the type of 'isinstance' (line 1569)
            isinstance_236542 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1569, 19), 'isinstance', False)
            # Calling isinstance(args, kwargs) (line 1569)
            isinstance_call_result_236547 = invoke(stypy.reporting.localization.Localization(__file__, 1569, 19), isinstance_236542, *[x_236543, string_types_236545], **kwargs_236546)
            
            # Assigning a type to the variable 'stypy_return_type' (line 1569)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1569, 12), 'stypy_return_type', isinstance_call_result_236547)
            
            # ################# End of 'is_string_like(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'is_string_like' in the type store
            # Getting the type of 'stypy_return_type' (line 1568)
            stypy_return_type_236548 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1568, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_236548)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'is_string_like'
            return stypy_return_type_236548

        # Assigning a type to the variable 'is_string_like' (line 1568)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1568, 8), 'is_string_like', is_string_like)

        @norecursion
        def is_date(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'is_date'
            module_type_store = module_type_store.open_function_context('is_date', 1571, 8, False)
            
            # Passed parameters checking function
            is_date.stypy_localization = localization
            is_date.stypy_type_of_self = None
            is_date.stypy_type_store = module_type_store
            is_date.stypy_function_name = 'is_date'
            is_date.stypy_param_names_list = ['x']
            is_date.stypy_varargs_param_name = None
            is_date.stypy_kwargs_param_name = None
            is_date.stypy_call_defaults = defaults
            is_date.stypy_call_varargs = varargs
            is_date.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'is_date', ['x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'is_date', localization, ['x'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'is_date(...)' code ##################

            
            # Call to isinstance(...): (line 1572)
            # Processing the call arguments (line 1572)
            # Getting the type of 'x' (line 1572)
            x_236550 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1572, 30), 'x', False)
            # Getting the type of 'datetime' (line 1572)
            datetime_236551 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1572, 33), 'datetime', False)
            # Processing the call keyword arguments (line 1572)
            kwargs_236552 = {}
            # Getting the type of 'isinstance' (line 1572)
            isinstance_236549 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1572, 19), 'isinstance', False)
            # Calling isinstance(args, kwargs) (line 1572)
            isinstance_call_result_236553 = invoke(stypy.reporting.localization.Localization(__file__, 1572, 19), isinstance_236549, *[x_236550, datetime_236551], **kwargs_236552)
            
            # Assigning a type to the variable 'stypy_return_type' (line 1572)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1572, 12), 'stypy_return_type', isinstance_call_result_236553)
            
            # ################# End of 'is_date(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'is_date' in the type store
            # Getting the type of 'stypy_return_type' (line 1571)
            stypy_return_type_236554 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1571, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_236554)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'is_date'
            return stypy_return_type_236554

        # Assigning a type to the variable 'is_date' (line 1571)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1571, 8), 'is_date', is_date)
        
        # Assigning a Lambda to a Name (line 1574):
        
        # Assigning a Lambda to a Name (line 1574):

        @norecursion
        def _stypy_temp_lambda_101(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_101'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_101', 1574, 25, True)
            # Passed parameters checking function
            _stypy_temp_lambda_101.stypy_localization = localization
            _stypy_temp_lambda_101.stypy_type_of_self = None
            _stypy_temp_lambda_101.stypy_type_store = module_type_store
            _stypy_temp_lambda_101.stypy_function_name = '_stypy_temp_lambda_101'
            _stypy_temp_lambda_101.stypy_param_names_list = ['x']
            _stypy_temp_lambda_101.stypy_varargs_param_name = None
            _stypy_temp_lambda_101.stypy_kwargs_param_name = None
            _stypy_temp_lambda_101.stypy_call_defaults = defaults
            _stypy_temp_lambda_101.stypy_call_varargs = varargs
            _stypy_temp_lambda_101.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_101', ['x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_101', ['x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Evaluating a boolean operation
            
            # Call to isinstance(...): (line 1574)
            # Processing the call arguments (line 1574)
            # Getting the type of 'x' (line 1574)
            x_236556 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1574, 46), 'x', False)
            # Getting the type of 'Name' (line 1574)
            Name_236557 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1574, 49), 'Name', False)
            # Processing the call keyword arguments (line 1574)
            kwargs_236558 = {}
            # Getting the type of 'isinstance' (line 1574)
            isinstance_236555 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1574, 35), 'isinstance', False)
            # Calling isinstance(args, kwargs) (line 1574)
            isinstance_call_result_236559 = invoke(stypy.reporting.localization.Localization(__file__, 1574, 35), isinstance_236555, *[x_236556, Name_236557], **kwargs_236558)
            
            
            # Getting the type of 'x' (line 1575)
            x_236560 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1575, 25), 'x')
            # Obtaining the member 'name' of a type (line 1575)
            name_236561 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1575, 25), x_236560, 'name')
            
            # Obtaining an instance of the builtin type 'tuple' (line 1575)
            tuple_236562 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1575, 36), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 1575)
            # Adding element type (line 1575)
            unicode_236563 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1575, 36), 'unicode', u'True')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1575, 36), tuple_236562, unicode_236563)
            # Adding element type (line 1575)
            unicode_236564 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1575, 44), 'unicode', u'False')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1575, 36), tuple_236562, unicode_236564)
            # Adding element type (line 1575)
            unicode_236565 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1575, 53), 'unicode', u'Unknown')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1575, 36), tuple_236562, unicode_236565)
            
            # Applying the binary operator 'in' (line 1575)
            result_contains_236566 = python_operator(stypy.reporting.localization.Localization(__file__, 1575, 25), 'in', name_236561, tuple_236562)
            
            # Applying the binary operator 'and' (line 1574)
            result_and_keyword_236567 = python_operator(stypy.reporting.localization.Localization(__file__, 1574, 35), 'and', isinstance_call_result_236559, result_contains_236566)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1574)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1574, 25), 'stypy_return_type', result_and_keyword_236567)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_101' in the type store
            # Getting the type of 'stypy_return_type' (line 1574)
            stypy_return_type_236568 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1574, 25), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_236568)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_101'
            return stypy_return_type_236568

        # Assigning a type to the variable '_stypy_temp_lambda_101' (line 1574)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1574, 25), '_stypy_temp_lambda_101', _stypy_temp_lambda_101)
        # Getting the type of '_stypy_temp_lambda_101' (line 1574)
        _stypy_temp_lambda_101_236569 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1574, 25), '_stypy_temp_lambda_101')
        # Assigning a type to the variable 'check_trapped' (line 1574)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1574, 8), 'check_trapped', _stypy_temp_lambda_101_236569)
        
        # Assigning a Dict to a Name (line 1577):
        
        # Assigning a Dict to a Name (line 1577):
        
        # Obtaining an instance of the builtin type 'dict' (line 1577)
        dict_236570 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1577, 19), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 1577)
        # Adding element type (key, value) (line 1577)
        unicode_236571 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1577, 20), 'unicode', u'Title')
        # Getting the type of 'is_string_like' (line 1577)
        is_string_like_236572 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1577, 29), 'is_string_like')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1577, 19), dict_236570, (unicode_236571, is_string_like_236572))
        # Adding element type (key, value) (line 1577)
        unicode_236573 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1578, 20), 'unicode', u'Author')
        # Getting the type of 'is_string_like' (line 1578)
        is_string_like_236574 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1578, 30), 'is_string_like')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1577, 19), dict_236570, (unicode_236573, is_string_like_236574))
        # Adding element type (key, value) (line 1577)
        unicode_236575 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1579, 20), 'unicode', u'Subject')
        # Getting the type of 'is_string_like' (line 1579)
        is_string_like_236576 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1579, 31), 'is_string_like')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1577, 19), dict_236570, (unicode_236575, is_string_like_236576))
        # Adding element type (key, value) (line 1577)
        unicode_236577 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1580, 20), 'unicode', u'Keywords')
        # Getting the type of 'is_string_like' (line 1580)
        is_string_like_236578 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1580, 32), 'is_string_like')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1577, 19), dict_236570, (unicode_236577, is_string_like_236578))
        # Adding element type (key, value) (line 1577)
        unicode_236579 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1581, 20), 'unicode', u'Creator')
        # Getting the type of 'is_string_like' (line 1581)
        is_string_like_236580 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1581, 31), 'is_string_like')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1577, 19), dict_236570, (unicode_236579, is_string_like_236580))
        # Adding element type (key, value) (line 1577)
        unicode_236581 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1582, 20), 'unicode', u'Producer')
        # Getting the type of 'is_string_like' (line 1582)
        is_string_like_236582 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1582, 32), 'is_string_like')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1577, 19), dict_236570, (unicode_236581, is_string_like_236582))
        # Adding element type (key, value) (line 1577)
        unicode_236583 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1583, 20), 'unicode', u'CreationDate')
        # Getting the type of 'is_date' (line 1583)
        is_date_236584 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1583, 36), 'is_date')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1577, 19), dict_236570, (unicode_236583, is_date_236584))
        # Adding element type (key, value) (line 1577)
        unicode_236585 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1584, 20), 'unicode', u'ModDate')
        # Getting the type of 'is_date' (line 1584)
        is_date_236586 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1584, 31), 'is_date')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1577, 19), dict_236570, (unicode_236585, is_date_236586))
        # Adding element type (key, value) (line 1577)
        unicode_236587 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1585, 20), 'unicode', u'Trapped')
        # Getting the type of 'check_trapped' (line 1585)
        check_trapped_236588 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1585, 31), 'check_trapped')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1577, 19), dict_236570, (unicode_236587, check_trapped_236588))
        
        # Assigning a type to the variable 'keywords' (line 1577)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1577, 8), 'keywords', dict_236570)
        
        # Getting the type of 'self' (line 1586)
        self_236589 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1586, 17), 'self')
        # Obtaining the member 'infoDict' of a type (line 1586)
        infoDict_236590 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1586, 17), self_236589, 'infoDict')
        # Testing the type of a for loop iterable (line 1586)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1586, 8), infoDict_236590)
        # Getting the type of the for loop variable (line 1586)
        for_loop_var_236591 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1586, 8), infoDict_236590)
        # Assigning a type to the variable 'k' (line 1586)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1586, 8), 'k', for_loop_var_236591)
        # SSA begins for a for statement (line 1586)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        
        # Getting the type of 'k' (line 1587)
        k_236592 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1587, 15), 'k')
        # Getting the type of 'keywords' (line 1587)
        keywords_236593 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1587, 24), 'keywords')
        # Applying the binary operator 'notin' (line 1587)
        result_contains_236594 = python_operator(stypy.reporting.localization.Localization(__file__, 1587, 15), 'notin', k_236592, keywords_236593)
        
        # Testing the type of an if condition (line 1587)
        if_condition_236595 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1587, 12), result_contains_236594)
        # Assigning a type to the variable 'if_condition_236595' (line 1587)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1587, 12), 'if_condition_236595', if_condition_236595)
        # SSA begins for if statement (line 1587)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to warn(...): (line 1588)
        # Processing the call arguments (line 1588)
        unicode_236598 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1588, 30), 'unicode', u'Unknown infodict keyword: %s')
        # Getting the type of 'k' (line 1588)
        k_236599 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1588, 63), 'k', False)
        # Applying the binary operator '%' (line 1588)
        result_mod_236600 = python_operator(stypy.reporting.localization.Localization(__file__, 1588, 30), '%', unicode_236598, k_236599)
        
        # Processing the call keyword arguments (line 1588)
        kwargs_236601 = {}
        # Getting the type of 'warnings' (line 1588)
        warnings_236596 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1588, 16), 'warnings', False)
        # Obtaining the member 'warn' of a type (line 1588)
        warn_236597 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1588, 16), warnings_236596, 'warn')
        # Calling warn(args, kwargs) (line 1588)
        warn_call_result_236602 = invoke(stypy.reporting.localization.Localization(__file__, 1588, 16), warn_236597, *[result_mod_236600], **kwargs_236601)
        
        # SSA branch for the else part of an if statement (line 1587)
        module_type_store.open_ssa_branch('else')
        
        
        
        # Call to (...): (line 1590)
        # Processing the call arguments (line 1590)
        
        # Obtaining the type of the subscript
        # Getting the type of 'k' (line 1590)
        k_236607 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1590, 49), 'k', False)
        # Getting the type of 'self' (line 1590)
        self_236608 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1590, 35), 'self', False)
        # Obtaining the member 'infoDict' of a type (line 1590)
        infoDict_236609 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1590, 35), self_236608, 'infoDict')
        # Obtaining the member '__getitem__' of a type (line 1590)
        getitem___236610 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1590, 35), infoDict_236609, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1590)
        subscript_call_result_236611 = invoke(stypy.reporting.localization.Localization(__file__, 1590, 35), getitem___236610, k_236607)
        
        # Processing the call keyword arguments (line 1590)
        kwargs_236612 = {}
        
        # Obtaining the type of the subscript
        # Getting the type of 'k' (line 1590)
        k_236603 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1590, 32), 'k', False)
        # Getting the type of 'keywords' (line 1590)
        keywords_236604 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1590, 23), 'keywords', False)
        # Obtaining the member '__getitem__' of a type (line 1590)
        getitem___236605 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1590, 23), keywords_236604, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1590)
        subscript_call_result_236606 = invoke(stypy.reporting.localization.Localization(__file__, 1590, 23), getitem___236605, k_236603)
        
        # Calling (args, kwargs) (line 1590)
        _call_result_236613 = invoke(stypy.reporting.localization.Localization(__file__, 1590, 23), subscript_call_result_236606, *[subscript_call_result_236611], **kwargs_236612)
        
        # Applying the 'not' unary operator (line 1590)
        result_not__236614 = python_operator(stypy.reporting.localization.Localization(__file__, 1590, 19), 'not', _call_result_236613)
        
        # Testing the type of an if condition (line 1590)
        if_condition_236615 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1590, 16), result_not__236614)
        # Assigning a type to the variable 'if_condition_236615' (line 1590)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1590, 16), 'if_condition_236615', if_condition_236615)
        # SSA begins for if statement (line 1590)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to warn(...): (line 1591)
        # Processing the call arguments (line 1591)
        unicode_236618 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1591, 34), 'unicode', u'Bad value for infodict keyword %s')
        # Getting the type of 'k' (line 1591)
        k_236619 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1591, 72), 'k', False)
        # Applying the binary operator '%' (line 1591)
        result_mod_236620 = python_operator(stypy.reporting.localization.Localization(__file__, 1591, 34), '%', unicode_236618, k_236619)
        
        # Processing the call keyword arguments (line 1591)
        kwargs_236621 = {}
        # Getting the type of 'warnings' (line 1591)
        warnings_236616 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1591, 20), 'warnings', False)
        # Obtaining the member 'warn' of a type (line 1591)
        warn_236617 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1591, 20), warnings_236616, 'warn')
        # Calling warn(args, kwargs) (line 1591)
        warn_call_result_236622 = invoke(stypy.reporting.localization.Localization(__file__, 1591, 20), warn_236617, *[result_mod_236620], **kwargs_236621)
        
        # SSA join for if statement (line 1590)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 1587)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Attribute (line 1593):
        
        # Assigning a Call to a Attribute (line 1593):
        
        # Call to reserveObject(...): (line 1593)
        # Processing the call arguments (line 1593)
        unicode_236625 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1593, 45), 'unicode', u'info')
        # Processing the call keyword arguments (line 1593)
        kwargs_236626 = {}
        # Getting the type of 'self' (line 1593)
        self_236623 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1593, 26), 'self', False)
        # Obtaining the member 'reserveObject' of a type (line 1593)
        reserveObject_236624 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1593, 26), self_236623, 'reserveObject')
        # Calling reserveObject(args, kwargs) (line 1593)
        reserveObject_call_result_236627 = invoke(stypy.reporting.localization.Localization(__file__, 1593, 26), reserveObject_236624, *[unicode_236625], **kwargs_236626)
        
        # Getting the type of 'self' (line 1593)
        self_236628 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1593, 8), 'self')
        # Setting the type of the member 'infoObject' of a type (line 1593)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1593, 8), self_236628, 'infoObject', reserveObject_call_result_236627)
        
        # Call to writeObject(...): (line 1594)
        # Processing the call arguments (line 1594)
        # Getting the type of 'self' (line 1594)
        self_236631 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1594, 25), 'self', False)
        # Obtaining the member 'infoObject' of a type (line 1594)
        infoObject_236632 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1594, 25), self_236631, 'infoObject')
        # Getting the type of 'self' (line 1594)
        self_236633 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1594, 42), 'self', False)
        # Obtaining the member 'infoDict' of a type (line 1594)
        infoDict_236634 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1594, 42), self_236633, 'infoDict')
        # Processing the call keyword arguments (line 1594)
        kwargs_236635 = {}
        # Getting the type of 'self' (line 1594)
        self_236629 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1594, 8), 'self', False)
        # Obtaining the member 'writeObject' of a type (line 1594)
        writeObject_236630 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1594, 8), self_236629, 'writeObject')
        # Calling writeObject(args, kwargs) (line 1594)
        writeObject_call_result_236636 = invoke(stypy.reporting.localization.Localization(__file__, 1594, 8), writeObject_236630, *[infoObject_236632, infoDict_236634], **kwargs_236635)
        
        
        # ################# End of 'writeInfoDict(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'writeInfoDict' in the type store
        # Getting the type of 'stypy_return_type' (line 1565)
        stypy_return_type_236637 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1565, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_236637)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'writeInfoDict'
        return stypy_return_type_236637


    @norecursion
    def writeTrailer(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'writeTrailer'
        module_type_store = module_type_store.open_function_context('writeTrailer', 1596, 4, False)
        # Assigning a type to the variable 'self' (line 1597)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1597, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        PdfFile.writeTrailer.__dict__.__setitem__('stypy_localization', localization)
        PdfFile.writeTrailer.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        PdfFile.writeTrailer.__dict__.__setitem__('stypy_type_store', module_type_store)
        PdfFile.writeTrailer.__dict__.__setitem__('stypy_function_name', 'PdfFile.writeTrailer')
        PdfFile.writeTrailer.__dict__.__setitem__('stypy_param_names_list', [])
        PdfFile.writeTrailer.__dict__.__setitem__('stypy_varargs_param_name', None)
        PdfFile.writeTrailer.__dict__.__setitem__('stypy_kwargs_param_name', None)
        PdfFile.writeTrailer.__dict__.__setitem__('stypy_call_defaults', defaults)
        PdfFile.writeTrailer.__dict__.__setitem__('stypy_call_varargs', varargs)
        PdfFile.writeTrailer.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        PdfFile.writeTrailer.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'PdfFile.writeTrailer', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'writeTrailer', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'writeTrailer(...)' code ##################

        unicode_236638 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1597, 8), 'unicode', u'Write out the PDF trailer.')
        
        # Call to write(...): (line 1599)
        # Processing the call arguments (line 1599)
        str_236641 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1599, 19), 'str', 'trailer\n')
        # Processing the call keyword arguments (line 1599)
        kwargs_236642 = {}
        # Getting the type of 'self' (line 1599)
        self_236639 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1599, 8), 'self', False)
        # Obtaining the member 'write' of a type (line 1599)
        write_236640 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1599, 8), self_236639, 'write')
        # Calling write(args, kwargs) (line 1599)
        write_call_result_236643 = invoke(stypy.reporting.localization.Localization(__file__, 1599, 8), write_236640, *[str_236641], **kwargs_236642)
        
        
        # Call to write(...): (line 1600)
        # Processing the call arguments (line 1600)
        
        # Call to pdfRepr(...): (line 1600)
        # Processing the call arguments (line 1600)
        
        # Obtaining an instance of the builtin type 'dict' (line 1601)
        dict_236647 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1601, 12), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 1601)
        # Adding element type (key, value) (line 1601)
        unicode_236648 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1601, 13), 'unicode', u'Size')
        # Getting the type of 'self' (line 1601)
        self_236649 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1601, 21), 'self', False)
        # Obtaining the member 'nextObject' of a type (line 1601)
        nextObject_236650 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1601, 21), self_236649, 'nextObject')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1601, 12), dict_236647, (unicode_236648, nextObject_236650))
        # Adding element type (key, value) (line 1601)
        unicode_236651 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1602, 13), 'unicode', u'Root')
        # Getting the type of 'self' (line 1602)
        self_236652 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1602, 21), 'self', False)
        # Obtaining the member 'rootObject' of a type (line 1602)
        rootObject_236653 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1602, 21), self_236652, 'rootObject')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1601, 12), dict_236647, (unicode_236651, rootObject_236653))
        # Adding element type (key, value) (line 1601)
        unicode_236654 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1603, 13), 'unicode', u'Info')
        # Getting the type of 'self' (line 1603)
        self_236655 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1603, 21), 'self', False)
        # Obtaining the member 'infoObject' of a type (line 1603)
        infoObject_236656 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1603, 21), self_236655, 'infoObject')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1601, 12), dict_236647, (unicode_236654, infoObject_236656))
        
        # Processing the call keyword arguments (line 1600)
        kwargs_236657 = {}
        # Getting the type of 'pdfRepr' (line 1600)
        pdfRepr_236646 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1600, 19), 'pdfRepr', False)
        # Calling pdfRepr(args, kwargs) (line 1600)
        pdfRepr_call_result_236658 = invoke(stypy.reporting.localization.Localization(__file__, 1600, 19), pdfRepr_236646, *[dict_236647], **kwargs_236657)
        
        # Processing the call keyword arguments (line 1600)
        kwargs_236659 = {}
        # Getting the type of 'self' (line 1600)
        self_236644 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1600, 8), 'self', False)
        # Obtaining the member 'write' of a type (line 1600)
        write_236645 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1600, 8), self_236644, 'write')
        # Calling write(args, kwargs) (line 1600)
        write_call_result_236660 = invoke(stypy.reporting.localization.Localization(__file__, 1600, 8), write_236645, *[pdfRepr_call_result_236658], **kwargs_236659)
        
        
        # Call to write(...): (line 1605)
        # Processing the call arguments (line 1605)
        
        # Call to encode(...): (line 1605)
        # Processing the call arguments (line 1605)
        unicode_236668 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1606, 43), 'unicode', u'ascii')
        # Processing the call keyword arguments (line 1605)
        kwargs_236669 = {}
        unicode_236663 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1605, 20), 'unicode', u'\nstartxref\n%d\n%%%%EOF\n')
        # Getting the type of 'self' (line 1606)
        self_236664 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1606, 20), 'self', False)
        # Obtaining the member 'startxref' of a type (line 1606)
        startxref_236665 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1606, 20), self_236664, 'startxref')
        # Applying the binary operator '%' (line 1605)
        result_mod_236666 = python_operator(stypy.reporting.localization.Localization(__file__, 1605, 20), '%', unicode_236663, startxref_236665)
        
        # Obtaining the member 'encode' of a type (line 1605)
        encode_236667 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1605, 20), result_mod_236666, 'encode')
        # Calling encode(args, kwargs) (line 1605)
        encode_call_result_236670 = invoke(stypy.reporting.localization.Localization(__file__, 1605, 20), encode_236667, *[unicode_236668], **kwargs_236669)
        
        # Processing the call keyword arguments (line 1605)
        kwargs_236671 = {}
        # Getting the type of 'self' (line 1605)
        self_236661 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1605, 8), 'self', False)
        # Obtaining the member 'write' of a type (line 1605)
        write_236662 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1605, 8), self_236661, 'write')
        # Calling write(args, kwargs) (line 1605)
        write_call_result_236672 = invoke(stypy.reporting.localization.Localization(__file__, 1605, 8), write_236662, *[encode_call_result_236670], **kwargs_236671)
        
        
        # ################# End of 'writeTrailer(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'writeTrailer' in the type store
        # Getting the type of 'stypy_return_type' (line 1596)
        stypy_return_type_236673 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1596, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_236673)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'writeTrailer'
        return stypy_return_type_236673


# Assigning a type to the variable 'PdfFile' (line 429)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 429, 0), 'PdfFile', PdfFile)

# Assigning a Str to a Name (line 875):
unicode_236674 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 894, (-1)), 'unicode', u'/CIDInit /ProcSet findresource begin\n12 dict begin\nbegincmap\n/CIDSystemInfo\n<< /Registry (Adobe)\n   /Ordering (UCS)\n   /Supplement 0\n>> def\n/CMapName /Adobe-Identity-UCS def\n/CMapType 2 def\n1 begincodespacerange\n<0000> <ffff>\nendcodespacerange\n%d beginbfrange\n%s\nendbfrange\nendcmap\nCMapName currentdict /CMap defineresource pop\nend\nend')
# Getting the type of 'PdfFile'
PdfFile_236675 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'PdfFile')
# Setting the type of the member '_identityToUnicodeCMap' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), PdfFile_236675, '_identityToUnicodeCMap', unicode_236674)
# Declaration of the 'RendererPdf' class
# Getting the type of 'RendererBase' (line 1609)
RendererBase_236676 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1609, 18), 'RendererBase')

class RendererPdf(RendererBase_236676, ):
    
    # Assigning a Call to a Name (line 1610):

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 1612, 4, False)
        # Assigning a type to the variable 'self' (line 1613)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1613, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererPdf.__init__', ['file', 'image_dpi', 'height', 'width'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['file', 'image_dpi', 'height', 'width'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Call to __init__(...): (line 1613)
        # Processing the call arguments (line 1613)
        # Getting the type of 'self' (line 1613)
        self_236679 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1613, 30), 'self', False)
        # Processing the call keyword arguments (line 1613)
        kwargs_236680 = {}
        # Getting the type of 'RendererBase' (line 1613)
        RendererBase_236677 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1613, 8), 'RendererBase', False)
        # Obtaining the member '__init__' of a type (line 1613)
        init___236678 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1613, 8), RendererBase_236677, '__init__')
        # Calling __init__(args, kwargs) (line 1613)
        init___call_result_236681 = invoke(stypy.reporting.localization.Localization(__file__, 1613, 8), init___236678, *[self_236679], **kwargs_236680)
        
        
        # Assigning a Name to a Attribute (line 1614):
        
        # Assigning a Name to a Attribute (line 1614):
        # Getting the type of 'height' (line 1614)
        height_236682 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1614, 22), 'height')
        # Getting the type of 'self' (line 1614)
        self_236683 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1614, 8), 'self')
        # Setting the type of the member 'height' of a type (line 1614)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1614, 8), self_236683, 'height', height_236682)
        
        # Assigning a Name to a Attribute (line 1615):
        
        # Assigning a Name to a Attribute (line 1615):
        # Getting the type of 'width' (line 1615)
        width_236684 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1615, 21), 'width')
        # Getting the type of 'self' (line 1615)
        self_236685 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1615, 8), 'self')
        # Setting the type of the member 'width' of a type (line 1615)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1615, 8), self_236685, 'width', width_236684)
        
        # Assigning a Name to a Attribute (line 1616):
        
        # Assigning a Name to a Attribute (line 1616):
        # Getting the type of 'file' (line 1616)
        file_236686 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1616, 20), 'file')
        # Getting the type of 'self' (line 1616)
        self_236687 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1616, 8), 'self')
        # Setting the type of the member 'file' of a type (line 1616)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1616, 8), self_236687, 'file', file_236686)
        
        # Assigning a Call to a Attribute (line 1617):
        
        # Assigning a Call to a Attribute (line 1617):
        
        # Call to new_gc(...): (line 1617)
        # Processing the call keyword arguments (line 1617)
        kwargs_236690 = {}
        # Getting the type of 'self' (line 1617)
        self_236688 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1617, 18), 'self', False)
        # Obtaining the member 'new_gc' of a type (line 1617)
        new_gc_236689 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1617, 18), self_236688, 'new_gc')
        # Calling new_gc(args, kwargs) (line 1617)
        new_gc_call_result_236691 = invoke(stypy.reporting.localization.Localization(__file__, 1617, 18), new_gc_236689, *[], **kwargs_236690)
        
        # Getting the type of 'self' (line 1617)
        self_236692 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1617, 8), 'self')
        # Setting the type of the member 'gc' of a type (line 1617)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1617, 8), self_236692, 'gc', new_gc_call_result_236691)
        
        # Assigning a Call to a Attribute (line 1618):
        
        # Assigning a Call to a Attribute (line 1618):
        
        # Call to MathTextParser(...): (line 1618)
        # Processing the call arguments (line 1618)
        unicode_236694 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1618, 46), 'unicode', u'Pdf')
        # Processing the call keyword arguments (line 1618)
        kwargs_236695 = {}
        # Getting the type of 'MathTextParser' (line 1618)
        MathTextParser_236693 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1618, 31), 'MathTextParser', False)
        # Calling MathTextParser(args, kwargs) (line 1618)
        MathTextParser_call_result_236696 = invoke(stypy.reporting.localization.Localization(__file__, 1618, 31), MathTextParser_236693, *[unicode_236694], **kwargs_236695)
        
        # Getting the type of 'self' (line 1618)
        self_236697 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1618, 8), 'self')
        # Setting the type of the member 'mathtext_parser' of a type (line 1618)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1618, 8), self_236697, 'mathtext_parser', MathTextParser_call_result_236696)
        
        # Assigning a Name to a Attribute (line 1619):
        
        # Assigning a Name to a Attribute (line 1619):
        # Getting the type of 'image_dpi' (line 1619)
        image_dpi_236698 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1619, 25), 'image_dpi')
        # Getting the type of 'self' (line 1619)
        self_236699 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1619, 8), 'self')
        # Setting the type of the member 'image_dpi' of a type (line 1619)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1619, 8), self_236699, 'image_dpi', image_dpi_236698)
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def finalize(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'finalize'
        module_type_store = module_type_store.open_function_context('finalize', 1621, 4, False)
        # Assigning a type to the variable 'self' (line 1622)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1622, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererPdf.finalize.__dict__.__setitem__('stypy_localization', localization)
        RendererPdf.finalize.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererPdf.finalize.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererPdf.finalize.__dict__.__setitem__('stypy_function_name', 'RendererPdf.finalize')
        RendererPdf.finalize.__dict__.__setitem__('stypy_param_names_list', [])
        RendererPdf.finalize.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererPdf.finalize.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererPdf.finalize.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererPdf.finalize.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererPdf.finalize.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererPdf.finalize.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererPdf.finalize', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'finalize', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'finalize(...)' code ##################

        
        # Call to output(...): (line 1622)
        
        # Call to finalize(...): (line 1622)
        # Processing the call keyword arguments (line 1622)
        kwargs_236706 = {}
        # Getting the type of 'self' (line 1622)
        self_236703 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1622, 26), 'self', False)
        # Obtaining the member 'gc' of a type (line 1622)
        gc_236704 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1622, 26), self_236703, 'gc')
        # Obtaining the member 'finalize' of a type (line 1622)
        finalize_236705 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1622, 26), gc_236704, 'finalize')
        # Calling finalize(args, kwargs) (line 1622)
        finalize_call_result_236707 = invoke(stypy.reporting.localization.Localization(__file__, 1622, 26), finalize_236705, *[], **kwargs_236706)
        
        # Processing the call keyword arguments (line 1622)
        kwargs_236708 = {}
        # Getting the type of 'self' (line 1622)
        self_236700 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1622, 8), 'self', False)
        # Obtaining the member 'file' of a type (line 1622)
        file_236701 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1622, 8), self_236700, 'file')
        # Obtaining the member 'output' of a type (line 1622)
        output_236702 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1622, 8), file_236701, 'output')
        # Calling output(args, kwargs) (line 1622)
        output_call_result_236709 = invoke(stypy.reporting.localization.Localization(__file__, 1622, 8), output_236702, *[finalize_call_result_236707], **kwargs_236708)
        
        
        # ################# End of 'finalize(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'finalize' in the type store
        # Getting the type of 'stypy_return_type' (line 1621)
        stypy_return_type_236710 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1621, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_236710)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'finalize'
        return stypy_return_type_236710


    @norecursion
    def check_gc(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'None' (line 1624)
        None_236711 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1624, 37), 'None')
        defaults = [None_236711]
        # Create a new context for function 'check_gc'
        module_type_store = module_type_store.open_function_context('check_gc', 1624, 4, False)
        # Assigning a type to the variable 'self' (line 1625)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1625, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererPdf.check_gc.__dict__.__setitem__('stypy_localization', localization)
        RendererPdf.check_gc.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererPdf.check_gc.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererPdf.check_gc.__dict__.__setitem__('stypy_function_name', 'RendererPdf.check_gc')
        RendererPdf.check_gc.__dict__.__setitem__('stypy_param_names_list', ['gc', 'fillcolor'])
        RendererPdf.check_gc.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererPdf.check_gc.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererPdf.check_gc.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererPdf.check_gc.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererPdf.check_gc.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererPdf.check_gc.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererPdf.check_gc', ['gc', 'fillcolor'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'check_gc', localization, ['gc', 'fillcolor'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'check_gc(...)' code ##################

        
        # Assigning a Call to a Name (line 1625):
        
        # Assigning a Call to a Name (line 1625):
        
        # Call to getattr(...): (line 1625)
        # Processing the call arguments (line 1625)
        # Getting the type of 'gc' (line 1625)
        gc_236713 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1625, 28), 'gc', False)
        unicode_236714 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1625, 32), 'unicode', u'_fillcolor')
        
        # Obtaining an instance of the builtin type 'tuple' (line 1625)
        tuple_236715 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1625, 47), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1625)
        # Adding element type (line 1625)
        float_236716 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1625, 47), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1625, 47), tuple_236715, float_236716)
        # Adding element type (line 1625)
        float_236717 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1625, 51), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1625, 47), tuple_236715, float_236717)
        # Adding element type (line 1625)
        float_236718 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1625, 55), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1625, 47), tuple_236715, float_236718)
        
        # Processing the call keyword arguments (line 1625)
        kwargs_236719 = {}
        # Getting the type of 'getattr' (line 1625)
        getattr_236712 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1625, 20), 'getattr', False)
        # Calling getattr(args, kwargs) (line 1625)
        getattr_call_result_236720 = invoke(stypy.reporting.localization.Localization(__file__, 1625, 20), getattr_236712, *[gc_236713, unicode_236714, tuple_236715], **kwargs_236719)
        
        # Assigning a type to the variable 'orig_fill' (line 1625)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1625, 8), 'orig_fill', getattr_call_result_236720)
        
        # Assigning a Name to a Attribute (line 1626):
        
        # Assigning a Name to a Attribute (line 1626):
        # Getting the type of 'fillcolor' (line 1626)
        fillcolor_236721 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1626, 24), 'fillcolor')
        # Getting the type of 'gc' (line 1626)
        gc_236722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1626, 8), 'gc')
        # Setting the type of the member '_fillcolor' of a type (line 1626)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1626, 8), gc_236722, '_fillcolor', fillcolor_236721)
        
        # Assigning a Call to a Name (line 1628):
        
        # Assigning a Call to a Name (line 1628):
        
        # Call to getattr(...): (line 1628)
        # Processing the call arguments (line 1628)
        # Getting the type of 'gc' (line 1628)
        gc_236724 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1628, 30), 'gc', False)
        unicode_236725 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1628, 34), 'unicode', u'_effective_alphas')
        
        # Obtaining an instance of the builtin type 'tuple' (line 1628)
        tuple_236726 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1628, 56), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1628)
        # Adding element type (line 1628)
        float_236727 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1628, 56), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1628, 56), tuple_236726, float_236727)
        # Adding element type (line 1628)
        float_236728 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1628, 61), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1628, 56), tuple_236726, float_236728)
        
        # Processing the call keyword arguments (line 1628)
        kwargs_236729 = {}
        # Getting the type of 'getattr' (line 1628)
        getattr_236723 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1628, 22), 'getattr', False)
        # Calling getattr(args, kwargs) (line 1628)
        getattr_call_result_236730 = invoke(stypy.reporting.localization.Localization(__file__, 1628, 22), getattr_236723, *[gc_236724, unicode_236725, tuple_236726], **kwargs_236729)
        
        # Assigning a type to the variable 'orig_alphas' (line 1628)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1628, 8), 'orig_alphas', getattr_call_result_236730)
        
        # Type idiom detected: calculating its left and rigth part (line 1630)
        
        # Call to get_rgb(...): (line 1630)
        # Processing the call keyword arguments (line 1630)
        kwargs_236733 = {}
        # Getting the type of 'gc' (line 1630)
        gc_236731 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1630, 11), 'gc', False)
        # Obtaining the member 'get_rgb' of a type (line 1630)
        get_rgb_236732 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1630, 11), gc_236731, 'get_rgb')
        # Calling get_rgb(args, kwargs) (line 1630)
        get_rgb_call_result_236734 = invoke(stypy.reporting.localization.Localization(__file__, 1630, 11), get_rgb_236732, *[], **kwargs_236733)
        
        # Getting the type of 'None' (line 1630)
        None_236735 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1630, 27), 'None')
        
        (may_be_236736, more_types_in_union_236737) = may_be_none(get_rgb_call_result_236734, None_236735)

        if may_be_236736:

            if more_types_in_union_236737:
                # Runtime conditional SSA (line 1630)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Call to set_foreground(...): (line 1635)
            # Processing the call arguments (line 1635)
            
            # Obtaining an instance of the builtin type 'tuple' (line 1635)
            tuple_236740 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1635, 31), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 1635)
            # Adding element type (line 1635)
            int_236741 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1635, 31), 'int')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1635, 31), tuple_236740, int_236741)
            # Adding element type (line 1635)
            int_236742 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1635, 34), 'int')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1635, 31), tuple_236740, int_236742)
            # Adding element type (line 1635)
            int_236743 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1635, 37), 'int')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1635, 31), tuple_236740, int_236743)
            # Adding element type (line 1635)
            int_236744 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1635, 40), 'int')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1635, 31), tuple_236740, int_236744)
            
            # Processing the call keyword arguments (line 1635)
            # Getting the type of 'True' (line 1635)
            True_236745 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1635, 51), 'True', False)
            keyword_236746 = True_236745
            kwargs_236747 = {'isRGBA': keyword_236746}
            # Getting the type of 'gc' (line 1635)
            gc_236738 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1635, 12), 'gc', False)
            # Obtaining the member 'set_foreground' of a type (line 1635)
            set_foreground_236739 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1635, 12), gc_236738, 'set_foreground')
            # Calling set_foreground(args, kwargs) (line 1635)
            set_foreground_call_result_236748 = invoke(stypy.reporting.localization.Localization(__file__, 1635, 12), set_foreground_236739, *[tuple_236740], **kwargs_236747)
            

            if more_types_in_union_236737:
                # SSA join for if statement (line 1630)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Getting the type of 'gc' (line 1637)
        gc_236749 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1637, 11), 'gc')
        # Obtaining the member '_forced_alpha' of a type (line 1637)
        _forced_alpha_236750 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1637, 11), gc_236749, '_forced_alpha')
        # Testing the type of an if condition (line 1637)
        if_condition_236751 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1637, 8), _forced_alpha_236750)
        # Assigning a type to the variable 'if_condition_236751' (line 1637)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1637, 8), 'if_condition_236751', if_condition_236751)
        # SSA begins for if statement (line 1637)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Tuple to a Attribute (line 1638):
        
        # Assigning a Tuple to a Attribute (line 1638):
        
        # Obtaining an instance of the builtin type 'tuple' (line 1638)
        tuple_236752 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1638, 36), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1638)
        # Adding element type (line 1638)
        # Getting the type of 'gc' (line 1638)
        gc_236753 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1638, 36), 'gc')
        # Obtaining the member '_alpha' of a type (line 1638)
        _alpha_236754 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1638, 36), gc_236753, '_alpha')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1638, 36), tuple_236752, _alpha_236754)
        # Adding element type (line 1638)
        # Getting the type of 'gc' (line 1638)
        gc_236755 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1638, 47), 'gc')
        # Obtaining the member '_alpha' of a type (line 1638)
        _alpha_236756 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1638, 47), gc_236755, '_alpha')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1638, 36), tuple_236752, _alpha_236756)
        
        # Getting the type of 'gc' (line 1638)
        gc_236757 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1638, 12), 'gc')
        # Setting the type of the member '_effective_alphas' of a type (line 1638)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1638, 12), gc_236757, '_effective_alphas', tuple_236752)
        # SSA branch for the else part of an if statement (line 1637)
        module_type_store.open_ssa_branch('else')
        
        
        # Evaluating a boolean operation
        
        # Getting the type of 'fillcolor' (line 1639)
        fillcolor_236758 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1639, 13), 'fillcolor')
        # Getting the type of 'None' (line 1639)
        None_236759 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1639, 26), 'None')
        # Applying the binary operator 'is' (line 1639)
        result_is__236760 = python_operator(stypy.reporting.localization.Localization(__file__, 1639, 13), 'is', fillcolor_236758, None_236759)
        
        
        
        # Call to len(...): (line 1639)
        # Processing the call arguments (line 1639)
        # Getting the type of 'fillcolor' (line 1639)
        fillcolor_236762 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1639, 38), 'fillcolor', False)
        # Processing the call keyword arguments (line 1639)
        kwargs_236763 = {}
        # Getting the type of 'len' (line 1639)
        len_236761 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1639, 34), 'len', False)
        # Calling len(args, kwargs) (line 1639)
        len_call_result_236764 = invoke(stypy.reporting.localization.Localization(__file__, 1639, 34), len_236761, *[fillcolor_236762], **kwargs_236763)
        
        int_236765 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1639, 51), 'int')
        # Applying the binary operator '<' (line 1639)
        result_lt_236766 = python_operator(stypy.reporting.localization.Localization(__file__, 1639, 34), '<', len_call_result_236764, int_236765)
        
        # Applying the binary operator 'or' (line 1639)
        result_or_keyword_236767 = python_operator(stypy.reporting.localization.Localization(__file__, 1639, 13), 'or', result_is__236760, result_lt_236766)
        
        # Testing the type of an if condition (line 1639)
        if_condition_236768 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1639, 13), result_or_keyword_236767)
        # Assigning a type to the variable 'if_condition_236768' (line 1639)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1639, 13), 'if_condition_236768', if_condition_236768)
        # SSA begins for if statement (line 1639)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Tuple to a Attribute (line 1640):
        
        # Assigning a Tuple to a Attribute (line 1640):
        
        # Obtaining an instance of the builtin type 'tuple' (line 1640)
        tuple_236769 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1640, 36), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1640)
        # Adding element type (line 1640)
        
        # Obtaining the type of the subscript
        int_236770 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1640, 44), 'int')
        # Getting the type of 'gc' (line 1640)
        gc_236771 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1640, 36), 'gc')
        # Obtaining the member '_rgb' of a type (line 1640)
        _rgb_236772 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1640, 36), gc_236771, '_rgb')
        # Obtaining the member '__getitem__' of a type (line 1640)
        getitem___236773 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1640, 36), _rgb_236772, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1640)
        subscript_call_result_236774 = invoke(stypy.reporting.localization.Localization(__file__, 1640, 36), getitem___236773, int_236770)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1640, 36), tuple_236769, subscript_call_result_236774)
        # Adding element type (line 1640)
        float_236775 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1640, 48), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1640, 36), tuple_236769, float_236775)
        
        # Getting the type of 'gc' (line 1640)
        gc_236776 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1640, 12), 'gc')
        # Setting the type of the member '_effective_alphas' of a type (line 1640)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1640, 12), gc_236776, '_effective_alphas', tuple_236769)
        # SSA branch for the else part of an if statement (line 1639)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Tuple to a Attribute (line 1642):
        
        # Assigning a Tuple to a Attribute (line 1642):
        
        # Obtaining an instance of the builtin type 'tuple' (line 1642)
        tuple_236777 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1642, 36), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1642)
        # Adding element type (line 1642)
        
        # Obtaining the type of the subscript
        int_236778 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1642, 44), 'int')
        # Getting the type of 'gc' (line 1642)
        gc_236779 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1642, 36), 'gc')
        # Obtaining the member '_rgb' of a type (line 1642)
        _rgb_236780 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1642, 36), gc_236779, '_rgb')
        # Obtaining the member '__getitem__' of a type (line 1642)
        getitem___236781 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1642, 36), _rgb_236780, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1642)
        subscript_call_result_236782 = invoke(stypy.reporting.localization.Localization(__file__, 1642, 36), getitem___236781, int_236778)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1642, 36), tuple_236777, subscript_call_result_236782)
        # Adding element type (line 1642)
        
        # Obtaining the type of the subscript
        int_236783 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1642, 58), 'int')
        # Getting the type of 'fillcolor' (line 1642)
        fillcolor_236784 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1642, 48), 'fillcolor')
        # Obtaining the member '__getitem__' of a type (line 1642)
        getitem___236785 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1642, 48), fillcolor_236784, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1642)
        subscript_call_result_236786 = invoke(stypy.reporting.localization.Localization(__file__, 1642, 48), getitem___236785, int_236783)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1642, 36), tuple_236777, subscript_call_result_236786)
        
        # Getting the type of 'gc' (line 1642)
        gc_236787 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1642, 12), 'gc')
        # Setting the type of the member '_effective_alphas' of a type (line 1642)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1642, 12), gc_236787, '_effective_alphas', tuple_236777)
        # SSA join for if statement (line 1639)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 1637)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 1644):
        
        # Assigning a Call to a Name (line 1644):
        
        # Call to delta(...): (line 1644)
        # Processing the call arguments (line 1644)
        # Getting the type of 'gc' (line 1644)
        gc_236791 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1644, 30), 'gc', False)
        # Processing the call keyword arguments (line 1644)
        kwargs_236792 = {}
        # Getting the type of 'self' (line 1644)
        self_236788 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1644, 16), 'self', False)
        # Obtaining the member 'gc' of a type (line 1644)
        gc_236789 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1644, 16), self_236788, 'gc')
        # Obtaining the member 'delta' of a type (line 1644)
        delta_236790 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1644, 16), gc_236789, 'delta')
        # Calling delta(args, kwargs) (line 1644)
        delta_call_result_236793 = invoke(stypy.reporting.localization.Localization(__file__, 1644, 16), delta_236790, *[gc_236791], **kwargs_236792)
        
        # Assigning a type to the variable 'delta' (line 1644)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1644, 8), 'delta', delta_call_result_236793)
        
        # Getting the type of 'delta' (line 1645)
        delta_236794 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1645, 11), 'delta')
        # Testing the type of an if condition (line 1645)
        if_condition_236795 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1645, 8), delta_236794)
        # Assigning a type to the variable 'if_condition_236795' (line 1645)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1645, 8), 'if_condition_236795', if_condition_236795)
        # SSA begins for if statement (line 1645)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to output(...): (line 1646)
        # Getting the type of 'delta' (line 1646)
        delta_236799 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1646, 30), 'delta', False)
        # Processing the call keyword arguments (line 1646)
        kwargs_236800 = {}
        # Getting the type of 'self' (line 1646)
        self_236796 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1646, 12), 'self', False)
        # Obtaining the member 'file' of a type (line 1646)
        file_236797 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1646, 12), self_236796, 'file')
        # Obtaining the member 'output' of a type (line 1646)
        output_236798 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1646, 12), file_236797, 'output')
        # Calling output(args, kwargs) (line 1646)
        output_call_result_236801 = invoke(stypy.reporting.localization.Localization(__file__, 1646, 12), output_236798, *[delta_236799], **kwargs_236800)
        
        # SSA join for if statement (line 1645)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Name to a Attribute (line 1649):
        
        # Assigning a Name to a Attribute (line 1649):
        # Getting the type of 'orig_fill' (line 1649)
        orig_fill_236802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1649, 24), 'orig_fill')
        # Getting the type of 'gc' (line 1649)
        gc_236803 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1649, 8), 'gc')
        # Setting the type of the member '_fillcolor' of a type (line 1649)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1649, 8), gc_236803, '_fillcolor', orig_fill_236802)
        
        # Assigning a Name to a Attribute (line 1650):
        
        # Assigning a Name to a Attribute (line 1650):
        # Getting the type of 'orig_alphas' (line 1650)
        orig_alphas_236804 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1650, 31), 'orig_alphas')
        # Getting the type of 'gc' (line 1650)
        gc_236805 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1650, 8), 'gc')
        # Setting the type of the member '_effective_alphas' of a type (line 1650)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1650, 8), gc_236805, '_effective_alphas', orig_alphas_236804)
        
        # ################# End of 'check_gc(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'check_gc' in the type store
        # Getting the type of 'stypy_return_type' (line 1624)
        stypy_return_type_236806 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1624, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_236806)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'check_gc'
        return stypy_return_type_236806


    @norecursion
    def track_characters(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'track_characters'
        module_type_store = module_type_store.open_function_context('track_characters', 1652, 4, False)
        # Assigning a type to the variable 'self' (line 1653)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1653, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererPdf.track_characters.__dict__.__setitem__('stypy_localization', localization)
        RendererPdf.track_characters.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererPdf.track_characters.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererPdf.track_characters.__dict__.__setitem__('stypy_function_name', 'RendererPdf.track_characters')
        RendererPdf.track_characters.__dict__.__setitem__('stypy_param_names_list', ['font', 's'])
        RendererPdf.track_characters.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererPdf.track_characters.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererPdf.track_characters.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererPdf.track_characters.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererPdf.track_characters.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererPdf.track_characters.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererPdf.track_characters', ['font', 's'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'track_characters', localization, ['font', 's'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'track_characters(...)' code ##################

        unicode_236807 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1654, (-1)), 'unicode', u'Keeps track of which characters are required from\n        each font.')
        
        
        # Call to isinstance(...): (line 1655)
        # Processing the call arguments (line 1655)
        # Getting the type of 'font' (line 1655)
        font_236809 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1655, 22), 'font', False)
        # Getting the type of 'six' (line 1655)
        six_236810 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1655, 28), 'six', False)
        # Obtaining the member 'string_types' of a type (line 1655)
        string_types_236811 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1655, 28), six_236810, 'string_types')
        # Processing the call keyword arguments (line 1655)
        kwargs_236812 = {}
        # Getting the type of 'isinstance' (line 1655)
        isinstance_236808 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1655, 11), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 1655)
        isinstance_call_result_236813 = invoke(stypy.reporting.localization.Localization(__file__, 1655, 11), isinstance_236808, *[font_236809, string_types_236811], **kwargs_236812)
        
        # Testing the type of an if condition (line 1655)
        if_condition_236814 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1655, 8), isinstance_call_result_236813)
        # Assigning a type to the variable 'if_condition_236814' (line 1655)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1655, 8), 'if_condition_236814', if_condition_236814)
        # SSA begins for if statement (line 1655)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Name to a Name (line 1656):
        
        # Assigning a Name to a Name (line 1656):
        # Getting the type of 'font' (line 1656)
        font_236815 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1656, 20), 'font')
        # Assigning a type to the variable 'fname' (line 1656)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1656, 12), 'fname', font_236815)
        # SSA branch for the else part of an if statement (line 1655)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Attribute to a Name (line 1658):
        
        # Assigning a Attribute to a Name (line 1658):
        # Getting the type of 'font' (line 1658)
        font_236816 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1658, 20), 'font')
        # Obtaining the member 'fname' of a type (line 1658)
        fname_236817 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1658, 20), font_236816, 'fname')
        # Assigning a type to the variable 'fname' (line 1658)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1658, 12), 'fname', fname_236817)
        # SSA join for if statement (line 1655)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Tuple (line 1659):
        
        # Assigning a Call to a Name:
        
        # Call to get_realpath_and_stat(...): (line 1659)
        # Processing the call arguments (line 1659)
        # Getting the type of 'fname' (line 1659)
        fname_236819 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1659, 51), 'fname', False)
        # Processing the call keyword arguments (line 1659)
        kwargs_236820 = {}
        # Getting the type of 'get_realpath_and_stat' (line 1659)
        get_realpath_and_stat_236818 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1659, 29), 'get_realpath_and_stat', False)
        # Calling get_realpath_and_stat(args, kwargs) (line 1659)
        get_realpath_and_stat_call_result_236821 = invoke(stypy.reporting.localization.Localization(__file__, 1659, 29), get_realpath_and_stat_236818, *[fname_236819], **kwargs_236820)
        
        # Assigning a type to the variable 'call_assignment_231677' (line 1659)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1659, 8), 'call_assignment_231677', get_realpath_and_stat_call_result_236821)
        
        # Assigning a Call to a Name (line 1659):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_236824 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1659, 8), 'int')
        # Processing the call keyword arguments
        kwargs_236825 = {}
        # Getting the type of 'call_assignment_231677' (line 1659)
        call_assignment_231677_236822 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1659, 8), 'call_assignment_231677', False)
        # Obtaining the member '__getitem__' of a type (line 1659)
        getitem___236823 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1659, 8), call_assignment_231677_236822, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_236826 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___236823, *[int_236824], **kwargs_236825)
        
        # Assigning a type to the variable 'call_assignment_231678' (line 1659)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1659, 8), 'call_assignment_231678', getitem___call_result_236826)
        
        # Assigning a Name to a Name (line 1659):
        # Getting the type of 'call_assignment_231678' (line 1659)
        call_assignment_231678_236827 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1659, 8), 'call_assignment_231678')
        # Assigning a type to the variable 'realpath' (line 1659)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1659, 8), 'realpath', call_assignment_231678_236827)
        
        # Assigning a Call to a Name (line 1659):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_236830 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1659, 8), 'int')
        # Processing the call keyword arguments
        kwargs_236831 = {}
        # Getting the type of 'call_assignment_231677' (line 1659)
        call_assignment_231677_236828 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1659, 8), 'call_assignment_231677', False)
        # Obtaining the member '__getitem__' of a type (line 1659)
        getitem___236829 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1659, 8), call_assignment_231677_236828, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_236832 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___236829, *[int_236830], **kwargs_236831)
        
        # Assigning a type to the variable 'call_assignment_231679' (line 1659)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1659, 8), 'call_assignment_231679', getitem___call_result_236832)
        
        # Assigning a Name to a Name (line 1659):
        # Getting the type of 'call_assignment_231679' (line 1659)
        call_assignment_231679_236833 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1659, 8), 'call_assignment_231679')
        # Assigning a type to the variable 'stat_key' (line 1659)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1659, 18), 'stat_key', call_assignment_231679_236833)
        
        # Assigning a Call to a Name (line 1660):
        
        # Assigning a Call to a Name (line 1660):
        
        # Call to setdefault(...): (line 1660)
        # Processing the call arguments (line 1660)
        # Getting the type of 'stat_key' (line 1661)
        stat_key_236838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1661, 12), 'stat_key', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1661)
        tuple_236839 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1661, 23), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1661)
        # Adding element type (line 1661)
        # Getting the type of 'realpath' (line 1661)
        realpath_236840 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1661, 23), 'realpath', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1661, 23), tuple_236839, realpath_236840)
        # Adding element type (line 1661)
        
        # Call to set(...): (line 1661)
        # Processing the call keyword arguments (line 1661)
        kwargs_236842 = {}
        # Getting the type of 'set' (line 1661)
        set_236841 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1661, 33), 'set', False)
        # Calling set(args, kwargs) (line 1661)
        set_call_result_236843 = invoke(stypy.reporting.localization.Localization(__file__, 1661, 33), set_236841, *[], **kwargs_236842)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1661, 23), tuple_236839, set_call_result_236843)
        
        # Processing the call keyword arguments (line 1660)
        kwargs_236844 = {}
        # Getting the type of 'self' (line 1660)
        self_236834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1660, 26), 'self', False)
        # Obtaining the member 'file' of a type (line 1660)
        file_236835 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1660, 26), self_236834, 'file')
        # Obtaining the member 'used_characters' of a type (line 1660)
        used_characters_236836 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1660, 26), file_236835, 'used_characters')
        # Obtaining the member 'setdefault' of a type (line 1660)
        setdefault_236837 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1660, 26), used_characters_236836, 'setdefault')
        # Calling setdefault(args, kwargs) (line 1660)
        setdefault_call_result_236845 = invoke(stypy.reporting.localization.Localization(__file__, 1660, 26), setdefault_236837, *[stat_key_236838, tuple_236839], **kwargs_236844)
        
        # Assigning a type to the variable 'used_characters' (line 1660)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1660, 8), 'used_characters', setdefault_call_result_236845)
        
        # Call to update(...): (line 1662)
        # Processing the call arguments (line 1662)
        # Calculating list comprehension
        # Calculating comprehension expression
        # Getting the type of 's' (line 1662)
        s_236855 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1662, 51), 's', False)
        comprehension_236856 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1662, 35), s_236855)
        # Assigning a type to the variable 'x' (line 1662)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1662, 35), 'x', comprehension_236856)
        
        # Call to ord(...): (line 1662)
        # Processing the call arguments (line 1662)
        # Getting the type of 'x' (line 1662)
        x_236852 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1662, 39), 'x', False)
        # Processing the call keyword arguments (line 1662)
        kwargs_236853 = {}
        # Getting the type of 'ord' (line 1662)
        ord_236851 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1662, 35), 'ord', False)
        # Calling ord(args, kwargs) (line 1662)
        ord_call_result_236854 = invoke(stypy.reporting.localization.Localization(__file__, 1662, 35), ord_236851, *[x_236852], **kwargs_236853)
        
        list_236857 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1662, 35), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1662, 35), list_236857, ord_call_result_236854)
        # Processing the call keyword arguments (line 1662)
        kwargs_236858 = {}
        
        # Obtaining the type of the subscript
        int_236846 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1662, 24), 'int')
        # Getting the type of 'used_characters' (line 1662)
        used_characters_236847 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1662, 8), 'used_characters', False)
        # Obtaining the member '__getitem__' of a type (line 1662)
        getitem___236848 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1662, 8), used_characters_236847, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1662)
        subscript_call_result_236849 = invoke(stypy.reporting.localization.Localization(__file__, 1662, 8), getitem___236848, int_236846)
        
        # Obtaining the member 'update' of a type (line 1662)
        update_236850 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1662, 8), subscript_call_result_236849, 'update')
        # Calling update(args, kwargs) (line 1662)
        update_call_result_236859 = invoke(stypy.reporting.localization.Localization(__file__, 1662, 8), update_236850, *[list_236857], **kwargs_236858)
        
        
        # ################# End of 'track_characters(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'track_characters' in the type store
        # Getting the type of 'stypy_return_type' (line 1652)
        stypy_return_type_236860 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1652, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_236860)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'track_characters'
        return stypy_return_type_236860


    @norecursion
    def merge_used_characters(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'merge_used_characters'
        module_type_store = module_type_store.open_function_context('merge_used_characters', 1664, 4, False)
        # Assigning a type to the variable 'self' (line 1665)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1665, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererPdf.merge_used_characters.__dict__.__setitem__('stypy_localization', localization)
        RendererPdf.merge_used_characters.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererPdf.merge_used_characters.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererPdf.merge_used_characters.__dict__.__setitem__('stypy_function_name', 'RendererPdf.merge_used_characters')
        RendererPdf.merge_used_characters.__dict__.__setitem__('stypy_param_names_list', ['other'])
        RendererPdf.merge_used_characters.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererPdf.merge_used_characters.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererPdf.merge_used_characters.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererPdf.merge_used_characters.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererPdf.merge_used_characters.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererPdf.merge_used_characters.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererPdf.merge_used_characters', ['other'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'merge_used_characters', localization, ['other'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'merge_used_characters(...)' code ##################

        
        
        # Call to iteritems(...): (line 1665)
        # Processing the call arguments (line 1665)
        # Getting the type of 'other' (line 1665)
        other_236863 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1665, 59), 'other', False)
        # Processing the call keyword arguments (line 1665)
        kwargs_236864 = {}
        # Getting the type of 'six' (line 1665)
        six_236861 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1665, 45), 'six', False)
        # Obtaining the member 'iteritems' of a type (line 1665)
        iteritems_236862 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1665, 45), six_236861, 'iteritems')
        # Calling iteritems(args, kwargs) (line 1665)
        iteritems_call_result_236865 = invoke(stypy.reporting.localization.Localization(__file__, 1665, 45), iteritems_236862, *[other_236863], **kwargs_236864)
        
        # Testing the type of a for loop iterable (line 1665)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1665, 8), iteritems_call_result_236865)
        # Getting the type of the for loop variable (line 1665)
        for_loop_var_236866 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1665, 8), iteritems_call_result_236865)
        # Assigning a type to the variable 'stat_key' (line 1665)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1665, 8), 'stat_key', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1665, 8), for_loop_var_236866))
        # Assigning a type to the variable 'realpath' (line 1665)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1665, 8), 'realpath', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1665, 8), for_loop_var_236866))
        # Assigning a type to the variable 'charset' (line 1665)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1665, 8), 'charset', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1665, 8), for_loop_var_236866))
        # SSA begins for a for statement (line 1665)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 1666):
        
        # Assigning a Call to a Name (line 1666):
        
        # Call to setdefault(...): (line 1666)
        # Processing the call arguments (line 1666)
        # Getting the type of 'stat_key' (line 1667)
        stat_key_236871 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1667, 16), 'stat_key', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1667)
        tuple_236872 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1667, 27), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1667)
        # Adding element type (line 1667)
        # Getting the type of 'realpath' (line 1667)
        realpath_236873 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1667, 27), 'realpath', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1667, 27), tuple_236872, realpath_236873)
        # Adding element type (line 1667)
        
        # Call to set(...): (line 1667)
        # Processing the call keyword arguments (line 1667)
        kwargs_236875 = {}
        # Getting the type of 'set' (line 1667)
        set_236874 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1667, 37), 'set', False)
        # Calling set(args, kwargs) (line 1667)
        set_call_result_236876 = invoke(stypy.reporting.localization.Localization(__file__, 1667, 37), set_236874, *[], **kwargs_236875)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1667, 27), tuple_236872, set_call_result_236876)
        
        # Processing the call keyword arguments (line 1666)
        kwargs_236877 = {}
        # Getting the type of 'self' (line 1666)
        self_236867 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1666, 30), 'self', False)
        # Obtaining the member 'file' of a type (line 1666)
        file_236868 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1666, 30), self_236867, 'file')
        # Obtaining the member 'used_characters' of a type (line 1666)
        used_characters_236869 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1666, 30), file_236868, 'used_characters')
        # Obtaining the member 'setdefault' of a type (line 1666)
        setdefault_236870 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1666, 30), used_characters_236869, 'setdefault')
        # Calling setdefault(args, kwargs) (line 1666)
        setdefault_call_result_236878 = invoke(stypy.reporting.localization.Localization(__file__, 1666, 30), setdefault_236870, *[stat_key_236871, tuple_236872], **kwargs_236877)
        
        # Assigning a type to the variable 'used_characters' (line 1666)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1666, 12), 'used_characters', setdefault_call_result_236878)
        
        # Call to update(...): (line 1668)
        # Processing the call arguments (line 1668)
        # Getting the type of 'charset' (line 1668)
        charset_236884 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1668, 38), 'charset', False)
        # Processing the call keyword arguments (line 1668)
        kwargs_236885 = {}
        
        # Obtaining the type of the subscript
        int_236879 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1668, 28), 'int')
        # Getting the type of 'used_characters' (line 1668)
        used_characters_236880 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1668, 12), 'used_characters', False)
        # Obtaining the member '__getitem__' of a type (line 1668)
        getitem___236881 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1668, 12), used_characters_236880, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1668)
        subscript_call_result_236882 = invoke(stypy.reporting.localization.Localization(__file__, 1668, 12), getitem___236881, int_236879)
        
        # Obtaining the member 'update' of a type (line 1668)
        update_236883 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1668, 12), subscript_call_result_236882, 'update')
        # Calling update(args, kwargs) (line 1668)
        update_call_result_236886 = invoke(stypy.reporting.localization.Localization(__file__, 1668, 12), update_236883, *[charset_236884], **kwargs_236885)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'merge_used_characters(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'merge_used_characters' in the type store
        # Getting the type of 'stypy_return_type' (line 1664)
        stypy_return_type_236887 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1664, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_236887)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'merge_used_characters'
        return stypy_return_type_236887


    @norecursion
    def get_image_magnification(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'get_image_magnification'
        module_type_store = module_type_store.open_function_context('get_image_magnification', 1670, 4, False)
        # Assigning a type to the variable 'self' (line 1671)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1671, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererPdf.get_image_magnification.__dict__.__setitem__('stypy_localization', localization)
        RendererPdf.get_image_magnification.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererPdf.get_image_magnification.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererPdf.get_image_magnification.__dict__.__setitem__('stypy_function_name', 'RendererPdf.get_image_magnification')
        RendererPdf.get_image_magnification.__dict__.__setitem__('stypy_param_names_list', [])
        RendererPdf.get_image_magnification.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererPdf.get_image_magnification.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererPdf.get_image_magnification.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererPdf.get_image_magnification.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererPdf.get_image_magnification.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererPdf.get_image_magnification.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererPdf.get_image_magnification', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_image_magnification', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_image_magnification(...)' code ##################

        # Getting the type of 'self' (line 1671)
        self_236888 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1671, 15), 'self')
        # Obtaining the member 'image_dpi' of a type (line 1671)
        image_dpi_236889 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1671, 15), self_236888, 'image_dpi')
        float_236890 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1671, 30), 'float')
        # Applying the binary operator 'div' (line 1671)
        result_div_236891 = python_operator(stypy.reporting.localization.Localization(__file__, 1671, 15), 'div', image_dpi_236889, float_236890)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1671)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1671, 8), 'stypy_return_type', result_div_236891)
        
        # ################# End of 'get_image_magnification(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_image_magnification' in the type store
        # Getting the type of 'stypy_return_type' (line 1670)
        stypy_return_type_236892 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1670, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_236892)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_image_magnification'
        return stypy_return_type_236892


    @norecursion
    def option_scale_image(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'option_scale_image'
        module_type_store = module_type_store.open_function_context('option_scale_image', 1673, 4, False)
        # Assigning a type to the variable 'self' (line 1674)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1674, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererPdf.option_scale_image.__dict__.__setitem__('stypy_localization', localization)
        RendererPdf.option_scale_image.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererPdf.option_scale_image.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererPdf.option_scale_image.__dict__.__setitem__('stypy_function_name', 'RendererPdf.option_scale_image')
        RendererPdf.option_scale_image.__dict__.__setitem__('stypy_param_names_list', [])
        RendererPdf.option_scale_image.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererPdf.option_scale_image.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererPdf.option_scale_image.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererPdf.option_scale_image.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererPdf.option_scale_image.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererPdf.option_scale_image.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererPdf.option_scale_image', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'option_scale_image', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'option_scale_image(...)' code ##################

        unicode_236893 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1676, (-1)), 'unicode', u'\n        pdf backend support arbitrary scaling of image.\n        ')
        # Getting the type of 'True' (line 1677)
        True_236894 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1677, 15), 'True')
        # Assigning a type to the variable 'stypy_return_type' (line 1677)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1677, 8), 'stypy_return_type', True_236894)
        
        # ################# End of 'option_scale_image(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'option_scale_image' in the type store
        # Getting the type of 'stypy_return_type' (line 1673)
        stypy_return_type_236895 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1673, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_236895)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'option_scale_image'
        return stypy_return_type_236895


    @norecursion
    def option_image_nocomposite(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'option_image_nocomposite'
        module_type_store = module_type_store.open_function_context('option_image_nocomposite', 1679, 4, False)
        # Assigning a type to the variable 'self' (line 1680)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1680, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererPdf.option_image_nocomposite.__dict__.__setitem__('stypy_localization', localization)
        RendererPdf.option_image_nocomposite.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererPdf.option_image_nocomposite.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererPdf.option_image_nocomposite.__dict__.__setitem__('stypy_function_name', 'RendererPdf.option_image_nocomposite')
        RendererPdf.option_image_nocomposite.__dict__.__setitem__('stypy_param_names_list', [])
        RendererPdf.option_image_nocomposite.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererPdf.option_image_nocomposite.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererPdf.option_image_nocomposite.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererPdf.option_image_nocomposite.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererPdf.option_image_nocomposite.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererPdf.option_image_nocomposite.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererPdf.option_image_nocomposite', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'option_image_nocomposite', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'option_image_nocomposite(...)' code ##################

        unicode_236896 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1683, (-1)), 'unicode', u'\n        return whether to generate a composite image from multiple images on\n        a set of axes\n        ')
        
        
        # Obtaining the type of the subscript
        unicode_236897 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1684, 28), 'unicode', u'image.composite_image')
        # Getting the type of 'rcParams' (line 1684)
        rcParams_236898 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1684, 19), 'rcParams')
        # Obtaining the member '__getitem__' of a type (line 1684)
        getitem___236899 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1684, 19), rcParams_236898, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1684)
        subscript_call_result_236900 = invoke(stypy.reporting.localization.Localization(__file__, 1684, 19), getitem___236899, unicode_236897)
        
        # Applying the 'not' unary operator (line 1684)
        result_not__236901 = python_operator(stypy.reporting.localization.Localization(__file__, 1684, 15), 'not', subscript_call_result_236900)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1684)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1684, 8), 'stypy_return_type', result_not__236901)
        
        # ################# End of 'option_image_nocomposite(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'option_image_nocomposite' in the type store
        # Getting the type of 'stypy_return_type' (line 1679)
        stypy_return_type_236902 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1679, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_236902)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'option_image_nocomposite'
        return stypy_return_type_236902


    @norecursion
    def draw_image(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'None' (line 1686)
        None_236903 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1686, 49), 'None')
        defaults = [None_236903]
        # Create a new context for function 'draw_image'
        module_type_store = module_type_store.open_function_context('draw_image', 1686, 4, False)
        # Assigning a type to the variable 'self' (line 1687)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1687, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererPdf.draw_image.__dict__.__setitem__('stypy_localization', localization)
        RendererPdf.draw_image.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererPdf.draw_image.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererPdf.draw_image.__dict__.__setitem__('stypy_function_name', 'RendererPdf.draw_image')
        RendererPdf.draw_image.__dict__.__setitem__('stypy_param_names_list', ['gc', 'x', 'y', 'im', 'transform'])
        RendererPdf.draw_image.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererPdf.draw_image.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererPdf.draw_image.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererPdf.draw_image.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererPdf.draw_image.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererPdf.draw_image.__dict__.__setitem__('stypy_declared_arg_number', 6)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererPdf.draw_image', ['gc', 'x', 'y', 'im', 'transform'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'draw_image', localization, ['gc', 'x', 'y', 'im', 'transform'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'draw_image(...)' code ##################

        
        # Assigning a Subscript to a Tuple (line 1687):
        
        # Assigning a Subscript to a Name (line 1687):
        
        # Obtaining the type of the subscript
        int_236904 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1687, 8), 'int')
        
        # Obtaining the type of the subscript
        int_236905 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1687, 25), 'int')
        slice_236906 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1687, 15), None, int_236905, None)
        # Getting the type of 'im' (line 1687)
        im_236907 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1687, 15), 'im')
        # Obtaining the member 'shape' of a type (line 1687)
        shape_236908 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1687, 15), im_236907, 'shape')
        # Obtaining the member '__getitem__' of a type (line 1687)
        getitem___236909 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1687, 15), shape_236908, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1687)
        subscript_call_result_236910 = invoke(stypy.reporting.localization.Localization(__file__, 1687, 15), getitem___236909, slice_236906)
        
        # Obtaining the member '__getitem__' of a type (line 1687)
        getitem___236911 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1687, 8), subscript_call_result_236910, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1687)
        subscript_call_result_236912 = invoke(stypy.reporting.localization.Localization(__file__, 1687, 8), getitem___236911, int_236904)
        
        # Assigning a type to the variable 'tuple_var_assignment_231680' (line 1687)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1687, 8), 'tuple_var_assignment_231680', subscript_call_result_236912)
        
        # Assigning a Subscript to a Name (line 1687):
        
        # Obtaining the type of the subscript
        int_236913 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1687, 8), 'int')
        
        # Obtaining the type of the subscript
        int_236914 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1687, 25), 'int')
        slice_236915 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1687, 15), None, int_236914, None)
        # Getting the type of 'im' (line 1687)
        im_236916 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1687, 15), 'im')
        # Obtaining the member 'shape' of a type (line 1687)
        shape_236917 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1687, 15), im_236916, 'shape')
        # Obtaining the member '__getitem__' of a type (line 1687)
        getitem___236918 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1687, 15), shape_236917, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1687)
        subscript_call_result_236919 = invoke(stypy.reporting.localization.Localization(__file__, 1687, 15), getitem___236918, slice_236915)
        
        # Obtaining the member '__getitem__' of a type (line 1687)
        getitem___236920 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1687, 8), subscript_call_result_236919, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1687)
        subscript_call_result_236921 = invoke(stypy.reporting.localization.Localization(__file__, 1687, 8), getitem___236920, int_236913)
        
        # Assigning a type to the variable 'tuple_var_assignment_231681' (line 1687)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1687, 8), 'tuple_var_assignment_231681', subscript_call_result_236921)
        
        # Assigning a Name to a Name (line 1687):
        # Getting the type of 'tuple_var_assignment_231680' (line 1687)
        tuple_var_assignment_231680_236922 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1687, 8), 'tuple_var_assignment_231680')
        # Assigning a type to the variable 'h' (line 1687)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1687, 8), 'h', tuple_var_assignment_231680_236922)
        
        # Assigning a Name to a Name (line 1687):
        # Getting the type of 'tuple_var_assignment_231681' (line 1687)
        tuple_var_assignment_231681_236923 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1687, 8), 'tuple_var_assignment_231681')
        # Assigning a type to the variable 'w' (line 1687)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1687, 11), 'w', tuple_var_assignment_231681_236923)
        
        
        # Evaluating a boolean operation
        
        # Getting the type of 'w' (line 1688)
        w_236924 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1688, 11), 'w')
        int_236925 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1688, 16), 'int')
        # Applying the binary operator '==' (line 1688)
        result_eq_236926 = python_operator(stypy.reporting.localization.Localization(__file__, 1688, 11), '==', w_236924, int_236925)
        
        
        # Getting the type of 'h' (line 1688)
        h_236927 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1688, 21), 'h')
        int_236928 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1688, 26), 'int')
        # Applying the binary operator '==' (line 1688)
        result_eq_236929 = python_operator(stypy.reporting.localization.Localization(__file__, 1688, 21), '==', h_236927, int_236928)
        
        # Applying the binary operator 'or' (line 1688)
        result_or_keyword_236930 = python_operator(stypy.reporting.localization.Localization(__file__, 1688, 11), 'or', result_eq_236926, result_eq_236929)
        
        # Testing the type of an if condition (line 1688)
        if_condition_236931 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1688, 8), result_or_keyword_236930)
        # Assigning a type to the variable 'if_condition_236931' (line 1688)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1688, 8), 'if_condition_236931', if_condition_236931)
        # SSA begins for if statement (line 1688)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        # Assigning a type to the variable 'stypy_return_type' (line 1689)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1689, 12), 'stypy_return_type', types.NoneType)
        # SSA join for if statement (line 1688)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Type idiom detected: calculating its left and rigth part (line 1691)
        # Getting the type of 'transform' (line 1691)
        transform_236932 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1691, 11), 'transform')
        # Getting the type of 'None' (line 1691)
        None_236933 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1691, 24), 'None')
        
        (may_be_236934, more_types_in_union_236935) = may_be_none(transform_236932, None_236933)

        if may_be_236934:

            if more_types_in_union_236935:
                # Runtime conditional SSA (line 1691)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Call to set_alpha(...): (line 1693)
            # Processing the call arguments (line 1693)
            float_236938 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1693, 25), 'float')
            # Processing the call keyword arguments (line 1693)
            kwargs_236939 = {}
            # Getting the type of 'gc' (line 1693)
            gc_236936 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1693, 12), 'gc', False)
            # Obtaining the member 'set_alpha' of a type (line 1693)
            set_alpha_236937 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1693, 12), gc_236936, 'set_alpha')
            # Calling set_alpha(args, kwargs) (line 1693)
            set_alpha_call_result_236940 = invoke(stypy.reporting.localization.Localization(__file__, 1693, 12), set_alpha_236937, *[float_236938], **kwargs_236939)
            

            if more_types_in_union_236935:
                # SSA join for if statement (line 1691)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Call to check_gc(...): (line 1695)
        # Processing the call arguments (line 1695)
        # Getting the type of 'gc' (line 1695)
        gc_236943 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1695, 22), 'gc', False)
        # Processing the call keyword arguments (line 1695)
        kwargs_236944 = {}
        # Getting the type of 'self' (line 1695)
        self_236941 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1695, 8), 'self', False)
        # Obtaining the member 'check_gc' of a type (line 1695)
        check_gc_236942 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1695, 8), self_236941, 'check_gc')
        # Calling check_gc(args, kwargs) (line 1695)
        check_gc_call_result_236945 = invoke(stypy.reporting.localization.Localization(__file__, 1695, 8), check_gc_236942, *[gc_236943], **kwargs_236944)
        
        
        # Assigning a BinOp to a Name (line 1697):
        
        # Assigning a BinOp to a Name (line 1697):
        float_236946 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1697, 12), 'float')
        # Getting the type of 'w' (line 1697)
        w_236947 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1697, 19), 'w')
        # Applying the binary operator '*' (line 1697)
        result_mul_236948 = python_operator(stypy.reporting.localization.Localization(__file__, 1697, 12), '*', float_236946, w_236947)
        
        # Getting the type of 'self' (line 1697)
        self_236949 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1697, 23), 'self')
        # Obtaining the member 'image_dpi' of a type (line 1697)
        image_dpi_236950 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1697, 23), self_236949, 'image_dpi')
        # Applying the binary operator 'div' (line 1697)
        result_div_236951 = python_operator(stypy.reporting.localization.Localization(__file__, 1697, 21), 'div', result_mul_236948, image_dpi_236950)
        
        # Assigning a type to the variable 'w' (line 1697)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1697, 8), 'w', result_div_236951)
        
        # Assigning a BinOp to a Name (line 1698):
        
        # Assigning a BinOp to a Name (line 1698):
        float_236952 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1698, 12), 'float')
        # Getting the type of 'h' (line 1698)
        h_236953 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1698, 19), 'h')
        # Applying the binary operator '*' (line 1698)
        result_mul_236954 = python_operator(stypy.reporting.localization.Localization(__file__, 1698, 12), '*', float_236952, h_236953)
        
        # Getting the type of 'self' (line 1698)
        self_236955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1698, 23), 'self')
        # Obtaining the member 'image_dpi' of a type (line 1698)
        image_dpi_236956 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1698, 23), self_236955, 'image_dpi')
        # Applying the binary operator 'div' (line 1698)
        result_div_236957 = python_operator(stypy.reporting.localization.Localization(__file__, 1698, 21), 'div', result_mul_236954, image_dpi_236956)
        
        # Assigning a type to the variable 'h' (line 1698)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1698, 8), 'h', result_div_236957)
        
        # Assigning a Call to a Name (line 1700):
        
        # Assigning a Call to a Name (line 1700):
        
        # Call to imageObject(...): (line 1700)
        # Processing the call arguments (line 1700)
        # Getting the type of 'im' (line 1700)
        im_236961 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1700, 37), 'im', False)
        # Processing the call keyword arguments (line 1700)
        kwargs_236962 = {}
        # Getting the type of 'self' (line 1700)
        self_236958 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1700, 15), 'self', False)
        # Obtaining the member 'file' of a type (line 1700)
        file_236959 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1700, 15), self_236958, 'file')
        # Obtaining the member 'imageObject' of a type (line 1700)
        imageObject_236960 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1700, 15), file_236959, 'imageObject')
        # Calling imageObject(args, kwargs) (line 1700)
        imageObject_call_result_236963 = invoke(stypy.reporting.localization.Localization(__file__, 1700, 15), imageObject_236960, *[im_236961], **kwargs_236962)
        
        # Assigning a type to the variable 'imob' (line 1700)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1700, 8), 'imob', imageObject_call_result_236963)
        
        # Type idiom detected: calculating its left and rigth part (line 1702)
        # Getting the type of 'transform' (line 1702)
        transform_236964 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1702, 11), 'transform')
        # Getting the type of 'None' (line 1702)
        None_236965 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1702, 24), 'None')
        
        (may_be_236966, more_types_in_union_236967) = may_be_none(transform_236964, None_236965)

        if may_be_236966:

            if more_types_in_union_236967:
                # Runtime conditional SSA (line 1702)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Call to output(...): (line 1703)
            # Processing the call arguments (line 1703)
            # Getting the type of 'Op' (line 1703)
            Op_236971 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1703, 29), 'Op', False)
            # Obtaining the member 'gsave' of a type (line 1703)
            gsave_236972 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1703, 29), Op_236971, 'gsave')
            # Getting the type of 'w' (line 1704)
            w_236973 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1704, 29), 'w', False)
            int_236974 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1704, 32), 'int')
            int_236975 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1704, 35), 'int')
            # Getting the type of 'h' (line 1704)
            h_236976 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1704, 38), 'h', False)
            # Getting the type of 'x' (line 1704)
            x_236977 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1704, 41), 'x', False)
            # Getting the type of 'y' (line 1704)
            y_236978 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1704, 44), 'y', False)
            # Getting the type of 'Op' (line 1704)
            Op_236979 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1704, 47), 'Op', False)
            # Obtaining the member 'concat_matrix' of a type (line 1704)
            concat_matrix_236980 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1704, 47), Op_236979, 'concat_matrix')
            # Getting the type of 'imob' (line 1705)
            imob_236981 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1705, 29), 'imob', False)
            # Getting the type of 'Op' (line 1705)
            Op_236982 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1705, 35), 'Op', False)
            # Obtaining the member 'use_xobject' of a type (line 1705)
            use_xobject_236983 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1705, 35), Op_236982, 'use_xobject')
            # Getting the type of 'Op' (line 1705)
            Op_236984 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1705, 51), 'Op', False)
            # Obtaining the member 'grestore' of a type (line 1705)
            grestore_236985 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1705, 51), Op_236984, 'grestore')
            # Processing the call keyword arguments (line 1703)
            kwargs_236986 = {}
            # Getting the type of 'self' (line 1703)
            self_236968 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1703, 12), 'self', False)
            # Obtaining the member 'file' of a type (line 1703)
            file_236969 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1703, 12), self_236968, 'file')
            # Obtaining the member 'output' of a type (line 1703)
            output_236970 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1703, 12), file_236969, 'output')
            # Calling output(args, kwargs) (line 1703)
            output_call_result_236987 = invoke(stypy.reporting.localization.Localization(__file__, 1703, 12), output_236970, *[gsave_236972, w_236973, int_236974, int_236975, h_236976, x_236977, y_236978, concat_matrix_236980, imob_236981, use_xobject_236983, grestore_236985], **kwargs_236986)
            

            if more_types_in_union_236967:
                # Runtime conditional SSA for else branch (line 1702)
                module_type_store.open_ssa_branch('idiom else')



        if ((not may_be_236966) or more_types_in_union_236967):
            
            # Assigning a Call to a Tuple (line 1707):
            
            # Assigning a Call to a Name:
            
            # Call to to_values(...): (line 1707)
            # Processing the call keyword arguments (line 1707)
            kwargs_236993 = {}
            
            # Call to frozen(...): (line 1707)
            # Processing the call keyword arguments (line 1707)
            kwargs_236990 = {}
            # Getting the type of 'transform' (line 1707)
            transform_236988 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1707, 43), 'transform', False)
            # Obtaining the member 'frozen' of a type (line 1707)
            frozen_236989 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1707, 43), transform_236988, 'frozen')
            # Calling frozen(args, kwargs) (line 1707)
            frozen_call_result_236991 = invoke(stypy.reporting.localization.Localization(__file__, 1707, 43), frozen_236989, *[], **kwargs_236990)
            
            # Obtaining the member 'to_values' of a type (line 1707)
            to_values_236992 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1707, 43), frozen_call_result_236991, 'to_values')
            # Calling to_values(args, kwargs) (line 1707)
            to_values_call_result_236994 = invoke(stypy.reporting.localization.Localization(__file__, 1707, 43), to_values_236992, *[], **kwargs_236993)
            
            # Assigning a type to the variable 'call_assignment_231682' (line 1707)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1707, 12), 'call_assignment_231682', to_values_call_result_236994)
            
            # Assigning a Call to a Name (line 1707):
            
            # Call to __getitem__(...):
            # Processing the call arguments
            int_236997 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1707, 12), 'int')
            # Processing the call keyword arguments
            kwargs_236998 = {}
            # Getting the type of 'call_assignment_231682' (line 1707)
            call_assignment_231682_236995 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1707, 12), 'call_assignment_231682', False)
            # Obtaining the member '__getitem__' of a type (line 1707)
            getitem___236996 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1707, 12), call_assignment_231682_236995, '__getitem__')
            # Calling __getitem__(args, kwargs)
            getitem___call_result_236999 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___236996, *[int_236997], **kwargs_236998)
            
            # Assigning a type to the variable 'call_assignment_231683' (line 1707)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1707, 12), 'call_assignment_231683', getitem___call_result_236999)
            
            # Assigning a Name to a Name (line 1707):
            # Getting the type of 'call_assignment_231683' (line 1707)
            call_assignment_231683_237000 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1707, 12), 'call_assignment_231683')
            # Assigning a type to the variable 'tr1' (line 1707)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1707, 12), 'tr1', call_assignment_231683_237000)
            
            # Assigning a Call to a Name (line 1707):
            
            # Call to __getitem__(...):
            # Processing the call arguments
            int_237003 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1707, 12), 'int')
            # Processing the call keyword arguments
            kwargs_237004 = {}
            # Getting the type of 'call_assignment_231682' (line 1707)
            call_assignment_231682_237001 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1707, 12), 'call_assignment_231682', False)
            # Obtaining the member '__getitem__' of a type (line 1707)
            getitem___237002 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1707, 12), call_assignment_231682_237001, '__getitem__')
            # Calling __getitem__(args, kwargs)
            getitem___call_result_237005 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___237002, *[int_237003], **kwargs_237004)
            
            # Assigning a type to the variable 'call_assignment_231684' (line 1707)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1707, 12), 'call_assignment_231684', getitem___call_result_237005)
            
            # Assigning a Name to a Name (line 1707):
            # Getting the type of 'call_assignment_231684' (line 1707)
            call_assignment_231684_237006 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1707, 12), 'call_assignment_231684')
            # Assigning a type to the variable 'tr2' (line 1707)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1707, 17), 'tr2', call_assignment_231684_237006)
            
            # Assigning a Call to a Name (line 1707):
            
            # Call to __getitem__(...):
            # Processing the call arguments
            int_237009 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1707, 12), 'int')
            # Processing the call keyword arguments
            kwargs_237010 = {}
            # Getting the type of 'call_assignment_231682' (line 1707)
            call_assignment_231682_237007 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1707, 12), 'call_assignment_231682', False)
            # Obtaining the member '__getitem__' of a type (line 1707)
            getitem___237008 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1707, 12), call_assignment_231682_237007, '__getitem__')
            # Calling __getitem__(args, kwargs)
            getitem___call_result_237011 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___237008, *[int_237009], **kwargs_237010)
            
            # Assigning a type to the variable 'call_assignment_231685' (line 1707)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1707, 12), 'call_assignment_231685', getitem___call_result_237011)
            
            # Assigning a Name to a Name (line 1707):
            # Getting the type of 'call_assignment_231685' (line 1707)
            call_assignment_231685_237012 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1707, 12), 'call_assignment_231685')
            # Assigning a type to the variable 'tr3' (line 1707)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1707, 22), 'tr3', call_assignment_231685_237012)
            
            # Assigning a Call to a Name (line 1707):
            
            # Call to __getitem__(...):
            # Processing the call arguments
            int_237015 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1707, 12), 'int')
            # Processing the call keyword arguments
            kwargs_237016 = {}
            # Getting the type of 'call_assignment_231682' (line 1707)
            call_assignment_231682_237013 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1707, 12), 'call_assignment_231682', False)
            # Obtaining the member '__getitem__' of a type (line 1707)
            getitem___237014 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1707, 12), call_assignment_231682_237013, '__getitem__')
            # Calling __getitem__(args, kwargs)
            getitem___call_result_237017 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___237014, *[int_237015], **kwargs_237016)
            
            # Assigning a type to the variable 'call_assignment_231686' (line 1707)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1707, 12), 'call_assignment_231686', getitem___call_result_237017)
            
            # Assigning a Name to a Name (line 1707):
            # Getting the type of 'call_assignment_231686' (line 1707)
            call_assignment_231686_237018 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1707, 12), 'call_assignment_231686')
            # Assigning a type to the variable 'tr4' (line 1707)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1707, 27), 'tr4', call_assignment_231686_237018)
            
            # Assigning a Call to a Name (line 1707):
            
            # Call to __getitem__(...):
            # Processing the call arguments
            int_237021 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1707, 12), 'int')
            # Processing the call keyword arguments
            kwargs_237022 = {}
            # Getting the type of 'call_assignment_231682' (line 1707)
            call_assignment_231682_237019 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1707, 12), 'call_assignment_231682', False)
            # Obtaining the member '__getitem__' of a type (line 1707)
            getitem___237020 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1707, 12), call_assignment_231682_237019, '__getitem__')
            # Calling __getitem__(args, kwargs)
            getitem___call_result_237023 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___237020, *[int_237021], **kwargs_237022)
            
            # Assigning a type to the variable 'call_assignment_231687' (line 1707)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1707, 12), 'call_assignment_231687', getitem___call_result_237023)
            
            # Assigning a Name to a Name (line 1707):
            # Getting the type of 'call_assignment_231687' (line 1707)
            call_assignment_231687_237024 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1707, 12), 'call_assignment_231687')
            # Assigning a type to the variable 'tr5' (line 1707)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1707, 32), 'tr5', call_assignment_231687_237024)
            
            # Assigning a Call to a Name (line 1707):
            
            # Call to __getitem__(...):
            # Processing the call arguments
            int_237027 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1707, 12), 'int')
            # Processing the call keyword arguments
            kwargs_237028 = {}
            # Getting the type of 'call_assignment_231682' (line 1707)
            call_assignment_231682_237025 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1707, 12), 'call_assignment_231682', False)
            # Obtaining the member '__getitem__' of a type (line 1707)
            getitem___237026 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1707, 12), call_assignment_231682_237025, '__getitem__')
            # Calling __getitem__(args, kwargs)
            getitem___call_result_237029 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___237026, *[int_237027], **kwargs_237028)
            
            # Assigning a type to the variable 'call_assignment_231688' (line 1707)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1707, 12), 'call_assignment_231688', getitem___call_result_237029)
            
            # Assigning a Name to a Name (line 1707):
            # Getting the type of 'call_assignment_231688' (line 1707)
            call_assignment_231688_237030 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1707, 12), 'call_assignment_231688')
            # Assigning a type to the variable 'tr6' (line 1707)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1707, 37), 'tr6', call_assignment_231688_237030)
            
            # Call to output(...): (line 1709)
            # Processing the call arguments (line 1709)
            # Getting the type of 'Op' (line 1709)
            Op_237034 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1709, 29), 'Op', False)
            # Obtaining the member 'gsave' of a type (line 1709)
            gsave_237035 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1709, 29), Op_237034, 'gsave')
            int_237036 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1710, 29), 'int')
            int_237037 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1710, 32), 'int')
            int_237038 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1710, 35), 'int')
            int_237039 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1710, 38), 'int')
            # Getting the type of 'x' (line 1710)
            x_237040 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1710, 41), 'x', False)
            # Getting the type of 'y' (line 1710)
            y_237041 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1710, 44), 'y', False)
            # Getting the type of 'Op' (line 1710)
            Op_237042 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1710, 47), 'Op', False)
            # Obtaining the member 'concat_matrix' of a type (line 1710)
            concat_matrix_237043 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1710, 47), Op_237042, 'concat_matrix')
            # Getting the type of 'tr1' (line 1711)
            tr1_237044 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1711, 29), 'tr1', False)
            # Getting the type of 'tr2' (line 1711)
            tr2_237045 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1711, 34), 'tr2', False)
            # Getting the type of 'tr3' (line 1711)
            tr3_237046 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1711, 39), 'tr3', False)
            # Getting the type of 'tr4' (line 1711)
            tr4_237047 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1711, 44), 'tr4', False)
            # Getting the type of 'tr5' (line 1711)
            tr5_237048 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1711, 49), 'tr5', False)
            # Getting the type of 'tr6' (line 1711)
            tr6_237049 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1711, 54), 'tr6', False)
            # Getting the type of 'Op' (line 1711)
            Op_237050 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1711, 59), 'Op', False)
            # Obtaining the member 'concat_matrix' of a type (line 1711)
            concat_matrix_237051 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1711, 59), Op_237050, 'concat_matrix')
            # Getting the type of 'imob' (line 1712)
            imob_237052 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1712, 29), 'imob', False)
            # Getting the type of 'Op' (line 1712)
            Op_237053 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1712, 35), 'Op', False)
            # Obtaining the member 'use_xobject' of a type (line 1712)
            use_xobject_237054 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1712, 35), Op_237053, 'use_xobject')
            # Getting the type of 'Op' (line 1712)
            Op_237055 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1712, 51), 'Op', False)
            # Obtaining the member 'grestore' of a type (line 1712)
            grestore_237056 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1712, 51), Op_237055, 'grestore')
            # Processing the call keyword arguments (line 1709)
            kwargs_237057 = {}
            # Getting the type of 'self' (line 1709)
            self_237031 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1709, 12), 'self', False)
            # Obtaining the member 'file' of a type (line 1709)
            file_237032 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1709, 12), self_237031, 'file')
            # Obtaining the member 'output' of a type (line 1709)
            output_237033 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1709, 12), file_237032, 'output')
            # Calling output(args, kwargs) (line 1709)
            output_call_result_237058 = invoke(stypy.reporting.localization.Localization(__file__, 1709, 12), output_237033, *[gsave_237035, int_237036, int_237037, int_237038, int_237039, x_237040, y_237041, concat_matrix_237043, tr1_237044, tr2_237045, tr3_237046, tr4_237047, tr5_237048, tr6_237049, concat_matrix_237051, imob_237052, use_xobject_237054, grestore_237056], **kwargs_237057)
            

            if (may_be_236966 and more_types_in_union_236967):
                # SSA join for if statement (line 1702)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # ################# End of 'draw_image(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'draw_image' in the type store
        # Getting the type of 'stypy_return_type' (line 1686)
        stypy_return_type_237059 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1686, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_237059)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'draw_image'
        return stypy_return_type_237059


    @norecursion
    def draw_path(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'None' (line 1714)
        None_237060 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1714, 53), 'None')
        defaults = [None_237060]
        # Create a new context for function 'draw_path'
        module_type_store = module_type_store.open_function_context('draw_path', 1714, 4, False)
        # Assigning a type to the variable 'self' (line 1715)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1715, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererPdf.draw_path.__dict__.__setitem__('stypy_localization', localization)
        RendererPdf.draw_path.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererPdf.draw_path.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererPdf.draw_path.__dict__.__setitem__('stypy_function_name', 'RendererPdf.draw_path')
        RendererPdf.draw_path.__dict__.__setitem__('stypy_param_names_list', ['gc', 'path', 'transform', 'rgbFace'])
        RendererPdf.draw_path.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererPdf.draw_path.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererPdf.draw_path.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererPdf.draw_path.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererPdf.draw_path.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererPdf.draw_path.__dict__.__setitem__('stypy_declared_arg_number', 5)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererPdf.draw_path', ['gc', 'path', 'transform', 'rgbFace'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'draw_path', localization, ['gc', 'path', 'transform', 'rgbFace'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'draw_path(...)' code ##################

        
        # Call to check_gc(...): (line 1715)
        # Processing the call arguments (line 1715)
        # Getting the type of 'gc' (line 1715)
        gc_237063 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1715, 22), 'gc', False)
        # Getting the type of 'rgbFace' (line 1715)
        rgbFace_237064 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1715, 26), 'rgbFace', False)
        # Processing the call keyword arguments (line 1715)
        kwargs_237065 = {}
        # Getting the type of 'self' (line 1715)
        self_237061 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1715, 8), 'self', False)
        # Obtaining the member 'check_gc' of a type (line 1715)
        check_gc_237062 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1715, 8), self_237061, 'check_gc')
        # Calling check_gc(args, kwargs) (line 1715)
        check_gc_call_result_237066 = invoke(stypy.reporting.localization.Localization(__file__, 1715, 8), check_gc_237062, *[gc_237063, rgbFace_237064], **kwargs_237065)
        
        
        # Call to writePath(...): (line 1716)
        # Processing the call arguments (line 1716)
        # Getting the type of 'path' (line 1717)
        path_237070 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1717, 12), 'path', False)
        # Getting the type of 'transform' (line 1717)
        transform_237071 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1717, 18), 'transform', False)
        
        # Evaluating a boolean operation
        
        # Getting the type of 'rgbFace' (line 1718)
        rgbFace_237072 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1718, 12), 'rgbFace', False)
        # Getting the type of 'None' (line 1718)
        None_237073 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1718, 23), 'None', False)
        # Applying the binary operator 'is' (line 1718)
        result_is__237074 = python_operator(stypy.reporting.localization.Localization(__file__, 1718, 12), 'is', rgbFace_237072, None_237073)
        
        
        
        # Call to get_hatch_path(...): (line 1718)
        # Processing the call keyword arguments (line 1718)
        kwargs_237077 = {}
        # Getting the type of 'gc' (line 1718)
        gc_237075 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1718, 32), 'gc', False)
        # Obtaining the member 'get_hatch_path' of a type (line 1718)
        get_hatch_path_237076 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1718, 32), gc_237075, 'get_hatch_path')
        # Calling get_hatch_path(args, kwargs) (line 1718)
        get_hatch_path_call_result_237078 = invoke(stypy.reporting.localization.Localization(__file__, 1718, 32), get_hatch_path_237076, *[], **kwargs_237077)
        
        # Getting the type of 'None' (line 1718)
        None_237079 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1718, 55), 'None', False)
        # Applying the binary operator 'is' (line 1718)
        result_is__237080 = python_operator(stypy.reporting.localization.Localization(__file__, 1718, 32), 'is', get_hatch_path_call_result_237078, None_237079)
        
        # Applying the binary operator 'and' (line 1718)
        result_and_keyword_237081 = python_operator(stypy.reporting.localization.Localization(__file__, 1718, 12), 'and', result_is__237074, result_is__237080)
        
        
        # Call to get_sketch_params(...): (line 1719)
        # Processing the call keyword arguments (line 1719)
        kwargs_237084 = {}
        # Getting the type of 'gc' (line 1719)
        gc_237082 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1719, 12), 'gc', False)
        # Obtaining the member 'get_sketch_params' of a type (line 1719)
        get_sketch_params_237083 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1719, 12), gc_237082, 'get_sketch_params')
        # Calling get_sketch_params(args, kwargs) (line 1719)
        get_sketch_params_call_result_237085 = invoke(stypy.reporting.localization.Localization(__file__, 1719, 12), get_sketch_params_237083, *[], **kwargs_237084)
        
        # Processing the call keyword arguments (line 1716)
        kwargs_237086 = {}
        # Getting the type of 'self' (line 1716)
        self_237067 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1716, 8), 'self', False)
        # Obtaining the member 'file' of a type (line 1716)
        file_237068 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1716, 8), self_237067, 'file')
        # Obtaining the member 'writePath' of a type (line 1716)
        writePath_237069 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1716, 8), file_237068, 'writePath')
        # Calling writePath(args, kwargs) (line 1716)
        writePath_call_result_237087 = invoke(stypy.reporting.localization.Localization(__file__, 1716, 8), writePath_237069, *[path_237070, transform_237071, result_and_keyword_237081, get_sketch_params_call_result_237085], **kwargs_237086)
        
        
        # Call to output(...): (line 1720)
        # Processing the call arguments (line 1720)
        
        # Call to paint(...): (line 1720)
        # Processing the call keyword arguments (line 1720)
        kwargs_237094 = {}
        # Getting the type of 'self' (line 1720)
        self_237091 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1720, 25), 'self', False)
        # Obtaining the member 'gc' of a type (line 1720)
        gc_237092 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1720, 25), self_237091, 'gc')
        # Obtaining the member 'paint' of a type (line 1720)
        paint_237093 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1720, 25), gc_237092, 'paint')
        # Calling paint(args, kwargs) (line 1720)
        paint_call_result_237095 = invoke(stypy.reporting.localization.Localization(__file__, 1720, 25), paint_237093, *[], **kwargs_237094)
        
        # Processing the call keyword arguments (line 1720)
        kwargs_237096 = {}
        # Getting the type of 'self' (line 1720)
        self_237088 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1720, 8), 'self', False)
        # Obtaining the member 'file' of a type (line 1720)
        file_237089 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1720, 8), self_237088, 'file')
        # Obtaining the member 'output' of a type (line 1720)
        output_237090 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1720, 8), file_237089, 'output')
        # Calling output(args, kwargs) (line 1720)
        output_call_result_237097 = invoke(stypy.reporting.localization.Localization(__file__, 1720, 8), output_237090, *[paint_call_result_237095], **kwargs_237096)
        
        
        # ################# End of 'draw_path(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'draw_path' in the type store
        # Getting the type of 'stypy_return_type' (line 1714)
        stypy_return_type_237098 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1714, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_237098)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'draw_path'
        return stypy_return_type_237098


    @norecursion
    def draw_path_collection(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'draw_path_collection'
        module_type_store = module_type_store.open_function_context('draw_path_collection', 1722, 4, False)
        # Assigning a type to the variable 'self' (line 1723)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1723, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererPdf.draw_path_collection.__dict__.__setitem__('stypy_localization', localization)
        RendererPdf.draw_path_collection.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererPdf.draw_path_collection.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererPdf.draw_path_collection.__dict__.__setitem__('stypy_function_name', 'RendererPdf.draw_path_collection')
        RendererPdf.draw_path_collection.__dict__.__setitem__('stypy_param_names_list', ['gc', 'master_transform', 'paths', 'all_transforms', 'offsets', 'offsetTrans', 'facecolors', 'edgecolors', 'linewidths', 'linestyles', 'antialiaseds', 'urls', 'offset_position'])
        RendererPdf.draw_path_collection.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererPdf.draw_path_collection.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererPdf.draw_path_collection.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererPdf.draw_path_collection.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererPdf.draw_path_collection.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererPdf.draw_path_collection.__dict__.__setitem__('stypy_declared_arg_number', 14)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererPdf.draw_path_collection', ['gc', 'master_transform', 'paths', 'all_transforms', 'offsets', 'offsetTrans', 'facecolors', 'edgecolors', 'linewidths', 'linestyles', 'antialiaseds', 'urls', 'offset_position'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'draw_path_collection', localization, ['gc', 'master_transform', 'paths', 'all_transforms', 'offsets', 'offsetTrans', 'facecolors', 'edgecolors', 'linewidths', 'linestyles', 'antialiaseds', 'urls', 'offset_position'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'draw_path_collection(...)' code ##################

        
        # Assigning a Name to a Name (line 1729):
        
        # Assigning a Name to a Name (line 1729):
        # Getting the type of 'True' (line 1729)
        True_237099 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1729, 30), 'True')
        # Assigning a type to the variable 'can_do_optimization' (line 1729)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1729, 8), 'can_do_optimization', True_237099)
        
        # Assigning a Call to a Name (line 1730):
        
        # Assigning a Call to a Name (line 1730):
        
        # Call to asarray(...): (line 1730)
        # Processing the call arguments (line 1730)
        # Getting the type of 'facecolors' (line 1730)
        facecolors_237102 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1730, 32), 'facecolors', False)
        # Processing the call keyword arguments (line 1730)
        kwargs_237103 = {}
        # Getting the type of 'np' (line 1730)
        np_237100 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1730, 21), 'np', False)
        # Obtaining the member 'asarray' of a type (line 1730)
        asarray_237101 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1730, 21), np_237100, 'asarray')
        # Calling asarray(args, kwargs) (line 1730)
        asarray_call_result_237104 = invoke(stypy.reporting.localization.Localization(__file__, 1730, 21), asarray_237101, *[facecolors_237102], **kwargs_237103)
        
        # Assigning a type to the variable 'facecolors' (line 1730)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1730, 8), 'facecolors', asarray_call_result_237104)
        
        # Assigning a Call to a Name (line 1731):
        
        # Assigning a Call to a Name (line 1731):
        
        # Call to asarray(...): (line 1731)
        # Processing the call arguments (line 1731)
        # Getting the type of 'edgecolors' (line 1731)
        edgecolors_237107 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1731, 32), 'edgecolors', False)
        # Processing the call keyword arguments (line 1731)
        kwargs_237108 = {}
        # Getting the type of 'np' (line 1731)
        np_237105 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1731, 21), 'np', False)
        # Obtaining the member 'asarray' of a type (line 1731)
        asarray_237106 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1731, 21), np_237105, 'asarray')
        # Calling asarray(args, kwargs) (line 1731)
        asarray_call_result_237109 = invoke(stypy.reporting.localization.Localization(__file__, 1731, 21), asarray_237106, *[edgecolors_237107], **kwargs_237108)
        
        # Assigning a type to the variable 'edgecolors' (line 1731)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1731, 8), 'edgecolors', asarray_call_result_237109)
        
        
        
        # Call to len(...): (line 1733)
        # Processing the call arguments (line 1733)
        # Getting the type of 'facecolors' (line 1733)
        facecolors_237111 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1733, 19), 'facecolors', False)
        # Processing the call keyword arguments (line 1733)
        kwargs_237112 = {}
        # Getting the type of 'len' (line 1733)
        len_237110 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1733, 15), 'len', False)
        # Calling len(args, kwargs) (line 1733)
        len_call_result_237113 = invoke(stypy.reporting.localization.Localization(__file__, 1733, 15), len_237110, *[facecolors_237111], **kwargs_237112)
        
        # Applying the 'not' unary operator (line 1733)
        result_not__237114 = python_operator(stypy.reporting.localization.Localization(__file__, 1733, 11), 'not', len_call_result_237113)
        
        # Testing the type of an if condition (line 1733)
        if_condition_237115 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1733, 8), result_not__237114)
        # Assigning a type to the variable 'if_condition_237115' (line 1733)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1733, 8), 'if_condition_237115', if_condition_237115)
        # SSA begins for if statement (line 1733)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Name to a Name (line 1734):
        
        # Assigning a Name to a Name (line 1734):
        # Getting the type of 'False' (line 1734)
        False_237116 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1734, 21), 'False')
        # Assigning a type to the variable 'filled' (line 1734)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1734, 12), 'filled', False_237116)
        
        # Assigning a UnaryOp to a Name (line 1735):
        
        # Assigning a UnaryOp to a Name (line 1735):
        
        
        # Call to get_hatch(...): (line 1735)
        # Processing the call keyword arguments (line 1735)
        kwargs_237119 = {}
        # Getting the type of 'gc' (line 1735)
        gc_237117 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1735, 38), 'gc', False)
        # Obtaining the member 'get_hatch' of a type (line 1735)
        get_hatch_237118 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1735, 38), gc_237117, 'get_hatch')
        # Calling get_hatch(args, kwargs) (line 1735)
        get_hatch_call_result_237120 = invoke(stypy.reporting.localization.Localization(__file__, 1735, 38), get_hatch_237118, *[], **kwargs_237119)
        
        # Applying the 'not' unary operator (line 1735)
        result_not__237121 = python_operator(stypy.reporting.localization.Localization(__file__, 1735, 34), 'not', get_hatch_call_result_237120)
        
        # Assigning a type to the variable 'can_do_optimization' (line 1735)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1735, 12), 'can_do_optimization', result_not__237121)
        # SSA branch for the else part of an if statement (line 1733)
        module_type_store.open_ssa_branch('else')
        
        
        # Call to all(...): (line 1737)
        # Processing the call arguments (line 1737)
        
        
        # Obtaining the type of the subscript
        slice_237124 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1737, 22), None, None, None)
        int_237125 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1737, 36), 'int')
        # Getting the type of 'facecolors' (line 1737)
        facecolors_237126 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1737, 22), 'facecolors', False)
        # Obtaining the member '__getitem__' of a type (line 1737)
        getitem___237127 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1737, 22), facecolors_237126, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1737)
        subscript_call_result_237128 = invoke(stypy.reporting.localization.Localization(__file__, 1737, 22), getitem___237127, (slice_237124, int_237125))
        
        
        # Obtaining the type of the subscript
        
        # Obtaining an instance of the builtin type 'tuple' (line 1737)
        tuple_237129 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1737, 53), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1737)
        # Adding element type (line 1737)
        int_237130 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1737, 53), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1737, 53), tuple_237129, int_237130)
        # Adding element type (line 1737)
        int_237131 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1737, 56), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1737, 53), tuple_237129, int_237131)
        
        # Getting the type of 'facecolors' (line 1737)
        facecolors_237132 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1737, 42), 'facecolors', False)
        # Obtaining the member '__getitem__' of a type (line 1737)
        getitem___237133 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1737, 42), facecolors_237132, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1737)
        subscript_call_result_237134 = invoke(stypy.reporting.localization.Localization(__file__, 1737, 42), getitem___237133, tuple_237129)
        
        # Applying the binary operator '==' (line 1737)
        result_eq_237135 = python_operator(stypy.reporting.localization.Localization(__file__, 1737, 22), '==', subscript_call_result_237128, subscript_call_result_237134)
        
        # Processing the call keyword arguments (line 1737)
        kwargs_237136 = {}
        # Getting the type of 'np' (line 1737)
        np_237122 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1737, 15), 'np', False)
        # Obtaining the member 'all' of a type (line 1737)
        all_237123 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1737, 15), np_237122, 'all')
        # Calling all(args, kwargs) (line 1737)
        all_call_result_237137 = invoke(stypy.reporting.localization.Localization(__file__, 1737, 15), all_237123, *[result_eq_237135], **kwargs_237136)
        
        # Testing the type of an if condition (line 1737)
        if_condition_237138 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1737, 12), all_call_result_237137)
        # Assigning a type to the variable 'if_condition_237138' (line 1737)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1737, 12), 'if_condition_237138', if_condition_237138)
        # SSA begins for if statement (line 1737)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Compare to a Name (line 1738):
        
        # Assigning a Compare to a Name (line 1738):
        
        
        # Obtaining the type of the subscript
        
        # Obtaining an instance of the builtin type 'tuple' (line 1738)
        tuple_237139 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1738, 36), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1738)
        # Adding element type (line 1738)
        int_237140 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1738, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1738, 36), tuple_237139, int_237140)
        # Adding element type (line 1738)
        int_237141 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1738, 39), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1738, 36), tuple_237139, int_237141)
        
        # Getting the type of 'facecolors' (line 1738)
        facecolors_237142 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1738, 25), 'facecolors')
        # Obtaining the member '__getitem__' of a type (line 1738)
        getitem___237143 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1738, 25), facecolors_237142, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1738)
        subscript_call_result_237144 = invoke(stypy.reporting.localization.Localization(__file__, 1738, 25), getitem___237143, tuple_237139)
        
        float_237145 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1738, 45), 'float')
        # Applying the binary operator '!=' (line 1738)
        result_ne_237146 = python_operator(stypy.reporting.localization.Localization(__file__, 1738, 25), '!=', subscript_call_result_237144, float_237145)
        
        # Assigning a type to the variable 'filled' (line 1738)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1738, 16), 'filled', result_ne_237146)
        # SSA branch for the else part of an if statement (line 1737)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Name to a Name (line 1740):
        
        # Assigning a Name to a Name (line 1740):
        # Getting the type of 'False' (line 1740)
        False_237147 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1740, 38), 'False')
        # Assigning a type to the variable 'can_do_optimization' (line 1740)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1740, 16), 'can_do_optimization', False_237147)
        # SSA join for if statement (line 1737)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 1733)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        
        # Call to len(...): (line 1742)
        # Processing the call arguments (line 1742)
        # Getting the type of 'edgecolors' (line 1742)
        edgecolors_237149 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1742, 19), 'edgecolors', False)
        # Processing the call keyword arguments (line 1742)
        kwargs_237150 = {}
        # Getting the type of 'len' (line 1742)
        len_237148 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1742, 15), 'len', False)
        # Calling len(args, kwargs) (line 1742)
        len_call_result_237151 = invoke(stypy.reporting.localization.Localization(__file__, 1742, 15), len_237148, *[edgecolors_237149], **kwargs_237150)
        
        # Applying the 'not' unary operator (line 1742)
        result_not__237152 = python_operator(stypy.reporting.localization.Localization(__file__, 1742, 11), 'not', len_call_result_237151)
        
        # Testing the type of an if condition (line 1742)
        if_condition_237153 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1742, 8), result_not__237152)
        # Assigning a type to the variable 'if_condition_237153' (line 1742)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1742, 8), 'if_condition_237153', if_condition_237153)
        # SSA begins for if statement (line 1742)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Name to a Name (line 1743):
        
        # Assigning a Name to a Name (line 1743):
        # Getting the type of 'False' (line 1743)
        False_237154 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1743, 22), 'False')
        # Assigning a type to the variable 'stroked' (line 1743)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1743, 12), 'stroked', False_237154)
        # SSA branch for the else part of an if statement (line 1742)
        module_type_store.open_ssa_branch('else')
        
        
        # Call to all(...): (line 1745)
        # Processing the call arguments (line 1745)
        
        
        # Call to asarray(...): (line 1745)
        # Processing the call arguments (line 1745)
        # Getting the type of 'linewidths' (line 1745)
        linewidths_237159 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1745, 33), 'linewidths', False)
        # Processing the call keyword arguments (line 1745)
        kwargs_237160 = {}
        # Getting the type of 'np' (line 1745)
        np_237157 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1745, 22), 'np', False)
        # Obtaining the member 'asarray' of a type (line 1745)
        asarray_237158 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1745, 22), np_237157, 'asarray')
        # Calling asarray(args, kwargs) (line 1745)
        asarray_call_result_237161 = invoke(stypy.reporting.localization.Localization(__file__, 1745, 22), asarray_237158, *[linewidths_237159], **kwargs_237160)
        
        float_237162 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1745, 48), 'float')
        # Applying the binary operator '==' (line 1745)
        result_eq_237163 = python_operator(stypy.reporting.localization.Localization(__file__, 1745, 22), '==', asarray_call_result_237161, float_237162)
        
        # Processing the call keyword arguments (line 1745)
        kwargs_237164 = {}
        # Getting the type of 'np' (line 1745)
        np_237155 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1745, 15), 'np', False)
        # Obtaining the member 'all' of a type (line 1745)
        all_237156 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1745, 15), np_237155, 'all')
        # Calling all(args, kwargs) (line 1745)
        all_call_result_237165 = invoke(stypy.reporting.localization.Localization(__file__, 1745, 15), all_237156, *[result_eq_237163], **kwargs_237164)
        
        # Testing the type of an if condition (line 1745)
        if_condition_237166 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1745, 12), all_call_result_237165)
        # Assigning a type to the variable 'if_condition_237166' (line 1745)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1745, 12), 'if_condition_237166', if_condition_237166)
        # SSA begins for if statement (line 1745)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Name to a Name (line 1746):
        
        # Assigning a Name to a Name (line 1746):
        # Getting the type of 'False' (line 1746)
        False_237167 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1746, 26), 'False')
        # Assigning a type to the variable 'stroked' (line 1746)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1746, 16), 'stroked', False_237167)
        # SSA branch for the else part of an if statement (line 1745)
        module_type_store.open_ssa_branch('else')
        
        
        # Call to all(...): (line 1747)
        # Processing the call arguments (line 1747)
        
        
        # Obtaining the type of the subscript
        slice_237170 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1747, 24), None, None, None)
        int_237171 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1747, 38), 'int')
        # Getting the type of 'edgecolors' (line 1747)
        edgecolors_237172 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1747, 24), 'edgecolors', False)
        # Obtaining the member '__getitem__' of a type (line 1747)
        getitem___237173 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1747, 24), edgecolors_237172, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1747)
        subscript_call_result_237174 = invoke(stypy.reporting.localization.Localization(__file__, 1747, 24), getitem___237173, (slice_237170, int_237171))
        
        
        # Obtaining the type of the subscript
        
        # Obtaining an instance of the builtin type 'tuple' (line 1747)
        tuple_237175 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1747, 55), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1747)
        # Adding element type (line 1747)
        int_237176 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1747, 55), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1747, 55), tuple_237175, int_237176)
        # Adding element type (line 1747)
        int_237177 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1747, 58), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1747, 55), tuple_237175, int_237177)
        
        # Getting the type of 'edgecolors' (line 1747)
        edgecolors_237178 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1747, 44), 'edgecolors', False)
        # Obtaining the member '__getitem__' of a type (line 1747)
        getitem___237179 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1747, 44), edgecolors_237178, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1747)
        subscript_call_result_237180 = invoke(stypy.reporting.localization.Localization(__file__, 1747, 44), getitem___237179, tuple_237175)
        
        # Applying the binary operator '==' (line 1747)
        result_eq_237181 = python_operator(stypy.reporting.localization.Localization(__file__, 1747, 24), '==', subscript_call_result_237174, subscript_call_result_237180)
        
        # Processing the call keyword arguments (line 1747)
        kwargs_237182 = {}
        # Getting the type of 'np' (line 1747)
        np_237168 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1747, 17), 'np', False)
        # Obtaining the member 'all' of a type (line 1747)
        all_237169 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1747, 17), np_237168, 'all')
        # Calling all(args, kwargs) (line 1747)
        all_call_result_237183 = invoke(stypy.reporting.localization.Localization(__file__, 1747, 17), all_237169, *[result_eq_237181], **kwargs_237182)
        
        # Testing the type of an if condition (line 1747)
        if_condition_237184 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1747, 17), all_call_result_237183)
        # Assigning a type to the variable 'if_condition_237184' (line 1747)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1747, 17), 'if_condition_237184', if_condition_237184)
        # SSA begins for if statement (line 1747)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Compare to a Name (line 1748):
        
        # Assigning a Compare to a Name (line 1748):
        
        
        # Obtaining the type of the subscript
        
        # Obtaining an instance of the builtin type 'tuple' (line 1748)
        tuple_237185 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1748, 37), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1748)
        # Adding element type (line 1748)
        int_237186 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1748, 37), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1748, 37), tuple_237185, int_237186)
        # Adding element type (line 1748)
        int_237187 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1748, 40), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1748, 37), tuple_237185, int_237187)
        
        # Getting the type of 'edgecolors' (line 1748)
        edgecolors_237188 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1748, 26), 'edgecolors')
        # Obtaining the member '__getitem__' of a type (line 1748)
        getitem___237189 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1748, 26), edgecolors_237188, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1748)
        subscript_call_result_237190 = invoke(stypy.reporting.localization.Localization(__file__, 1748, 26), getitem___237189, tuple_237185)
        
        float_237191 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1748, 46), 'float')
        # Applying the binary operator '!=' (line 1748)
        result_ne_237192 = python_operator(stypy.reporting.localization.Localization(__file__, 1748, 26), '!=', subscript_call_result_237190, float_237191)
        
        # Assigning a type to the variable 'stroked' (line 1748)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1748, 16), 'stroked', result_ne_237192)
        # SSA branch for the else part of an if statement (line 1747)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Name to a Name (line 1750):
        
        # Assigning a Name to a Name (line 1750):
        # Getting the type of 'False' (line 1750)
        False_237193 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1750, 38), 'False')
        # Assigning a type to the variable 'can_do_optimization' (line 1750)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1750, 16), 'can_do_optimization', False_237193)
        # SSA join for if statement (line 1747)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 1745)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 1742)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a IfExp to a Name (line 1756):
        
        # Assigning a IfExp to a Name (line 1756):
        
        
        
        # Call to len(...): (line 1756)
        # Processing the call arguments (line 1756)
        # Getting the type of 'paths' (line 1756)
        paths_237195 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1756, 49), 'paths', False)
        # Processing the call keyword arguments (line 1756)
        kwargs_237196 = {}
        # Getting the type of 'len' (line 1756)
        len_237194 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1756, 45), 'len', False)
        # Calling len(args, kwargs) (line 1756)
        len_call_result_237197 = invoke(stypy.reporting.localization.Localization(__file__, 1756, 45), len_237194, *[paths_237195], **kwargs_237196)
        
        int_237198 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1756, 58), 'int')
        # Applying the binary operator '>' (line 1756)
        result_gt_237199 = python_operator(stypy.reporting.localization.Localization(__file__, 1756, 45), '>', len_call_result_237197, int_237198)
        
        # Testing the type of an if expression (line 1756)
        is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1756, 19), result_gt_237199)
        # SSA begins for if expression (line 1756)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if expression')
        
        # Call to len(...): (line 1756)
        # Processing the call arguments (line 1756)
        
        # Obtaining the type of the subscript
        int_237201 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1756, 29), 'int')
        # Getting the type of 'paths' (line 1756)
        paths_237202 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1756, 23), 'paths', False)
        # Obtaining the member '__getitem__' of a type (line 1756)
        getitem___237203 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1756, 23), paths_237202, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1756)
        subscript_call_result_237204 = invoke(stypy.reporting.localization.Localization(__file__, 1756, 23), getitem___237203, int_237201)
        
        # Obtaining the member 'vertices' of a type (line 1756)
        vertices_237205 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1756, 23), subscript_call_result_237204, 'vertices')
        # Processing the call keyword arguments (line 1756)
        kwargs_237206 = {}
        # Getting the type of 'len' (line 1756)
        len_237200 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1756, 19), 'len', False)
        # Calling len(args, kwargs) (line 1756)
        len_call_result_237207 = invoke(stypy.reporting.localization.Localization(__file__, 1756, 19), len_237200, *[vertices_237205], **kwargs_237206)
        
        # SSA branch for the else part of an if expression (line 1756)
        module_type_store.open_ssa_branch('if expression else')
        int_237208 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1756, 65), 'int')
        # SSA join for if expression (line 1756)
        module_type_store = module_type_store.join_ssa_context()
        if_exp_237209 = union_type.UnionType.add(len_call_result_237207, int_237208)
        
        # Assigning a type to the variable 'len_path' (line 1756)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1756, 8), 'len_path', if_exp_237209)
        
        # Assigning a Call to a Name (line 1757):
        
        # Assigning a Call to a Name (line 1757):
        
        # Call to _iter_collection_uses_per_path(...): (line 1757)
        # Processing the call arguments (line 1757)
        # Getting the type of 'paths' (line 1758)
        paths_237212 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1758, 12), 'paths', False)
        # Getting the type of 'all_transforms' (line 1758)
        all_transforms_237213 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1758, 19), 'all_transforms', False)
        # Getting the type of 'offsets' (line 1758)
        offsets_237214 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1758, 35), 'offsets', False)
        # Getting the type of 'facecolors' (line 1758)
        facecolors_237215 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1758, 44), 'facecolors', False)
        # Getting the type of 'edgecolors' (line 1758)
        edgecolors_237216 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1758, 56), 'edgecolors', False)
        # Processing the call keyword arguments (line 1757)
        kwargs_237217 = {}
        # Getting the type of 'self' (line 1757)
        self_237210 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1757, 24), 'self', False)
        # Obtaining the member '_iter_collection_uses_per_path' of a type (line 1757)
        _iter_collection_uses_per_path_237211 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1757, 24), self_237210, '_iter_collection_uses_per_path')
        # Calling _iter_collection_uses_per_path(args, kwargs) (line 1757)
        _iter_collection_uses_per_path_call_result_237218 = invoke(stypy.reporting.localization.Localization(__file__, 1757, 24), _iter_collection_uses_per_path_237211, *[paths_237212, all_transforms_237213, offsets_237214, facecolors_237215, edgecolors_237216], **kwargs_237217)
        
        # Assigning a type to the variable 'uses_per_path' (line 1757)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1757, 8), 'uses_per_path', _iter_collection_uses_per_path_call_result_237218)
        
        # Assigning a Compare to a Name (line 1759):
        
        # Assigning a Compare to a Name (line 1759):
        
        # Getting the type of 'len_path' (line 1760)
        len_path_237219 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1760, 12), 'len_path')
        # Getting the type of 'uses_per_path' (line 1760)
        uses_per_path_237220 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1760, 23), 'uses_per_path')
        # Applying the binary operator '+' (line 1760)
        result_add_237221 = python_operator(stypy.reporting.localization.Localization(__file__, 1760, 12), '+', len_path_237219, uses_per_path_237220)
        
        int_237222 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1760, 39), 'int')
        # Applying the binary operator '+' (line 1760)
        result_add_237223 = python_operator(stypy.reporting.localization.Localization(__file__, 1760, 37), '+', result_add_237221, int_237222)
        
        # Getting the type of 'len_path' (line 1760)
        len_path_237224 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1760, 43), 'len_path')
        # Getting the type of 'uses_per_path' (line 1760)
        uses_per_path_237225 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1760, 54), 'uses_per_path')
        # Applying the binary operator '*' (line 1760)
        result_mul_237226 = python_operator(stypy.reporting.localization.Localization(__file__, 1760, 43), '*', len_path_237224, uses_per_path_237225)
        
        # Applying the binary operator '<' (line 1760)
        result_lt_237227 = python_operator(stypy.reporting.localization.Localization(__file__, 1760, 12), '<', result_add_237223, result_mul_237226)
        
        # Assigning a type to the variable 'should_do_optimization' (line 1759)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1759, 8), 'should_do_optimization', result_lt_237227)
        
        
        # Evaluating a boolean operation
        
        # Getting the type of 'can_do_optimization' (line 1762)
        can_do_optimization_237228 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1762, 16), 'can_do_optimization')
        # Applying the 'not' unary operator (line 1762)
        result_not__237229 = python_operator(stypy.reporting.localization.Localization(__file__, 1762, 12), 'not', can_do_optimization_237228)
        
        
        # Getting the type of 'should_do_optimization' (line 1762)
        should_do_optimization_237230 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1762, 45), 'should_do_optimization')
        # Applying the 'not' unary operator (line 1762)
        result_not__237231 = python_operator(stypy.reporting.localization.Localization(__file__, 1762, 41), 'not', should_do_optimization_237230)
        
        # Applying the binary operator 'or' (line 1762)
        result_or_keyword_237232 = python_operator(stypy.reporting.localization.Localization(__file__, 1762, 11), 'or', result_not__237229, result_not__237231)
        
        # Testing the type of an if condition (line 1762)
        if_condition_237233 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1762, 8), result_or_keyword_237232)
        # Assigning a type to the variable 'if_condition_237233' (line 1762)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1762, 8), 'if_condition_237233', if_condition_237233)
        # SSA begins for if statement (line 1762)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to draw_path_collection(...): (line 1763)
        # Processing the call arguments (line 1763)
        # Getting the type of 'self' (line 1764)
        self_237236 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1764, 16), 'self', False)
        # Getting the type of 'gc' (line 1764)
        gc_237237 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1764, 22), 'gc', False)
        # Getting the type of 'master_transform' (line 1764)
        master_transform_237238 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1764, 26), 'master_transform', False)
        # Getting the type of 'paths' (line 1764)
        paths_237239 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1764, 44), 'paths', False)
        # Getting the type of 'all_transforms' (line 1764)
        all_transforms_237240 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1764, 51), 'all_transforms', False)
        # Getting the type of 'offsets' (line 1765)
        offsets_237241 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1765, 16), 'offsets', False)
        # Getting the type of 'offsetTrans' (line 1765)
        offsetTrans_237242 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1765, 25), 'offsetTrans', False)
        # Getting the type of 'facecolors' (line 1765)
        facecolors_237243 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1765, 38), 'facecolors', False)
        # Getting the type of 'edgecolors' (line 1765)
        edgecolors_237244 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1765, 50), 'edgecolors', False)
        # Getting the type of 'linewidths' (line 1766)
        linewidths_237245 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1766, 16), 'linewidths', False)
        # Getting the type of 'linestyles' (line 1766)
        linestyles_237246 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1766, 28), 'linestyles', False)
        # Getting the type of 'antialiaseds' (line 1766)
        antialiaseds_237247 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1766, 40), 'antialiaseds', False)
        # Getting the type of 'urls' (line 1766)
        urls_237248 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1766, 54), 'urls', False)
        # Getting the type of 'offset_position' (line 1767)
        offset_position_237249 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1767, 16), 'offset_position', False)
        # Processing the call keyword arguments (line 1763)
        kwargs_237250 = {}
        # Getting the type of 'RendererBase' (line 1763)
        RendererBase_237234 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1763, 19), 'RendererBase', False)
        # Obtaining the member 'draw_path_collection' of a type (line 1763)
        draw_path_collection_237235 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1763, 19), RendererBase_237234, 'draw_path_collection')
        # Calling draw_path_collection(args, kwargs) (line 1763)
        draw_path_collection_call_result_237251 = invoke(stypy.reporting.localization.Localization(__file__, 1763, 19), draw_path_collection_237235, *[self_237236, gc_237237, master_transform_237238, paths_237239, all_transforms_237240, offsets_237241, offsetTrans_237242, facecolors_237243, edgecolors_237244, linewidths_237245, linestyles_237246, antialiaseds_237247, urls_237248, offset_position_237249], **kwargs_237250)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1763)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1763, 12), 'stypy_return_type', draw_path_collection_call_result_237251)
        # SSA join for if statement (line 1762)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 1769):
        
        # Assigning a Call to a Name (line 1769):
        
        # Call to max(...): (line 1769)
        # Processing the call arguments (line 1769)
        # Getting the type of 'linewidths' (line 1769)
        linewidths_237254 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1769, 25), 'linewidths', False)
        # Processing the call keyword arguments (line 1769)
        kwargs_237255 = {}
        # Getting the type of 'np' (line 1769)
        np_237252 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1769, 18), 'np', False)
        # Obtaining the member 'max' of a type (line 1769)
        max_237253 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1769, 18), np_237252, 'max')
        # Calling max(args, kwargs) (line 1769)
        max_call_result_237256 = invoke(stypy.reporting.localization.Localization(__file__, 1769, 18), max_237253, *[linewidths_237254], **kwargs_237255)
        
        # Assigning a type to the variable 'padding' (line 1769)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1769, 8), 'padding', max_call_result_237256)
        
        # Assigning a List to a Name (line 1770):
        
        # Assigning a List to a Name (line 1770):
        
        # Obtaining an instance of the builtin type 'list' (line 1770)
        list_237257 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1770, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1770)
        
        # Assigning a type to the variable 'path_codes' (line 1770)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1770, 8), 'path_codes', list_237257)
        
        
        # Call to enumerate(...): (line 1771)
        # Processing the call arguments (line 1771)
        
        # Call to _iter_collection_raw_paths(...): (line 1771)
        # Processing the call arguments (line 1771)
        # Getting the type of 'master_transform' (line 1772)
        master_transform_237261 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1772, 16), 'master_transform', False)
        # Getting the type of 'paths' (line 1772)
        paths_237262 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1772, 34), 'paths', False)
        # Getting the type of 'all_transforms' (line 1772)
        all_transforms_237263 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1772, 41), 'all_transforms', False)
        # Processing the call keyword arguments (line 1771)
        kwargs_237264 = {}
        # Getting the type of 'self' (line 1771)
        self_237259 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1771, 46), 'self', False)
        # Obtaining the member '_iter_collection_raw_paths' of a type (line 1771)
        _iter_collection_raw_paths_237260 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1771, 46), self_237259, '_iter_collection_raw_paths')
        # Calling _iter_collection_raw_paths(args, kwargs) (line 1771)
        _iter_collection_raw_paths_call_result_237265 = invoke(stypy.reporting.localization.Localization(__file__, 1771, 46), _iter_collection_raw_paths_237260, *[master_transform_237261, paths_237262, all_transforms_237263], **kwargs_237264)
        
        # Processing the call keyword arguments (line 1771)
        kwargs_237266 = {}
        # Getting the type of 'enumerate' (line 1771)
        enumerate_237258 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1771, 36), 'enumerate', False)
        # Calling enumerate(args, kwargs) (line 1771)
        enumerate_call_result_237267 = invoke(stypy.reporting.localization.Localization(__file__, 1771, 36), enumerate_237258, *[_iter_collection_raw_paths_call_result_237265], **kwargs_237266)
        
        # Testing the type of a for loop iterable (line 1771)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1771, 8), enumerate_call_result_237267)
        # Getting the type of the for loop variable (line 1771)
        for_loop_var_237268 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1771, 8), enumerate_call_result_237267)
        # Assigning a type to the variable 'i' (line 1771)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1771, 8), 'i', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1771, 8), for_loop_var_237268))
        # Assigning a type to the variable 'path' (line 1771)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1771, 8), 'path', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1771, 8), for_loop_var_237268))
        # Assigning a type to the variable 'transform' (line 1771)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1771, 8), 'transform', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1771, 8), for_loop_var_237268))
        # SSA begins for a for statement (line 1771)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 1773):
        
        # Assigning a Call to a Name (line 1773):
        
        # Call to pathCollectionObject(...): (line 1773)
        # Processing the call arguments (line 1773)
        # Getting the type of 'gc' (line 1774)
        gc_237272 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1774, 16), 'gc', False)
        # Getting the type of 'path' (line 1774)
        path_237273 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1774, 20), 'path', False)
        # Getting the type of 'transform' (line 1774)
        transform_237274 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1774, 26), 'transform', False)
        # Getting the type of 'padding' (line 1774)
        padding_237275 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1774, 37), 'padding', False)
        # Getting the type of 'filled' (line 1774)
        filled_237276 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1774, 46), 'filled', False)
        # Getting the type of 'stroked' (line 1774)
        stroked_237277 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1774, 54), 'stroked', False)
        # Processing the call keyword arguments (line 1773)
        kwargs_237278 = {}
        # Getting the type of 'self' (line 1773)
        self_237269 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1773, 19), 'self', False)
        # Obtaining the member 'file' of a type (line 1773)
        file_237270 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1773, 19), self_237269, 'file')
        # Obtaining the member 'pathCollectionObject' of a type (line 1773)
        pathCollectionObject_237271 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1773, 19), file_237270, 'pathCollectionObject')
        # Calling pathCollectionObject(args, kwargs) (line 1773)
        pathCollectionObject_call_result_237279 = invoke(stypy.reporting.localization.Localization(__file__, 1773, 19), pathCollectionObject_237271, *[gc_237272, path_237273, transform_237274, padding_237275, filled_237276, stroked_237277], **kwargs_237278)
        
        # Assigning a type to the variable 'name' (line 1773)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1773, 12), 'name', pathCollectionObject_call_result_237279)
        
        # Call to append(...): (line 1775)
        # Processing the call arguments (line 1775)
        # Getting the type of 'name' (line 1775)
        name_237282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1775, 30), 'name', False)
        # Processing the call keyword arguments (line 1775)
        kwargs_237283 = {}
        # Getting the type of 'path_codes' (line 1775)
        path_codes_237280 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1775, 12), 'path_codes', False)
        # Obtaining the member 'append' of a type (line 1775)
        append_237281 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1775, 12), path_codes_237280, 'append')
        # Calling append(args, kwargs) (line 1775)
        append_call_result_237284 = invoke(stypy.reporting.localization.Localization(__file__, 1775, 12), append_237281, *[name_237282], **kwargs_237283)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Attribute to a Name (line 1777):
        
        # Assigning a Attribute to a Name (line 1777):
        # Getting the type of 'self' (line 1777)
        self_237285 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1777, 17), 'self')
        # Obtaining the member 'file' of a type (line 1777)
        file_237286 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1777, 17), self_237285, 'file')
        # Obtaining the member 'output' of a type (line 1777)
        output_237287 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1777, 17), file_237286, 'output')
        # Assigning a type to the variable 'output' (line 1777)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1777, 8), 'output', output_237287)
        
        # Call to output(...): (line 1778)
        
        # Call to push(...): (line 1778)
        # Processing the call keyword arguments (line 1778)
        kwargs_237292 = {}
        # Getting the type of 'self' (line 1778)
        self_237289 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1778, 16), 'self', False)
        # Obtaining the member 'gc' of a type (line 1778)
        gc_237290 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1778, 16), self_237289, 'gc')
        # Obtaining the member 'push' of a type (line 1778)
        push_237291 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1778, 16), gc_237290, 'push')
        # Calling push(args, kwargs) (line 1778)
        push_call_result_237293 = invoke(stypy.reporting.localization.Localization(__file__, 1778, 16), push_237291, *[], **kwargs_237292)
        
        # Processing the call keyword arguments (line 1778)
        kwargs_237294 = {}
        # Getting the type of 'output' (line 1778)
        output_237288 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1778, 8), 'output', False)
        # Calling output(args, kwargs) (line 1778)
        output_call_result_237295 = invoke(stypy.reporting.localization.Localization(__file__, 1778, 8), output_237288, *[push_call_result_237293], **kwargs_237294)
        
        
        # Assigning a Tuple to a Tuple (line 1779):
        
        # Assigning a Num to a Name (line 1779):
        int_237296 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1779, 23), 'int')
        # Assigning a type to the variable 'tuple_assignment_231689' (line 1779)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1779, 8), 'tuple_assignment_231689', int_237296)
        
        # Assigning a Num to a Name (line 1779):
        int_237297 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1779, 26), 'int')
        # Assigning a type to the variable 'tuple_assignment_231690' (line 1779)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1779, 8), 'tuple_assignment_231690', int_237297)
        
        # Assigning a Name to a Name (line 1779):
        # Getting the type of 'tuple_assignment_231689' (line 1779)
        tuple_assignment_231689_237298 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1779, 8), 'tuple_assignment_231689')
        # Assigning a type to the variable 'lastx' (line 1779)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1779, 8), 'lastx', tuple_assignment_231689_237298)
        
        # Assigning a Name to a Name (line 1779):
        # Getting the type of 'tuple_assignment_231690' (line 1779)
        tuple_assignment_231690_237299 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1779, 8), 'tuple_assignment_231690')
        # Assigning a type to the variable 'lasty' (line 1779)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1779, 15), 'lasty', tuple_assignment_231690_237299)
        
        
        # Call to _iter_collection(...): (line 1780)
        # Processing the call arguments (line 1780)
        # Getting the type of 'gc' (line 1781)
        gc_237302 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1781, 16), 'gc', False)
        # Getting the type of 'master_transform' (line 1781)
        master_transform_237303 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1781, 20), 'master_transform', False)
        # Getting the type of 'all_transforms' (line 1781)
        all_transforms_237304 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1781, 38), 'all_transforms', False)
        # Getting the type of 'path_codes' (line 1781)
        path_codes_237305 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1781, 54), 'path_codes', False)
        # Getting the type of 'offsets' (line 1781)
        offsets_237306 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1781, 66), 'offsets', False)
        # Getting the type of 'offsetTrans' (line 1782)
        offsetTrans_237307 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1782, 16), 'offsetTrans', False)
        # Getting the type of 'facecolors' (line 1782)
        facecolors_237308 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1782, 29), 'facecolors', False)
        # Getting the type of 'edgecolors' (line 1782)
        edgecolors_237309 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1782, 41), 'edgecolors', False)
        # Getting the type of 'linewidths' (line 1782)
        linewidths_237310 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1782, 53), 'linewidths', False)
        # Getting the type of 'linestyles' (line 1782)
        linestyles_237311 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1782, 65), 'linestyles', False)
        # Getting the type of 'antialiaseds' (line 1783)
        antialiaseds_237312 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1783, 16), 'antialiaseds', False)
        # Getting the type of 'urls' (line 1783)
        urls_237313 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1783, 30), 'urls', False)
        # Getting the type of 'offset_position' (line 1783)
        offset_position_237314 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1783, 36), 'offset_position', False)
        # Processing the call keyword arguments (line 1780)
        kwargs_237315 = {}
        # Getting the type of 'self' (line 1780)
        self_237300 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1780, 45), 'self', False)
        # Obtaining the member '_iter_collection' of a type (line 1780)
        _iter_collection_237301 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1780, 45), self_237300, '_iter_collection')
        # Calling _iter_collection(args, kwargs) (line 1780)
        _iter_collection_call_result_237316 = invoke(stypy.reporting.localization.Localization(__file__, 1780, 45), _iter_collection_237301, *[gc_237302, master_transform_237303, all_transforms_237304, path_codes_237305, offsets_237306, offsetTrans_237307, facecolors_237308, edgecolors_237309, linewidths_237310, linestyles_237311, antialiaseds_237312, urls_237313, offset_position_237314], **kwargs_237315)
        
        # Testing the type of a for loop iterable (line 1780)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1780, 8), _iter_collection_call_result_237316)
        # Getting the type of the for loop variable (line 1780)
        for_loop_var_237317 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1780, 8), _iter_collection_call_result_237316)
        # Assigning a type to the variable 'xo' (line 1780)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1780, 8), 'xo', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1780, 8), for_loop_var_237317))
        # Assigning a type to the variable 'yo' (line 1780)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1780, 8), 'yo', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1780, 8), for_loop_var_237317))
        # Assigning a type to the variable 'path_id' (line 1780)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1780, 8), 'path_id', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1780, 8), for_loop_var_237317))
        # Assigning a type to the variable 'gc0' (line 1780)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1780, 8), 'gc0', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1780, 8), for_loop_var_237317))
        # Assigning a type to the variable 'rgbFace' (line 1780)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1780, 8), 'rgbFace', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1780, 8), for_loop_var_237317))
        # SSA begins for a for statement (line 1780)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to check_gc(...): (line 1785)
        # Processing the call arguments (line 1785)
        # Getting the type of 'gc0' (line 1785)
        gc0_237320 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1785, 26), 'gc0', False)
        # Getting the type of 'rgbFace' (line 1785)
        rgbFace_237321 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1785, 31), 'rgbFace', False)
        # Processing the call keyword arguments (line 1785)
        kwargs_237322 = {}
        # Getting the type of 'self' (line 1785)
        self_237318 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1785, 12), 'self', False)
        # Obtaining the member 'check_gc' of a type (line 1785)
        check_gc_237319 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1785, 12), self_237318, 'check_gc')
        # Calling check_gc(args, kwargs) (line 1785)
        check_gc_call_result_237323 = invoke(stypy.reporting.localization.Localization(__file__, 1785, 12), check_gc_237319, *[gc0_237320, rgbFace_237321], **kwargs_237322)
        
        
        # Assigning a Tuple to a Tuple (line 1786):
        
        # Assigning a BinOp to a Name (line 1786):
        # Getting the type of 'xo' (line 1786)
        xo_237324 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1786, 21), 'xo')
        # Getting the type of 'lastx' (line 1786)
        lastx_237325 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1786, 26), 'lastx')
        # Applying the binary operator '-' (line 1786)
        result_sub_237326 = python_operator(stypy.reporting.localization.Localization(__file__, 1786, 21), '-', xo_237324, lastx_237325)
        
        # Assigning a type to the variable 'tuple_assignment_231691' (line 1786)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1786, 12), 'tuple_assignment_231691', result_sub_237326)
        
        # Assigning a BinOp to a Name (line 1786):
        # Getting the type of 'yo' (line 1786)
        yo_237327 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1786, 33), 'yo')
        # Getting the type of 'lasty' (line 1786)
        lasty_237328 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1786, 38), 'lasty')
        # Applying the binary operator '-' (line 1786)
        result_sub_237329 = python_operator(stypy.reporting.localization.Localization(__file__, 1786, 33), '-', yo_237327, lasty_237328)
        
        # Assigning a type to the variable 'tuple_assignment_231692' (line 1786)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1786, 12), 'tuple_assignment_231692', result_sub_237329)
        
        # Assigning a Name to a Name (line 1786):
        # Getting the type of 'tuple_assignment_231691' (line 1786)
        tuple_assignment_231691_237330 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1786, 12), 'tuple_assignment_231691')
        # Assigning a type to the variable 'dx' (line 1786)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1786, 12), 'dx', tuple_assignment_231691_237330)
        
        # Assigning a Name to a Name (line 1786):
        # Getting the type of 'tuple_assignment_231692' (line 1786)
        tuple_assignment_231692_237331 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1786, 12), 'tuple_assignment_231692')
        # Assigning a type to the variable 'dy' (line 1786)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1786, 16), 'dy', tuple_assignment_231692_237331)
        
        # Call to output(...): (line 1787)
        # Processing the call arguments (line 1787)
        int_237333 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1787, 19), 'int')
        int_237334 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1787, 22), 'int')
        int_237335 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1787, 25), 'int')
        int_237336 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1787, 28), 'int')
        # Getting the type of 'dx' (line 1787)
        dx_237337 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1787, 31), 'dx', False)
        # Getting the type of 'dy' (line 1787)
        dy_237338 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1787, 35), 'dy', False)
        # Getting the type of 'Op' (line 1787)
        Op_237339 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1787, 39), 'Op', False)
        # Obtaining the member 'concat_matrix' of a type (line 1787)
        concat_matrix_237340 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1787, 39), Op_237339, 'concat_matrix')
        # Getting the type of 'path_id' (line 1787)
        path_id_237341 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1787, 57), 'path_id', False)
        # Getting the type of 'Op' (line 1788)
        Op_237342 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1788, 19), 'Op', False)
        # Obtaining the member 'use_xobject' of a type (line 1788)
        use_xobject_237343 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1788, 19), Op_237342, 'use_xobject')
        # Processing the call keyword arguments (line 1787)
        kwargs_237344 = {}
        # Getting the type of 'output' (line 1787)
        output_237332 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1787, 12), 'output', False)
        # Calling output(args, kwargs) (line 1787)
        output_call_result_237345 = invoke(stypy.reporting.localization.Localization(__file__, 1787, 12), output_237332, *[int_237333, int_237334, int_237335, int_237336, dx_237337, dy_237338, concat_matrix_237340, path_id_237341, use_xobject_237343], **kwargs_237344)
        
        
        # Assigning a Tuple to a Tuple (line 1789):
        
        # Assigning a Name to a Name (line 1789):
        # Getting the type of 'xo' (line 1789)
        xo_237346 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1789, 27), 'xo')
        # Assigning a type to the variable 'tuple_assignment_231693' (line 1789)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1789, 12), 'tuple_assignment_231693', xo_237346)
        
        # Assigning a Name to a Name (line 1789):
        # Getting the type of 'yo' (line 1789)
        yo_237347 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1789, 31), 'yo')
        # Assigning a type to the variable 'tuple_assignment_231694' (line 1789)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1789, 12), 'tuple_assignment_231694', yo_237347)
        
        # Assigning a Name to a Name (line 1789):
        # Getting the type of 'tuple_assignment_231693' (line 1789)
        tuple_assignment_231693_237348 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1789, 12), 'tuple_assignment_231693')
        # Assigning a type to the variable 'lastx' (line 1789)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1789, 12), 'lastx', tuple_assignment_231693_237348)
        
        # Assigning a Name to a Name (line 1789):
        # Getting the type of 'tuple_assignment_231694' (line 1789)
        tuple_assignment_231694_237349 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1789, 12), 'tuple_assignment_231694')
        # Assigning a type to the variable 'lasty' (line 1789)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1789, 19), 'lasty', tuple_assignment_231694_237349)
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to output(...): (line 1790)
        
        # Call to pop(...): (line 1790)
        # Processing the call keyword arguments (line 1790)
        kwargs_237354 = {}
        # Getting the type of 'self' (line 1790)
        self_237351 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1790, 16), 'self', False)
        # Obtaining the member 'gc' of a type (line 1790)
        gc_237352 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1790, 16), self_237351, 'gc')
        # Obtaining the member 'pop' of a type (line 1790)
        pop_237353 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1790, 16), gc_237352, 'pop')
        # Calling pop(args, kwargs) (line 1790)
        pop_call_result_237355 = invoke(stypy.reporting.localization.Localization(__file__, 1790, 16), pop_237353, *[], **kwargs_237354)
        
        # Processing the call keyword arguments (line 1790)
        kwargs_237356 = {}
        # Getting the type of 'output' (line 1790)
        output_237350 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1790, 8), 'output', False)
        # Calling output(args, kwargs) (line 1790)
        output_call_result_237357 = invoke(stypy.reporting.localization.Localization(__file__, 1790, 8), output_237350, *[pop_call_result_237355], **kwargs_237356)
        
        
        # ################# End of 'draw_path_collection(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'draw_path_collection' in the type store
        # Getting the type of 'stypy_return_type' (line 1722)
        stypy_return_type_237358 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1722, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_237358)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'draw_path_collection'
        return stypy_return_type_237358


    @norecursion
    def draw_markers(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'None' (line 1793)
        None_237359 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1793, 29), 'None')
        defaults = [None_237359]
        # Create a new context for function 'draw_markers'
        module_type_store = module_type_store.open_function_context('draw_markers', 1792, 4, False)
        # Assigning a type to the variable 'self' (line 1793)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1793, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererPdf.draw_markers.__dict__.__setitem__('stypy_localization', localization)
        RendererPdf.draw_markers.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererPdf.draw_markers.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererPdf.draw_markers.__dict__.__setitem__('stypy_function_name', 'RendererPdf.draw_markers')
        RendererPdf.draw_markers.__dict__.__setitem__('stypy_param_names_list', ['gc', 'marker_path', 'marker_trans', 'path', 'trans', 'rgbFace'])
        RendererPdf.draw_markers.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererPdf.draw_markers.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererPdf.draw_markers.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererPdf.draw_markers.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererPdf.draw_markers.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererPdf.draw_markers.__dict__.__setitem__('stypy_declared_arg_number', 7)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererPdf.draw_markers', ['gc', 'marker_path', 'marker_trans', 'path', 'trans', 'rgbFace'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'draw_markers', localization, ['gc', 'marker_path', 'marker_trans', 'path', 'trans', 'rgbFace'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'draw_markers(...)' code ##################

        
        # Assigning a Call to a Name (line 1795):
        
        # Assigning a Call to a Name (line 1795):
        
        # Call to len(...): (line 1795)
        # Processing the call arguments (line 1795)
        # Getting the type of 'marker_path' (line 1795)
        marker_path_237361 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1795, 30), 'marker_path', False)
        # Processing the call keyword arguments (line 1795)
        kwargs_237362 = {}
        # Getting the type of 'len' (line 1795)
        len_237360 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1795, 26), 'len', False)
        # Calling len(args, kwargs) (line 1795)
        len_call_result_237363 = invoke(stypy.reporting.localization.Localization(__file__, 1795, 26), len_237360, *[marker_path_237361], **kwargs_237362)
        
        # Assigning a type to the variable 'len_marker_path' (line 1795)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1795, 8), 'len_marker_path', len_call_result_237363)
        
        # Assigning a Call to a Name (line 1796):
        
        # Assigning a Call to a Name (line 1796):
        
        # Call to len(...): (line 1796)
        # Processing the call arguments (line 1796)
        # Getting the type of 'path' (line 1796)
        path_237365 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1796, 19), 'path', False)
        # Processing the call keyword arguments (line 1796)
        kwargs_237366 = {}
        # Getting the type of 'len' (line 1796)
        len_237364 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1796, 15), 'len', False)
        # Calling len(args, kwargs) (line 1796)
        len_call_result_237367 = invoke(stypy.reporting.localization.Localization(__file__, 1796, 15), len_237364, *[path_237365], **kwargs_237366)
        
        # Assigning a type to the variable 'uses' (line 1796)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1796, 8), 'uses', len_call_result_237367)
        
        
        # Getting the type of 'len_marker_path' (line 1797)
        len_marker_path_237368 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1797, 11), 'len_marker_path')
        # Getting the type of 'uses' (line 1797)
        uses_237369 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1797, 29), 'uses')
        # Applying the binary operator '*' (line 1797)
        result_mul_237370 = python_operator(stypy.reporting.localization.Localization(__file__, 1797, 11), '*', len_marker_path_237368, uses_237369)
        
        # Getting the type of 'len_marker_path' (line 1797)
        len_marker_path_237371 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1797, 36), 'len_marker_path')
        # Getting the type of 'uses' (line 1797)
        uses_237372 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1797, 54), 'uses')
        # Applying the binary operator '+' (line 1797)
        result_add_237373 = python_operator(stypy.reporting.localization.Localization(__file__, 1797, 36), '+', len_marker_path_237371, uses_237372)
        
        int_237374 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1797, 61), 'int')
        # Applying the binary operator '+' (line 1797)
        result_add_237375 = python_operator(stypy.reporting.localization.Localization(__file__, 1797, 59), '+', result_add_237373, int_237374)
        
        # Applying the binary operator '<' (line 1797)
        result_lt_237376 = python_operator(stypy.reporting.localization.Localization(__file__, 1797, 11), '<', result_mul_237370, result_add_237375)
        
        # Testing the type of an if condition (line 1797)
        if_condition_237377 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1797, 8), result_lt_237376)
        # Assigning a type to the variable 'if_condition_237377' (line 1797)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1797, 8), 'if_condition_237377', if_condition_237377)
        # SSA begins for if statement (line 1797)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to draw_markers(...): (line 1798)
        # Processing the call arguments (line 1798)
        # Getting the type of 'self' (line 1798)
        self_237380 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1798, 38), 'self', False)
        # Getting the type of 'gc' (line 1798)
        gc_237381 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1798, 44), 'gc', False)
        # Getting the type of 'marker_path' (line 1798)
        marker_path_237382 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1798, 48), 'marker_path', False)
        # Getting the type of 'marker_trans' (line 1798)
        marker_trans_237383 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1798, 61), 'marker_trans', False)
        # Getting the type of 'path' (line 1799)
        path_237384 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1799, 38), 'path', False)
        # Getting the type of 'trans' (line 1799)
        trans_237385 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1799, 44), 'trans', False)
        # Getting the type of 'rgbFace' (line 1799)
        rgbFace_237386 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1799, 51), 'rgbFace', False)
        # Processing the call keyword arguments (line 1798)
        kwargs_237387 = {}
        # Getting the type of 'RendererBase' (line 1798)
        RendererBase_237378 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1798, 12), 'RendererBase', False)
        # Obtaining the member 'draw_markers' of a type (line 1798)
        draw_markers_237379 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1798, 12), RendererBase_237378, 'draw_markers')
        # Calling draw_markers(args, kwargs) (line 1798)
        draw_markers_call_result_237388 = invoke(stypy.reporting.localization.Localization(__file__, 1798, 12), draw_markers_237379, *[self_237380, gc_237381, marker_path_237382, marker_trans_237383, path_237384, trans_237385, rgbFace_237386], **kwargs_237387)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1800)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1800, 12), 'stypy_return_type', types.NoneType)
        # SSA join for if statement (line 1797)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to check_gc(...): (line 1802)
        # Processing the call arguments (line 1802)
        # Getting the type of 'gc' (line 1802)
        gc_237391 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1802, 22), 'gc', False)
        # Getting the type of 'rgbFace' (line 1802)
        rgbFace_237392 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1802, 26), 'rgbFace', False)
        # Processing the call keyword arguments (line 1802)
        kwargs_237393 = {}
        # Getting the type of 'self' (line 1802)
        self_237389 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1802, 8), 'self', False)
        # Obtaining the member 'check_gc' of a type (line 1802)
        check_gc_237390 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1802, 8), self_237389, 'check_gc')
        # Calling check_gc(args, kwargs) (line 1802)
        check_gc_call_result_237394 = invoke(stypy.reporting.localization.Localization(__file__, 1802, 8), check_gc_237390, *[gc_237391, rgbFace_237392], **kwargs_237393)
        
        
        # Assigning a Call to a Name (line 1803):
        
        # Assigning a Call to a Name (line 1803):
        
        # Call to fill(...): (line 1803)
        # Processing the call arguments (line 1803)
        # Getting the type of 'rgbFace' (line 1803)
        rgbFace_237397 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1803, 23), 'rgbFace', False)
        # Processing the call keyword arguments (line 1803)
        kwargs_237398 = {}
        # Getting the type of 'gc' (line 1803)
        gc_237395 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1803, 15), 'gc', False)
        # Obtaining the member 'fill' of a type (line 1803)
        fill_237396 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1803, 15), gc_237395, 'fill')
        # Calling fill(args, kwargs) (line 1803)
        fill_call_result_237399 = invoke(stypy.reporting.localization.Localization(__file__, 1803, 15), fill_237396, *[rgbFace_237397], **kwargs_237398)
        
        # Assigning a type to the variable 'fill' (line 1803)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1803, 8), 'fill', fill_call_result_237399)
        
        # Assigning a Call to a Name (line 1804):
        
        # Assigning a Call to a Name (line 1804):
        
        # Call to stroke(...): (line 1804)
        # Processing the call keyword arguments (line 1804)
        kwargs_237402 = {}
        # Getting the type of 'gc' (line 1804)
        gc_237400 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1804, 17), 'gc', False)
        # Obtaining the member 'stroke' of a type (line 1804)
        stroke_237401 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1804, 17), gc_237400, 'stroke')
        # Calling stroke(args, kwargs) (line 1804)
        stroke_call_result_237403 = invoke(stypy.reporting.localization.Localization(__file__, 1804, 17), stroke_237401, *[], **kwargs_237402)
        
        # Assigning a type to the variable 'stroke' (line 1804)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1804, 8), 'stroke', stroke_call_result_237403)
        
        # Assigning a Attribute to a Name (line 1806):
        
        # Assigning a Attribute to a Name (line 1806):
        # Getting the type of 'self' (line 1806)
        self_237404 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1806, 17), 'self')
        # Obtaining the member 'file' of a type (line 1806)
        file_237405 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1806, 17), self_237404, 'file')
        # Obtaining the member 'output' of a type (line 1806)
        output_237406 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1806, 17), file_237405, 'output')
        # Assigning a type to the variable 'output' (line 1806)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1806, 8), 'output', output_237406)
        
        # Assigning a Call to a Name (line 1807):
        
        # Assigning a Call to a Name (line 1807):
        
        # Call to markerObject(...): (line 1807)
        # Processing the call arguments (line 1807)
        # Getting the type of 'marker_path' (line 1808)
        marker_path_237410 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1808, 12), 'marker_path', False)
        # Getting the type of 'marker_trans' (line 1808)
        marker_trans_237411 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1808, 25), 'marker_trans', False)
        # Getting the type of 'fill' (line 1808)
        fill_237412 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1808, 39), 'fill', False)
        # Getting the type of 'stroke' (line 1808)
        stroke_237413 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1808, 45), 'stroke', False)
        # Getting the type of 'self' (line 1808)
        self_237414 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1808, 53), 'self', False)
        # Obtaining the member 'gc' of a type (line 1808)
        gc_237415 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1808, 53), self_237414, 'gc')
        # Obtaining the member '_linewidth' of a type (line 1808)
        _linewidth_237416 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1808, 53), gc_237415, '_linewidth')
        
        # Call to get_joinstyle(...): (line 1809)
        # Processing the call keyword arguments (line 1809)
        kwargs_237419 = {}
        # Getting the type of 'gc' (line 1809)
        gc_237417 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1809, 12), 'gc', False)
        # Obtaining the member 'get_joinstyle' of a type (line 1809)
        get_joinstyle_237418 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1809, 12), gc_237417, 'get_joinstyle')
        # Calling get_joinstyle(args, kwargs) (line 1809)
        get_joinstyle_call_result_237420 = invoke(stypy.reporting.localization.Localization(__file__, 1809, 12), get_joinstyle_237418, *[], **kwargs_237419)
        
        
        # Call to get_capstyle(...): (line 1809)
        # Processing the call keyword arguments (line 1809)
        kwargs_237423 = {}
        # Getting the type of 'gc' (line 1809)
        gc_237421 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1809, 32), 'gc', False)
        # Obtaining the member 'get_capstyle' of a type (line 1809)
        get_capstyle_237422 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1809, 32), gc_237421, 'get_capstyle')
        # Calling get_capstyle(args, kwargs) (line 1809)
        get_capstyle_call_result_237424 = invoke(stypy.reporting.localization.Localization(__file__, 1809, 32), get_capstyle_237422, *[], **kwargs_237423)
        
        # Processing the call keyword arguments (line 1807)
        kwargs_237425 = {}
        # Getting the type of 'self' (line 1807)
        self_237407 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1807, 17), 'self', False)
        # Obtaining the member 'file' of a type (line 1807)
        file_237408 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1807, 17), self_237407, 'file')
        # Obtaining the member 'markerObject' of a type (line 1807)
        markerObject_237409 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1807, 17), file_237408, 'markerObject')
        # Calling markerObject(args, kwargs) (line 1807)
        markerObject_call_result_237426 = invoke(stypy.reporting.localization.Localization(__file__, 1807, 17), markerObject_237409, *[marker_path_237410, marker_trans_237411, fill_237412, stroke_237413, _linewidth_237416, get_joinstyle_call_result_237420, get_capstyle_call_result_237424], **kwargs_237425)
        
        # Assigning a type to the variable 'marker' (line 1807)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1807, 8), 'marker', markerObject_call_result_237426)
        
        # Call to output(...): (line 1811)
        # Processing the call arguments (line 1811)
        # Getting the type of 'Op' (line 1811)
        Op_237428 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1811, 15), 'Op', False)
        # Obtaining the member 'gsave' of a type (line 1811)
        gsave_237429 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1811, 15), Op_237428, 'gsave')
        # Processing the call keyword arguments (line 1811)
        kwargs_237430 = {}
        # Getting the type of 'output' (line 1811)
        output_237427 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1811, 8), 'output', False)
        # Calling output(args, kwargs) (line 1811)
        output_call_result_237431 = invoke(stypy.reporting.localization.Localization(__file__, 1811, 8), output_237427, *[gsave_237429], **kwargs_237430)
        
        
        # Assigning a Tuple to a Tuple (line 1812):
        
        # Assigning a Num to a Name (line 1812):
        int_237432 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1812, 23), 'int')
        # Assigning a type to the variable 'tuple_assignment_231695' (line 1812)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1812, 8), 'tuple_assignment_231695', int_237432)
        
        # Assigning a Num to a Name (line 1812):
        int_237433 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1812, 26), 'int')
        # Assigning a type to the variable 'tuple_assignment_231696' (line 1812)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1812, 8), 'tuple_assignment_231696', int_237433)
        
        # Assigning a Name to a Name (line 1812):
        # Getting the type of 'tuple_assignment_231695' (line 1812)
        tuple_assignment_231695_237434 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1812, 8), 'tuple_assignment_231695')
        # Assigning a type to the variable 'lastx' (line 1812)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1812, 8), 'lastx', tuple_assignment_231695_237434)
        
        # Assigning a Name to a Name (line 1812):
        # Getting the type of 'tuple_assignment_231696' (line 1812)
        tuple_assignment_231696_237435 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1812, 8), 'tuple_assignment_231696')
        # Assigning a type to the variable 'lasty' (line 1812)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1812, 15), 'lasty', tuple_assignment_231696_237435)
        
        
        # Call to iter_segments(...): (line 1813)
        # Processing the call arguments (line 1813)
        # Getting the type of 'trans' (line 1814)
        trans_237438 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1814, 16), 'trans', False)
        # Processing the call keyword arguments (line 1813)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1815)
        tuple_237439 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1815, 22), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1815)
        # Adding element type (line 1815)
        int_237440 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1815, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1815, 22), tuple_237439, int_237440)
        # Adding element type (line 1815)
        int_237441 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1815, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1815, 22), tuple_237439, int_237441)
        # Adding element type (line 1815)
        # Getting the type of 'self' (line 1815)
        self_237442 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1815, 28), 'self', False)
        # Obtaining the member 'file' of a type (line 1815)
        file_237443 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1815, 28), self_237442, 'file')
        # Obtaining the member 'width' of a type (line 1815)
        width_237444 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1815, 28), file_237443, 'width')
        int_237445 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1815, 44), 'int')
        # Applying the binary operator '*' (line 1815)
        result_mul_237446 = python_operator(stypy.reporting.localization.Localization(__file__, 1815, 28), '*', width_237444, int_237445)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1815, 22), tuple_237439, result_mul_237446)
        # Adding element type (line 1815)
        # Getting the type of 'self' (line 1815)
        self_237447 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1815, 48), 'self', False)
        # Obtaining the member 'file' of a type (line 1815)
        file_237448 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1815, 48), self_237447, 'file')
        # Obtaining the member 'height' of a type (line 1815)
        height_237449 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1815, 48), file_237448, 'height')
        int_237450 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1815, 65), 'int')
        # Applying the binary operator '*' (line 1815)
        result_mul_237451 = python_operator(stypy.reporting.localization.Localization(__file__, 1815, 48), '*', height_237449, int_237450)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1815, 22), tuple_237439, result_mul_237451)
        
        keyword_237452 = tuple_237439
        # Getting the type of 'False' (line 1816)
        False_237453 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1816, 25), 'False', False)
        keyword_237454 = False_237453
        kwargs_237455 = {'simplify': keyword_237454, 'clip': keyword_237452}
        # Getting the type of 'path' (line 1813)
        path_237436 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1813, 30), 'path', False)
        # Obtaining the member 'iter_segments' of a type (line 1813)
        iter_segments_237437 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1813, 30), path_237436, 'iter_segments')
        # Calling iter_segments(args, kwargs) (line 1813)
        iter_segments_call_result_237456 = invoke(stypy.reporting.localization.Localization(__file__, 1813, 30), iter_segments_237437, *[trans_237438], **kwargs_237455)
        
        # Testing the type of a for loop iterable (line 1813)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1813, 8), iter_segments_call_result_237456)
        # Getting the type of the for loop variable (line 1813)
        for_loop_var_237457 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1813, 8), iter_segments_call_result_237456)
        # Assigning a type to the variable 'vertices' (line 1813)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1813, 8), 'vertices', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1813, 8), for_loop_var_237457))
        # Assigning a type to the variable 'code' (line 1813)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1813, 8), 'code', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1813, 8), for_loop_var_237457))
        # SSA begins for a for statement (line 1813)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        
        # Call to len(...): (line 1817)
        # Processing the call arguments (line 1817)
        # Getting the type of 'vertices' (line 1817)
        vertices_237459 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1817, 19), 'vertices', False)
        # Processing the call keyword arguments (line 1817)
        kwargs_237460 = {}
        # Getting the type of 'len' (line 1817)
        len_237458 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1817, 15), 'len', False)
        # Calling len(args, kwargs) (line 1817)
        len_call_result_237461 = invoke(stypy.reporting.localization.Localization(__file__, 1817, 15), len_237458, *[vertices_237459], **kwargs_237460)
        
        # Testing the type of an if condition (line 1817)
        if_condition_237462 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1817, 12), len_call_result_237461)
        # Assigning a type to the variable 'if_condition_237462' (line 1817)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1817, 12), 'if_condition_237462', if_condition_237462)
        # SSA begins for if statement (line 1817)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Subscript to a Tuple (line 1818):
        
        # Assigning a Subscript to a Name (line 1818):
        
        # Obtaining the type of the subscript
        int_237463 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1818, 16), 'int')
        
        # Obtaining the type of the subscript
        int_237464 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1818, 32), 'int')
        slice_237465 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1818, 23), int_237464, None, None)
        # Getting the type of 'vertices' (line 1818)
        vertices_237466 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1818, 23), 'vertices')
        # Obtaining the member '__getitem__' of a type (line 1818)
        getitem___237467 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1818, 23), vertices_237466, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1818)
        subscript_call_result_237468 = invoke(stypy.reporting.localization.Localization(__file__, 1818, 23), getitem___237467, slice_237465)
        
        # Obtaining the member '__getitem__' of a type (line 1818)
        getitem___237469 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1818, 16), subscript_call_result_237468, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1818)
        subscript_call_result_237470 = invoke(stypy.reporting.localization.Localization(__file__, 1818, 16), getitem___237469, int_237463)
        
        # Assigning a type to the variable 'tuple_var_assignment_231697' (line 1818)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1818, 16), 'tuple_var_assignment_231697', subscript_call_result_237470)
        
        # Assigning a Subscript to a Name (line 1818):
        
        # Obtaining the type of the subscript
        int_237471 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1818, 16), 'int')
        
        # Obtaining the type of the subscript
        int_237472 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1818, 32), 'int')
        slice_237473 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1818, 23), int_237472, None, None)
        # Getting the type of 'vertices' (line 1818)
        vertices_237474 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1818, 23), 'vertices')
        # Obtaining the member '__getitem__' of a type (line 1818)
        getitem___237475 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1818, 23), vertices_237474, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1818)
        subscript_call_result_237476 = invoke(stypy.reporting.localization.Localization(__file__, 1818, 23), getitem___237475, slice_237473)
        
        # Obtaining the member '__getitem__' of a type (line 1818)
        getitem___237477 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1818, 16), subscript_call_result_237476, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1818)
        subscript_call_result_237478 = invoke(stypy.reporting.localization.Localization(__file__, 1818, 16), getitem___237477, int_237471)
        
        # Assigning a type to the variable 'tuple_var_assignment_231698' (line 1818)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1818, 16), 'tuple_var_assignment_231698', subscript_call_result_237478)
        
        # Assigning a Name to a Name (line 1818):
        # Getting the type of 'tuple_var_assignment_231697' (line 1818)
        tuple_var_assignment_231697_237479 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1818, 16), 'tuple_var_assignment_231697')
        # Assigning a type to the variable 'x' (line 1818)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1818, 16), 'x', tuple_var_assignment_231697_237479)
        
        # Assigning a Name to a Name (line 1818):
        # Getting the type of 'tuple_var_assignment_231698' (line 1818)
        tuple_var_assignment_231698_237480 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1818, 16), 'tuple_var_assignment_231698')
        # Assigning a type to the variable 'y' (line 1818)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1818, 19), 'y', tuple_var_assignment_231698_237480)
        
        
        # Evaluating a boolean operation
        
        # Getting the type of 'x' (line 1819)
        x_237481 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1819, 20), 'x')
        int_237482 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1819, 24), 'int')
        # Applying the binary operator '<' (line 1819)
        result_lt_237483 = python_operator(stypy.reporting.localization.Localization(__file__, 1819, 20), '<', x_237481, int_237482)
        
        
        # Getting the type of 'y' (line 1819)
        y_237484 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1819, 29), 'y')
        int_237485 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1819, 33), 'int')
        # Applying the binary operator '<' (line 1819)
        result_lt_237486 = python_operator(stypy.reporting.localization.Localization(__file__, 1819, 29), '<', y_237484, int_237485)
        
        # Applying the binary operator 'or' (line 1819)
        result_or_keyword_237487 = python_operator(stypy.reporting.localization.Localization(__file__, 1819, 20), 'or', result_lt_237483, result_lt_237486)
        
        # Getting the type of 'x' (line 1820)
        x_237488 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1820, 24), 'x')
        # Getting the type of 'self' (line 1820)
        self_237489 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1820, 28), 'self')
        # Obtaining the member 'file' of a type (line 1820)
        file_237490 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1820, 28), self_237489, 'file')
        # Obtaining the member 'width' of a type (line 1820)
        width_237491 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1820, 28), file_237490, 'width')
        int_237492 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1820, 46), 'int')
        # Applying the binary operator '*' (line 1820)
        result_mul_237493 = python_operator(stypy.reporting.localization.Localization(__file__, 1820, 28), '*', width_237491, int_237492)
        
        # Applying the binary operator '>' (line 1820)
        result_gt_237494 = python_operator(stypy.reporting.localization.Localization(__file__, 1820, 24), '>', x_237488, result_mul_237493)
        
        # Applying the binary operator 'or' (line 1819)
        result_or_keyword_237495 = python_operator(stypy.reporting.localization.Localization(__file__, 1819, 20), 'or', result_or_keyword_237487, result_gt_237494)
        
        # Getting the type of 'y' (line 1820)
        y_237496 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1820, 52), 'y')
        # Getting the type of 'self' (line 1820)
        self_237497 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1820, 56), 'self')
        # Obtaining the member 'file' of a type (line 1820)
        file_237498 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1820, 56), self_237497, 'file')
        # Obtaining the member 'height' of a type (line 1820)
        height_237499 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1820, 56), file_237498, 'height')
        int_237500 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1820, 75), 'int')
        # Applying the binary operator '*' (line 1820)
        result_mul_237501 = python_operator(stypy.reporting.localization.Localization(__file__, 1820, 56), '*', height_237499, int_237500)
        
        # Applying the binary operator '>' (line 1820)
        result_gt_237502 = python_operator(stypy.reporting.localization.Localization(__file__, 1820, 52), '>', y_237496, result_mul_237501)
        
        # Applying the binary operator 'or' (line 1819)
        result_or_keyword_237503 = python_operator(stypy.reporting.localization.Localization(__file__, 1819, 20), 'or', result_or_keyword_237495, result_gt_237502)
        
        # Testing the type of an if condition (line 1819)
        if_condition_237504 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1819, 16), result_or_keyword_237503)
        # Assigning a type to the variable 'if_condition_237504' (line 1819)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1819, 16), 'if_condition_237504', if_condition_237504)
        # SSA begins for if statement (line 1819)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        # SSA join for if statement (line 1819)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Tuple to a Tuple (line 1822):
        
        # Assigning a BinOp to a Name (line 1822):
        # Getting the type of 'x' (line 1822)
        x_237505 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1822, 25), 'x')
        # Getting the type of 'lastx' (line 1822)
        lastx_237506 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1822, 29), 'lastx')
        # Applying the binary operator '-' (line 1822)
        result_sub_237507 = python_operator(stypy.reporting.localization.Localization(__file__, 1822, 25), '-', x_237505, lastx_237506)
        
        # Assigning a type to the variable 'tuple_assignment_231699' (line 1822)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1822, 16), 'tuple_assignment_231699', result_sub_237507)
        
        # Assigning a BinOp to a Name (line 1822):
        # Getting the type of 'y' (line 1822)
        y_237508 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1822, 36), 'y')
        # Getting the type of 'lasty' (line 1822)
        lasty_237509 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1822, 40), 'lasty')
        # Applying the binary operator '-' (line 1822)
        result_sub_237510 = python_operator(stypy.reporting.localization.Localization(__file__, 1822, 36), '-', y_237508, lasty_237509)
        
        # Assigning a type to the variable 'tuple_assignment_231700' (line 1822)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1822, 16), 'tuple_assignment_231700', result_sub_237510)
        
        # Assigning a Name to a Name (line 1822):
        # Getting the type of 'tuple_assignment_231699' (line 1822)
        tuple_assignment_231699_237511 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1822, 16), 'tuple_assignment_231699')
        # Assigning a type to the variable 'dx' (line 1822)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1822, 16), 'dx', tuple_assignment_231699_237511)
        
        # Assigning a Name to a Name (line 1822):
        # Getting the type of 'tuple_assignment_231700' (line 1822)
        tuple_assignment_231700_237512 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1822, 16), 'tuple_assignment_231700')
        # Assigning a type to the variable 'dy' (line 1822)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1822, 20), 'dy', tuple_assignment_231700_237512)
        
        # Call to output(...): (line 1823)
        # Processing the call arguments (line 1823)
        int_237514 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1823, 23), 'int')
        int_237515 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1823, 26), 'int')
        int_237516 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1823, 29), 'int')
        int_237517 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1823, 32), 'int')
        # Getting the type of 'dx' (line 1823)
        dx_237518 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1823, 35), 'dx', False)
        # Getting the type of 'dy' (line 1823)
        dy_237519 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1823, 39), 'dy', False)
        # Getting the type of 'Op' (line 1823)
        Op_237520 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1823, 43), 'Op', False)
        # Obtaining the member 'concat_matrix' of a type (line 1823)
        concat_matrix_237521 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1823, 43), Op_237520, 'concat_matrix')
        # Getting the type of 'marker' (line 1824)
        marker_237522 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1824, 23), 'marker', False)
        # Getting the type of 'Op' (line 1824)
        Op_237523 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1824, 31), 'Op', False)
        # Obtaining the member 'use_xobject' of a type (line 1824)
        use_xobject_237524 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1824, 31), Op_237523, 'use_xobject')
        # Processing the call keyword arguments (line 1823)
        kwargs_237525 = {}
        # Getting the type of 'output' (line 1823)
        output_237513 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1823, 16), 'output', False)
        # Calling output(args, kwargs) (line 1823)
        output_call_result_237526 = invoke(stypy.reporting.localization.Localization(__file__, 1823, 16), output_237513, *[int_237514, int_237515, int_237516, int_237517, dx_237518, dy_237519, concat_matrix_237521, marker_237522, use_xobject_237524], **kwargs_237525)
        
        
        # Assigning a Tuple to a Tuple (line 1825):
        
        # Assigning a Name to a Name (line 1825):
        # Getting the type of 'x' (line 1825)
        x_237527 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1825, 31), 'x')
        # Assigning a type to the variable 'tuple_assignment_231701' (line 1825)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1825, 16), 'tuple_assignment_231701', x_237527)
        
        # Assigning a Name to a Name (line 1825):
        # Getting the type of 'y' (line 1825)
        y_237528 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1825, 34), 'y')
        # Assigning a type to the variable 'tuple_assignment_231702' (line 1825)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1825, 16), 'tuple_assignment_231702', y_237528)
        
        # Assigning a Name to a Name (line 1825):
        # Getting the type of 'tuple_assignment_231701' (line 1825)
        tuple_assignment_231701_237529 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1825, 16), 'tuple_assignment_231701')
        # Assigning a type to the variable 'lastx' (line 1825)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1825, 16), 'lastx', tuple_assignment_231701_237529)
        
        # Assigning a Name to a Name (line 1825):
        # Getting the type of 'tuple_assignment_231702' (line 1825)
        tuple_assignment_231702_237530 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1825, 16), 'tuple_assignment_231702')
        # Assigning a type to the variable 'lasty' (line 1825)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1825, 23), 'lasty', tuple_assignment_231702_237530)
        # SSA join for if statement (line 1817)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to output(...): (line 1826)
        # Processing the call arguments (line 1826)
        # Getting the type of 'Op' (line 1826)
        Op_237532 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1826, 15), 'Op', False)
        # Obtaining the member 'grestore' of a type (line 1826)
        grestore_237533 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1826, 15), Op_237532, 'grestore')
        # Processing the call keyword arguments (line 1826)
        kwargs_237534 = {}
        # Getting the type of 'output' (line 1826)
        output_237531 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1826, 8), 'output', False)
        # Calling output(args, kwargs) (line 1826)
        output_call_result_237535 = invoke(stypy.reporting.localization.Localization(__file__, 1826, 8), output_237531, *[grestore_237533], **kwargs_237534)
        
        
        # ################# End of 'draw_markers(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'draw_markers' in the type store
        # Getting the type of 'stypy_return_type' (line 1792)
        stypy_return_type_237536 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1792, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_237536)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'draw_markers'
        return stypy_return_type_237536


    @norecursion
    def draw_gouraud_triangle(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'draw_gouraud_triangle'
        module_type_store = module_type_store.open_function_context('draw_gouraud_triangle', 1828, 4, False)
        # Assigning a type to the variable 'self' (line 1829)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1829, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererPdf.draw_gouraud_triangle.__dict__.__setitem__('stypy_localization', localization)
        RendererPdf.draw_gouraud_triangle.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererPdf.draw_gouraud_triangle.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererPdf.draw_gouraud_triangle.__dict__.__setitem__('stypy_function_name', 'RendererPdf.draw_gouraud_triangle')
        RendererPdf.draw_gouraud_triangle.__dict__.__setitem__('stypy_param_names_list', ['gc', 'points', 'colors', 'trans'])
        RendererPdf.draw_gouraud_triangle.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererPdf.draw_gouraud_triangle.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererPdf.draw_gouraud_triangle.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererPdf.draw_gouraud_triangle.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererPdf.draw_gouraud_triangle.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererPdf.draw_gouraud_triangle.__dict__.__setitem__('stypy_declared_arg_number', 5)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererPdf.draw_gouraud_triangle', ['gc', 'points', 'colors', 'trans'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'draw_gouraud_triangle', localization, ['gc', 'points', 'colors', 'trans'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'draw_gouraud_triangle(...)' code ##################

        
        # Call to draw_gouraud_triangles(...): (line 1829)
        # Processing the call arguments (line 1829)
        # Getting the type of 'gc' (line 1829)
        gc_237539 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1829, 36), 'gc', False)
        
        # Call to reshape(...): (line 1829)
        # Processing the call arguments (line 1829)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1829)
        tuple_237542 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1829, 56), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1829)
        # Adding element type (line 1829)
        int_237543 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1829, 56), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1829, 56), tuple_237542, int_237543)
        # Adding element type (line 1829)
        int_237544 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1829, 59), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1829, 56), tuple_237542, int_237544)
        # Adding element type (line 1829)
        int_237545 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1829, 62), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1829, 56), tuple_237542, int_237545)
        
        # Processing the call keyword arguments (line 1829)
        kwargs_237546 = {}
        # Getting the type of 'points' (line 1829)
        points_237540 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1829, 40), 'points', False)
        # Obtaining the member 'reshape' of a type (line 1829)
        reshape_237541 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1829, 40), points_237540, 'reshape')
        # Calling reshape(args, kwargs) (line 1829)
        reshape_call_result_237547 = invoke(stypy.reporting.localization.Localization(__file__, 1829, 40), reshape_237541, *[tuple_237542], **kwargs_237546)
        
        
        # Call to reshape(...): (line 1830)
        # Processing the call arguments (line 1830)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1830)
        tuple_237550 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1830, 52), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1830)
        # Adding element type (line 1830)
        int_237551 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1830, 52), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1830, 52), tuple_237550, int_237551)
        # Adding element type (line 1830)
        int_237552 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1830, 55), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1830, 52), tuple_237550, int_237552)
        # Adding element type (line 1830)
        int_237553 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1830, 58), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1830, 52), tuple_237550, int_237553)
        
        # Processing the call keyword arguments (line 1830)
        kwargs_237554 = {}
        # Getting the type of 'colors' (line 1830)
        colors_237548 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1830, 36), 'colors', False)
        # Obtaining the member 'reshape' of a type (line 1830)
        reshape_237549 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1830, 36), colors_237548, 'reshape')
        # Calling reshape(args, kwargs) (line 1830)
        reshape_call_result_237555 = invoke(stypy.reporting.localization.Localization(__file__, 1830, 36), reshape_237549, *[tuple_237550], **kwargs_237554)
        
        # Getting the type of 'trans' (line 1830)
        trans_237556 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1830, 63), 'trans', False)
        # Processing the call keyword arguments (line 1829)
        kwargs_237557 = {}
        # Getting the type of 'self' (line 1829)
        self_237537 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1829, 8), 'self', False)
        # Obtaining the member 'draw_gouraud_triangles' of a type (line 1829)
        draw_gouraud_triangles_237538 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1829, 8), self_237537, 'draw_gouraud_triangles')
        # Calling draw_gouraud_triangles(args, kwargs) (line 1829)
        draw_gouraud_triangles_call_result_237558 = invoke(stypy.reporting.localization.Localization(__file__, 1829, 8), draw_gouraud_triangles_237538, *[gc_237539, reshape_call_result_237547, reshape_call_result_237555, trans_237556], **kwargs_237557)
        
        
        # ################# End of 'draw_gouraud_triangle(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'draw_gouraud_triangle' in the type store
        # Getting the type of 'stypy_return_type' (line 1828)
        stypy_return_type_237559 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1828, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_237559)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'draw_gouraud_triangle'
        return stypy_return_type_237559


    @norecursion
    def draw_gouraud_triangles(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'draw_gouraud_triangles'
        module_type_store = module_type_store.open_function_context('draw_gouraud_triangles', 1832, 4, False)
        # Assigning a type to the variable 'self' (line 1833)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1833, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererPdf.draw_gouraud_triangles.__dict__.__setitem__('stypy_localization', localization)
        RendererPdf.draw_gouraud_triangles.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererPdf.draw_gouraud_triangles.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererPdf.draw_gouraud_triangles.__dict__.__setitem__('stypy_function_name', 'RendererPdf.draw_gouraud_triangles')
        RendererPdf.draw_gouraud_triangles.__dict__.__setitem__('stypy_param_names_list', ['gc', 'points', 'colors', 'trans'])
        RendererPdf.draw_gouraud_triangles.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererPdf.draw_gouraud_triangles.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererPdf.draw_gouraud_triangles.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererPdf.draw_gouraud_triangles.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererPdf.draw_gouraud_triangles.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererPdf.draw_gouraud_triangles.__dict__.__setitem__('stypy_declared_arg_number', 5)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererPdf.draw_gouraud_triangles', ['gc', 'points', 'colors', 'trans'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'draw_gouraud_triangles', localization, ['gc', 'points', 'colors', 'trans'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'draw_gouraud_triangles(...)' code ##################

        # Evaluating assert statement condition
        
        
        # Call to len(...): (line 1833)
        # Processing the call arguments (line 1833)
        # Getting the type of 'points' (line 1833)
        points_237561 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1833, 19), 'points', False)
        # Processing the call keyword arguments (line 1833)
        kwargs_237562 = {}
        # Getting the type of 'len' (line 1833)
        len_237560 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1833, 15), 'len', False)
        # Calling len(args, kwargs) (line 1833)
        len_call_result_237563 = invoke(stypy.reporting.localization.Localization(__file__, 1833, 15), len_237560, *[points_237561], **kwargs_237562)
        
        
        # Call to len(...): (line 1833)
        # Processing the call arguments (line 1833)
        # Getting the type of 'colors' (line 1833)
        colors_237565 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1833, 34), 'colors', False)
        # Processing the call keyword arguments (line 1833)
        kwargs_237566 = {}
        # Getting the type of 'len' (line 1833)
        len_237564 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1833, 30), 'len', False)
        # Calling len(args, kwargs) (line 1833)
        len_call_result_237567 = invoke(stypy.reporting.localization.Localization(__file__, 1833, 30), len_237564, *[colors_237565], **kwargs_237566)
        
        # Applying the binary operator '==' (line 1833)
        result_eq_237568 = python_operator(stypy.reporting.localization.Localization(__file__, 1833, 15), '==', len_call_result_237563, len_call_result_237567)
        
        # Evaluating assert statement condition
        
        # Getting the type of 'points' (line 1834)
        points_237569 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1834, 15), 'points')
        # Obtaining the member 'ndim' of a type (line 1834)
        ndim_237570 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1834, 15), points_237569, 'ndim')
        int_237571 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1834, 30), 'int')
        # Applying the binary operator '==' (line 1834)
        result_eq_237572 = python_operator(stypy.reporting.localization.Localization(__file__, 1834, 15), '==', ndim_237570, int_237571)
        
        # Evaluating assert statement condition
        
        
        # Obtaining the type of the subscript
        int_237573 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1835, 28), 'int')
        # Getting the type of 'points' (line 1835)
        points_237574 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1835, 15), 'points')
        # Obtaining the member 'shape' of a type (line 1835)
        shape_237575 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1835, 15), points_237574, 'shape')
        # Obtaining the member '__getitem__' of a type (line 1835)
        getitem___237576 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1835, 15), shape_237575, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1835)
        subscript_call_result_237577 = invoke(stypy.reporting.localization.Localization(__file__, 1835, 15), getitem___237576, int_237573)
        
        int_237578 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1835, 34), 'int')
        # Applying the binary operator '==' (line 1835)
        result_eq_237579 = python_operator(stypy.reporting.localization.Localization(__file__, 1835, 15), '==', subscript_call_result_237577, int_237578)
        
        # Evaluating assert statement condition
        
        
        # Obtaining the type of the subscript
        int_237580 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1836, 28), 'int')
        # Getting the type of 'points' (line 1836)
        points_237581 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1836, 15), 'points')
        # Obtaining the member 'shape' of a type (line 1836)
        shape_237582 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1836, 15), points_237581, 'shape')
        # Obtaining the member '__getitem__' of a type (line 1836)
        getitem___237583 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1836, 15), shape_237582, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1836)
        subscript_call_result_237584 = invoke(stypy.reporting.localization.Localization(__file__, 1836, 15), getitem___237583, int_237580)
        
        int_237585 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1836, 34), 'int')
        # Applying the binary operator '==' (line 1836)
        result_eq_237586 = python_operator(stypy.reporting.localization.Localization(__file__, 1836, 15), '==', subscript_call_result_237584, int_237585)
        
        # Evaluating assert statement condition
        
        # Getting the type of 'colors' (line 1837)
        colors_237587 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1837, 15), 'colors')
        # Obtaining the member 'ndim' of a type (line 1837)
        ndim_237588 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1837, 15), colors_237587, 'ndim')
        int_237589 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1837, 30), 'int')
        # Applying the binary operator '==' (line 1837)
        result_eq_237590 = python_operator(stypy.reporting.localization.Localization(__file__, 1837, 15), '==', ndim_237588, int_237589)
        
        # Evaluating assert statement condition
        
        
        # Obtaining the type of the subscript
        int_237591 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1838, 28), 'int')
        # Getting the type of 'colors' (line 1838)
        colors_237592 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1838, 15), 'colors')
        # Obtaining the member 'shape' of a type (line 1838)
        shape_237593 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1838, 15), colors_237592, 'shape')
        # Obtaining the member '__getitem__' of a type (line 1838)
        getitem___237594 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1838, 15), shape_237593, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1838)
        subscript_call_result_237595 = invoke(stypy.reporting.localization.Localization(__file__, 1838, 15), getitem___237594, int_237591)
        
        int_237596 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1838, 34), 'int')
        # Applying the binary operator '==' (line 1838)
        result_eq_237597 = python_operator(stypy.reporting.localization.Localization(__file__, 1838, 15), '==', subscript_call_result_237595, int_237596)
        
        # Evaluating assert statement condition
        
        
        # Obtaining the type of the subscript
        int_237598 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1839, 28), 'int')
        # Getting the type of 'colors' (line 1839)
        colors_237599 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1839, 15), 'colors')
        # Obtaining the member 'shape' of a type (line 1839)
        shape_237600 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1839, 15), colors_237599, 'shape')
        # Obtaining the member '__getitem__' of a type (line 1839)
        getitem___237601 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1839, 15), shape_237600, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1839)
        subscript_call_result_237602 = invoke(stypy.reporting.localization.Localization(__file__, 1839, 15), getitem___237601, int_237598)
        
        int_237603 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1839, 34), 'int')
        # Applying the binary operator '==' (line 1839)
        result_eq_237604 = python_operator(stypy.reporting.localization.Localization(__file__, 1839, 15), '==', subscript_call_result_237602, int_237603)
        
        
        # Assigning a Attribute to a Name (line 1841):
        
        # Assigning a Attribute to a Name (line 1841):
        # Getting the type of 'points' (line 1841)
        points_237605 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1841, 16), 'points')
        # Obtaining the member 'shape' of a type (line 1841)
        shape_237606 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1841, 16), points_237605, 'shape')
        # Assigning a type to the variable 'shape' (line 1841)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1841, 8), 'shape', shape_237606)
        
        # Assigning a Call to a Name (line 1842):
        
        # Assigning a Call to a Name (line 1842):
        
        # Call to reshape(...): (line 1842)
        # Processing the call arguments (line 1842)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1842)
        tuple_237609 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1842, 33), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1842)
        # Adding element type (line 1842)
        
        # Obtaining the type of the subscript
        int_237610 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1842, 39), 'int')
        # Getting the type of 'shape' (line 1842)
        shape_237611 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1842, 33), 'shape', False)
        # Obtaining the member '__getitem__' of a type (line 1842)
        getitem___237612 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1842, 33), shape_237611, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1842)
        subscript_call_result_237613 = invoke(stypy.reporting.localization.Localization(__file__, 1842, 33), getitem___237612, int_237610)
        
        
        # Obtaining the type of the subscript
        int_237614 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1842, 50), 'int')
        # Getting the type of 'shape' (line 1842)
        shape_237615 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1842, 44), 'shape', False)
        # Obtaining the member '__getitem__' of a type (line 1842)
        getitem___237616 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1842, 44), shape_237615, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1842)
        subscript_call_result_237617 = invoke(stypy.reporting.localization.Localization(__file__, 1842, 44), getitem___237616, int_237614)
        
        # Applying the binary operator '*' (line 1842)
        result_mul_237618 = python_operator(stypy.reporting.localization.Localization(__file__, 1842, 33), '*', subscript_call_result_237613, subscript_call_result_237617)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1842, 33), tuple_237609, result_mul_237618)
        # Adding element type (line 1842)
        int_237619 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1842, 54), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1842, 33), tuple_237609, int_237619)
        
        # Processing the call keyword arguments (line 1842)
        kwargs_237620 = {}
        # Getting the type of 'points' (line 1842)
        points_237607 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1842, 17), 'points', False)
        # Obtaining the member 'reshape' of a type (line 1842)
        reshape_237608 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1842, 17), points_237607, 'reshape')
        # Calling reshape(args, kwargs) (line 1842)
        reshape_call_result_237621 = invoke(stypy.reporting.localization.Localization(__file__, 1842, 17), reshape_237608, *[tuple_237609], **kwargs_237620)
        
        # Assigning a type to the variable 'points' (line 1842)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1842, 8), 'points', reshape_call_result_237621)
        
        # Assigning a Call to a Name (line 1843):
        
        # Assigning a Call to a Name (line 1843):
        
        # Call to transform(...): (line 1843)
        # Processing the call arguments (line 1843)
        # Getting the type of 'points' (line 1843)
        points_237624 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1843, 34), 'points', False)
        # Processing the call keyword arguments (line 1843)
        kwargs_237625 = {}
        # Getting the type of 'trans' (line 1843)
        trans_237622 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1843, 18), 'trans', False)
        # Obtaining the member 'transform' of a type (line 1843)
        transform_237623 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1843, 18), trans_237622, 'transform')
        # Calling transform(args, kwargs) (line 1843)
        transform_call_result_237626 = invoke(stypy.reporting.localization.Localization(__file__, 1843, 18), transform_237623, *[points_237624], **kwargs_237625)
        
        # Assigning a type to the variable 'tpoints' (line 1843)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1843, 8), 'tpoints', transform_call_result_237626)
        
        # Assigning a Call to a Name (line 1844):
        
        # Assigning a Call to a Name (line 1844):
        
        # Call to reshape(...): (line 1844)
        # Processing the call arguments (line 1844)
        # Getting the type of 'shape' (line 1844)
        shape_237629 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1844, 34), 'shape', False)
        # Processing the call keyword arguments (line 1844)
        kwargs_237630 = {}
        # Getting the type of 'tpoints' (line 1844)
        tpoints_237627 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1844, 18), 'tpoints', False)
        # Obtaining the member 'reshape' of a type (line 1844)
        reshape_237628 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1844, 18), tpoints_237627, 'reshape')
        # Calling reshape(args, kwargs) (line 1844)
        reshape_call_result_237631 = invoke(stypy.reporting.localization.Localization(__file__, 1844, 18), reshape_237628, *[shape_237629], **kwargs_237630)
        
        # Assigning a type to the variable 'tpoints' (line 1844)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1844, 8), 'tpoints', reshape_call_result_237631)
        
        # Assigning a Call to a Name (line 1845):
        
        # Assigning a Call to a Name (line 1845):
        
        # Call to addGouraudTriangles(...): (line 1845)
        # Processing the call arguments (line 1845)
        # Getting the type of 'tpoints' (line 1845)
        tpoints_237635 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1845, 45), 'tpoints', False)
        # Getting the type of 'colors' (line 1845)
        colors_237636 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1845, 54), 'colors', False)
        # Processing the call keyword arguments (line 1845)
        kwargs_237637 = {}
        # Getting the type of 'self' (line 1845)
        self_237632 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1845, 15), 'self', False)
        # Obtaining the member 'file' of a type (line 1845)
        file_237633 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1845, 15), self_237632, 'file')
        # Obtaining the member 'addGouraudTriangles' of a type (line 1845)
        addGouraudTriangles_237634 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1845, 15), file_237633, 'addGouraudTriangles')
        # Calling addGouraudTriangles(args, kwargs) (line 1845)
        addGouraudTriangles_call_result_237638 = invoke(stypy.reporting.localization.Localization(__file__, 1845, 15), addGouraudTriangles_237634, *[tpoints_237635, colors_237636], **kwargs_237637)
        
        # Assigning a type to the variable 'name' (line 1845)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1845, 8), 'name', addGouraudTriangles_call_result_237638)
        
        # Call to check_gc(...): (line 1846)
        # Processing the call arguments (line 1846)
        # Getting the type of 'gc' (line 1846)
        gc_237641 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1846, 22), 'gc', False)
        # Processing the call keyword arguments (line 1846)
        kwargs_237642 = {}
        # Getting the type of 'self' (line 1846)
        self_237639 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1846, 8), 'self', False)
        # Obtaining the member 'check_gc' of a type (line 1846)
        check_gc_237640 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1846, 8), self_237639, 'check_gc')
        # Calling check_gc(args, kwargs) (line 1846)
        check_gc_call_result_237643 = invoke(stypy.reporting.localization.Localization(__file__, 1846, 8), check_gc_237640, *[gc_237641], **kwargs_237642)
        
        
        # Call to output(...): (line 1847)
        # Processing the call arguments (line 1847)
        # Getting the type of 'name' (line 1847)
        name_237647 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1847, 25), 'name', False)
        # Getting the type of 'Op' (line 1847)
        Op_237648 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1847, 31), 'Op', False)
        # Obtaining the member 'shading' of a type (line 1847)
        shading_237649 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1847, 31), Op_237648, 'shading')
        # Processing the call keyword arguments (line 1847)
        kwargs_237650 = {}
        # Getting the type of 'self' (line 1847)
        self_237644 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1847, 8), 'self', False)
        # Obtaining the member 'file' of a type (line 1847)
        file_237645 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1847, 8), self_237644, 'file')
        # Obtaining the member 'output' of a type (line 1847)
        output_237646 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1847, 8), file_237645, 'output')
        # Calling output(args, kwargs) (line 1847)
        output_call_result_237651 = invoke(stypy.reporting.localization.Localization(__file__, 1847, 8), output_237646, *[name_237647, shading_237649], **kwargs_237650)
        
        
        # ################# End of 'draw_gouraud_triangles(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'draw_gouraud_triangles' in the type store
        # Getting the type of 'stypy_return_type' (line 1832)
        stypy_return_type_237652 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1832, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_237652)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'draw_gouraud_triangles'
        return stypy_return_type_237652


    @norecursion
    def _setup_textpos(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        int_237653 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1849, 47), 'int')
        int_237654 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1849, 55), 'int')
        int_237655 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1849, 67), 'int')
        defaults = [int_237653, int_237654, int_237655]
        # Create a new context for function '_setup_textpos'
        module_type_store = module_type_store.open_function_context('_setup_textpos', 1849, 4, False)
        # Assigning a type to the variable 'self' (line 1850)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1850, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererPdf._setup_textpos.__dict__.__setitem__('stypy_localization', localization)
        RendererPdf._setup_textpos.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererPdf._setup_textpos.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererPdf._setup_textpos.__dict__.__setitem__('stypy_function_name', 'RendererPdf._setup_textpos')
        RendererPdf._setup_textpos.__dict__.__setitem__('stypy_param_names_list', ['x', 'y', 'angle', 'oldx', 'oldy', 'oldangle'])
        RendererPdf._setup_textpos.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererPdf._setup_textpos.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererPdf._setup_textpos.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererPdf._setup_textpos.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererPdf._setup_textpos.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererPdf._setup_textpos.__dict__.__setitem__('stypy_declared_arg_number', 7)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererPdf._setup_textpos', ['x', 'y', 'angle', 'oldx', 'oldy', 'oldangle'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_setup_textpos', localization, ['x', 'y', 'angle', 'oldx', 'oldy', 'oldangle'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_setup_textpos(...)' code ##################

        
        
        # Getting the type of 'angle' (line 1850)
        angle_237656 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1850, 11), 'angle')
        # Getting the type of 'oldangle' (line 1850)
        oldangle_237657 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1850, 20), 'oldangle')
        # Applying the binary operator '==' (line 1850)
        result_eq_237658 = python_operator(stypy.reporting.localization.Localization(__file__, 1850, 11), '==', angle_237656, oldangle_237657)
        int_237659 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1850, 32), 'int')
        # Applying the binary operator '==' (line 1850)
        result_eq_237660 = python_operator(stypy.reporting.localization.Localization(__file__, 1850, 11), '==', oldangle_237657, int_237659)
        # Applying the binary operator '&' (line 1850)
        result_and__237661 = python_operator(stypy.reporting.localization.Localization(__file__, 1850, 11), '&', result_eq_237658, result_eq_237660)
        
        # Testing the type of an if condition (line 1850)
        if_condition_237662 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1850, 8), result_and__237661)
        # Assigning a type to the variable 'if_condition_237662' (line 1850)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1850, 8), 'if_condition_237662', if_condition_237662)
        # SSA begins for if statement (line 1850)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to output(...): (line 1851)
        # Processing the call arguments (line 1851)
        # Getting the type of 'x' (line 1851)
        x_237666 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1851, 29), 'x', False)
        # Getting the type of 'oldx' (line 1851)
        oldx_237667 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1851, 33), 'oldx', False)
        # Applying the binary operator '-' (line 1851)
        result_sub_237668 = python_operator(stypy.reporting.localization.Localization(__file__, 1851, 29), '-', x_237666, oldx_237667)
        
        # Getting the type of 'y' (line 1851)
        y_237669 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1851, 39), 'y', False)
        # Getting the type of 'oldy' (line 1851)
        oldy_237670 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1851, 43), 'oldy', False)
        # Applying the binary operator '-' (line 1851)
        result_sub_237671 = python_operator(stypy.reporting.localization.Localization(__file__, 1851, 39), '-', y_237669, oldy_237670)
        
        # Getting the type of 'Op' (line 1851)
        Op_237672 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1851, 49), 'Op', False)
        # Obtaining the member 'textpos' of a type (line 1851)
        textpos_237673 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1851, 49), Op_237672, 'textpos')
        # Processing the call keyword arguments (line 1851)
        kwargs_237674 = {}
        # Getting the type of 'self' (line 1851)
        self_237663 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1851, 12), 'self', False)
        # Obtaining the member 'file' of a type (line 1851)
        file_237664 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1851, 12), self_237663, 'file')
        # Obtaining the member 'output' of a type (line 1851)
        output_237665 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1851, 12), file_237664, 'output')
        # Calling output(args, kwargs) (line 1851)
        output_call_result_237675 = invoke(stypy.reporting.localization.Localization(__file__, 1851, 12), output_237665, *[result_sub_237668, result_sub_237671, textpos_237673], **kwargs_237674)
        
        # SSA branch for the else part of an if statement (line 1850)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a BinOp to a Name (line 1853):
        
        # Assigning a BinOp to a Name (line 1853):
        # Getting the type of 'angle' (line 1853)
        angle_237676 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1853, 20), 'angle')
        float_237677 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1853, 28), 'float')
        # Applying the binary operator 'div' (line 1853)
        result_div_237678 = python_operator(stypy.reporting.localization.Localization(__file__, 1853, 20), 'div', angle_237676, float_237677)
        
        # Getting the type of 'pi' (line 1853)
        pi_237679 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1853, 36), 'pi')
        # Applying the binary operator '*' (line 1853)
        result_mul_237680 = python_operator(stypy.reporting.localization.Localization(__file__, 1853, 34), '*', result_div_237678, pi_237679)
        
        # Assigning a type to the variable 'angle' (line 1853)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1853, 12), 'angle', result_mul_237680)
        
        # Call to output(...): (line 1854)
        # Processing the call arguments (line 1854)
        
        # Call to cos(...): (line 1854)
        # Processing the call arguments (line 1854)
        # Getting the type of 'angle' (line 1854)
        angle_237685 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1854, 33), 'angle', False)
        # Processing the call keyword arguments (line 1854)
        kwargs_237686 = {}
        # Getting the type of 'cos' (line 1854)
        cos_237684 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1854, 29), 'cos', False)
        # Calling cos(args, kwargs) (line 1854)
        cos_call_result_237687 = invoke(stypy.reporting.localization.Localization(__file__, 1854, 29), cos_237684, *[angle_237685], **kwargs_237686)
        
        
        # Call to sin(...): (line 1854)
        # Processing the call arguments (line 1854)
        # Getting the type of 'angle' (line 1854)
        angle_237689 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1854, 45), 'angle', False)
        # Processing the call keyword arguments (line 1854)
        kwargs_237690 = {}
        # Getting the type of 'sin' (line 1854)
        sin_237688 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1854, 41), 'sin', False)
        # Calling sin(args, kwargs) (line 1854)
        sin_call_result_237691 = invoke(stypy.reporting.localization.Localization(__file__, 1854, 41), sin_237688, *[angle_237689], **kwargs_237690)
        
        
        
        # Call to sin(...): (line 1855)
        # Processing the call arguments (line 1855)
        # Getting the type of 'angle' (line 1855)
        angle_237693 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1855, 34), 'angle', False)
        # Processing the call keyword arguments (line 1855)
        kwargs_237694 = {}
        # Getting the type of 'sin' (line 1855)
        sin_237692 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1855, 30), 'sin', False)
        # Calling sin(args, kwargs) (line 1855)
        sin_call_result_237695 = invoke(stypy.reporting.localization.Localization(__file__, 1855, 30), sin_237692, *[angle_237693], **kwargs_237694)
        
        # Applying the 'usub' unary operator (line 1855)
        result___neg___237696 = python_operator(stypy.reporting.localization.Localization(__file__, 1855, 29), 'usub', sin_call_result_237695)
        
        
        # Call to cos(...): (line 1855)
        # Processing the call arguments (line 1855)
        # Getting the type of 'angle' (line 1855)
        angle_237698 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1855, 46), 'angle', False)
        # Processing the call keyword arguments (line 1855)
        kwargs_237699 = {}
        # Getting the type of 'cos' (line 1855)
        cos_237697 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1855, 42), 'cos', False)
        # Calling cos(args, kwargs) (line 1855)
        cos_call_result_237700 = invoke(stypy.reporting.localization.Localization(__file__, 1855, 42), cos_237697, *[angle_237698], **kwargs_237699)
        
        # Getting the type of 'x' (line 1856)
        x_237701 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1856, 29), 'x', False)
        # Getting the type of 'y' (line 1856)
        y_237702 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1856, 32), 'y', False)
        # Getting the type of 'Op' (line 1856)
        Op_237703 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1856, 35), 'Op', False)
        # Obtaining the member 'textmatrix' of a type (line 1856)
        textmatrix_237704 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1856, 35), Op_237703, 'textmatrix')
        # Processing the call keyword arguments (line 1854)
        kwargs_237705 = {}
        # Getting the type of 'self' (line 1854)
        self_237681 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1854, 12), 'self', False)
        # Obtaining the member 'file' of a type (line 1854)
        file_237682 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1854, 12), self_237681, 'file')
        # Obtaining the member 'output' of a type (line 1854)
        output_237683 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1854, 12), file_237682, 'output')
        # Calling output(args, kwargs) (line 1854)
        output_call_result_237706 = invoke(stypy.reporting.localization.Localization(__file__, 1854, 12), output_237683, *[cos_call_result_237687, sin_call_result_237691, result___neg___237696, cos_call_result_237700, x_237701, y_237702, textmatrix_237704], **kwargs_237705)
        
        
        # Call to output(...): (line 1857)
        # Processing the call arguments (line 1857)
        int_237710 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1857, 29), 'int')
        int_237711 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1857, 32), 'int')
        # Getting the type of 'Op' (line 1857)
        Op_237712 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1857, 35), 'Op', False)
        # Obtaining the member 'textpos' of a type (line 1857)
        textpos_237713 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1857, 35), Op_237712, 'textpos')
        # Processing the call keyword arguments (line 1857)
        kwargs_237714 = {}
        # Getting the type of 'self' (line 1857)
        self_237707 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1857, 12), 'self', False)
        # Obtaining the member 'file' of a type (line 1857)
        file_237708 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1857, 12), self_237707, 'file')
        # Obtaining the member 'output' of a type (line 1857)
        output_237709 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1857, 12), file_237708, 'output')
        # Calling output(args, kwargs) (line 1857)
        output_call_result_237715 = invoke(stypy.reporting.localization.Localization(__file__, 1857, 12), output_237709, *[int_237710, int_237711, textpos_237713], **kwargs_237714)
        
        # SSA join for if statement (line 1850)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of '_setup_textpos(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_setup_textpos' in the type store
        # Getting the type of 'stypy_return_type' (line 1849)
        stypy_return_type_237716 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1849, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_237716)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_setup_textpos'
        return stypy_return_type_237716


    @norecursion
    def draw_mathtext(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'draw_mathtext'
        module_type_store = module_type_store.open_function_context('draw_mathtext', 1859, 4, False)
        # Assigning a type to the variable 'self' (line 1860)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1860, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererPdf.draw_mathtext.__dict__.__setitem__('stypy_localization', localization)
        RendererPdf.draw_mathtext.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererPdf.draw_mathtext.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererPdf.draw_mathtext.__dict__.__setitem__('stypy_function_name', 'RendererPdf.draw_mathtext')
        RendererPdf.draw_mathtext.__dict__.__setitem__('stypy_param_names_list', ['gc', 'x', 'y', 's', 'prop', 'angle'])
        RendererPdf.draw_mathtext.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererPdf.draw_mathtext.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererPdf.draw_mathtext.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererPdf.draw_mathtext.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererPdf.draw_mathtext.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererPdf.draw_mathtext.__dict__.__setitem__('stypy_declared_arg_number', 7)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererPdf.draw_mathtext', ['gc', 'x', 'y', 's', 'prop', 'angle'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'draw_mathtext', localization, ['gc', 'x', 'y', 's', 'prop', 'angle'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'draw_mathtext(...)' code ##################

        
        # Assigning a Call to a Tuple (line 1861):
        
        # Assigning a Call to a Name:
        
        # Call to parse(...): (line 1862)
        # Processing the call arguments (line 1862)
        # Getting the type of 's' (line 1862)
        s_237720 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1862, 39), 's', False)
        int_237721 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1862, 42), 'int')
        # Getting the type of 'prop' (line 1862)
        prop_237722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1862, 46), 'prop', False)
        # Processing the call keyword arguments (line 1862)
        kwargs_237723 = {}
        # Getting the type of 'self' (line 1862)
        self_237717 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1862, 12), 'self', False)
        # Obtaining the member 'mathtext_parser' of a type (line 1862)
        mathtext_parser_237718 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1862, 12), self_237717, 'mathtext_parser')
        # Obtaining the member 'parse' of a type (line 1862)
        parse_237719 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1862, 12), mathtext_parser_237718, 'parse')
        # Calling parse(args, kwargs) (line 1862)
        parse_call_result_237724 = invoke(stypy.reporting.localization.Localization(__file__, 1862, 12), parse_237719, *[s_237720, int_237721, prop_237722], **kwargs_237723)
        
        # Assigning a type to the variable 'call_assignment_231703' (line 1861)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1861, 8), 'call_assignment_231703', parse_call_result_237724)
        
        # Assigning a Call to a Name (line 1861):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_237727 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1861, 8), 'int')
        # Processing the call keyword arguments
        kwargs_237728 = {}
        # Getting the type of 'call_assignment_231703' (line 1861)
        call_assignment_231703_237725 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1861, 8), 'call_assignment_231703', False)
        # Obtaining the member '__getitem__' of a type (line 1861)
        getitem___237726 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1861, 8), call_assignment_231703_237725, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_237729 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___237726, *[int_237727], **kwargs_237728)
        
        # Assigning a type to the variable 'call_assignment_231704' (line 1861)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1861, 8), 'call_assignment_231704', getitem___call_result_237729)
        
        # Assigning a Name to a Name (line 1861):
        # Getting the type of 'call_assignment_231704' (line 1861)
        call_assignment_231704_237730 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1861, 8), 'call_assignment_231704')
        # Assigning a type to the variable 'width' (line 1861)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1861, 8), 'width', call_assignment_231704_237730)
        
        # Assigning a Call to a Name (line 1861):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_237733 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1861, 8), 'int')
        # Processing the call keyword arguments
        kwargs_237734 = {}
        # Getting the type of 'call_assignment_231703' (line 1861)
        call_assignment_231703_237731 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1861, 8), 'call_assignment_231703', False)
        # Obtaining the member '__getitem__' of a type (line 1861)
        getitem___237732 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1861, 8), call_assignment_231703_237731, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_237735 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___237732, *[int_237733], **kwargs_237734)
        
        # Assigning a type to the variable 'call_assignment_231705' (line 1861)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1861, 8), 'call_assignment_231705', getitem___call_result_237735)
        
        # Assigning a Name to a Name (line 1861):
        # Getting the type of 'call_assignment_231705' (line 1861)
        call_assignment_231705_237736 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1861, 8), 'call_assignment_231705')
        # Assigning a type to the variable 'height' (line 1861)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1861, 15), 'height', call_assignment_231705_237736)
        
        # Assigning a Call to a Name (line 1861):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_237739 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1861, 8), 'int')
        # Processing the call keyword arguments
        kwargs_237740 = {}
        # Getting the type of 'call_assignment_231703' (line 1861)
        call_assignment_231703_237737 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1861, 8), 'call_assignment_231703', False)
        # Obtaining the member '__getitem__' of a type (line 1861)
        getitem___237738 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1861, 8), call_assignment_231703_237737, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_237741 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___237738, *[int_237739], **kwargs_237740)
        
        # Assigning a type to the variable 'call_assignment_231706' (line 1861)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1861, 8), 'call_assignment_231706', getitem___call_result_237741)
        
        # Assigning a Name to a Name (line 1861):
        # Getting the type of 'call_assignment_231706' (line 1861)
        call_assignment_231706_237742 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1861, 8), 'call_assignment_231706')
        # Assigning a type to the variable 'descent' (line 1861)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1861, 23), 'descent', call_assignment_231706_237742)
        
        # Assigning a Call to a Name (line 1861):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_237745 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1861, 8), 'int')
        # Processing the call keyword arguments
        kwargs_237746 = {}
        # Getting the type of 'call_assignment_231703' (line 1861)
        call_assignment_231703_237743 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1861, 8), 'call_assignment_231703', False)
        # Obtaining the member '__getitem__' of a type (line 1861)
        getitem___237744 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1861, 8), call_assignment_231703_237743, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_237747 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___237744, *[int_237745], **kwargs_237746)
        
        # Assigning a type to the variable 'call_assignment_231707' (line 1861)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1861, 8), 'call_assignment_231707', getitem___call_result_237747)
        
        # Assigning a Name to a Name (line 1861):
        # Getting the type of 'call_assignment_231707' (line 1861)
        call_assignment_231707_237748 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1861, 8), 'call_assignment_231707')
        # Assigning a type to the variable 'glyphs' (line 1861)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1861, 32), 'glyphs', call_assignment_231707_237748)
        
        # Assigning a Call to a Name (line 1861):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_237751 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1861, 8), 'int')
        # Processing the call keyword arguments
        kwargs_237752 = {}
        # Getting the type of 'call_assignment_231703' (line 1861)
        call_assignment_231703_237749 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1861, 8), 'call_assignment_231703', False)
        # Obtaining the member '__getitem__' of a type (line 1861)
        getitem___237750 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1861, 8), call_assignment_231703_237749, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_237753 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___237750, *[int_237751], **kwargs_237752)
        
        # Assigning a type to the variable 'call_assignment_231708' (line 1861)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1861, 8), 'call_assignment_231708', getitem___call_result_237753)
        
        # Assigning a Name to a Name (line 1861):
        # Getting the type of 'call_assignment_231708' (line 1861)
        call_assignment_231708_237754 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1861, 8), 'call_assignment_231708')
        # Assigning a type to the variable 'rects' (line 1861)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1861, 40), 'rects', call_assignment_231708_237754)
        
        # Assigning a Call to a Name (line 1861):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_237757 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1861, 8), 'int')
        # Processing the call keyword arguments
        kwargs_237758 = {}
        # Getting the type of 'call_assignment_231703' (line 1861)
        call_assignment_231703_237755 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1861, 8), 'call_assignment_231703', False)
        # Obtaining the member '__getitem__' of a type (line 1861)
        getitem___237756 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1861, 8), call_assignment_231703_237755, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_237759 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___237756, *[int_237757], **kwargs_237758)
        
        # Assigning a type to the variable 'call_assignment_231709' (line 1861)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1861, 8), 'call_assignment_231709', getitem___call_result_237759)
        
        # Assigning a Name to a Name (line 1861):
        # Getting the type of 'call_assignment_231709' (line 1861)
        call_assignment_231709_237760 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1861, 8), 'call_assignment_231709')
        # Assigning a type to the variable 'used_characters' (line 1861)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1861, 47), 'used_characters', call_assignment_231709_237760)
        
        # Call to merge_used_characters(...): (line 1863)
        # Processing the call arguments (line 1863)
        # Getting the type of 'used_characters' (line 1863)
        used_characters_237763 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1863, 35), 'used_characters', False)
        # Processing the call keyword arguments (line 1863)
        kwargs_237764 = {}
        # Getting the type of 'self' (line 1863)
        self_237761 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1863, 8), 'self', False)
        # Obtaining the member 'merge_used_characters' of a type (line 1863)
        merge_used_characters_237762 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1863, 8), self_237761, 'merge_used_characters')
        # Calling merge_used_characters(args, kwargs) (line 1863)
        merge_used_characters_call_result_237765 = invoke(stypy.reporting.localization.Localization(__file__, 1863, 8), merge_used_characters_237762, *[used_characters_237763], **kwargs_237764)
        
        
        # Assigning a Subscript to a Name (line 1868):
        
        # Assigning a Subscript to a Name (line 1868):
        
        # Obtaining the type of the subscript
        unicode_237766 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1868, 35), 'unicode', u'pdf.fonttype')
        # Getting the type of 'rcParams' (line 1868)
        rcParams_237767 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1868, 26), 'rcParams')
        # Obtaining the member '__getitem__' of a type (line 1868)
        getitem___237768 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1868, 26), rcParams_237767, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1868)
        subscript_call_result_237769 = invoke(stypy.reporting.localization.Localization(__file__, 1868, 26), getitem___237768, unicode_237766)
        
        # Assigning a type to the variable 'global_fonttype' (line 1868)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1868, 8), 'global_fonttype', subscript_call_result_237769)
        
        # Assigning a BinOp to a Name (line 1871):
        
        # Assigning a BinOp to a Name (line 1871):
        # Getting the type of 'angle' (line 1871)
        angle_237770 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1871, 12), 'angle')
        float_237771 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1871, 20), 'float')
        # Applying the binary operator 'div' (line 1871)
        result_div_237772 = python_operator(stypy.reporting.localization.Localization(__file__, 1871, 12), 'div', angle_237770, float_237771)
        
        # Getting the type of 'pi' (line 1871)
        pi_237773 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1871, 28), 'pi')
        # Applying the binary operator '*' (line 1871)
        result_mul_237774 = python_operator(stypy.reporting.localization.Localization(__file__, 1871, 26), '*', result_div_237772, pi_237773)
        
        # Assigning a type to the variable 'a' (line 1871)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1871, 8), 'a', result_mul_237774)
        
        # Call to output(...): (line 1872)
        # Processing the call arguments (line 1872)
        # Getting the type of 'Op' (line 1872)
        Op_237778 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1872, 25), 'Op', False)
        # Obtaining the member 'gsave' of a type (line 1872)
        gsave_237779 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1872, 25), Op_237778, 'gsave')
        # Processing the call keyword arguments (line 1872)
        kwargs_237780 = {}
        # Getting the type of 'self' (line 1872)
        self_237775 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1872, 8), 'self', False)
        # Obtaining the member 'file' of a type (line 1872)
        file_237776 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1872, 8), self_237775, 'file')
        # Obtaining the member 'output' of a type (line 1872)
        output_237777 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1872, 8), file_237776, 'output')
        # Calling output(args, kwargs) (line 1872)
        output_call_result_237781 = invoke(stypy.reporting.localization.Localization(__file__, 1872, 8), output_237777, *[gsave_237779], **kwargs_237780)
        
        
        # Call to output(...): (line 1873)
        # Processing the call arguments (line 1873)
        
        # Call to cos(...): (line 1873)
        # Processing the call arguments (line 1873)
        # Getting the type of 'a' (line 1873)
        a_237786 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1873, 29), 'a', False)
        # Processing the call keyword arguments (line 1873)
        kwargs_237787 = {}
        # Getting the type of 'cos' (line 1873)
        cos_237785 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1873, 25), 'cos', False)
        # Calling cos(args, kwargs) (line 1873)
        cos_call_result_237788 = invoke(stypy.reporting.localization.Localization(__file__, 1873, 25), cos_237785, *[a_237786], **kwargs_237787)
        
        
        # Call to sin(...): (line 1873)
        # Processing the call arguments (line 1873)
        # Getting the type of 'a' (line 1873)
        a_237790 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1873, 37), 'a', False)
        # Processing the call keyword arguments (line 1873)
        kwargs_237791 = {}
        # Getting the type of 'sin' (line 1873)
        sin_237789 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1873, 33), 'sin', False)
        # Calling sin(args, kwargs) (line 1873)
        sin_call_result_237792 = invoke(stypy.reporting.localization.Localization(__file__, 1873, 33), sin_237789, *[a_237790], **kwargs_237791)
        
        
        
        # Call to sin(...): (line 1873)
        # Processing the call arguments (line 1873)
        # Getting the type of 'a' (line 1873)
        a_237794 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1873, 46), 'a', False)
        # Processing the call keyword arguments (line 1873)
        kwargs_237795 = {}
        # Getting the type of 'sin' (line 1873)
        sin_237793 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1873, 42), 'sin', False)
        # Calling sin(args, kwargs) (line 1873)
        sin_call_result_237796 = invoke(stypy.reporting.localization.Localization(__file__, 1873, 42), sin_237793, *[a_237794], **kwargs_237795)
        
        # Applying the 'usub' unary operator (line 1873)
        result___neg___237797 = python_operator(stypy.reporting.localization.Localization(__file__, 1873, 41), 'usub', sin_call_result_237796)
        
        
        # Call to cos(...): (line 1873)
        # Processing the call arguments (line 1873)
        # Getting the type of 'a' (line 1873)
        a_237799 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1873, 54), 'a', False)
        # Processing the call keyword arguments (line 1873)
        kwargs_237800 = {}
        # Getting the type of 'cos' (line 1873)
        cos_237798 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1873, 50), 'cos', False)
        # Calling cos(args, kwargs) (line 1873)
        cos_call_result_237801 = invoke(stypy.reporting.localization.Localization(__file__, 1873, 50), cos_237798, *[a_237799], **kwargs_237800)
        
        # Getting the type of 'x' (line 1873)
        x_237802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1873, 58), 'x', False)
        # Getting the type of 'y' (line 1873)
        y_237803 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1873, 61), 'y', False)
        # Getting the type of 'Op' (line 1874)
        Op_237804 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1874, 25), 'Op', False)
        # Obtaining the member 'concat_matrix' of a type (line 1874)
        concat_matrix_237805 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1874, 25), Op_237804, 'concat_matrix')
        # Processing the call keyword arguments (line 1873)
        kwargs_237806 = {}
        # Getting the type of 'self' (line 1873)
        self_237782 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1873, 8), 'self', False)
        # Obtaining the member 'file' of a type (line 1873)
        file_237783 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1873, 8), self_237782, 'file')
        # Obtaining the member 'output' of a type (line 1873)
        output_237784 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1873, 8), file_237783, 'output')
        # Calling output(args, kwargs) (line 1873)
        output_call_result_237807 = invoke(stypy.reporting.localization.Localization(__file__, 1873, 8), output_237784, *[cos_call_result_237788, sin_call_result_237792, result___neg___237797, cos_call_result_237801, x_237802, y_237803, concat_matrix_237805], **kwargs_237806)
        
        
        # Call to check_gc(...): (line 1876)
        # Processing the call arguments (line 1876)
        # Getting the type of 'gc' (line 1876)
        gc_237810 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1876, 22), 'gc', False)
        # Getting the type of 'gc' (line 1876)
        gc_237811 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1876, 26), 'gc', False)
        # Obtaining the member '_rgb' of a type (line 1876)
        _rgb_237812 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1876, 26), gc_237811, '_rgb')
        # Processing the call keyword arguments (line 1876)
        kwargs_237813 = {}
        # Getting the type of 'self' (line 1876)
        self_237808 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1876, 8), 'self', False)
        # Obtaining the member 'check_gc' of a type (line 1876)
        check_gc_237809 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1876, 8), self_237808, 'check_gc')
        # Calling check_gc(args, kwargs) (line 1876)
        check_gc_call_result_237814 = invoke(stypy.reporting.localization.Localization(__file__, 1876, 8), check_gc_237809, *[gc_237810, _rgb_237812], **kwargs_237813)
        
        
        # Call to output(...): (line 1877)
        # Processing the call arguments (line 1877)
        # Getting the type of 'Op' (line 1877)
        Op_237818 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1877, 25), 'Op', False)
        # Obtaining the member 'begin_text' of a type (line 1877)
        begin_text_237819 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1877, 25), Op_237818, 'begin_text')
        # Processing the call keyword arguments (line 1877)
        kwargs_237820 = {}
        # Getting the type of 'self' (line 1877)
        self_237815 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1877, 8), 'self', False)
        # Obtaining the member 'file' of a type (line 1877)
        file_237816 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1877, 8), self_237815, 'file')
        # Obtaining the member 'output' of a type (line 1877)
        output_237817 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1877, 8), file_237816, 'output')
        # Calling output(args, kwargs) (line 1877)
        output_call_result_237821 = invoke(stypy.reporting.localization.Localization(__file__, 1877, 8), output_237817, *[begin_text_237819], **kwargs_237820)
        
        
        # Assigning a Tuple to a Name (line 1878):
        
        # Assigning a Tuple to a Name (line 1878):
        
        # Obtaining an instance of the builtin type 'tuple' (line 1878)
        tuple_237822 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1878, 20), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1878)
        # Adding element type (line 1878)
        # Getting the type of 'None' (line 1878)
        None_237823 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1878, 20), 'None')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1878, 20), tuple_237822, None_237823)
        # Adding element type (line 1878)
        # Getting the type of 'None' (line 1878)
        None_237824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1878, 26), 'None')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1878, 20), tuple_237822, None_237824)
        
        # Assigning a type to the variable 'prev_font' (line 1878)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1878, 8), 'prev_font', tuple_237822)
        
        # Assigning a Tuple to a Tuple (line 1879):
        
        # Assigning a Num to a Name (line 1879):
        int_237825 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1879, 21), 'int')
        # Assigning a type to the variable 'tuple_assignment_231710' (line 1879)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1879, 8), 'tuple_assignment_231710', int_237825)
        
        # Assigning a Num to a Name (line 1879):
        int_237826 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1879, 24), 'int')
        # Assigning a type to the variable 'tuple_assignment_231711' (line 1879)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1879, 8), 'tuple_assignment_231711', int_237826)
        
        # Assigning a Name to a Name (line 1879):
        # Getting the type of 'tuple_assignment_231710' (line 1879)
        tuple_assignment_231710_237827 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1879, 8), 'tuple_assignment_231710')
        # Assigning a type to the variable 'oldx' (line 1879)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1879, 8), 'oldx', tuple_assignment_231710_237827)
        
        # Assigning a Name to a Name (line 1879):
        # Getting the type of 'tuple_assignment_231711' (line 1879)
        tuple_assignment_231711_237828 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1879, 8), 'tuple_assignment_231711')
        # Assigning a type to the variable 'oldy' (line 1879)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1879, 14), 'oldy', tuple_assignment_231711_237828)
        
        # Getting the type of 'glyphs' (line 1880)
        glyphs_237829 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1880, 60), 'glyphs')
        # Testing the type of a for loop iterable (line 1880)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1880, 8), glyphs_237829)
        # Getting the type of the for loop variable (line 1880)
        for_loop_var_237830 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1880, 8), glyphs_237829)
        # Assigning a type to the variable 'ox' (line 1880)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1880, 8), 'ox', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1880, 8), for_loop_var_237830))
        # Assigning a type to the variable 'oy' (line 1880)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1880, 8), 'oy', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1880, 8), for_loop_var_237830))
        # Assigning a type to the variable 'fontname' (line 1880)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1880, 8), 'fontname', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1880, 8), for_loop_var_237830))
        # Assigning a type to the variable 'fontsize' (line 1880)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1880, 8), 'fontsize', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1880, 8), for_loop_var_237830))
        # Assigning a type to the variable 'num' (line 1880)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1880, 8), 'num', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1880, 8), for_loop_var_237830))
        # Assigning a type to the variable 'symbol_name' (line 1880)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1880, 8), 'symbol_name', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1880, 8), for_loop_var_237830))
        # SSA begins for a for statement (line 1880)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        
        # Call to is_opentype_cff_font(...): (line 1881)
        # Processing the call arguments (line 1881)
        # Getting the type of 'fontname' (line 1881)
        fontname_237832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1881, 36), 'fontname', False)
        # Processing the call keyword arguments (line 1881)
        kwargs_237833 = {}
        # Getting the type of 'is_opentype_cff_font' (line 1881)
        is_opentype_cff_font_237831 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1881, 15), 'is_opentype_cff_font', False)
        # Calling is_opentype_cff_font(args, kwargs) (line 1881)
        is_opentype_cff_font_call_result_237834 = invoke(stypy.reporting.localization.Localization(__file__, 1881, 15), is_opentype_cff_font_237831, *[fontname_237832], **kwargs_237833)
        
        # Testing the type of an if condition (line 1881)
        if_condition_237835 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1881, 12), is_opentype_cff_font_call_result_237834)
        # Assigning a type to the variable 'if_condition_237835' (line 1881)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1881, 12), 'if_condition_237835', if_condition_237835)
        # SSA begins for if statement (line 1881)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Num to a Name (line 1882):
        
        # Assigning a Num to a Name (line 1882):
        int_237836 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1882, 27), 'int')
        # Assigning a type to the variable 'fonttype' (line 1882)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1882, 16), 'fonttype', int_237836)
        # SSA branch for the else part of an if statement (line 1881)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Name to a Name (line 1884):
        
        # Assigning a Name to a Name (line 1884):
        # Getting the type of 'global_fonttype' (line 1884)
        global_fonttype_237837 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1884, 27), 'global_fonttype')
        # Assigning a type to the variable 'fonttype' (line 1884)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1884, 16), 'fonttype', global_fonttype_237837)
        # SSA join for if statement (line 1881)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Evaluating a boolean operation
        
        # Getting the type of 'fonttype' (line 1886)
        fonttype_237838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1886, 15), 'fonttype')
        int_237839 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1886, 27), 'int')
        # Applying the binary operator '==' (line 1886)
        result_eq_237840 = python_operator(stypy.reporting.localization.Localization(__file__, 1886, 15), '==', fonttype_237838, int_237839)
        
        
        # Getting the type of 'num' (line 1886)
        num_237841 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1886, 33), 'num')
        int_237842 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1886, 40), 'int')
        # Applying the binary operator '<=' (line 1886)
        result_le_237843 = python_operator(stypy.reporting.localization.Localization(__file__, 1886, 33), '<=', num_237841, int_237842)
        
        # Applying the binary operator 'or' (line 1886)
        result_or_keyword_237844 = python_operator(stypy.reporting.localization.Localization(__file__, 1886, 15), 'or', result_eq_237840, result_le_237843)
        
        # Testing the type of an if condition (line 1886)
        if_condition_237845 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1886, 12), result_or_keyword_237844)
        # Assigning a type to the variable 'if_condition_237845' (line 1886)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1886, 12), 'if_condition_237845', if_condition_237845)
        # SSA begins for if statement (line 1886)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to _setup_textpos(...): (line 1887)
        # Processing the call arguments (line 1887)
        # Getting the type of 'ox' (line 1887)
        ox_237848 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1887, 36), 'ox', False)
        # Getting the type of 'oy' (line 1887)
        oy_237849 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1887, 40), 'oy', False)
        int_237850 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1887, 44), 'int')
        # Getting the type of 'oldx' (line 1887)
        oldx_237851 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1887, 47), 'oldx', False)
        # Getting the type of 'oldy' (line 1887)
        oldy_237852 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1887, 53), 'oldy', False)
        # Processing the call keyword arguments (line 1887)
        kwargs_237853 = {}
        # Getting the type of 'self' (line 1887)
        self_237846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1887, 16), 'self', False)
        # Obtaining the member '_setup_textpos' of a type (line 1887)
        _setup_textpos_237847 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1887, 16), self_237846, '_setup_textpos')
        # Calling _setup_textpos(args, kwargs) (line 1887)
        _setup_textpos_call_result_237854 = invoke(stypy.reporting.localization.Localization(__file__, 1887, 16), _setup_textpos_237847, *[ox_237848, oy_237849, int_237850, oldx_237851, oldy_237852], **kwargs_237853)
        
        
        # Assigning a Tuple to a Tuple (line 1888):
        
        # Assigning a Name to a Name (line 1888):
        # Getting the type of 'ox' (line 1888)
        ox_237855 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1888, 29), 'ox')
        # Assigning a type to the variable 'tuple_assignment_231712' (line 1888)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1888, 16), 'tuple_assignment_231712', ox_237855)
        
        # Assigning a Name to a Name (line 1888):
        # Getting the type of 'oy' (line 1888)
        oy_237856 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1888, 33), 'oy')
        # Assigning a type to the variable 'tuple_assignment_231713' (line 1888)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1888, 16), 'tuple_assignment_231713', oy_237856)
        
        # Assigning a Name to a Name (line 1888):
        # Getting the type of 'tuple_assignment_231712' (line 1888)
        tuple_assignment_231712_237857 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1888, 16), 'tuple_assignment_231712')
        # Assigning a type to the variable 'oldx' (line 1888)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1888, 16), 'oldx', tuple_assignment_231712_237857)
        
        # Assigning a Name to a Name (line 1888):
        # Getting the type of 'tuple_assignment_231713' (line 1888)
        tuple_assignment_231713_237858 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1888, 16), 'tuple_assignment_231713')
        # Assigning a type to the variable 'oldy' (line 1888)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1888, 22), 'oldy', tuple_assignment_231713_237858)
        
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 1889)
        tuple_237859 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1889, 20), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1889)
        # Adding element type (line 1889)
        # Getting the type of 'fontname' (line 1889)
        fontname_237860 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1889, 20), 'fontname')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1889, 20), tuple_237859, fontname_237860)
        # Adding element type (line 1889)
        # Getting the type of 'fontsize' (line 1889)
        fontsize_237861 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1889, 30), 'fontsize')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1889, 20), tuple_237859, fontsize_237861)
        
        # Getting the type of 'prev_font' (line 1889)
        prev_font_237862 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1889, 43), 'prev_font')
        # Applying the binary operator '!=' (line 1889)
        result_ne_237863 = python_operator(stypy.reporting.localization.Localization(__file__, 1889, 19), '!=', tuple_237859, prev_font_237862)
        
        # Testing the type of an if condition (line 1889)
        if_condition_237864 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1889, 16), result_ne_237863)
        # Assigning a type to the variable 'if_condition_237864' (line 1889)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1889, 16), 'if_condition_237864', if_condition_237864)
        # SSA begins for if statement (line 1889)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to output(...): (line 1890)
        # Processing the call arguments (line 1890)
        
        # Call to fontName(...): (line 1890)
        # Processing the call arguments (line 1890)
        # Getting the type of 'fontname' (line 1890)
        fontname_237871 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1890, 56), 'fontname', False)
        # Processing the call keyword arguments (line 1890)
        kwargs_237872 = {}
        # Getting the type of 'self' (line 1890)
        self_237868 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1890, 37), 'self', False)
        # Obtaining the member 'file' of a type (line 1890)
        file_237869 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1890, 37), self_237868, 'file')
        # Obtaining the member 'fontName' of a type (line 1890)
        fontName_237870 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1890, 37), file_237869, 'fontName')
        # Calling fontName(args, kwargs) (line 1890)
        fontName_call_result_237873 = invoke(stypy.reporting.localization.Localization(__file__, 1890, 37), fontName_237870, *[fontname_237871], **kwargs_237872)
        
        # Getting the type of 'fontsize' (line 1890)
        fontsize_237874 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1890, 67), 'fontsize', False)
        # Getting the type of 'Op' (line 1891)
        Op_237875 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1891, 37), 'Op', False)
        # Obtaining the member 'selectfont' of a type (line 1891)
        selectfont_237876 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1891, 37), Op_237875, 'selectfont')
        # Processing the call keyword arguments (line 1890)
        kwargs_237877 = {}
        # Getting the type of 'self' (line 1890)
        self_237865 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1890, 20), 'self', False)
        # Obtaining the member 'file' of a type (line 1890)
        file_237866 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1890, 20), self_237865, 'file')
        # Obtaining the member 'output' of a type (line 1890)
        output_237867 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1890, 20), file_237866, 'output')
        # Calling output(args, kwargs) (line 1890)
        output_call_result_237878 = invoke(stypy.reporting.localization.Localization(__file__, 1890, 20), output_237867, *[fontName_call_result_237873, fontsize_237874, selectfont_237876], **kwargs_237877)
        
        
        # Assigning a Tuple to a Name (line 1892):
        
        # Assigning a Tuple to a Name (line 1892):
        
        # Obtaining an instance of the builtin type 'tuple' (line 1892)
        tuple_237879 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1892, 32), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1892)
        # Adding element type (line 1892)
        # Getting the type of 'fontname' (line 1892)
        fontname_237880 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1892, 32), 'fontname')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1892, 32), tuple_237879, fontname_237880)
        # Adding element type (line 1892)
        # Getting the type of 'fontsize' (line 1892)
        fontsize_237881 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1892, 42), 'fontsize')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1892, 32), tuple_237879, fontsize_237881)
        
        # Assigning a type to the variable 'prev_font' (line 1892)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1892, 20), 'prev_font', tuple_237879)
        # SSA join for if statement (line 1889)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to output(...): (line 1893)
        # Processing the call arguments (line 1893)
        
        # Call to encode_string(...): (line 1893)
        # Processing the call arguments (line 1893)
        
        # Call to unichr(...): (line 1893)
        # Processing the call arguments (line 1893)
        # Getting the type of 'num' (line 1893)
        num_237888 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1893, 59), 'num', False)
        # Processing the call keyword arguments (line 1893)
        kwargs_237889 = {}
        # Getting the type of 'unichr' (line 1893)
        unichr_237887 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1893, 52), 'unichr', False)
        # Calling unichr(args, kwargs) (line 1893)
        unichr_call_result_237890 = invoke(stypy.reporting.localization.Localization(__file__, 1893, 52), unichr_237887, *[num_237888], **kwargs_237889)
        
        # Getting the type of 'fonttype' (line 1893)
        fonttype_237891 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1893, 65), 'fonttype', False)
        # Processing the call keyword arguments (line 1893)
        kwargs_237892 = {}
        # Getting the type of 'self' (line 1893)
        self_237885 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1893, 33), 'self', False)
        # Obtaining the member 'encode_string' of a type (line 1893)
        encode_string_237886 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1893, 33), self_237885, 'encode_string')
        # Calling encode_string(args, kwargs) (line 1893)
        encode_string_call_result_237893 = invoke(stypy.reporting.localization.Localization(__file__, 1893, 33), encode_string_237886, *[unichr_call_result_237890, fonttype_237891], **kwargs_237892)
        
        # Getting the type of 'Op' (line 1894)
        Op_237894 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1894, 33), 'Op', False)
        # Obtaining the member 'show' of a type (line 1894)
        show_237895 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1894, 33), Op_237894, 'show')
        # Processing the call keyword arguments (line 1893)
        kwargs_237896 = {}
        # Getting the type of 'self' (line 1893)
        self_237882 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1893, 16), 'self', False)
        # Obtaining the member 'file' of a type (line 1893)
        file_237883 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1893, 16), self_237882, 'file')
        # Obtaining the member 'output' of a type (line 1893)
        output_237884 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1893, 16), file_237883, 'output')
        # Calling output(args, kwargs) (line 1893)
        output_call_result_237897 = invoke(stypy.reporting.localization.Localization(__file__, 1893, 16), output_237884, *[encode_string_call_result_237893, show_237895], **kwargs_237896)
        
        # SSA join for if statement (line 1886)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to output(...): (line 1895)
        # Processing the call arguments (line 1895)
        # Getting the type of 'Op' (line 1895)
        Op_237901 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1895, 25), 'Op', False)
        # Obtaining the member 'end_text' of a type (line 1895)
        end_text_237902 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1895, 25), Op_237901, 'end_text')
        # Processing the call keyword arguments (line 1895)
        kwargs_237903 = {}
        # Getting the type of 'self' (line 1895)
        self_237898 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1895, 8), 'self', False)
        # Obtaining the member 'file' of a type (line 1895)
        file_237899 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1895, 8), self_237898, 'file')
        # Obtaining the member 'output' of a type (line 1895)
        output_237900 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1895, 8), file_237899, 'output')
        # Calling output(args, kwargs) (line 1895)
        output_call_result_237904 = invoke(stypy.reporting.localization.Localization(__file__, 1895, 8), output_237900, *[end_text_237902], **kwargs_237903)
        
        
        
        # Getting the type of 'global_fonttype' (line 1899)
        global_fonttype_237905 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1899, 11), 'global_fonttype')
        int_237906 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1899, 30), 'int')
        # Applying the binary operator '==' (line 1899)
        result_eq_237907 = python_operator(stypy.reporting.localization.Localization(__file__, 1899, 11), '==', global_fonttype_237905, int_237906)
        
        # Testing the type of an if condition (line 1899)
        if_condition_237908 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1899, 8), result_eq_237907)
        # Assigning a type to the variable 'if_condition_237908' (line 1899)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1899, 8), 'if_condition_237908', if_condition_237908)
        # SSA begins for if statement (line 1899)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'glyphs' (line 1900)
        glyphs_237909 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1900, 64), 'glyphs')
        # Testing the type of a for loop iterable (line 1900)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1900, 12), glyphs_237909)
        # Getting the type of the for loop variable (line 1900)
        for_loop_var_237910 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1900, 12), glyphs_237909)
        # Assigning a type to the variable 'ox' (line 1900)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1900, 12), 'ox', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1900, 12), for_loop_var_237910))
        # Assigning a type to the variable 'oy' (line 1900)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1900, 12), 'oy', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1900, 12), for_loop_var_237910))
        # Assigning a type to the variable 'fontname' (line 1900)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1900, 12), 'fontname', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1900, 12), for_loop_var_237910))
        # Assigning a type to the variable 'fontsize' (line 1900)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1900, 12), 'fontsize', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1900, 12), for_loop_var_237910))
        # Assigning a type to the variable 'num' (line 1900)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1900, 12), 'num', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1900, 12), for_loop_var_237910))
        # Assigning a type to the variable 'symbol_name' (line 1900)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1900, 12), 'symbol_name', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1900, 12), for_loop_var_237910))
        # SSA begins for a for statement (line 1900)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        
        # Call to is_opentype_cff_font(...): (line 1901)
        # Processing the call arguments (line 1901)
        # Getting the type of 'fontname' (line 1901)
        fontname_237912 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1901, 40), 'fontname', False)
        # Processing the call keyword arguments (line 1901)
        kwargs_237913 = {}
        # Getting the type of 'is_opentype_cff_font' (line 1901)
        is_opentype_cff_font_237911 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1901, 19), 'is_opentype_cff_font', False)
        # Calling is_opentype_cff_font(args, kwargs) (line 1901)
        is_opentype_cff_font_call_result_237914 = invoke(stypy.reporting.localization.Localization(__file__, 1901, 19), is_opentype_cff_font_237911, *[fontname_237912], **kwargs_237913)
        
        # Testing the type of an if condition (line 1901)
        if_condition_237915 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1901, 16), is_opentype_cff_font_call_result_237914)
        # Assigning a type to the variable 'if_condition_237915' (line 1901)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1901, 16), 'if_condition_237915', if_condition_237915)
        # SSA begins for if statement (line 1901)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Num to a Name (line 1902):
        
        # Assigning a Num to a Name (line 1902):
        int_237916 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1902, 31), 'int')
        # Assigning a type to the variable 'fonttype' (line 1902)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1902, 20), 'fonttype', int_237916)
        # SSA branch for the else part of an if statement (line 1901)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Name to a Name (line 1904):
        
        # Assigning a Name to a Name (line 1904):
        # Getting the type of 'global_fonttype' (line 1904)
        global_fonttype_237917 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1904, 31), 'global_fonttype')
        # Assigning a type to the variable 'fonttype' (line 1904)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1904, 20), 'fonttype', global_fonttype_237917)
        # SSA join for if statement (line 1901)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Evaluating a boolean operation
        
        # Getting the type of 'fonttype' (line 1906)
        fonttype_237918 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1906, 19), 'fonttype')
        int_237919 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1906, 31), 'int')
        # Applying the binary operator '==' (line 1906)
        result_eq_237920 = python_operator(stypy.reporting.localization.Localization(__file__, 1906, 19), '==', fonttype_237918, int_237919)
        
        
        # Getting the type of 'num' (line 1906)
        num_237921 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1906, 37), 'num')
        int_237922 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1906, 43), 'int')
        # Applying the binary operator '>' (line 1906)
        result_gt_237923 = python_operator(stypy.reporting.localization.Localization(__file__, 1906, 37), '>', num_237921, int_237922)
        
        # Applying the binary operator 'and' (line 1906)
        result_and_keyword_237924 = python_operator(stypy.reporting.localization.Localization(__file__, 1906, 19), 'and', result_eq_237920, result_gt_237923)
        
        # Testing the type of an if condition (line 1906)
        if_condition_237925 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1906, 16), result_and_keyword_237924)
        # Assigning a type to the variable 'if_condition_237925' (line 1906)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1906, 16), 'if_condition_237925', if_condition_237925)
        # SSA begins for if statement (line 1906)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to fontName(...): (line 1907)
        # Processing the call arguments (line 1907)
        # Getting the type of 'fontname' (line 1907)
        fontname_237929 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1907, 39), 'fontname', False)
        # Processing the call keyword arguments (line 1907)
        kwargs_237930 = {}
        # Getting the type of 'self' (line 1907)
        self_237926 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1907, 20), 'self', False)
        # Obtaining the member 'file' of a type (line 1907)
        file_237927 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1907, 20), self_237926, 'file')
        # Obtaining the member 'fontName' of a type (line 1907)
        fontName_237928 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1907, 20), file_237927, 'fontName')
        # Calling fontName(args, kwargs) (line 1907)
        fontName_call_result_237931 = invoke(stypy.reporting.localization.Localization(__file__, 1907, 20), fontName_237928, *[fontname_237929], **kwargs_237930)
        
        
        # Call to output(...): (line 1908)
        # Processing the call arguments (line 1908)
        # Getting the type of 'Op' (line 1908)
        Op_237935 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1908, 37), 'Op', False)
        # Obtaining the member 'gsave' of a type (line 1908)
        gsave_237936 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1908, 37), Op_237935, 'gsave')
        float_237937 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1909, 37), 'float')
        # Getting the type of 'fontsize' (line 1909)
        fontsize_237938 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1909, 45), 'fontsize', False)
        # Applying the binary operator '*' (line 1909)
        result_mul_237939 = python_operator(stypy.reporting.localization.Localization(__file__, 1909, 37), '*', float_237937, fontsize_237938)
        
        int_237940 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1909, 55), 'int')
        int_237941 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1910, 37), 'int')
        float_237942 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1910, 40), 'float')
        # Getting the type of 'fontsize' (line 1910)
        fontsize_237943 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1910, 48), 'fontsize', False)
        # Applying the binary operator '*' (line 1910)
        result_mul_237944 = python_operator(stypy.reporting.localization.Localization(__file__, 1910, 40), '*', float_237942, fontsize_237943)
        
        # Getting the type of 'ox' (line 1911)
        ox_237945 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1911, 37), 'ox', False)
        # Getting the type of 'oy' (line 1911)
        oy_237946 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1911, 41), 'oy', False)
        # Getting the type of 'Op' (line 1911)
        Op_237947 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1911, 45), 'Op', False)
        # Obtaining the member 'concat_matrix' of a type (line 1911)
        concat_matrix_237948 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1911, 45), Op_237947, 'concat_matrix')
        # Processing the call keyword arguments (line 1908)
        kwargs_237949 = {}
        # Getting the type of 'self' (line 1908)
        self_237932 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1908, 20), 'self', False)
        # Obtaining the member 'file' of a type (line 1908)
        file_237933 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1908, 20), self_237932, 'file')
        # Obtaining the member 'output' of a type (line 1908)
        output_237934 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1908, 20), file_237933, 'output')
        # Calling output(args, kwargs) (line 1908)
        output_call_result_237950 = invoke(stypy.reporting.localization.Localization(__file__, 1908, 20), output_237934, *[gsave_237936, result_mul_237939, int_237940, int_237941, result_mul_237944, ox_237945, oy_237946, concat_matrix_237948], **kwargs_237949)
        
        
        # Assigning a Call to a Name (line 1912):
        
        # Assigning a Call to a Name (line 1912):
        
        # Call to _get_xobject_symbol_name(...): (line 1912)
        # Processing the call arguments (line 1912)
        # Getting the type of 'fontname' (line 1913)
        fontname_237954 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1913, 24), 'fontname', False)
        # Getting the type of 'symbol_name' (line 1913)
        symbol_name_237955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1913, 34), 'symbol_name', False)
        # Processing the call keyword arguments (line 1912)
        kwargs_237956 = {}
        # Getting the type of 'self' (line 1912)
        self_237951 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1912, 27), 'self', False)
        # Obtaining the member 'file' of a type (line 1912)
        file_237952 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1912, 27), self_237951, 'file')
        # Obtaining the member '_get_xobject_symbol_name' of a type (line 1912)
        _get_xobject_symbol_name_237953 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1912, 27), file_237952, '_get_xobject_symbol_name')
        # Calling _get_xobject_symbol_name(args, kwargs) (line 1912)
        _get_xobject_symbol_name_call_result_237957 = invoke(stypy.reporting.localization.Localization(__file__, 1912, 27), _get_xobject_symbol_name_237953, *[fontname_237954, symbol_name_237955], **kwargs_237956)
        
        # Assigning a type to the variable 'name' (line 1912)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1912, 20), 'name', _get_xobject_symbol_name_call_result_237957)
        
        # Call to output(...): (line 1914)
        # Processing the call arguments (line 1914)
        
        # Call to Name(...): (line 1914)
        # Processing the call arguments (line 1914)
        # Getting the type of 'name' (line 1914)
        name_237962 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1914, 42), 'name', False)
        # Processing the call keyword arguments (line 1914)
        kwargs_237963 = {}
        # Getting the type of 'Name' (line 1914)
        Name_237961 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1914, 37), 'Name', False)
        # Calling Name(args, kwargs) (line 1914)
        Name_call_result_237964 = invoke(stypy.reporting.localization.Localization(__file__, 1914, 37), Name_237961, *[name_237962], **kwargs_237963)
        
        # Getting the type of 'Op' (line 1914)
        Op_237965 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1914, 49), 'Op', False)
        # Obtaining the member 'use_xobject' of a type (line 1914)
        use_xobject_237966 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1914, 49), Op_237965, 'use_xobject')
        # Processing the call keyword arguments (line 1914)
        kwargs_237967 = {}
        # Getting the type of 'self' (line 1914)
        self_237958 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1914, 20), 'self', False)
        # Obtaining the member 'file' of a type (line 1914)
        file_237959 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1914, 20), self_237958, 'file')
        # Obtaining the member 'output' of a type (line 1914)
        output_237960 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1914, 20), file_237959, 'output')
        # Calling output(args, kwargs) (line 1914)
        output_call_result_237968 = invoke(stypy.reporting.localization.Localization(__file__, 1914, 20), output_237960, *[Name_call_result_237964, use_xobject_237966], **kwargs_237967)
        
        
        # Call to output(...): (line 1915)
        # Processing the call arguments (line 1915)
        # Getting the type of 'Op' (line 1915)
        Op_237972 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1915, 37), 'Op', False)
        # Obtaining the member 'grestore' of a type (line 1915)
        grestore_237973 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1915, 37), Op_237972, 'grestore')
        # Processing the call keyword arguments (line 1915)
        kwargs_237974 = {}
        # Getting the type of 'self' (line 1915)
        self_237969 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1915, 20), 'self', False)
        # Obtaining the member 'file' of a type (line 1915)
        file_237970 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1915, 20), self_237969, 'file')
        # Obtaining the member 'output' of a type (line 1915)
        output_237971 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1915, 20), file_237970, 'output')
        # Calling output(args, kwargs) (line 1915)
        output_call_result_237975 = invoke(stypy.reporting.localization.Localization(__file__, 1915, 20), output_237971, *[grestore_237973], **kwargs_237974)
        
        # SSA join for if statement (line 1906)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 1899)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'rects' (line 1918)
        rects_237976 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1918, 37), 'rects')
        # Testing the type of a for loop iterable (line 1918)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1918, 8), rects_237976)
        # Getting the type of the for loop variable (line 1918)
        for_loop_var_237977 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1918, 8), rects_237976)
        # Assigning a type to the variable 'ox' (line 1918)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1918, 8), 'ox', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1918, 8), for_loop_var_237977))
        # Assigning a type to the variable 'oy' (line 1918)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1918, 8), 'oy', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1918, 8), for_loop_var_237977))
        # Assigning a type to the variable 'width' (line 1918)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1918, 8), 'width', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1918, 8), for_loop_var_237977))
        # Assigning a type to the variable 'height' (line 1918)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1918, 8), 'height', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1918, 8), for_loop_var_237977))
        # SSA begins for a for statement (line 1918)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to output(...): (line 1919)
        # Processing the call arguments (line 1919)
        # Getting the type of 'Op' (line 1919)
        Op_237981 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1919, 29), 'Op', False)
        # Obtaining the member 'gsave' of a type (line 1919)
        gsave_237982 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1919, 29), Op_237981, 'gsave')
        # Getting the type of 'ox' (line 1919)
        ox_237983 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1919, 39), 'ox', False)
        # Getting the type of 'oy' (line 1919)
        oy_237984 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1919, 43), 'oy', False)
        # Getting the type of 'width' (line 1919)
        width_237985 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1919, 47), 'width', False)
        # Getting the type of 'height' (line 1919)
        height_237986 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1919, 54), 'height', False)
        # Getting the type of 'Op' (line 1920)
        Op_237987 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1920, 29), 'Op', False)
        # Obtaining the member 'rectangle' of a type (line 1920)
        rectangle_237988 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1920, 29), Op_237987, 'rectangle')
        # Getting the type of 'Op' (line 1920)
        Op_237989 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1920, 43), 'Op', False)
        # Obtaining the member 'fill' of a type (line 1920)
        fill_237990 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1920, 43), Op_237989, 'fill')
        # Getting the type of 'Op' (line 1920)
        Op_237991 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1920, 52), 'Op', False)
        # Obtaining the member 'grestore' of a type (line 1920)
        grestore_237992 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1920, 52), Op_237991, 'grestore')
        # Processing the call keyword arguments (line 1919)
        kwargs_237993 = {}
        # Getting the type of 'self' (line 1919)
        self_237978 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1919, 12), 'self', False)
        # Obtaining the member 'file' of a type (line 1919)
        file_237979 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1919, 12), self_237978, 'file')
        # Obtaining the member 'output' of a type (line 1919)
        output_237980 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1919, 12), file_237979, 'output')
        # Calling output(args, kwargs) (line 1919)
        output_call_result_237994 = invoke(stypy.reporting.localization.Localization(__file__, 1919, 12), output_237980, *[gsave_237982, ox_237983, oy_237984, width_237985, height_237986, rectangle_237988, fill_237990, grestore_237992], **kwargs_237993)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to output(...): (line 1923)
        # Processing the call arguments (line 1923)
        # Getting the type of 'Op' (line 1923)
        Op_237998 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1923, 25), 'Op', False)
        # Obtaining the member 'grestore' of a type (line 1923)
        grestore_237999 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1923, 25), Op_237998, 'grestore')
        # Processing the call keyword arguments (line 1923)
        kwargs_238000 = {}
        # Getting the type of 'self' (line 1923)
        self_237995 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1923, 8), 'self', False)
        # Obtaining the member 'file' of a type (line 1923)
        file_237996 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1923, 8), self_237995, 'file')
        # Obtaining the member 'output' of a type (line 1923)
        output_237997 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1923, 8), file_237996, 'output')
        # Calling output(args, kwargs) (line 1923)
        output_call_result_238001 = invoke(stypy.reporting.localization.Localization(__file__, 1923, 8), output_237997, *[grestore_237999], **kwargs_238000)
        
        
        # ################# End of 'draw_mathtext(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'draw_mathtext' in the type store
        # Getting the type of 'stypy_return_type' (line 1859)
        stypy_return_type_238002 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1859, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_238002)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'draw_mathtext'
        return stypy_return_type_238002


    @norecursion
    def draw_tex(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        unicode_238003 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1925, 56), 'unicode', u'TeX!')
        # Getting the type of 'None' (line 1925)
        None_238004 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1925, 70), 'None')
        defaults = [unicode_238003, None_238004]
        # Create a new context for function 'draw_tex'
        module_type_store = module_type_store.open_function_context('draw_tex', 1925, 4, False)
        # Assigning a type to the variable 'self' (line 1926)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1926, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererPdf.draw_tex.__dict__.__setitem__('stypy_localization', localization)
        RendererPdf.draw_tex.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererPdf.draw_tex.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererPdf.draw_tex.__dict__.__setitem__('stypy_function_name', 'RendererPdf.draw_tex')
        RendererPdf.draw_tex.__dict__.__setitem__('stypy_param_names_list', ['gc', 'x', 'y', 's', 'prop', 'angle', 'ismath', 'mtext'])
        RendererPdf.draw_tex.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererPdf.draw_tex.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererPdf.draw_tex.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererPdf.draw_tex.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererPdf.draw_tex.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererPdf.draw_tex.__dict__.__setitem__('stypy_declared_arg_number', 9)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererPdf.draw_tex', ['gc', 'x', 'y', 's', 'prop', 'angle', 'ismath', 'mtext'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'draw_tex', localization, ['gc', 'x', 'y', 's', 'prop', 'angle', 'ismath', 'mtext'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'draw_tex(...)' code ##################

        
        # Assigning a Call to a Name (line 1926):
        
        # Assigning a Call to a Name (line 1926):
        
        # Call to get_texmanager(...): (line 1926)
        # Processing the call keyword arguments (line 1926)
        kwargs_238007 = {}
        # Getting the type of 'self' (line 1926)
        self_238005 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1926, 21), 'self', False)
        # Obtaining the member 'get_texmanager' of a type (line 1926)
        get_texmanager_238006 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1926, 21), self_238005, 'get_texmanager')
        # Calling get_texmanager(args, kwargs) (line 1926)
        get_texmanager_call_result_238008 = invoke(stypy.reporting.localization.Localization(__file__, 1926, 21), get_texmanager_238006, *[], **kwargs_238007)
        
        # Assigning a type to the variable 'texmanager' (line 1926)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1926, 8), 'texmanager', get_texmanager_call_result_238008)
        
        # Assigning a Call to a Name (line 1927):
        
        # Assigning a Call to a Name (line 1927):
        
        # Call to get_size_in_points(...): (line 1927)
        # Processing the call keyword arguments (line 1927)
        kwargs_238011 = {}
        # Getting the type of 'prop' (line 1927)
        prop_238009 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1927, 19), 'prop', False)
        # Obtaining the member 'get_size_in_points' of a type (line 1927)
        get_size_in_points_238010 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1927, 19), prop_238009, 'get_size_in_points')
        # Calling get_size_in_points(args, kwargs) (line 1927)
        get_size_in_points_call_result_238012 = invoke(stypy.reporting.localization.Localization(__file__, 1927, 19), get_size_in_points_238010, *[], **kwargs_238011)
        
        # Assigning a type to the variable 'fontsize' (line 1927)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1927, 8), 'fontsize', get_size_in_points_call_result_238012)
        
        # Assigning a Call to a Name (line 1928):
        
        # Assigning a Call to a Name (line 1928):
        
        # Call to make_dvi(...): (line 1928)
        # Processing the call arguments (line 1928)
        # Getting the type of 's' (line 1928)
        s_238015 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1928, 38), 's', False)
        # Getting the type of 'fontsize' (line 1928)
        fontsize_238016 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1928, 41), 'fontsize', False)
        # Processing the call keyword arguments (line 1928)
        kwargs_238017 = {}
        # Getting the type of 'texmanager' (line 1928)
        texmanager_238013 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1928, 18), 'texmanager', False)
        # Obtaining the member 'make_dvi' of a type (line 1928)
        make_dvi_238014 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1928, 18), texmanager_238013, 'make_dvi')
        # Calling make_dvi(args, kwargs) (line 1928)
        make_dvi_call_result_238018 = invoke(stypy.reporting.localization.Localization(__file__, 1928, 18), make_dvi_238014, *[s_238015, fontsize_238016], **kwargs_238017)
        
        # Assigning a type to the variable 'dvifile' (line 1928)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1928, 8), 'dvifile', make_dvi_call_result_238018)
        
        # Call to Dvi(...): (line 1929)
        # Processing the call arguments (line 1929)
        # Getting the type of 'dvifile' (line 1929)
        dvifile_238021 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1929, 25), 'dvifile', False)
        int_238022 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1929, 34), 'int')
        # Processing the call keyword arguments (line 1929)
        kwargs_238023 = {}
        # Getting the type of 'dviread' (line 1929)
        dviread_238019 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1929, 13), 'dviread', False)
        # Obtaining the member 'Dvi' of a type (line 1929)
        Dvi_238020 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1929, 13), dviread_238019, 'Dvi')
        # Calling Dvi(args, kwargs) (line 1929)
        Dvi_call_result_238024 = invoke(stypy.reporting.localization.Localization(__file__, 1929, 13), Dvi_238020, *[dvifile_238021, int_238022], **kwargs_238023)
        
        with_238025 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 1929, 13), Dvi_call_result_238024, 'with parameter', '__enter__', '__exit__')

        if with_238025:
            # Calling the __enter__ method to initiate a with section
            # Obtaining the member '__enter__' of a type (line 1929)
            enter___238026 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1929, 13), Dvi_call_result_238024, '__enter__')
            with_enter_238027 = invoke(stypy.reporting.localization.Localization(__file__, 1929, 13), enter___238026)
            # Assigning a type to the variable 'dvi' (line 1929)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1929, 13), 'dvi', with_enter_238027)
            
            # Assigning a Call to a Name (line 1930):
            
            # Assigning a Call to a Name (line 1930):
            
            # Call to next(...): (line 1930)
            # Processing the call arguments (line 1930)
            
            # Call to iter(...): (line 1930)
            # Processing the call arguments (line 1930)
            # Getting the type of 'dvi' (line 1930)
            dvi_238030 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1930, 29), 'dvi', False)
            # Processing the call keyword arguments (line 1930)
            kwargs_238031 = {}
            # Getting the type of 'iter' (line 1930)
            iter_238029 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1930, 24), 'iter', False)
            # Calling iter(args, kwargs) (line 1930)
            iter_call_result_238032 = invoke(stypy.reporting.localization.Localization(__file__, 1930, 24), iter_238029, *[dvi_238030], **kwargs_238031)
            
            # Processing the call keyword arguments (line 1930)
            kwargs_238033 = {}
            # Getting the type of 'next' (line 1930)
            next_238028 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1930, 19), 'next', False)
            # Calling next(args, kwargs) (line 1930)
            next_call_result_238034 = invoke(stypy.reporting.localization.Localization(__file__, 1930, 19), next_238028, *[iter_call_result_238032], **kwargs_238033)
            
            # Assigning a type to the variable 'page' (line 1930)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1930, 12), 'page', next_call_result_238034)
            # Calling the __exit__ method to finish a with section
            # Obtaining the member '__exit__' of a type (line 1929)
            exit___238035 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1929, 13), Dvi_call_result_238024, '__exit__')
            with_exit_238036 = invoke(stypy.reporting.localization.Localization(__file__, 1929, 13), exit___238035, None, None, None)

        
        # Assigning a Tuple to a Tuple (line 1941):
        
        # Assigning a Name to a Name (line 1941):
        # Getting the type of 'None' (line 1941)
        None_238037 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1941, 23), 'None')
        # Assigning a type to the variable 'tuple_assignment_231714' (line 1941)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1941, 8), 'tuple_assignment_231714', None_238037)
        
        # Assigning a List to a Name (line 1941):
        
        # Obtaining an instance of the builtin type 'list' (line 1941)
        list_238038 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1941, 29), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1941)
        
        # Assigning a type to the variable 'tuple_assignment_231715' (line 1941)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1941, 8), 'tuple_assignment_231715', list_238038)
        
        # Assigning a Name to a Name (line 1941):
        # Getting the type of 'tuple_assignment_231714' (line 1941)
        tuple_assignment_231714_238039 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1941, 8), 'tuple_assignment_231714')
        # Assigning a type to the variable 'oldfont' (line 1941)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1941, 8), 'oldfont', tuple_assignment_231714_238039)
        
        # Assigning a Name to a Name (line 1941):
        # Getting the type of 'tuple_assignment_231715' (line 1941)
        tuple_assignment_231715_238040 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1941, 8), 'tuple_assignment_231715')
        # Assigning a type to the variable 'seq' (line 1941)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1941, 17), 'seq', tuple_assignment_231715_238040)
        
        # Getting the type of 'page' (line 1942)
        page_238041 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1942, 45), 'page')
        # Obtaining the member 'text' of a type (line 1942)
        text_238042 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1942, 45), page_238041, 'text')
        # Testing the type of a for loop iterable (line 1942)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1942, 8), text_238042)
        # Getting the type of the for loop variable (line 1942)
        for_loop_var_238043 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1942, 8), text_238042)
        # Assigning a type to the variable 'x1' (line 1942)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1942, 8), 'x1', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1942, 8), for_loop_var_238043))
        # Assigning a type to the variable 'y1' (line 1942)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1942, 8), 'y1', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1942, 8), for_loop_var_238043))
        # Assigning a type to the variable 'dvifont' (line 1942)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1942, 8), 'dvifont', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1942, 8), for_loop_var_238043))
        # Assigning a type to the variable 'glyph' (line 1942)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1942, 8), 'glyph', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1942, 8), for_loop_var_238043))
        # Assigning a type to the variable 'width' (line 1942)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1942, 8), 'width', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1942, 8), for_loop_var_238043))
        # SSA begins for a for statement (line 1942)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        
        # Getting the type of 'dvifont' (line 1943)
        dvifont_238044 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1943, 15), 'dvifont')
        # Getting the type of 'oldfont' (line 1943)
        oldfont_238045 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1943, 26), 'oldfont')
        # Applying the binary operator '!=' (line 1943)
        result_ne_238046 = python_operator(stypy.reporting.localization.Localization(__file__, 1943, 15), '!=', dvifont_238044, oldfont_238045)
        
        # Testing the type of an if condition (line 1943)
        if_condition_238047 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1943, 12), result_ne_238046)
        # Assigning a type to the variable 'if_condition_238047' (line 1943)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1943, 12), 'if_condition_238047', if_condition_238047)
        # SSA begins for if statement (line 1943)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 1944):
        
        # Assigning a Call to a Name (line 1944):
        
        # Call to dviFontName(...): (line 1944)
        # Processing the call arguments (line 1944)
        # Getting the type of 'dvifont' (line 1944)
        dvifont_238051 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1944, 48), 'dvifont', False)
        # Processing the call keyword arguments (line 1944)
        kwargs_238052 = {}
        # Getting the type of 'self' (line 1944)
        self_238048 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1944, 26), 'self', False)
        # Obtaining the member 'file' of a type (line 1944)
        file_238049 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1944, 26), self_238048, 'file')
        # Obtaining the member 'dviFontName' of a type (line 1944)
        dviFontName_238050 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1944, 26), file_238049, 'dviFontName')
        # Calling dviFontName(args, kwargs) (line 1944)
        dviFontName_call_result_238053 = invoke(stypy.reporting.localization.Localization(__file__, 1944, 26), dviFontName_238050, *[dvifont_238051], **kwargs_238052)
        
        # Assigning a type to the variable 'pdfname' (line 1944)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1944, 16), 'pdfname', dviFontName_call_result_238053)
        
        # Getting the type of 'seq' (line 1945)
        seq_238054 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1945, 16), 'seq')
        
        # Obtaining an instance of the builtin type 'list' (line 1945)
        list_238055 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1945, 23), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1945)
        # Adding element type (line 1945)
        
        # Obtaining an instance of the builtin type 'list' (line 1945)
        list_238056 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1945, 24), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1945)
        # Adding element type (line 1945)
        unicode_238057 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1945, 25), 'unicode', u'font')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1945, 24), list_238056, unicode_238057)
        # Adding element type (line 1945)
        # Getting the type of 'pdfname' (line 1945)
        pdfname_238058 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1945, 33), 'pdfname')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1945, 24), list_238056, pdfname_238058)
        # Adding element type (line 1945)
        # Getting the type of 'dvifont' (line 1945)
        dvifont_238059 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1945, 42), 'dvifont')
        # Obtaining the member 'size' of a type (line 1945)
        size_238060 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1945, 42), dvifont_238059, 'size')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1945, 24), list_238056, size_238060)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1945, 23), list_238055, list_238056)
        
        # Applying the binary operator '+=' (line 1945)
        result_iadd_238061 = python_operator(stypy.reporting.localization.Localization(__file__, 1945, 16), '+=', seq_238054, list_238055)
        # Assigning a type to the variable 'seq' (line 1945)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1945, 16), 'seq', result_iadd_238061)
        
        
        # Assigning a Name to a Name (line 1946):
        
        # Assigning a Name to a Name (line 1946):
        # Getting the type of 'dvifont' (line 1946)
        dvifont_238062 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1946, 26), 'dvifont')
        # Assigning a type to the variable 'oldfont' (line 1946)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1946, 16), 'oldfont', dvifont_238062)
        # SSA join for if statement (line 1943)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'seq' (line 1949)
        seq_238063 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1949, 12), 'seq')
        
        # Obtaining an instance of the builtin type 'list' (line 1949)
        list_238064 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1949, 19), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1949)
        # Adding element type (line 1949)
        
        # Obtaining an instance of the builtin type 'list' (line 1949)
        list_238065 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1949, 20), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1949)
        # Adding element type (line 1949)
        unicode_238066 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1949, 21), 'unicode', u'text')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1949, 20), list_238065, unicode_238066)
        # Adding element type (line 1949)
        # Getting the type of 'x1' (line 1949)
        x1_238067 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1949, 29), 'x1')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1949, 20), list_238065, x1_238067)
        # Adding element type (line 1949)
        # Getting the type of 'y1' (line 1949)
        y1_238068 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1949, 33), 'y1')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1949, 20), list_238065, y1_238068)
        # Adding element type (line 1949)
        
        # Obtaining an instance of the builtin type 'list' (line 1950)
        list_238069 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1950, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1950)
        # Adding element type (line 1950)
        
        # Call to encode(...): (line 1950)
        # Processing the call arguments (line 1950)
        unicode_238076 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1950, 47), 'unicode', u'latin-1')
        # Processing the call keyword arguments (line 1950)
        kwargs_238077 = {}
        
        # Call to unichr(...): (line 1950)
        # Processing the call arguments (line 1950)
        # Getting the type of 'glyph' (line 1950)
        glyph_238072 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1950, 33), 'glyph', False)
        # Processing the call keyword arguments (line 1950)
        kwargs_238073 = {}
        # Getting the type of 'six' (line 1950)
        six_238070 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1950, 22), 'six', False)
        # Obtaining the member 'unichr' of a type (line 1950)
        unichr_238071 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1950, 22), six_238070, 'unichr')
        # Calling unichr(args, kwargs) (line 1950)
        unichr_call_result_238074 = invoke(stypy.reporting.localization.Localization(__file__, 1950, 22), unichr_238071, *[glyph_238072], **kwargs_238073)
        
        # Obtaining the member 'encode' of a type (line 1950)
        encode_238075 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1950, 22), unichr_call_result_238074, 'encode')
        # Calling encode(args, kwargs) (line 1950)
        encode_call_result_238078 = invoke(stypy.reporting.localization.Localization(__file__, 1950, 22), encode_238075, *[unicode_238076], **kwargs_238077)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1950, 21), list_238069, encode_call_result_238078)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1949, 20), list_238065, list_238069)
        # Adding element type (line 1949)
        # Getting the type of 'x1' (line 1950)
        x1_238079 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1950, 60), 'x1')
        # Getting the type of 'width' (line 1950)
        width_238080 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1950, 63), 'width')
        # Applying the binary operator '+' (line 1950)
        result_add_238081 = python_operator(stypy.reporting.localization.Localization(__file__, 1950, 60), '+', x1_238079, width_238080)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1949, 20), list_238065, result_add_238081)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1949, 19), list_238064, list_238065)
        
        # Applying the binary operator '+=' (line 1949)
        result_iadd_238082 = python_operator(stypy.reporting.localization.Localization(__file__, 1949, 12), '+=', seq_238063, list_238064)
        # Assigning a type to the variable 'seq' (line 1949)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1949, 12), 'seq', result_iadd_238082)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Tuple to a Tuple (line 1955):
        
        # Assigning a Num to a Name (line 1955):
        int_238083 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1955, 28), 'int')
        # Assigning a type to the variable 'tuple_assignment_231716' (line 1955)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1955, 8), 'tuple_assignment_231716', int_238083)
        
        # Assigning a Num to a Name (line 1955):
        int_238084 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1955, 31), 'int')
        # Assigning a type to the variable 'tuple_assignment_231717' (line 1955)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1955, 8), 'tuple_assignment_231717', int_238084)
        
        # Assigning a Name to a Name (line 1955):
        # Getting the type of 'None' (line 1955)
        None_238085 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1955, 34), 'None')
        # Assigning a type to the variable 'tuple_assignment_231718' (line 1955)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1955, 8), 'tuple_assignment_231718', None_238085)
        
        # Assigning a Name to a Name (line 1955):
        # Getting the type of 'tuple_assignment_231716' (line 1955)
        tuple_assignment_231716_238086 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1955, 8), 'tuple_assignment_231716')
        # Assigning a type to the variable 'i' (line 1955)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1955, 8), 'i', tuple_assignment_231716_238086)
        
        # Assigning a Name to a Name (line 1955):
        # Getting the type of 'tuple_assignment_231717' (line 1955)
        tuple_assignment_231717_238087 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1955, 8), 'tuple_assignment_231717')
        # Assigning a type to the variable 'curx' (line 1955)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1955, 11), 'curx', tuple_assignment_231717_238087)
        
        # Assigning a Name to a Name (line 1955):
        # Getting the type of 'tuple_assignment_231718' (line 1955)
        tuple_assignment_231718_238088 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1955, 8), 'tuple_assignment_231718')
        # Assigning a type to the variable 'fontsize' (line 1955)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1955, 17), 'fontsize', tuple_assignment_231718_238088)
        
        
        # Getting the type of 'i' (line 1956)
        i_238089 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1956, 14), 'i')
        
        # Call to len(...): (line 1956)
        # Processing the call arguments (line 1956)
        # Getting the type of 'seq' (line 1956)
        seq_238091 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1956, 22), 'seq', False)
        # Processing the call keyword arguments (line 1956)
        kwargs_238092 = {}
        # Getting the type of 'len' (line 1956)
        len_238090 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1956, 18), 'len', False)
        # Calling len(args, kwargs) (line 1956)
        len_call_result_238093 = invoke(stypy.reporting.localization.Localization(__file__, 1956, 18), len_238090, *[seq_238091], **kwargs_238092)
        
        int_238094 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1956, 27), 'int')
        # Applying the binary operator '-' (line 1956)
        result_sub_238095 = python_operator(stypy.reporting.localization.Localization(__file__, 1956, 18), '-', len_call_result_238093, int_238094)
        
        # Applying the binary operator '<' (line 1956)
        result_lt_238096 = python_operator(stypy.reporting.localization.Localization(__file__, 1956, 14), '<', i_238089, result_sub_238095)
        
        # Testing the type of an if condition (line 1956)
        is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1956, 8), result_lt_238096)
        # SSA begins for while statement (line 1956)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'while loop')
        
        # Assigning a Subscript to a Tuple (line 1957):
        
        # Assigning a Subscript to a Name (line 1957):
        
        # Obtaining the type of the subscript
        int_238097 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1957, 12), 'int')
        
        # Obtaining the type of the subscript
        # Getting the type of 'i' (line 1957)
        i_238098 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1957, 27), 'i')
        # Getting the type of 'i' (line 1957)
        i_238099 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1957, 29), 'i')
        int_238100 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1957, 31), 'int')
        # Applying the binary operator '+' (line 1957)
        result_add_238101 = python_operator(stypy.reporting.localization.Localization(__file__, 1957, 29), '+', i_238099, int_238100)
        
        slice_238102 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1957, 23), i_238098, result_add_238101, None)
        # Getting the type of 'seq' (line 1957)
        seq_238103 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1957, 23), 'seq')
        # Obtaining the member '__getitem__' of a type (line 1957)
        getitem___238104 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1957, 23), seq_238103, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1957)
        subscript_call_result_238105 = invoke(stypy.reporting.localization.Localization(__file__, 1957, 23), getitem___238104, slice_238102)
        
        # Obtaining the member '__getitem__' of a type (line 1957)
        getitem___238106 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1957, 12), subscript_call_result_238105, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1957)
        subscript_call_result_238107 = invoke(stypy.reporting.localization.Localization(__file__, 1957, 12), getitem___238106, int_238097)
        
        # Assigning a type to the variable 'tuple_var_assignment_231719' (line 1957)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1957, 12), 'tuple_var_assignment_231719', subscript_call_result_238107)
        
        # Assigning a Subscript to a Name (line 1957):
        
        # Obtaining the type of the subscript
        int_238108 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1957, 12), 'int')
        
        # Obtaining the type of the subscript
        # Getting the type of 'i' (line 1957)
        i_238109 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1957, 27), 'i')
        # Getting the type of 'i' (line 1957)
        i_238110 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1957, 29), 'i')
        int_238111 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1957, 31), 'int')
        # Applying the binary operator '+' (line 1957)
        result_add_238112 = python_operator(stypy.reporting.localization.Localization(__file__, 1957, 29), '+', i_238110, int_238111)
        
        slice_238113 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1957, 23), i_238109, result_add_238112, None)
        # Getting the type of 'seq' (line 1957)
        seq_238114 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1957, 23), 'seq')
        # Obtaining the member '__getitem__' of a type (line 1957)
        getitem___238115 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1957, 23), seq_238114, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1957)
        subscript_call_result_238116 = invoke(stypy.reporting.localization.Localization(__file__, 1957, 23), getitem___238115, slice_238113)
        
        # Obtaining the member '__getitem__' of a type (line 1957)
        getitem___238117 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1957, 12), subscript_call_result_238116, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1957)
        subscript_call_result_238118 = invoke(stypy.reporting.localization.Localization(__file__, 1957, 12), getitem___238117, int_238108)
        
        # Assigning a type to the variable 'tuple_var_assignment_231720' (line 1957)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1957, 12), 'tuple_var_assignment_231720', subscript_call_result_238118)
        
        # Assigning a Name to a Name (line 1957):
        # Getting the type of 'tuple_var_assignment_231719' (line 1957)
        tuple_var_assignment_231719_238119 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1957, 12), 'tuple_var_assignment_231719')
        # Assigning a type to the variable 'elt' (line 1957)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1957, 12), 'elt', tuple_var_assignment_231719_238119)
        
        # Assigning a Name to a Name (line 1957):
        # Getting the type of 'tuple_var_assignment_231720' (line 1957)
        tuple_var_assignment_231720_238120 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1957, 12), 'tuple_var_assignment_231720')
        # Assigning a type to the variable 'nxt' (line 1957)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1957, 17), 'nxt', tuple_var_assignment_231720_238120)
        
        
        
        # Obtaining the type of the subscript
        int_238121 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1958, 19), 'int')
        # Getting the type of 'elt' (line 1958)
        elt_238122 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1958, 15), 'elt')
        # Obtaining the member '__getitem__' of a type (line 1958)
        getitem___238123 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1958, 15), elt_238122, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1958)
        subscript_call_result_238124 = invoke(stypy.reporting.localization.Localization(__file__, 1958, 15), getitem___238123, int_238121)
        
        unicode_238125 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1958, 25), 'unicode', u'font')
        # Applying the binary operator '==' (line 1958)
        result_eq_238126 = python_operator(stypy.reporting.localization.Localization(__file__, 1958, 15), '==', subscript_call_result_238124, unicode_238125)
        
        # Testing the type of an if condition (line 1958)
        if_condition_238127 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1958, 12), result_eq_238126)
        # Assigning a type to the variable 'if_condition_238127' (line 1958)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1958, 12), 'if_condition_238127', if_condition_238127)
        # SSA begins for if statement (line 1958)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Subscript to a Name (line 1959):
        
        # Assigning a Subscript to a Name (line 1959):
        
        # Obtaining the type of the subscript
        int_238128 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1959, 31), 'int')
        # Getting the type of 'elt' (line 1959)
        elt_238129 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1959, 27), 'elt')
        # Obtaining the member '__getitem__' of a type (line 1959)
        getitem___238130 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1959, 27), elt_238129, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1959)
        subscript_call_result_238131 = invoke(stypy.reporting.localization.Localization(__file__, 1959, 27), getitem___238130, int_238128)
        
        # Assigning a type to the variable 'fontsize' (line 1959)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1959, 16), 'fontsize', subscript_call_result_238131)
        # SSA branch for the else part of an if statement (line 1958)
        module_type_store.open_ssa_branch('else')
        
        
        # Evaluating a boolean operation
        
        
        # Obtaining the type of the subscript
        int_238132 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1960, 21), 'int')
        # Getting the type of 'elt' (line 1960)
        elt_238133 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1960, 17), 'elt')
        # Obtaining the member '__getitem__' of a type (line 1960)
        getitem___238134 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1960, 17), elt_238133, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1960)
        subscript_call_result_238135 = invoke(stypy.reporting.localization.Localization(__file__, 1960, 17), getitem___238134, int_238132)
        
        
        # Obtaining the type of the subscript
        int_238136 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1960, 31), 'int')
        # Getting the type of 'nxt' (line 1960)
        nxt_238137 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1960, 27), 'nxt')
        # Obtaining the member '__getitem__' of a type (line 1960)
        getitem___238138 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1960, 27), nxt_238137, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1960)
        subscript_call_result_238139 = invoke(stypy.reporting.localization.Localization(__file__, 1960, 27), getitem___238138, int_238136)
        
        # Applying the binary operator '==' (line 1960)
        result_eq_238140 = python_operator(stypy.reporting.localization.Localization(__file__, 1960, 17), '==', subscript_call_result_238135, subscript_call_result_238139)
        unicode_238141 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1960, 37), 'unicode', u'text')
        # Applying the binary operator '==' (line 1960)
        result_eq_238142 = python_operator(stypy.reporting.localization.Localization(__file__, 1960, 17), '==', subscript_call_result_238139, unicode_238141)
        # Applying the binary operator '&' (line 1960)
        result_and__238143 = python_operator(stypy.reporting.localization.Localization(__file__, 1960, 17), '&', result_eq_238140, result_eq_238142)
        
        
        
        # Obtaining the type of the subscript
        int_238144 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1960, 52), 'int')
        # Getting the type of 'elt' (line 1960)
        elt_238145 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1960, 48), 'elt')
        # Obtaining the member '__getitem__' of a type (line 1960)
        getitem___238146 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1960, 48), elt_238145, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1960)
        subscript_call_result_238147 = invoke(stypy.reporting.localization.Localization(__file__, 1960, 48), getitem___238146, int_238144)
        
        
        # Obtaining the type of the subscript
        int_238148 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1960, 62), 'int')
        # Getting the type of 'nxt' (line 1960)
        nxt_238149 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1960, 58), 'nxt')
        # Obtaining the member '__getitem__' of a type (line 1960)
        getitem___238150 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1960, 58), nxt_238149, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1960)
        subscript_call_result_238151 = invoke(stypy.reporting.localization.Localization(__file__, 1960, 58), getitem___238150, int_238148)
        
        # Applying the binary operator '==' (line 1960)
        result_eq_238152 = python_operator(stypy.reporting.localization.Localization(__file__, 1960, 48), '==', subscript_call_result_238147, subscript_call_result_238151)
        
        # Applying the binary operator 'and' (line 1960)
        result_and_keyword_238153 = python_operator(stypy.reporting.localization.Localization(__file__, 1960, 17), 'and', result_and__238143, result_eq_238152)
        
        # Testing the type of an if condition (line 1960)
        if_condition_238154 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1960, 17), result_and_keyword_238153)
        # Assigning a type to the variable 'if_condition_238154' (line 1960)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1960, 17), 'if_condition_238154', if_condition_238154)
        # SSA begins for if statement (line 1960)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a BinOp to a Name (line 1961):
        
        # Assigning a BinOp to a Name (line 1961):
        
        # Obtaining the type of the subscript
        int_238155 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1961, 29), 'int')
        # Getting the type of 'elt' (line 1961)
        elt_238156 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1961, 25), 'elt')
        # Obtaining the member '__getitem__' of a type (line 1961)
        getitem___238157 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1961, 25), elt_238156, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1961)
        subscript_call_result_238158 = invoke(stypy.reporting.localization.Localization(__file__, 1961, 25), getitem___238157, int_238155)
        
        
        # Obtaining the type of the subscript
        int_238159 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1961, 38), 'int')
        # Getting the type of 'nxt' (line 1961)
        nxt_238160 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1961, 34), 'nxt')
        # Obtaining the member '__getitem__' of a type (line 1961)
        getitem___238161 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1961, 34), nxt_238160, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1961)
        subscript_call_result_238162 = invoke(stypy.reporting.localization.Localization(__file__, 1961, 34), getitem___238161, int_238159)
        
        # Applying the binary operator '-' (line 1961)
        result_sub_238163 = python_operator(stypy.reporting.localization.Localization(__file__, 1961, 25), '-', subscript_call_result_238158, subscript_call_result_238162)
        
        # Assigning a type to the variable 'offset' (line 1961)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1961, 16), 'offset', result_sub_238163)
        
        
        
        # Call to abs(...): (line 1962)
        # Processing the call arguments (line 1962)
        # Getting the type of 'offset' (line 1962)
        offset_238165 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1962, 23), 'offset', False)
        # Processing the call keyword arguments (line 1962)
        kwargs_238166 = {}
        # Getting the type of 'abs' (line 1962)
        abs_238164 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1962, 19), 'abs', False)
        # Calling abs(args, kwargs) (line 1962)
        abs_call_result_238167 = invoke(stypy.reporting.localization.Localization(__file__, 1962, 19), abs_238164, *[offset_238165], **kwargs_238166)
        
        float_238168 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1962, 33), 'float')
        # Applying the binary operator '<' (line 1962)
        result_lt_238169 = python_operator(stypy.reporting.localization.Localization(__file__, 1962, 19), '<', abs_call_result_238167, float_238168)
        
        # Testing the type of an if condition (line 1962)
        if_condition_238170 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1962, 16), result_lt_238169)
        # Assigning a type to the variable 'if_condition_238170' (line 1962)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1962, 16), 'if_condition_238170', if_condition_238170)
        # SSA begins for if statement (line 1962)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        
        # Obtaining the type of the subscript
        int_238171 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1963, 24), 'int')
        # Getting the type of 'elt' (line 1963)
        elt_238172 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1963, 20), 'elt')
        # Obtaining the member '__getitem__' of a type (line 1963)
        getitem___238173 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1963, 20), elt_238172, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1963)
        subscript_call_result_238174 = invoke(stypy.reporting.localization.Localization(__file__, 1963, 20), getitem___238173, int_238171)
        
        
        # Obtaining the type of the subscript
        int_238175 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1963, 27), 'int')
        
        # Obtaining the type of the subscript
        int_238176 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1963, 24), 'int')
        # Getting the type of 'elt' (line 1963)
        elt_238177 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1963, 20), 'elt')
        # Obtaining the member '__getitem__' of a type (line 1963)
        getitem___238178 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1963, 20), elt_238177, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1963)
        subscript_call_result_238179 = invoke(stypy.reporting.localization.Localization(__file__, 1963, 20), getitem___238178, int_238176)
        
        # Obtaining the member '__getitem__' of a type (line 1963)
        getitem___238180 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1963, 20), subscript_call_result_238179, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1963)
        subscript_call_result_238181 = invoke(stypy.reporting.localization.Localization(__file__, 1963, 20), getitem___238180, int_238175)
        
        
        # Obtaining the type of the subscript
        int_238182 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1963, 41), 'int')
        
        # Obtaining the type of the subscript
        int_238183 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1963, 38), 'int')
        # Getting the type of 'nxt' (line 1963)
        nxt_238184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1963, 34), 'nxt')
        # Obtaining the member '__getitem__' of a type (line 1963)
        getitem___238185 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1963, 34), nxt_238184, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1963)
        subscript_call_result_238186 = invoke(stypy.reporting.localization.Localization(__file__, 1963, 34), getitem___238185, int_238183)
        
        # Obtaining the member '__getitem__' of a type (line 1963)
        getitem___238187 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1963, 34), subscript_call_result_238186, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1963)
        subscript_call_result_238188 = invoke(stypy.reporting.localization.Localization(__file__, 1963, 34), getitem___238187, int_238182)
        
        # Applying the binary operator '+=' (line 1963)
        result_iadd_238189 = python_operator(stypy.reporting.localization.Localization(__file__, 1963, 20), '+=', subscript_call_result_238181, subscript_call_result_238188)
        
        # Obtaining the type of the subscript
        int_238190 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1963, 24), 'int')
        # Getting the type of 'elt' (line 1963)
        elt_238191 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1963, 20), 'elt')
        # Obtaining the member '__getitem__' of a type (line 1963)
        getitem___238192 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1963, 20), elt_238191, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1963)
        subscript_call_result_238193 = invoke(stypy.reporting.localization.Localization(__file__, 1963, 20), getitem___238192, int_238190)
        
        int_238194 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1963, 27), 'int')
        # Storing an element on a container (line 1963)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1963, 20), subscript_call_result_238193, (int_238194, result_iadd_238189))
        
        
        # Getting the type of 'elt' (line 1964)
        elt_238195 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1964, 20), 'elt')
        
        # Obtaining the type of the subscript
        int_238196 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1964, 24), 'int')
        # Getting the type of 'elt' (line 1964)
        elt_238197 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1964, 20), 'elt')
        # Obtaining the member '__getitem__' of a type (line 1964)
        getitem___238198 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1964, 20), elt_238197, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1964)
        subscript_call_result_238199 = invoke(stypy.reporting.localization.Localization(__file__, 1964, 20), getitem___238198, int_238196)
        
        
        # Obtaining the type of the subscript
        int_238200 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1964, 34), 'int')
        # Getting the type of 'nxt' (line 1964)
        nxt_238201 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1964, 30), 'nxt')
        # Obtaining the member '__getitem__' of a type (line 1964)
        getitem___238202 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1964, 30), nxt_238201, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1964)
        subscript_call_result_238203 = invoke(stypy.reporting.localization.Localization(__file__, 1964, 30), getitem___238202, int_238200)
        
        
        # Obtaining the type of the subscript
        int_238204 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1964, 41), 'int')
        # Getting the type of 'nxt' (line 1964)
        nxt_238205 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1964, 37), 'nxt')
        # Obtaining the member '__getitem__' of a type (line 1964)
        getitem___238206 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1964, 37), nxt_238205, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1964)
        subscript_call_result_238207 = invoke(stypy.reporting.localization.Localization(__file__, 1964, 37), getitem___238206, int_238204)
        
        # Applying the binary operator '-' (line 1964)
        result_sub_238208 = python_operator(stypy.reporting.localization.Localization(__file__, 1964, 30), '-', subscript_call_result_238203, subscript_call_result_238207)
        
        # Applying the binary operator '+=' (line 1964)
        result_iadd_238209 = python_operator(stypy.reporting.localization.Localization(__file__, 1964, 20), '+=', subscript_call_result_238199, result_sub_238208)
        # Getting the type of 'elt' (line 1964)
        elt_238210 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1964, 20), 'elt')
        int_238211 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1964, 24), 'int')
        # Storing an element on a container (line 1964)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1964, 20), elt_238210, (int_238211, result_iadd_238209))
        
        # SSA branch for the else part of an if statement (line 1962)
        module_type_store.open_ssa_branch('else')
        
        # Getting the type of 'elt' (line 1966)
        elt_238212 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1966, 20), 'elt')
        
        # Obtaining the type of the subscript
        int_238213 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1966, 24), 'int')
        # Getting the type of 'elt' (line 1966)
        elt_238214 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1966, 20), 'elt')
        # Obtaining the member '__getitem__' of a type (line 1966)
        getitem___238215 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1966, 20), elt_238214, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1966)
        subscript_call_result_238216 = invoke(stypy.reporting.localization.Localization(__file__, 1966, 20), getitem___238215, int_238213)
        
        
        # Obtaining an instance of the builtin type 'list' (line 1966)
        list_238217 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1966, 30), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1966)
        # Adding element type (line 1966)
        # Getting the type of 'offset' (line 1966)
        offset_238218 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1966, 31), 'offset')
        float_238219 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1966, 38), 'float')
        # Applying the binary operator '*' (line 1966)
        result_mul_238220 = python_operator(stypy.reporting.localization.Localization(__file__, 1966, 31), '*', offset_238218, float_238219)
        
        # Getting the type of 'fontsize' (line 1966)
        fontsize_238221 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1966, 45), 'fontsize')
        # Applying the binary operator 'div' (line 1966)
        result_div_238222 = python_operator(stypy.reporting.localization.Localization(__file__, 1966, 44), 'div', result_mul_238220, fontsize_238221)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1966, 30), list_238217, result_div_238222)
        # Adding element type (line 1966)
        
        # Obtaining the type of the subscript
        int_238223 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1966, 62), 'int')
        
        # Obtaining the type of the subscript
        int_238224 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1966, 59), 'int')
        # Getting the type of 'nxt' (line 1966)
        nxt_238225 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1966, 55), 'nxt')
        # Obtaining the member '__getitem__' of a type (line 1966)
        getitem___238226 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1966, 55), nxt_238225, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1966)
        subscript_call_result_238227 = invoke(stypy.reporting.localization.Localization(__file__, 1966, 55), getitem___238226, int_238224)
        
        # Obtaining the member '__getitem__' of a type (line 1966)
        getitem___238228 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1966, 55), subscript_call_result_238227, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1966)
        subscript_call_result_238229 = invoke(stypy.reporting.localization.Localization(__file__, 1966, 55), getitem___238228, int_238223)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1966, 30), list_238217, subscript_call_result_238229)
        
        # Applying the binary operator '+=' (line 1966)
        result_iadd_238230 = python_operator(stypy.reporting.localization.Localization(__file__, 1966, 20), '+=', subscript_call_result_238216, list_238217)
        # Getting the type of 'elt' (line 1966)
        elt_238231 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1966, 20), 'elt')
        int_238232 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1966, 24), 'int')
        # Storing an element on a container (line 1966)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1966, 20), elt_238231, (int_238232, result_iadd_238230))
        
        
        # Assigning a Subscript to a Subscript (line 1967):
        
        # Assigning a Subscript to a Subscript (line 1967):
        
        # Obtaining the type of the subscript
        int_238233 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1967, 33), 'int')
        # Getting the type of 'nxt' (line 1967)
        nxt_238234 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1967, 29), 'nxt')
        # Obtaining the member '__getitem__' of a type (line 1967)
        getitem___238235 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1967, 29), nxt_238234, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1967)
        subscript_call_result_238236 = invoke(stypy.reporting.localization.Localization(__file__, 1967, 29), getitem___238235, int_238233)
        
        # Getting the type of 'elt' (line 1967)
        elt_238237 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1967, 20), 'elt')
        int_238238 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1967, 24), 'int')
        # Storing an element on a container (line 1967)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1967, 20), elt_238237, (int_238238, subscript_call_result_238236))
        # SSA join for if statement (line 1962)
        module_type_store = module_type_store.join_ssa_context()
        
        # Deleting a member
        # Getting the type of 'seq' (line 1968)
        seq_238239 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1968, 20), 'seq')
        
        # Obtaining the type of the subscript
        # Getting the type of 'i' (line 1968)
        i_238240 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1968, 24), 'i')
        int_238241 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1968, 26), 'int')
        # Applying the binary operator '+' (line 1968)
        result_add_238242 = python_operator(stypy.reporting.localization.Localization(__file__, 1968, 24), '+', i_238240, int_238241)
        
        # Getting the type of 'seq' (line 1968)
        seq_238243 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1968, 20), 'seq')
        # Obtaining the member '__getitem__' of a type (line 1968)
        getitem___238244 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1968, 20), seq_238243, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1968)
        subscript_call_result_238245 = invoke(stypy.reporting.localization.Localization(__file__, 1968, 20), getitem___238244, result_add_238242)
        
        del_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1968, 16), seq_238239, subscript_call_result_238245)
        # SSA join for if statement (line 1960)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 1958)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'i' (line 1970)
        i_238246 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1970, 12), 'i')
        int_238247 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1970, 17), 'int')
        # Applying the binary operator '+=' (line 1970)
        result_iadd_238248 = python_operator(stypy.reporting.localization.Localization(__file__, 1970, 12), '+=', i_238246, int_238247)
        # Assigning a type to the variable 'i' (line 1970)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1970, 12), 'i', result_iadd_238248)
        
        # SSA join for while statement (line 1956)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 1973):
        
        # Assigning a Call to a Name (line 1973):
        
        # Call to translate(...): (line 1973)
        # Processing the call arguments (line 1973)
        # Getting the type of 'x' (line 1973)
        x_238257 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1973, 57), 'x', False)
        # Getting the type of 'y' (line 1973)
        y_238258 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1973, 60), 'y', False)
        # Processing the call keyword arguments (line 1973)
        kwargs_238259 = {}
        
        # Call to rotate_deg(...): (line 1973)
        # Processing the call arguments (line 1973)
        # Getting the type of 'angle' (line 1973)
        angle_238253 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1973, 40), 'angle', False)
        # Processing the call keyword arguments (line 1973)
        kwargs_238254 = {}
        
        # Call to Affine2D(...): (line 1973)
        # Processing the call keyword arguments (line 1973)
        kwargs_238250 = {}
        # Getting the type of 'Affine2D' (line 1973)
        Affine2D_238249 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1973, 18), 'Affine2D', False)
        # Calling Affine2D(args, kwargs) (line 1973)
        Affine2D_call_result_238251 = invoke(stypy.reporting.localization.Localization(__file__, 1973, 18), Affine2D_238249, *[], **kwargs_238250)
        
        # Obtaining the member 'rotate_deg' of a type (line 1973)
        rotate_deg_238252 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1973, 18), Affine2D_call_result_238251, 'rotate_deg')
        # Calling rotate_deg(args, kwargs) (line 1973)
        rotate_deg_call_result_238255 = invoke(stypy.reporting.localization.Localization(__file__, 1973, 18), rotate_deg_238252, *[angle_238253], **kwargs_238254)
        
        # Obtaining the member 'translate' of a type (line 1973)
        translate_238256 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1973, 18), rotate_deg_call_result_238255, 'translate')
        # Calling translate(args, kwargs) (line 1973)
        translate_call_result_238260 = invoke(stypy.reporting.localization.Localization(__file__, 1973, 18), translate_238256, *[x_238257, y_238258], **kwargs_238259)
        
        # Assigning a type to the variable 'mytrans' (line 1973)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1973, 8), 'mytrans', translate_call_result_238260)
        
        # Call to check_gc(...): (line 1976)
        # Processing the call arguments (line 1976)
        # Getting the type of 'gc' (line 1976)
        gc_238263 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1976, 22), 'gc', False)
        # Getting the type of 'gc' (line 1976)
        gc_238264 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1976, 26), 'gc', False)
        # Obtaining the member '_rgb' of a type (line 1976)
        _rgb_238265 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1976, 26), gc_238264, '_rgb')
        # Processing the call keyword arguments (line 1976)
        kwargs_238266 = {}
        # Getting the type of 'self' (line 1976)
        self_238261 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1976, 8), 'self', False)
        # Obtaining the member 'check_gc' of a type (line 1976)
        check_gc_238262 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1976, 8), self_238261, 'check_gc')
        # Calling check_gc(args, kwargs) (line 1976)
        check_gc_call_result_238267 = invoke(stypy.reporting.localization.Localization(__file__, 1976, 8), check_gc_238262, *[gc_238263, _rgb_238265], **kwargs_238266)
        
        
        # Call to output(...): (line 1977)
        # Processing the call arguments (line 1977)
        # Getting the type of 'Op' (line 1977)
        Op_238271 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1977, 25), 'Op', False)
        # Obtaining the member 'begin_text' of a type (line 1977)
        begin_text_238272 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1977, 25), Op_238271, 'begin_text')
        # Processing the call keyword arguments (line 1977)
        kwargs_238273 = {}
        # Getting the type of 'self' (line 1977)
        self_238268 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1977, 8), 'self', False)
        # Obtaining the member 'file' of a type (line 1977)
        file_238269 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1977, 8), self_238268, 'file')
        # Obtaining the member 'output' of a type (line 1977)
        output_238270 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1977, 8), file_238269, 'output')
        # Calling output(args, kwargs) (line 1977)
        output_call_result_238274 = invoke(stypy.reporting.localization.Localization(__file__, 1977, 8), output_238270, *[begin_text_238272], **kwargs_238273)
        
        
        # Assigning a Tuple to a Tuple (line 1978):
        
        # Assigning a Num to a Name (line 1978):
        int_238275 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1978, 33), 'int')
        # Assigning a type to the variable 'tuple_assignment_231721' (line 1978)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1978, 8), 'tuple_assignment_231721', int_238275)
        
        # Assigning a Num to a Name (line 1978):
        int_238276 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1978, 36), 'int')
        # Assigning a type to the variable 'tuple_assignment_231722' (line 1978)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1978, 8), 'tuple_assignment_231722', int_238276)
        
        # Assigning a Num to a Name (line 1978):
        int_238277 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1978, 39), 'int')
        # Assigning a type to the variable 'tuple_assignment_231723' (line 1978)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1978, 8), 'tuple_assignment_231723', int_238277)
        
        # Assigning a Num to a Name (line 1978):
        int_238278 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1978, 42), 'int')
        # Assigning a type to the variable 'tuple_assignment_231724' (line 1978)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1978, 8), 'tuple_assignment_231724', int_238278)
        
        # Assigning a Name to a Name (line 1978):
        # Getting the type of 'tuple_assignment_231721' (line 1978)
        tuple_assignment_231721_238279 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1978, 8), 'tuple_assignment_231721')
        # Assigning a type to the variable 'curx' (line 1978)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1978, 8), 'curx', tuple_assignment_231721_238279)
        
        # Assigning a Name to a Name (line 1978):
        # Getting the type of 'tuple_assignment_231722' (line 1978)
        tuple_assignment_231722_238280 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1978, 8), 'tuple_assignment_231722')
        # Assigning a type to the variable 'cury' (line 1978)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1978, 14), 'cury', tuple_assignment_231722_238280)
        
        # Assigning a Name to a Name (line 1978):
        # Getting the type of 'tuple_assignment_231723' (line 1978)
        tuple_assignment_231723_238281 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1978, 8), 'tuple_assignment_231723')
        # Assigning a type to the variable 'oldx' (line 1978)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1978, 20), 'oldx', tuple_assignment_231723_238281)
        
        # Assigning a Name to a Name (line 1978):
        # Getting the type of 'tuple_assignment_231724' (line 1978)
        tuple_assignment_231724_238282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1978, 8), 'tuple_assignment_231724')
        # Assigning a type to the variable 'oldy' (line 1978)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1978, 26), 'oldy', tuple_assignment_231724_238282)
        
        # Getting the type of 'seq' (line 1979)
        seq_238283 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1979, 19), 'seq')
        # Testing the type of a for loop iterable (line 1979)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1979, 8), seq_238283)
        # Getting the type of the for loop variable (line 1979)
        for_loop_var_238284 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1979, 8), seq_238283)
        # Assigning a type to the variable 'elt' (line 1979)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1979, 8), 'elt', for_loop_var_238284)
        # SSA begins for a for statement (line 1979)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        
        
        # Obtaining the type of the subscript
        int_238285 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1980, 19), 'int')
        # Getting the type of 'elt' (line 1980)
        elt_238286 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1980, 15), 'elt')
        # Obtaining the member '__getitem__' of a type (line 1980)
        getitem___238287 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1980, 15), elt_238286, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1980)
        subscript_call_result_238288 = invoke(stypy.reporting.localization.Localization(__file__, 1980, 15), getitem___238287, int_238285)
        
        unicode_238289 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1980, 25), 'unicode', u'font')
        # Applying the binary operator '==' (line 1980)
        result_eq_238290 = python_operator(stypy.reporting.localization.Localization(__file__, 1980, 15), '==', subscript_call_result_238288, unicode_238289)
        
        # Testing the type of an if condition (line 1980)
        if_condition_238291 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1980, 12), result_eq_238290)
        # Assigning a type to the variable 'if_condition_238291' (line 1980)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1980, 12), 'if_condition_238291', if_condition_238291)
        # SSA begins for if statement (line 1980)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to output(...): (line 1981)
        # Processing the call arguments (line 1981)
        
        # Obtaining the type of the subscript
        int_238295 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1981, 37), 'int')
        # Getting the type of 'elt' (line 1981)
        elt_238296 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1981, 33), 'elt', False)
        # Obtaining the member '__getitem__' of a type (line 1981)
        getitem___238297 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1981, 33), elt_238296, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1981)
        subscript_call_result_238298 = invoke(stypy.reporting.localization.Localization(__file__, 1981, 33), getitem___238297, int_238295)
        
        
        # Obtaining the type of the subscript
        int_238299 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1981, 45), 'int')
        # Getting the type of 'elt' (line 1981)
        elt_238300 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1981, 41), 'elt', False)
        # Obtaining the member '__getitem__' of a type (line 1981)
        getitem___238301 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1981, 41), elt_238300, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1981)
        subscript_call_result_238302 = invoke(stypy.reporting.localization.Localization(__file__, 1981, 41), getitem___238301, int_238299)
        
        # Getting the type of 'Op' (line 1981)
        Op_238303 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1981, 49), 'Op', False)
        # Obtaining the member 'selectfont' of a type (line 1981)
        selectfont_238304 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1981, 49), Op_238303, 'selectfont')
        # Processing the call keyword arguments (line 1981)
        kwargs_238305 = {}
        # Getting the type of 'self' (line 1981)
        self_238292 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1981, 16), 'self', False)
        # Obtaining the member 'file' of a type (line 1981)
        file_238293 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1981, 16), self_238292, 'file')
        # Obtaining the member 'output' of a type (line 1981)
        output_238294 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1981, 16), file_238293, 'output')
        # Calling output(args, kwargs) (line 1981)
        output_call_result_238306 = invoke(stypy.reporting.localization.Localization(__file__, 1981, 16), output_238294, *[subscript_call_result_238298, subscript_call_result_238302, selectfont_238304], **kwargs_238305)
        
        # SSA branch for the else part of an if statement (line 1980)
        module_type_store.open_ssa_branch('else')
        
        
        
        # Obtaining the type of the subscript
        int_238307 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1982, 21), 'int')
        # Getting the type of 'elt' (line 1982)
        elt_238308 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1982, 17), 'elt')
        # Obtaining the member '__getitem__' of a type (line 1982)
        getitem___238309 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1982, 17), elt_238308, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1982)
        subscript_call_result_238310 = invoke(stypy.reporting.localization.Localization(__file__, 1982, 17), getitem___238309, int_238307)
        
        unicode_238311 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1982, 27), 'unicode', u'text')
        # Applying the binary operator '==' (line 1982)
        result_eq_238312 = python_operator(stypy.reporting.localization.Localization(__file__, 1982, 17), '==', subscript_call_result_238310, unicode_238311)
        
        # Testing the type of an if condition (line 1982)
        if_condition_238313 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1982, 17), result_eq_238312)
        # Assigning a type to the variable 'if_condition_238313' (line 1982)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1982, 17), 'if_condition_238313', if_condition_238313)
        # SSA begins for if statement (line 1982)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Tuple (line 1983):
        
        # Assigning a Call to a Name:
        
        # Call to transform_point(...): (line 1983)
        # Processing the call arguments (line 1983)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1983)
        tuple_238316 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1983, 54), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1983)
        # Adding element type (line 1983)
        
        # Obtaining the type of the subscript
        int_238317 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1983, 58), 'int')
        # Getting the type of 'elt' (line 1983)
        elt_238318 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1983, 54), 'elt', False)
        # Obtaining the member '__getitem__' of a type (line 1983)
        getitem___238319 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1983, 54), elt_238318, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1983)
        subscript_call_result_238320 = invoke(stypy.reporting.localization.Localization(__file__, 1983, 54), getitem___238319, int_238317)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1983, 54), tuple_238316, subscript_call_result_238320)
        # Adding element type (line 1983)
        
        # Obtaining the type of the subscript
        int_238321 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1983, 66), 'int')
        # Getting the type of 'elt' (line 1983)
        elt_238322 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1983, 62), 'elt', False)
        # Obtaining the member '__getitem__' of a type (line 1983)
        getitem___238323 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1983, 62), elt_238322, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1983)
        subscript_call_result_238324 = invoke(stypy.reporting.localization.Localization(__file__, 1983, 62), getitem___238323, int_238321)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1983, 54), tuple_238316, subscript_call_result_238324)
        
        # Processing the call keyword arguments (line 1983)
        kwargs_238325 = {}
        # Getting the type of 'mytrans' (line 1983)
        mytrans_238314 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1983, 29), 'mytrans', False)
        # Obtaining the member 'transform_point' of a type (line 1983)
        transform_point_238315 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1983, 29), mytrans_238314, 'transform_point')
        # Calling transform_point(args, kwargs) (line 1983)
        transform_point_call_result_238326 = invoke(stypy.reporting.localization.Localization(__file__, 1983, 29), transform_point_238315, *[tuple_238316], **kwargs_238325)
        
        # Assigning a type to the variable 'call_assignment_231725' (line 1983)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1983, 16), 'call_assignment_231725', transform_point_call_result_238326)
        
        # Assigning a Call to a Name (line 1983):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_238329 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1983, 16), 'int')
        # Processing the call keyword arguments
        kwargs_238330 = {}
        # Getting the type of 'call_assignment_231725' (line 1983)
        call_assignment_231725_238327 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1983, 16), 'call_assignment_231725', False)
        # Obtaining the member '__getitem__' of a type (line 1983)
        getitem___238328 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1983, 16), call_assignment_231725_238327, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_238331 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___238328, *[int_238329], **kwargs_238330)
        
        # Assigning a type to the variable 'call_assignment_231726' (line 1983)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1983, 16), 'call_assignment_231726', getitem___call_result_238331)
        
        # Assigning a Name to a Name (line 1983):
        # Getting the type of 'call_assignment_231726' (line 1983)
        call_assignment_231726_238332 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1983, 16), 'call_assignment_231726')
        # Assigning a type to the variable 'curx' (line 1983)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1983, 16), 'curx', call_assignment_231726_238332)
        
        # Assigning a Call to a Name (line 1983):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_238335 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1983, 16), 'int')
        # Processing the call keyword arguments
        kwargs_238336 = {}
        # Getting the type of 'call_assignment_231725' (line 1983)
        call_assignment_231725_238333 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1983, 16), 'call_assignment_231725', False)
        # Obtaining the member '__getitem__' of a type (line 1983)
        getitem___238334 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1983, 16), call_assignment_231725_238333, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_238337 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___238334, *[int_238335], **kwargs_238336)
        
        # Assigning a type to the variable 'call_assignment_231727' (line 1983)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1983, 16), 'call_assignment_231727', getitem___call_result_238337)
        
        # Assigning a Name to a Name (line 1983):
        # Getting the type of 'call_assignment_231727' (line 1983)
        call_assignment_231727_238338 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1983, 16), 'call_assignment_231727')
        # Assigning a type to the variable 'cury' (line 1983)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1983, 22), 'cury', call_assignment_231727_238338)
        
        # Call to _setup_textpos(...): (line 1984)
        # Processing the call arguments (line 1984)
        # Getting the type of 'curx' (line 1984)
        curx_238341 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1984, 36), 'curx', False)
        # Getting the type of 'cury' (line 1984)
        cury_238342 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1984, 42), 'cury', False)
        # Getting the type of 'angle' (line 1984)
        angle_238343 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1984, 48), 'angle', False)
        # Getting the type of 'oldx' (line 1984)
        oldx_238344 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1984, 55), 'oldx', False)
        # Getting the type of 'oldy' (line 1984)
        oldy_238345 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1984, 61), 'oldy', False)
        # Processing the call keyword arguments (line 1984)
        kwargs_238346 = {}
        # Getting the type of 'self' (line 1984)
        self_238339 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1984, 16), 'self', False)
        # Obtaining the member '_setup_textpos' of a type (line 1984)
        _setup_textpos_238340 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1984, 16), self_238339, '_setup_textpos')
        # Calling _setup_textpos(args, kwargs) (line 1984)
        _setup_textpos_call_result_238347 = invoke(stypy.reporting.localization.Localization(__file__, 1984, 16), _setup_textpos_238340, *[curx_238341, cury_238342, angle_238343, oldx_238344, oldy_238345], **kwargs_238346)
        
        
        # Assigning a Tuple to a Tuple (line 1985):
        
        # Assigning a Name to a Name (line 1985):
        # Getting the type of 'curx' (line 1985)
        curx_238348 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1985, 29), 'curx')
        # Assigning a type to the variable 'tuple_assignment_231728' (line 1985)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1985, 16), 'tuple_assignment_231728', curx_238348)
        
        # Assigning a Name to a Name (line 1985):
        # Getting the type of 'cury' (line 1985)
        cury_238349 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1985, 35), 'cury')
        # Assigning a type to the variable 'tuple_assignment_231729' (line 1985)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1985, 16), 'tuple_assignment_231729', cury_238349)
        
        # Assigning a Name to a Name (line 1985):
        # Getting the type of 'tuple_assignment_231728' (line 1985)
        tuple_assignment_231728_238350 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1985, 16), 'tuple_assignment_231728')
        # Assigning a type to the variable 'oldx' (line 1985)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1985, 16), 'oldx', tuple_assignment_231728_238350)
        
        # Assigning a Name to a Name (line 1985):
        # Getting the type of 'tuple_assignment_231729' (line 1985)
        tuple_assignment_231729_238351 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1985, 16), 'tuple_assignment_231729')
        # Assigning a type to the variable 'oldy' (line 1985)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1985, 22), 'oldy', tuple_assignment_231729_238351)
        
        
        
        # Call to len(...): (line 1986)
        # Processing the call arguments (line 1986)
        
        # Obtaining the type of the subscript
        int_238353 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1986, 27), 'int')
        # Getting the type of 'elt' (line 1986)
        elt_238354 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1986, 23), 'elt', False)
        # Obtaining the member '__getitem__' of a type (line 1986)
        getitem___238355 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1986, 23), elt_238354, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1986)
        subscript_call_result_238356 = invoke(stypy.reporting.localization.Localization(__file__, 1986, 23), getitem___238355, int_238353)
        
        # Processing the call keyword arguments (line 1986)
        kwargs_238357 = {}
        # Getting the type of 'len' (line 1986)
        len_238352 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1986, 19), 'len', False)
        # Calling len(args, kwargs) (line 1986)
        len_call_result_238358 = invoke(stypy.reporting.localization.Localization(__file__, 1986, 19), len_238352, *[subscript_call_result_238356], **kwargs_238357)
        
        int_238359 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1986, 34), 'int')
        # Applying the binary operator '==' (line 1986)
        result_eq_238360 = python_operator(stypy.reporting.localization.Localization(__file__, 1986, 19), '==', len_call_result_238358, int_238359)
        
        # Testing the type of an if condition (line 1986)
        if_condition_238361 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1986, 16), result_eq_238360)
        # Assigning a type to the variable 'if_condition_238361' (line 1986)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1986, 16), 'if_condition_238361', if_condition_238361)
        # SSA begins for if statement (line 1986)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to output(...): (line 1987)
        # Processing the call arguments (line 1987)
        
        # Obtaining the type of the subscript
        int_238365 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1987, 44), 'int')
        
        # Obtaining the type of the subscript
        int_238366 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1987, 41), 'int')
        # Getting the type of 'elt' (line 1987)
        elt_238367 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1987, 37), 'elt', False)
        # Obtaining the member '__getitem__' of a type (line 1987)
        getitem___238368 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1987, 37), elt_238367, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1987)
        subscript_call_result_238369 = invoke(stypy.reporting.localization.Localization(__file__, 1987, 37), getitem___238368, int_238366)
        
        # Obtaining the member '__getitem__' of a type (line 1987)
        getitem___238370 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1987, 37), subscript_call_result_238369, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1987)
        subscript_call_result_238371 = invoke(stypy.reporting.localization.Localization(__file__, 1987, 37), getitem___238370, int_238365)
        
        # Getting the type of 'Op' (line 1987)
        Op_238372 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1987, 48), 'Op', False)
        # Obtaining the member 'show' of a type (line 1987)
        show_238373 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1987, 48), Op_238372, 'show')
        # Processing the call keyword arguments (line 1987)
        kwargs_238374 = {}
        # Getting the type of 'self' (line 1987)
        self_238362 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1987, 20), 'self', False)
        # Obtaining the member 'file' of a type (line 1987)
        file_238363 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1987, 20), self_238362, 'file')
        # Obtaining the member 'output' of a type (line 1987)
        output_238364 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1987, 20), file_238363, 'output')
        # Calling output(args, kwargs) (line 1987)
        output_call_result_238375 = invoke(stypy.reporting.localization.Localization(__file__, 1987, 20), output_238364, *[subscript_call_result_238371, show_238373], **kwargs_238374)
        
        # SSA branch for the else part of an if statement (line 1986)
        module_type_store.open_ssa_branch('else')
        
        # Call to output(...): (line 1989)
        # Processing the call arguments (line 1989)
        
        # Obtaining the type of the subscript
        int_238379 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1989, 41), 'int')
        # Getting the type of 'elt' (line 1989)
        elt_238380 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1989, 37), 'elt', False)
        # Obtaining the member '__getitem__' of a type (line 1989)
        getitem___238381 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1989, 37), elt_238380, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1989)
        subscript_call_result_238382 = invoke(stypy.reporting.localization.Localization(__file__, 1989, 37), getitem___238381, int_238379)
        
        # Getting the type of 'Op' (line 1989)
        Op_238383 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1989, 45), 'Op', False)
        # Obtaining the member 'showkern' of a type (line 1989)
        showkern_238384 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1989, 45), Op_238383, 'showkern')
        # Processing the call keyword arguments (line 1989)
        kwargs_238385 = {}
        # Getting the type of 'self' (line 1989)
        self_238376 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1989, 20), 'self', False)
        # Obtaining the member 'file' of a type (line 1989)
        file_238377 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1989, 20), self_238376, 'file')
        # Obtaining the member 'output' of a type (line 1989)
        output_238378 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1989, 20), file_238377, 'output')
        # Calling output(args, kwargs) (line 1989)
        output_call_result_238386 = invoke(stypy.reporting.localization.Localization(__file__, 1989, 20), output_238378, *[subscript_call_result_238382, showkern_238384], **kwargs_238385)
        
        # SSA join for if statement (line 1986)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA branch for the else part of an if statement (line 1982)
        module_type_store.open_ssa_branch('else')
        # Evaluating assert statement condition
        # Getting the type of 'False' (line 1991)
        False_238387 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1991, 23), 'False')
        # SSA join for if statement (line 1982)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 1980)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to output(...): (line 1992)
        # Processing the call arguments (line 1992)
        # Getting the type of 'Op' (line 1992)
        Op_238391 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1992, 25), 'Op', False)
        # Obtaining the member 'end_text' of a type (line 1992)
        end_text_238392 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1992, 25), Op_238391, 'end_text')
        # Processing the call keyword arguments (line 1992)
        kwargs_238393 = {}
        # Getting the type of 'self' (line 1992)
        self_238388 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1992, 8), 'self', False)
        # Obtaining the member 'file' of a type (line 1992)
        file_238389 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1992, 8), self_238388, 'file')
        # Obtaining the member 'output' of a type (line 1992)
        output_238390 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1992, 8), file_238389, 'output')
        # Calling output(args, kwargs) (line 1992)
        output_call_result_238394 = invoke(stypy.reporting.localization.Localization(__file__, 1992, 8), output_238390, *[end_text_238392], **kwargs_238393)
        
        
        # Assigning a Call to a Name (line 1996):
        
        # Assigning a Call to a Name (line 1996):
        
        # Call to new_gc(...): (line 1996)
        # Processing the call keyword arguments (line 1996)
        kwargs_238397 = {}
        # Getting the type of 'self' (line 1996)
        self_238395 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1996, 16), 'self', False)
        # Obtaining the member 'new_gc' of a type (line 1996)
        new_gc_238396 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1996, 16), self_238395, 'new_gc')
        # Calling new_gc(args, kwargs) (line 1996)
        new_gc_call_result_238398 = invoke(stypy.reporting.localization.Localization(__file__, 1996, 16), new_gc_238396, *[], **kwargs_238397)
        
        # Assigning a type to the variable 'boxgc' (line 1996)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1996, 8), 'boxgc', new_gc_call_result_238398)
        
        # Call to copy_properties(...): (line 1997)
        # Processing the call arguments (line 1997)
        # Getting the type of 'gc' (line 1997)
        gc_238401 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1997, 30), 'gc', False)
        # Processing the call keyword arguments (line 1997)
        kwargs_238402 = {}
        # Getting the type of 'boxgc' (line 1997)
        boxgc_238399 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1997, 8), 'boxgc', False)
        # Obtaining the member 'copy_properties' of a type (line 1997)
        copy_properties_238400 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1997, 8), boxgc_238399, 'copy_properties')
        # Calling copy_properties(args, kwargs) (line 1997)
        copy_properties_call_result_238403 = invoke(stypy.reporting.localization.Localization(__file__, 1997, 8), copy_properties_238400, *[gc_238401], **kwargs_238402)
        
        
        # Call to set_linewidth(...): (line 1998)
        # Processing the call arguments (line 1998)
        int_238406 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1998, 28), 'int')
        # Processing the call keyword arguments (line 1998)
        kwargs_238407 = {}
        # Getting the type of 'boxgc' (line 1998)
        boxgc_238404 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1998, 8), 'boxgc', False)
        # Obtaining the member 'set_linewidth' of a type (line 1998)
        set_linewidth_238405 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1998, 8), boxgc_238404, 'set_linewidth')
        # Calling set_linewidth(args, kwargs) (line 1998)
        set_linewidth_call_result_238408 = invoke(stypy.reporting.localization.Localization(__file__, 1998, 8), set_linewidth_238405, *[int_238406], **kwargs_238407)
        
        
        # Assigning a List to a Name (line 1999):
        
        # Assigning a List to a Name (line 1999):
        
        # Obtaining an instance of the builtin type 'list' (line 1999)
        list_238409 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1999, 18), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1999)
        # Adding element type (line 1999)
        # Getting the type of 'Path' (line 1999)
        Path_238410 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1999, 19), 'Path')
        # Obtaining the member 'MOVETO' of a type (line 1999)
        MOVETO_238411 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1999, 19), Path_238410, 'MOVETO')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1999, 18), list_238409, MOVETO_238411)
        # Adding element type (line 1999)
        # Getting the type of 'Path' (line 1999)
        Path_238412 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1999, 32), 'Path')
        # Obtaining the member 'LINETO' of a type (line 1999)
        LINETO_238413 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1999, 32), Path_238412, 'LINETO')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1999, 18), list_238409, LINETO_238413)
        # Adding element type (line 1999)
        # Getting the type of 'Path' (line 1999)
        Path_238414 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1999, 45), 'Path')
        # Obtaining the member 'LINETO' of a type (line 1999)
        LINETO_238415 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1999, 45), Path_238414, 'LINETO')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1999, 18), list_238409, LINETO_238415)
        # Adding element type (line 1999)
        # Getting the type of 'Path' (line 1999)
        Path_238416 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1999, 58), 'Path')
        # Obtaining the member 'LINETO' of a type (line 1999)
        LINETO_238417 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1999, 58), Path_238416, 'LINETO')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1999, 18), list_238409, LINETO_238417)
        # Adding element type (line 1999)
        # Getting the type of 'Path' (line 2000)
        Path_238418 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2000, 19), 'Path')
        # Obtaining the member 'CLOSEPOLY' of a type (line 2000)
        CLOSEPOLY_238419 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2000, 19), Path_238418, 'CLOSEPOLY')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1999, 18), list_238409, CLOSEPOLY_238419)
        
        # Assigning a type to the variable 'pathops' (line 1999)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1999, 8), 'pathops', list_238409)
        
        # Getting the type of 'page' (line 2001)
        page_238420 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2001, 28), 'page')
        # Obtaining the member 'boxes' of a type (line 2001)
        boxes_238421 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2001, 28), page_238420, 'boxes')
        # Testing the type of a for loop iterable (line 2001)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2001, 8), boxes_238421)
        # Getting the type of the for loop variable (line 2001)
        for_loop_var_238422 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2001, 8), boxes_238421)
        # Assigning a type to the variable 'x1' (line 2001)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2001, 8), 'x1', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2001, 8), for_loop_var_238422))
        # Assigning a type to the variable 'y1' (line 2001)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2001, 8), 'y1', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2001, 8), for_loop_var_238422))
        # Assigning a type to the variable 'h' (line 2001)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2001, 8), 'h', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2001, 8), for_loop_var_238422))
        # Assigning a type to the variable 'w' (line 2001)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2001, 8), 'w', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2001, 8), for_loop_var_238422))
        # SSA begins for a for statement (line 2001)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 2002):
        
        # Assigning a Call to a Name (line 2002):
        
        # Call to Path(...): (line 2002)
        # Processing the call arguments (line 2002)
        
        # Obtaining an instance of the builtin type 'list' (line 2002)
        list_238424 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2002, 24), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2002)
        # Adding element type (line 2002)
        
        # Obtaining an instance of the builtin type 'list' (line 2002)
        list_238425 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2002, 25), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2002)
        # Adding element type (line 2002)
        # Getting the type of 'x1' (line 2002)
        x1_238426 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2002, 26), 'x1', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2002, 25), list_238425, x1_238426)
        # Adding element type (line 2002)
        # Getting the type of 'y1' (line 2002)
        y1_238427 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2002, 30), 'y1', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2002, 25), list_238425, y1_238427)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2002, 24), list_238424, list_238425)
        # Adding element type (line 2002)
        
        # Obtaining an instance of the builtin type 'list' (line 2002)
        list_238428 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2002, 35), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2002)
        # Adding element type (line 2002)
        # Getting the type of 'x1' (line 2002)
        x1_238429 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2002, 36), 'x1', False)
        # Getting the type of 'w' (line 2002)
        w_238430 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2002, 39), 'w', False)
        # Applying the binary operator '+' (line 2002)
        result_add_238431 = python_operator(stypy.reporting.localization.Localization(__file__, 2002, 36), '+', x1_238429, w_238430)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2002, 35), list_238428, result_add_238431)
        # Adding element type (line 2002)
        # Getting the type of 'y1' (line 2002)
        y1_238432 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2002, 42), 'y1', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2002, 35), list_238428, y1_238432)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2002, 24), list_238424, list_238428)
        # Adding element type (line 2002)
        
        # Obtaining an instance of the builtin type 'list' (line 2002)
        list_238433 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2002, 47), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2002)
        # Adding element type (line 2002)
        # Getting the type of 'x1' (line 2002)
        x1_238434 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2002, 48), 'x1', False)
        # Getting the type of 'w' (line 2002)
        w_238435 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2002, 51), 'w', False)
        # Applying the binary operator '+' (line 2002)
        result_add_238436 = python_operator(stypy.reporting.localization.Localization(__file__, 2002, 48), '+', x1_238434, w_238435)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2002, 47), list_238433, result_add_238436)
        # Adding element type (line 2002)
        # Getting the type of 'y1' (line 2002)
        y1_238437 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2002, 54), 'y1', False)
        # Getting the type of 'h' (line 2002)
        h_238438 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2002, 57), 'h', False)
        # Applying the binary operator '+' (line 2002)
        result_add_238439 = python_operator(stypy.reporting.localization.Localization(__file__, 2002, 54), '+', y1_238437, h_238438)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2002, 47), list_238433, result_add_238439)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2002, 24), list_238424, list_238433)
        # Adding element type (line 2002)
        
        # Obtaining an instance of the builtin type 'list' (line 2002)
        list_238440 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2002, 61), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2002)
        # Adding element type (line 2002)
        # Getting the type of 'x1' (line 2002)
        x1_238441 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2002, 62), 'x1', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2002, 61), list_238440, x1_238441)
        # Adding element type (line 2002)
        # Getting the type of 'y1' (line 2002)
        y1_238442 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2002, 66), 'y1', False)
        # Getting the type of 'h' (line 2002)
        h_238443 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2002, 69), 'h', False)
        # Applying the binary operator '+' (line 2002)
        result_add_238444 = python_operator(stypy.reporting.localization.Localization(__file__, 2002, 66), '+', y1_238442, h_238443)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2002, 61), list_238440, result_add_238444)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2002, 24), list_238424, list_238440)
        # Adding element type (line 2002)
        
        # Obtaining an instance of the builtin type 'list' (line 2003)
        list_238445 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2003, 25), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2003)
        # Adding element type (line 2003)
        int_238446 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2003, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2003, 25), list_238445, int_238446)
        # Adding element type (line 2003)
        int_238447 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2003, 29), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2003, 25), list_238445, int_238447)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2002, 24), list_238424, list_238445)
        
        # Getting the type of 'pathops' (line 2003)
        pathops_238448 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2003, 34), 'pathops', False)
        # Processing the call keyword arguments (line 2002)
        kwargs_238449 = {}
        # Getting the type of 'Path' (line 2002)
        Path_238423 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2002, 19), 'Path', False)
        # Calling Path(args, kwargs) (line 2002)
        Path_call_result_238450 = invoke(stypy.reporting.localization.Localization(__file__, 2002, 19), Path_238423, *[list_238424, pathops_238448], **kwargs_238449)
        
        # Assigning a type to the variable 'path' (line 2002)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2002, 12), 'path', Path_call_result_238450)
        
        # Call to draw_path(...): (line 2004)
        # Processing the call arguments (line 2004)
        # Getting the type of 'boxgc' (line 2004)
        boxgc_238453 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2004, 27), 'boxgc', False)
        # Getting the type of 'path' (line 2004)
        path_238454 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2004, 34), 'path', False)
        # Getting the type of 'mytrans' (line 2004)
        mytrans_238455 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2004, 40), 'mytrans', False)
        # Getting the type of 'gc' (line 2004)
        gc_238456 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2004, 49), 'gc', False)
        # Obtaining the member '_rgb' of a type (line 2004)
        _rgb_238457 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2004, 49), gc_238456, '_rgb')
        # Processing the call keyword arguments (line 2004)
        kwargs_238458 = {}
        # Getting the type of 'self' (line 2004)
        self_238451 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2004, 12), 'self', False)
        # Obtaining the member 'draw_path' of a type (line 2004)
        draw_path_238452 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2004, 12), self_238451, 'draw_path')
        # Calling draw_path(args, kwargs) (line 2004)
        draw_path_call_result_238459 = invoke(stypy.reporting.localization.Localization(__file__, 2004, 12), draw_path_238452, *[boxgc_238453, path_238454, mytrans_238455, _rgb_238457], **kwargs_238458)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'draw_tex(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'draw_tex' in the type store
        # Getting the type of 'stypy_return_type' (line 1925)
        stypy_return_type_238460 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1925, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_238460)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'draw_tex'
        return stypy_return_type_238460


    @norecursion
    def encode_string(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'encode_string'
        module_type_store = module_type_store.open_function_context('encode_string', 2006, 4, False)
        # Assigning a type to the variable 'self' (line 2007)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2007, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererPdf.encode_string.__dict__.__setitem__('stypy_localization', localization)
        RendererPdf.encode_string.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererPdf.encode_string.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererPdf.encode_string.__dict__.__setitem__('stypy_function_name', 'RendererPdf.encode_string')
        RendererPdf.encode_string.__dict__.__setitem__('stypy_param_names_list', ['s', 'fonttype'])
        RendererPdf.encode_string.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererPdf.encode_string.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererPdf.encode_string.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererPdf.encode_string.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererPdf.encode_string.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererPdf.encode_string.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererPdf.encode_string', ['s', 'fonttype'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'encode_string', localization, ['s', 'fonttype'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'encode_string(...)' code ##################

        
        
        # Getting the type of 'fonttype' (line 2007)
        fonttype_238461 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2007, 11), 'fonttype')
        
        # Obtaining an instance of the builtin type 'tuple' (line 2007)
        tuple_238462 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2007, 24), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 2007)
        # Adding element type (line 2007)
        int_238463 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2007, 24), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2007, 24), tuple_238462, int_238463)
        # Adding element type (line 2007)
        int_238464 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2007, 27), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2007, 24), tuple_238462, int_238464)
        
        # Applying the binary operator 'in' (line 2007)
        result_contains_238465 = python_operator(stypy.reporting.localization.Localization(__file__, 2007, 11), 'in', fonttype_238461, tuple_238462)
        
        # Testing the type of an if condition (line 2007)
        if_condition_238466 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2007, 8), result_contains_238465)
        # Assigning a type to the variable 'if_condition_238466' (line 2007)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2007, 8), 'if_condition_238466', if_condition_238466)
        # SSA begins for if statement (line 2007)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to encode(...): (line 2008)
        # Processing the call arguments (line 2008)
        unicode_238469 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2008, 28), 'unicode', u'cp1252')
        unicode_238470 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2008, 38), 'unicode', u'replace')
        # Processing the call keyword arguments (line 2008)
        kwargs_238471 = {}
        # Getting the type of 's' (line 2008)
        s_238467 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2008, 19), 's', False)
        # Obtaining the member 'encode' of a type (line 2008)
        encode_238468 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2008, 19), s_238467, 'encode')
        # Calling encode(args, kwargs) (line 2008)
        encode_call_result_238472 = invoke(stypy.reporting.localization.Localization(__file__, 2008, 19), encode_238468, *[unicode_238469, unicode_238470], **kwargs_238471)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2008)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2008, 12), 'stypy_return_type', encode_call_result_238472)
        # SSA join for if statement (line 2007)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to encode(...): (line 2009)
        # Processing the call arguments (line 2009)
        unicode_238475 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2009, 24), 'unicode', u'utf-16be')
        unicode_238476 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2009, 36), 'unicode', u'replace')
        # Processing the call keyword arguments (line 2009)
        kwargs_238477 = {}
        # Getting the type of 's' (line 2009)
        s_238473 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2009, 15), 's', False)
        # Obtaining the member 'encode' of a type (line 2009)
        encode_238474 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2009, 15), s_238473, 'encode')
        # Calling encode(args, kwargs) (line 2009)
        encode_call_result_238478 = invoke(stypy.reporting.localization.Localization(__file__, 2009, 15), encode_238474, *[unicode_238475, unicode_238476], **kwargs_238477)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2009)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2009, 8), 'stypy_return_type', encode_call_result_238478)
        
        # ################# End of 'encode_string(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'encode_string' in the type store
        # Getting the type of 'stypy_return_type' (line 2006)
        stypy_return_type_238479 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2006, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_238479)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'encode_string'
        return stypy_return_type_238479


    @norecursion
    def draw_text(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'False' (line 2011)
        False_238480 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2011, 57), 'False')
        # Getting the type of 'None' (line 2011)
        None_238481 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2011, 70), 'None')
        defaults = [False_238480, None_238481]
        # Create a new context for function 'draw_text'
        module_type_store = module_type_store.open_function_context('draw_text', 2011, 4, False)
        # Assigning a type to the variable 'self' (line 2012)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2012, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererPdf.draw_text.__dict__.__setitem__('stypy_localization', localization)
        RendererPdf.draw_text.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererPdf.draw_text.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererPdf.draw_text.__dict__.__setitem__('stypy_function_name', 'RendererPdf.draw_text')
        RendererPdf.draw_text.__dict__.__setitem__('stypy_param_names_list', ['gc', 'x', 'y', 's', 'prop', 'angle', 'ismath', 'mtext'])
        RendererPdf.draw_text.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererPdf.draw_text.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererPdf.draw_text.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererPdf.draw_text.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererPdf.draw_text.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererPdf.draw_text.__dict__.__setitem__('stypy_declared_arg_number', 9)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererPdf.draw_text', ['gc', 'x', 'y', 's', 'prop', 'angle', 'ismath', 'mtext'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'draw_text', localization, ['gc', 'x', 'y', 's', 'prop', 'angle', 'ismath', 'mtext'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'draw_text(...)' code ##################

        
        # Call to check_gc(...): (line 2025)
        # Processing the call arguments (line 2025)
        # Getting the type of 'gc' (line 2025)
        gc_238484 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2025, 22), 'gc', False)
        # Getting the type of 'gc' (line 2025)
        gc_238485 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2025, 26), 'gc', False)
        # Obtaining the member '_rgb' of a type (line 2025)
        _rgb_238486 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2025, 26), gc_238485, '_rgb')
        # Processing the call keyword arguments (line 2025)
        kwargs_238487 = {}
        # Getting the type of 'self' (line 2025)
        self_238482 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2025, 8), 'self', False)
        # Obtaining the member 'check_gc' of a type (line 2025)
        check_gc_238483 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2025, 8), self_238482, 'check_gc')
        # Calling check_gc(args, kwargs) (line 2025)
        check_gc_call_result_238488 = invoke(stypy.reporting.localization.Localization(__file__, 2025, 8), check_gc_238483, *[gc_238484, _rgb_238486], **kwargs_238487)
        
        
        # Getting the type of 'ismath' (line 2026)
        ismath_238489 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2026, 11), 'ismath')
        # Testing the type of an if condition (line 2026)
        if_condition_238490 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2026, 8), ismath_238489)
        # Assigning a type to the variable 'if_condition_238490' (line 2026)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2026, 8), 'if_condition_238490', if_condition_238490)
        # SSA begins for if statement (line 2026)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to draw_mathtext(...): (line 2027)
        # Processing the call arguments (line 2027)
        # Getting the type of 'gc' (line 2027)
        gc_238493 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2027, 38), 'gc', False)
        # Getting the type of 'x' (line 2027)
        x_238494 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2027, 42), 'x', False)
        # Getting the type of 'y' (line 2027)
        y_238495 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2027, 45), 'y', False)
        # Getting the type of 's' (line 2027)
        s_238496 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2027, 48), 's', False)
        # Getting the type of 'prop' (line 2027)
        prop_238497 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2027, 51), 'prop', False)
        # Getting the type of 'angle' (line 2027)
        angle_238498 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2027, 57), 'angle', False)
        # Processing the call keyword arguments (line 2027)
        kwargs_238499 = {}
        # Getting the type of 'self' (line 2027)
        self_238491 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2027, 19), 'self', False)
        # Obtaining the member 'draw_mathtext' of a type (line 2027)
        draw_mathtext_238492 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2027, 19), self_238491, 'draw_mathtext')
        # Calling draw_mathtext(args, kwargs) (line 2027)
        draw_mathtext_call_result_238500 = invoke(stypy.reporting.localization.Localization(__file__, 2027, 19), draw_mathtext_238492, *[gc_238493, x_238494, y_238495, s_238496, prop_238497, angle_238498], **kwargs_238499)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2027)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2027, 12), 'stypy_return_type', draw_mathtext_call_result_238500)
        # SSA join for if statement (line 2026)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 2029):
        
        # Assigning a Call to a Name (line 2029):
        
        # Call to get_size_in_points(...): (line 2029)
        # Processing the call keyword arguments (line 2029)
        kwargs_238503 = {}
        # Getting the type of 'prop' (line 2029)
        prop_238501 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2029, 19), 'prop', False)
        # Obtaining the member 'get_size_in_points' of a type (line 2029)
        get_size_in_points_238502 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2029, 19), prop_238501, 'get_size_in_points')
        # Calling get_size_in_points(args, kwargs) (line 2029)
        get_size_in_points_call_result_238504 = invoke(stypy.reporting.localization.Localization(__file__, 2029, 19), get_size_in_points_238502, *[], **kwargs_238503)
        
        # Assigning a type to the variable 'fontsize' (line 2029)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2029, 8), 'fontsize', get_size_in_points_call_result_238504)
        
        
        # Obtaining the type of the subscript
        unicode_238505 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2031, 20), 'unicode', u'pdf.use14corefonts')
        # Getting the type of 'rcParams' (line 2031)
        rcParams_238506 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2031, 11), 'rcParams')
        # Obtaining the member '__getitem__' of a type (line 2031)
        getitem___238507 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2031, 11), rcParams_238506, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2031)
        subscript_call_result_238508 = invoke(stypy.reporting.localization.Localization(__file__, 2031, 11), getitem___238507, unicode_238505)
        
        # Testing the type of an if condition (line 2031)
        if_condition_238509 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2031, 8), subscript_call_result_238508)
        # Assigning a type to the variable 'if_condition_238509' (line 2031)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2031, 8), 'if_condition_238509', if_condition_238509)
        # SSA begins for if statement (line 2031)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 2032):
        
        # Assigning a Call to a Name (line 2032):
        
        # Call to _get_font_afm(...): (line 2032)
        # Processing the call arguments (line 2032)
        # Getting the type of 'prop' (line 2032)
        prop_238512 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2032, 38), 'prop', False)
        # Processing the call keyword arguments (line 2032)
        kwargs_238513 = {}
        # Getting the type of 'self' (line 2032)
        self_238510 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2032, 19), 'self', False)
        # Obtaining the member '_get_font_afm' of a type (line 2032)
        _get_font_afm_238511 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2032, 19), self_238510, '_get_font_afm')
        # Calling _get_font_afm(args, kwargs) (line 2032)
        _get_font_afm_call_result_238514 = invoke(stypy.reporting.localization.Localization(__file__, 2032, 19), _get_font_afm_238511, *[prop_238512], **kwargs_238513)
        
        # Assigning a type to the variable 'font' (line 2032)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2032, 12), 'font', _get_font_afm_call_result_238514)
        
        # Assigning a Call to a Tuple (line 2033):
        
        # Assigning a Call to a Name:
        
        # Call to get_str_bbox(...): (line 2033)
        # Processing the call arguments (line 2033)
        # Getting the type of 's' (line 2033)
        s_238517 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2033, 43), 's', False)
        # Processing the call keyword arguments (line 2033)
        kwargs_238518 = {}
        # Getting the type of 'font' (line 2033)
        font_238515 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2033, 25), 'font', False)
        # Obtaining the member 'get_str_bbox' of a type (line 2033)
        get_str_bbox_238516 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2033, 25), font_238515, 'get_str_bbox')
        # Calling get_str_bbox(args, kwargs) (line 2033)
        get_str_bbox_call_result_238519 = invoke(stypy.reporting.localization.Localization(__file__, 2033, 25), get_str_bbox_238516, *[s_238517], **kwargs_238518)
        
        # Assigning a type to the variable 'call_assignment_231730' (line 2033)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2033, 12), 'call_assignment_231730', get_str_bbox_call_result_238519)
        
        # Assigning a Call to a Name (line 2033):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_238522 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2033, 12), 'int')
        # Processing the call keyword arguments
        kwargs_238523 = {}
        # Getting the type of 'call_assignment_231730' (line 2033)
        call_assignment_231730_238520 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2033, 12), 'call_assignment_231730', False)
        # Obtaining the member '__getitem__' of a type (line 2033)
        getitem___238521 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2033, 12), call_assignment_231730_238520, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_238524 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___238521, *[int_238522], **kwargs_238523)
        
        # Assigning a type to the variable 'call_assignment_231731' (line 2033)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2033, 12), 'call_assignment_231731', getitem___call_result_238524)
        
        # Assigning a Name to a Name (line 2033):
        # Getting the type of 'call_assignment_231731' (line 2033)
        call_assignment_231731_238525 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2033, 12), 'call_assignment_231731')
        # Assigning a type to the variable 'l' (line 2033)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2033, 12), 'l', call_assignment_231731_238525)
        
        # Assigning a Call to a Name (line 2033):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_238528 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2033, 12), 'int')
        # Processing the call keyword arguments
        kwargs_238529 = {}
        # Getting the type of 'call_assignment_231730' (line 2033)
        call_assignment_231730_238526 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2033, 12), 'call_assignment_231730', False)
        # Obtaining the member '__getitem__' of a type (line 2033)
        getitem___238527 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2033, 12), call_assignment_231730_238526, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_238530 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___238527, *[int_238528], **kwargs_238529)
        
        # Assigning a type to the variable 'call_assignment_231732' (line 2033)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2033, 12), 'call_assignment_231732', getitem___call_result_238530)
        
        # Assigning a Name to a Name (line 2033):
        # Getting the type of 'call_assignment_231732' (line 2033)
        call_assignment_231732_238531 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2033, 12), 'call_assignment_231732')
        # Assigning a type to the variable 'b' (line 2033)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2033, 15), 'b', call_assignment_231732_238531)
        
        # Assigning a Call to a Name (line 2033):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_238534 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2033, 12), 'int')
        # Processing the call keyword arguments
        kwargs_238535 = {}
        # Getting the type of 'call_assignment_231730' (line 2033)
        call_assignment_231730_238532 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2033, 12), 'call_assignment_231730', False)
        # Obtaining the member '__getitem__' of a type (line 2033)
        getitem___238533 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2033, 12), call_assignment_231730_238532, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_238536 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___238533, *[int_238534], **kwargs_238535)
        
        # Assigning a type to the variable 'call_assignment_231733' (line 2033)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2033, 12), 'call_assignment_231733', getitem___call_result_238536)
        
        # Assigning a Name to a Name (line 2033):
        # Getting the type of 'call_assignment_231733' (line 2033)
        call_assignment_231733_238537 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2033, 12), 'call_assignment_231733')
        # Assigning a type to the variable 'w' (line 2033)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2033, 18), 'w', call_assignment_231733_238537)
        
        # Assigning a Call to a Name (line 2033):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_238540 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2033, 12), 'int')
        # Processing the call keyword arguments
        kwargs_238541 = {}
        # Getting the type of 'call_assignment_231730' (line 2033)
        call_assignment_231730_238538 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2033, 12), 'call_assignment_231730', False)
        # Obtaining the member '__getitem__' of a type (line 2033)
        getitem___238539 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2033, 12), call_assignment_231730_238538, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_238542 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___238539, *[int_238540], **kwargs_238541)
        
        # Assigning a type to the variable 'call_assignment_231734' (line 2033)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2033, 12), 'call_assignment_231734', getitem___call_result_238542)
        
        # Assigning a Name to a Name (line 2033):
        # Getting the type of 'call_assignment_231734' (line 2033)
        call_assignment_231734_238543 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2033, 12), 'call_assignment_231734')
        # Assigning a type to the variable 'h' (line 2033)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2033, 21), 'h', call_assignment_231734_238543)
        
        # Assigning a Num to a Name (line 2034):
        
        # Assigning a Num to a Name (line 2034):
        int_238544 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2034, 23), 'int')
        # Assigning a type to the variable 'fonttype' (line 2034)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2034, 12), 'fonttype', int_238544)
        # SSA branch for the else part of an if statement (line 2031)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Call to a Name (line 2036):
        
        # Assigning a Call to a Name (line 2036):
        
        # Call to _get_font_ttf(...): (line 2036)
        # Processing the call arguments (line 2036)
        # Getting the type of 'prop' (line 2036)
        prop_238547 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2036, 38), 'prop', False)
        # Processing the call keyword arguments (line 2036)
        kwargs_238548 = {}
        # Getting the type of 'self' (line 2036)
        self_238545 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2036, 19), 'self', False)
        # Obtaining the member '_get_font_ttf' of a type (line 2036)
        _get_font_ttf_238546 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2036, 19), self_238545, '_get_font_ttf')
        # Calling _get_font_ttf(args, kwargs) (line 2036)
        _get_font_ttf_call_result_238549 = invoke(stypy.reporting.localization.Localization(__file__, 2036, 19), _get_font_ttf_238546, *[prop_238547], **kwargs_238548)
        
        # Assigning a type to the variable 'font' (line 2036)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2036, 12), 'font', _get_font_ttf_call_result_238549)
        
        # Call to track_characters(...): (line 2037)
        # Processing the call arguments (line 2037)
        # Getting the type of 'font' (line 2037)
        font_238552 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2037, 34), 'font', False)
        # Getting the type of 's' (line 2037)
        s_238553 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2037, 40), 's', False)
        # Processing the call keyword arguments (line 2037)
        kwargs_238554 = {}
        # Getting the type of 'self' (line 2037)
        self_238550 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2037, 12), 'self', False)
        # Obtaining the member 'track_characters' of a type (line 2037)
        track_characters_238551 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2037, 12), self_238550, 'track_characters')
        # Calling track_characters(args, kwargs) (line 2037)
        track_characters_call_result_238555 = invoke(stypy.reporting.localization.Localization(__file__, 2037, 12), track_characters_238551, *[font_238552, s_238553], **kwargs_238554)
        
        
        # Call to set_text(...): (line 2038)
        # Processing the call arguments (line 2038)
        # Getting the type of 's' (line 2038)
        s_238558 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2038, 26), 's', False)
        float_238559 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2038, 29), 'float')
        # Processing the call keyword arguments (line 2038)
        # Getting the type of 'LOAD_NO_HINTING' (line 2038)
        LOAD_NO_HINTING_238560 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2038, 40), 'LOAD_NO_HINTING', False)
        keyword_238561 = LOAD_NO_HINTING_238560
        kwargs_238562 = {'flags': keyword_238561}
        # Getting the type of 'font' (line 2038)
        font_238556 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2038, 12), 'font', False)
        # Obtaining the member 'set_text' of a type (line 2038)
        set_text_238557 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2038, 12), font_238556, 'set_text')
        # Calling set_text(args, kwargs) (line 2038)
        set_text_call_result_238563 = invoke(stypy.reporting.localization.Localization(__file__, 2038, 12), set_text_238557, *[s_238558, float_238559], **kwargs_238562)
        
        
        # Assigning a Subscript to a Name (line 2040):
        
        # Assigning a Subscript to a Name (line 2040):
        
        # Obtaining the type of the subscript
        unicode_238564 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2040, 32), 'unicode', u'pdf.fonttype')
        # Getting the type of 'rcParams' (line 2040)
        rcParams_238565 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2040, 23), 'rcParams')
        # Obtaining the member '__getitem__' of a type (line 2040)
        getitem___238566 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2040, 23), rcParams_238565, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2040)
        subscript_call_result_238567 = invoke(stypy.reporting.localization.Localization(__file__, 2040, 23), getitem___238566, unicode_238564)
        
        # Assigning a type to the variable 'fonttype' (line 2040)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2040, 12), 'fonttype', subscript_call_result_238567)
        
        
        # Call to is_opentype_cff_font(...): (line 2044)
        # Processing the call arguments (line 2044)
        # Getting the type of 'font' (line 2044)
        font_238569 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2044, 36), 'font', False)
        # Obtaining the member 'fname' of a type (line 2044)
        fname_238570 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2044, 36), font_238569, 'fname')
        # Processing the call keyword arguments (line 2044)
        kwargs_238571 = {}
        # Getting the type of 'is_opentype_cff_font' (line 2044)
        is_opentype_cff_font_238568 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2044, 15), 'is_opentype_cff_font', False)
        # Calling is_opentype_cff_font(args, kwargs) (line 2044)
        is_opentype_cff_font_call_result_238572 = invoke(stypy.reporting.localization.Localization(__file__, 2044, 15), is_opentype_cff_font_238568, *[fname_238570], **kwargs_238571)
        
        # Testing the type of an if condition (line 2044)
        if_condition_238573 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2044, 12), is_opentype_cff_font_call_result_238572)
        # Assigning a type to the variable 'if_condition_238573' (line 2044)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2044, 12), 'if_condition_238573', if_condition_238573)
        # SSA begins for if statement (line 2044)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Num to a Name (line 2045):
        
        # Assigning a Num to a Name (line 2045):
        int_238574 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2045, 27), 'int')
        # Assigning a type to the variable 'fonttype' (line 2045)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2045, 16), 'fonttype', int_238574)
        # SSA join for if statement (line 2044)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 2031)
        module_type_store = module_type_store.join_ssa_context()
        

        @norecursion
        def check_simple_method(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'check_simple_method'
            module_type_store = module_type_store.open_function_context('check_simple_method', 2047, 8, False)
            
            # Passed parameters checking function
            check_simple_method.stypy_localization = localization
            check_simple_method.stypy_type_of_self = None
            check_simple_method.stypy_type_store = module_type_store
            check_simple_method.stypy_function_name = 'check_simple_method'
            check_simple_method.stypy_param_names_list = ['s']
            check_simple_method.stypy_varargs_param_name = None
            check_simple_method.stypy_kwargs_param_name = None
            check_simple_method.stypy_call_defaults = defaults
            check_simple_method.stypy_call_varargs = varargs
            check_simple_method.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'check_simple_method', ['s'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'check_simple_method', localization, ['s'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'check_simple_method(...)' code ##################

            unicode_238575 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2050, (-1)), 'unicode', u'Determine if we should use the simple or woven method\n            to output this text, and chunks the string into 1-byte and\n            2-byte sections if necessary.')
            
            # Assigning a Name to a Name (line 2051):
            
            # Assigning a Name to a Name (line 2051):
            # Getting the type of 'True' (line 2051)
            True_238576 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2051, 32), 'True')
            # Assigning a type to the variable 'use_simple_method' (line 2051)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2051, 12), 'use_simple_method', True_238576)
            
            # Assigning a List to a Name (line 2052):
            
            # Assigning a List to a Name (line 2052):
            
            # Obtaining an instance of the builtin type 'list' (line 2052)
            list_238577 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2052, 21), 'list')
            # Adding type elements to the builtin type 'list' instance (line 2052)
            
            # Assigning a type to the variable 'chunks' (line 2052)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2052, 12), 'chunks', list_238577)
            
            
            
            # Obtaining the type of the subscript
            unicode_238578 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2054, 28), 'unicode', u'pdf.use14corefonts')
            # Getting the type of 'rcParams' (line 2054)
            rcParams_238579 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2054, 19), 'rcParams')
            # Obtaining the member '__getitem__' of a type (line 2054)
            getitem___238580 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2054, 19), rcParams_238579, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 2054)
            subscript_call_result_238581 = invoke(stypy.reporting.localization.Localization(__file__, 2054, 19), getitem___238580, unicode_238578)
            
            # Applying the 'not' unary operator (line 2054)
            result_not__238582 = python_operator(stypy.reporting.localization.Localization(__file__, 2054, 15), 'not', subscript_call_result_238581)
            
            # Testing the type of an if condition (line 2054)
            if_condition_238583 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2054, 12), result_not__238582)
            # Assigning a type to the variable 'if_condition_238583' (line 2054)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2054, 12), 'if_condition_238583', if_condition_238583)
            # SSA begins for if statement (line 2054)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            
            # Evaluating a boolean operation
            
            # Getting the type of 'fonttype' (line 2055)
            fonttype_238584 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2055, 19), 'fonttype')
            int_238585 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2055, 31), 'int')
            # Applying the binary operator '==' (line 2055)
            result_eq_238586 = python_operator(stypy.reporting.localization.Localization(__file__, 2055, 19), '==', fonttype_238584, int_238585)
            
            
            
            # Call to isinstance(...): (line 2055)
            # Processing the call arguments (line 2055)
            # Getting the type of 's' (line 2055)
            s_238588 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2055, 52), 's', False)
            # Getting the type of 'bytes' (line 2055)
            bytes_238589 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2055, 55), 'bytes', False)
            # Processing the call keyword arguments (line 2055)
            kwargs_238590 = {}
            # Getting the type of 'isinstance' (line 2055)
            isinstance_238587 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2055, 41), 'isinstance', False)
            # Calling isinstance(args, kwargs) (line 2055)
            isinstance_call_result_238591 = invoke(stypy.reporting.localization.Localization(__file__, 2055, 41), isinstance_238587, *[s_238588, bytes_238589], **kwargs_238590)
            
            # Applying the 'not' unary operator (line 2055)
            result_not__238592 = python_operator(stypy.reporting.localization.Localization(__file__, 2055, 37), 'not', isinstance_call_result_238591)
            
            # Applying the binary operator 'and' (line 2055)
            result_and_keyword_238593 = python_operator(stypy.reporting.localization.Localization(__file__, 2055, 19), 'and', result_eq_238586, result_not__238592)
            
            
            # Call to len(...): (line 2055)
            # Processing the call arguments (line 2055)
            # Getting the type of 's' (line 2055)
            s_238595 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2055, 70), 's', False)
            # Processing the call keyword arguments (line 2055)
            kwargs_238596 = {}
            # Getting the type of 'len' (line 2055)
            len_238594 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2055, 66), 'len', False)
            # Calling len(args, kwargs) (line 2055)
            len_call_result_238597 = invoke(stypy.reporting.localization.Localization(__file__, 2055, 66), len_238594, *[s_238595], **kwargs_238596)
            
            int_238598 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2055, 76), 'int')
            # Applying the binary operator '!=' (line 2055)
            result_ne_238599 = python_operator(stypy.reporting.localization.Localization(__file__, 2055, 66), '!=', len_call_result_238597, int_238598)
            
            # Applying the binary operator 'and' (line 2055)
            result_and_keyword_238600 = python_operator(stypy.reporting.localization.Localization(__file__, 2055, 19), 'and', result_and_keyword_238593, result_ne_238599)
            
            # Testing the type of an if condition (line 2055)
            if_condition_238601 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2055, 16), result_and_keyword_238600)
            # Assigning a type to the variable 'if_condition_238601' (line 2055)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2055, 16), 'if_condition_238601', if_condition_238601)
            # SSA begins for if statement (line 2055)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Call to a Name (line 2058):
            
            # Assigning a Call to a Name (line 2058):
            
            # Call to text_type(...): (line 2058)
            # Processing the call arguments (line 2058)
            # Getting the type of 's' (line 2058)
            s_238604 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2058, 38), 's', False)
            # Processing the call keyword arguments (line 2058)
            kwargs_238605 = {}
            # Getting the type of 'six' (line 2058)
            six_238602 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2058, 24), 'six', False)
            # Obtaining the member 'text_type' of a type (line 2058)
            text_type_238603 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2058, 24), six_238602, 'text_type')
            # Calling text_type(args, kwargs) (line 2058)
            text_type_call_result_238606 = invoke(stypy.reporting.localization.Localization(__file__, 2058, 24), text_type_238603, *[s_238604], **kwargs_238605)
            
            # Assigning a type to the variable 's' (line 2058)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2058, 20), 's', text_type_call_result_238606)
            
            # Getting the type of 's' (line 2059)
            s_238607 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2059, 29), 's')
            # Testing the type of a for loop iterable (line 2059)
            is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2059, 20), s_238607)
            # Getting the type of the for loop variable (line 2059)
            for_loop_var_238608 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2059, 20), s_238607)
            # Assigning a type to the variable 'c' (line 2059)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2059, 20), 'c', for_loop_var_238608)
            # SSA begins for a for statement (line 2059)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
            
            
            
            # Call to ord(...): (line 2060)
            # Processing the call arguments (line 2060)
            # Getting the type of 'c' (line 2060)
            c_238610 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2060, 31), 'c', False)
            # Processing the call keyword arguments (line 2060)
            kwargs_238611 = {}
            # Getting the type of 'ord' (line 2060)
            ord_238609 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2060, 27), 'ord', False)
            # Calling ord(args, kwargs) (line 2060)
            ord_call_result_238612 = invoke(stypy.reporting.localization.Localization(__file__, 2060, 27), ord_238609, *[c_238610], **kwargs_238611)
            
            int_238613 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2060, 37), 'int')
            # Applying the binary operator '<=' (line 2060)
            result_le_238614 = python_operator(stypy.reporting.localization.Localization(__file__, 2060, 27), '<=', ord_call_result_238612, int_238613)
            
            # Testing the type of an if condition (line 2060)
            if_condition_238615 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2060, 24), result_le_238614)
            # Assigning a type to the variable 'if_condition_238615' (line 2060)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2060, 24), 'if_condition_238615', if_condition_238615)
            # SSA begins for if statement (line 2060)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Num to a Name (line 2061):
            
            # Assigning a Num to a Name (line 2061):
            int_238616 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2061, 40), 'int')
            # Assigning a type to the variable 'char_type' (line 2061)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2061, 28), 'char_type', int_238616)
            # SSA branch for the else part of an if statement (line 2060)
            module_type_store.open_ssa_branch('else')
            
            # Assigning a Num to a Name (line 2063):
            
            # Assigning a Num to a Name (line 2063):
            int_238617 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2063, 40), 'int')
            # Assigning a type to the variable 'char_type' (line 2063)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2063, 28), 'char_type', int_238617)
            # SSA join for if statement (line 2060)
            module_type_store = module_type_store.join_ssa_context()
            
            
            
            # Evaluating a boolean operation
            
            # Call to len(...): (line 2064)
            # Processing the call arguments (line 2064)
            # Getting the type of 'chunks' (line 2064)
            chunks_238619 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2064, 31), 'chunks', False)
            # Processing the call keyword arguments (line 2064)
            kwargs_238620 = {}
            # Getting the type of 'len' (line 2064)
            len_238618 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2064, 27), 'len', False)
            # Calling len(args, kwargs) (line 2064)
            len_call_result_238621 = invoke(stypy.reporting.localization.Localization(__file__, 2064, 27), len_238618, *[chunks_238619], **kwargs_238620)
            
            
            
            # Obtaining the type of the subscript
            int_238622 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2064, 54), 'int')
            
            # Obtaining the type of the subscript
            int_238623 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2064, 50), 'int')
            # Getting the type of 'chunks' (line 2064)
            chunks_238624 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2064, 43), 'chunks')
            # Obtaining the member '__getitem__' of a type (line 2064)
            getitem___238625 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2064, 43), chunks_238624, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 2064)
            subscript_call_result_238626 = invoke(stypy.reporting.localization.Localization(__file__, 2064, 43), getitem___238625, int_238623)
            
            # Obtaining the member '__getitem__' of a type (line 2064)
            getitem___238627 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2064, 43), subscript_call_result_238626, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 2064)
            subscript_call_result_238628 = invoke(stypy.reporting.localization.Localization(__file__, 2064, 43), getitem___238627, int_238622)
            
            # Getting the type of 'char_type' (line 2064)
            char_type_238629 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2064, 60), 'char_type')
            # Applying the binary operator '==' (line 2064)
            result_eq_238630 = python_operator(stypy.reporting.localization.Localization(__file__, 2064, 43), '==', subscript_call_result_238628, char_type_238629)
            
            # Applying the binary operator 'and' (line 2064)
            result_and_keyword_238631 = python_operator(stypy.reporting.localization.Localization(__file__, 2064, 27), 'and', len_call_result_238621, result_eq_238630)
            
            # Testing the type of an if condition (line 2064)
            if_condition_238632 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2064, 24), result_and_keyword_238631)
            # Assigning a type to the variable 'if_condition_238632' (line 2064)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2064, 24), 'if_condition_238632', if_condition_238632)
            # SSA begins for if statement (line 2064)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Call to append(...): (line 2065)
            # Processing the call arguments (line 2065)
            # Getting the type of 'c' (line 2065)
            c_238641 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2065, 49), 'c', False)
            # Processing the call keyword arguments (line 2065)
            kwargs_238642 = {}
            
            # Obtaining the type of the subscript
            int_238633 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2065, 39), 'int')
            
            # Obtaining the type of the subscript
            int_238634 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2065, 35), 'int')
            # Getting the type of 'chunks' (line 2065)
            chunks_238635 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2065, 28), 'chunks', False)
            # Obtaining the member '__getitem__' of a type (line 2065)
            getitem___238636 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2065, 28), chunks_238635, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 2065)
            subscript_call_result_238637 = invoke(stypy.reporting.localization.Localization(__file__, 2065, 28), getitem___238636, int_238634)
            
            # Obtaining the member '__getitem__' of a type (line 2065)
            getitem___238638 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2065, 28), subscript_call_result_238637, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 2065)
            subscript_call_result_238639 = invoke(stypy.reporting.localization.Localization(__file__, 2065, 28), getitem___238638, int_238633)
            
            # Obtaining the member 'append' of a type (line 2065)
            append_238640 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2065, 28), subscript_call_result_238639, 'append')
            # Calling append(args, kwargs) (line 2065)
            append_call_result_238643 = invoke(stypy.reporting.localization.Localization(__file__, 2065, 28), append_238640, *[c_238641], **kwargs_238642)
            
            # SSA branch for the else part of an if statement (line 2064)
            module_type_store.open_ssa_branch('else')
            
            # Call to append(...): (line 2067)
            # Processing the call arguments (line 2067)
            
            # Obtaining an instance of the builtin type 'tuple' (line 2067)
            tuple_238646 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2067, 43), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 2067)
            # Adding element type (line 2067)
            # Getting the type of 'char_type' (line 2067)
            char_type_238647 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2067, 43), 'char_type', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2067, 43), tuple_238646, char_type_238647)
            # Adding element type (line 2067)
            
            # Obtaining an instance of the builtin type 'list' (line 2067)
            list_238648 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2067, 54), 'list')
            # Adding type elements to the builtin type 'list' instance (line 2067)
            # Adding element type (line 2067)
            # Getting the type of 'c' (line 2067)
            c_238649 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2067, 55), 'c', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2067, 54), list_238648, c_238649)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2067, 43), tuple_238646, list_238648)
            
            # Processing the call keyword arguments (line 2067)
            kwargs_238650 = {}
            # Getting the type of 'chunks' (line 2067)
            chunks_238644 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2067, 28), 'chunks', False)
            # Obtaining the member 'append' of a type (line 2067)
            append_238645 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2067, 28), chunks_238644, 'append')
            # Calling append(args, kwargs) (line 2067)
            append_call_result_238651 = invoke(stypy.reporting.localization.Localization(__file__, 2067, 28), append_238645, *[tuple_238646], **kwargs_238650)
            
            # SSA join for if statement (line 2064)
            module_type_store = module_type_store.join_ssa_context()
            
            # SSA join for a for statement
            module_type_store = module_type_store.join_ssa_context()
            
            
            # Assigning a BoolOp to a Name (line 2068):
            
            # Assigning a BoolOp to a Name (line 2068):
            
            # Evaluating a boolean operation
            
            
            # Call to len(...): (line 2068)
            # Processing the call arguments (line 2068)
            # Getting the type of 'chunks' (line 2068)
            chunks_238653 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2068, 45), 'chunks', False)
            # Processing the call keyword arguments (line 2068)
            kwargs_238654 = {}
            # Getting the type of 'len' (line 2068)
            len_238652 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2068, 41), 'len', False)
            # Calling len(args, kwargs) (line 2068)
            len_call_result_238655 = invoke(stypy.reporting.localization.Localization(__file__, 2068, 41), len_238652, *[chunks_238653], **kwargs_238654)
            
            int_238656 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2068, 56), 'int')
            # Applying the binary operator '==' (line 2068)
            result_eq_238657 = python_operator(stypy.reporting.localization.Localization(__file__, 2068, 41), '==', len_call_result_238655, int_238656)
            
            
            
            # Obtaining the type of the subscript
            int_238658 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2069, 52), 'int')
            
            # Obtaining the type of the subscript
            int_238659 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2069, 48), 'int')
            # Getting the type of 'chunks' (line 2069)
            chunks_238660 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2069, 41), 'chunks')
            # Obtaining the member '__getitem__' of a type (line 2069)
            getitem___238661 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2069, 41), chunks_238660, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 2069)
            subscript_call_result_238662 = invoke(stypy.reporting.localization.Localization(__file__, 2069, 41), getitem___238661, int_238659)
            
            # Obtaining the member '__getitem__' of a type (line 2069)
            getitem___238663 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2069, 41), subscript_call_result_238662, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 2069)
            subscript_call_result_238664 = invoke(stypy.reporting.localization.Localization(__file__, 2069, 41), getitem___238663, int_238658)
            
            int_238665 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2069, 58), 'int')
            # Applying the binary operator '==' (line 2069)
            result_eq_238666 = python_operator(stypy.reporting.localization.Localization(__file__, 2069, 41), '==', subscript_call_result_238664, int_238665)
            
            # Applying the binary operator 'and' (line 2068)
            result_and_keyword_238667 = python_operator(stypy.reporting.localization.Localization(__file__, 2068, 41), 'and', result_eq_238657, result_eq_238666)
            
            # Assigning a type to the variable 'use_simple_method' (line 2068)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2068, 20), 'use_simple_method', result_and_keyword_238667)
            # SSA join for if statement (line 2055)
            module_type_store = module_type_store.join_ssa_context()
            
            # SSA join for if statement (line 2054)
            module_type_store = module_type_store.join_ssa_context()
            
            
            # Obtaining an instance of the builtin type 'tuple' (line 2070)
            tuple_238668 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2070, 19), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 2070)
            # Adding element type (line 2070)
            # Getting the type of 'use_simple_method' (line 2070)
            use_simple_method_238669 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2070, 19), 'use_simple_method')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2070, 19), tuple_238668, use_simple_method_238669)
            # Adding element type (line 2070)
            # Getting the type of 'chunks' (line 2070)
            chunks_238670 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2070, 38), 'chunks')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2070, 19), tuple_238668, chunks_238670)
            
            # Assigning a type to the variable 'stypy_return_type' (line 2070)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2070, 12), 'stypy_return_type', tuple_238668)
            
            # ################# End of 'check_simple_method(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'check_simple_method' in the type store
            # Getting the type of 'stypy_return_type' (line 2047)
            stypy_return_type_238671 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2047, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_238671)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'check_simple_method'
            return stypy_return_type_238671

        # Assigning a type to the variable 'check_simple_method' (line 2047)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2047, 8), 'check_simple_method', check_simple_method)

        @norecursion
        def draw_text_simple(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'draw_text_simple'
            module_type_store = module_type_store.open_function_context('draw_text_simple', 2072, 8, False)
            
            # Passed parameters checking function
            draw_text_simple.stypy_localization = localization
            draw_text_simple.stypy_type_of_self = None
            draw_text_simple.stypy_type_store = module_type_store
            draw_text_simple.stypy_function_name = 'draw_text_simple'
            draw_text_simple.stypy_param_names_list = []
            draw_text_simple.stypy_varargs_param_name = None
            draw_text_simple.stypy_kwargs_param_name = None
            draw_text_simple.stypy_call_defaults = defaults
            draw_text_simple.stypy_call_varargs = varargs
            draw_text_simple.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'draw_text_simple', [], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'draw_text_simple', localization, [], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'draw_text_simple(...)' code ##################

            unicode_238672 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2073, 12), 'unicode', u'Outputs text using the simple method.')
            
            # Call to output(...): (line 2074)
            # Processing the call arguments (line 2074)
            # Getting the type of 'Op' (line 2074)
            Op_238676 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2074, 29), 'Op', False)
            # Obtaining the member 'begin_text' of a type (line 2074)
            begin_text_238677 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2074, 29), Op_238676, 'begin_text')
            
            # Call to fontName(...): (line 2075)
            # Processing the call arguments (line 2075)
            # Getting the type of 'prop' (line 2075)
            prop_238681 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2075, 48), 'prop', False)
            # Processing the call keyword arguments (line 2075)
            kwargs_238682 = {}
            # Getting the type of 'self' (line 2075)
            self_238678 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2075, 29), 'self', False)
            # Obtaining the member 'file' of a type (line 2075)
            file_238679 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2075, 29), self_238678, 'file')
            # Obtaining the member 'fontName' of a type (line 2075)
            fontName_238680 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2075, 29), file_238679, 'fontName')
            # Calling fontName(args, kwargs) (line 2075)
            fontName_call_result_238683 = invoke(stypy.reporting.localization.Localization(__file__, 2075, 29), fontName_238680, *[prop_238681], **kwargs_238682)
            
            # Getting the type of 'fontsize' (line 2076)
            fontsize_238684 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2076, 29), 'fontsize', False)
            # Getting the type of 'Op' (line 2077)
            Op_238685 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2077, 29), 'Op', False)
            # Obtaining the member 'selectfont' of a type (line 2077)
            selectfont_238686 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2077, 29), Op_238685, 'selectfont')
            # Processing the call keyword arguments (line 2074)
            kwargs_238687 = {}
            # Getting the type of 'self' (line 2074)
            self_238673 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2074, 12), 'self', False)
            # Obtaining the member 'file' of a type (line 2074)
            file_238674 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2074, 12), self_238673, 'file')
            # Obtaining the member 'output' of a type (line 2074)
            output_238675 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2074, 12), file_238674, 'output')
            # Calling output(args, kwargs) (line 2074)
            output_call_result_238688 = invoke(stypy.reporting.localization.Localization(__file__, 2074, 12), output_238675, *[begin_text_238677, fontName_call_result_238683, fontsize_238684, selectfont_238686], **kwargs_238687)
            
            
            # Call to _setup_textpos(...): (line 2078)
            # Processing the call arguments (line 2078)
            # Getting the type of 'x' (line 2078)
            x_238691 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2078, 32), 'x', False)
            # Getting the type of 'y' (line 2078)
            y_238692 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2078, 35), 'y', False)
            # Getting the type of 'angle' (line 2078)
            angle_238693 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2078, 38), 'angle', False)
            # Processing the call keyword arguments (line 2078)
            kwargs_238694 = {}
            # Getting the type of 'self' (line 2078)
            self_238689 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2078, 12), 'self', False)
            # Obtaining the member '_setup_textpos' of a type (line 2078)
            _setup_textpos_238690 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2078, 12), self_238689, '_setup_textpos')
            # Calling _setup_textpos(args, kwargs) (line 2078)
            _setup_textpos_call_result_238695 = invoke(stypy.reporting.localization.Localization(__file__, 2078, 12), _setup_textpos_238690, *[x_238691, y_238692, angle_238693], **kwargs_238694)
            
            
            # Call to output(...): (line 2079)
            # Processing the call arguments (line 2079)
            
            # Call to encode_string(...): (line 2079)
            # Processing the call arguments (line 2079)
            # Getting the type of 's' (line 2079)
            s_238701 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2079, 48), 's', False)
            # Getting the type of 'fonttype' (line 2079)
            fonttype_238702 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2079, 51), 'fonttype', False)
            # Processing the call keyword arguments (line 2079)
            kwargs_238703 = {}
            # Getting the type of 'self' (line 2079)
            self_238699 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2079, 29), 'self', False)
            # Obtaining the member 'encode_string' of a type (line 2079)
            encode_string_238700 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2079, 29), self_238699, 'encode_string')
            # Calling encode_string(args, kwargs) (line 2079)
            encode_string_call_result_238704 = invoke(stypy.reporting.localization.Localization(__file__, 2079, 29), encode_string_238700, *[s_238701, fonttype_238702], **kwargs_238703)
            
            # Getting the type of 'Op' (line 2079)
            Op_238705 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2079, 62), 'Op', False)
            # Obtaining the member 'show' of a type (line 2079)
            show_238706 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2079, 62), Op_238705, 'show')
            # Getting the type of 'Op' (line 2080)
            Op_238707 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2080, 29), 'Op', False)
            # Obtaining the member 'end_text' of a type (line 2080)
            end_text_238708 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2080, 29), Op_238707, 'end_text')
            # Processing the call keyword arguments (line 2079)
            kwargs_238709 = {}
            # Getting the type of 'self' (line 2079)
            self_238696 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2079, 12), 'self', False)
            # Obtaining the member 'file' of a type (line 2079)
            file_238697 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2079, 12), self_238696, 'file')
            # Obtaining the member 'output' of a type (line 2079)
            output_238698 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2079, 12), file_238697, 'output')
            # Calling output(args, kwargs) (line 2079)
            output_call_result_238710 = invoke(stypy.reporting.localization.Localization(__file__, 2079, 12), output_238698, *[encode_string_call_result_238704, show_238706, end_text_238708], **kwargs_238709)
            
            
            # ################# End of 'draw_text_simple(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'draw_text_simple' in the type store
            # Getting the type of 'stypy_return_type' (line 2072)
            stypy_return_type_238711 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2072, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_238711)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'draw_text_simple'
            return stypy_return_type_238711

        # Assigning a type to the variable 'draw_text_simple' (line 2072)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2072, 8), 'draw_text_simple', draw_text_simple)

        @norecursion
        def draw_text_woven(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'draw_text_woven'
            module_type_store = module_type_store.open_function_context('draw_text_woven', 2082, 8, False)
            
            # Passed parameters checking function
            draw_text_woven.stypy_localization = localization
            draw_text_woven.stypy_type_of_self = None
            draw_text_woven.stypy_type_store = module_type_store
            draw_text_woven.stypy_function_name = 'draw_text_woven'
            draw_text_woven.stypy_param_names_list = ['chunks']
            draw_text_woven.stypy_varargs_param_name = None
            draw_text_woven.stypy_kwargs_param_name = None
            draw_text_woven.stypy_call_defaults = defaults
            draw_text_woven.stypy_call_varargs = varargs
            draw_text_woven.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'draw_text_woven', ['chunks'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'draw_text_woven', localization, ['chunks'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'draw_text_woven(...)' code ##################

            unicode_238712 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2085, (-1)), 'unicode', u'Outputs text using the woven method, alternating\n            between chunks of 1-byte characters and 2-byte characters.\n            Only used for Type 3 fonts.')
            
            # Assigning a ListComp to a Name (line 2086):
            
            # Assigning a ListComp to a Name (line 2086):
            # Calculating list comprehension
            # Calculating comprehension expression
            # Getting the type of 'chunks' (line 2086)
            chunks_238720 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2086, 50), 'chunks')
            comprehension_238721 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2086, 22), chunks_238720)
            # Assigning a type to the variable 'a' (line 2086)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2086, 22), 'a', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2086, 22), comprehension_238721))
            # Assigning a type to the variable 'b' (line 2086)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2086, 22), 'b', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2086, 22), comprehension_238721))
            
            # Obtaining an instance of the builtin type 'tuple' (line 2086)
            tuple_238713 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2086, 23), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 2086)
            # Adding element type (line 2086)
            # Getting the type of 'a' (line 2086)
            a_238714 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2086, 23), 'a')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2086, 23), tuple_238713, a_238714)
            # Adding element type (line 2086)
            
            # Call to join(...): (line 2086)
            # Processing the call arguments (line 2086)
            # Getting the type of 'b' (line 2086)
            b_238717 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2086, 34), 'b', False)
            # Processing the call keyword arguments (line 2086)
            kwargs_238718 = {}
            unicode_238715 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2086, 26), 'unicode', u'')
            # Obtaining the member 'join' of a type (line 2086)
            join_238716 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2086, 26), unicode_238715, 'join')
            # Calling join(args, kwargs) (line 2086)
            join_call_result_238719 = invoke(stypy.reporting.localization.Localization(__file__, 2086, 26), join_238716, *[b_238717], **kwargs_238718)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2086, 23), tuple_238713, join_call_result_238719)
            
            list_238722 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2086, 22), 'list')
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2086, 22), list_238722, tuple_238713)
            # Assigning a type to the variable 'chunks' (line 2086)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2086, 12), 'chunks', list_238722)
            
            # Call to output(...): (line 2090)
            # Processing the call arguments (line 2090)
            # Getting the type of 'Op' (line 2090)
            Op_238726 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2090, 29), 'Op', False)
            # Obtaining the member 'gsave' of a type (line 2090)
            gsave_238727 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2090, 29), Op_238726, 'gsave')
            # Processing the call keyword arguments (line 2090)
            kwargs_238728 = {}
            # Getting the type of 'self' (line 2090)
            self_238723 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2090, 12), 'self', False)
            # Obtaining the member 'file' of a type (line 2090)
            file_238724 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2090, 12), self_238723, 'file')
            # Obtaining the member 'output' of a type (line 2090)
            output_238725 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2090, 12), file_238724, 'output')
            # Calling output(args, kwargs) (line 2090)
            output_call_result_238729 = invoke(stypy.reporting.localization.Localization(__file__, 2090, 12), output_238725, *[gsave_238727], **kwargs_238728)
            
            
            # Assigning a BinOp to a Name (line 2091):
            
            # Assigning a BinOp to a Name (line 2091):
            # Getting the type of 'angle' (line 2091)
            angle_238730 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2091, 16), 'angle')
            float_238731 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2091, 24), 'float')
            # Applying the binary operator 'div' (line 2091)
            result_div_238732 = python_operator(stypy.reporting.localization.Localization(__file__, 2091, 16), 'div', angle_238730, float_238731)
            
            # Getting the type of 'pi' (line 2091)
            pi_238733 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2091, 32), 'pi')
            # Applying the binary operator '*' (line 2091)
            result_mul_238734 = python_operator(stypy.reporting.localization.Localization(__file__, 2091, 30), '*', result_div_238732, pi_238733)
            
            # Assigning a type to the variable 'a' (line 2091)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2091, 12), 'a', result_mul_238734)
            
            # Call to output(...): (line 2092)
            # Processing the call arguments (line 2092)
            
            # Call to cos(...): (line 2092)
            # Processing the call arguments (line 2092)
            # Getting the type of 'a' (line 2092)
            a_238739 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2092, 33), 'a', False)
            # Processing the call keyword arguments (line 2092)
            kwargs_238740 = {}
            # Getting the type of 'cos' (line 2092)
            cos_238738 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2092, 29), 'cos', False)
            # Calling cos(args, kwargs) (line 2092)
            cos_call_result_238741 = invoke(stypy.reporting.localization.Localization(__file__, 2092, 29), cos_238738, *[a_238739], **kwargs_238740)
            
            
            # Call to sin(...): (line 2092)
            # Processing the call arguments (line 2092)
            # Getting the type of 'a' (line 2092)
            a_238743 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2092, 41), 'a', False)
            # Processing the call keyword arguments (line 2092)
            kwargs_238744 = {}
            # Getting the type of 'sin' (line 2092)
            sin_238742 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2092, 37), 'sin', False)
            # Calling sin(args, kwargs) (line 2092)
            sin_call_result_238745 = invoke(stypy.reporting.localization.Localization(__file__, 2092, 37), sin_238742, *[a_238743], **kwargs_238744)
            
            
            
            # Call to sin(...): (line 2092)
            # Processing the call arguments (line 2092)
            # Getting the type of 'a' (line 2092)
            a_238747 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2092, 50), 'a', False)
            # Processing the call keyword arguments (line 2092)
            kwargs_238748 = {}
            # Getting the type of 'sin' (line 2092)
            sin_238746 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2092, 46), 'sin', False)
            # Calling sin(args, kwargs) (line 2092)
            sin_call_result_238749 = invoke(stypy.reporting.localization.Localization(__file__, 2092, 46), sin_238746, *[a_238747], **kwargs_238748)
            
            # Applying the 'usub' unary operator (line 2092)
            result___neg___238750 = python_operator(stypy.reporting.localization.Localization(__file__, 2092, 45), 'usub', sin_call_result_238749)
            
            
            # Call to cos(...): (line 2092)
            # Processing the call arguments (line 2092)
            # Getting the type of 'a' (line 2092)
            a_238752 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2092, 58), 'a', False)
            # Processing the call keyword arguments (line 2092)
            kwargs_238753 = {}
            # Getting the type of 'cos' (line 2092)
            cos_238751 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2092, 54), 'cos', False)
            # Calling cos(args, kwargs) (line 2092)
            cos_call_result_238754 = invoke(stypy.reporting.localization.Localization(__file__, 2092, 54), cos_238751, *[a_238752], **kwargs_238753)
            
            # Getting the type of 'x' (line 2092)
            x_238755 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2092, 62), 'x', False)
            # Getting the type of 'y' (line 2092)
            y_238756 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2092, 65), 'y', False)
            # Getting the type of 'Op' (line 2093)
            Op_238757 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2093, 29), 'Op', False)
            # Obtaining the member 'concat_matrix' of a type (line 2093)
            concat_matrix_238758 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2093, 29), Op_238757, 'concat_matrix')
            # Processing the call keyword arguments (line 2092)
            kwargs_238759 = {}
            # Getting the type of 'self' (line 2092)
            self_238735 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2092, 12), 'self', False)
            # Obtaining the member 'file' of a type (line 2092)
            file_238736 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2092, 12), self_238735, 'file')
            # Obtaining the member 'output' of a type (line 2092)
            output_238737 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2092, 12), file_238736, 'output')
            # Calling output(args, kwargs) (line 2092)
            output_call_result_238760 = invoke(stypy.reporting.localization.Localization(__file__, 2092, 12), output_238737, *[cos_call_result_238741, sin_call_result_238745, result___neg___238750, cos_call_result_238754, x_238755, y_238756, concat_matrix_238758], **kwargs_238759)
            
            
            
            # Obtaining an instance of the builtin type 'tuple' (line 2097)
            tuple_238761 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2097, 25), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 2097)
            # Adding element type (line 2097)
            int_238762 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2097, 25), 'int')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2097, 25), tuple_238761, int_238762)
            # Adding element type (line 2097)
            int_238763 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2097, 28), 'int')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2097, 25), tuple_238761, int_238763)
            
            # Testing the type of a for loop iterable (line 2097)
            is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2097, 12), tuple_238761)
            # Getting the type of the for loop variable (line 2097)
            for_loop_var_238764 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2097, 12), tuple_238761)
            # Assigning a type to the variable 'mode' (line 2097)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2097, 12), 'mode', for_loop_var_238764)
            # SSA begins for a for statement (line 2097)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
            
            # Multiple assignment of 2 elements.
            
            # Assigning a Num to a Name (line 2098):
            int_238765 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2098, 30), 'int')
            # Assigning a type to the variable 'oldx' (line 2098)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2098, 23), 'oldx', int_238765)
            
            # Assigning a Name to a Name (line 2098):
            # Getting the type of 'oldx' (line 2098)
            oldx_238766 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2098, 23), 'oldx')
            # Assigning a type to the variable 'newx' (line 2098)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2098, 16), 'newx', oldx_238766)
            
            
            # Getting the type of 'mode' (line 2100)
            mode_238767 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2100, 19), 'mode')
            int_238768 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2100, 27), 'int')
            # Applying the binary operator '==' (line 2100)
            result_eq_238769 = python_operator(stypy.reporting.localization.Localization(__file__, 2100, 19), '==', mode_238767, int_238768)
            
            # Testing the type of an if condition (line 2100)
            if_condition_238770 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2100, 16), result_eq_238769)
            # Assigning a type to the variable 'if_condition_238770' (line 2100)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2100, 16), 'if_condition_238770', if_condition_238770)
            # SSA begins for if statement (line 2100)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Call to output(...): (line 2101)
            # Processing the call arguments (line 2101)
            # Getting the type of 'Op' (line 2101)
            Op_238774 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2101, 37), 'Op', False)
            # Obtaining the member 'begin_text' of a type (line 2101)
            begin_text_238775 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2101, 37), Op_238774, 'begin_text')
            
            # Call to fontName(...): (line 2102)
            # Processing the call arguments (line 2102)
            # Getting the type of 'prop' (line 2102)
            prop_238779 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2102, 56), 'prop', False)
            # Processing the call keyword arguments (line 2102)
            kwargs_238780 = {}
            # Getting the type of 'self' (line 2102)
            self_238776 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2102, 37), 'self', False)
            # Obtaining the member 'file' of a type (line 2102)
            file_238777 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2102, 37), self_238776, 'file')
            # Obtaining the member 'fontName' of a type (line 2102)
            fontName_238778 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2102, 37), file_238777, 'fontName')
            # Calling fontName(args, kwargs) (line 2102)
            fontName_call_result_238781 = invoke(stypy.reporting.localization.Localization(__file__, 2102, 37), fontName_238778, *[prop_238779], **kwargs_238780)
            
            # Getting the type of 'fontsize' (line 2103)
            fontsize_238782 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2103, 37), 'fontsize', False)
            # Getting the type of 'Op' (line 2104)
            Op_238783 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2104, 37), 'Op', False)
            # Obtaining the member 'selectfont' of a type (line 2104)
            selectfont_238784 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2104, 37), Op_238783, 'selectfont')
            # Processing the call keyword arguments (line 2101)
            kwargs_238785 = {}
            # Getting the type of 'self' (line 2101)
            self_238771 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2101, 20), 'self', False)
            # Obtaining the member 'file' of a type (line 2101)
            file_238772 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2101, 20), self_238771, 'file')
            # Obtaining the member 'output' of a type (line 2101)
            output_238773 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2101, 20), file_238772, 'output')
            # Calling output(args, kwargs) (line 2101)
            output_call_result_238786 = invoke(stypy.reporting.localization.Localization(__file__, 2101, 20), output_238773, *[begin_text_238775, fontName_call_result_238781, fontsize_238782, selectfont_238784], **kwargs_238785)
            
            # SSA join for if statement (line 2100)
            module_type_store = module_type_store.join_ssa_context()
            
            
            # Getting the type of 'chunks' (line 2106)
            chunks_238787 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2106, 41), 'chunks')
            # Testing the type of a for loop iterable (line 2106)
            is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2106, 16), chunks_238787)
            # Getting the type of the for loop variable (line 2106)
            for_loop_var_238788 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2106, 16), chunks_238787)
            # Assigning a type to the variable 'chunk_type' (line 2106)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2106, 16), 'chunk_type', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2106, 16), for_loop_var_238788))
            # Assigning a type to the variable 'chunk' (line 2106)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2106, 16), 'chunk', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2106, 16), for_loop_var_238788))
            # SSA begins for a for statement (line 2106)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
            
            
            # Evaluating a boolean operation
            
            # Getting the type of 'mode' (line 2107)
            mode_238789 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2107, 23), 'mode')
            int_238790 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2107, 31), 'int')
            # Applying the binary operator '==' (line 2107)
            result_eq_238791 = python_operator(stypy.reporting.localization.Localization(__file__, 2107, 23), '==', mode_238789, int_238790)
            
            
            # Getting the type of 'chunk_type' (line 2107)
            chunk_type_238792 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2107, 37), 'chunk_type')
            int_238793 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2107, 51), 'int')
            # Applying the binary operator '==' (line 2107)
            result_eq_238794 = python_operator(stypy.reporting.localization.Localization(__file__, 2107, 37), '==', chunk_type_238792, int_238793)
            
            # Applying the binary operator 'and' (line 2107)
            result_and_keyword_238795 = python_operator(stypy.reporting.localization.Localization(__file__, 2107, 23), 'and', result_eq_238791, result_eq_238794)
            
            # Testing the type of an if condition (line 2107)
            if_condition_238796 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2107, 20), result_and_keyword_238795)
            # Assigning a type to the variable 'if_condition_238796' (line 2107)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2107, 20), 'if_condition_238796', if_condition_238796)
            # SSA begins for if statement (line 2107)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Call to _setup_textpos(...): (line 2108)
            # Processing the call arguments (line 2108)
            # Getting the type of 'newx' (line 2108)
            newx_238799 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2108, 44), 'newx', False)
            int_238800 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2108, 50), 'int')
            int_238801 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2108, 53), 'int')
            # Getting the type of 'oldx' (line 2108)
            oldx_238802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2108, 56), 'oldx', False)
            int_238803 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2108, 62), 'int')
            int_238804 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2108, 65), 'int')
            # Processing the call keyword arguments (line 2108)
            kwargs_238805 = {}
            # Getting the type of 'self' (line 2108)
            self_238797 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2108, 24), 'self', False)
            # Obtaining the member '_setup_textpos' of a type (line 2108)
            _setup_textpos_238798 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2108, 24), self_238797, '_setup_textpos')
            # Calling _setup_textpos(args, kwargs) (line 2108)
            _setup_textpos_call_result_238806 = invoke(stypy.reporting.localization.Localization(__file__, 2108, 24), _setup_textpos_238798, *[newx_238799, int_238800, int_238801, oldx_238802, int_238803, int_238804], **kwargs_238805)
            
            
            # Call to output(...): (line 2109)
            # Processing the call arguments (line 2109)
            
            # Call to encode_string(...): (line 2109)
            # Processing the call arguments (line 2109)
            # Getting the type of 'chunk' (line 2109)
            chunk_238812 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2109, 60), 'chunk', False)
            # Getting the type of 'fonttype' (line 2109)
            fonttype_238813 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2109, 67), 'fonttype', False)
            # Processing the call keyword arguments (line 2109)
            kwargs_238814 = {}
            # Getting the type of 'self' (line 2109)
            self_238810 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2109, 41), 'self', False)
            # Obtaining the member 'encode_string' of a type (line 2109)
            encode_string_238811 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2109, 41), self_238810, 'encode_string')
            # Calling encode_string(args, kwargs) (line 2109)
            encode_string_call_result_238815 = invoke(stypy.reporting.localization.Localization(__file__, 2109, 41), encode_string_238811, *[chunk_238812, fonttype_238813], **kwargs_238814)
            
            # Getting the type of 'Op' (line 2110)
            Op_238816 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2110, 41), 'Op', False)
            # Obtaining the member 'show' of a type (line 2110)
            show_238817 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2110, 41), Op_238816, 'show')
            # Processing the call keyword arguments (line 2109)
            kwargs_238818 = {}
            # Getting the type of 'self' (line 2109)
            self_238807 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2109, 24), 'self', False)
            # Obtaining the member 'file' of a type (line 2109)
            file_238808 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2109, 24), self_238807, 'file')
            # Obtaining the member 'output' of a type (line 2109)
            output_238809 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2109, 24), file_238808, 'output')
            # Calling output(args, kwargs) (line 2109)
            output_call_result_238819 = invoke(stypy.reporting.localization.Localization(__file__, 2109, 24), output_238809, *[encode_string_call_result_238815, show_238817], **kwargs_238818)
            
            
            # Assigning a Name to a Name (line 2111):
            
            # Assigning a Name to a Name (line 2111):
            # Getting the type of 'newx' (line 2111)
            newx_238820 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2111, 31), 'newx')
            # Assigning a type to the variable 'oldx' (line 2111)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2111, 24), 'oldx', newx_238820)
            # SSA join for if statement (line 2107)
            module_type_store = module_type_store.join_ssa_context()
            
            
            # Assigning a Name to a Name (line 2113):
            
            # Assigning a Name to a Name (line 2113):
            # Getting the type of 'None' (line 2113)
            None_238821 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2113, 31), 'None')
            # Assigning a type to the variable 'lastgind' (line 2113)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2113, 20), 'lastgind', None_238821)
            
            # Getting the type of 'chunk' (line 2114)
            chunk_238822 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2114, 29), 'chunk')
            # Testing the type of a for loop iterable (line 2114)
            is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2114, 20), chunk_238822)
            # Getting the type of the for loop variable (line 2114)
            for_loop_var_238823 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2114, 20), chunk_238822)
            # Assigning a type to the variable 'c' (line 2114)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2114, 20), 'c', for_loop_var_238823)
            # SSA begins for a for statement (line 2114)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
            
            # Assigning a Call to a Name (line 2115):
            
            # Assigning a Call to a Name (line 2115):
            
            # Call to ord(...): (line 2115)
            # Processing the call arguments (line 2115)
            # Getting the type of 'c' (line 2115)
            c_238825 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2115, 36), 'c', False)
            # Processing the call keyword arguments (line 2115)
            kwargs_238826 = {}
            # Getting the type of 'ord' (line 2115)
            ord_238824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2115, 32), 'ord', False)
            # Calling ord(args, kwargs) (line 2115)
            ord_call_result_238827 = invoke(stypy.reporting.localization.Localization(__file__, 2115, 32), ord_238824, *[c_238825], **kwargs_238826)
            
            # Assigning a type to the variable 'ccode' (line 2115)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2115, 24), 'ccode', ord_call_result_238827)
            
            # Assigning a Call to a Name (line 2116):
            
            # Assigning a Call to a Name (line 2116):
            
            # Call to get_char_index(...): (line 2116)
            # Processing the call arguments (line 2116)
            # Getting the type of 'ccode' (line 2116)
            ccode_238830 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2116, 51), 'ccode', False)
            # Processing the call keyword arguments (line 2116)
            kwargs_238831 = {}
            # Getting the type of 'font' (line 2116)
            font_238828 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2116, 31), 'font', False)
            # Obtaining the member 'get_char_index' of a type (line 2116)
            get_char_index_238829 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2116, 31), font_238828, 'get_char_index')
            # Calling get_char_index(args, kwargs) (line 2116)
            get_char_index_call_result_238832 = invoke(stypy.reporting.localization.Localization(__file__, 2116, 31), get_char_index_238829, *[ccode_238830], **kwargs_238831)
            
            # Assigning a type to the variable 'gind' (line 2116)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2116, 24), 'gind', get_char_index_call_result_238832)
            
            # Type idiom detected: calculating its left and rigth part (line 2117)
            # Getting the type of 'gind' (line 2117)
            gind_238833 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2117, 24), 'gind')
            # Getting the type of 'None' (line 2117)
            None_238834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2117, 39), 'None')
            
            (may_be_238835, more_types_in_union_238836) = may_not_be_none(gind_238833, None_238834)

            if may_be_238835:

                if more_types_in_union_238836:
                    # Runtime conditional SSA (line 2117)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
                else:
                    module_type_store = module_type_store

                
                
                # Evaluating a boolean operation
                
                # Getting the type of 'mode' (line 2118)
                mode_238837 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2118, 31), 'mode')
                int_238838 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2118, 39), 'int')
                # Applying the binary operator '==' (line 2118)
                result_eq_238839 = python_operator(stypy.reporting.localization.Localization(__file__, 2118, 31), '==', mode_238837, int_238838)
                
                
                # Getting the type of 'chunk_type' (line 2118)
                chunk_type_238840 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2118, 45), 'chunk_type')
                int_238841 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2118, 59), 'int')
                # Applying the binary operator '==' (line 2118)
                result_eq_238842 = python_operator(stypy.reporting.localization.Localization(__file__, 2118, 45), '==', chunk_type_238840, int_238841)
                
                # Applying the binary operator 'and' (line 2118)
                result_and_keyword_238843 = python_operator(stypy.reporting.localization.Localization(__file__, 2118, 31), 'and', result_eq_238839, result_eq_238842)
                
                # Testing the type of an if condition (line 2118)
                if_condition_238844 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2118, 28), result_and_keyword_238843)
                # Assigning a type to the variable 'if_condition_238844' (line 2118)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2118, 28), 'if_condition_238844', if_condition_238844)
                # SSA begins for if statement (line 2118)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                
                # Assigning a Call to a Name (line 2119):
                
                # Assigning a Call to a Name (line 2119):
                
                # Call to get_glyph_name(...): (line 2119)
                # Processing the call arguments (line 2119)
                # Getting the type of 'gind' (line 2119)
                gind_238847 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2119, 65), 'gind', False)
                # Processing the call keyword arguments (line 2119)
                kwargs_238848 = {}
                # Getting the type of 'font' (line 2119)
                font_238845 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2119, 45), 'font', False)
                # Obtaining the member 'get_glyph_name' of a type (line 2119)
                get_glyph_name_238846 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2119, 45), font_238845, 'get_glyph_name')
                # Calling get_glyph_name(args, kwargs) (line 2119)
                get_glyph_name_call_result_238849 = invoke(stypy.reporting.localization.Localization(__file__, 2119, 45), get_glyph_name_238846, *[gind_238847], **kwargs_238848)
                
                # Assigning a type to the variable 'glyph_name' (line 2119)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2119, 32), 'glyph_name', get_glyph_name_call_result_238849)
                
                # Call to output(...): (line 2120)
                # Processing the call arguments (line 2120)
                # Getting the type of 'Op' (line 2120)
                Op_238853 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2120, 49), 'Op', False)
                # Obtaining the member 'gsave' of a type (line 2120)
                gsave_238854 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2120, 49), Op_238853, 'gsave')
                # Processing the call keyword arguments (line 2120)
                kwargs_238855 = {}
                # Getting the type of 'self' (line 2120)
                self_238850 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2120, 32), 'self', False)
                # Obtaining the member 'file' of a type (line 2120)
                file_238851 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2120, 32), self_238850, 'file')
                # Obtaining the member 'output' of a type (line 2120)
                output_238852 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2120, 32), file_238851, 'output')
                # Calling output(args, kwargs) (line 2120)
                output_call_result_238856 = invoke(stypy.reporting.localization.Localization(__file__, 2120, 32), output_238852, *[gsave_238854], **kwargs_238855)
                
                
                # Call to output(...): (line 2121)
                # Processing the call arguments (line 2121)
                float_238860 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2121, 49), 'float')
                # Getting the type of 'fontsize' (line 2121)
                fontsize_238861 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2121, 57), 'fontsize', False)
                # Applying the binary operator '*' (line 2121)
                result_mul_238862 = python_operator(stypy.reporting.localization.Localization(__file__, 2121, 49), '*', float_238860, fontsize_238861)
                
                int_238863 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2121, 67), 'int')
                int_238864 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2122, 49), 'int')
                float_238865 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2122, 52), 'float')
                # Getting the type of 'fontsize' (line 2122)
                fontsize_238866 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2122, 60), 'fontsize', False)
                # Applying the binary operator '*' (line 2122)
                result_mul_238867 = python_operator(stypy.reporting.localization.Localization(__file__, 2122, 52), '*', float_238865, fontsize_238866)
                
                # Getting the type of 'newx' (line 2123)
                newx_238868 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2123, 49), 'newx', False)
                int_238869 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2123, 55), 'int')
                # Getting the type of 'Op' (line 2123)
                Op_238870 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2123, 58), 'Op', False)
                # Obtaining the member 'concat_matrix' of a type (line 2123)
                concat_matrix_238871 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2123, 58), Op_238870, 'concat_matrix')
                # Processing the call keyword arguments (line 2121)
                kwargs_238872 = {}
                # Getting the type of 'self' (line 2121)
                self_238857 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2121, 32), 'self', False)
                # Obtaining the member 'file' of a type (line 2121)
                file_238858 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2121, 32), self_238857, 'file')
                # Obtaining the member 'output' of a type (line 2121)
                output_238859 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2121, 32), file_238858, 'output')
                # Calling output(args, kwargs) (line 2121)
                output_call_result_238873 = invoke(stypy.reporting.localization.Localization(__file__, 2121, 32), output_238859, *[result_mul_238862, int_238863, int_238864, result_mul_238867, newx_238868, int_238869, concat_matrix_238871], **kwargs_238872)
                
                
                # Assigning a Call to a Name (line 2124):
                
                # Assigning a Call to a Name (line 2124):
                
                # Call to _get_xobject_symbol_name(...): (line 2124)
                # Processing the call arguments (line 2124)
                # Getting the type of 'font' (line 2125)
                font_238877 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2125, 36), 'font', False)
                # Obtaining the member 'fname' of a type (line 2125)
                fname_238878 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2125, 36), font_238877, 'fname')
                # Getting the type of 'glyph_name' (line 2125)
                glyph_name_238879 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2125, 48), 'glyph_name', False)
                # Processing the call keyword arguments (line 2124)
                kwargs_238880 = {}
                # Getting the type of 'self' (line 2124)
                self_238874 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2124, 39), 'self', False)
                # Obtaining the member 'file' of a type (line 2124)
                file_238875 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2124, 39), self_238874, 'file')
                # Obtaining the member '_get_xobject_symbol_name' of a type (line 2124)
                _get_xobject_symbol_name_238876 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2124, 39), file_238875, '_get_xobject_symbol_name')
                # Calling _get_xobject_symbol_name(args, kwargs) (line 2124)
                _get_xobject_symbol_name_call_result_238881 = invoke(stypy.reporting.localization.Localization(__file__, 2124, 39), _get_xobject_symbol_name_238876, *[fname_238878, glyph_name_238879], **kwargs_238880)
                
                # Assigning a type to the variable 'name' (line 2124)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2124, 32), 'name', _get_xobject_symbol_name_call_result_238881)
                
                # Call to output(...): (line 2126)
                # Processing the call arguments (line 2126)
                
                # Call to Name(...): (line 2126)
                # Processing the call arguments (line 2126)
                # Getting the type of 'name' (line 2126)
                name_238886 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2126, 54), 'name', False)
                # Processing the call keyword arguments (line 2126)
                kwargs_238887 = {}
                # Getting the type of 'Name' (line 2126)
                Name_238885 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2126, 49), 'Name', False)
                # Calling Name(args, kwargs) (line 2126)
                Name_call_result_238888 = invoke(stypy.reporting.localization.Localization(__file__, 2126, 49), Name_238885, *[name_238886], **kwargs_238887)
                
                # Getting the type of 'Op' (line 2126)
                Op_238889 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2126, 61), 'Op', False)
                # Obtaining the member 'use_xobject' of a type (line 2126)
                use_xobject_238890 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2126, 61), Op_238889, 'use_xobject')
                # Processing the call keyword arguments (line 2126)
                kwargs_238891 = {}
                # Getting the type of 'self' (line 2126)
                self_238882 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2126, 32), 'self', False)
                # Obtaining the member 'file' of a type (line 2126)
                file_238883 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2126, 32), self_238882, 'file')
                # Obtaining the member 'output' of a type (line 2126)
                output_238884 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2126, 32), file_238883, 'output')
                # Calling output(args, kwargs) (line 2126)
                output_call_result_238892 = invoke(stypy.reporting.localization.Localization(__file__, 2126, 32), output_238884, *[Name_call_result_238888, use_xobject_238890], **kwargs_238891)
                
                
                # Call to output(...): (line 2127)
                # Processing the call arguments (line 2127)
                # Getting the type of 'Op' (line 2127)
                Op_238896 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2127, 49), 'Op', False)
                # Obtaining the member 'grestore' of a type (line 2127)
                grestore_238897 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2127, 49), Op_238896, 'grestore')
                # Processing the call keyword arguments (line 2127)
                kwargs_238898 = {}
                # Getting the type of 'self' (line 2127)
                self_238893 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2127, 32), 'self', False)
                # Obtaining the member 'file' of a type (line 2127)
                file_238894 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2127, 32), self_238893, 'file')
                # Obtaining the member 'output' of a type (line 2127)
                output_238895 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2127, 32), file_238894, 'output')
                # Calling output(args, kwargs) (line 2127)
                output_call_result_238899 = invoke(stypy.reporting.localization.Localization(__file__, 2127, 32), output_238895, *[grestore_238897], **kwargs_238898)
                
                # SSA join for if statement (line 2118)
                module_type_store = module_type_store.join_ssa_context()
                
                
                # Assigning a Call to a Name (line 2131):
                
                # Assigning a Call to a Name (line 2131):
                
                # Call to load_char(...): (line 2131)
                # Processing the call arguments (line 2131)
                # Getting the type of 'ccode' (line 2131)
                ccode_238902 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2131, 51), 'ccode', False)
                # Processing the call keyword arguments (line 2131)
                # Getting the type of 'LOAD_NO_HINTING' (line 2132)
                LOAD_NO_HINTING_238903 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2132, 57), 'LOAD_NO_HINTING', False)
                keyword_238904 = LOAD_NO_HINTING_238903
                kwargs_238905 = {'flags': keyword_238904}
                # Getting the type of 'font' (line 2131)
                font_238900 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2131, 36), 'font', False)
                # Obtaining the member 'load_char' of a type (line 2131)
                load_char_238901 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2131, 36), font_238900, 'load_char')
                # Calling load_char(args, kwargs) (line 2131)
                load_char_call_result_238906 = invoke(stypy.reporting.localization.Localization(__file__, 2131, 36), load_char_238901, *[ccode_238902], **kwargs_238905)
                
                # Assigning a type to the variable 'glyph' (line 2131)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2131, 28), 'glyph', load_char_call_result_238906)
                
                # Type idiom detected: calculating its left and rigth part (line 2133)
                # Getting the type of 'lastgind' (line 2133)
                lastgind_238907 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2133, 28), 'lastgind')
                # Getting the type of 'None' (line 2133)
                None_238908 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2133, 47), 'None')
                
                (may_be_238909, more_types_in_union_238910) = may_not_be_none(lastgind_238907, None_238908)

                if may_be_238909:

                    if more_types_in_union_238910:
                        # Runtime conditional SSA (line 2133)
                        module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
                    else:
                        module_type_store = module_type_store

                    
                    # Assigning a Call to a Name (line 2134):
                    
                    # Assigning a Call to a Name (line 2134):
                    
                    # Call to get_kerning(...): (line 2134)
                    # Processing the call arguments (line 2134)
                    # Getting the type of 'lastgind' (line 2135)
                    lastgind_238913 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2135, 36), 'lastgind', False)
                    # Getting the type of 'gind' (line 2135)
                    gind_238914 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2135, 46), 'gind', False)
                    # Getting the type of 'KERNING_UNFITTED' (line 2135)
                    KERNING_UNFITTED_238915 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2135, 52), 'KERNING_UNFITTED', False)
                    # Processing the call keyword arguments (line 2134)
                    kwargs_238916 = {}
                    # Getting the type of 'font' (line 2134)
                    font_238911 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2134, 39), 'font', False)
                    # Obtaining the member 'get_kerning' of a type (line 2134)
                    get_kerning_238912 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2134, 39), font_238911, 'get_kerning')
                    # Calling get_kerning(args, kwargs) (line 2134)
                    get_kerning_call_result_238917 = invoke(stypy.reporting.localization.Localization(__file__, 2134, 39), get_kerning_238912, *[lastgind_238913, gind_238914, KERNING_UNFITTED_238915], **kwargs_238916)
                    
                    # Assigning a type to the variable 'kern' (line 2134)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2134, 32), 'kern', get_kerning_call_result_238917)

                    if more_types_in_union_238910:
                        # Runtime conditional SSA for else branch (line 2133)
                        module_type_store.open_ssa_branch('idiom else')



                if ((not may_be_238909) or more_types_in_union_238910):
                    
                    # Assigning a Num to a Name (line 2137):
                    
                    # Assigning a Num to a Name (line 2137):
                    int_238918 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2137, 39), 'int')
                    # Assigning a type to the variable 'kern' (line 2137)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2137, 32), 'kern', int_238918)

                    if (may_be_238909 and more_types_in_union_238910):
                        # SSA join for if statement (line 2133)
                        module_type_store = module_type_store.join_ssa_context()


                
                
                # Assigning a Name to a Name (line 2138):
                
                # Assigning a Name to a Name (line 2138):
                # Getting the type of 'gind' (line 2138)
                gind_238919 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2138, 39), 'gind')
                # Assigning a type to the variable 'lastgind' (line 2138)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2138, 28), 'lastgind', gind_238919)
                
                # Getting the type of 'newx' (line 2139)
                newx_238920 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2139, 28), 'newx')
                # Getting the type of 'kern' (line 2139)
                kern_238921 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2139, 36), 'kern')
                float_238922 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2139, 41), 'float')
                # Applying the binary operator 'div' (line 2139)
                result_div_238923 = python_operator(stypy.reporting.localization.Localization(__file__, 2139, 36), 'div', kern_238921, float_238922)
                
                # Getting the type of 'glyph' (line 2139)
                glyph_238924 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2139, 48), 'glyph')
                # Obtaining the member 'linearHoriAdvance' of a type (line 2139)
                linearHoriAdvance_238925 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2139, 48), glyph_238924, 'linearHoriAdvance')
                float_238926 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2139, 72), 'float')
                # Applying the binary operator 'div' (line 2139)
                result_div_238927 = python_operator(stypy.reporting.localization.Localization(__file__, 2139, 48), 'div', linearHoriAdvance_238925, float_238926)
                
                # Applying the binary operator '+' (line 2139)
                result_add_238928 = python_operator(stypy.reporting.localization.Localization(__file__, 2139, 36), '+', result_div_238923, result_div_238927)
                
                # Applying the binary operator '+=' (line 2139)
                result_iadd_238929 = python_operator(stypy.reporting.localization.Localization(__file__, 2139, 28), '+=', newx_238920, result_add_238928)
                # Assigning a type to the variable 'newx' (line 2139)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2139, 28), 'newx', result_iadd_238929)
                

                if more_types_in_union_238836:
                    # SSA join for if statement (line 2117)
                    module_type_store = module_type_store.join_ssa_context()


            
            # SSA join for a for statement
            module_type_store = module_type_store.join_ssa_context()
            
            # SSA join for a for statement
            module_type_store = module_type_store.join_ssa_context()
            
            
            
            # Getting the type of 'mode' (line 2141)
            mode_238930 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2141, 19), 'mode')
            int_238931 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2141, 27), 'int')
            # Applying the binary operator '==' (line 2141)
            result_eq_238932 = python_operator(stypy.reporting.localization.Localization(__file__, 2141, 19), '==', mode_238930, int_238931)
            
            # Testing the type of an if condition (line 2141)
            if_condition_238933 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2141, 16), result_eq_238932)
            # Assigning a type to the variable 'if_condition_238933' (line 2141)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2141, 16), 'if_condition_238933', if_condition_238933)
            # SSA begins for if statement (line 2141)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Call to output(...): (line 2142)
            # Processing the call arguments (line 2142)
            # Getting the type of 'Op' (line 2142)
            Op_238937 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2142, 37), 'Op', False)
            # Obtaining the member 'end_text' of a type (line 2142)
            end_text_238938 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2142, 37), Op_238937, 'end_text')
            # Processing the call keyword arguments (line 2142)
            kwargs_238939 = {}
            # Getting the type of 'self' (line 2142)
            self_238934 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2142, 20), 'self', False)
            # Obtaining the member 'file' of a type (line 2142)
            file_238935 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2142, 20), self_238934, 'file')
            # Obtaining the member 'output' of a type (line 2142)
            output_238936 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2142, 20), file_238935, 'output')
            # Calling output(args, kwargs) (line 2142)
            output_call_result_238940 = invoke(stypy.reporting.localization.Localization(__file__, 2142, 20), output_238936, *[end_text_238938], **kwargs_238939)
            
            # SSA join for if statement (line 2141)
            module_type_store = module_type_store.join_ssa_context()
            
            # SSA join for a for statement
            module_type_store = module_type_store.join_ssa_context()
            
            
            # Call to output(...): (line 2144)
            # Processing the call arguments (line 2144)
            # Getting the type of 'Op' (line 2144)
            Op_238944 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2144, 29), 'Op', False)
            # Obtaining the member 'grestore' of a type (line 2144)
            grestore_238945 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2144, 29), Op_238944, 'grestore')
            # Processing the call keyword arguments (line 2144)
            kwargs_238946 = {}
            # Getting the type of 'self' (line 2144)
            self_238941 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2144, 12), 'self', False)
            # Obtaining the member 'file' of a type (line 2144)
            file_238942 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2144, 12), self_238941, 'file')
            # Obtaining the member 'output' of a type (line 2144)
            output_238943 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2144, 12), file_238942, 'output')
            # Calling output(args, kwargs) (line 2144)
            output_call_result_238947 = invoke(stypy.reporting.localization.Localization(__file__, 2144, 12), output_238943, *[grestore_238945], **kwargs_238946)
            
            
            # ################# End of 'draw_text_woven(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'draw_text_woven' in the type store
            # Getting the type of 'stypy_return_type' (line 2082)
            stypy_return_type_238948 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2082, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_238948)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'draw_text_woven'
            return stypy_return_type_238948

        # Assigning a type to the variable 'draw_text_woven' (line 2082)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2082, 8), 'draw_text_woven', draw_text_woven)
        
        # Assigning a Call to a Tuple (line 2146):
        
        # Assigning a Call to a Name:
        
        # Call to check_simple_method(...): (line 2146)
        # Processing the call arguments (line 2146)
        # Getting the type of 's' (line 2146)
        s_238950 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2146, 56), 's', False)
        # Processing the call keyword arguments (line 2146)
        kwargs_238951 = {}
        # Getting the type of 'check_simple_method' (line 2146)
        check_simple_method_238949 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2146, 36), 'check_simple_method', False)
        # Calling check_simple_method(args, kwargs) (line 2146)
        check_simple_method_call_result_238952 = invoke(stypy.reporting.localization.Localization(__file__, 2146, 36), check_simple_method_238949, *[s_238950], **kwargs_238951)
        
        # Assigning a type to the variable 'call_assignment_231735' (line 2146)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2146, 8), 'call_assignment_231735', check_simple_method_call_result_238952)
        
        # Assigning a Call to a Name (line 2146):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_238955 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2146, 8), 'int')
        # Processing the call keyword arguments
        kwargs_238956 = {}
        # Getting the type of 'call_assignment_231735' (line 2146)
        call_assignment_231735_238953 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2146, 8), 'call_assignment_231735', False)
        # Obtaining the member '__getitem__' of a type (line 2146)
        getitem___238954 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2146, 8), call_assignment_231735_238953, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_238957 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___238954, *[int_238955], **kwargs_238956)
        
        # Assigning a type to the variable 'call_assignment_231736' (line 2146)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2146, 8), 'call_assignment_231736', getitem___call_result_238957)
        
        # Assigning a Name to a Name (line 2146):
        # Getting the type of 'call_assignment_231736' (line 2146)
        call_assignment_231736_238958 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2146, 8), 'call_assignment_231736')
        # Assigning a type to the variable 'use_simple_method' (line 2146)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2146, 8), 'use_simple_method', call_assignment_231736_238958)
        
        # Assigning a Call to a Name (line 2146):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_238961 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2146, 8), 'int')
        # Processing the call keyword arguments
        kwargs_238962 = {}
        # Getting the type of 'call_assignment_231735' (line 2146)
        call_assignment_231735_238959 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2146, 8), 'call_assignment_231735', False)
        # Obtaining the member '__getitem__' of a type (line 2146)
        getitem___238960 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2146, 8), call_assignment_231735_238959, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_238963 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___238960, *[int_238961], **kwargs_238962)
        
        # Assigning a type to the variable 'call_assignment_231737' (line 2146)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2146, 8), 'call_assignment_231737', getitem___call_result_238963)
        
        # Assigning a Name to a Name (line 2146):
        # Getting the type of 'call_assignment_231737' (line 2146)
        call_assignment_231737_238964 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2146, 8), 'call_assignment_231737')
        # Assigning a type to the variable 'chunks' (line 2146)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2146, 27), 'chunks', call_assignment_231737_238964)
        
        # Getting the type of 'use_simple_method' (line 2147)
        use_simple_method_238965 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2147, 11), 'use_simple_method')
        # Testing the type of an if condition (line 2147)
        if_condition_238966 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2147, 8), use_simple_method_238965)
        # Assigning a type to the variable 'if_condition_238966' (line 2147)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2147, 8), 'if_condition_238966', if_condition_238966)
        # SSA begins for if statement (line 2147)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to draw_text_simple(...): (line 2148)
        # Processing the call keyword arguments (line 2148)
        kwargs_238968 = {}
        # Getting the type of 'draw_text_simple' (line 2148)
        draw_text_simple_238967 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2148, 19), 'draw_text_simple', False)
        # Calling draw_text_simple(args, kwargs) (line 2148)
        draw_text_simple_call_result_238969 = invoke(stypy.reporting.localization.Localization(__file__, 2148, 19), draw_text_simple_238967, *[], **kwargs_238968)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2148)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2148, 12), 'stypy_return_type', draw_text_simple_call_result_238969)
        # SSA branch for the else part of an if statement (line 2147)
        module_type_store.open_ssa_branch('else')
        
        # Call to draw_text_woven(...): (line 2150)
        # Processing the call arguments (line 2150)
        # Getting the type of 'chunks' (line 2150)
        chunks_238971 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2150, 35), 'chunks', False)
        # Processing the call keyword arguments (line 2150)
        kwargs_238972 = {}
        # Getting the type of 'draw_text_woven' (line 2150)
        draw_text_woven_238970 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2150, 19), 'draw_text_woven', False)
        # Calling draw_text_woven(args, kwargs) (line 2150)
        draw_text_woven_call_result_238973 = invoke(stypy.reporting.localization.Localization(__file__, 2150, 19), draw_text_woven_238970, *[chunks_238971], **kwargs_238972)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2150)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2150, 12), 'stypy_return_type', draw_text_woven_call_result_238973)
        # SSA join for if statement (line 2147)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'draw_text(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'draw_text' in the type store
        # Getting the type of 'stypy_return_type' (line 2011)
        stypy_return_type_238974 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2011, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_238974)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'draw_text'
        return stypy_return_type_238974


    @norecursion
    def get_text_width_height_descent(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'get_text_width_height_descent'
        module_type_store = module_type_store.open_function_context('get_text_width_height_descent', 2152, 4, False)
        # Assigning a type to the variable 'self' (line 2153)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2153, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererPdf.get_text_width_height_descent.__dict__.__setitem__('stypy_localization', localization)
        RendererPdf.get_text_width_height_descent.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererPdf.get_text_width_height_descent.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererPdf.get_text_width_height_descent.__dict__.__setitem__('stypy_function_name', 'RendererPdf.get_text_width_height_descent')
        RendererPdf.get_text_width_height_descent.__dict__.__setitem__('stypy_param_names_list', ['s', 'prop', 'ismath'])
        RendererPdf.get_text_width_height_descent.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererPdf.get_text_width_height_descent.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererPdf.get_text_width_height_descent.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererPdf.get_text_width_height_descent.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererPdf.get_text_width_height_descent.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererPdf.get_text_width_height_descent.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererPdf.get_text_width_height_descent', ['s', 'prop', 'ismath'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_text_width_height_descent', localization, ['s', 'prop', 'ismath'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_text_width_height_descent(...)' code ##################

        
        
        # Obtaining the type of the subscript
        unicode_238975 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2153, 20), 'unicode', u'text.usetex')
        # Getting the type of 'rcParams' (line 2153)
        rcParams_238976 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2153, 11), 'rcParams')
        # Obtaining the member '__getitem__' of a type (line 2153)
        getitem___238977 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2153, 11), rcParams_238976, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2153)
        subscript_call_result_238978 = invoke(stypy.reporting.localization.Localization(__file__, 2153, 11), getitem___238977, unicode_238975)
        
        # Testing the type of an if condition (line 2153)
        if_condition_238979 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2153, 8), subscript_call_result_238978)
        # Assigning a type to the variable 'if_condition_238979' (line 2153)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2153, 8), 'if_condition_238979', if_condition_238979)
        # SSA begins for if statement (line 2153)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 2154):
        
        # Assigning a Call to a Name (line 2154):
        
        # Call to get_texmanager(...): (line 2154)
        # Processing the call keyword arguments (line 2154)
        kwargs_238982 = {}
        # Getting the type of 'self' (line 2154)
        self_238980 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2154, 25), 'self', False)
        # Obtaining the member 'get_texmanager' of a type (line 2154)
        get_texmanager_238981 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2154, 25), self_238980, 'get_texmanager')
        # Calling get_texmanager(args, kwargs) (line 2154)
        get_texmanager_call_result_238983 = invoke(stypy.reporting.localization.Localization(__file__, 2154, 25), get_texmanager_238981, *[], **kwargs_238982)
        
        # Assigning a type to the variable 'texmanager' (line 2154)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2154, 12), 'texmanager', get_texmanager_call_result_238983)
        
        # Assigning a Call to a Name (line 2155):
        
        # Assigning a Call to a Name (line 2155):
        
        # Call to get_size_in_points(...): (line 2155)
        # Processing the call keyword arguments (line 2155)
        kwargs_238986 = {}
        # Getting the type of 'prop' (line 2155)
        prop_238984 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2155, 23), 'prop', False)
        # Obtaining the member 'get_size_in_points' of a type (line 2155)
        get_size_in_points_238985 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2155, 23), prop_238984, 'get_size_in_points')
        # Calling get_size_in_points(args, kwargs) (line 2155)
        get_size_in_points_call_result_238987 = invoke(stypy.reporting.localization.Localization(__file__, 2155, 23), get_size_in_points_238985, *[], **kwargs_238986)
        
        # Assigning a type to the variable 'fontsize' (line 2155)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2155, 12), 'fontsize', get_size_in_points_call_result_238987)
        
        # Assigning a Call to a Tuple (line 2156):
        
        # Assigning a Call to a Name:
        
        # Call to get_text_width_height_descent(...): (line 2156)
        # Processing the call arguments (line 2156)
        # Getting the type of 's' (line 2156)
        s_238990 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2156, 63), 's', False)
        # Getting the type of 'fontsize' (line 2156)
        fontsize_238991 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2156, 66), 'fontsize', False)
        # Processing the call keyword arguments (line 2156)
        # Getting the type of 'self' (line 2157)
        self_238992 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2157, 72), 'self', False)
        keyword_238993 = self_238992
        kwargs_238994 = {'renderer': keyword_238993}
        # Getting the type of 'texmanager' (line 2156)
        texmanager_238988 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2156, 22), 'texmanager', False)
        # Obtaining the member 'get_text_width_height_descent' of a type (line 2156)
        get_text_width_height_descent_238989 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2156, 22), texmanager_238988, 'get_text_width_height_descent')
        # Calling get_text_width_height_descent(args, kwargs) (line 2156)
        get_text_width_height_descent_call_result_238995 = invoke(stypy.reporting.localization.Localization(__file__, 2156, 22), get_text_width_height_descent_238989, *[s_238990, fontsize_238991], **kwargs_238994)
        
        # Assigning a type to the variable 'call_assignment_231738' (line 2156)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2156, 12), 'call_assignment_231738', get_text_width_height_descent_call_result_238995)
        
        # Assigning a Call to a Name (line 2156):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_238998 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2156, 12), 'int')
        # Processing the call keyword arguments
        kwargs_238999 = {}
        # Getting the type of 'call_assignment_231738' (line 2156)
        call_assignment_231738_238996 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2156, 12), 'call_assignment_231738', False)
        # Obtaining the member '__getitem__' of a type (line 2156)
        getitem___238997 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2156, 12), call_assignment_231738_238996, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_239000 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___238997, *[int_238998], **kwargs_238999)
        
        # Assigning a type to the variable 'call_assignment_231739' (line 2156)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2156, 12), 'call_assignment_231739', getitem___call_result_239000)
        
        # Assigning a Name to a Name (line 2156):
        # Getting the type of 'call_assignment_231739' (line 2156)
        call_assignment_231739_239001 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2156, 12), 'call_assignment_231739')
        # Assigning a type to the variable 'w' (line 2156)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2156, 12), 'w', call_assignment_231739_239001)
        
        # Assigning a Call to a Name (line 2156):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_239004 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2156, 12), 'int')
        # Processing the call keyword arguments
        kwargs_239005 = {}
        # Getting the type of 'call_assignment_231738' (line 2156)
        call_assignment_231738_239002 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2156, 12), 'call_assignment_231738', False)
        # Obtaining the member '__getitem__' of a type (line 2156)
        getitem___239003 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2156, 12), call_assignment_231738_239002, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_239006 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___239003, *[int_239004], **kwargs_239005)
        
        # Assigning a type to the variable 'call_assignment_231740' (line 2156)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2156, 12), 'call_assignment_231740', getitem___call_result_239006)
        
        # Assigning a Name to a Name (line 2156):
        # Getting the type of 'call_assignment_231740' (line 2156)
        call_assignment_231740_239007 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2156, 12), 'call_assignment_231740')
        # Assigning a type to the variable 'h' (line 2156)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2156, 15), 'h', call_assignment_231740_239007)
        
        # Assigning a Call to a Name (line 2156):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_239010 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2156, 12), 'int')
        # Processing the call keyword arguments
        kwargs_239011 = {}
        # Getting the type of 'call_assignment_231738' (line 2156)
        call_assignment_231738_239008 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2156, 12), 'call_assignment_231738', False)
        # Obtaining the member '__getitem__' of a type (line 2156)
        getitem___239009 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2156, 12), call_assignment_231738_239008, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_239012 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___239009, *[int_239010], **kwargs_239011)
        
        # Assigning a type to the variable 'call_assignment_231741' (line 2156)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2156, 12), 'call_assignment_231741', getitem___call_result_239012)
        
        # Assigning a Name to a Name (line 2156):
        # Getting the type of 'call_assignment_231741' (line 2156)
        call_assignment_231741_239013 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2156, 12), 'call_assignment_231741')
        # Assigning a type to the variable 'd' (line 2156)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2156, 18), 'd', call_assignment_231741_239013)
        
        # Obtaining an instance of the builtin type 'tuple' (line 2158)
        tuple_239014 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2158, 19), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 2158)
        # Adding element type (line 2158)
        # Getting the type of 'w' (line 2158)
        w_239015 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2158, 19), 'w')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2158, 19), tuple_239014, w_239015)
        # Adding element type (line 2158)
        # Getting the type of 'h' (line 2158)
        h_239016 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2158, 22), 'h')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2158, 19), tuple_239014, h_239016)
        # Adding element type (line 2158)
        # Getting the type of 'd' (line 2158)
        d_239017 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2158, 25), 'd')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2158, 19), tuple_239014, d_239017)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2158)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2158, 12), 'stypy_return_type', tuple_239014)
        # SSA join for if statement (line 2153)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'ismath' (line 2160)
        ismath_239018 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2160, 11), 'ismath')
        # Testing the type of an if condition (line 2160)
        if_condition_239019 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2160, 8), ismath_239018)
        # Assigning a type to the variable 'if_condition_239019' (line 2160)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2160, 8), 'if_condition_239019', if_condition_239019)
        # SSA begins for if statement (line 2160)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Tuple (line 2161):
        
        # Assigning a Call to a Name:
        
        # Call to parse(...): (line 2162)
        # Processing the call arguments (line 2162)
        # Getting the type of 's' (line 2162)
        s_239023 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2162, 43), 's', False)
        int_239024 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2162, 46), 'int')
        # Getting the type of 'prop' (line 2162)
        prop_239025 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2162, 50), 'prop', False)
        # Processing the call keyword arguments (line 2162)
        kwargs_239026 = {}
        # Getting the type of 'self' (line 2162)
        self_239020 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2162, 16), 'self', False)
        # Obtaining the member 'mathtext_parser' of a type (line 2162)
        mathtext_parser_239021 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2162, 16), self_239020, 'mathtext_parser')
        # Obtaining the member 'parse' of a type (line 2162)
        parse_239022 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2162, 16), mathtext_parser_239021, 'parse')
        # Calling parse(args, kwargs) (line 2162)
        parse_call_result_239027 = invoke(stypy.reporting.localization.Localization(__file__, 2162, 16), parse_239022, *[s_239023, int_239024, prop_239025], **kwargs_239026)
        
        # Assigning a type to the variable 'call_assignment_231742' (line 2161)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2161, 12), 'call_assignment_231742', parse_call_result_239027)
        
        # Assigning a Call to a Name (line 2161):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_239030 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2161, 12), 'int')
        # Processing the call keyword arguments
        kwargs_239031 = {}
        # Getting the type of 'call_assignment_231742' (line 2161)
        call_assignment_231742_239028 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2161, 12), 'call_assignment_231742', False)
        # Obtaining the member '__getitem__' of a type (line 2161)
        getitem___239029 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2161, 12), call_assignment_231742_239028, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_239032 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___239029, *[int_239030], **kwargs_239031)
        
        # Assigning a type to the variable 'call_assignment_231743' (line 2161)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2161, 12), 'call_assignment_231743', getitem___call_result_239032)
        
        # Assigning a Name to a Name (line 2161):
        # Getting the type of 'call_assignment_231743' (line 2161)
        call_assignment_231743_239033 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2161, 12), 'call_assignment_231743')
        # Assigning a type to the variable 'w' (line 2161)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2161, 12), 'w', call_assignment_231743_239033)
        
        # Assigning a Call to a Name (line 2161):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_239036 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2161, 12), 'int')
        # Processing the call keyword arguments
        kwargs_239037 = {}
        # Getting the type of 'call_assignment_231742' (line 2161)
        call_assignment_231742_239034 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2161, 12), 'call_assignment_231742', False)
        # Obtaining the member '__getitem__' of a type (line 2161)
        getitem___239035 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2161, 12), call_assignment_231742_239034, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_239038 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___239035, *[int_239036], **kwargs_239037)
        
        # Assigning a type to the variable 'call_assignment_231744' (line 2161)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2161, 12), 'call_assignment_231744', getitem___call_result_239038)
        
        # Assigning a Name to a Name (line 2161):
        # Getting the type of 'call_assignment_231744' (line 2161)
        call_assignment_231744_239039 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2161, 12), 'call_assignment_231744')
        # Assigning a type to the variable 'h' (line 2161)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2161, 15), 'h', call_assignment_231744_239039)
        
        # Assigning a Call to a Name (line 2161):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_239042 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2161, 12), 'int')
        # Processing the call keyword arguments
        kwargs_239043 = {}
        # Getting the type of 'call_assignment_231742' (line 2161)
        call_assignment_231742_239040 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2161, 12), 'call_assignment_231742', False)
        # Obtaining the member '__getitem__' of a type (line 2161)
        getitem___239041 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2161, 12), call_assignment_231742_239040, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_239044 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___239041, *[int_239042], **kwargs_239043)
        
        # Assigning a type to the variable 'call_assignment_231745' (line 2161)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2161, 12), 'call_assignment_231745', getitem___call_result_239044)
        
        # Assigning a Name to a Name (line 2161):
        # Getting the type of 'call_assignment_231745' (line 2161)
        call_assignment_231745_239045 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2161, 12), 'call_assignment_231745')
        # Assigning a type to the variable 'd' (line 2161)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2161, 18), 'd', call_assignment_231745_239045)
        
        # Assigning a Call to a Name (line 2161):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_239048 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2161, 12), 'int')
        # Processing the call keyword arguments
        kwargs_239049 = {}
        # Getting the type of 'call_assignment_231742' (line 2161)
        call_assignment_231742_239046 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2161, 12), 'call_assignment_231742', False)
        # Obtaining the member '__getitem__' of a type (line 2161)
        getitem___239047 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2161, 12), call_assignment_231742_239046, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_239050 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___239047, *[int_239048], **kwargs_239049)
        
        # Assigning a type to the variable 'call_assignment_231746' (line 2161)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2161, 12), 'call_assignment_231746', getitem___call_result_239050)
        
        # Assigning a Name to a Name (line 2161):
        # Getting the type of 'call_assignment_231746' (line 2161)
        call_assignment_231746_239051 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2161, 12), 'call_assignment_231746')
        # Assigning a type to the variable 'glyphs' (line 2161)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2161, 21), 'glyphs', call_assignment_231746_239051)
        
        # Assigning a Call to a Name (line 2161):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_239054 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2161, 12), 'int')
        # Processing the call keyword arguments
        kwargs_239055 = {}
        # Getting the type of 'call_assignment_231742' (line 2161)
        call_assignment_231742_239052 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2161, 12), 'call_assignment_231742', False)
        # Obtaining the member '__getitem__' of a type (line 2161)
        getitem___239053 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2161, 12), call_assignment_231742_239052, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_239056 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___239053, *[int_239054], **kwargs_239055)
        
        # Assigning a type to the variable 'call_assignment_231747' (line 2161)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2161, 12), 'call_assignment_231747', getitem___call_result_239056)
        
        # Assigning a Name to a Name (line 2161):
        # Getting the type of 'call_assignment_231747' (line 2161)
        call_assignment_231747_239057 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2161, 12), 'call_assignment_231747')
        # Assigning a type to the variable 'rects' (line 2161)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2161, 29), 'rects', call_assignment_231747_239057)
        
        # Assigning a Call to a Name (line 2161):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_239060 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2161, 12), 'int')
        # Processing the call keyword arguments
        kwargs_239061 = {}
        # Getting the type of 'call_assignment_231742' (line 2161)
        call_assignment_231742_239058 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2161, 12), 'call_assignment_231742', False)
        # Obtaining the member '__getitem__' of a type (line 2161)
        getitem___239059 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2161, 12), call_assignment_231742_239058, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_239062 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___239059, *[int_239060], **kwargs_239061)
        
        # Assigning a type to the variable 'call_assignment_231748' (line 2161)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2161, 12), 'call_assignment_231748', getitem___call_result_239062)
        
        # Assigning a Name to a Name (line 2161):
        # Getting the type of 'call_assignment_231748' (line 2161)
        call_assignment_231748_239063 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2161, 12), 'call_assignment_231748')
        # Assigning a type to the variable 'used_characters' (line 2161)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2161, 36), 'used_characters', call_assignment_231748_239063)
        # SSA branch for the else part of an if statement (line 2160)
        module_type_store.open_ssa_branch('else')
        
        
        # Obtaining the type of the subscript
        unicode_239064 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2164, 22), 'unicode', u'pdf.use14corefonts')
        # Getting the type of 'rcParams' (line 2164)
        rcParams_239065 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2164, 13), 'rcParams')
        # Obtaining the member '__getitem__' of a type (line 2164)
        getitem___239066 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2164, 13), rcParams_239065, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2164)
        subscript_call_result_239067 = invoke(stypy.reporting.localization.Localization(__file__, 2164, 13), getitem___239066, unicode_239064)
        
        # Testing the type of an if condition (line 2164)
        if_condition_239068 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2164, 13), subscript_call_result_239067)
        # Assigning a type to the variable 'if_condition_239068' (line 2164)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2164, 13), 'if_condition_239068', if_condition_239068)
        # SSA begins for if statement (line 2164)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 2165):
        
        # Assigning a Call to a Name (line 2165):
        
        # Call to _get_font_afm(...): (line 2165)
        # Processing the call arguments (line 2165)
        # Getting the type of 'prop' (line 2165)
        prop_239071 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2165, 38), 'prop', False)
        # Processing the call keyword arguments (line 2165)
        kwargs_239072 = {}
        # Getting the type of 'self' (line 2165)
        self_239069 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2165, 19), 'self', False)
        # Obtaining the member '_get_font_afm' of a type (line 2165)
        _get_font_afm_239070 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2165, 19), self_239069, '_get_font_afm')
        # Calling _get_font_afm(args, kwargs) (line 2165)
        _get_font_afm_call_result_239073 = invoke(stypy.reporting.localization.Localization(__file__, 2165, 19), _get_font_afm_239070, *[prop_239071], **kwargs_239072)
        
        # Assigning a type to the variable 'font' (line 2165)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2165, 12), 'font', _get_font_afm_call_result_239073)
        
        # Assigning a Call to a Tuple (line 2166):
        
        # Assigning a Call to a Name:
        
        # Call to get_str_bbox_and_descent(...): (line 2166)
        # Processing the call arguments (line 2166)
        # Getting the type of 's' (line 2166)
        s_239076 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2166, 58), 's', False)
        # Processing the call keyword arguments (line 2166)
        kwargs_239077 = {}
        # Getting the type of 'font' (line 2166)
        font_239074 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2166, 28), 'font', False)
        # Obtaining the member 'get_str_bbox_and_descent' of a type (line 2166)
        get_str_bbox_and_descent_239075 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2166, 28), font_239074, 'get_str_bbox_and_descent')
        # Calling get_str_bbox_and_descent(args, kwargs) (line 2166)
        get_str_bbox_and_descent_call_result_239078 = invoke(stypy.reporting.localization.Localization(__file__, 2166, 28), get_str_bbox_and_descent_239075, *[s_239076], **kwargs_239077)
        
        # Assigning a type to the variable 'call_assignment_231749' (line 2166)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2166, 12), 'call_assignment_231749', get_str_bbox_and_descent_call_result_239078)
        
        # Assigning a Call to a Name (line 2166):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_239081 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2166, 12), 'int')
        # Processing the call keyword arguments
        kwargs_239082 = {}
        # Getting the type of 'call_assignment_231749' (line 2166)
        call_assignment_231749_239079 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2166, 12), 'call_assignment_231749', False)
        # Obtaining the member '__getitem__' of a type (line 2166)
        getitem___239080 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2166, 12), call_assignment_231749_239079, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_239083 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___239080, *[int_239081], **kwargs_239082)
        
        # Assigning a type to the variable 'call_assignment_231750' (line 2166)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2166, 12), 'call_assignment_231750', getitem___call_result_239083)
        
        # Assigning a Name to a Name (line 2166):
        # Getting the type of 'call_assignment_231750' (line 2166)
        call_assignment_231750_239084 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2166, 12), 'call_assignment_231750')
        # Assigning a type to the variable 'l' (line 2166)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2166, 12), 'l', call_assignment_231750_239084)
        
        # Assigning a Call to a Name (line 2166):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_239087 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2166, 12), 'int')
        # Processing the call keyword arguments
        kwargs_239088 = {}
        # Getting the type of 'call_assignment_231749' (line 2166)
        call_assignment_231749_239085 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2166, 12), 'call_assignment_231749', False)
        # Obtaining the member '__getitem__' of a type (line 2166)
        getitem___239086 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2166, 12), call_assignment_231749_239085, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_239089 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___239086, *[int_239087], **kwargs_239088)
        
        # Assigning a type to the variable 'call_assignment_231751' (line 2166)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2166, 12), 'call_assignment_231751', getitem___call_result_239089)
        
        # Assigning a Name to a Name (line 2166):
        # Getting the type of 'call_assignment_231751' (line 2166)
        call_assignment_231751_239090 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2166, 12), 'call_assignment_231751')
        # Assigning a type to the variable 'b' (line 2166)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2166, 15), 'b', call_assignment_231751_239090)
        
        # Assigning a Call to a Name (line 2166):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_239093 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2166, 12), 'int')
        # Processing the call keyword arguments
        kwargs_239094 = {}
        # Getting the type of 'call_assignment_231749' (line 2166)
        call_assignment_231749_239091 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2166, 12), 'call_assignment_231749', False)
        # Obtaining the member '__getitem__' of a type (line 2166)
        getitem___239092 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2166, 12), call_assignment_231749_239091, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_239095 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___239092, *[int_239093], **kwargs_239094)
        
        # Assigning a type to the variable 'call_assignment_231752' (line 2166)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2166, 12), 'call_assignment_231752', getitem___call_result_239095)
        
        # Assigning a Name to a Name (line 2166):
        # Getting the type of 'call_assignment_231752' (line 2166)
        call_assignment_231752_239096 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2166, 12), 'call_assignment_231752')
        # Assigning a type to the variable 'w' (line 2166)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2166, 18), 'w', call_assignment_231752_239096)
        
        # Assigning a Call to a Name (line 2166):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_239099 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2166, 12), 'int')
        # Processing the call keyword arguments
        kwargs_239100 = {}
        # Getting the type of 'call_assignment_231749' (line 2166)
        call_assignment_231749_239097 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2166, 12), 'call_assignment_231749', False)
        # Obtaining the member '__getitem__' of a type (line 2166)
        getitem___239098 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2166, 12), call_assignment_231749_239097, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_239101 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___239098, *[int_239099], **kwargs_239100)
        
        # Assigning a type to the variable 'call_assignment_231753' (line 2166)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2166, 12), 'call_assignment_231753', getitem___call_result_239101)
        
        # Assigning a Name to a Name (line 2166):
        # Getting the type of 'call_assignment_231753' (line 2166)
        call_assignment_231753_239102 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2166, 12), 'call_assignment_231753')
        # Assigning a type to the variable 'h' (line 2166)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2166, 21), 'h', call_assignment_231753_239102)
        
        # Assigning a Call to a Name (line 2166):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_239105 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2166, 12), 'int')
        # Processing the call keyword arguments
        kwargs_239106 = {}
        # Getting the type of 'call_assignment_231749' (line 2166)
        call_assignment_231749_239103 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2166, 12), 'call_assignment_231749', False)
        # Obtaining the member '__getitem__' of a type (line 2166)
        getitem___239104 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2166, 12), call_assignment_231749_239103, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_239107 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___239104, *[int_239105], **kwargs_239106)
        
        # Assigning a type to the variable 'call_assignment_231754' (line 2166)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2166, 12), 'call_assignment_231754', getitem___call_result_239107)
        
        # Assigning a Name to a Name (line 2166):
        # Getting the type of 'call_assignment_231754' (line 2166)
        call_assignment_231754_239108 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2166, 12), 'call_assignment_231754')
        # Assigning a type to the variable 'd' (line 2166)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2166, 24), 'd', call_assignment_231754_239108)
        
        # Assigning a Call to a Name (line 2167):
        
        # Assigning a Call to a Name (line 2167):
        
        # Call to get_size_in_points(...): (line 2167)
        # Processing the call keyword arguments (line 2167)
        kwargs_239111 = {}
        # Getting the type of 'prop' (line 2167)
        prop_239109 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2167, 20), 'prop', False)
        # Obtaining the member 'get_size_in_points' of a type (line 2167)
        get_size_in_points_239110 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2167, 20), prop_239109, 'get_size_in_points')
        # Calling get_size_in_points(args, kwargs) (line 2167)
        get_size_in_points_call_result_239112 = invoke(stypy.reporting.localization.Localization(__file__, 2167, 20), get_size_in_points_239110, *[], **kwargs_239111)
        
        # Assigning a type to the variable 'scale' (line 2167)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2167, 12), 'scale', get_size_in_points_call_result_239112)
        
        # Getting the type of 'w' (line 2168)
        w_239113 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2168, 12), 'w')
        # Getting the type of 'scale' (line 2168)
        scale_239114 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2168, 17), 'scale')
        int_239115 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2168, 25), 'int')
        # Applying the binary operator 'div' (line 2168)
        result_div_239116 = python_operator(stypy.reporting.localization.Localization(__file__, 2168, 17), 'div', scale_239114, int_239115)
        
        # Applying the binary operator '*=' (line 2168)
        result_imul_239117 = python_operator(stypy.reporting.localization.Localization(__file__, 2168, 12), '*=', w_239113, result_div_239116)
        # Assigning a type to the variable 'w' (line 2168)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2168, 12), 'w', result_imul_239117)
        
        
        # Getting the type of 'h' (line 2169)
        h_239118 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2169, 12), 'h')
        # Getting the type of 'scale' (line 2169)
        scale_239119 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2169, 17), 'scale')
        int_239120 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2169, 25), 'int')
        # Applying the binary operator 'div' (line 2169)
        result_div_239121 = python_operator(stypy.reporting.localization.Localization(__file__, 2169, 17), 'div', scale_239119, int_239120)
        
        # Applying the binary operator '*=' (line 2169)
        result_imul_239122 = python_operator(stypy.reporting.localization.Localization(__file__, 2169, 12), '*=', h_239118, result_div_239121)
        # Assigning a type to the variable 'h' (line 2169)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2169, 12), 'h', result_imul_239122)
        
        
        # Getting the type of 'd' (line 2170)
        d_239123 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2170, 12), 'd')
        # Getting the type of 'scale' (line 2170)
        scale_239124 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2170, 17), 'scale')
        int_239125 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2170, 25), 'int')
        # Applying the binary operator 'div' (line 2170)
        result_div_239126 = python_operator(stypy.reporting.localization.Localization(__file__, 2170, 17), 'div', scale_239124, int_239125)
        
        # Applying the binary operator '*=' (line 2170)
        result_imul_239127 = python_operator(stypy.reporting.localization.Localization(__file__, 2170, 12), '*=', d_239123, result_div_239126)
        # Assigning a type to the variable 'd' (line 2170)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2170, 12), 'd', result_imul_239127)
        
        # SSA branch for the else part of an if statement (line 2164)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Call to a Name (line 2172):
        
        # Assigning a Call to a Name (line 2172):
        
        # Call to _get_font_ttf(...): (line 2172)
        # Processing the call arguments (line 2172)
        # Getting the type of 'prop' (line 2172)
        prop_239130 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2172, 38), 'prop', False)
        # Processing the call keyword arguments (line 2172)
        kwargs_239131 = {}
        # Getting the type of 'self' (line 2172)
        self_239128 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2172, 19), 'self', False)
        # Obtaining the member '_get_font_ttf' of a type (line 2172)
        _get_font_ttf_239129 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2172, 19), self_239128, '_get_font_ttf')
        # Calling _get_font_ttf(args, kwargs) (line 2172)
        _get_font_ttf_call_result_239132 = invoke(stypy.reporting.localization.Localization(__file__, 2172, 19), _get_font_ttf_239129, *[prop_239130], **kwargs_239131)
        
        # Assigning a type to the variable 'font' (line 2172)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2172, 12), 'font', _get_font_ttf_call_result_239132)
        
        # Call to set_text(...): (line 2173)
        # Processing the call arguments (line 2173)
        # Getting the type of 's' (line 2173)
        s_239135 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2173, 26), 's', False)
        float_239136 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2173, 29), 'float')
        # Processing the call keyword arguments (line 2173)
        # Getting the type of 'LOAD_NO_HINTING' (line 2173)
        LOAD_NO_HINTING_239137 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2173, 40), 'LOAD_NO_HINTING', False)
        keyword_239138 = LOAD_NO_HINTING_239137
        kwargs_239139 = {'flags': keyword_239138}
        # Getting the type of 'font' (line 2173)
        font_239133 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2173, 12), 'font', False)
        # Obtaining the member 'set_text' of a type (line 2173)
        set_text_239134 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2173, 12), font_239133, 'set_text')
        # Calling set_text(args, kwargs) (line 2173)
        set_text_call_result_239140 = invoke(stypy.reporting.localization.Localization(__file__, 2173, 12), set_text_239134, *[s_239135, float_239136], **kwargs_239139)
        
        
        # Assigning a Call to a Tuple (line 2174):
        
        # Assigning a Call to a Name:
        
        # Call to get_width_height(...): (line 2174)
        # Processing the call keyword arguments (line 2174)
        kwargs_239143 = {}
        # Getting the type of 'font' (line 2174)
        font_239141 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2174, 19), 'font', False)
        # Obtaining the member 'get_width_height' of a type (line 2174)
        get_width_height_239142 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2174, 19), font_239141, 'get_width_height')
        # Calling get_width_height(args, kwargs) (line 2174)
        get_width_height_call_result_239144 = invoke(stypy.reporting.localization.Localization(__file__, 2174, 19), get_width_height_239142, *[], **kwargs_239143)
        
        # Assigning a type to the variable 'call_assignment_231755' (line 2174)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2174, 12), 'call_assignment_231755', get_width_height_call_result_239144)
        
        # Assigning a Call to a Name (line 2174):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_239147 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2174, 12), 'int')
        # Processing the call keyword arguments
        kwargs_239148 = {}
        # Getting the type of 'call_assignment_231755' (line 2174)
        call_assignment_231755_239145 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2174, 12), 'call_assignment_231755', False)
        # Obtaining the member '__getitem__' of a type (line 2174)
        getitem___239146 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2174, 12), call_assignment_231755_239145, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_239149 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___239146, *[int_239147], **kwargs_239148)
        
        # Assigning a type to the variable 'call_assignment_231756' (line 2174)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2174, 12), 'call_assignment_231756', getitem___call_result_239149)
        
        # Assigning a Name to a Name (line 2174):
        # Getting the type of 'call_assignment_231756' (line 2174)
        call_assignment_231756_239150 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2174, 12), 'call_assignment_231756')
        # Assigning a type to the variable 'w' (line 2174)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2174, 12), 'w', call_assignment_231756_239150)
        
        # Assigning a Call to a Name (line 2174):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_239153 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2174, 12), 'int')
        # Processing the call keyword arguments
        kwargs_239154 = {}
        # Getting the type of 'call_assignment_231755' (line 2174)
        call_assignment_231755_239151 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2174, 12), 'call_assignment_231755', False)
        # Obtaining the member '__getitem__' of a type (line 2174)
        getitem___239152 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2174, 12), call_assignment_231755_239151, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_239155 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___239152, *[int_239153], **kwargs_239154)
        
        # Assigning a type to the variable 'call_assignment_231757' (line 2174)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2174, 12), 'call_assignment_231757', getitem___call_result_239155)
        
        # Assigning a Name to a Name (line 2174):
        # Getting the type of 'call_assignment_231757' (line 2174)
        call_assignment_231757_239156 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2174, 12), 'call_assignment_231757')
        # Assigning a type to the variable 'h' (line 2174)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2174, 15), 'h', call_assignment_231757_239156)
        
        # Assigning a BinOp to a Name (line 2175):
        
        # Assigning a BinOp to a Name (line 2175):
        float_239157 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2175, 21), 'float')
        float_239158 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2175, 27), 'float')
        # Applying the binary operator 'div' (line 2175)
        result_div_239159 = python_operator(stypy.reporting.localization.Localization(__file__, 2175, 21), 'div', float_239157, float_239158)
        
        # Assigning a type to the variable 'scale' (line 2175)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2175, 12), 'scale', result_div_239159)
        
        # Getting the type of 'w' (line 2176)
        w_239160 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2176, 12), 'w')
        # Getting the type of 'scale' (line 2176)
        scale_239161 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2176, 17), 'scale')
        # Applying the binary operator '*=' (line 2176)
        result_imul_239162 = python_operator(stypy.reporting.localization.Localization(__file__, 2176, 12), '*=', w_239160, scale_239161)
        # Assigning a type to the variable 'w' (line 2176)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2176, 12), 'w', result_imul_239162)
        
        
        # Getting the type of 'h' (line 2177)
        h_239163 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2177, 12), 'h')
        # Getting the type of 'scale' (line 2177)
        scale_239164 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2177, 17), 'scale')
        # Applying the binary operator '*=' (line 2177)
        result_imul_239165 = python_operator(stypy.reporting.localization.Localization(__file__, 2177, 12), '*=', h_239163, scale_239164)
        # Assigning a type to the variable 'h' (line 2177)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2177, 12), 'h', result_imul_239165)
        
        
        # Assigning a Call to a Name (line 2178):
        
        # Assigning a Call to a Name (line 2178):
        
        # Call to get_descent(...): (line 2178)
        # Processing the call keyword arguments (line 2178)
        kwargs_239168 = {}
        # Getting the type of 'font' (line 2178)
        font_239166 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2178, 16), 'font', False)
        # Obtaining the member 'get_descent' of a type (line 2178)
        get_descent_239167 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2178, 16), font_239166, 'get_descent')
        # Calling get_descent(args, kwargs) (line 2178)
        get_descent_call_result_239169 = invoke(stypy.reporting.localization.Localization(__file__, 2178, 16), get_descent_239167, *[], **kwargs_239168)
        
        # Assigning a type to the variable 'd' (line 2178)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2178, 12), 'd', get_descent_call_result_239169)
        
        # Getting the type of 'd' (line 2179)
        d_239170 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2179, 12), 'd')
        # Getting the type of 'scale' (line 2179)
        scale_239171 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2179, 17), 'scale')
        # Applying the binary operator '*=' (line 2179)
        result_imul_239172 = python_operator(stypy.reporting.localization.Localization(__file__, 2179, 12), '*=', d_239170, scale_239171)
        # Assigning a type to the variable 'd' (line 2179)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2179, 12), 'd', result_imul_239172)
        
        # SSA join for if statement (line 2164)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 2160)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 2180)
        tuple_239173 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2180, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 2180)
        # Adding element type (line 2180)
        # Getting the type of 'w' (line 2180)
        w_239174 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2180, 15), 'w')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2180, 15), tuple_239173, w_239174)
        # Adding element type (line 2180)
        # Getting the type of 'h' (line 2180)
        h_239175 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2180, 18), 'h')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2180, 15), tuple_239173, h_239175)
        # Adding element type (line 2180)
        # Getting the type of 'd' (line 2180)
        d_239176 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2180, 21), 'd')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2180, 15), tuple_239173, d_239176)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2180)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2180, 8), 'stypy_return_type', tuple_239173)
        
        # ################# End of 'get_text_width_height_descent(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_text_width_height_descent' in the type store
        # Getting the type of 'stypy_return_type' (line 2152)
        stypy_return_type_239177 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2152, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_239177)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_text_width_height_descent'
        return stypy_return_type_239177


    @norecursion
    def _get_font_afm(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_get_font_afm'
        module_type_store = module_type_store.open_function_context('_get_font_afm', 2182, 4, False)
        # Assigning a type to the variable 'self' (line 2183)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2183, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererPdf._get_font_afm.__dict__.__setitem__('stypy_localization', localization)
        RendererPdf._get_font_afm.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererPdf._get_font_afm.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererPdf._get_font_afm.__dict__.__setitem__('stypy_function_name', 'RendererPdf._get_font_afm')
        RendererPdf._get_font_afm.__dict__.__setitem__('stypy_param_names_list', ['prop'])
        RendererPdf._get_font_afm.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererPdf._get_font_afm.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererPdf._get_font_afm.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererPdf._get_font_afm.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererPdf._get_font_afm.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererPdf._get_font_afm.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererPdf._get_font_afm', ['prop'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_get_font_afm', localization, ['prop'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_get_font_afm(...)' code ##################

        
        # Assigning a Call to a Name (line 2183):
        
        # Assigning a Call to a Name (line 2183):
        
        # Call to hash(...): (line 2183)
        # Processing the call arguments (line 2183)
        # Getting the type of 'prop' (line 2183)
        prop_239179 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2183, 19), 'prop', False)
        # Processing the call keyword arguments (line 2183)
        kwargs_239180 = {}
        # Getting the type of 'hash' (line 2183)
        hash_239178 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2183, 14), 'hash', False)
        # Calling hash(args, kwargs) (line 2183)
        hash_call_result_239181 = invoke(stypy.reporting.localization.Localization(__file__, 2183, 14), hash_239178, *[prop_239179], **kwargs_239180)
        
        # Assigning a type to the variable 'key' (line 2183)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2183, 8), 'key', hash_call_result_239181)
        
        # Assigning a Call to a Name (line 2184):
        
        # Assigning a Call to a Name (line 2184):
        
        # Call to get(...): (line 2184)
        # Processing the call arguments (line 2184)
        # Getting the type of 'key' (line 2184)
        key_239185 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2184, 39), 'key', False)
        # Processing the call keyword arguments (line 2184)
        kwargs_239186 = {}
        # Getting the type of 'self' (line 2184)
        self_239182 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2184, 15), 'self', False)
        # Obtaining the member 'afm_font_cache' of a type (line 2184)
        afm_font_cache_239183 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2184, 15), self_239182, 'afm_font_cache')
        # Obtaining the member 'get' of a type (line 2184)
        get_239184 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2184, 15), afm_font_cache_239183, 'get')
        # Calling get(args, kwargs) (line 2184)
        get_call_result_239187 = invoke(stypy.reporting.localization.Localization(__file__, 2184, 15), get_239184, *[key_239185], **kwargs_239186)
        
        # Assigning a type to the variable 'font' (line 2184)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2184, 8), 'font', get_call_result_239187)
        
        # Type idiom detected: calculating its left and rigth part (line 2185)
        # Getting the type of 'font' (line 2185)
        font_239188 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2185, 11), 'font')
        # Getting the type of 'None' (line 2185)
        None_239189 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2185, 19), 'None')
        
        (may_be_239190, more_types_in_union_239191) = may_be_none(font_239188, None_239189)

        if may_be_239190:

            if more_types_in_union_239191:
                # Runtime conditional SSA (line 2185)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Call to a Name (line 2186):
            
            # Assigning a Call to a Name (line 2186):
            
            # Call to findfont(...): (line 2186)
            # Processing the call arguments (line 2186)
            # Getting the type of 'prop' (line 2187)
            prop_239193 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2187, 16), 'prop', False)
            # Processing the call keyword arguments (line 2186)
            unicode_239194 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2187, 30), 'unicode', u'afm')
            keyword_239195 = unicode_239194
            # Getting the type of 'self' (line 2187)
            self_239196 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2187, 47), 'self', False)
            # Obtaining the member 'file' of a type (line 2187)
            file_239197 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2187, 47), self_239196, 'file')
            # Obtaining the member '_core14fontdir' of a type (line 2187)
            _core14fontdir_239198 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2187, 47), file_239197, '_core14fontdir')
            keyword_239199 = _core14fontdir_239198
            kwargs_239200 = {'directory': keyword_239199, 'fontext': keyword_239195}
            # Getting the type of 'findfont' (line 2186)
            findfont_239192 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2186, 23), 'findfont', False)
            # Calling findfont(args, kwargs) (line 2186)
            findfont_call_result_239201 = invoke(stypy.reporting.localization.Localization(__file__, 2186, 23), findfont_239192, *[prop_239193], **kwargs_239200)
            
            # Assigning a type to the variable 'filename' (line 2186)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2186, 12), 'filename', findfont_call_result_239201)
            
            # Type idiom detected: calculating its left and rigth part (line 2188)
            # Getting the type of 'filename' (line 2188)
            filename_239202 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2188, 15), 'filename')
            # Getting the type of 'None' (line 2188)
            None_239203 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2188, 27), 'None')
            
            (may_be_239204, more_types_in_union_239205) = may_be_none(filename_239202, None_239203)

            if may_be_239204:

                if more_types_in_union_239205:
                    # Runtime conditional SSA (line 2188)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
                else:
                    module_type_store = module_type_store

                
                # Assigning a Call to a Name (line 2189):
                
                # Assigning a Call to a Name (line 2189):
                
                # Call to findfont(...): (line 2189)
                # Processing the call arguments (line 2189)
                unicode_239207 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2190, 20), 'unicode', u'Helvetica')
                # Processing the call keyword arguments (line 2189)
                unicode_239208 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2190, 41), 'unicode', u'afm')
                keyword_239209 = unicode_239208
                # Getting the type of 'self' (line 2191)
                self_239210 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2191, 30), 'self', False)
                # Obtaining the member 'file' of a type (line 2191)
                file_239211 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2191, 30), self_239210, 'file')
                # Obtaining the member '_core14fontdir' of a type (line 2191)
                _core14fontdir_239212 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2191, 30), file_239211, '_core14fontdir')
                keyword_239213 = _core14fontdir_239212
                kwargs_239214 = {'directory': keyword_239213, 'fontext': keyword_239209}
                # Getting the type of 'findfont' (line 2189)
                findfont_239206 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2189, 27), 'findfont', False)
                # Calling findfont(args, kwargs) (line 2189)
                findfont_call_result_239215 = invoke(stypy.reporting.localization.Localization(__file__, 2189, 27), findfont_239206, *[unicode_239207], **kwargs_239214)
                
                # Assigning a type to the variable 'filename' (line 2189)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2189, 16), 'filename', findfont_call_result_239215)

                if more_types_in_union_239205:
                    # SSA join for if statement (line 2188)
                    module_type_store = module_type_store.join_ssa_context()


            
            
            # Assigning a Call to a Name (line 2192):
            
            # Assigning a Call to a Name (line 2192):
            
            # Call to get(...): (line 2192)
            # Processing the call arguments (line 2192)
            # Getting the type of 'filename' (line 2192)
            filename_239219 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2192, 43), 'filename', False)
            # Processing the call keyword arguments (line 2192)
            kwargs_239220 = {}
            # Getting the type of 'self' (line 2192)
            self_239216 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2192, 19), 'self', False)
            # Obtaining the member 'afm_font_cache' of a type (line 2192)
            afm_font_cache_239217 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2192, 19), self_239216, 'afm_font_cache')
            # Obtaining the member 'get' of a type (line 2192)
            get_239218 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2192, 19), afm_font_cache_239217, 'get')
            # Calling get(args, kwargs) (line 2192)
            get_call_result_239221 = invoke(stypy.reporting.localization.Localization(__file__, 2192, 19), get_239218, *[filename_239219], **kwargs_239220)
            
            # Assigning a type to the variable 'font' (line 2192)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2192, 12), 'font', get_call_result_239221)
            
            # Type idiom detected: calculating its left and rigth part (line 2193)
            # Getting the type of 'font' (line 2193)
            font_239222 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2193, 15), 'font')
            # Getting the type of 'None' (line 2193)
            None_239223 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2193, 23), 'None')
            
            (may_be_239224, more_types_in_union_239225) = may_be_none(font_239222, None_239223)

            if may_be_239224:

                if more_types_in_union_239225:
                    # Runtime conditional SSA (line 2193)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
                else:
                    module_type_store = module_type_store

                
                # Call to open(...): (line 2194)
                # Processing the call arguments (line 2194)
                # Getting the type of 'filename' (line 2194)
                filename_239227 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2194, 26), 'filename', False)
                unicode_239228 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2194, 36), 'unicode', u'rb')
                # Processing the call keyword arguments (line 2194)
                kwargs_239229 = {}
                # Getting the type of 'open' (line 2194)
                open_239226 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2194, 21), 'open', False)
                # Calling open(args, kwargs) (line 2194)
                open_call_result_239230 = invoke(stypy.reporting.localization.Localization(__file__, 2194, 21), open_239226, *[filename_239227, unicode_239228], **kwargs_239229)
                
                with_239231 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 2194, 21), open_call_result_239230, 'with parameter', '__enter__', '__exit__')

                if with_239231:
                    # Calling the __enter__ method to initiate a with section
                    # Obtaining the member '__enter__' of a type (line 2194)
                    enter___239232 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2194, 21), open_call_result_239230, '__enter__')
                    with_enter_239233 = invoke(stypy.reporting.localization.Localization(__file__, 2194, 21), enter___239232)
                    # Assigning a type to the variable 'fh' (line 2194)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2194, 21), 'fh', with_enter_239233)
                    
                    # Assigning a Call to a Name (line 2195):
                    
                    # Assigning a Call to a Name (line 2195):
                    
                    # Call to AFM(...): (line 2195)
                    # Processing the call arguments (line 2195)
                    # Getting the type of 'fh' (line 2195)
                    fh_239235 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2195, 31), 'fh', False)
                    # Processing the call keyword arguments (line 2195)
                    kwargs_239236 = {}
                    # Getting the type of 'AFM' (line 2195)
                    AFM_239234 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2195, 27), 'AFM', False)
                    # Calling AFM(args, kwargs) (line 2195)
                    AFM_call_result_239237 = invoke(stypy.reporting.localization.Localization(__file__, 2195, 27), AFM_239234, *[fh_239235], **kwargs_239236)
                    
                    # Assigning a type to the variable 'font' (line 2195)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2195, 20), 'font', AFM_call_result_239237)
                    
                    # Assigning a Name to a Subscript (line 2196):
                    
                    # Assigning a Name to a Subscript (line 2196):
                    # Getting the type of 'font' (line 2196)
                    font_239238 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2196, 52), 'font')
                    # Getting the type of 'self' (line 2196)
                    self_239239 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2196, 20), 'self')
                    # Obtaining the member 'afm_font_cache' of a type (line 2196)
                    afm_font_cache_239240 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2196, 20), self_239239, 'afm_font_cache')
                    # Getting the type of 'filename' (line 2196)
                    filename_239241 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2196, 40), 'filename')
                    # Storing an element on a container (line 2196)
                    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2196, 20), afm_font_cache_239240, (filename_239241, font_239238))
                    # Calling the __exit__ method to finish a with section
                    # Obtaining the member '__exit__' of a type (line 2194)
                    exit___239242 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2194, 21), open_call_result_239230, '__exit__')
                    with_exit_239243 = invoke(stypy.reporting.localization.Localization(__file__, 2194, 21), exit___239242, None, None, None)


                if more_types_in_union_239225:
                    # SSA join for if statement (line 2193)
                    module_type_store = module_type_store.join_ssa_context()


            
            
            # Assigning a Name to a Subscript (line 2197):
            
            # Assigning a Name to a Subscript (line 2197):
            # Getting the type of 'font' (line 2197)
            font_239244 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2197, 39), 'font')
            # Getting the type of 'self' (line 2197)
            self_239245 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2197, 12), 'self')
            # Obtaining the member 'afm_font_cache' of a type (line 2197)
            afm_font_cache_239246 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2197, 12), self_239245, 'afm_font_cache')
            # Getting the type of 'key' (line 2197)
            key_239247 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2197, 32), 'key')
            # Storing an element on a container (line 2197)
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2197, 12), afm_font_cache_239246, (key_239247, font_239244))

            if more_types_in_union_239191:
                # SSA join for if statement (line 2185)
                module_type_store = module_type_store.join_ssa_context()


        
        # Getting the type of 'font' (line 2198)
        font_239248 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2198, 15), 'font')
        # Assigning a type to the variable 'stypy_return_type' (line 2198)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2198, 8), 'stypy_return_type', font_239248)
        
        # ################# End of '_get_font_afm(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_get_font_afm' in the type store
        # Getting the type of 'stypy_return_type' (line 2182)
        stypy_return_type_239249 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2182, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_239249)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_get_font_afm'
        return stypy_return_type_239249


    @norecursion
    def _get_font_ttf(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_get_font_ttf'
        module_type_store = module_type_store.open_function_context('_get_font_ttf', 2200, 4, False)
        # Assigning a type to the variable 'self' (line 2201)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2201, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererPdf._get_font_ttf.__dict__.__setitem__('stypy_localization', localization)
        RendererPdf._get_font_ttf.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererPdf._get_font_ttf.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererPdf._get_font_ttf.__dict__.__setitem__('stypy_function_name', 'RendererPdf._get_font_ttf')
        RendererPdf._get_font_ttf.__dict__.__setitem__('stypy_param_names_list', ['prop'])
        RendererPdf._get_font_ttf.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererPdf._get_font_ttf.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererPdf._get_font_ttf.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererPdf._get_font_ttf.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererPdf._get_font_ttf.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererPdf._get_font_ttf.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererPdf._get_font_ttf', ['prop'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_get_font_ttf', localization, ['prop'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_get_font_ttf(...)' code ##################

        
        # Assigning a Call to a Name (line 2201):
        
        # Assigning a Call to a Name (line 2201):
        
        # Call to findfont(...): (line 2201)
        # Processing the call arguments (line 2201)
        # Getting the type of 'prop' (line 2201)
        prop_239251 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2201, 28), 'prop', False)
        # Processing the call keyword arguments (line 2201)
        kwargs_239252 = {}
        # Getting the type of 'findfont' (line 2201)
        findfont_239250 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2201, 19), 'findfont', False)
        # Calling findfont(args, kwargs) (line 2201)
        findfont_call_result_239253 = invoke(stypy.reporting.localization.Localization(__file__, 2201, 19), findfont_239250, *[prop_239251], **kwargs_239252)
        
        # Assigning a type to the variable 'filename' (line 2201)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2201, 8), 'filename', findfont_call_result_239253)
        
        # Assigning a Call to a Name (line 2202):
        
        # Assigning a Call to a Name (line 2202):
        
        # Call to get_font(...): (line 2202)
        # Processing the call arguments (line 2202)
        # Getting the type of 'filename' (line 2202)
        filename_239255 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2202, 24), 'filename', False)
        # Processing the call keyword arguments (line 2202)
        kwargs_239256 = {}
        # Getting the type of 'get_font' (line 2202)
        get_font_239254 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2202, 15), 'get_font', False)
        # Calling get_font(args, kwargs) (line 2202)
        get_font_call_result_239257 = invoke(stypy.reporting.localization.Localization(__file__, 2202, 15), get_font_239254, *[filename_239255], **kwargs_239256)
        
        # Assigning a type to the variable 'font' (line 2202)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2202, 8), 'font', get_font_call_result_239257)
        
        # Call to clear(...): (line 2203)
        # Processing the call keyword arguments (line 2203)
        kwargs_239260 = {}
        # Getting the type of 'font' (line 2203)
        font_239258 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2203, 8), 'font', False)
        # Obtaining the member 'clear' of a type (line 2203)
        clear_239259 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2203, 8), font_239258, 'clear')
        # Calling clear(args, kwargs) (line 2203)
        clear_call_result_239261 = invoke(stypy.reporting.localization.Localization(__file__, 2203, 8), clear_239259, *[], **kwargs_239260)
        
        
        # Call to set_size(...): (line 2204)
        # Processing the call arguments (line 2204)
        
        # Call to get_size_in_points(...): (line 2204)
        # Processing the call keyword arguments (line 2204)
        kwargs_239266 = {}
        # Getting the type of 'prop' (line 2204)
        prop_239264 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2204, 22), 'prop', False)
        # Obtaining the member 'get_size_in_points' of a type (line 2204)
        get_size_in_points_239265 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2204, 22), prop_239264, 'get_size_in_points')
        # Calling get_size_in_points(args, kwargs) (line 2204)
        get_size_in_points_call_result_239267 = invoke(stypy.reporting.localization.Localization(__file__, 2204, 22), get_size_in_points_239265, *[], **kwargs_239266)
        
        int_239268 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2204, 49), 'int')
        # Processing the call keyword arguments (line 2204)
        kwargs_239269 = {}
        # Getting the type of 'font' (line 2204)
        font_239262 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2204, 8), 'font', False)
        # Obtaining the member 'set_size' of a type (line 2204)
        set_size_239263 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2204, 8), font_239262, 'set_size')
        # Calling set_size(args, kwargs) (line 2204)
        set_size_call_result_239270 = invoke(stypy.reporting.localization.Localization(__file__, 2204, 8), set_size_239263, *[get_size_in_points_call_result_239267, int_239268], **kwargs_239269)
        
        # Getting the type of 'font' (line 2205)
        font_239271 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2205, 15), 'font')
        # Assigning a type to the variable 'stypy_return_type' (line 2205)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2205, 8), 'stypy_return_type', font_239271)
        
        # ################# End of '_get_font_ttf(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_get_font_ttf' in the type store
        # Getting the type of 'stypy_return_type' (line 2200)
        stypy_return_type_239272 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2200, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_239272)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_get_font_ttf'
        return stypy_return_type_239272


    @norecursion
    def flipy(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'flipy'
        module_type_store = module_type_store.open_function_context('flipy', 2207, 4, False)
        # Assigning a type to the variable 'self' (line 2208)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2208, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererPdf.flipy.__dict__.__setitem__('stypy_localization', localization)
        RendererPdf.flipy.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererPdf.flipy.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererPdf.flipy.__dict__.__setitem__('stypy_function_name', 'RendererPdf.flipy')
        RendererPdf.flipy.__dict__.__setitem__('stypy_param_names_list', [])
        RendererPdf.flipy.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererPdf.flipy.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererPdf.flipy.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererPdf.flipy.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererPdf.flipy.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererPdf.flipy.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererPdf.flipy', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'flipy', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'flipy(...)' code ##################

        # Getting the type of 'False' (line 2208)
        False_239273 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2208, 15), 'False')
        # Assigning a type to the variable 'stypy_return_type' (line 2208)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2208, 8), 'stypy_return_type', False_239273)
        
        # ################# End of 'flipy(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'flipy' in the type store
        # Getting the type of 'stypy_return_type' (line 2207)
        stypy_return_type_239274 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2207, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_239274)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'flipy'
        return stypy_return_type_239274


    @norecursion
    def get_canvas_width_height(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'get_canvas_width_height'
        module_type_store = module_type_store.open_function_context('get_canvas_width_height', 2210, 4, False)
        # Assigning a type to the variable 'self' (line 2211)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2211, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererPdf.get_canvas_width_height.__dict__.__setitem__('stypy_localization', localization)
        RendererPdf.get_canvas_width_height.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererPdf.get_canvas_width_height.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererPdf.get_canvas_width_height.__dict__.__setitem__('stypy_function_name', 'RendererPdf.get_canvas_width_height')
        RendererPdf.get_canvas_width_height.__dict__.__setitem__('stypy_param_names_list', [])
        RendererPdf.get_canvas_width_height.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererPdf.get_canvas_width_height.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererPdf.get_canvas_width_height.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererPdf.get_canvas_width_height.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererPdf.get_canvas_width_height.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererPdf.get_canvas_width_height.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererPdf.get_canvas_width_height', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_canvas_width_height', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_canvas_width_height(...)' code ##################

        
        # Obtaining an instance of the builtin type 'tuple' (line 2211)
        tuple_239275 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2211, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 2211)
        # Adding element type (line 2211)
        # Getting the type of 'self' (line 2211)
        self_239276 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2211, 15), 'self')
        # Obtaining the member 'file' of a type (line 2211)
        file_239277 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2211, 15), self_239276, 'file')
        # Obtaining the member 'width' of a type (line 2211)
        width_239278 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2211, 15), file_239277, 'width')
        float_239279 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2211, 33), 'float')
        # Applying the binary operator '*' (line 2211)
        result_mul_239280 = python_operator(stypy.reporting.localization.Localization(__file__, 2211, 15), '*', width_239278, float_239279)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2211, 15), tuple_239275, result_mul_239280)
        # Adding element type (line 2211)
        # Getting the type of 'self' (line 2211)
        self_239281 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2211, 39), 'self')
        # Obtaining the member 'file' of a type (line 2211)
        file_239282 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2211, 39), self_239281, 'file')
        # Obtaining the member 'height' of a type (line 2211)
        height_239283 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2211, 39), file_239282, 'height')
        float_239284 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2211, 58), 'float')
        # Applying the binary operator '*' (line 2211)
        result_mul_239285 = python_operator(stypy.reporting.localization.Localization(__file__, 2211, 39), '*', height_239283, float_239284)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2211, 15), tuple_239275, result_mul_239285)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2211)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2211, 8), 'stypy_return_type', tuple_239275)
        
        # ################# End of 'get_canvas_width_height(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_canvas_width_height' in the type store
        # Getting the type of 'stypy_return_type' (line 2210)
        stypy_return_type_239286 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2210, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_239286)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_canvas_width_height'
        return stypy_return_type_239286


    @norecursion
    def new_gc(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'new_gc'
        module_type_store = module_type_store.open_function_context('new_gc', 2213, 4, False)
        # Assigning a type to the variable 'self' (line 2214)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2214, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererPdf.new_gc.__dict__.__setitem__('stypy_localization', localization)
        RendererPdf.new_gc.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererPdf.new_gc.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererPdf.new_gc.__dict__.__setitem__('stypy_function_name', 'RendererPdf.new_gc')
        RendererPdf.new_gc.__dict__.__setitem__('stypy_param_names_list', [])
        RendererPdf.new_gc.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererPdf.new_gc.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererPdf.new_gc.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererPdf.new_gc.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererPdf.new_gc.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererPdf.new_gc.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererPdf.new_gc', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'new_gc', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'new_gc(...)' code ##################

        
        # Call to GraphicsContextPdf(...): (line 2214)
        # Processing the call arguments (line 2214)
        # Getting the type of 'self' (line 2214)
        self_239288 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2214, 34), 'self', False)
        # Obtaining the member 'file' of a type (line 2214)
        file_239289 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2214, 34), self_239288, 'file')
        # Processing the call keyword arguments (line 2214)
        kwargs_239290 = {}
        # Getting the type of 'GraphicsContextPdf' (line 2214)
        GraphicsContextPdf_239287 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2214, 15), 'GraphicsContextPdf', False)
        # Calling GraphicsContextPdf(args, kwargs) (line 2214)
        GraphicsContextPdf_call_result_239291 = invoke(stypy.reporting.localization.Localization(__file__, 2214, 15), GraphicsContextPdf_239287, *[file_239289], **kwargs_239290)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2214)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2214, 8), 'stypy_return_type', GraphicsContextPdf_call_result_239291)
        
        # ################# End of 'new_gc(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'new_gc' in the type store
        # Getting the type of 'stypy_return_type' (line 2213)
        stypy_return_type_239292 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2213, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_239292)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'new_gc'
        return stypy_return_type_239292


# Assigning a type to the variable 'RendererPdf' (line 1609)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1609, 0), 'RendererPdf', RendererPdf)

# Assigning a Call to a Name (line 1610):

# Call to maxdict(...): (line 1610)
# Processing the call arguments (line 1610)
int_239294 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1610, 29), 'int')
# Processing the call keyword arguments (line 1610)
kwargs_239295 = {}
# Getting the type of 'maxdict' (line 1610)
maxdict_239293 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1610, 21), 'maxdict', False)
# Calling maxdict(args, kwargs) (line 1610)
maxdict_call_result_239296 = invoke(stypy.reporting.localization.Localization(__file__, 1610, 21), maxdict_239293, *[int_239294], **kwargs_239295)

# Getting the type of 'RendererPdf'
RendererPdf_239297 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'RendererPdf')
# Setting the type of the member 'afm_font_cache' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), RendererPdf_239297, 'afm_font_cache', maxdict_call_result_239296)
# Declaration of the 'GraphicsContextPdf' class
# Getting the type of 'GraphicsContextBase' (line 2217)
GraphicsContextBase_239298 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2217, 25), 'GraphicsContextBase')

class GraphicsContextPdf(GraphicsContextBase_239298, ):

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 2219, 4, False)
        # Assigning a type to the variable 'self' (line 2220)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2220, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'GraphicsContextPdf.__init__', ['file'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['file'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Call to __init__(...): (line 2220)
        # Processing the call arguments (line 2220)
        # Getting the type of 'self' (line 2220)
        self_239301 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2220, 37), 'self', False)
        # Processing the call keyword arguments (line 2220)
        kwargs_239302 = {}
        # Getting the type of 'GraphicsContextBase' (line 2220)
        GraphicsContextBase_239299 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2220, 8), 'GraphicsContextBase', False)
        # Obtaining the member '__init__' of a type (line 2220)
        init___239300 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2220, 8), GraphicsContextBase_239299, '__init__')
        # Calling __init__(args, kwargs) (line 2220)
        init___call_result_239303 = invoke(stypy.reporting.localization.Localization(__file__, 2220, 8), init___239300, *[self_239301], **kwargs_239302)
        
        
        # Assigning a Tuple to a Attribute (line 2221):
        
        # Assigning a Tuple to a Attribute (line 2221):
        
        # Obtaining an instance of the builtin type 'tuple' (line 2221)
        tuple_239304 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2221, 27), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 2221)
        # Adding element type (line 2221)
        float_239305 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2221, 27), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2221, 27), tuple_239304, float_239305)
        # Adding element type (line 2221)
        float_239306 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2221, 32), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2221, 27), tuple_239304, float_239306)
        # Adding element type (line 2221)
        float_239307 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2221, 37), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2221, 27), tuple_239304, float_239307)
        
        # Getting the type of 'self' (line 2221)
        self_239308 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2221, 8), 'self')
        # Setting the type of the member '_fillcolor' of a type (line 2221)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2221, 8), self_239308, '_fillcolor', tuple_239304)
        
        # Assigning a Tuple to a Attribute (line 2222):
        
        # Assigning a Tuple to a Attribute (line 2222):
        
        # Obtaining an instance of the builtin type 'tuple' (line 2222)
        tuple_239309 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2222, 34), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 2222)
        # Adding element type (line 2222)
        float_239310 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2222, 34), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2222, 34), tuple_239309, float_239310)
        # Adding element type (line 2222)
        float_239311 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2222, 39), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2222, 34), tuple_239309, float_239311)
        
        # Getting the type of 'self' (line 2222)
        self_239312 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2222, 8), 'self')
        # Setting the type of the member '_effective_alphas' of a type (line 2222)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2222, 8), self_239312, '_effective_alphas', tuple_239309)
        
        # Assigning a Name to a Attribute (line 2223):
        
        # Assigning a Name to a Attribute (line 2223):
        # Getting the type of 'file' (line 2223)
        file_239313 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2223, 20), 'file')
        # Getting the type of 'self' (line 2223)
        self_239314 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2223, 8), 'self')
        # Setting the type of the member 'file' of a type (line 2223)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2223, 8), self_239314, 'file', file_239313)
        
        # Assigning a Name to a Attribute (line 2224):
        
        # Assigning a Name to a Attribute (line 2224):
        # Getting the type of 'None' (line 2224)
        None_239315 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2224, 22), 'None')
        # Getting the type of 'self' (line 2224)
        self_239316 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2224, 8), 'self')
        # Setting the type of the member 'parent' of a type (line 2224)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2224, 8), self_239316, 'parent', None_239315)
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def stypy__repr__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__repr__'
        module_type_store = module_type_store.open_function_context('__repr__', 2226, 4, False)
        # Assigning a type to the variable 'self' (line 2227)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2227, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        GraphicsContextPdf.stypy__repr__.__dict__.__setitem__('stypy_localization', localization)
        GraphicsContextPdf.stypy__repr__.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        GraphicsContextPdf.stypy__repr__.__dict__.__setitem__('stypy_type_store', module_type_store)
        GraphicsContextPdf.stypy__repr__.__dict__.__setitem__('stypy_function_name', 'GraphicsContextPdf.stypy__repr__')
        GraphicsContextPdf.stypy__repr__.__dict__.__setitem__('stypy_param_names_list', [])
        GraphicsContextPdf.stypy__repr__.__dict__.__setitem__('stypy_varargs_param_name', None)
        GraphicsContextPdf.stypy__repr__.__dict__.__setitem__('stypy_kwargs_param_name', None)
        GraphicsContextPdf.stypy__repr__.__dict__.__setitem__('stypy_call_defaults', defaults)
        GraphicsContextPdf.stypy__repr__.__dict__.__setitem__('stypy_call_varargs', varargs)
        GraphicsContextPdf.stypy__repr__.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        GraphicsContextPdf.stypy__repr__.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'GraphicsContextPdf.stypy__repr__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '__repr__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__repr__(...)' code ##################

        
        # Assigning a Call to a Name (line 2227):
        
        # Assigning a Call to a Name (line 2227):
        
        # Call to dict(...): (line 2227)
        # Processing the call arguments (line 2227)
        # Getting the type of 'self' (line 2227)
        self_239318 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2227, 17), 'self', False)
        # Obtaining the member '__dict__' of a type (line 2227)
        dict___239319 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2227, 17), self_239318, '__dict__')
        # Processing the call keyword arguments (line 2227)
        kwargs_239320 = {}
        # Getting the type of 'dict' (line 2227)
        dict_239317 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2227, 12), 'dict', False)
        # Calling dict(args, kwargs) (line 2227)
        dict_call_result_239321 = invoke(stypy.reporting.localization.Localization(__file__, 2227, 12), dict_239317, *[dict___239319], **kwargs_239320)
        
        # Assigning a type to the variable 'd' (line 2227)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2227, 8), 'd', dict_call_result_239321)
        # Deleting a member
        # Getting the type of 'd' (line 2228)
        d_239322 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2228, 12), 'd')
        
        # Obtaining the type of the subscript
        unicode_239323 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2228, 14), 'unicode', u'file')
        # Getting the type of 'd' (line 2228)
        d_239324 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2228, 12), 'd')
        # Obtaining the member '__getitem__' of a type (line 2228)
        getitem___239325 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2228, 12), d_239324, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2228)
        subscript_call_result_239326 = invoke(stypy.reporting.localization.Localization(__file__, 2228, 12), getitem___239325, unicode_239323)
        
        del_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2228, 8), d_239322, subscript_call_result_239326)
        # Deleting a member
        # Getting the type of 'd' (line 2229)
        d_239327 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2229, 12), 'd')
        
        # Obtaining the type of the subscript
        unicode_239328 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2229, 14), 'unicode', u'parent')
        # Getting the type of 'd' (line 2229)
        d_239329 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2229, 12), 'd')
        # Obtaining the member '__getitem__' of a type (line 2229)
        getitem___239330 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2229, 12), d_239329, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2229)
        subscript_call_result_239331 = invoke(stypy.reporting.localization.Localization(__file__, 2229, 12), getitem___239330, unicode_239328)
        
        del_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2229, 8), d_239327, subscript_call_result_239331)
        
        # Call to repr(...): (line 2230)
        # Processing the call arguments (line 2230)
        # Getting the type of 'd' (line 2230)
        d_239333 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2230, 20), 'd', False)
        # Processing the call keyword arguments (line 2230)
        kwargs_239334 = {}
        # Getting the type of 'repr' (line 2230)
        repr_239332 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2230, 15), 'repr', False)
        # Calling repr(args, kwargs) (line 2230)
        repr_call_result_239335 = invoke(stypy.reporting.localization.Localization(__file__, 2230, 15), repr_239332, *[d_239333], **kwargs_239334)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2230)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2230, 8), 'stypy_return_type', repr_call_result_239335)
        
        # ################# End of '__repr__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '__repr__' in the type store
        # Getting the type of 'stypy_return_type' (line 2226)
        stypy_return_type_239336 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2226, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_239336)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '__repr__'
        return stypy_return_type_239336


    @norecursion
    def stroke(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'stroke'
        module_type_store = module_type_store.open_function_context('stroke', 2232, 4, False)
        # Assigning a type to the variable 'self' (line 2233)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2233, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        GraphicsContextPdf.stroke.__dict__.__setitem__('stypy_localization', localization)
        GraphicsContextPdf.stroke.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        GraphicsContextPdf.stroke.__dict__.__setitem__('stypy_type_store', module_type_store)
        GraphicsContextPdf.stroke.__dict__.__setitem__('stypy_function_name', 'GraphicsContextPdf.stroke')
        GraphicsContextPdf.stroke.__dict__.__setitem__('stypy_param_names_list', [])
        GraphicsContextPdf.stroke.__dict__.__setitem__('stypy_varargs_param_name', None)
        GraphicsContextPdf.stroke.__dict__.__setitem__('stypy_kwargs_param_name', None)
        GraphicsContextPdf.stroke.__dict__.__setitem__('stypy_call_defaults', defaults)
        GraphicsContextPdf.stroke.__dict__.__setitem__('stypy_call_varargs', varargs)
        GraphicsContextPdf.stroke.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        GraphicsContextPdf.stroke.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'GraphicsContextPdf.stroke', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'stroke', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'stroke(...)' code ##################

        unicode_239337 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2237, (-1)), 'unicode', u'\n        Predicate: does the path need to be stroked (its outline drawn)?\n        This tests for the various conditions that disable stroking\n        the path, in which case it would presumably be filled.\n        ')
        
        # Evaluating a boolean operation
        
        # Getting the type of 'self' (line 2240)
        self_239338 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2240, 16), 'self')
        # Obtaining the member '_linewidth' of a type (line 2240)
        _linewidth_239339 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2240, 16), self_239338, '_linewidth')
        int_239340 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2240, 34), 'int')
        # Applying the binary operator '>' (line 2240)
        result_gt_239341 = python_operator(stypy.reporting.localization.Localization(__file__, 2240, 16), '>', _linewidth_239339, int_239340)
        
        
        # Getting the type of 'self' (line 2240)
        self_239342 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2240, 40), 'self')
        # Obtaining the member '_alpha' of a type (line 2240)
        _alpha_239343 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2240, 40), self_239342, '_alpha')
        int_239344 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2240, 54), 'int')
        # Applying the binary operator '>' (line 2240)
        result_gt_239345 = python_operator(stypy.reporting.localization.Localization(__file__, 2240, 40), '>', _alpha_239343, int_239344)
        
        # Applying the binary operator 'and' (line 2240)
        result_and_keyword_239346 = python_operator(stypy.reporting.localization.Localization(__file__, 2240, 16), 'and', result_gt_239341, result_gt_239345)
        
        # Evaluating a boolean operation
        
        
        # Call to len(...): (line 2241)
        # Processing the call arguments (line 2241)
        # Getting the type of 'self' (line 2241)
        self_239348 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2241, 21), 'self', False)
        # Obtaining the member '_rgb' of a type (line 2241)
        _rgb_239349 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2241, 21), self_239348, '_rgb')
        # Processing the call keyword arguments (line 2241)
        kwargs_239350 = {}
        # Getting the type of 'len' (line 2241)
        len_239347 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2241, 17), 'len', False)
        # Calling len(args, kwargs) (line 2241)
        len_call_result_239351 = invoke(stypy.reporting.localization.Localization(__file__, 2241, 17), len_239347, *[_rgb_239349], **kwargs_239350)
        
        int_239352 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2241, 35), 'int')
        # Applying the binary operator '<=' (line 2241)
        result_le_239353 = python_operator(stypy.reporting.localization.Localization(__file__, 2241, 17), '<=', len_call_result_239351, int_239352)
        
        
        
        # Obtaining the type of the subscript
        int_239354 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2241, 50), 'int')
        # Getting the type of 'self' (line 2241)
        self_239355 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2241, 40), 'self')
        # Obtaining the member '_rgb' of a type (line 2241)
        _rgb_239356 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2241, 40), self_239355, '_rgb')
        # Obtaining the member '__getitem__' of a type (line 2241)
        getitem___239357 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2241, 40), _rgb_239356, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2241)
        subscript_call_result_239358 = invoke(stypy.reporting.localization.Localization(__file__, 2241, 40), getitem___239357, int_239354)
        
        float_239359 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2241, 56), 'float')
        # Applying the binary operator '!=' (line 2241)
        result_ne_239360 = python_operator(stypy.reporting.localization.Localization(__file__, 2241, 40), '!=', subscript_call_result_239358, float_239359)
        
        # Applying the binary operator 'or' (line 2241)
        result_or_keyword_239361 = python_operator(stypy.reporting.localization.Localization(__file__, 2241, 17), 'or', result_le_239353, result_ne_239360)
        
        # Applying the binary operator 'and' (line 2240)
        result_and_keyword_239362 = python_operator(stypy.reporting.localization.Localization(__file__, 2240, 16), 'and', result_and_keyword_239346, result_or_keyword_239361)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2240)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2240, 8), 'stypy_return_type', result_and_keyword_239362)
        
        # ################# End of 'stroke(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'stroke' in the type store
        # Getting the type of 'stypy_return_type' (line 2232)
        stypy_return_type_239363 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2232, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_239363)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'stroke'
        return stypy_return_type_239363


    @norecursion
    def fill(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'fill'
        module_type_store = module_type_store.open_function_context('fill', 2243, 4, False)
        # Assigning a type to the variable 'self' (line 2244)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2244, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        GraphicsContextPdf.fill.__dict__.__setitem__('stypy_localization', localization)
        GraphicsContextPdf.fill.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        GraphicsContextPdf.fill.__dict__.__setitem__('stypy_type_store', module_type_store)
        GraphicsContextPdf.fill.__dict__.__setitem__('stypy_function_name', 'GraphicsContextPdf.fill')
        GraphicsContextPdf.fill.__dict__.__setitem__('stypy_param_names_list', [])
        GraphicsContextPdf.fill.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        GraphicsContextPdf.fill.__dict__.__setitem__('stypy_kwargs_param_name', None)
        GraphicsContextPdf.fill.__dict__.__setitem__('stypy_call_defaults', defaults)
        GraphicsContextPdf.fill.__dict__.__setitem__('stypy_call_varargs', varargs)
        GraphicsContextPdf.fill.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        GraphicsContextPdf.fill.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'GraphicsContextPdf.fill', [], 'args', None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'fill', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'fill(...)' code ##################

        unicode_239364 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2249, (-1)), 'unicode', u'\n        Predicate: does the path need to be filled?\n\n        An optional argument can be used to specify an alternative\n        _fillcolor, as needed by RendererPdf.draw_markers.\n        ')
        
        
        # Call to len(...): (line 2250)
        # Processing the call arguments (line 2250)
        # Getting the type of 'args' (line 2250)
        args_239366 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2250, 15), 'args', False)
        # Processing the call keyword arguments (line 2250)
        kwargs_239367 = {}
        # Getting the type of 'len' (line 2250)
        len_239365 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2250, 11), 'len', False)
        # Calling len(args, kwargs) (line 2250)
        len_call_result_239368 = invoke(stypy.reporting.localization.Localization(__file__, 2250, 11), len_239365, *[args_239366], **kwargs_239367)
        
        # Testing the type of an if condition (line 2250)
        if_condition_239369 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2250, 8), len_call_result_239368)
        # Assigning a type to the variable 'if_condition_239369' (line 2250)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2250, 8), 'if_condition_239369', if_condition_239369)
        # SSA begins for if statement (line 2250)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Subscript to a Name (line 2251):
        
        # Assigning a Subscript to a Name (line 2251):
        
        # Obtaining the type of the subscript
        int_239370 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2251, 30), 'int')
        # Getting the type of 'args' (line 2251)
        args_239371 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2251, 25), 'args')
        # Obtaining the member '__getitem__' of a type (line 2251)
        getitem___239372 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2251, 25), args_239371, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2251)
        subscript_call_result_239373 = invoke(stypy.reporting.localization.Localization(__file__, 2251, 25), getitem___239372, int_239370)
        
        # Assigning a type to the variable '_fillcolor' (line 2251)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2251, 12), '_fillcolor', subscript_call_result_239373)
        # SSA branch for the else part of an if statement (line 2250)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Attribute to a Name (line 2253):
        
        # Assigning a Attribute to a Name (line 2253):
        # Getting the type of 'self' (line 2253)
        self_239374 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2253, 25), 'self')
        # Obtaining the member '_fillcolor' of a type (line 2253)
        _fillcolor_239375 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2253, 25), self_239374, '_fillcolor')
        # Assigning a type to the variable '_fillcolor' (line 2253)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2253, 12), '_fillcolor', _fillcolor_239375)
        # SSA join for if statement (line 2250)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Evaluating a boolean operation
        # Getting the type of 'self' (line 2254)
        self_239376 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2254, 16), 'self')
        # Obtaining the member '_hatch' of a type (line 2254)
        _hatch_239377 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2254, 16), self_239376, '_hatch')
        
        # Evaluating a boolean operation
        
        # Getting the type of '_fillcolor' (line 2255)
        _fillcolor_239378 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2255, 17), '_fillcolor')
        # Getting the type of 'None' (line 2255)
        None_239379 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2255, 35), 'None')
        # Applying the binary operator 'isnot' (line 2255)
        result_is_not_239380 = python_operator(stypy.reporting.localization.Localization(__file__, 2255, 17), 'isnot', _fillcolor_239378, None_239379)
        
        
        # Evaluating a boolean operation
        
        
        # Call to len(...): (line 2256)
        # Processing the call arguments (line 2256)
        # Getting the type of '_fillcolor' (line 2256)
        _fillcolor_239382 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2256, 22), '_fillcolor', False)
        # Processing the call keyword arguments (line 2256)
        kwargs_239383 = {}
        # Getting the type of 'len' (line 2256)
        len_239381 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2256, 18), 'len', False)
        # Calling len(args, kwargs) (line 2256)
        len_call_result_239384 = invoke(stypy.reporting.localization.Localization(__file__, 2256, 18), len_239381, *[_fillcolor_239382], **kwargs_239383)
        
        int_239385 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2256, 37), 'int')
        # Applying the binary operator '<=' (line 2256)
        result_le_239386 = python_operator(stypy.reporting.localization.Localization(__file__, 2256, 18), '<=', len_call_result_239384, int_239385)
        
        
        
        # Obtaining the type of the subscript
        int_239387 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2256, 53), 'int')
        # Getting the type of '_fillcolor' (line 2256)
        _fillcolor_239388 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2256, 42), '_fillcolor')
        # Obtaining the member '__getitem__' of a type (line 2256)
        getitem___239389 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2256, 42), _fillcolor_239388, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2256)
        subscript_call_result_239390 = invoke(stypy.reporting.localization.Localization(__file__, 2256, 42), getitem___239389, int_239387)
        
        float_239391 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2256, 59), 'float')
        # Applying the binary operator '!=' (line 2256)
        result_ne_239392 = python_operator(stypy.reporting.localization.Localization(__file__, 2256, 42), '!=', subscript_call_result_239390, float_239391)
        
        # Applying the binary operator 'or' (line 2256)
        result_or_keyword_239393 = python_operator(stypy.reporting.localization.Localization(__file__, 2256, 18), 'or', result_le_239386, result_ne_239392)
        
        # Applying the binary operator 'and' (line 2255)
        result_and_keyword_239394 = python_operator(stypy.reporting.localization.Localization(__file__, 2255, 17), 'and', result_is_not_239380, result_or_keyword_239393)
        
        # Applying the binary operator 'or' (line 2254)
        result_or_keyword_239395 = python_operator(stypy.reporting.localization.Localization(__file__, 2254, 16), 'or', _hatch_239377, result_and_keyword_239394)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2254)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2254, 8), 'stypy_return_type', result_or_keyword_239395)
        
        # ################# End of 'fill(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'fill' in the type store
        # Getting the type of 'stypy_return_type' (line 2243)
        stypy_return_type_239396 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2243, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_239396)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'fill'
        return stypy_return_type_239396


    @norecursion
    def paint(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'paint'
        module_type_store = module_type_store.open_function_context('paint', 2258, 4, False)
        # Assigning a type to the variable 'self' (line 2259)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2259, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        GraphicsContextPdf.paint.__dict__.__setitem__('stypy_localization', localization)
        GraphicsContextPdf.paint.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        GraphicsContextPdf.paint.__dict__.__setitem__('stypy_type_store', module_type_store)
        GraphicsContextPdf.paint.__dict__.__setitem__('stypy_function_name', 'GraphicsContextPdf.paint')
        GraphicsContextPdf.paint.__dict__.__setitem__('stypy_param_names_list', [])
        GraphicsContextPdf.paint.__dict__.__setitem__('stypy_varargs_param_name', None)
        GraphicsContextPdf.paint.__dict__.__setitem__('stypy_kwargs_param_name', None)
        GraphicsContextPdf.paint.__dict__.__setitem__('stypy_call_defaults', defaults)
        GraphicsContextPdf.paint.__dict__.__setitem__('stypy_call_varargs', varargs)
        GraphicsContextPdf.paint.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        GraphicsContextPdf.paint.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'GraphicsContextPdf.paint', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'paint', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'paint(...)' code ##################

        unicode_239397 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2262, (-1)), 'unicode', u'\n        Return the appropriate pdf operator to cause the path to be\n        stroked, filled, or both.\n        ')
        
        # Call to paint_path(...): (line 2263)
        # Processing the call arguments (line 2263)
        
        # Call to fill(...): (line 2263)
        # Processing the call keyword arguments (line 2263)
        kwargs_239402 = {}
        # Getting the type of 'self' (line 2263)
        self_239400 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2263, 29), 'self', False)
        # Obtaining the member 'fill' of a type (line 2263)
        fill_239401 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2263, 29), self_239400, 'fill')
        # Calling fill(args, kwargs) (line 2263)
        fill_call_result_239403 = invoke(stypy.reporting.localization.Localization(__file__, 2263, 29), fill_239401, *[], **kwargs_239402)
        
        
        # Call to stroke(...): (line 2263)
        # Processing the call keyword arguments (line 2263)
        kwargs_239406 = {}
        # Getting the type of 'self' (line 2263)
        self_239404 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2263, 42), 'self', False)
        # Obtaining the member 'stroke' of a type (line 2263)
        stroke_239405 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2263, 42), self_239404, 'stroke')
        # Calling stroke(args, kwargs) (line 2263)
        stroke_call_result_239407 = invoke(stypy.reporting.localization.Localization(__file__, 2263, 42), stroke_239405, *[], **kwargs_239406)
        
        # Processing the call keyword arguments (line 2263)
        kwargs_239408 = {}
        # Getting the type of 'Op' (line 2263)
        Op_239398 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2263, 15), 'Op', False)
        # Obtaining the member 'paint_path' of a type (line 2263)
        paint_path_239399 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2263, 15), Op_239398, 'paint_path')
        # Calling paint_path(args, kwargs) (line 2263)
        paint_path_call_result_239409 = invoke(stypy.reporting.localization.Localization(__file__, 2263, 15), paint_path_239399, *[fill_call_result_239403, stroke_call_result_239407], **kwargs_239408)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2263)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2263, 8), 'stypy_return_type', paint_path_call_result_239409)
        
        # ################# End of 'paint(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'paint' in the type store
        # Getting the type of 'stypy_return_type' (line 2258)
        stypy_return_type_239410 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2258, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_239410)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'paint'
        return stypy_return_type_239410

    
    # Assigning a Dict to a Name (line 2265):
    
    # Assigning a Dict to a Name (line 2266):

    @norecursion
    def capstyle_cmd(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'capstyle_cmd'
        module_type_store = module_type_store.open_function_context('capstyle_cmd', 2268, 4, False)
        # Assigning a type to the variable 'self' (line 2269)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2269, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        GraphicsContextPdf.capstyle_cmd.__dict__.__setitem__('stypy_localization', localization)
        GraphicsContextPdf.capstyle_cmd.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        GraphicsContextPdf.capstyle_cmd.__dict__.__setitem__('stypy_type_store', module_type_store)
        GraphicsContextPdf.capstyle_cmd.__dict__.__setitem__('stypy_function_name', 'GraphicsContextPdf.capstyle_cmd')
        GraphicsContextPdf.capstyle_cmd.__dict__.__setitem__('stypy_param_names_list', ['style'])
        GraphicsContextPdf.capstyle_cmd.__dict__.__setitem__('stypy_varargs_param_name', None)
        GraphicsContextPdf.capstyle_cmd.__dict__.__setitem__('stypy_kwargs_param_name', None)
        GraphicsContextPdf.capstyle_cmd.__dict__.__setitem__('stypy_call_defaults', defaults)
        GraphicsContextPdf.capstyle_cmd.__dict__.__setitem__('stypy_call_varargs', varargs)
        GraphicsContextPdf.capstyle_cmd.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        GraphicsContextPdf.capstyle_cmd.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'GraphicsContextPdf.capstyle_cmd', ['style'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'capstyle_cmd', localization, ['style'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'capstyle_cmd(...)' code ##################

        
        # Obtaining an instance of the builtin type 'list' (line 2269)
        list_239411 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2269, 15), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2269)
        # Adding element type (line 2269)
        
        # Obtaining the type of the subscript
        # Getting the type of 'style' (line 2269)
        style_239412 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2269, 31), 'style')
        # Getting the type of 'self' (line 2269)
        self_239413 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2269, 16), 'self')
        # Obtaining the member 'capstyles' of a type (line 2269)
        capstyles_239414 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2269, 16), self_239413, 'capstyles')
        # Obtaining the member '__getitem__' of a type (line 2269)
        getitem___239415 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2269, 16), capstyles_239414, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2269)
        subscript_call_result_239416 = invoke(stypy.reporting.localization.Localization(__file__, 2269, 16), getitem___239415, style_239412)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2269, 15), list_239411, subscript_call_result_239416)
        # Adding element type (line 2269)
        # Getting the type of 'Op' (line 2269)
        Op_239417 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2269, 39), 'Op')
        # Obtaining the member 'setlinecap' of a type (line 2269)
        setlinecap_239418 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2269, 39), Op_239417, 'setlinecap')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2269, 15), list_239411, setlinecap_239418)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2269)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2269, 8), 'stypy_return_type', list_239411)
        
        # ################# End of 'capstyle_cmd(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'capstyle_cmd' in the type store
        # Getting the type of 'stypy_return_type' (line 2268)
        stypy_return_type_239419 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2268, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_239419)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'capstyle_cmd'
        return stypy_return_type_239419


    @norecursion
    def joinstyle_cmd(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'joinstyle_cmd'
        module_type_store = module_type_store.open_function_context('joinstyle_cmd', 2271, 4, False)
        # Assigning a type to the variable 'self' (line 2272)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2272, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        GraphicsContextPdf.joinstyle_cmd.__dict__.__setitem__('stypy_localization', localization)
        GraphicsContextPdf.joinstyle_cmd.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        GraphicsContextPdf.joinstyle_cmd.__dict__.__setitem__('stypy_type_store', module_type_store)
        GraphicsContextPdf.joinstyle_cmd.__dict__.__setitem__('stypy_function_name', 'GraphicsContextPdf.joinstyle_cmd')
        GraphicsContextPdf.joinstyle_cmd.__dict__.__setitem__('stypy_param_names_list', ['style'])
        GraphicsContextPdf.joinstyle_cmd.__dict__.__setitem__('stypy_varargs_param_name', None)
        GraphicsContextPdf.joinstyle_cmd.__dict__.__setitem__('stypy_kwargs_param_name', None)
        GraphicsContextPdf.joinstyle_cmd.__dict__.__setitem__('stypy_call_defaults', defaults)
        GraphicsContextPdf.joinstyle_cmd.__dict__.__setitem__('stypy_call_varargs', varargs)
        GraphicsContextPdf.joinstyle_cmd.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        GraphicsContextPdf.joinstyle_cmd.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'GraphicsContextPdf.joinstyle_cmd', ['style'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'joinstyle_cmd', localization, ['style'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'joinstyle_cmd(...)' code ##################

        
        # Obtaining an instance of the builtin type 'list' (line 2272)
        list_239420 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2272, 15), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2272)
        # Adding element type (line 2272)
        
        # Obtaining the type of the subscript
        # Getting the type of 'style' (line 2272)
        style_239421 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2272, 32), 'style')
        # Getting the type of 'self' (line 2272)
        self_239422 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2272, 16), 'self')
        # Obtaining the member 'joinstyles' of a type (line 2272)
        joinstyles_239423 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2272, 16), self_239422, 'joinstyles')
        # Obtaining the member '__getitem__' of a type (line 2272)
        getitem___239424 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2272, 16), joinstyles_239423, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2272)
        subscript_call_result_239425 = invoke(stypy.reporting.localization.Localization(__file__, 2272, 16), getitem___239424, style_239421)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2272, 15), list_239420, subscript_call_result_239425)
        # Adding element type (line 2272)
        # Getting the type of 'Op' (line 2272)
        Op_239426 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2272, 40), 'Op')
        # Obtaining the member 'setlinejoin' of a type (line 2272)
        setlinejoin_239427 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2272, 40), Op_239426, 'setlinejoin')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2272, 15), list_239420, setlinejoin_239427)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2272)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2272, 8), 'stypy_return_type', list_239420)
        
        # ################# End of 'joinstyle_cmd(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'joinstyle_cmd' in the type store
        # Getting the type of 'stypy_return_type' (line 2271)
        stypy_return_type_239428 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2271, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_239428)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'joinstyle_cmd'
        return stypy_return_type_239428


    @norecursion
    def linewidth_cmd(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'linewidth_cmd'
        module_type_store = module_type_store.open_function_context('linewidth_cmd', 2274, 4, False)
        # Assigning a type to the variable 'self' (line 2275)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2275, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        GraphicsContextPdf.linewidth_cmd.__dict__.__setitem__('stypy_localization', localization)
        GraphicsContextPdf.linewidth_cmd.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        GraphicsContextPdf.linewidth_cmd.__dict__.__setitem__('stypy_type_store', module_type_store)
        GraphicsContextPdf.linewidth_cmd.__dict__.__setitem__('stypy_function_name', 'GraphicsContextPdf.linewidth_cmd')
        GraphicsContextPdf.linewidth_cmd.__dict__.__setitem__('stypy_param_names_list', ['width'])
        GraphicsContextPdf.linewidth_cmd.__dict__.__setitem__('stypy_varargs_param_name', None)
        GraphicsContextPdf.linewidth_cmd.__dict__.__setitem__('stypy_kwargs_param_name', None)
        GraphicsContextPdf.linewidth_cmd.__dict__.__setitem__('stypy_call_defaults', defaults)
        GraphicsContextPdf.linewidth_cmd.__dict__.__setitem__('stypy_call_varargs', varargs)
        GraphicsContextPdf.linewidth_cmd.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        GraphicsContextPdf.linewidth_cmd.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'GraphicsContextPdf.linewidth_cmd', ['width'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'linewidth_cmd', localization, ['width'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'linewidth_cmd(...)' code ##################

        
        # Obtaining an instance of the builtin type 'list' (line 2275)
        list_239429 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2275, 15), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2275)
        # Adding element type (line 2275)
        # Getting the type of 'width' (line 2275)
        width_239430 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2275, 16), 'width')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2275, 15), list_239429, width_239430)
        # Adding element type (line 2275)
        # Getting the type of 'Op' (line 2275)
        Op_239431 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2275, 23), 'Op')
        # Obtaining the member 'setlinewidth' of a type (line 2275)
        setlinewidth_239432 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2275, 23), Op_239431, 'setlinewidth')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2275, 15), list_239429, setlinewidth_239432)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2275)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2275, 8), 'stypy_return_type', list_239429)
        
        # ################# End of 'linewidth_cmd(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'linewidth_cmd' in the type store
        # Getting the type of 'stypy_return_type' (line 2274)
        stypy_return_type_239433 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2274, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_239433)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'linewidth_cmd'
        return stypy_return_type_239433


    @norecursion
    def dash_cmd(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'dash_cmd'
        module_type_store = module_type_store.open_function_context('dash_cmd', 2277, 4, False)
        # Assigning a type to the variable 'self' (line 2278)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2278, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        GraphicsContextPdf.dash_cmd.__dict__.__setitem__('stypy_localization', localization)
        GraphicsContextPdf.dash_cmd.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        GraphicsContextPdf.dash_cmd.__dict__.__setitem__('stypy_type_store', module_type_store)
        GraphicsContextPdf.dash_cmd.__dict__.__setitem__('stypy_function_name', 'GraphicsContextPdf.dash_cmd')
        GraphicsContextPdf.dash_cmd.__dict__.__setitem__('stypy_param_names_list', ['dashes'])
        GraphicsContextPdf.dash_cmd.__dict__.__setitem__('stypy_varargs_param_name', None)
        GraphicsContextPdf.dash_cmd.__dict__.__setitem__('stypy_kwargs_param_name', None)
        GraphicsContextPdf.dash_cmd.__dict__.__setitem__('stypy_call_defaults', defaults)
        GraphicsContextPdf.dash_cmd.__dict__.__setitem__('stypy_call_varargs', varargs)
        GraphicsContextPdf.dash_cmd.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        GraphicsContextPdf.dash_cmd.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'GraphicsContextPdf.dash_cmd', ['dashes'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'dash_cmd', localization, ['dashes'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'dash_cmd(...)' code ##################

        
        # Assigning a Name to a Tuple (line 2278):
        
        # Assigning a Subscript to a Name (line 2278):
        
        # Obtaining the type of the subscript
        int_239434 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2278, 8), 'int')
        # Getting the type of 'dashes' (line 2278)
        dashes_239435 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2278, 23), 'dashes')
        # Obtaining the member '__getitem__' of a type (line 2278)
        getitem___239436 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2278, 8), dashes_239435, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2278)
        subscript_call_result_239437 = invoke(stypy.reporting.localization.Localization(__file__, 2278, 8), getitem___239436, int_239434)
        
        # Assigning a type to the variable 'tuple_var_assignment_231758' (line 2278)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2278, 8), 'tuple_var_assignment_231758', subscript_call_result_239437)
        
        # Assigning a Subscript to a Name (line 2278):
        
        # Obtaining the type of the subscript
        int_239438 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2278, 8), 'int')
        # Getting the type of 'dashes' (line 2278)
        dashes_239439 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2278, 23), 'dashes')
        # Obtaining the member '__getitem__' of a type (line 2278)
        getitem___239440 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2278, 8), dashes_239439, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2278)
        subscript_call_result_239441 = invoke(stypy.reporting.localization.Localization(__file__, 2278, 8), getitem___239440, int_239438)
        
        # Assigning a type to the variable 'tuple_var_assignment_231759' (line 2278)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2278, 8), 'tuple_var_assignment_231759', subscript_call_result_239441)
        
        # Assigning a Name to a Name (line 2278):
        # Getting the type of 'tuple_var_assignment_231758' (line 2278)
        tuple_var_assignment_231758_239442 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2278, 8), 'tuple_var_assignment_231758')
        # Assigning a type to the variable 'offset' (line 2278)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2278, 8), 'offset', tuple_var_assignment_231758_239442)
        
        # Assigning a Name to a Name (line 2278):
        # Getting the type of 'tuple_var_assignment_231759' (line 2278)
        tuple_var_assignment_231759_239443 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2278, 8), 'tuple_var_assignment_231759')
        # Assigning a type to the variable 'dash' (line 2278)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2278, 16), 'dash', tuple_var_assignment_231759_239443)
        
        # Type idiom detected: calculating its left and rigth part (line 2279)
        # Getting the type of 'dash' (line 2279)
        dash_239444 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2279, 11), 'dash')
        # Getting the type of 'None' (line 2279)
        None_239445 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2279, 19), 'None')
        
        (may_be_239446, more_types_in_union_239447) = may_be_none(dash_239444, None_239445)

        if may_be_239446:

            if more_types_in_union_239447:
                # Runtime conditional SSA (line 2279)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a List to a Name (line 2280):
            
            # Assigning a List to a Name (line 2280):
            
            # Obtaining an instance of the builtin type 'list' (line 2280)
            list_239448 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2280, 19), 'list')
            # Adding type elements to the builtin type 'list' instance (line 2280)
            
            # Assigning a type to the variable 'dash' (line 2280)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2280, 12), 'dash', list_239448)
            
            # Assigning a Num to a Name (line 2281):
            
            # Assigning a Num to a Name (line 2281):
            int_239449 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2281, 21), 'int')
            # Assigning a type to the variable 'offset' (line 2281)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2281, 12), 'offset', int_239449)

            if more_types_in_union_239447:
                # SSA join for if statement (line 2279)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Obtaining an instance of the builtin type 'list' (line 2282)
        list_239450 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2282, 15), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2282)
        # Adding element type (line 2282)
        
        # Call to list(...): (line 2282)
        # Processing the call arguments (line 2282)
        # Getting the type of 'dash' (line 2282)
        dash_239452 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2282, 21), 'dash', False)
        # Processing the call keyword arguments (line 2282)
        kwargs_239453 = {}
        # Getting the type of 'list' (line 2282)
        list_239451 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2282, 16), 'list', False)
        # Calling list(args, kwargs) (line 2282)
        list_call_result_239454 = invoke(stypy.reporting.localization.Localization(__file__, 2282, 16), list_239451, *[dash_239452], **kwargs_239453)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2282, 15), list_239450, list_call_result_239454)
        # Adding element type (line 2282)
        # Getting the type of 'offset' (line 2282)
        offset_239455 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2282, 28), 'offset')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2282, 15), list_239450, offset_239455)
        # Adding element type (line 2282)
        # Getting the type of 'Op' (line 2282)
        Op_239456 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2282, 36), 'Op')
        # Obtaining the member 'setdash' of a type (line 2282)
        setdash_239457 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2282, 36), Op_239456, 'setdash')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2282, 15), list_239450, setdash_239457)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2282)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2282, 8), 'stypy_return_type', list_239450)
        
        # ################# End of 'dash_cmd(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'dash_cmd' in the type store
        # Getting the type of 'stypy_return_type' (line 2277)
        stypy_return_type_239458 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2277, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_239458)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'dash_cmd'
        return stypy_return_type_239458


    @norecursion
    def alpha_cmd(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'alpha_cmd'
        module_type_store = module_type_store.open_function_context('alpha_cmd', 2284, 4, False)
        # Assigning a type to the variable 'self' (line 2285)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2285, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        GraphicsContextPdf.alpha_cmd.__dict__.__setitem__('stypy_localization', localization)
        GraphicsContextPdf.alpha_cmd.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        GraphicsContextPdf.alpha_cmd.__dict__.__setitem__('stypy_type_store', module_type_store)
        GraphicsContextPdf.alpha_cmd.__dict__.__setitem__('stypy_function_name', 'GraphicsContextPdf.alpha_cmd')
        GraphicsContextPdf.alpha_cmd.__dict__.__setitem__('stypy_param_names_list', ['alpha', 'forced', 'effective_alphas'])
        GraphicsContextPdf.alpha_cmd.__dict__.__setitem__('stypy_varargs_param_name', None)
        GraphicsContextPdf.alpha_cmd.__dict__.__setitem__('stypy_kwargs_param_name', None)
        GraphicsContextPdf.alpha_cmd.__dict__.__setitem__('stypy_call_defaults', defaults)
        GraphicsContextPdf.alpha_cmd.__dict__.__setitem__('stypy_call_varargs', varargs)
        GraphicsContextPdf.alpha_cmd.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        GraphicsContextPdf.alpha_cmd.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'GraphicsContextPdf.alpha_cmd', ['alpha', 'forced', 'effective_alphas'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'alpha_cmd', localization, ['alpha', 'forced', 'effective_alphas'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'alpha_cmd(...)' code ##################

        
        # Assigning a Call to a Name (line 2285):
        
        # Assigning a Call to a Name (line 2285):
        
        # Call to alphaState(...): (line 2285)
        # Processing the call arguments (line 2285)
        # Getting the type of 'effective_alphas' (line 2285)
        effective_alphas_239462 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2285, 36), 'effective_alphas', False)
        # Processing the call keyword arguments (line 2285)
        kwargs_239463 = {}
        # Getting the type of 'self' (line 2285)
        self_239459 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2285, 15), 'self', False)
        # Obtaining the member 'file' of a type (line 2285)
        file_239460 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2285, 15), self_239459, 'file')
        # Obtaining the member 'alphaState' of a type (line 2285)
        alphaState_239461 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2285, 15), file_239460, 'alphaState')
        # Calling alphaState(args, kwargs) (line 2285)
        alphaState_call_result_239464 = invoke(stypy.reporting.localization.Localization(__file__, 2285, 15), alphaState_239461, *[effective_alphas_239462], **kwargs_239463)
        
        # Assigning a type to the variable 'name' (line 2285)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2285, 8), 'name', alphaState_call_result_239464)
        
        # Obtaining an instance of the builtin type 'list' (line 2286)
        list_239465 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2286, 15), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2286)
        # Adding element type (line 2286)
        # Getting the type of 'name' (line 2286)
        name_239466 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2286, 16), 'name')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2286, 15), list_239465, name_239466)
        # Adding element type (line 2286)
        # Getting the type of 'Op' (line 2286)
        Op_239467 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2286, 22), 'Op')
        # Obtaining the member 'setgstate' of a type (line 2286)
        setgstate_239468 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2286, 22), Op_239467, 'setgstate')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2286, 15), list_239465, setgstate_239468)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2286)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2286, 8), 'stypy_return_type', list_239465)
        
        # ################# End of 'alpha_cmd(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'alpha_cmd' in the type store
        # Getting the type of 'stypy_return_type' (line 2284)
        stypy_return_type_239469 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2284, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_239469)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'alpha_cmd'
        return stypy_return_type_239469


    @norecursion
    def hatch_cmd(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'hatch_cmd'
        module_type_store = module_type_store.open_function_context('hatch_cmd', 2288, 4, False)
        # Assigning a type to the variable 'self' (line 2289)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2289, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        GraphicsContextPdf.hatch_cmd.__dict__.__setitem__('stypy_localization', localization)
        GraphicsContextPdf.hatch_cmd.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        GraphicsContextPdf.hatch_cmd.__dict__.__setitem__('stypy_type_store', module_type_store)
        GraphicsContextPdf.hatch_cmd.__dict__.__setitem__('stypy_function_name', 'GraphicsContextPdf.hatch_cmd')
        GraphicsContextPdf.hatch_cmd.__dict__.__setitem__('stypy_param_names_list', ['hatch', 'hatch_color'])
        GraphicsContextPdf.hatch_cmd.__dict__.__setitem__('stypy_varargs_param_name', None)
        GraphicsContextPdf.hatch_cmd.__dict__.__setitem__('stypy_kwargs_param_name', None)
        GraphicsContextPdf.hatch_cmd.__dict__.__setitem__('stypy_call_defaults', defaults)
        GraphicsContextPdf.hatch_cmd.__dict__.__setitem__('stypy_call_varargs', varargs)
        GraphicsContextPdf.hatch_cmd.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        GraphicsContextPdf.hatch_cmd.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'GraphicsContextPdf.hatch_cmd', ['hatch', 'hatch_color'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'hatch_cmd', localization, ['hatch', 'hatch_color'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'hatch_cmd(...)' code ##################

        
        
        # Getting the type of 'hatch' (line 2289)
        hatch_239470 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2289, 15), 'hatch')
        # Applying the 'not' unary operator (line 2289)
        result_not__239471 = python_operator(stypy.reporting.localization.Localization(__file__, 2289, 11), 'not', hatch_239470)
        
        # Testing the type of an if condition (line 2289)
        if_condition_239472 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2289, 8), result_not__239471)
        # Assigning a type to the variable 'if_condition_239472' (line 2289)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2289, 8), 'if_condition_239472', if_condition_239472)
        # SSA begins for if statement (line 2289)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        
        # Getting the type of 'self' (line 2290)
        self_239473 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2290, 15), 'self')
        # Obtaining the member '_fillcolor' of a type (line 2290)
        _fillcolor_239474 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2290, 15), self_239473, '_fillcolor')
        # Getting the type of 'None' (line 2290)
        None_239475 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2290, 38), 'None')
        # Applying the binary operator 'isnot' (line 2290)
        result_is_not_239476 = python_operator(stypy.reporting.localization.Localization(__file__, 2290, 15), 'isnot', _fillcolor_239474, None_239475)
        
        # Testing the type of an if condition (line 2290)
        if_condition_239477 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2290, 12), result_is_not_239476)
        # Assigning a type to the variable 'if_condition_239477' (line 2290)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2290, 12), 'if_condition_239477', if_condition_239477)
        # SSA begins for if statement (line 2290)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to fillcolor_cmd(...): (line 2291)
        # Processing the call arguments (line 2291)
        # Getting the type of 'self' (line 2291)
        self_239480 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2291, 42), 'self', False)
        # Obtaining the member '_fillcolor' of a type (line 2291)
        _fillcolor_239481 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2291, 42), self_239480, '_fillcolor')
        # Processing the call keyword arguments (line 2291)
        kwargs_239482 = {}
        # Getting the type of 'self' (line 2291)
        self_239478 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2291, 23), 'self', False)
        # Obtaining the member 'fillcolor_cmd' of a type (line 2291)
        fillcolor_cmd_239479 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2291, 23), self_239478, 'fillcolor_cmd')
        # Calling fillcolor_cmd(args, kwargs) (line 2291)
        fillcolor_cmd_call_result_239483 = invoke(stypy.reporting.localization.Localization(__file__, 2291, 23), fillcolor_cmd_239479, *[_fillcolor_239481], **kwargs_239482)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2291)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2291, 16), 'stypy_return_type', fillcolor_cmd_call_result_239483)
        # SSA branch for the else part of an if statement (line 2290)
        module_type_store.open_ssa_branch('else')
        
        # Obtaining an instance of the builtin type 'list' (line 2293)
        list_239484 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2293, 23), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2293)
        # Adding element type (line 2293)
        
        # Call to Name(...): (line 2293)
        # Processing the call arguments (line 2293)
        unicode_239486 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2293, 29), 'unicode', u'DeviceRGB')
        # Processing the call keyword arguments (line 2293)
        kwargs_239487 = {}
        # Getting the type of 'Name' (line 2293)
        Name_239485 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2293, 24), 'Name', False)
        # Calling Name(args, kwargs) (line 2293)
        Name_call_result_239488 = invoke(stypy.reporting.localization.Localization(__file__, 2293, 24), Name_239485, *[unicode_239486], **kwargs_239487)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2293, 23), list_239484, Name_call_result_239488)
        # Adding element type (line 2293)
        # Getting the type of 'Op' (line 2293)
        Op_239489 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2293, 43), 'Op')
        # Obtaining the member 'setcolorspace_nonstroke' of a type (line 2293)
        setcolorspace_nonstroke_239490 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2293, 43), Op_239489, 'setcolorspace_nonstroke')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2293, 23), list_239484, setcolorspace_nonstroke_239490)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2293)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2293, 16), 'stypy_return_type', list_239484)
        # SSA join for if statement (line 2290)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA branch for the else part of an if statement (line 2289)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Tuple to a Name (line 2295):
        
        # Assigning a Tuple to a Name (line 2295):
        
        # Obtaining an instance of the builtin type 'tuple' (line 2295)
        tuple_239491 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2295, 27), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 2295)
        # Adding element type (line 2295)
        # Getting the type of 'hatch_color' (line 2295)
        hatch_color_239492 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2295, 27), 'hatch_color')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2295, 27), tuple_239491, hatch_color_239492)
        # Adding element type (line 2295)
        # Getting the type of 'self' (line 2295)
        self_239493 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2295, 40), 'self')
        # Obtaining the member '_fillcolor' of a type (line 2295)
        _fillcolor_239494 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2295, 40), self_239493, '_fillcolor')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2295, 27), tuple_239491, _fillcolor_239494)
        # Adding element type (line 2295)
        # Getting the type of 'hatch' (line 2295)
        hatch_239495 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2295, 57), 'hatch')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2295, 27), tuple_239491, hatch_239495)
        
        # Assigning a type to the variable 'hatch_style' (line 2295)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2295, 12), 'hatch_style', tuple_239491)
        
        # Assigning a Call to a Name (line 2296):
        
        # Assigning a Call to a Name (line 2296):
        
        # Call to hatchPattern(...): (line 2296)
        # Processing the call arguments (line 2296)
        # Getting the type of 'hatch_style' (line 2296)
        hatch_style_239499 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2296, 42), 'hatch_style', False)
        # Processing the call keyword arguments (line 2296)
        kwargs_239500 = {}
        # Getting the type of 'self' (line 2296)
        self_239496 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2296, 19), 'self', False)
        # Obtaining the member 'file' of a type (line 2296)
        file_239497 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2296, 19), self_239496, 'file')
        # Obtaining the member 'hatchPattern' of a type (line 2296)
        hatchPattern_239498 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2296, 19), file_239497, 'hatchPattern')
        # Calling hatchPattern(args, kwargs) (line 2296)
        hatchPattern_call_result_239501 = invoke(stypy.reporting.localization.Localization(__file__, 2296, 19), hatchPattern_239498, *[hatch_style_239499], **kwargs_239500)
        
        # Assigning a type to the variable 'name' (line 2296)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2296, 12), 'name', hatchPattern_call_result_239501)
        
        # Obtaining an instance of the builtin type 'list' (line 2297)
        list_239502 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2297, 19), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2297)
        # Adding element type (line 2297)
        
        # Call to Name(...): (line 2297)
        # Processing the call arguments (line 2297)
        unicode_239504 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2297, 25), 'unicode', u'Pattern')
        # Processing the call keyword arguments (line 2297)
        kwargs_239505 = {}
        # Getting the type of 'Name' (line 2297)
        Name_239503 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2297, 20), 'Name', False)
        # Calling Name(args, kwargs) (line 2297)
        Name_call_result_239506 = invoke(stypy.reporting.localization.Localization(__file__, 2297, 20), Name_239503, *[unicode_239504], **kwargs_239505)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2297, 19), list_239502, Name_call_result_239506)
        # Adding element type (line 2297)
        # Getting the type of 'Op' (line 2297)
        Op_239507 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2297, 37), 'Op')
        # Obtaining the member 'setcolorspace_nonstroke' of a type (line 2297)
        setcolorspace_nonstroke_239508 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2297, 37), Op_239507, 'setcolorspace_nonstroke')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2297, 19), list_239502, setcolorspace_nonstroke_239508)
        # Adding element type (line 2297)
        # Getting the type of 'name' (line 2298)
        name_239509 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2298, 20), 'name')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2297, 19), list_239502, name_239509)
        # Adding element type (line 2297)
        # Getting the type of 'Op' (line 2298)
        Op_239510 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2298, 26), 'Op')
        # Obtaining the member 'setcolor_nonstroke' of a type (line 2298)
        setcolor_nonstroke_239511 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2298, 26), Op_239510, 'setcolor_nonstroke')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2297, 19), list_239502, setcolor_nonstroke_239511)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2297)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2297, 12), 'stypy_return_type', list_239502)
        # SSA join for if statement (line 2289)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'hatch_cmd(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'hatch_cmd' in the type store
        # Getting the type of 'stypy_return_type' (line 2288)
        stypy_return_type_239512 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2288, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_239512)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'hatch_cmd'
        return stypy_return_type_239512


    @norecursion
    def rgb_cmd(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'rgb_cmd'
        module_type_store = module_type_store.open_function_context('rgb_cmd', 2300, 4, False)
        # Assigning a type to the variable 'self' (line 2301)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2301, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        GraphicsContextPdf.rgb_cmd.__dict__.__setitem__('stypy_localization', localization)
        GraphicsContextPdf.rgb_cmd.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        GraphicsContextPdf.rgb_cmd.__dict__.__setitem__('stypy_type_store', module_type_store)
        GraphicsContextPdf.rgb_cmd.__dict__.__setitem__('stypy_function_name', 'GraphicsContextPdf.rgb_cmd')
        GraphicsContextPdf.rgb_cmd.__dict__.__setitem__('stypy_param_names_list', ['rgb'])
        GraphicsContextPdf.rgb_cmd.__dict__.__setitem__('stypy_varargs_param_name', None)
        GraphicsContextPdf.rgb_cmd.__dict__.__setitem__('stypy_kwargs_param_name', None)
        GraphicsContextPdf.rgb_cmd.__dict__.__setitem__('stypy_call_defaults', defaults)
        GraphicsContextPdf.rgb_cmd.__dict__.__setitem__('stypy_call_varargs', varargs)
        GraphicsContextPdf.rgb_cmd.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        GraphicsContextPdf.rgb_cmd.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'GraphicsContextPdf.rgb_cmd', ['rgb'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'rgb_cmd', localization, ['rgb'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'rgb_cmd(...)' code ##################

        
        
        # Obtaining the type of the subscript
        unicode_239513 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2301, 20), 'unicode', u'pdf.inheritcolor')
        # Getting the type of 'rcParams' (line 2301)
        rcParams_239514 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2301, 11), 'rcParams')
        # Obtaining the member '__getitem__' of a type (line 2301)
        getitem___239515 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2301, 11), rcParams_239514, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2301)
        subscript_call_result_239516 = invoke(stypy.reporting.localization.Localization(__file__, 2301, 11), getitem___239515, unicode_239513)
        
        # Testing the type of an if condition (line 2301)
        if_condition_239517 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2301, 8), subscript_call_result_239516)
        # Assigning a type to the variable 'if_condition_239517' (line 2301)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2301, 8), 'if_condition_239517', if_condition_239517)
        # SSA begins for if statement (line 2301)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Obtaining an instance of the builtin type 'list' (line 2302)
        list_239518 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2302, 19), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2302)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2302)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2302, 12), 'stypy_return_type', list_239518)
        # SSA join for if statement (line 2301)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        
        # Obtaining the type of the subscript
        int_239519 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2303, 15), 'int')
        # Getting the type of 'rgb' (line 2303)
        rgb_239520 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2303, 11), 'rgb')
        # Obtaining the member '__getitem__' of a type (line 2303)
        getitem___239521 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2303, 11), rgb_239520, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2303)
        subscript_call_result_239522 = invoke(stypy.reporting.localization.Localization(__file__, 2303, 11), getitem___239521, int_239519)
        
        
        # Obtaining the type of the subscript
        int_239523 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2303, 25), 'int')
        # Getting the type of 'rgb' (line 2303)
        rgb_239524 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2303, 21), 'rgb')
        # Obtaining the member '__getitem__' of a type (line 2303)
        getitem___239525 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2303, 21), rgb_239524, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2303)
        subscript_call_result_239526 = invoke(stypy.reporting.localization.Localization(__file__, 2303, 21), getitem___239525, int_239523)
        
        # Applying the binary operator '==' (line 2303)
        result_eq_239527 = python_operator(stypy.reporting.localization.Localization(__file__, 2303, 11), '==', subscript_call_result_239522, subscript_call_result_239526)
        
        # Obtaining the type of the subscript
        int_239528 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2303, 35), 'int')
        # Getting the type of 'rgb' (line 2303)
        rgb_239529 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2303, 31), 'rgb')
        # Obtaining the member '__getitem__' of a type (line 2303)
        getitem___239530 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2303, 31), rgb_239529, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2303)
        subscript_call_result_239531 = invoke(stypy.reporting.localization.Localization(__file__, 2303, 31), getitem___239530, int_239528)
        
        # Applying the binary operator '==' (line 2303)
        result_eq_239532 = python_operator(stypy.reporting.localization.Localization(__file__, 2303, 11), '==', subscript_call_result_239526, subscript_call_result_239531)
        # Applying the binary operator '&' (line 2303)
        result_and__239533 = python_operator(stypy.reporting.localization.Localization(__file__, 2303, 11), '&', result_eq_239527, result_eq_239532)
        
        # Testing the type of an if condition (line 2303)
        if_condition_239534 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2303, 8), result_and__239533)
        # Assigning a type to the variable 'if_condition_239534' (line 2303)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2303, 8), 'if_condition_239534', if_condition_239534)
        # SSA begins for if statement (line 2303)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Obtaining an instance of the builtin type 'list' (line 2304)
        list_239535 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2304, 19), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2304)
        # Adding element type (line 2304)
        
        # Obtaining the type of the subscript
        int_239536 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2304, 24), 'int')
        # Getting the type of 'rgb' (line 2304)
        rgb_239537 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2304, 20), 'rgb')
        # Obtaining the member '__getitem__' of a type (line 2304)
        getitem___239538 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2304, 20), rgb_239537, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2304)
        subscript_call_result_239539 = invoke(stypy.reporting.localization.Localization(__file__, 2304, 20), getitem___239538, int_239536)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2304, 19), list_239535, subscript_call_result_239539)
        # Adding element type (line 2304)
        # Getting the type of 'Op' (line 2304)
        Op_239540 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2304, 28), 'Op')
        # Obtaining the member 'setgray_stroke' of a type (line 2304)
        setgray_stroke_239541 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2304, 28), Op_239540, 'setgray_stroke')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2304, 19), list_239535, setgray_stroke_239541)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2304)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2304, 12), 'stypy_return_type', list_239535)
        # SSA branch for the else part of an if statement (line 2303)
        module_type_store.open_ssa_branch('else')
        
        # Call to list(...): (line 2306)
        # Processing the call arguments (line 2306)
        
        # Obtaining the type of the subscript
        int_239543 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2306, 29), 'int')
        slice_239544 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 2306, 24), None, int_239543, None)
        # Getting the type of 'rgb' (line 2306)
        rgb_239545 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2306, 24), 'rgb', False)
        # Obtaining the member '__getitem__' of a type (line 2306)
        getitem___239546 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2306, 24), rgb_239545, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2306)
        subscript_call_result_239547 = invoke(stypy.reporting.localization.Localization(__file__, 2306, 24), getitem___239546, slice_239544)
        
        # Processing the call keyword arguments (line 2306)
        kwargs_239548 = {}
        # Getting the type of 'list' (line 2306)
        list_239542 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2306, 19), 'list', False)
        # Calling list(args, kwargs) (line 2306)
        list_call_result_239549 = invoke(stypy.reporting.localization.Localization(__file__, 2306, 19), list_239542, *[subscript_call_result_239547], **kwargs_239548)
        
        
        # Obtaining an instance of the builtin type 'list' (line 2306)
        list_239550 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2306, 35), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2306)
        # Adding element type (line 2306)
        # Getting the type of 'Op' (line 2306)
        Op_239551 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2306, 36), 'Op')
        # Obtaining the member 'setrgb_stroke' of a type (line 2306)
        setrgb_stroke_239552 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2306, 36), Op_239551, 'setrgb_stroke')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2306, 35), list_239550, setrgb_stroke_239552)
        
        # Applying the binary operator '+' (line 2306)
        result_add_239553 = python_operator(stypy.reporting.localization.Localization(__file__, 2306, 19), '+', list_call_result_239549, list_239550)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2306)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2306, 12), 'stypy_return_type', result_add_239553)
        # SSA join for if statement (line 2303)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'rgb_cmd(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'rgb_cmd' in the type store
        # Getting the type of 'stypy_return_type' (line 2300)
        stypy_return_type_239554 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2300, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_239554)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'rgb_cmd'
        return stypy_return_type_239554


    @norecursion
    def fillcolor_cmd(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'fillcolor_cmd'
        module_type_store = module_type_store.open_function_context('fillcolor_cmd', 2308, 4, False)
        # Assigning a type to the variable 'self' (line 2309)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2309, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        GraphicsContextPdf.fillcolor_cmd.__dict__.__setitem__('stypy_localization', localization)
        GraphicsContextPdf.fillcolor_cmd.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        GraphicsContextPdf.fillcolor_cmd.__dict__.__setitem__('stypy_type_store', module_type_store)
        GraphicsContextPdf.fillcolor_cmd.__dict__.__setitem__('stypy_function_name', 'GraphicsContextPdf.fillcolor_cmd')
        GraphicsContextPdf.fillcolor_cmd.__dict__.__setitem__('stypy_param_names_list', ['rgb'])
        GraphicsContextPdf.fillcolor_cmd.__dict__.__setitem__('stypy_varargs_param_name', None)
        GraphicsContextPdf.fillcolor_cmd.__dict__.__setitem__('stypy_kwargs_param_name', None)
        GraphicsContextPdf.fillcolor_cmd.__dict__.__setitem__('stypy_call_defaults', defaults)
        GraphicsContextPdf.fillcolor_cmd.__dict__.__setitem__('stypy_call_varargs', varargs)
        GraphicsContextPdf.fillcolor_cmd.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        GraphicsContextPdf.fillcolor_cmd.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'GraphicsContextPdf.fillcolor_cmd', ['rgb'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'fillcolor_cmd', localization, ['rgb'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'fillcolor_cmd(...)' code ##################

        
        
        # Evaluating a boolean operation
        
        # Getting the type of 'rgb' (line 2309)
        rgb_239555 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2309, 11), 'rgb')
        # Getting the type of 'None' (line 2309)
        None_239556 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2309, 18), 'None')
        # Applying the binary operator 'is' (line 2309)
        result_is__239557 = python_operator(stypy.reporting.localization.Localization(__file__, 2309, 11), 'is', rgb_239555, None_239556)
        
        
        # Obtaining the type of the subscript
        unicode_239558 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2309, 35), 'unicode', u'pdf.inheritcolor')
        # Getting the type of 'rcParams' (line 2309)
        rcParams_239559 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2309, 26), 'rcParams')
        # Obtaining the member '__getitem__' of a type (line 2309)
        getitem___239560 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2309, 26), rcParams_239559, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2309)
        subscript_call_result_239561 = invoke(stypy.reporting.localization.Localization(__file__, 2309, 26), getitem___239560, unicode_239558)
        
        # Applying the binary operator 'or' (line 2309)
        result_or_keyword_239562 = python_operator(stypy.reporting.localization.Localization(__file__, 2309, 11), 'or', result_is__239557, subscript_call_result_239561)
        
        # Testing the type of an if condition (line 2309)
        if_condition_239563 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2309, 8), result_or_keyword_239562)
        # Assigning a type to the variable 'if_condition_239563' (line 2309)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2309, 8), 'if_condition_239563', if_condition_239563)
        # SSA begins for if statement (line 2309)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Obtaining an instance of the builtin type 'list' (line 2310)
        list_239564 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2310, 19), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2310)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2310)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2310, 12), 'stypy_return_type', list_239564)
        # SSA branch for the else part of an if statement (line 2309)
        module_type_store.open_ssa_branch('else')
        
        
        
        # Obtaining the type of the subscript
        int_239565 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2311, 17), 'int')
        # Getting the type of 'rgb' (line 2311)
        rgb_239566 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2311, 13), 'rgb')
        # Obtaining the member '__getitem__' of a type (line 2311)
        getitem___239567 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2311, 13), rgb_239566, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2311)
        subscript_call_result_239568 = invoke(stypy.reporting.localization.Localization(__file__, 2311, 13), getitem___239567, int_239565)
        
        
        # Obtaining the type of the subscript
        int_239569 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2311, 27), 'int')
        # Getting the type of 'rgb' (line 2311)
        rgb_239570 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2311, 23), 'rgb')
        # Obtaining the member '__getitem__' of a type (line 2311)
        getitem___239571 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2311, 23), rgb_239570, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2311)
        subscript_call_result_239572 = invoke(stypy.reporting.localization.Localization(__file__, 2311, 23), getitem___239571, int_239569)
        
        # Applying the binary operator '==' (line 2311)
        result_eq_239573 = python_operator(stypy.reporting.localization.Localization(__file__, 2311, 13), '==', subscript_call_result_239568, subscript_call_result_239572)
        
        # Obtaining the type of the subscript
        int_239574 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2311, 37), 'int')
        # Getting the type of 'rgb' (line 2311)
        rgb_239575 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2311, 33), 'rgb')
        # Obtaining the member '__getitem__' of a type (line 2311)
        getitem___239576 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2311, 33), rgb_239575, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2311)
        subscript_call_result_239577 = invoke(stypy.reporting.localization.Localization(__file__, 2311, 33), getitem___239576, int_239574)
        
        # Applying the binary operator '==' (line 2311)
        result_eq_239578 = python_operator(stypy.reporting.localization.Localization(__file__, 2311, 13), '==', subscript_call_result_239572, subscript_call_result_239577)
        # Applying the binary operator '&' (line 2311)
        result_and__239579 = python_operator(stypy.reporting.localization.Localization(__file__, 2311, 13), '&', result_eq_239573, result_eq_239578)
        
        # Testing the type of an if condition (line 2311)
        if_condition_239580 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2311, 13), result_and__239579)
        # Assigning a type to the variable 'if_condition_239580' (line 2311)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2311, 13), 'if_condition_239580', if_condition_239580)
        # SSA begins for if statement (line 2311)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Obtaining an instance of the builtin type 'list' (line 2312)
        list_239581 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2312, 19), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2312)
        # Adding element type (line 2312)
        
        # Obtaining the type of the subscript
        int_239582 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2312, 24), 'int')
        # Getting the type of 'rgb' (line 2312)
        rgb_239583 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2312, 20), 'rgb')
        # Obtaining the member '__getitem__' of a type (line 2312)
        getitem___239584 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2312, 20), rgb_239583, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2312)
        subscript_call_result_239585 = invoke(stypy.reporting.localization.Localization(__file__, 2312, 20), getitem___239584, int_239582)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2312, 19), list_239581, subscript_call_result_239585)
        # Adding element type (line 2312)
        # Getting the type of 'Op' (line 2312)
        Op_239586 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2312, 28), 'Op')
        # Obtaining the member 'setgray_nonstroke' of a type (line 2312)
        setgray_nonstroke_239587 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2312, 28), Op_239586, 'setgray_nonstroke')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2312, 19), list_239581, setgray_nonstroke_239587)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2312)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2312, 12), 'stypy_return_type', list_239581)
        # SSA branch for the else part of an if statement (line 2311)
        module_type_store.open_ssa_branch('else')
        
        # Call to list(...): (line 2314)
        # Processing the call arguments (line 2314)
        
        # Obtaining the type of the subscript
        int_239589 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2314, 29), 'int')
        slice_239590 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 2314, 24), None, int_239589, None)
        # Getting the type of 'rgb' (line 2314)
        rgb_239591 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2314, 24), 'rgb', False)
        # Obtaining the member '__getitem__' of a type (line 2314)
        getitem___239592 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2314, 24), rgb_239591, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2314)
        subscript_call_result_239593 = invoke(stypy.reporting.localization.Localization(__file__, 2314, 24), getitem___239592, slice_239590)
        
        # Processing the call keyword arguments (line 2314)
        kwargs_239594 = {}
        # Getting the type of 'list' (line 2314)
        list_239588 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2314, 19), 'list', False)
        # Calling list(args, kwargs) (line 2314)
        list_call_result_239595 = invoke(stypy.reporting.localization.Localization(__file__, 2314, 19), list_239588, *[subscript_call_result_239593], **kwargs_239594)
        
        
        # Obtaining an instance of the builtin type 'list' (line 2314)
        list_239596 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2314, 35), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2314)
        # Adding element type (line 2314)
        # Getting the type of 'Op' (line 2314)
        Op_239597 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2314, 36), 'Op')
        # Obtaining the member 'setrgb_nonstroke' of a type (line 2314)
        setrgb_nonstroke_239598 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2314, 36), Op_239597, 'setrgb_nonstroke')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2314, 35), list_239596, setrgb_nonstroke_239598)
        
        # Applying the binary operator '+' (line 2314)
        result_add_239599 = python_operator(stypy.reporting.localization.Localization(__file__, 2314, 19), '+', list_call_result_239595, list_239596)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2314)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2314, 12), 'stypy_return_type', result_add_239599)
        # SSA join for if statement (line 2311)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 2309)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'fillcolor_cmd(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'fillcolor_cmd' in the type store
        # Getting the type of 'stypy_return_type' (line 2308)
        stypy_return_type_239600 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2308, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_239600)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'fillcolor_cmd'
        return stypy_return_type_239600


    @norecursion
    def push(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'push'
        module_type_store = module_type_store.open_function_context('push', 2316, 4, False)
        # Assigning a type to the variable 'self' (line 2317)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2317, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        GraphicsContextPdf.push.__dict__.__setitem__('stypy_localization', localization)
        GraphicsContextPdf.push.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        GraphicsContextPdf.push.__dict__.__setitem__('stypy_type_store', module_type_store)
        GraphicsContextPdf.push.__dict__.__setitem__('stypy_function_name', 'GraphicsContextPdf.push')
        GraphicsContextPdf.push.__dict__.__setitem__('stypy_param_names_list', [])
        GraphicsContextPdf.push.__dict__.__setitem__('stypy_varargs_param_name', None)
        GraphicsContextPdf.push.__dict__.__setitem__('stypy_kwargs_param_name', None)
        GraphicsContextPdf.push.__dict__.__setitem__('stypy_call_defaults', defaults)
        GraphicsContextPdf.push.__dict__.__setitem__('stypy_call_varargs', varargs)
        GraphicsContextPdf.push.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        GraphicsContextPdf.push.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'GraphicsContextPdf.push', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'push', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'push(...)' code ##################

        
        # Assigning a Call to a Name (line 2317):
        
        # Assigning a Call to a Name (line 2317):
        
        # Call to GraphicsContextPdf(...): (line 2317)
        # Processing the call arguments (line 2317)
        # Getting the type of 'self' (line 2317)
        self_239602 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2317, 36), 'self', False)
        # Obtaining the member 'file' of a type (line 2317)
        file_239603 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2317, 36), self_239602, 'file')
        # Processing the call keyword arguments (line 2317)
        kwargs_239604 = {}
        # Getting the type of 'GraphicsContextPdf' (line 2317)
        GraphicsContextPdf_239601 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2317, 17), 'GraphicsContextPdf', False)
        # Calling GraphicsContextPdf(args, kwargs) (line 2317)
        GraphicsContextPdf_call_result_239605 = invoke(stypy.reporting.localization.Localization(__file__, 2317, 17), GraphicsContextPdf_239601, *[file_239603], **kwargs_239604)
        
        # Assigning a type to the variable 'parent' (line 2317)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2317, 8), 'parent', GraphicsContextPdf_call_result_239605)
        
        # Call to copy_properties(...): (line 2318)
        # Processing the call arguments (line 2318)
        # Getting the type of 'self' (line 2318)
        self_239608 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2318, 31), 'self', False)
        # Processing the call keyword arguments (line 2318)
        kwargs_239609 = {}
        # Getting the type of 'parent' (line 2318)
        parent_239606 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2318, 8), 'parent', False)
        # Obtaining the member 'copy_properties' of a type (line 2318)
        copy_properties_239607 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2318, 8), parent_239606, 'copy_properties')
        # Calling copy_properties(args, kwargs) (line 2318)
        copy_properties_call_result_239610 = invoke(stypy.reporting.localization.Localization(__file__, 2318, 8), copy_properties_239607, *[self_239608], **kwargs_239609)
        
        
        # Assigning a Attribute to a Attribute (line 2319):
        
        # Assigning a Attribute to a Attribute (line 2319):
        # Getting the type of 'self' (line 2319)
        self_239611 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2319, 24), 'self')
        # Obtaining the member 'parent' of a type (line 2319)
        parent_239612 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2319, 24), self_239611, 'parent')
        # Getting the type of 'parent' (line 2319)
        parent_239613 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2319, 8), 'parent')
        # Setting the type of the member 'parent' of a type (line 2319)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2319, 8), parent_239613, 'parent', parent_239612)
        
        # Assigning a Name to a Attribute (line 2320):
        
        # Assigning a Name to a Attribute (line 2320):
        # Getting the type of 'parent' (line 2320)
        parent_239614 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2320, 22), 'parent')
        # Getting the type of 'self' (line 2320)
        self_239615 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2320, 8), 'self')
        # Setting the type of the member 'parent' of a type (line 2320)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2320, 8), self_239615, 'parent', parent_239614)
        
        # Obtaining an instance of the builtin type 'list' (line 2321)
        list_239616 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2321, 15), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2321)
        # Adding element type (line 2321)
        # Getting the type of 'Op' (line 2321)
        Op_239617 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2321, 16), 'Op')
        # Obtaining the member 'gsave' of a type (line 2321)
        gsave_239618 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2321, 16), Op_239617, 'gsave')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2321, 15), list_239616, gsave_239618)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2321)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2321, 8), 'stypy_return_type', list_239616)
        
        # ################# End of 'push(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'push' in the type store
        # Getting the type of 'stypy_return_type' (line 2316)
        stypy_return_type_239619 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2316, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_239619)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'push'
        return stypy_return_type_239619


    @norecursion
    def pop(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'pop'
        module_type_store = module_type_store.open_function_context('pop', 2323, 4, False)
        # Assigning a type to the variable 'self' (line 2324)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2324, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        GraphicsContextPdf.pop.__dict__.__setitem__('stypy_localization', localization)
        GraphicsContextPdf.pop.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        GraphicsContextPdf.pop.__dict__.__setitem__('stypy_type_store', module_type_store)
        GraphicsContextPdf.pop.__dict__.__setitem__('stypy_function_name', 'GraphicsContextPdf.pop')
        GraphicsContextPdf.pop.__dict__.__setitem__('stypy_param_names_list', [])
        GraphicsContextPdf.pop.__dict__.__setitem__('stypy_varargs_param_name', None)
        GraphicsContextPdf.pop.__dict__.__setitem__('stypy_kwargs_param_name', None)
        GraphicsContextPdf.pop.__dict__.__setitem__('stypy_call_defaults', defaults)
        GraphicsContextPdf.pop.__dict__.__setitem__('stypy_call_varargs', varargs)
        GraphicsContextPdf.pop.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        GraphicsContextPdf.pop.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'GraphicsContextPdf.pop', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'pop', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'pop(...)' code ##################

        # Evaluating assert statement condition
        
        # Getting the type of 'self' (line 2324)
        self_239620 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2324, 15), 'self')
        # Obtaining the member 'parent' of a type (line 2324)
        parent_239621 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2324, 15), self_239620, 'parent')
        # Getting the type of 'None' (line 2324)
        None_239622 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2324, 34), 'None')
        # Applying the binary operator 'isnot' (line 2324)
        result_is_not_239623 = python_operator(stypy.reporting.localization.Localization(__file__, 2324, 15), 'isnot', parent_239621, None_239622)
        
        
        # Call to copy_properties(...): (line 2325)
        # Processing the call arguments (line 2325)
        # Getting the type of 'self' (line 2325)
        self_239626 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2325, 29), 'self', False)
        # Obtaining the member 'parent' of a type (line 2325)
        parent_239627 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2325, 29), self_239626, 'parent')
        # Processing the call keyword arguments (line 2325)
        kwargs_239628 = {}
        # Getting the type of 'self' (line 2325)
        self_239624 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2325, 8), 'self', False)
        # Obtaining the member 'copy_properties' of a type (line 2325)
        copy_properties_239625 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2325, 8), self_239624, 'copy_properties')
        # Calling copy_properties(args, kwargs) (line 2325)
        copy_properties_call_result_239629 = invoke(stypy.reporting.localization.Localization(__file__, 2325, 8), copy_properties_239625, *[parent_239627], **kwargs_239628)
        
        
        # Assigning a Attribute to a Attribute (line 2326):
        
        # Assigning a Attribute to a Attribute (line 2326):
        # Getting the type of 'self' (line 2326)
        self_239630 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2326, 22), 'self')
        # Obtaining the member 'parent' of a type (line 2326)
        parent_239631 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2326, 22), self_239630, 'parent')
        # Obtaining the member 'parent' of a type (line 2326)
        parent_239632 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2326, 22), parent_239631, 'parent')
        # Getting the type of 'self' (line 2326)
        self_239633 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2326, 8), 'self')
        # Setting the type of the member 'parent' of a type (line 2326)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2326, 8), self_239633, 'parent', parent_239632)
        
        # Obtaining an instance of the builtin type 'list' (line 2327)
        list_239634 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2327, 15), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2327)
        # Adding element type (line 2327)
        # Getting the type of 'Op' (line 2327)
        Op_239635 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2327, 16), 'Op')
        # Obtaining the member 'grestore' of a type (line 2327)
        grestore_239636 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2327, 16), Op_239635, 'grestore')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2327, 15), list_239634, grestore_239636)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2327)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2327, 8), 'stypy_return_type', list_239634)
        
        # ################# End of 'pop(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'pop' in the type store
        # Getting the type of 'stypy_return_type' (line 2323)
        stypy_return_type_239637 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2323, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_239637)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'pop'
        return stypy_return_type_239637


    @norecursion
    def clip_cmd(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'clip_cmd'
        module_type_store = module_type_store.open_function_context('clip_cmd', 2329, 4, False)
        # Assigning a type to the variable 'self' (line 2330)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2330, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        GraphicsContextPdf.clip_cmd.__dict__.__setitem__('stypy_localization', localization)
        GraphicsContextPdf.clip_cmd.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        GraphicsContextPdf.clip_cmd.__dict__.__setitem__('stypy_type_store', module_type_store)
        GraphicsContextPdf.clip_cmd.__dict__.__setitem__('stypy_function_name', 'GraphicsContextPdf.clip_cmd')
        GraphicsContextPdf.clip_cmd.__dict__.__setitem__('stypy_param_names_list', ['cliprect', 'clippath'])
        GraphicsContextPdf.clip_cmd.__dict__.__setitem__('stypy_varargs_param_name', None)
        GraphicsContextPdf.clip_cmd.__dict__.__setitem__('stypy_kwargs_param_name', None)
        GraphicsContextPdf.clip_cmd.__dict__.__setitem__('stypy_call_defaults', defaults)
        GraphicsContextPdf.clip_cmd.__dict__.__setitem__('stypy_call_varargs', varargs)
        GraphicsContextPdf.clip_cmd.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        GraphicsContextPdf.clip_cmd.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'GraphicsContextPdf.clip_cmd', ['cliprect', 'clippath'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'clip_cmd', localization, ['cliprect', 'clippath'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'clip_cmd(...)' code ##################

        unicode_239638 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2330, 8), 'unicode', u'Set clip rectangle. Calls self.pop() and self.push().')
        
        # Assigning a List to a Name (line 2331):
        
        # Assigning a List to a Name (line 2331):
        
        # Obtaining an instance of the builtin type 'list' (line 2331)
        list_239639 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2331, 15), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2331)
        
        # Assigning a type to the variable 'cmds' (line 2331)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2331, 8), 'cmds', list_239639)
        
        
        # Evaluating a boolean operation
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 2333)
        tuple_239640 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2333, 16), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 2333)
        # Adding element type (line 2333)
        # Getting the type of 'self' (line 2333)
        self_239641 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2333, 16), 'self')
        # Obtaining the member '_cliprect' of a type (line 2333)
        _cliprect_239642 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2333, 16), self_239641, '_cliprect')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2333, 16), tuple_239640, _cliprect_239642)
        # Adding element type (line 2333)
        # Getting the type of 'self' (line 2333)
        self_239643 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2333, 32), 'self')
        # Obtaining the member '_clippath' of a type (line 2333)
        _clippath_239644 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2333, 32), self_239643, '_clippath')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2333, 16), tuple_239640, _clippath_239644)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 2333)
        tuple_239645 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2333, 52), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 2333)
        # Adding element type (line 2333)
        # Getting the type of 'cliprect' (line 2333)
        cliprect_239646 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2333, 52), 'cliprect')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2333, 52), tuple_239645, cliprect_239646)
        # Adding element type (line 2333)
        # Getting the type of 'clippath' (line 2333)
        clippath_239647 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2333, 62), 'clippath')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2333, 52), tuple_239645, clippath_239647)
        
        # Applying the binary operator '!=' (line 2333)
        result_ne_239648 = python_operator(stypy.reporting.localization.Localization(__file__, 2333, 15), '!=', tuple_239640, tuple_239645)
        
        
        # Getting the type of 'self' (line 2334)
        self_239649 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2334, 20), 'self')
        # Obtaining the member 'parent' of a type (line 2334)
        parent_239650 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2334, 20), self_239649, 'parent')
        # Getting the type of 'None' (line 2334)
        None_239651 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2334, 39), 'None')
        # Applying the binary operator 'isnot' (line 2334)
        result_is_not_239652 = python_operator(stypy.reporting.localization.Localization(__file__, 2334, 20), 'isnot', parent_239650, None_239651)
        
        # Applying the binary operator 'and' (line 2333)
        result_and_keyword_239653 = python_operator(stypy.reporting.localization.Localization(__file__, 2333, 15), 'and', result_ne_239648, result_is_not_239652)
        
        # Testing the type of an if condition (line 2333)
        is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2333, 8), result_and_keyword_239653)
        # SSA begins for while statement (line 2333)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'while loop')
        
        # Call to extend(...): (line 2335)
        # Processing the call arguments (line 2335)
        
        # Call to pop(...): (line 2335)
        # Processing the call keyword arguments (line 2335)
        kwargs_239658 = {}
        # Getting the type of 'self' (line 2335)
        self_239656 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2335, 24), 'self', False)
        # Obtaining the member 'pop' of a type (line 2335)
        pop_239657 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2335, 24), self_239656, 'pop')
        # Calling pop(args, kwargs) (line 2335)
        pop_call_result_239659 = invoke(stypy.reporting.localization.Localization(__file__, 2335, 24), pop_239657, *[], **kwargs_239658)
        
        # Processing the call keyword arguments (line 2335)
        kwargs_239660 = {}
        # Getting the type of 'cmds' (line 2335)
        cmds_239654 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2335, 12), 'cmds', False)
        # Obtaining the member 'extend' of a type (line 2335)
        extend_239655 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2335, 12), cmds_239654, 'extend')
        # Calling extend(args, kwargs) (line 2335)
        extend_call_result_239661 = invoke(stypy.reporting.localization.Localization(__file__, 2335, 12), extend_239655, *[pop_call_result_239659], **kwargs_239660)
        
        # SSA join for while statement (line 2333)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Evaluating a boolean operation
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 2337)
        tuple_239662 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2337, 13), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 2337)
        # Adding element type (line 2337)
        # Getting the type of 'self' (line 2337)
        self_239663 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2337, 13), 'self')
        # Obtaining the member '_cliprect' of a type (line 2337)
        _cliprect_239664 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2337, 13), self_239663, '_cliprect')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2337, 13), tuple_239662, _cliprect_239664)
        # Adding element type (line 2337)
        # Getting the type of 'self' (line 2337)
        self_239665 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2337, 29), 'self')
        # Obtaining the member '_clippath' of a type (line 2337)
        _clippath_239666 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2337, 29), self_239665, '_clippath')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2337, 13), tuple_239662, _clippath_239666)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 2337)
        tuple_239667 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2337, 49), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 2337)
        # Adding element type (line 2337)
        # Getting the type of 'cliprect' (line 2337)
        cliprect_239668 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2337, 49), 'cliprect')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2337, 49), tuple_239667, cliprect_239668)
        # Adding element type (line 2337)
        # Getting the type of 'clippath' (line 2337)
        clippath_239669 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2337, 59), 'clippath')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2337, 49), tuple_239667, clippath_239669)
        
        # Applying the binary operator '!=' (line 2337)
        result_ne_239670 = python_operator(stypy.reporting.localization.Localization(__file__, 2337, 12), '!=', tuple_239662, tuple_239667)
        
        
        # Getting the type of 'self' (line 2338)
        self_239671 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2338, 16), 'self')
        # Obtaining the member 'parent' of a type (line 2338)
        parent_239672 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2338, 16), self_239671, 'parent')
        # Getting the type of 'None' (line 2338)
        None_239673 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2338, 31), 'None')
        # Applying the binary operator 'is' (line 2338)
        result_is__239674 = python_operator(stypy.reporting.localization.Localization(__file__, 2338, 16), 'is', parent_239672, None_239673)
        
        # Applying the binary operator 'or' (line 2337)
        result_or_keyword_239675 = python_operator(stypy.reporting.localization.Localization(__file__, 2337, 12), 'or', result_ne_239670, result_is__239674)
        
        # Testing the type of an if condition (line 2337)
        if_condition_239676 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2337, 8), result_or_keyword_239675)
        # Assigning a type to the variable 'if_condition_239676' (line 2337)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2337, 8), 'if_condition_239676', if_condition_239676)
        # SSA begins for if statement (line 2337)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to extend(...): (line 2339)
        # Processing the call arguments (line 2339)
        
        # Call to push(...): (line 2339)
        # Processing the call keyword arguments (line 2339)
        kwargs_239681 = {}
        # Getting the type of 'self' (line 2339)
        self_239679 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2339, 24), 'self', False)
        # Obtaining the member 'push' of a type (line 2339)
        push_239680 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2339, 24), self_239679, 'push')
        # Calling push(args, kwargs) (line 2339)
        push_call_result_239682 = invoke(stypy.reporting.localization.Localization(__file__, 2339, 24), push_239680, *[], **kwargs_239681)
        
        # Processing the call keyword arguments (line 2339)
        kwargs_239683 = {}
        # Getting the type of 'cmds' (line 2339)
        cmds_239677 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2339, 12), 'cmds', False)
        # Obtaining the member 'extend' of a type (line 2339)
        extend_239678 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2339, 12), cmds_239677, 'extend')
        # Calling extend(args, kwargs) (line 2339)
        extend_call_result_239684 = invoke(stypy.reporting.localization.Localization(__file__, 2339, 12), extend_239678, *[push_call_result_239682], **kwargs_239683)
        
        
        
        # Getting the type of 'self' (line 2340)
        self_239685 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2340, 15), 'self')
        # Obtaining the member '_cliprect' of a type (line 2340)
        _cliprect_239686 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2340, 15), self_239685, '_cliprect')
        # Getting the type of 'cliprect' (line 2340)
        cliprect_239687 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2340, 33), 'cliprect')
        # Applying the binary operator '!=' (line 2340)
        result_ne_239688 = python_operator(stypy.reporting.localization.Localization(__file__, 2340, 15), '!=', _cliprect_239686, cliprect_239687)
        
        # Testing the type of an if condition (line 2340)
        if_condition_239689 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2340, 12), result_ne_239688)
        # Assigning a type to the variable 'if_condition_239689' (line 2340)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2340, 12), 'if_condition_239689', if_condition_239689)
        # SSA begins for if statement (line 2340)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to extend(...): (line 2341)
        # Processing the call arguments (line 2341)
        
        # Obtaining an instance of the builtin type 'list' (line 2341)
        list_239692 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2341, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2341)
        # Adding element type (line 2341)
        # Getting the type of 'cliprect' (line 2341)
        cliprect_239693 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2341, 29), 'cliprect', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2341, 28), list_239692, cliprect_239693)
        # Adding element type (line 2341)
        # Getting the type of 'Op' (line 2341)
        Op_239694 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2341, 39), 'Op', False)
        # Obtaining the member 'rectangle' of a type (line 2341)
        rectangle_239695 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2341, 39), Op_239694, 'rectangle')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2341, 28), list_239692, rectangle_239695)
        # Adding element type (line 2341)
        # Getting the type of 'Op' (line 2341)
        Op_239696 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2341, 53), 'Op', False)
        # Obtaining the member 'clip' of a type (line 2341)
        clip_239697 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2341, 53), Op_239696, 'clip')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2341, 28), list_239692, clip_239697)
        # Adding element type (line 2341)
        # Getting the type of 'Op' (line 2341)
        Op_239698 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2341, 62), 'Op', False)
        # Obtaining the member 'endpath' of a type (line 2341)
        endpath_239699 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2341, 62), Op_239698, 'endpath')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2341, 28), list_239692, endpath_239699)
        
        # Processing the call keyword arguments (line 2341)
        kwargs_239700 = {}
        # Getting the type of 'cmds' (line 2341)
        cmds_239690 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2341, 16), 'cmds', False)
        # Obtaining the member 'extend' of a type (line 2341)
        extend_239691 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2341, 16), cmds_239690, 'extend')
        # Calling extend(args, kwargs) (line 2341)
        extend_call_result_239701 = invoke(stypy.reporting.localization.Localization(__file__, 2341, 16), extend_239691, *[list_239692], **kwargs_239700)
        
        # SSA join for if statement (line 2340)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'self' (line 2342)
        self_239702 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2342, 15), 'self')
        # Obtaining the member '_clippath' of a type (line 2342)
        _clippath_239703 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2342, 15), self_239702, '_clippath')
        # Getting the type of 'clippath' (line 2342)
        clippath_239704 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2342, 33), 'clippath')
        # Applying the binary operator '!=' (line 2342)
        result_ne_239705 = python_operator(stypy.reporting.localization.Localization(__file__, 2342, 15), '!=', _clippath_239703, clippath_239704)
        
        # Testing the type of an if condition (line 2342)
        if_condition_239706 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2342, 12), result_ne_239705)
        # Assigning a type to the variable 'if_condition_239706' (line 2342)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2342, 12), 'if_condition_239706', if_condition_239706)
        # SSA begins for if statement (line 2342)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Tuple (line 2343):
        
        # Assigning a Call to a Name:
        
        # Call to get_transformed_path_and_affine(...): (line 2343)
        # Processing the call keyword arguments (line 2343)
        kwargs_239709 = {}
        # Getting the type of 'clippath' (line 2343)
        clippath_239707 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2343, 31), 'clippath', False)
        # Obtaining the member 'get_transformed_path_and_affine' of a type (line 2343)
        get_transformed_path_and_affine_239708 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2343, 31), clippath_239707, 'get_transformed_path_and_affine')
        # Calling get_transformed_path_and_affine(args, kwargs) (line 2343)
        get_transformed_path_and_affine_call_result_239710 = invoke(stypy.reporting.localization.Localization(__file__, 2343, 31), get_transformed_path_and_affine_239708, *[], **kwargs_239709)
        
        # Assigning a type to the variable 'call_assignment_231760' (line 2343)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2343, 16), 'call_assignment_231760', get_transformed_path_and_affine_call_result_239710)
        
        # Assigning a Call to a Name (line 2343):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_239713 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2343, 16), 'int')
        # Processing the call keyword arguments
        kwargs_239714 = {}
        # Getting the type of 'call_assignment_231760' (line 2343)
        call_assignment_231760_239711 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2343, 16), 'call_assignment_231760', False)
        # Obtaining the member '__getitem__' of a type (line 2343)
        getitem___239712 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2343, 16), call_assignment_231760_239711, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_239715 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___239712, *[int_239713], **kwargs_239714)
        
        # Assigning a type to the variable 'call_assignment_231761' (line 2343)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2343, 16), 'call_assignment_231761', getitem___call_result_239715)
        
        # Assigning a Name to a Name (line 2343):
        # Getting the type of 'call_assignment_231761' (line 2343)
        call_assignment_231761_239716 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2343, 16), 'call_assignment_231761')
        # Assigning a type to the variable 'path' (line 2343)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2343, 16), 'path', call_assignment_231761_239716)
        
        # Assigning a Call to a Name (line 2343):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_239719 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2343, 16), 'int')
        # Processing the call keyword arguments
        kwargs_239720 = {}
        # Getting the type of 'call_assignment_231760' (line 2343)
        call_assignment_231760_239717 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2343, 16), 'call_assignment_231760', False)
        # Obtaining the member '__getitem__' of a type (line 2343)
        getitem___239718 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2343, 16), call_assignment_231760_239717, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_239721 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___239718, *[int_239719], **kwargs_239720)
        
        # Assigning a type to the variable 'call_assignment_231762' (line 2343)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2343, 16), 'call_assignment_231762', getitem___call_result_239721)
        
        # Assigning a Name to a Name (line 2343):
        # Getting the type of 'call_assignment_231762' (line 2343)
        call_assignment_231762_239722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2343, 16), 'call_assignment_231762')
        # Assigning a type to the variable 'affine' (line 2343)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2343, 22), 'affine', call_assignment_231762_239722)
        
        # Call to extend(...): (line 2344)
        # Processing the call arguments (line 2344)
        
        # Call to pathOperations(...): (line 2345)
        # Processing the call arguments (line 2345)
        # Getting the type of 'path' (line 2345)
        path_239727 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2345, 43), 'path', False)
        # Getting the type of 'affine' (line 2345)
        affine_239728 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2345, 49), 'affine', False)
        # Processing the call keyword arguments (line 2345)
        # Getting the type of 'False' (line 2345)
        False_239729 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2345, 66), 'False', False)
        keyword_239730 = False_239729
        kwargs_239731 = {'simplify': keyword_239730}
        # Getting the type of 'PdfFile' (line 2345)
        PdfFile_239725 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2345, 20), 'PdfFile', False)
        # Obtaining the member 'pathOperations' of a type (line 2345)
        pathOperations_239726 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2345, 20), PdfFile_239725, 'pathOperations')
        # Calling pathOperations(args, kwargs) (line 2345)
        pathOperations_call_result_239732 = invoke(stypy.reporting.localization.Localization(__file__, 2345, 20), pathOperations_239726, *[path_239727, affine_239728], **kwargs_239731)
        
        
        # Obtaining an instance of the builtin type 'list' (line 2346)
        list_239733 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2346, 20), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2346)
        # Adding element type (line 2346)
        # Getting the type of 'Op' (line 2346)
        Op_239734 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2346, 21), 'Op', False)
        # Obtaining the member 'clip' of a type (line 2346)
        clip_239735 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2346, 21), Op_239734, 'clip')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2346, 20), list_239733, clip_239735)
        # Adding element type (line 2346)
        # Getting the type of 'Op' (line 2346)
        Op_239736 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2346, 30), 'Op', False)
        # Obtaining the member 'endpath' of a type (line 2346)
        endpath_239737 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2346, 30), Op_239736, 'endpath')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2346, 20), list_239733, endpath_239737)
        
        # Applying the binary operator '+' (line 2345)
        result_add_239738 = python_operator(stypy.reporting.localization.Localization(__file__, 2345, 20), '+', pathOperations_call_result_239732, list_239733)
        
        # Processing the call keyword arguments (line 2344)
        kwargs_239739 = {}
        # Getting the type of 'cmds' (line 2344)
        cmds_239723 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2344, 16), 'cmds', False)
        # Obtaining the member 'extend' of a type (line 2344)
        extend_239724 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2344, 16), cmds_239723, 'extend')
        # Calling extend(args, kwargs) (line 2344)
        extend_call_result_239740 = invoke(stypy.reporting.localization.Localization(__file__, 2344, 16), extend_239724, *[result_add_239738], **kwargs_239739)
        
        # SSA join for if statement (line 2342)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 2337)
        module_type_store = module_type_store.join_ssa_context()
        
        # Getting the type of 'cmds' (line 2347)
        cmds_239741 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2347, 15), 'cmds')
        # Assigning a type to the variable 'stypy_return_type' (line 2347)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2347, 8), 'stypy_return_type', cmds_239741)
        
        # ################# End of 'clip_cmd(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'clip_cmd' in the type store
        # Getting the type of 'stypy_return_type' (line 2329)
        stypy_return_type_239742 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2329, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_239742)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'clip_cmd'
        return stypy_return_type_239742

    
    # Assigning a Tuple to a Name (line 2349):

    @norecursion
    def delta(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'delta'
        module_type_store = module_type_store.open_function_context('delta', 2363, 4, False)
        # Assigning a type to the variable 'self' (line 2364)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2364, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        GraphicsContextPdf.delta.__dict__.__setitem__('stypy_localization', localization)
        GraphicsContextPdf.delta.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        GraphicsContextPdf.delta.__dict__.__setitem__('stypy_type_store', module_type_store)
        GraphicsContextPdf.delta.__dict__.__setitem__('stypy_function_name', 'GraphicsContextPdf.delta')
        GraphicsContextPdf.delta.__dict__.__setitem__('stypy_param_names_list', ['other'])
        GraphicsContextPdf.delta.__dict__.__setitem__('stypy_varargs_param_name', None)
        GraphicsContextPdf.delta.__dict__.__setitem__('stypy_kwargs_param_name', None)
        GraphicsContextPdf.delta.__dict__.__setitem__('stypy_call_defaults', defaults)
        GraphicsContextPdf.delta.__dict__.__setitem__('stypy_call_varargs', varargs)
        GraphicsContextPdf.delta.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        GraphicsContextPdf.delta.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'GraphicsContextPdf.delta', ['other'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'delta', localization, ['other'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'delta(...)' code ##################

        unicode_239743 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2367, (-1)), 'unicode', u'\n        Copy properties of other into self and return PDF commands\n        needed to transform self into other.\n        ')
        
        # Assigning a List to a Name (line 2368):
        
        # Assigning a List to a Name (line 2368):
        
        # Obtaining an instance of the builtin type 'list' (line 2368)
        list_239744 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2368, 15), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2368)
        
        # Assigning a type to the variable 'cmds' (line 2368)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2368, 8), 'cmds', list_239744)
        
        # Assigning a Name to a Name (line 2369):
        
        # Assigning a Name to a Name (line 2369):
        # Getting the type of 'False' (line 2369)
        False_239745 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2369, 25), 'False')
        # Assigning a type to the variable 'fill_performed' (line 2369)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2369, 8), 'fill_performed', False_239745)
        
        # Getting the type of 'self' (line 2370)
        self_239746 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2370, 27), 'self')
        # Obtaining the member 'commands' of a type (line 2370)
        commands_239747 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2370, 27), self_239746, 'commands')
        # Testing the type of a for loop iterable (line 2370)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2370, 8), commands_239747)
        # Getting the type of the for loop variable (line 2370)
        for_loop_var_239748 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2370, 8), commands_239747)
        # Assigning a type to the variable 'params' (line 2370)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2370, 8), 'params', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2370, 8), for_loop_var_239748))
        # Assigning a type to the variable 'cmd' (line 2370)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2370, 8), 'cmd', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2370, 8), for_loop_var_239748))
        # SSA begins for a for statement (line 2370)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Name to a Name (line 2371):
        
        # Assigning a Name to a Name (line 2371):
        # Getting the type of 'False' (line 2371)
        False_239749 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2371, 24), 'False')
        # Assigning a type to the variable 'different' (line 2371)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2371, 12), 'different', False_239749)
        
        # Getting the type of 'params' (line 2372)
        params_239750 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2372, 21), 'params')
        # Testing the type of a for loop iterable (line 2372)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2372, 12), params_239750)
        # Getting the type of the for loop variable (line 2372)
        for_loop_var_239751 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2372, 12), params_239750)
        # Assigning a type to the variable 'p' (line 2372)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2372, 12), 'p', for_loop_var_239751)
        # SSA begins for a for statement (line 2372)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 2373):
        
        # Assigning a Call to a Name (line 2373):
        
        # Call to getattr(...): (line 2373)
        # Processing the call arguments (line 2373)
        # Getting the type of 'self' (line 2373)
        self_239753 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2373, 31), 'self', False)
        # Getting the type of 'p' (line 2373)
        p_239754 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2373, 37), 'p', False)
        # Processing the call keyword arguments (line 2373)
        kwargs_239755 = {}
        # Getting the type of 'getattr' (line 2373)
        getattr_239752 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2373, 23), 'getattr', False)
        # Calling getattr(args, kwargs) (line 2373)
        getattr_call_result_239756 = invoke(stypy.reporting.localization.Localization(__file__, 2373, 23), getattr_239752, *[self_239753, p_239754], **kwargs_239755)
        
        # Assigning a type to the variable 'ours' (line 2373)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2373, 16), 'ours', getattr_call_result_239756)
        
        # Assigning a Call to a Name (line 2374):
        
        # Assigning a Call to a Name (line 2374):
        
        # Call to getattr(...): (line 2374)
        # Processing the call arguments (line 2374)
        # Getting the type of 'other' (line 2374)
        other_239758 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2374, 33), 'other', False)
        # Getting the type of 'p' (line 2374)
        p_239759 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2374, 40), 'p', False)
        # Processing the call keyword arguments (line 2374)
        kwargs_239760 = {}
        # Getting the type of 'getattr' (line 2374)
        getattr_239757 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2374, 25), 'getattr', False)
        # Calling getattr(args, kwargs) (line 2374)
        getattr_call_result_239761 = invoke(stypy.reporting.localization.Localization(__file__, 2374, 25), getattr_239757, *[other_239758, p_239759], **kwargs_239760)
        
        # Assigning a type to the variable 'theirs' (line 2374)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2374, 16), 'theirs', getattr_call_result_239761)
        
        
        # SSA begins for try-except statement (line 2375)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
        
        
        # Evaluating a boolean operation
        
        # Getting the type of 'ours' (line 2376)
        ours_239762 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2376, 24), 'ours')
        # Getting the type of 'None' (line 2376)
        None_239763 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2376, 32), 'None')
        # Applying the binary operator 'is' (line 2376)
        result_is__239764 = python_operator(stypy.reporting.localization.Localization(__file__, 2376, 24), 'is', ours_239762, None_239763)
        
        
        # Getting the type of 'theirs' (line 2376)
        theirs_239765 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2376, 40), 'theirs')
        # Getting the type of 'None' (line 2376)
        None_239766 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2376, 50), 'None')
        # Applying the binary operator 'is' (line 2376)
        result_is__239767 = python_operator(stypy.reporting.localization.Localization(__file__, 2376, 40), 'is', theirs_239765, None_239766)
        
        # Applying the binary operator 'or' (line 2376)
        result_or_keyword_239768 = python_operator(stypy.reporting.localization.Localization(__file__, 2376, 24), 'or', result_is__239764, result_is__239767)
        
        # Testing the type of an if condition (line 2376)
        if_condition_239769 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2376, 20), result_or_keyword_239768)
        # Assigning a type to the variable 'if_condition_239769' (line 2376)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2376, 20), 'if_condition_239769', if_condition_239769)
        # SSA begins for if statement (line 2376)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 2377):
        
        # Assigning a Call to a Name (line 2377):
        
        # Call to bool(...): (line 2377)
        # Processing the call arguments (line 2377)
        
        
        # Getting the type of 'ours' (line 2377)
        ours_239771 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2377, 45), 'ours', False)
        # Getting the type of 'theirs' (line 2377)
        theirs_239772 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2377, 53), 'theirs', False)
        # Applying the binary operator 'is' (line 2377)
        result_is__239773 = python_operator(stypy.reporting.localization.Localization(__file__, 2377, 45), 'is', ours_239771, theirs_239772)
        
        # Applying the 'not' unary operator (line 2377)
        result_not__239774 = python_operator(stypy.reporting.localization.Localization(__file__, 2377, 41), 'not', result_is__239773)
        
        # Processing the call keyword arguments (line 2377)
        kwargs_239775 = {}
        # Getting the type of 'bool' (line 2377)
        bool_239770 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2377, 36), 'bool', False)
        # Calling bool(args, kwargs) (line 2377)
        bool_call_result_239776 = invoke(stypy.reporting.localization.Localization(__file__, 2377, 36), bool_239770, *[result_not__239774], **kwargs_239775)
        
        # Assigning a type to the variable 'different' (line 2377)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2377, 24), 'different', bool_call_result_239776)
        # SSA branch for the else part of an if statement (line 2376)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Call to a Name (line 2379):
        
        # Assigning a Call to a Name (line 2379):
        
        # Call to bool(...): (line 2379)
        # Processing the call arguments (line 2379)
        
        # Getting the type of 'ours' (line 2379)
        ours_239778 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2379, 41), 'ours', False)
        # Getting the type of 'theirs' (line 2379)
        theirs_239779 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2379, 49), 'theirs', False)
        # Applying the binary operator '!=' (line 2379)
        result_ne_239780 = python_operator(stypy.reporting.localization.Localization(__file__, 2379, 41), '!=', ours_239778, theirs_239779)
        
        # Processing the call keyword arguments (line 2379)
        kwargs_239781 = {}
        # Getting the type of 'bool' (line 2379)
        bool_239777 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2379, 36), 'bool', False)
        # Calling bool(args, kwargs) (line 2379)
        bool_call_result_239782 = invoke(stypy.reporting.localization.Localization(__file__, 2379, 36), bool_239777, *[result_ne_239780], **kwargs_239781)
        
        # Assigning a type to the variable 'different' (line 2379)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2379, 24), 'different', bool_call_result_239782)
        # SSA join for if statement (line 2376)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA branch for the except part of a try statement (line 2375)
        # SSA branch for the except 'ValueError' branch of a try statement (line 2375)
        module_type_store.open_ssa_branch('except')
        
        # Assigning a Call to a Name (line 2381):
        
        # Assigning a Call to a Name (line 2381):
        
        # Call to asarray(...): (line 2381)
        # Processing the call arguments (line 2381)
        # Getting the type of 'ours' (line 2381)
        ours_239785 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2381, 38), 'ours', False)
        # Processing the call keyword arguments (line 2381)
        kwargs_239786 = {}
        # Getting the type of 'np' (line 2381)
        np_239783 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2381, 27), 'np', False)
        # Obtaining the member 'asarray' of a type (line 2381)
        asarray_239784 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2381, 27), np_239783, 'asarray')
        # Calling asarray(args, kwargs) (line 2381)
        asarray_call_result_239787 = invoke(stypy.reporting.localization.Localization(__file__, 2381, 27), asarray_239784, *[ours_239785], **kwargs_239786)
        
        # Assigning a type to the variable 'ours' (line 2381)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2381, 20), 'ours', asarray_call_result_239787)
        
        # Assigning a Call to a Name (line 2382):
        
        # Assigning a Call to a Name (line 2382):
        
        # Call to asarray(...): (line 2382)
        # Processing the call arguments (line 2382)
        # Getting the type of 'theirs' (line 2382)
        theirs_239790 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2382, 40), 'theirs', False)
        # Processing the call keyword arguments (line 2382)
        kwargs_239791 = {}
        # Getting the type of 'np' (line 2382)
        np_239788 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2382, 29), 'np', False)
        # Obtaining the member 'asarray' of a type (line 2382)
        asarray_239789 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2382, 29), np_239788, 'asarray')
        # Calling asarray(args, kwargs) (line 2382)
        asarray_call_result_239792 = invoke(stypy.reporting.localization.Localization(__file__, 2382, 29), asarray_239789, *[theirs_239790], **kwargs_239791)
        
        # Assigning a type to the variable 'theirs' (line 2382)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2382, 20), 'theirs', asarray_call_result_239792)
        
        # Assigning a BoolOp to a Name (line 2383):
        
        # Assigning a BoolOp to a Name (line 2383):
        
        # Evaluating a boolean operation
        
        # Getting the type of 'ours' (line 2383)
        ours_239793 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2383, 33), 'ours')
        # Obtaining the member 'shape' of a type (line 2383)
        shape_239794 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2383, 33), ours_239793, 'shape')
        # Getting the type of 'theirs' (line 2383)
        theirs_239795 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2383, 47), 'theirs')
        # Obtaining the member 'shape' of a type (line 2383)
        shape_239796 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2383, 47), theirs_239795, 'shape')
        # Applying the binary operator '!=' (line 2383)
        result_ne_239797 = python_operator(stypy.reporting.localization.Localization(__file__, 2383, 33), '!=', shape_239794, shape_239796)
        
        
        # Call to any(...): (line 2384)
        # Processing the call arguments (line 2384)
        
        # Getting the type of 'ours' (line 2384)
        ours_239800 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2384, 40), 'ours', False)
        # Getting the type of 'theirs' (line 2384)
        theirs_239801 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2384, 48), 'theirs', False)
        # Applying the binary operator '!=' (line 2384)
        result_ne_239802 = python_operator(stypy.reporting.localization.Localization(__file__, 2384, 40), '!=', ours_239800, theirs_239801)
        
        # Processing the call keyword arguments (line 2384)
        kwargs_239803 = {}
        # Getting the type of 'np' (line 2384)
        np_239798 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2384, 33), 'np', False)
        # Obtaining the member 'any' of a type (line 2384)
        any_239799 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2384, 33), np_239798, 'any')
        # Calling any(args, kwargs) (line 2384)
        any_call_result_239804 = invoke(stypy.reporting.localization.Localization(__file__, 2384, 33), any_239799, *[result_ne_239802], **kwargs_239803)
        
        # Applying the binary operator 'or' (line 2383)
        result_or_keyword_239805 = python_operator(stypy.reporting.localization.Localization(__file__, 2383, 33), 'or', result_ne_239797, any_call_result_239804)
        
        # Assigning a type to the variable 'different' (line 2383)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2383, 20), 'different', result_or_keyword_239805)
        # SSA join for try-except statement (line 2375)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'different' (line 2385)
        different_239806 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2385, 19), 'different')
        # Testing the type of an if condition (line 2385)
        if_condition_239807 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2385, 16), different_239806)
        # Assigning a type to the variable 'if_condition_239807' (line 2385)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2385, 16), 'if_condition_239807', if_condition_239807)
        # SSA begins for if statement (line 2385)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        # SSA join for if statement (line 2385)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Evaluating a boolean operation
        
        # Getting the type of 'params' (line 2389)
        params_239808 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2389, 15), 'params')
        
        # Obtaining an instance of the builtin type 'tuple' (line 2389)
        tuple_239809 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2389, 26), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 2389)
        # Adding element type (line 2389)
        unicode_239810 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2389, 26), 'unicode', u'_hatch')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2389, 26), tuple_239809, unicode_239810)
        # Adding element type (line 2389)
        unicode_239811 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2389, 36), 'unicode', u'_hatch_color')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2389, 26), tuple_239809, unicode_239811)
        
        # Applying the binary operator '==' (line 2389)
        result_eq_239812 = python_operator(stypy.reporting.localization.Localization(__file__, 2389, 15), '==', params_239808, tuple_239809)
        
        # Getting the type of 'fill_performed' (line 2389)
        fill_performed_239813 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2389, 56), 'fill_performed')
        # Applying the binary operator 'and' (line 2389)
        result_and_keyword_239814 = python_operator(stypy.reporting.localization.Localization(__file__, 2389, 15), 'and', result_eq_239812, fill_performed_239813)
        
        # Testing the type of an if condition (line 2389)
        if_condition_239815 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2389, 12), result_and_keyword_239814)
        # Assigning a type to the variable 'if_condition_239815' (line 2389)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2389, 12), 'if_condition_239815', if_condition_239815)
        # SSA begins for if statement (line 2389)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Name to a Name (line 2390):
        
        # Assigning a Name to a Name (line 2390):
        # Getting the type of 'True' (line 2390)
        True_239816 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2390, 28), 'True')
        # Assigning a type to the variable 'different' (line 2390)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2390, 16), 'different', True_239816)
        # SSA join for if statement (line 2389)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'different' (line 2392)
        different_239817 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2392, 15), 'different')
        # Testing the type of an if condition (line 2392)
        if_condition_239818 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2392, 12), different_239817)
        # Assigning a type to the variable 'if_condition_239818' (line 2392)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2392, 12), 'if_condition_239818', if_condition_239818)
        # SSA begins for if statement (line 2392)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        
        # Getting the type of 'params' (line 2393)
        params_239819 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2393, 19), 'params')
        
        # Obtaining an instance of the builtin type 'tuple' (line 2393)
        tuple_239820 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2393, 30), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 2393)
        # Adding element type (line 2393)
        unicode_239821 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2393, 30), 'unicode', u'_fillcolor')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2393, 30), tuple_239820, unicode_239821)
        
        # Applying the binary operator '==' (line 2393)
        result_eq_239822 = python_operator(stypy.reporting.localization.Localization(__file__, 2393, 19), '==', params_239819, tuple_239820)
        
        # Testing the type of an if condition (line 2393)
        if_condition_239823 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2393, 16), result_eq_239822)
        # Assigning a type to the variable 'if_condition_239823' (line 2393)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2393, 16), 'if_condition_239823', if_condition_239823)
        # SSA begins for if statement (line 2393)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Name to a Name (line 2394):
        
        # Assigning a Name to a Name (line 2394):
        # Getting the type of 'True' (line 2394)
        True_239824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2394, 37), 'True')
        # Assigning a type to the variable 'fill_performed' (line 2394)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2394, 20), 'fill_performed', True_239824)
        # SSA join for if statement (line 2393)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a ListComp to a Name (line 2395):
        
        # Assigning a ListComp to a Name (line 2395):
        # Calculating list comprehension
        # Calculating comprehension expression
        # Getting the type of 'params' (line 2395)
        params_239830 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2395, 53), 'params')
        comprehension_239831 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2395, 26), params_239830)
        # Assigning a type to the variable 'p' (line 2395)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2395, 26), 'p', comprehension_239831)
        
        # Call to getattr(...): (line 2395)
        # Processing the call arguments (line 2395)
        # Getting the type of 'other' (line 2395)
        other_239826 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2395, 34), 'other', False)
        # Getting the type of 'p' (line 2395)
        p_239827 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2395, 41), 'p', False)
        # Processing the call keyword arguments (line 2395)
        kwargs_239828 = {}
        # Getting the type of 'getattr' (line 2395)
        getattr_239825 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2395, 26), 'getattr', False)
        # Calling getattr(args, kwargs) (line 2395)
        getattr_call_result_239829 = invoke(stypy.reporting.localization.Localization(__file__, 2395, 26), getattr_239825, *[other_239826, p_239827], **kwargs_239828)
        
        list_239832 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2395, 26), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2395, 26), list_239832, getattr_call_result_239829)
        # Assigning a type to the variable 'theirs' (line 2395)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2395, 16), 'theirs', list_239832)
        
        # Call to extend(...): (line 2396)
        # Processing the call arguments (line 2396)
        
        # Call to cmd(...): (line 2396)
        # Processing the call arguments (line 2396)
        # Getting the type of 'self' (line 2396)
        self_239836 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2396, 32), 'self', False)
        # Getting the type of 'theirs' (line 2396)
        theirs_239837 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2396, 39), 'theirs', False)
        # Processing the call keyword arguments (line 2396)
        kwargs_239838 = {}
        # Getting the type of 'cmd' (line 2396)
        cmd_239835 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2396, 28), 'cmd', False)
        # Calling cmd(args, kwargs) (line 2396)
        cmd_call_result_239839 = invoke(stypy.reporting.localization.Localization(__file__, 2396, 28), cmd_239835, *[self_239836, theirs_239837], **kwargs_239838)
        
        # Processing the call keyword arguments (line 2396)
        kwargs_239840 = {}
        # Getting the type of 'cmds' (line 2396)
        cmds_239833 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2396, 16), 'cmds', False)
        # Obtaining the member 'extend' of a type (line 2396)
        extend_239834 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2396, 16), cmds_239833, 'extend')
        # Calling extend(args, kwargs) (line 2396)
        extend_call_result_239841 = invoke(stypy.reporting.localization.Localization(__file__, 2396, 16), extend_239834, *[cmd_call_result_239839], **kwargs_239840)
        
        
        # Getting the type of 'params' (line 2397)
        params_239842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2397, 25), 'params')
        # Testing the type of a for loop iterable (line 2397)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2397, 16), params_239842)
        # Getting the type of the for loop variable (line 2397)
        for_loop_var_239843 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2397, 16), params_239842)
        # Assigning a type to the variable 'p' (line 2397)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2397, 16), 'p', for_loop_var_239843)
        # SSA begins for a for statement (line 2397)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to setattr(...): (line 2398)
        # Processing the call arguments (line 2398)
        # Getting the type of 'self' (line 2398)
        self_239845 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2398, 28), 'self', False)
        # Getting the type of 'p' (line 2398)
        p_239846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2398, 34), 'p', False)
        
        # Call to getattr(...): (line 2398)
        # Processing the call arguments (line 2398)
        # Getting the type of 'other' (line 2398)
        other_239848 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2398, 45), 'other', False)
        # Getting the type of 'p' (line 2398)
        p_239849 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2398, 52), 'p', False)
        # Processing the call keyword arguments (line 2398)
        kwargs_239850 = {}
        # Getting the type of 'getattr' (line 2398)
        getattr_239847 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2398, 37), 'getattr', False)
        # Calling getattr(args, kwargs) (line 2398)
        getattr_call_result_239851 = invoke(stypy.reporting.localization.Localization(__file__, 2398, 37), getattr_239847, *[other_239848, p_239849], **kwargs_239850)
        
        # Processing the call keyword arguments (line 2398)
        kwargs_239852 = {}
        # Getting the type of 'setattr' (line 2398)
        setattr_239844 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2398, 20), 'setattr', False)
        # Calling setattr(args, kwargs) (line 2398)
        setattr_call_result_239853 = invoke(stypy.reporting.localization.Localization(__file__, 2398, 20), setattr_239844, *[self_239845, p_239846, getattr_call_result_239851], **kwargs_239852)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 2392)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        # Getting the type of 'cmds' (line 2399)
        cmds_239854 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2399, 15), 'cmds')
        # Assigning a type to the variable 'stypy_return_type' (line 2399)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2399, 8), 'stypy_return_type', cmds_239854)
        
        # ################# End of 'delta(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'delta' in the type store
        # Getting the type of 'stypy_return_type' (line 2363)
        stypy_return_type_239855 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2363, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_239855)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'delta'
        return stypy_return_type_239855


    @norecursion
    def copy_properties(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'copy_properties'
        module_type_store = module_type_store.open_function_context('copy_properties', 2401, 4, False)
        # Assigning a type to the variable 'self' (line 2402)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2402, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        GraphicsContextPdf.copy_properties.__dict__.__setitem__('stypy_localization', localization)
        GraphicsContextPdf.copy_properties.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        GraphicsContextPdf.copy_properties.__dict__.__setitem__('stypy_type_store', module_type_store)
        GraphicsContextPdf.copy_properties.__dict__.__setitem__('stypy_function_name', 'GraphicsContextPdf.copy_properties')
        GraphicsContextPdf.copy_properties.__dict__.__setitem__('stypy_param_names_list', ['other'])
        GraphicsContextPdf.copy_properties.__dict__.__setitem__('stypy_varargs_param_name', None)
        GraphicsContextPdf.copy_properties.__dict__.__setitem__('stypy_kwargs_param_name', None)
        GraphicsContextPdf.copy_properties.__dict__.__setitem__('stypy_call_defaults', defaults)
        GraphicsContextPdf.copy_properties.__dict__.__setitem__('stypy_call_varargs', varargs)
        GraphicsContextPdf.copy_properties.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        GraphicsContextPdf.copy_properties.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'GraphicsContextPdf.copy_properties', ['other'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'copy_properties', localization, ['other'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'copy_properties(...)' code ##################

        unicode_239856 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2404, (-1)), 'unicode', u'\n        Copy properties of other into self.\n        ')
        
        # Call to copy_properties(...): (line 2405)
        # Processing the call arguments (line 2405)
        # Getting the type of 'self' (line 2405)
        self_239859 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2405, 44), 'self', False)
        # Getting the type of 'other' (line 2405)
        other_239860 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2405, 50), 'other', False)
        # Processing the call keyword arguments (line 2405)
        kwargs_239861 = {}
        # Getting the type of 'GraphicsContextBase' (line 2405)
        GraphicsContextBase_239857 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2405, 8), 'GraphicsContextBase', False)
        # Obtaining the member 'copy_properties' of a type (line 2405)
        copy_properties_239858 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2405, 8), GraphicsContextBase_239857, 'copy_properties')
        # Calling copy_properties(args, kwargs) (line 2405)
        copy_properties_call_result_239862 = invoke(stypy.reporting.localization.Localization(__file__, 2405, 8), copy_properties_239858, *[self_239859, other_239860], **kwargs_239861)
        
        
        # Assigning a Call to a Name (line 2406):
        
        # Assigning a Call to a Name (line 2406):
        
        # Call to getattr(...): (line 2406)
        # Processing the call arguments (line 2406)
        # Getting the type of 'other' (line 2406)
        other_239864 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2406, 28), 'other', False)
        unicode_239865 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2406, 35), 'unicode', u'_fillcolor')
        # Getting the type of 'self' (line 2406)
        self_239866 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2406, 49), 'self', False)
        # Obtaining the member '_fillcolor' of a type (line 2406)
        _fillcolor_239867 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2406, 49), self_239866, '_fillcolor')
        # Processing the call keyword arguments (line 2406)
        kwargs_239868 = {}
        # Getting the type of 'getattr' (line 2406)
        getattr_239863 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2406, 20), 'getattr', False)
        # Calling getattr(args, kwargs) (line 2406)
        getattr_call_result_239869 = invoke(stypy.reporting.localization.Localization(__file__, 2406, 20), getattr_239863, *[other_239864, unicode_239865, _fillcolor_239867], **kwargs_239868)
        
        # Assigning a type to the variable 'fillcolor' (line 2406)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2406, 8), 'fillcolor', getattr_call_result_239869)
        
        # Assigning a Call to a Name (line 2407):
        
        # Assigning a Call to a Name (line 2407):
        
        # Call to getattr(...): (line 2407)
        # Processing the call arguments (line 2407)
        # Getting the type of 'other' (line 2407)
        other_239871 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2407, 35), 'other', False)
        unicode_239872 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2407, 42), 'unicode', u'_effective_alphas')
        # Getting the type of 'self' (line 2408)
        self_239873 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2408, 35), 'self', False)
        # Obtaining the member '_effective_alphas' of a type (line 2408)
        _effective_alphas_239874 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2408, 35), self_239873, '_effective_alphas')
        # Processing the call keyword arguments (line 2407)
        kwargs_239875 = {}
        # Getting the type of 'getattr' (line 2407)
        getattr_239870 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2407, 27), 'getattr', False)
        # Calling getattr(args, kwargs) (line 2407)
        getattr_call_result_239876 = invoke(stypy.reporting.localization.Localization(__file__, 2407, 27), getattr_239870, *[other_239871, unicode_239872, _effective_alphas_239874], **kwargs_239875)
        
        # Assigning a type to the variable 'effective_alphas' (line 2407)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2407, 8), 'effective_alphas', getattr_call_result_239876)
        
        # Assigning a Name to a Attribute (line 2409):
        
        # Assigning a Name to a Attribute (line 2409):
        # Getting the type of 'fillcolor' (line 2409)
        fillcolor_239877 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2409, 26), 'fillcolor')
        # Getting the type of 'self' (line 2409)
        self_239878 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2409, 8), 'self')
        # Setting the type of the member '_fillcolor' of a type (line 2409)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2409, 8), self_239878, '_fillcolor', fillcolor_239877)
        
        # Assigning a Name to a Attribute (line 2410):
        
        # Assigning a Name to a Attribute (line 2410):
        # Getting the type of 'effective_alphas' (line 2410)
        effective_alphas_239879 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2410, 33), 'effective_alphas')
        # Getting the type of 'self' (line 2410)
        self_239880 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2410, 8), 'self')
        # Setting the type of the member '_effective_alphas' of a type (line 2410)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2410, 8), self_239880, '_effective_alphas', effective_alphas_239879)
        
        # ################# End of 'copy_properties(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'copy_properties' in the type store
        # Getting the type of 'stypy_return_type' (line 2401)
        stypy_return_type_239881 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2401, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_239881)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'copy_properties'
        return stypy_return_type_239881


    @norecursion
    def finalize(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'finalize'
        module_type_store = module_type_store.open_function_context('finalize', 2412, 4, False)
        # Assigning a type to the variable 'self' (line 2413)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2413, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        GraphicsContextPdf.finalize.__dict__.__setitem__('stypy_localization', localization)
        GraphicsContextPdf.finalize.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        GraphicsContextPdf.finalize.__dict__.__setitem__('stypy_type_store', module_type_store)
        GraphicsContextPdf.finalize.__dict__.__setitem__('stypy_function_name', 'GraphicsContextPdf.finalize')
        GraphicsContextPdf.finalize.__dict__.__setitem__('stypy_param_names_list', [])
        GraphicsContextPdf.finalize.__dict__.__setitem__('stypy_varargs_param_name', None)
        GraphicsContextPdf.finalize.__dict__.__setitem__('stypy_kwargs_param_name', None)
        GraphicsContextPdf.finalize.__dict__.__setitem__('stypy_call_defaults', defaults)
        GraphicsContextPdf.finalize.__dict__.__setitem__('stypy_call_varargs', varargs)
        GraphicsContextPdf.finalize.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        GraphicsContextPdf.finalize.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'GraphicsContextPdf.finalize', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'finalize', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'finalize(...)' code ##################

        unicode_239882 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2415, (-1)), 'unicode', u'\n        Make sure every pushed graphics state is popped.\n        ')
        
        # Assigning a List to a Name (line 2416):
        
        # Assigning a List to a Name (line 2416):
        
        # Obtaining an instance of the builtin type 'list' (line 2416)
        list_239883 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2416, 15), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2416)
        
        # Assigning a type to the variable 'cmds' (line 2416)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2416, 8), 'cmds', list_239883)
        
        
        # Getting the type of 'self' (line 2417)
        self_239884 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2417, 14), 'self')
        # Obtaining the member 'parent' of a type (line 2417)
        parent_239885 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2417, 14), self_239884, 'parent')
        # Getting the type of 'None' (line 2417)
        None_239886 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2417, 33), 'None')
        # Applying the binary operator 'isnot' (line 2417)
        result_is_not_239887 = python_operator(stypy.reporting.localization.Localization(__file__, 2417, 14), 'isnot', parent_239885, None_239886)
        
        # Testing the type of an if condition (line 2417)
        is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2417, 8), result_is_not_239887)
        # SSA begins for while statement (line 2417)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'while loop')
        
        # Call to extend(...): (line 2418)
        # Processing the call arguments (line 2418)
        
        # Call to pop(...): (line 2418)
        # Processing the call keyword arguments (line 2418)
        kwargs_239892 = {}
        # Getting the type of 'self' (line 2418)
        self_239890 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2418, 24), 'self', False)
        # Obtaining the member 'pop' of a type (line 2418)
        pop_239891 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2418, 24), self_239890, 'pop')
        # Calling pop(args, kwargs) (line 2418)
        pop_call_result_239893 = invoke(stypy.reporting.localization.Localization(__file__, 2418, 24), pop_239891, *[], **kwargs_239892)
        
        # Processing the call keyword arguments (line 2418)
        kwargs_239894 = {}
        # Getting the type of 'cmds' (line 2418)
        cmds_239888 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2418, 12), 'cmds', False)
        # Obtaining the member 'extend' of a type (line 2418)
        extend_239889 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2418, 12), cmds_239888, 'extend')
        # Calling extend(args, kwargs) (line 2418)
        extend_call_result_239895 = invoke(stypy.reporting.localization.Localization(__file__, 2418, 12), extend_239889, *[pop_call_result_239893], **kwargs_239894)
        
        # SSA join for while statement (line 2417)
        module_type_store = module_type_store.join_ssa_context()
        
        # Getting the type of 'cmds' (line 2419)
        cmds_239896 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2419, 15), 'cmds')
        # Assigning a type to the variable 'stypy_return_type' (line 2419)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2419, 8), 'stypy_return_type', cmds_239896)
        
        # ################# End of 'finalize(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'finalize' in the type store
        # Getting the type of 'stypy_return_type' (line 2412)
        stypy_return_type_239897 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2412, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_239897)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'finalize'
        return stypy_return_type_239897


# Assigning a type to the variable 'GraphicsContextPdf' (line 2217)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2217, 0), 'GraphicsContextPdf', GraphicsContextPdf)

# Assigning a Dict to a Name (line 2265):

# Obtaining an instance of the builtin type 'dict' (line 2265)
dict_239898 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2265, 16), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 2265)
# Adding element type (key, value) (line 2265)
unicode_239899 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2265, 17), 'unicode', u'butt')
int_239900 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2265, 25), 'int')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2265, 16), dict_239898, (unicode_239899, int_239900))
# Adding element type (key, value) (line 2265)
unicode_239901 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2265, 28), 'unicode', u'round')
int_239902 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2265, 37), 'int')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2265, 16), dict_239898, (unicode_239901, int_239902))
# Adding element type (key, value) (line 2265)
unicode_239903 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2265, 40), 'unicode', u'projecting')
int_239904 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2265, 54), 'int')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2265, 16), dict_239898, (unicode_239903, int_239904))

# Getting the type of 'GraphicsContextPdf'
GraphicsContextPdf_239905 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'GraphicsContextPdf')
# Setting the type of the member 'capstyles' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), GraphicsContextPdf_239905, 'capstyles', dict_239898)

# Assigning a Dict to a Name (line 2266):

# Obtaining an instance of the builtin type 'dict' (line 2266)
dict_239906 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2266, 17), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 2266)
# Adding element type (key, value) (line 2266)
unicode_239907 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2266, 18), 'unicode', u'miter')
int_239908 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2266, 27), 'int')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2266, 17), dict_239906, (unicode_239907, int_239908))
# Adding element type (key, value) (line 2266)
unicode_239909 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2266, 30), 'unicode', u'round')
int_239910 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2266, 39), 'int')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2266, 17), dict_239906, (unicode_239909, int_239910))
# Adding element type (key, value) (line 2266)
unicode_239911 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2266, 42), 'unicode', u'bevel')
int_239912 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2266, 51), 'int')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2266, 17), dict_239906, (unicode_239911, int_239912))

# Getting the type of 'GraphicsContextPdf'
GraphicsContextPdf_239913 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'GraphicsContextPdf')
# Setting the type of the member 'joinstyles' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), GraphicsContextPdf_239913, 'joinstyles', dict_239906)

# Assigning a Tuple to a Name (line 2349):

# Obtaining an instance of the builtin type 'tuple' (line 2351)
tuple_239914 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2351, 8), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 2351)
# Adding element type (line 2351)

# Obtaining an instance of the builtin type 'tuple' (line 2351)
tuple_239915 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2351, 9), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 2351)
# Adding element type (line 2351)

# Obtaining an instance of the builtin type 'tuple' (line 2351)
tuple_239916 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2351, 10), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 2351)
# Adding element type (line 2351)
unicode_239917 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2351, 10), 'unicode', u'_cliprect')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2351, 10), tuple_239916, unicode_239917)
# Adding element type (line 2351)
unicode_239918 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2351, 23), 'unicode', u'_clippath')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2351, 10), tuple_239916, unicode_239918)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2351, 9), tuple_239915, tuple_239916)
# Adding element type (line 2351)
# Getting the type of 'GraphicsContextPdf'
GraphicsContextPdf_239919 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'GraphicsContextPdf')
# Obtaining the member 'clip_cmd' of a type
clip_cmd_239920 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), GraphicsContextPdf_239919, 'clip_cmd')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2351, 9), tuple_239915, clip_cmd_239920)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2351, 8), tuple_239914, tuple_239915)
# Adding element type (line 2351)

# Obtaining an instance of the builtin type 'tuple' (line 2352)
tuple_239921 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2352, 9), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 2352)
# Adding element type (line 2352)

# Obtaining an instance of the builtin type 'tuple' (line 2352)
tuple_239922 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2352, 10), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 2352)
# Adding element type (line 2352)
unicode_239923 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2352, 10), 'unicode', u'_alpha')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2352, 10), tuple_239922, unicode_239923)
# Adding element type (line 2352)
unicode_239924 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2352, 20), 'unicode', u'_forced_alpha')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2352, 10), tuple_239922, unicode_239924)
# Adding element type (line 2352)
unicode_239925 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2352, 37), 'unicode', u'_effective_alphas')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2352, 10), tuple_239922, unicode_239925)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2352, 9), tuple_239921, tuple_239922)
# Adding element type (line 2352)
# Getting the type of 'GraphicsContextPdf'
GraphicsContextPdf_239926 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'GraphicsContextPdf')
# Obtaining the member 'alpha_cmd' of a type
alpha_cmd_239927 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), GraphicsContextPdf_239926, 'alpha_cmd')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2352, 9), tuple_239921, alpha_cmd_239927)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2351, 8), tuple_239914, tuple_239921)
# Adding element type (line 2351)

# Obtaining an instance of the builtin type 'tuple' (line 2353)
tuple_239928 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2353, 9), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 2353)
# Adding element type (line 2353)

# Obtaining an instance of the builtin type 'tuple' (line 2353)
tuple_239929 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2353, 10), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 2353)
# Adding element type (line 2353)
unicode_239930 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2353, 10), 'unicode', u'_capstyle')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2353, 10), tuple_239929, unicode_239930)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2353, 9), tuple_239928, tuple_239929)
# Adding element type (line 2353)
# Getting the type of 'GraphicsContextPdf'
GraphicsContextPdf_239931 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'GraphicsContextPdf')
# Obtaining the member 'capstyle_cmd' of a type
capstyle_cmd_239932 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), GraphicsContextPdf_239931, 'capstyle_cmd')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2353, 9), tuple_239928, capstyle_cmd_239932)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2351, 8), tuple_239914, tuple_239928)
# Adding element type (line 2351)

# Obtaining an instance of the builtin type 'tuple' (line 2354)
tuple_239933 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2354, 9), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 2354)
# Adding element type (line 2354)

# Obtaining an instance of the builtin type 'tuple' (line 2354)
tuple_239934 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2354, 10), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 2354)
# Adding element type (line 2354)
unicode_239935 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2354, 10), 'unicode', u'_fillcolor')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2354, 10), tuple_239934, unicode_239935)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2354, 9), tuple_239933, tuple_239934)
# Adding element type (line 2354)
# Getting the type of 'GraphicsContextPdf'
GraphicsContextPdf_239936 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'GraphicsContextPdf')
# Obtaining the member 'fillcolor_cmd' of a type
fillcolor_cmd_239937 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), GraphicsContextPdf_239936, 'fillcolor_cmd')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2354, 9), tuple_239933, fillcolor_cmd_239937)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2351, 8), tuple_239914, tuple_239933)
# Adding element type (line 2351)

# Obtaining an instance of the builtin type 'tuple' (line 2355)
tuple_239938 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2355, 9), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 2355)
# Adding element type (line 2355)

# Obtaining an instance of the builtin type 'tuple' (line 2355)
tuple_239939 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2355, 10), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 2355)
# Adding element type (line 2355)
unicode_239940 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2355, 10), 'unicode', u'_joinstyle')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2355, 10), tuple_239939, unicode_239940)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2355, 9), tuple_239938, tuple_239939)
# Adding element type (line 2355)
# Getting the type of 'GraphicsContextPdf'
GraphicsContextPdf_239941 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'GraphicsContextPdf')
# Obtaining the member 'joinstyle_cmd' of a type
joinstyle_cmd_239942 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), GraphicsContextPdf_239941, 'joinstyle_cmd')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2355, 9), tuple_239938, joinstyle_cmd_239942)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2351, 8), tuple_239914, tuple_239938)
# Adding element type (line 2351)

# Obtaining an instance of the builtin type 'tuple' (line 2356)
tuple_239943 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2356, 9), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 2356)
# Adding element type (line 2356)

# Obtaining an instance of the builtin type 'tuple' (line 2356)
tuple_239944 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2356, 10), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 2356)
# Adding element type (line 2356)
unicode_239945 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2356, 10), 'unicode', u'_linewidth')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2356, 10), tuple_239944, unicode_239945)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2356, 9), tuple_239943, tuple_239944)
# Adding element type (line 2356)
# Getting the type of 'GraphicsContextPdf'
GraphicsContextPdf_239946 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'GraphicsContextPdf')
# Obtaining the member 'linewidth_cmd' of a type
linewidth_cmd_239947 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), GraphicsContextPdf_239946, 'linewidth_cmd')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2356, 9), tuple_239943, linewidth_cmd_239947)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2351, 8), tuple_239914, tuple_239943)
# Adding element type (line 2351)

# Obtaining an instance of the builtin type 'tuple' (line 2357)
tuple_239948 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2357, 9), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 2357)
# Adding element type (line 2357)

# Obtaining an instance of the builtin type 'tuple' (line 2357)
tuple_239949 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2357, 10), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 2357)
# Adding element type (line 2357)
unicode_239950 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2357, 10), 'unicode', u'_dashes')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2357, 10), tuple_239949, unicode_239950)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2357, 9), tuple_239948, tuple_239949)
# Adding element type (line 2357)
# Getting the type of 'GraphicsContextPdf'
GraphicsContextPdf_239951 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'GraphicsContextPdf')
# Obtaining the member 'dash_cmd' of a type
dash_cmd_239952 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), GraphicsContextPdf_239951, 'dash_cmd')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2357, 9), tuple_239948, dash_cmd_239952)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2351, 8), tuple_239914, tuple_239948)
# Adding element type (line 2351)

# Obtaining an instance of the builtin type 'tuple' (line 2358)
tuple_239953 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2358, 9), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 2358)
# Adding element type (line 2358)

# Obtaining an instance of the builtin type 'tuple' (line 2358)
tuple_239954 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2358, 10), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 2358)
# Adding element type (line 2358)
unicode_239955 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2358, 10), 'unicode', u'_rgb')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2358, 10), tuple_239954, unicode_239955)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2358, 9), tuple_239953, tuple_239954)
# Adding element type (line 2358)
# Getting the type of 'GraphicsContextPdf'
GraphicsContextPdf_239956 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'GraphicsContextPdf')
# Obtaining the member 'rgb_cmd' of a type
rgb_cmd_239957 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), GraphicsContextPdf_239956, 'rgb_cmd')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2358, 9), tuple_239953, rgb_cmd_239957)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2351, 8), tuple_239914, tuple_239953)
# Adding element type (line 2351)

# Obtaining an instance of the builtin type 'tuple' (line 2360)
tuple_239958 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2360, 9), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 2360)
# Adding element type (line 2360)

# Obtaining an instance of the builtin type 'tuple' (line 2360)
tuple_239959 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2360, 10), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 2360)
# Adding element type (line 2360)
unicode_239960 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2360, 10), 'unicode', u'_hatch')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2360, 10), tuple_239959, unicode_239960)
# Adding element type (line 2360)
unicode_239961 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2360, 20), 'unicode', u'_hatch_color')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2360, 10), tuple_239959, unicode_239961)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2360, 9), tuple_239958, tuple_239959)
# Adding element type (line 2360)
# Getting the type of 'GraphicsContextPdf'
GraphicsContextPdf_239962 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'GraphicsContextPdf')
# Obtaining the member 'hatch_cmd' of a type
hatch_cmd_239963 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), GraphicsContextPdf_239962, 'hatch_cmd')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2360, 9), tuple_239958, hatch_cmd_239963)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2351, 8), tuple_239914, tuple_239958)

# Getting the type of 'GraphicsContextPdf'
GraphicsContextPdf_239964 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'GraphicsContextPdf')
# Setting the type of the member 'commands' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), GraphicsContextPdf_239964, 'commands', tuple_239914)
# Declaration of the 'PdfPages' class

class PdfPages(object, ):
    unicode_239965 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2451, (-1)), 'unicode', u"\n    A multi-page PDF file.\n\n    Examples\n    --------\n\n    >>> import matplotlib.pyplot as plt\n    >>> # Initialize:\n    >>> with PdfPages('foo.pdf') as pdf:\n    ...     # As many times as you like, create a figure fig and save it:\n    ...     fig = plt.figure()\n    ...     pdf.savefig(fig)\n    ...     # When no figure is specified the current figure is saved\n    ...     pdf.savefig()\n\n    Notes\n    -----\n\n    In reality :class:`PdfPages` is a thin wrapper around :class:`PdfFile`, in\n    order to avoid confusion when using :func:`~matplotlib.pyplot.savefig` and\n    forgetting the format argument.\n    ")
    
    # Assigning a Tuple to a Name (line 2452):

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'True' (line 2454)
        True_239966 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2454, 44), 'True')
        # Getting the type of 'None' (line 2454)
        None_239967 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2454, 59), 'None')
        defaults = [True_239966, None_239967]
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 2454, 4, False)
        # Assigning a type to the variable 'self' (line 2455)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2455, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'PdfPages.__init__', ['filename', 'keep_empty', 'metadata'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['filename', 'keep_empty', 'metadata'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        unicode_239968 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2480, (-1)), 'unicode', u"\n        Create a new PdfPages object.\n\n        Parameters\n        ----------\n\n        filename : str\n            Plots using :meth:`PdfPages.savefig` will be written to a file at\n            this location. The file is opened at once and any older file with\n            the same name is overwritten.\n        keep_empty : bool, optional\n            If set to False, then empty pdf files will be deleted automatically\n            when closed.\n        metadata : dictionary, optional\n            Information dictionary object (see PDF reference section 10.2.1\n            'Document Information Dictionary'), e.g.:\n            `{'Creator': 'My software', 'Author': 'Me',\n            'Title': 'Awesome fig'}`\n\n            The standard keys are `'Title'`, `'Author'`, `'Subject'`,\n            `'Keywords'`, `'Creator'`, `'Producer'`, `'CreationDate'`,\n            `'ModDate'`, and `'Trapped'`. Values have been predefined\n            for `'Creator'`, `'Producer'` and `'CreationDate'`. They\n            can be removed by setting them to `None`.\n\n        ")
        
        # Assigning a Call to a Attribute (line 2481):
        
        # Assigning a Call to a Attribute (line 2481):
        
        # Call to PdfFile(...): (line 2481)
        # Processing the call arguments (line 2481)
        # Getting the type of 'filename' (line 2481)
        filename_239970 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2481, 29), 'filename', False)
        # Processing the call keyword arguments (line 2481)
        # Getting the type of 'metadata' (line 2481)
        metadata_239971 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2481, 48), 'metadata', False)
        keyword_239972 = metadata_239971
        kwargs_239973 = {'metadata': keyword_239972}
        # Getting the type of 'PdfFile' (line 2481)
        PdfFile_239969 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2481, 21), 'PdfFile', False)
        # Calling PdfFile(args, kwargs) (line 2481)
        PdfFile_call_result_239974 = invoke(stypy.reporting.localization.Localization(__file__, 2481, 21), PdfFile_239969, *[filename_239970], **kwargs_239973)
        
        # Getting the type of 'self' (line 2481)
        self_239975 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2481, 8), 'self')
        # Setting the type of the member '_file' of a type (line 2481)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2481, 8), self_239975, '_file', PdfFile_call_result_239974)
        
        # Assigning a Name to a Attribute (line 2482):
        
        # Assigning a Name to a Attribute (line 2482):
        # Getting the type of 'keep_empty' (line 2482)
        keep_empty_239976 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2482, 26), 'keep_empty')
        # Getting the type of 'self' (line 2482)
        self_239977 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2482, 8), 'self')
        # Setting the type of the member 'keep_empty' of a type (line 2482)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2482, 8), self_239977, 'keep_empty', keep_empty_239976)
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def __enter__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__enter__'
        module_type_store = module_type_store.open_function_context('__enter__', 2484, 4, False)
        # Assigning a type to the variable 'self' (line 2485)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2485, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        PdfPages.__enter__.__dict__.__setitem__('stypy_localization', localization)
        PdfPages.__enter__.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        PdfPages.__enter__.__dict__.__setitem__('stypy_type_store', module_type_store)
        PdfPages.__enter__.__dict__.__setitem__('stypy_function_name', 'PdfPages.__enter__')
        PdfPages.__enter__.__dict__.__setitem__('stypy_param_names_list', [])
        PdfPages.__enter__.__dict__.__setitem__('stypy_varargs_param_name', None)
        PdfPages.__enter__.__dict__.__setitem__('stypy_kwargs_param_name', None)
        PdfPages.__enter__.__dict__.__setitem__('stypy_call_defaults', defaults)
        PdfPages.__enter__.__dict__.__setitem__('stypy_call_varargs', varargs)
        PdfPages.__enter__.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        PdfPages.__enter__.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'PdfPages.__enter__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '__enter__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__enter__(...)' code ##################

        # Getting the type of 'self' (line 2485)
        self_239978 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2485, 15), 'self')
        # Assigning a type to the variable 'stypy_return_type' (line 2485)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2485, 8), 'stypy_return_type', self_239978)
        
        # ################# End of '__enter__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '__enter__' in the type store
        # Getting the type of 'stypy_return_type' (line 2484)
        stypy_return_type_239979 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2484, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_239979)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '__enter__'
        return stypy_return_type_239979


    @norecursion
    def __exit__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__exit__'
        module_type_store = module_type_store.open_function_context('__exit__', 2487, 4, False)
        # Assigning a type to the variable 'self' (line 2488)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2488, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        PdfPages.__exit__.__dict__.__setitem__('stypy_localization', localization)
        PdfPages.__exit__.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        PdfPages.__exit__.__dict__.__setitem__('stypy_type_store', module_type_store)
        PdfPages.__exit__.__dict__.__setitem__('stypy_function_name', 'PdfPages.__exit__')
        PdfPages.__exit__.__dict__.__setitem__('stypy_param_names_list', ['exc_type', 'exc_val', 'exc_tb'])
        PdfPages.__exit__.__dict__.__setitem__('stypy_varargs_param_name', None)
        PdfPages.__exit__.__dict__.__setitem__('stypy_kwargs_param_name', None)
        PdfPages.__exit__.__dict__.__setitem__('stypy_call_defaults', defaults)
        PdfPages.__exit__.__dict__.__setitem__('stypy_call_varargs', varargs)
        PdfPages.__exit__.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        PdfPages.__exit__.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'PdfPages.__exit__', ['exc_type', 'exc_val', 'exc_tb'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '__exit__', localization, ['exc_type', 'exc_val', 'exc_tb'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__exit__(...)' code ##################

        
        # Call to close(...): (line 2488)
        # Processing the call keyword arguments (line 2488)
        kwargs_239982 = {}
        # Getting the type of 'self' (line 2488)
        self_239980 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2488, 8), 'self', False)
        # Obtaining the member 'close' of a type (line 2488)
        close_239981 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2488, 8), self_239980, 'close')
        # Calling close(args, kwargs) (line 2488)
        close_call_result_239983 = invoke(stypy.reporting.localization.Localization(__file__, 2488, 8), close_239981, *[], **kwargs_239982)
        
        
        # ################# End of '__exit__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '__exit__' in the type store
        # Getting the type of 'stypy_return_type' (line 2487)
        stypy_return_type_239984 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2487, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_239984)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '__exit__'
        return stypy_return_type_239984


    @norecursion
    def close(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'close'
        module_type_store = module_type_store.open_function_context('close', 2490, 4, False)
        # Assigning a type to the variable 'self' (line 2491)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2491, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        PdfPages.close.__dict__.__setitem__('stypy_localization', localization)
        PdfPages.close.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        PdfPages.close.__dict__.__setitem__('stypy_type_store', module_type_store)
        PdfPages.close.__dict__.__setitem__('stypy_function_name', 'PdfPages.close')
        PdfPages.close.__dict__.__setitem__('stypy_param_names_list', [])
        PdfPages.close.__dict__.__setitem__('stypy_varargs_param_name', None)
        PdfPages.close.__dict__.__setitem__('stypy_kwargs_param_name', None)
        PdfPages.close.__dict__.__setitem__('stypy_call_defaults', defaults)
        PdfPages.close.__dict__.__setitem__('stypy_call_varargs', varargs)
        PdfPages.close.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        PdfPages.close.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'PdfPages.close', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'close', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'close(...)' code ##################

        unicode_239985 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2494, (-1)), 'unicode', u'\n        Finalize this object, making the underlying file a complete\n        PDF file.\n        ')
        
        # Call to finalize(...): (line 2495)
        # Processing the call keyword arguments (line 2495)
        kwargs_239989 = {}
        # Getting the type of 'self' (line 2495)
        self_239986 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2495, 8), 'self', False)
        # Obtaining the member '_file' of a type (line 2495)
        _file_239987 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2495, 8), self_239986, '_file')
        # Obtaining the member 'finalize' of a type (line 2495)
        finalize_239988 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2495, 8), _file_239987, 'finalize')
        # Calling finalize(args, kwargs) (line 2495)
        finalize_call_result_239990 = invoke(stypy.reporting.localization.Localization(__file__, 2495, 8), finalize_239988, *[], **kwargs_239989)
        
        
        # Call to close(...): (line 2496)
        # Processing the call keyword arguments (line 2496)
        kwargs_239994 = {}
        # Getting the type of 'self' (line 2496)
        self_239991 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2496, 8), 'self', False)
        # Obtaining the member '_file' of a type (line 2496)
        _file_239992 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2496, 8), self_239991, '_file')
        # Obtaining the member 'close' of a type (line 2496)
        close_239993 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2496, 8), _file_239992, 'close')
        # Calling close(args, kwargs) (line 2496)
        close_call_result_239995 = invoke(stypy.reporting.localization.Localization(__file__, 2496, 8), close_239993, *[], **kwargs_239994)
        
        
        
        # Evaluating a boolean operation
        
        
        # Call to get_pagecount(...): (line 2497)
        # Processing the call keyword arguments (line 2497)
        kwargs_239998 = {}
        # Getting the type of 'self' (line 2497)
        self_239996 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2497, 12), 'self', False)
        # Obtaining the member 'get_pagecount' of a type (line 2497)
        get_pagecount_239997 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2497, 12), self_239996, 'get_pagecount')
        # Calling get_pagecount(args, kwargs) (line 2497)
        get_pagecount_call_result_239999 = invoke(stypy.reporting.localization.Localization(__file__, 2497, 12), get_pagecount_239997, *[], **kwargs_239998)
        
        int_240000 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2497, 36), 'int')
        # Applying the binary operator '==' (line 2497)
        result_eq_240001 = python_operator(stypy.reporting.localization.Localization(__file__, 2497, 12), '==', get_pagecount_call_result_239999, int_240000)
        
        
        # Getting the type of 'self' (line 2497)
        self_240002 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2497, 46), 'self')
        # Obtaining the member 'keep_empty' of a type (line 2497)
        keep_empty_240003 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2497, 46), self_240002, 'keep_empty')
        # Applying the 'not' unary operator (line 2497)
        result_not__240004 = python_operator(stypy.reporting.localization.Localization(__file__, 2497, 42), 'not', keep_empty_240003)
        
        # Applying the binary operator 'and' (line 2497)
        result_and_keyword_240005 = python_operator(stypy.reporting.localization.Localization(__file__, 2497, 12), 'and', result_eq_240001, result_not__240004)
        
        # Getting the type of 'self' (line 2498)
        self_240006 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2498, 20), 'self')
        # Obtaining the member '_file' of a type (line 2498)
        _file_240007 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2498, 20), self_240006, '_file')
        # Obtaining the member 'passed_in_file_object' of a type (line 2498)
        passed_in_file_object_240008 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2498, 20), _file_240007, 'passed_in_file_object')
        # Applying the 'not' unary operator (line 2498)
        result_not__240009 = python_operator(stypy.reporting.localization.Localization(__file__, 2498, 16), 'not', passed_in_file_object_240008)
        
        # Applying the binary operator 'and' (line 2497)
        result_and_keyword_240010 = python_operator(stypy.reporting.localization.Localization(__file__, 2497, 12), 'and', result_and_keyword_240005, result_not__240009)
        
        # Testing the type of an if condition (line 2497)
        if_condition_240011 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2497, 8), result_and_keyword_240010)
        # Assigning a type to the variable 'if_condition_240011' (line 2497)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2497, 8), 'if_condition_240011', if_condition_240011)
        # SSA begins for if statement (line 2497)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to remove(...): (line 2499)
        # Processing the call arguments (line 2499)
        # Getting the type of 'self' (line 2499)
        self_240014 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2499, 22), 'self', False)
        # Obtaining the member '_file' of a type (line 2499)
        _file_240015 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2499, 22), self_240014, '_file')
        # Obtaining the member 'fh' of a type (line 2499)
        fh_240016 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2499, 22), _file_240015, 'fh')
        # Obtaining the member 'name' of a type (line 2499)
        name_240017 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2499, 22), fh_240016, 'name')
        # Processing the call keyword arguments (line 2499)
        kwargs_240018 = {}
        # Getting the type of 'os' (line 2499)
        os_240012 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2499, 12), 'os', False)
        # Obtaining the member 'remove' of a type (line 2499)
        remove_240013 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2499, 12), os_240012, 'remove')
        # Calling remove(args, kwargs) (line 2499)
        remove_call_result_240019 = invoke(stypy.reporting.localization.Localization(__file__, 2499, 12), remove_240013, *[name_240017], **kwargs_240018)
        
        # SSA join for if statement (line 2497)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Name to a Attribute (line 2500):
        
        # Assigning a Name to a Attribute (line 2500):
        # Getting the type of 'None' (line 2500)
        None_240020 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2500, 21), 'None')
        # Getting the type of 'self' (line 2500)
        self_240021 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2500, 8), 'self')
        # Setting the type of the member '_file' of a type (line 2500)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2500, 8), self_240021, '_file', None_240020)
        
        # ################# End of 'close(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'close' in the type store
        # Getting the type of 'stypy_return_type' (line 2490)
        stypy_return_type_240022 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2490, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_240022)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'close'
        return stypy_return_type_240022


    @norecursion
    def infodict(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'infodict'
        module_type_store = module_type_store.open_function_context('infodict', 2502, 4, False)
        # Assigning a type to the variable 'self' (line 2503)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2503, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        PdfPages.infodict.__dict__.__setitem__('stypy_localization', localization)
        PdfPages.infodict.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        PdfPages.infodict.__dict__.__setitem__('stypy_type_store', module_type_store)
        PdfPages.infodict.__dict__.__setitem__('stypy_function_name', 'PdfPages.infodict')
        PdfPages.infodict.__dict__.__setitem__('stypy_param_names_list', [])
        PdfPages.infodict.__dict__.__setitem__('stypy_varargs_param_name', None)
        PdfPages.infodict.__dict__.__setitem__('stypy_kwargs_param_name', None)
        PdfPages.infodict.__dict__.__setitem__('stypy_call_defaults', defaults)
        PdfPages.infodict.__dict__.__setitem__('stypy_call_varargs', varargs)
        PdfPages.infodict.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        PdfPages.infodict.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'PdfPages.infodict', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'infodict', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'infodict(...)' code ##################

        unicode_240023 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2507, (-1)), 'unicode', u"\n        Return a modifiable information dictionary object\n        (see PDF reference section 10.2.1 'Document Information\n        Dictionary').\n        ")
        # Getting the type of 'self' (line 2508)
        self_240024 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2508, 15), 'self')
        # Obtaining the member '_file' of a type (line 2508)
        _file_240025 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2508, 15), self_240024, '_file')
        # Obtaining the member 'infoDict' of a type (line 2508)
        infoDict_240026 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2508, 15), _file_240025, 'infoDict')
        # Assigning a type to the variable 'stypy_return_type' (line 2508)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2508, 8), 'stypy_return_type', infoDict_240026)
        
        # ################# End of 'infodict(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'infodict' in the type store
        # Getting the type of 'stypy_return_type' (line 2502)
        stypy_return_type_240027 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2502, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_240027)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'infodict'
        return stypy_return_type_240027


    @norecursion
    def savefig(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'None' (line 2510)
        None_240028 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2510, 29), 'None')
        defaults = [None_240028]
        # Create a new context for function 'savefig'
        module_type_store = module_type_store.open_function_context('savefig', 2510, 4, False)
        # Assigning a type to the variable 'self' (line 2511)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2511, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        PdfPages.savefig.__dict__.__setitem__('stypy_localization', localization)
        PdfPages.savefig.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        PdfPages.savefig.__dict__.__setitem__('stypy_type_store', module_type_store)
        PdfPages.savefig.__dict__.__setitem__('stypy_function_name', 'PdfPages.savefig')
        PdfPages.savefig.__dict__.__setitem__('stypy_param_names_list', ['figure'])
        PdfPages.savefig.__dict__.__setitem__('stypy_varargs_param_name', None)
        PdfPages.savefig.__dict__.__setitem__('stypy_kwargs_param_name', 'kwargs')
        PdfPages.savefig.__dict__.__setitem__('stypy_call_defaults', defaults)
        PdfPages.savefig.__dict__.__setitem__('stypy_call_varargs', varargs)
        PdfPages.savefig.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        PdfPages.savefig.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'PdfPages.savefig', ['figure'], None, 'kwargs', defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'savefig', localization, ['figure'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'savefig(...)' code ##################

        unicode_240029 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2525, (-1)), 'unicode', u'\n        Saves a :class:`~matplotlib.figure.Figure` to this file as a new page.\n\n        Any other keyword arguments are passed to\n        :meth:`~matplotlib.figure.Figure.savefig`.\n\n        Parameters\n        ----------\n\n        figure : :class:`~matplotlib.figure.Figure` or int, optional\n            Specifies what figure is saved to file. If not specified, the\n            active figure is saved. If a :class:`~matplotlib.figure.Figure`\n            instance is provided, this figure is saved. If an int is specified,\n            the figure instance to save is looked up by number.\n        ')
        
        
        # Call to isinstance(...): (line 2526)
        # Processing the call arguments (line 2526)
        # Getting the type of 'figure' (line 2526)
        figure_240031 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2526, 22), 'figure', False)
        # Getting the type of 'Figure' (line 2526)
        Figure_240032 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2526, 30), 'Figure', False)
        # Processing the call keyword arguments (line 2526)
        kwargs_240033 = {}
        # Getting the type of 'isinstance' (line 2526)
        isinstance_240030 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2526, 11), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 2526)
        isinstance_call_result_240034 = invoke(stypy.reporting.localization.Localization(__file__, 2526, 11), isinstance_240030, *[figure_240031, Figure_240032], **kwargs_240033)
        
        # Testing the type of an if condition (line 2526)
        if_condition_240035 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2526, 8), isinstance_call_result_240034)
        # Assigning a type to the variable 'if_condition_240035' (line 2526)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2526, 8), 'if_condition_240035', if_condition_240035)
        # SSA begins for if statement (line 2526)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to savefig(...): (line 2527)
        # Processing the call arguments (line 2527)
        # Getting the type of 'self' (line 2527)
        self_240038 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2527, 27), 'self', False)
        # Processing the call keyword arguments (line 2527)
        unicode_240039 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2527, 40), 'unicode', u'pdf')
        keyword_240040 = unicode_240039
        # Getting the type of 'kwargs' (line 2527)
        kwargs_240041 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2527, 49), 'kwargs', False)
        kwargs_240042 = {'kwargs_240041': kwargs_240041, 'format': keyword_240040}
        # Getting the type of 'figure' (line 2527)
        figure_240036 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2527, 12), 'figure', False)
        # Obtaining the member 'savefig' of a type (line 2527)
        savefig_240037 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2527, 12), figure_240036, 'savefig')
        # Calling savefig(args, kwargs) (line 2527)
        savefig_call_result_240043 = invoke(stypy.reporting.localization.Localization(__file__, 2527, 12), savefig_240037, *[self_240038], **kwargs_240042)
        
        # SSA branch for the else part of an if statement (line 2526)
        module_type_store.open_ssa_branch('else')
        
        # Type idiom detected: calculating its left and rigth part (line 2529)
        # Getting the type of 'figure' (line 2529)
        figure_240044 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2529, 15), 'figure')
        # Getting the type of 'None' (line 2529)
        None_240045 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2529, 25), 'None')
        
        (may_be_240046, more_types_in_union_240047) = may_be_none(figure_240044, None_240045)

        if may_be_240046:

            if more_types_in_union_240047:
                # Runtime conditional SSA (line 2529)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Call to a Name (line 2530):
            
            # Assigning a Call to a Name (line 2530):
            
            # Call to get_active(...): (line 2530)
            # Processing the call keyword arguments (line 2530)
            kwargs_240050 = {}
            # Getting the type of 'Gcf' (line 2530)
            Gcf_240048 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2530, 32), 'Gcf', False)
            # Obtaining the member 'get_active' of a type (line 2530)
            get_active_240049 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2530, 32), Gcf_240048, 'get_active')
            # Calling get_active(args, kwargs) (line 2530)
            get_active_call_result_240051 = invoke(stypy.reporting.localization.Localization(__file__, 2530, 32), get_active_240049, *[], **kwargs_240050)
            
            # Assigning a type to the variable 'figureManager' (line 2530)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2530, 16), 'figureManager', get_active_call_result_240051)

            if more_types_in_union_240047:
                # Runtime conditional SSA for else branch (line 2529)
                module_type_store.open_ssa_branch('idiom else')



        if ((not may_be_240046) or more_types_in_union_240047):
            
            # Assigning a Call to a Name (line 2532):
            
            # Assigning a Call to a Name (line 2532):
            
            # Call to get_fig_manager(...): (line 2532)
            # Processing the call arguments (line 2532)
            # Getting the type of 'figure' (line 2532)
            figure_240054 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2532, 52), 'figure', False)
            # Processing the call keyword arguments (line 2532)
            kwargs_240055 = {}
            # Getting the type of 'Gcf' (line 2532)
            Gcf_240052 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2532, 32), 'Gcf', False)
            # Obtaining the member 'get_fig_manager' of a type (line 2532)
            get_fig_manager_240053 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2532, 32), Gcf_240052, 'get_fig_manager')
            # Calling get_fig_manager(args, kwargs) (line 2532)
            get_fig_manager_call_result_240056 = invoke(stypy.reporting.localization.Localization(__file__, 2532, 32), get_fig_manager_240053, *[figure_240054], **kwargs_240055)
            
            # Assigning a type to the variable 'figureManager' (line 2532)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2532, 16), 'figureManager', get_fig_manager_call_result_240056)

            if (may_be_240046 and more_types_in_union_240047):
                # SSA join for if statement (line 2529)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Type idiom detected: calculating its left and rigth part (line 2533)
        # Getting the type of 'figureManager' (line 2533)
        figureManager_240057 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2533, 15), 'figureManager')
        # Getting the type of 'None' (line 2533)
        None_240058 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2533, 32), 'None')
        
        (may_be_240059, more_types_in_union_240060) = may_be_none(figureManager_240057, None_240058)

        if may_be_240059:

            if more_types_in_union_240060:
                # Runtime conditional SSA (line 2533)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Call to ValueError(...): (line 2534)
            # Processing the call arguments (line 2534)
            unicode_240062 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2534, 33), 'unicode', u'No such figure: ')
            
            # Call to repr(...): (line 2534)
            # Processing the call arguments (line 2534)
            # Getting the type of 'figure' (line 2534)
            figure_240064 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2534, 59), 'figure', False)
            # Processing the call keyword arguments (line 2534)
            kwargs_240065 = {}
            # Getting the type of 'repr' (line 2534)
            repr_240063 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2534, 54), 'repr', False)
            # Calling repr(args, kwargs) (line 2534)
            repr_call_result_240066 = invoke(stypy.reporting.localization.Localization(__file__, 2534, 54), repr_240063, *[figure_240064], **kwargs_240065)
            
            # Applying the binary operator '+' (line 2534)
            result_add_240067 = python_operator(stypy.reporting.localization.Localization(__file__, 2534, 33), '+', unicode_240062, repr_call_result_240066)
            
            # Processing the call keyword arguments (line 2534)
            kwargs_240068 = {}
            # Getting the type of 'ValueError' (line 2534)
            ValueError_240061 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2534, 22), 'ValueError', False)
            # Calling ValueError(args, kwargs) (line 2534)
            ValueError_call_result_240069 = invoke(stypy.reporting.localization.Localization(__file__, 2534, 22), ValueError_240061, *[result_add_240067], **kwargs_240068)
            
            ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 2534, 16), ValueError_call_result_240069, 'raise parameter', BaseException)

            if more_types_in_union_240060:
                # Runtime conditional SSA for else branch (line 2533)
                module_type_store.open_ssa_branch('idiom else')



        if ((not may_be_240059) or more_types_in_union_240060):
            
            # Call to savefig(...): (line 2536)
            # Processing the call arguments (line 2536)
            # Getting the type of 'self' (line 2536)
            self_240074 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2536, 52), 'self', False)
            # Processing the call keyword arguments (line 2536)
            unicode_240075 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2536, 65), 'unicode', u'pdf')
            keyword_240076 = unicode_240075
            # Getting the type of 'kwargs' (line 2537)
            kwargs_240077 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2537, 54), 'kwargs', False)
            kwargs_240078 = {'kwargs_240077': kwargs_240077, 'format': keyword_240076}
            # Getting the type of 'figureManager' (line 2536)
            figureManager_240070 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2536, 16), 'figureManager', False)
            # Obtaining the member 'canvas' of a type (line 2536)
            canvas_240071 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2536, 16), figureManager_240070, 'canvas')
            # Obtaining the member 'figure' of a type (line 2536)
            figure_240072 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2536, 16), canvas_240071, 'figure')
            # Obtaining the member 'savefig' of a type (line 2536)
            savefig_240073 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2536, 16), figure_240072, 'savefig')
            # Calling savefig(args, kwargs) (line 2536)
            savefig_call_result_240079 = invoke(stypy.reporting.localization.Localization(__file__, 2536, 16), savefig_240073, *[self_240074], **kwargs_240078)
            

            if (may_be_240059 and more_types_in_union_240060):
                # SSA join for if statement (line 2533)
                module_type_store = module_type_store.join_ssa_context()


        
        # SSA join for if statement (line 2526)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'savefig(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'savefig' in the type store
        # Getting the type of 'stypy_return_type' (line 2510)
        stypy_return_type_240080 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2510, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_240080)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'savefig'
        return stypy_return_type_240080


    @norecursion
    def get_pagecount(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'get_pagecount'
        module_type_store = module_type_store.open_function_context('get_pagecount', 2539, 4, False)
        # Assigning a type to the variable 'self' (line 2540)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2540, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        PdfPages.get_pagecount.__dict__.__setitem__('stypy_localization', localization)
        PdfPages.get_pagecount.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        PdfPages.get_pagecount.__dict__.__setitem__('stypy_type_store', module_type_store)
        PdfPages.get_pagecount.__dict__.__setitem__('stypy_function_name', 'PdfPages.get_pagecount')
        PdfPages.get_pagecount.__dict__.__setitem__('stypy_param_names_list', [])
        PdfPages.get_pagecount.__dict__.__setitem__('stypy_varargs_param_name', None)
        PdfPages.get_pagecount.__dict__.__setitem__('stypy_kwargs_param_name', None)
        PdfPages.get_pagecount.__dict__.__setitem__('stypy_call_defaults', defaults)
        PdfPages.get_pagecount.__dict__.__setitem__('stypy_call_varargs', varargs)
        PdfPages.get_pagecount.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        PdfPages.get_pagecount.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'PdfPages.get_pagecount', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_pagecount', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_pagecount(...)' code ##################

        unicode_240081 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2542, (-1)), 'unicode', u'\n        Returns the current number of pages in the multipage pdf file.\n        ')
        
        # Call to len(...): (line 2543)
        # Processing the call arguments (line 2543)
        # Getting the type of 'self' (line 2543)
        self_240083 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2543, 19), 'self', False)
        # Obtaining the member '_file' of a type (line 2543)
        _file_240084 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2543, 19), self_240083, '_file')
        # Obtaining the member 'pageList' of a type (line 2543)
        pageList_240085 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2543, 19), _file_240084, 'pageList')
        # Processing the call keyword arguments (line 2543)
        kwargs_240086 = {}
        # Getting the type of 'len' (line 2543)
        len_240082 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2543, 15), 'len', False)
        # Calling len(args, kwargs) (line 2543)
        len_call_result_240087 = invoke(stypy.reporting.localization.Localization(__file__, 2543, 15), len_240082, *[pageList_240085], **kwargs_240086)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2543)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2543, 8), 'stypy_return_type', len_call_result_240087)
        
        # ################# End of 'get_pagecount(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_pagecount' in the type store
        # Getting the type of 'stypy_return_type' (line 2539)
        stypy_return_type_240088 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2539, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_240088)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_pagecount'
        return stypy_return_type_240088


    @norecursion
    def attach_note(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        
        # Obtaining an instance of the builtin type 'list' (line 2545)
        list_240089 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2545, 45), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2545)
        # Adding element type (line 2545)
        int_240090 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2545, 46), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2545, 45), list_240089, int_240090)
        # Adding element type (line 2545)
        int_240091 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2545, 52), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2545, 45), list_240089, int_240091)
        # Adding element type (line 2545)
        int_240092 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2545, 58), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2545, 45), list_240089, int_240092)
        # Adding element type (line 2545)
        int_240093 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2545, 61), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2545, 45), list_240089, int_240093)
        
        defaults = [list_240089]
        # Create a new context for function 'attach_note'
        module_type_store = module_type_store.open_function_context('attach_note', 2545, 4, False)
        # Assigning a type to the variable 'self' (line 2546)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2546, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        PdfPages.attach_note.__dict__.__setitem__('stypy_localization', localization)
        PdfPages.attach_note.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        PdfPages.attach_note.__dict__.__setitem__('stypy_type_store', module_type_store)
        PdfPages.attach_note.__dict__.__setitem__('stypy_function_name', 'PdfPages.attach_note')
        PdfPages.attach_note.__dict__.__setitem__('stypy_param_names_list', ['text', 'positionRect'])
        PdfPages.attach_note.__dict__.__setitem__('stypy_varargs_param_name', None)
        PdfPages.attach_note.__dict__.__setitem__('stypy_kwargs_param_name', None)
        PdfPages.attach_note.__dict__.__setitem__('stypy_call_defaults', defaults)
        PdfPages.attach_note.__dict__.__setitem__('stypy_call_varargs', varargs)
        PdfPages.attach_note.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        PdfPages.attach_note.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'PdfPages.attach_note', ['text', 'positionRect'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'attach_note', localization, ['text', 'positionRect'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'attach_note(...)' code ##################

        unicode_240094 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2551, (-1)), 'unicode', u'\n        Add a new text note to the page to be saved next. The optional\n        positionRect specifies the position of the new note on the\n        page. It is outside the page per default to make sure it is\n        invisible on printouts.\n        ')
        
        # Call to newTextnote(...): (line 2552)
        # Processing the call arguments (line 2552)
        # Getting the type of 'text' (line 2552)
        text_240098 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2552, 31), 'text', False)
        # Getting the type of 'positionRect' (line 2552)
        positionRect_240099 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2552, 37), 'positionRect', False)
        # Processing the call keyword arguments (line 2552)
        kwargs_240100 = {}
        # Getting the type of 'self' (line 2552)
        self_240095 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2552, 8), 'self', False)
        # Obtaining the member '_file' of a type (line 2552)
        _file_240096 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2552, 8), self_240095, '_file')
        # Obtaining the member 'newTextnote' of a type (line 2552)
        newTextnote_240097 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2552, 8), _file_240096, 'newTextnote')
        # Calling newTextnote(args, kwargs) (line 2552)
        newTextnote_call_result_240101 = invoke(stypy.reporting.localization.Localization(__file__, 2552, 8), newTextnote_240097, *[text_240098, positionRect_240099], **kwargs_240100)
        
        
        # ################# End of 'attach_note(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'attach_note' in the type store
        # Getting the type of 'stypy_return_type' (line 2545)
        stypy_return_type_240102 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2545, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_240102)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'attach_note'
        return stypy_return_type_240102


# Assigning a type to the variable 'PdfPages' (line 2429)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2429, 0), 'PdfPages', PdfPages)

# Assigning a Tuple to a Name (line 2452):

# Obtaining an instance of the builtin type 'tuple' (line 2452)
tuple_240103 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2452, 17), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 2452)
# Adding element type (line 2452)
unicode_240104 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2452, 17), 'unicode', u'_file')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2452, 17), tuple_240103, unicode_240104)
# Adding element type (line 2452)
unicode_240105 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2452, 26), 'unicode', u'keep_empty')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2452, 17), tuple_240103, unicode_240105)

# Getting the type of 'PdfPages'
PdfPages_240106 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'PdfPages')
# Setting the type of the member '__slots__' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), PdfPages_240106, '__slots__', tuple_240103)
# Declaration of the 'FigureCanvasPdf' class
# Getting the type of 'FigureCanvasBase' (line 2555)
FigureCanvasBase_240107 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2555, 22), 'FigureCanvasBase')

class FigureCanvasPdf(FigureCanvasBase_240107, ):
    unicode_240108 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2565, (-1)), 'unicode', u'\n    The canvas the figure renders into.  Calls the draw and print fig\n    methods, creates the renderers, etc...\n\n    Attributes\n    ----------\n    figure : `matplotlib.figure.Figure`\n        A high-level Figure instance\n\n    ')
    
    # Assigning a Num to a Name (line 2567):

    @norecursion
    def draw(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'draw'
        module_type_store = module_type_store.open_function_context('draw', 2569, 4, False)
        # Assigning a type to the variable 'self' (line 2570)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2570, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        FigureCanvasPdf.draw.__dict__.__setitem__('stypy_localization', localization)
        FigureCanvasPdf.draw.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        FigureCanvasPdf.draw.__dict__.__setitem__('stypy_type_store', module_type_store)
        FigureCanvasPdf.draw.__dict__.__setitem__('stypy_function_name', 'FigureCanvasPdf.draw')
        FigureCanvasPdf.draw.__dict__.__setitem__('stypy_param_names_list', [])
        FigureCanvasPdf.draw.__dict__.__setitem__('stypy_varargs_param_name', None)
        FigureCanvasPdf.draw.__dict__.__setitem__('stypy_kwargs_param_name', None)
        FigureCanvasPdf.draw.__dict__.__setitem__('stypy_call_defaults', defaults)
        FigureCanvasPdf.draw.__dict__.__setitem__('stypy_call_varargs', varargs)
        FigureCanvasPdf.draw.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        FigureCanvasPdf.draw.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FigureCanvasPdf.draw', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'draw', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'draw(...)' code ##################

        pass
        
        # ################# End of 'draw(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'draw' in the type store
        # Getting the type of 'stypy_return_type' (line 2569)
        stypy_return_type_240109 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2569, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_240109)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'draw'
        return stypy_return_type_240109

    
    # Assigning a Dict to a Name (line 2572):

    @norecursion
    def get_default_filetype(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'get_default_filetype'
        module_type_store = module_type_store.open_function_context('get_default_filetype', 2574, 4, False)
        # Assigning a type to the variable 'self' (line 2575)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2575, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        FigureCanvasPdf.get_default_filetype.__dict__.__setitem__('stypy_localization', localization)
        FigureCanvasPdf.get_default_filetype.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        FigureCanvasPdf.get_default_filetype.__dict__.__setitem__('stypy_type_store', module_type_store)
        FigureCanvasPdf.get_default_filetype.__dict__.__setitem__('stypy_function_name', 'FigureCanvasPdf.get_default_filetype')
        FigureCanvasPdf.get_default_filetype.__dict__.__setitem__('stypy_param_names_list', [])
        FigureCanvasPdf.get_default_filetype.__dict__.__setitem__('stypy_varargs_param_name', None)
        FigureCanvasPdf.get_default_filetype.__dict__.__setitem__('stypy_kwargs_param_name', None)
        FigureCanvasPdf.get_default_filetype.__dict__.__setitem__('stypy_call_defaults', defaults)
        FigureCanvasPdf.get_default_filetype.__dict__.__setitem__('stypy_call_varargs', varargs)
        FigureCanvasPdf.get_default_filetype.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        FigureCanvasPdf.get_default_filetype.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FigureCanvasPdf.get_default_filetype', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_default_filetype', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_default_filetype(...)' code ##################

        unicode_240110 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2575, 15), 'unicode', u'pdf')
        # Assigning a type to the variable 'stypy_return_type' (line 2575)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2575, 8), 'stypy_return_type', unicode_240110)
        
        # ################# End of 'get_default_filetype(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_default_filetype' in the type store
        # Getting the type of 'stypy_return_type' (line 2574)
        stypy_return_type_240111 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2574, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_240111)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_default_filetype'
        return stypy_return_type_240111


    @norecursion
    def print_pdf(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'print_pdf'
        module_type_store = module_type_store.open_function_context('print_pdf', 2577, 4, False)
        # Assigning a type to the variable 'self' (line 2578)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2578, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        FigureCanvasPdf.print_pdf.__dict__.__setitem__('stypy_localization', localization)
        FigureCanvasPdf.print_pdf.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        FigureCanvasPdf.print_pdf.__dict__.__setitem__('stypy_type_store', module_type_store)
        FigureCanvasPdf.print_pdf.__dict__.__setitem__('stypy_function_name', 'FigureCanvasPdf.print_pdf')
        FigureCanvasPdf.print_pdf.__dict__.__setitem__('stypy_param_names_list', ['filename'])
        FigureCanvasPdf.print_pdf.__dict__.__setitem__('stypy_varargs_param_name', None)
        FigureCanvasPdf.print_pdf.__dict__.__setitem__('stypy_kwargs_param_name', 'kwargs')
        FigureCanvasPdf.print_pdf.__dict__.__setitem__('stypy_call_defaults', defaults)
        FigureCanvasPdf.print_pdf.__dict__.__setitem__('stypy_call_varargs', varargs)
        FigureCanvasPdf.print_pdf.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        FigureCanvasPdf.print_pdf.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FigureCanvasPdf.print_pdf', ['filename'], None, 'kwargs', defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'print_pdf', localization, ['filename'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'print_pdf(...)' code ##################

        
        # Assigning a Call to a Name (line 2578):
        
        # Assigning a Call to a Name (line 2578):
        
        # Call to get(...): (line 2578)
        # Processing the call arguments (line 2578)
        unicode_240114 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2578, 31), 'unicode', u'dpi')
        int_240115 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2578, 38), 'int')
        # Processing the call keyword arguments (line 2578)
        kwargs_240116 = {}
        # Getting the type of 'kwargs' (line 2578)
        kwargs_240112 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2578, 20), 'kwargs', False)
        # Obtaining the member 'get' of a type (line 2578)
        get_240113 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2578, 20), kwargs_240112, 'get')
        # Calling get(args, kwargs) (line 2578)
        get_call_result_240117 = invoke(stypy.reporting.localization.Localization(__file__, 2578, 20), get_240113, *[unicode_240114, int_240115], **kwargs_240116)
        
        # Assigning a type to the variable 'image_dpi' (line 2578)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2578, 8), 'image_dpi', get_call_result_240117)
        
        # Call to set_dpi(...): (line 2579)
        # Processing the call arguments (line 2579)
        int_240121 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2579, 28), 'int')
        # Processing the call keyword arguments (line 2579)
        kwargs_240122 = {}
        # Getting the type of 'self' (line 2579)
        self_240118 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2579, 8), 'self', False)
        # Obtaining the member 'figure' of a type (line 2579)
        figure_240119 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2579, 8), self_240118, 'figure')
        # Obtaining the member 'set_dpi' of a type (line 2579)
        set_dpi_240120 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2579, 8), figure_240119, 'set_dpi')
        # Calling set_dpi(args, kwargs) (line 2579)
        set_dpi_call_result_240123 = invoke(stypy.reporting.localization.Localization(__file__, 2579, 8), set_dpi_240120, *[int_240121], **kwargs_240122)
        
        
        # Assigning a Call to a Tuple (line 2580):
        
        # Assigning a Call to a Name:
        
        # Call to get_size_inches(...): (line 2580)
        # Processing the call keyword arguments (line 2580)
        kwargs_240127 = {}
        # Getting the type of 'self' (line 2580)
        self_240124 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2580, 24), 'self', False)
        # Obtaining the member 'figure' of a type (line 2580)
        figure_240125 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2580, 24), self_240124, 'figure')
        # Obtaining the member 'get_size_inches' of a type (line 2580)
        get_size_inches_240126 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2580, 24), figure_240125, 'get_size_inches')
        # Calling get_size_inches(args, kwargs) (line 2580)
        get_size_inches_call_result_240128 = invoke(stypy.reporting.localization.Localization(__file__, 2580, 24), get_size_inches_240126, *[], **kwargs_240127)
        
        # Assigning a type to the variable 'call_assignment_231763' (line 2580)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2580, 8), 'call_assignment_231763', get_size_inches_call_result_240128)
        
        # Assigning a Call to a Name (line 2580):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_240131 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2580, 8), 'int')
        # Processing the call keyword arguments
        kwargs_240132 = {}
        # Getting the type of 'call_assignment_231763' (line 2580)
        call_assignment_231763_240129 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2580, 8), 'call_assignment_231763', False)
        # Obtaining the member '__getitem__' of a type (line 2580)
        getitem___240130 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2580, 8), call_assignment_231763_240129, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_240133 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___240130, *[int_240131], **kwargs_240132)
        
        # Assigning a type to the variable 'call_assignment_231764' (line 2580)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2580, 8), 'call_assignment_231764', getitem___call_result_240133)
        
        # Assigning a Name to a Name (line 2580):
        # Getting the type of 'call_assignment_231764' (line 2580)
        call_assignment_231764_240134 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2580, 8), 'call_assignment_231764')
        # Assigning a type to the variable 'width' (line 2580)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2580, 8), 'width', call_assignment_231764_240134)
        
        # Assigning a Call to a Name (line 2580):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_240137 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2580, 8), 'int')
        # Processing the call keyword arguments
        kwargs_240138 = {}
        # Getting the type of 'call_assignment_231763' (line 2580)
        call_assignment_231763_240135 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2580, 8), 'call_assignment_231763', False)
        # Obtaining the member '__getitem__' of a type (line 2580)
        getitem___240136 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2580, 8), call_assignment_231763_240135, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_240139 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___240136, *[int_240137], **kwargs_240138)
        
        # Assigning a type to the variable 'call_assignment_231765' (line 2580)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2580, 8), 'call_assignment_231765', getitem___call_result_240139)
        
        # Assigning a Name to a Name (line 2580):
        # Getting the type of 'call_assignment_231765' (line 2580)
        call_assignment_231765_240140 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2580, 8), 'call_assignment_231765')
        # Assigning a type to the variable 'height' (line 2580)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2580, 15), 'height', call_assignment_231765_240140)
        
        
        # Call to isinstance(...): (line 2581)
        # Processing the call arguments (line 2581)
        # Getting the type of 'filename' (line 2581)
        filename_240142 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2581, 22), 'filename', False)
        # Getting the type of 'PdfPages' (line 2581)
        PdfPages_240143 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2581, 32), 'PdfPages', False)
        # Processing the call keyword arguments (line 2581)
        kwargs_240144 = {}
        # Getting the type of 'isinstance' (line 2581)
        isinstance_240141 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2581, 11), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 2581)
        isinstance_call_result_240145 = invoke(stypy.reporting.localization.Localization(__file__, 2581, 11), isinstance_240141, *[filename_240142, PdfPages_240143], **kwargs_240144)
        
        # Testing the type of an if condition (line 2581)
        if_condition_240146 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2581, 8), isinstance_call_result_240145)
        # Assigning a type to the variable 'if_condition_240146' (line 2581)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2581, 8), 'if_condition_240146', if_condition_240146)
        # SSA begins for if statement (line 2581)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Attribute to a Name (line 2582):
        
        # Assigning a Attribute to a Name (line 2582):
        # Getting the type of 'filename' (line 2582)
        filename_240147 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2582, 19), 'filename')
        # Obtaining the member '_file' of a type (line 2582)
        _file_240148 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2582, 19), filename_240147, '_file')
        # Assigning a type to the variable 'file' (line 2582)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2582, 12), 'file', _file_240148)
        # SSA branch for the else part of an if statement (line 2581)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Call to a Name (line 2584):
        
        # Assigning a Call to a Name (line 2584):
        
        # Call to PdfFile(...): (line 2584)
        # Processing the call arguments (line 2584)
        # Getting the type of 'filename' (line 2584)
        filename_240150 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2584, 27), 'filename', False)
        # Processing the call keyword arguments (line 2584)
        
        # Call to pop(...): (line 2584)
        # Processing the call arguments (line 2584)
        unicode_240153 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2584, 57), 'unicode', u'metadata')
        # Getting the type of 'None' (line 2584)
        None_240154 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2584, 69), 'None', False)
        # Processing the call keyword arguments (line 2584)
        kwargs_240155 = {}
        # Getting the type of 'kwargs' (line 2584)
        kwargs_240151 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2584, 46), 'kwargs', False)
        # Obtaining the member 'pop' of a type (line 2584)
        pop_240152 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2584, 46), kwargs_240151, 'pop')
        # Calling pop(args, kwargs) (line 2584)
        pop_call_result_240156 = invoke(stypy.reporting.localization.Localization(__file__, 2584, 46), pop_240152, *[unicode_240153, None_240154], **kwargs_240155)
        
        keyword_240157 = pop_call_result_240156
        kwargs_240158 = {'metadata': keyword_240157}
        # Getting the type of 'PdfFile' (line 2584)
        PdfFile_240149 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2584, 19), 'PdfFile', False)
        # Calling PdfFile(args, kwargs) (line 2584)
        PdfFile_call_result_240159 = invoke(stypy.reporting.localization.Localization(__file__, 2584, 19), PdfFile_240149, *[filename_240150], **kwargs_240158)
        
        # Assigning a type to the variable 'file' (line 2584)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2584, 12), 'file', PdfFile_call_result_240159)
        # SSA join for if statement (line 2581)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Try-finally block (line 2585)
        
        # Call to newPage(...): (line 2586)
        # Processing the call arguments (line 2586)
        # Getting the type of 'width' (line 2586)
        width_240162 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2586, 25), 'width', False)
        # Getting the type of 'height' (line 2586)
        height_240163 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2586, 32), 'height', False)
        # Processing the call keyword arguments (line 2586)
        kwargs_240164 = {}
        # Getting the type of 'file' (line 2586)
        file_240160 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2586, 12), 'file', False)
        # Obtaining the member 'newPage' of a type (line 2586)
        newPage_240161 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2586, 12), file_240160, 'newPage')
        # Calling newPage(args, kwargs) (line 2586)
        newPage_call_result_240165 = invoke(stypy.reporting.localization.Localization(__file__, 2586, 12), newPage_240161, *[width_240162, height_240163], **kwargs_240164)
        
        
        # Assigning a Call to a Name (line 2587):
        
        # Assigning a Call to a Name (line 2587):
        
        # Call to pop(...): (line 2587)
        # Processing the call arguments (line 2587)
        unicode_240168 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2587, 46), 'unicode', u'bbox_inches_restore')
        # Getting the type of 'None' (line 2587)
        None_240169 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2587, 69), 'None', False)
        # Processing the call keyword arguments (line 2587)
        kwargs_240170 = {}
        # Getting the type of 'kwargs' (line 2587)
        kwargs_240166 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2587, 35), 'kwargs', False)
        # Obtaining the member 'pop' of a type (line 2587)
        pop_240167 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2587, 35), kwargs_240166, 'pop')
        # Calling pop(args, kwargs) (line 2587)
        pop_call_result_240171 = invoke(stypy.reporting.localization.Localization(__file__, 2587, 35), pop_240167, *[unicode_240168, None_240169], **kwargs_240170)
        
        # Assigning a type to the variable '_bbox_inches_restore' (line 2587)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2587, 12), '_bbox_inches_restore', pop_call_result_240171)
        
        # Assigning a Call to a Name (line 2588):
        
        # Assigning a Call to a Name (line 2588):
        
        # Call to MixedModeRenderer(...): (line 2588)
        # Processing the call arguments (line 2588)
        # Getting the type of 'self' (line 2589)
        self_240173 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2589, 16), 'self', False)
        # Obtaining the member 'figure' of a type (line 2589)
        figure_240174 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2589, 16), self_240173, 'figure')
        # Getting the type of 'width' (line 2589)
        width_240175 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2589, 29), 'width', False)
        # Getting the type of 'height' (line 2589)
        height_240176 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2589, 36), 'height', False)
        # Getting the type of 'image_dpi' (line 2589)
        image_dpi_240177 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2589, 44), 'image_dpi', False)
        
        # Call to RendererPdf(...): (line 2590)
        # Processing the call arguments (line 2590)
        # Getting the type of 'file' (line 2590)
        file_240179 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2590, 28), 'file', False)
        # Getting the type of 'image_dpi' (line 2590)
        image_dpi_240180 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2590, 34), 'image_dpi', False)
        # Getting the type of 'height' (line 2590)
        height_240181 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2590, 45), 'height', False)
        # Getting the type of 'width' (line 2590)
        width_240182 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2590, 53), 'width', False)
        # Processing the call keyword arguments (line 2590)
        kwargs_240183 = {}
        # Getting the type of 'RendererPdf' (line 2590)
        RendererPdf_240178 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2590, 16), 'RendererPdf', False)
        # Calling RendererPdf(args, kwargs) (line 2590)
        RendererPdf_call_result_240184 = invoke(stypy.reporting.localization.Localization(__file__, 2590, 16), RendererPdf_240178, *[file_240179, image_dpi_240180, height_240181, width_240182], **kwargs_240183)
        
        # Processing the call keyword arguments (line 2588)
        # Getting the type of '_bbox_inches_restore' (line 2591)
        _bbox_inches_restore_240185 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2591, 36), '_bbox_inches_restore', False)
        keyword_240186 = _bbox_inches_restore_240185
        kwargs_240187 = {'bbox_inches_restore': keyword_240186}
        # Getting the type of 'MixedModeRenderer' (line 2588)
        MixedModeRenderer_240172 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2588, 23), 'MixedModeRenderer', False)
        # Calling MixedModeRenderer(args, kwargs) (line 2588)
        MixedModeRenderer_call_result_240188 = invoke(stypy.reporting.localization.Localization(__file__, 2588, 23), MixedModeRenderer_240172, *[figure_240174, width_240175, height_240176, image_dpi_240177, RendererPdf_call_result_240184], **kwargs_240187)
        
        # Assigning a type to the variable 'renderer' (line 2588)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2588, 12), 'renderer', MixedModeRenderer_call_result_240188)
        
        # Call to draw(...): (line 2592)
        # Processing the call arguments (line 2592)
        # Getting the type of 'renderer' (line 2592)
        renderer_240192 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2592, 29), 'renderer', False)
        # Processing the call keyword arguments (line 2592)
        kwargs_240193 = {}
        # Getting the type of 'self' (line 2592)
        self_240189 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2592, 12), 'self', False)
        # Obtaining the member 'figure' of a type (line 2592)
        figure_240190 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2592, 12), self_240189, 'figure')
        # Obtaining the member 'draw' of a type (line 2592)
        draw_240191 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2592, 12), figure_240190, 'draw')
        # Calling draw(args, kwargs) (line 2592)
        draw_call_result_240194 = invoke(stypy.reporting.localization.Localization(__file__, 2592, 12), draw_240191, *[renderer_240192], **kwargs_240193)
        
        
        # Call to finalize(...): (line 2593)
        # Processing the call keyword arguments (line 2593)
        kwargs_240197 = {}
        # Getting the type of 'renderer' (line 2593)
        renderer_240195 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2593, 12), 'renderer', False)
        # Obtaining the member 'finalize' of a type (line 2593)
        finalize_240196 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2593, 12), renderer_240195, 'finalize')
        # Calling finalize(args, kwargs) (line 2593)
        finalize_call_result_240198 = invoke(stypy.reporting.localization.Localization(__file__, 2593, 12), finalize_240196, *[], **kwargs_240197)
        
        
        # Call to finalize(...): (line 2594)
        # Processing the call keyword arguments (line 2594)
        kwargs_240201 = {}
        # Getting the type of 'file' (line 2594)
        file_240199 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2594, 12), 'file', False)
        # Obtaining the member 'finalize' of a type (line 2594)
        finalize_240200 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2594, 12), file_240199, 'finalize')
        # Calling finalize(args, kwargs) (line 2594)
        finalize_call_result_240202 = invoke(stypy.reporting.localization.Localization(__file__, 2594, 12), finalize_240200, *[], **kwargs_240201)
        
        
        # finally branch of the try-finally block (line 2585)
        
        
        # Call to isinstance(...): (line 2596)
        # Processing the call arguments (line 2596)
        # Getting the type of 'filename' (line 2596)
        filename_240204 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2596, 26), 'filename', False)
        # Getting the type of 'PdfPages' (line 2596)
        PdfPages_240205 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2596, 36), 'PdfPages', False)
        # Processing the call keyword arguments (line 2596)
        kwargs_240206 = {}
        # Getting the type of 'isinstance' (line 2596)
        isinstance_240203 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2596, 15), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 2596)
        isinstance_call_result_240207 = invoke(stypy.reporting.localization.Localization(__file__, 2596, 15), isinstance_240203, *[filename_240204, PdfPages_240205], **kwargs_240206)
        
        # Testing the type of an if condition (line 2596)
        if_condition_240208 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2596, 12), isinstance_call_result_240207)
        # Assigning a type to the variable 'if_condition_240208' (line 2596)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2596, 12), 'if_condition_240208', if_condition_240208)
        # SSA begins for if statement (line 2596)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to endStream(...): (line 2597)
        # Processing the call keyword arguments (line 2597)
        kwargs_240211 = {}
        # Getting the type of 'file' (line 2597)
        file_240209 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2597, 16), 'file', False)
        # Obtaining the member 'endStream' of a type (line 2597)
        endStream_240210 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2597, 16), file_240209, 'endStream')
        # Calling endStream(args, kwargs) (line 2597)
        endStream_call_result_240212 = invoke(stypy.reporting.localization.Localization(__file__, 2597, 16), endStream_240210, *[], **kwargs_240211)
        
        # SSA branch for the else part of an if statement (line 2596)
        module_type_store.open_ssa_branch('else')
        
        # Call to close(...): (line 2599)
        # Processing the call keyword arguments (line 2599)
        kwargs_240215 = {}
        # Getting the type of 'file' (line 2599)
        file_240213 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2599, 16), 'file', False)
        # Obtaining the member 'close' of a type (line 2599)
        close_240214 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2599, 16), file_240213, 'close')
        # Calling close(args, kwargs) (line 2599)
        close_call_result_240216 = invoke(stypy.reporting.localization.Localization(__file__, 2599, 16), close_240214, *[], **kwargs_240215)
        
        # SSA join for if statement (line 2596)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # ################# End of 'print_pdf(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'print_pdf' in the type store
        # Getting the type of 'stypy_return_type' (line 2577)
        stypy_return_type_240217 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2577, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_240217)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'print_pdf'
        return stypy_return_type_240217


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 2555, 0, False)
        # Assigning a type to the variable 'self' (line 2556)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2556, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FigureCanvasPdf.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'FigureCanvasPdf' (line 2555)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2555, 0), 'FigureCanvasPdf', FigureCanvasPdf)

# Assigning a Num to a Name (line 2567):
int_240218 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2567, 16), 'int')
# Getting the type of 'FigureCanvasPdf'
FigureCanvasPdf_240219 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'FigureCanvasPdf')
# Setting the type of the member 'fixed_dpi' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), FigureCanvasPdf_240219, 'fixed_dpi', int_240218)

# Assigning a Dict to a Name (line 2572):

# Obtaining an instance of the builtin type 'dict' (line 2572)
dict_240220 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2572, 16), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 2572)
# Adding element type (key, value) (line 2572)
unicode_240221 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2572, 17), 'unicode', u'pdf')
unicode_240222 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2572, 24), 'unicode', u'Portable Document Format')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2572, 16), dict_240220, (unicode_240221, unicode_240222))

# Getting the type of 'FigureCanvasPdf'
FigureCanvasPdf_240223 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'FigureCanvasPdf')
# Setting the type of the member 'filetypes' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), FigureCanvasPdf_240223, 'filetypes', dict_240220)
# Declaration of the 'FigureManagerPdf' class
# Getting the type of 'FigureManagerBase' (line 2602)
FigureManagerBase_240224 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2602, 23), 'FigureManagerBase')

class FigureManagerPdf(FigureManagerBase_240224, ):
    pass

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 2602, 0, False)
        # Assigning a type to the variable 'self' (line 2603)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2603, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FigureManagerPdf.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'FigureManagerPdf' (line 2602)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2602, 0), 'FigureManagerPdf', FigureManagerPdf)
# Declaration of the '_BackendPdf' class
# Getting the type of '_Backend' (line 2607)
_Backend_240225 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2607, 18), '_Backend')

class _BackendPdf(_Backend_240225, ):
    
    # Assigning a Name to a Name (line 2608):
    
    # Assigning a Name to a Name (line 2609):
    pass

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 2606, 0, False)
        # Assigning a type to the variable 'self' (line 2607)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2607, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, '_BackendPdf.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable '_BackendPdf' (line 2606)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2606, 0), '_BackendPdf', _BackendPdf)

# Assigning a Name to a Name (line 2608):
# Getting the type of 'FigureCanvasPdf' (line 2608)
FigureCanvasPdf_240226 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2608, 19), 'FigureCanvasPdf')
# Getting the type of '_BackendPdf'
_BackendPdf_240227 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), '_BackendPdf')
# Setting the type of the member 'FigureCanvas' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), _BackendPdf_240227, 'FigureCanvas', FigureCanvasPdf_240226)

# Assigning a Name to a Name (line 2609):
# Getting the type of 'FigureManagerPdf' (line 2609)
FigureManagerPdf_240228 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2609, 20), 'FigureManagerPdf')
# Getting the type of '_BackendPdf'
_BackendPdf_240229 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), '_BackendPdf')
# Setting the type of the member 'FigureManager' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), _BackendPdf_240229, 'FigureManager', FigureManagerPdf_240228)

# ################# End of the type inference program ##################

module_errors = stypy.errors.type_error.StypyTypeError.get_error_msgs()
module_warnings = stypy.errors.type_warning.TypeWarning.get_warning_msgs()
