
# -*- coding: utf-8 -*-

"""
ORIGINAL PROGRAM SOURCE CODE:
1: '''
2: A PostScript backend, which can produce both PostScript .ps and .eps
3: '''
4: 
5: from __future__ import (absolute_import, division, print_function,
6:                         unicode_literals)
7: 
8: import six
9: from six.moves import StringIO
10: 
11: import glob, os, shutil, sys, time, datetime
12: import io
13: 
14: from tempfile import mkstemp
15: from matplotlib import verbose, __version__, rcParams, checkdep_ghostscript
16: from matplotlib.afm import AFM
17: from matplotlib.backend_bases import (
18:     _Backend, FigureCanvasBase, FigureManagerBase, GraphicsContextBase,
19:     RendererBase)
20: 
21: from matplotlib.cbook import (get_realpath_and_stat, is_writable_file_like,
22:                               maxdict, file_requires_unicode)
23: from matplotlib.compat.subprocess import subprocess
24: from matplotlib.figure import Figure
25: 
26: from matplotlib.font_manager import findfont, is_opentype_cff_font, get_font
27: from matplotlib.ft2font import KERNING_DEFAULT, LOAD_NO_HINTING
28: from matplotlib.ttconv import convert_ttf_to_ps
29: from matplotlib.mathtext import MathTextParser
30: from matplotlib._mathtext_data import uni2type1
31: from matplotlib.path import Path
32: from matplotlib import _path
33: from matplotlib.transforms import Affine2D
34: 
35: from matplotlib.backends.backend_mixed import MixedModeRenderer
36: 
37: 
38: import numpy as np
39: import binascii
40: import re
41: 
42: if sys.platform.startswith('win'): cmd_split = '&'
43: else: cmd_split = ';'
44: 
45: backend_version = 'Level II'
46: 
47: debugPS = 0
48: 
49: 
50: class PsBackendHelper(object):
51: 
52:     def __init__(self):
53:         self._cached = {}
54: 
55:     @property
56:     def gs_exe(self):
57:         '''
58:         excutable name of ghostscript.
59:         '''
60:         try:
61:             return self._cached["gs_exe"]
62:         except KeyError:
63:             pass
64: 
65:         gs_exe, gs_version = checkdep_ghostscript()
66:         if gs_exe is None:
67:             gs_exe = 'gs'
68: 
69:         self._cached["gs_exe"] = str(gs_exe)
70:         return str(gs_exe)
71: 
72:     @property
73:     def gs_version(self):
74:         '''
75:         version of ghostscript.
76:         '''
77:         try:
78:             return self._cached["gs_version"]
79:         except KeyError:
80:             pass
81: 
82:         from matplotlib.compat.subprocess import Popen, PIPE
83:         s = Popen([self.gs_exe, "--version"], stdout=PIPE)
84:         pipe, stderr = s.communicate()
85:         if six.PY3:
86:             ver = pipe.decode('ascii')
87:         else:
88:             ver = pipe
89:         try:
90:             gs_version = tuple(map(int, ver.strip().split(".")))
91:         except ValueError:
92:             # if something went wrong parsing return null version number
93:             gs_version = (0, 0)
94:         self._cached["gs_version"] = gs_version
95:         return gs_version
96: 
97:     @property
98:     def supports_ps2write(self):
99:         '''
100:         True if the installed ghostscript supports ps2write device.
101:         '''
102:         return self.gs_version[0] >= 9
103: 
104: ps_backend_helper = PsBackendHelper()
105: 
106: papersize = {'letter': (8.5,11),
107:              'legal': (8.5,14),
108:              'ledger': (11,17),
109:              'a0': (33.11,46.81),
110:              'a1': (23.39,33.11),
111:              'a2': (16.54,23.39),
112:              'a3': (11.69,16.54),
113:              'a4': (8.27,11.69),
114:              'a5': (5.83,8.27),
115:              'a6': (4.13,5.83),
116:              'a7': (2.91,4.13),
117:              'a8': (2.07,2.91),
118:              'a9': (1.457,2.05),
119:              'a10': (1.02,1.457),
120:              'b0': (40.55,57.32),
121:              'b1': (28.66,40.55),
122:              'b2': (20.27,28.66),
123:              'b3': (14.33,20.27),
124:              'b4': (10.11,14.33),
125:              'b5': (7.16,10.11),
126:              'b6': (5.04,7.16),
127:              'b7': (3.58,5.04),
128:              'b8': (2.51,3.58),
129:              'b9': (1.76,2.51),
130:              'b10': (1.26,1.76)}
131: 
132: def _get_papertype(w, h):
133:     keys = list(six.iterkeys(papersize))
134:     keys.sort()
135:     keys.reverse()
136:     for key in keys:
137:         if key.startswith('l'): continue
138:         pw, ph = papersize[key]
139:         if (w < pw) and (h < ph): return key
140:     return 'a0'
141: 
142: def _num_to_str(val):
143:     if isinstance(val, six.string_types): return val
144: 
145:     ival = int(val)
146:     if val == ival: return str(ival)
147: 
148:     s = "%1.3f"%val
149:     s = s.rstrip("0")
150:     s = s.rstrip(".")
151:     return s
152: 
153: def _nums_to_str(*args):
154:     return ' '.join(map(_num_to_str,args))
155: 
156: 
157: def quote_ps_string(s):
158:     "Quote dangerous characters of S for use in a PostScript string constant."
159:     s = s.replace(b"\\", b"\\\\")
160:     s = s.replace(b"(", b"\\(")
161:     s = s.replace(b")", b"\\)")
162:     s = s.replace(b"'", b"\\251")
163:     s = s.replace(b"`", b"\\301")
164:     s = re.sub(br"[^ -~\n]", lambda x: br"\%03o" % ord(x.group()), s)
165:     return s.decode('ascii')
166: 
167: 
168: class RendererPS(RendererBase):
169:     '''
170:     The renderer handles all the drawing primitives using a graphics
171:     context instance that controls the colors/styles.
172:     '''
173: 
174:     afmfontd = maxdict(50)
175: 
176:     def __init__(self, width, height, pswriter, imagedpi=72):
177:         '''
178:         Although postscript itself is dpi independent, we need to
179:         imform the image code about a requested dpi to generate high
180:         res images and them scale them before embeddin them
181:         '''
182:         RendererBase.__init__(self)
183:         self.width = width
184:         self.height = height
185:         self._pswriter = pswriter
186:         if rcParams['text.usetex']:
187:             self.textcnt = 0
188:             self.psfrag = []
189:         self.imagedpi = imagedpi
190: 
191:         # current renderer state (None=uninitialised)
192:         self.color = None
193:         self.linewidth = None
194:         self.linejoin = None
195:         self.linecap = None
196:         self.linedash = None
197:         self.fontname = None
198:         self.fontsize = None
199:         self._hatches = {}
200:         self.image_magnification = imagedpi/72.0
201:         self._clip_paths = {}
202:         self._path_collection_id = 0
203: 
204:         self.used_characters = {}
205:         self.mathtext_parser = MathTextParser("PS")
206: 
207:         self._afm_font_dir = os.path.join(
208:             rcParams['datapath'], 'fonts', 'afm')
209: 
210:     def track_characters(self, font, s):
211:         '''Keeps track of which characters are required from
212:         each font.'''
213:         realpath, stat_key = get_realpath_and_stat(font.fname)
214:         used_characters = self.used_characters.setdefault(
215:             stat_key, (realpath, set()))
216:         used_characters[1].update([ord(x) for x in s])
217: 
218:     def merge_used_characters(self, other):
219:         for stat_key, (realpath, charset) in six.iteritems(other):
220:             used_characters = self.used_characters.setdefault(
221:                 stat_key, (realpath, set()))
222:             used_characters[1].update(charset)
223: 
224:     def set_color(self, r, g, b, store=1):
225:         if (r,g,b) != self.color:
226:             if r==g and r==b:
227:                 self._pswriter.write("%1.3f setgray\n"%r)
228:             else:
229:                 self._pswriter.write("%1.3f %1.3f %1.3f setrgbcolor\n"%(r,g,b))
230:             if store: self.color = (r,g,b)
231: 
232:     def set_linewidth(self, linewidth, store=1):
233:         linewidth = float(linewidth)
234:         if linewidth != self.linewidth:
235:             self._pswriter.write("%1.3f setlinewidth\n"%linewidth)
236:             if store: self.linewidth = linewidth
237: 
238:     def set_linejoin(self, linejoin, store=1):
239:         if linejoin != self.linejoin:
240:             self._pswriter.write("%d setlinejoin\n"%linejoin)
241:             if store: self.linejoin = linejoin
242: 
243:     def set_linecap(self, linecap, store=1):
244:         if linecap != self.linecap:
245:             self._pswriter.write("%d setlinecap\n"%linecap)
246:             if store: self.linecap = linecap
247: 
248:     def set_linedash(self, offset, seq, store=1):
249:         if self.linedash is not None:
250:             oldo, oldseq = self.linedash
251:             if np.array_equal(seq, oldseq) and oldo == offset:
252:                 return
253: 
254:         if seq is not None and len(seq):
255:             s="[%s] %d setdash\n"%(_nums_to_str(*seq), offset)
256:             self._pswriter.write(s)
257:         else:
258:             self._pswriter.write("[] 0 setdash\n")
259:         if store:
260:             self.linedash = (offset, seq)
261: 
262:     def set_font(self, fontname, fontsize, store=1):
263:         if rcParams['ps.useafm']: return
264:         if (fontname,fontsize) != (self.fontname,self.fontsize):
265:             out = ("/%s findfont\n"
266:                    "%1.3f scalefont\n"
267:                    "setfont\n" % (fontname, fontsize))
268: 
269:             self._pswriter.write(out)
270:             if store: self.fontname = fontname
271:             if store: self.fontsize = fontsize
272: 
273:     def create_hatch(self, hatch):
274:         sidelen = 72
275:         if hatch in self._hatches:
276:             return self._hatches[hatch]
277:         name = 'H%d' % len(self._hatches)
278:         linewidth = rcParams['hatch.linewidth']
279:         pageheight = self.height * 72
280:         self._pswriter.write('''\
281:   << /PatternType 1
282:      /PaintType 2
283:      /TilingType 2
284:      /BBox[0 0 %(sidelen)d %(sidelen)d]
285:      /XStep %(sidelen)d
286:      /YStep %(sidelen)d
287: 
288:      /PaintProc {
289:         pop
290:         %(linewidth)f setlinewidth
291: ''' % locals())
292:         self._pswriter.write(
293:             self._convert_path(Path.hatch(hatch), Affine2D().scale(sidelen),
294:                                simplify=False))
295:         self._pswriter.write('''\
296:         fill
297:         stroke
298:      } bind
299:    >>
300:    matrix
301:    0.0 %(pageheight)f translate
302:    makepattern
303:    /%(name)s exch def
304: ''' % locals())
305:         self._hatches[hatch] = name
306:         return name
307: 
308:     def get_canvas_width_height(self):
309:         'return the canvas width and height in display coords'
310:         return self.width * 72.0, self.height * 72.0
311: 
312:     def get_text_width_height_descent(self, s, prop, ismath):
313:         '''
314:         get the width and height in display coords of the string s
315:         with FontPropertry prop
316: 
317:         '''
318:         if rcParams['text.usetex']:
319:             texmanager = self.get_texmanager()
320:             fontsize = prop.get_size_in_points()
321:             w, h, d = texmanager.get_text_width_height_descent(s, fontsize,
322:                                                                renderer=self)
323:             return w, h, d
324: 
325:         if ismath:
326:             width, height, descent, pswriter, used_characters = \
327:                 self.mathtext_parser.parse(s, 72, prop)
328:             return width, height, descent
329: 
330:         if rcParams['ps.useafm']:
331:             if ismath: s = s[1:-1]
332:             font = self._get_font_afm(prop)
333:             l,b,w,h,d = font.get_str_bbox_and_descent(s)
334: 
335:             fontsize = prop.get_size_in_points()
336:             scale = 0.001*fontsize
337:             w *= scale
338:             h *= scale
339:             d *= scale
340:             return w, h, d
341: 
342:         font = self._get_font_ttf(prop)
343:         font.set_text(s, 0.0, flags=LOAD_NO_HINTING)
344:         w, h = font.get_width_height()
345:         w /= 64.0  # convert from subpixels
346:         h /= 64.0
347:         d = font.get_descent()
348:         d /= 64.0
349:         #print s, w, h
350:         return w, h, d
351: 
352:     def flipy(self):
353:         'return true if small y numbers are top for renderer'
354:         return False
355: 
356:     def _get_font_afm(self, prop):
357:         key = hash(prop)
358:         font = self.afmfontd.get(key)
359:         if font is None:
360:             fname = findfont(prop, fontext='afm', directory=self._afm_font_dir)
361:             if fname is None:
362:                 fname = findfont(
363:                     "Helvetica", fontext='afm', directory=self._afm_font_dir)
364:             font = self.afmfontd.get(fname)
365:             if font is None:
366:                 with io.open(fname, 'rb') as fh:
367:                     font = AFM(fh)
368:                 self.afmfontd[fname] = font
369:             self.afmfontd[key] = font
370:         return font
371: 
372:     def _get_font_ttf(self, prop):
373:         fname = findfont(prop)
374:         font = get_font(fname)
375:         font.clear()
376:         size = prop.get_size_in_points()
377:         font.set_size(size, 72.0)
378:         return font
379: 
380:     def _rgb(self, rgba):
381:         h, w = rgba.shape[:2]
382:         rgb = rgba[::-1, :, :3]
383:         return h, w, rgb.tostring()
384: 
385:     def _hex_lines(self, s, chars_per_line=128):
386:         s = binascii.b2a_hex(s)
387:         nhex = len(s)
388:         lines = []
389:         for i in range(0,nhex,chars_per_line):
390:             limit = min(i+chars_per_line, nhex)
391:             lines.append(s[i:limit])
392:         return lines
393: 
394:     def get_image_magnification(self):
395:         '''
396:         Get the factor by which to magnify images passed to draw_image.
397:         Allows a backend to have images at a different resolution to other
398:         artists.
399:         '''
400:         return self.image_magnification
401: 
402:     def option_scale_image(self):
403:         '''
404:         ps backend support arbitrary scaling of image.
405:         '''
406:         return True
407: 
408:     def option_image_nocomposite(self):
409:         '''
410:         return whether to generate a composite image from multiple images on
411:         a set of axes
412:         '''
413:         return not rcParams['image.composite_image']
414: 
415:     def _get_image_h_w_bits_command(self, im):
416:         h, w, bits = self._rgb(im)
417:         imagecmd = "false 3 colorimage"
418: 
419:         return h, w, bits, imagecmd
420: 
421:     def draw_image(self, gc, x, y, im, transform=None):
422:         '''
423:         Draw the Image instance into the current axes; x is the
424:         distance in pixels from the left hand side of the canvas and y
425:         is the distance from bottom
426:         '''
427: 
428:         h, w, bits, imagecmd = self._get_image_h_w_bits_command(im)
429:         hexlines = b'\n'.join(self._hex_lines(bits)).decode('ascii')
430: 
431:         if transform is None:
432:             matrix = "1 0 0 1 0 0"
433:             xscale = w / self.image_magnification
434:             yscale = h / self.image_magnification
435:         else:
436:             matrix = " ".join(map(str, transform.frozen().to_values()))
437:             xscale = 1.0
438:             yscale = 1.0
439: 
440:         figh = self.height * 72
441:         #print 'values', origin, flipud, figh, h, y
442: 
443:         bbox = gc.get_clip_rectangle()
444:         clippath, clippath_trans = gc.get_clip_path()
445: 
446:         clip = []
447:         if bbox is not None:
448:             clipx,clipy,clipw,cliph = bbox.bounds
449:             clip.append('%s clipbox' % _nums_to_str(clipw, cliph, clipx, clipy))
450:         if clippath is not None:
451:             id = self._get_clip_path(clippath, clippath_trans)
452:             clip.append('%s' % id)
453:         clip = '\n'.join(clip)
454: 
455:         #y = figh-(y+h)
456:         ps = '''gsave
457: %(clip)s
458: %(x)s %(y)s translate
459: [%(matrix)s] concat
460: %(xscale)s %(yscale)s scale
461: /DataString %(w)s string def
462: %(w)s %(h)s 8 [ %(w)s 0 0 -%(h)s 0 %(h)s ]
463: {
464: currentfile DataString readhexstring pop
465: } bind %(imagecmd)s
466: %(hexlines)s
467: grestore
468: ''' % locals()
469:         self._pswriter.write(ps)
470: 
471:     def _convert_path(self, path, transform, clip=False, simplify=None):
472:         if clip:
473:             clip = (0.0, 0.0, self.width * 72.0,
474:                     self.height * 72.0)
475:         else:
476:             clip = None
477:         return _path.convert_to_string(
478:             path, transform, clip, simplify, None,
479:             6, [b'm', b'l', b'', b'c', b'cl'], True).decode('ascii')
480: 
481:     def _get_clip_path(self, clippath, clippath_transform):
482:         key = (clippath, id(clippath_transform))
483:         pid = self._clip_paths.get(key)
484:         if pid is None:
485:             pid = 'c%x' % len(self._clip_paths)
486:             ps_cmd = ['/%s {' % pid]
487:             ps_cmd.append(self._convert_path(clippath, clippath_transform,
488:                                              simplify=False))
489:             ps_cmd.extend(['clip', 'newpath', '} bind def\n'])
490:             self._pswriter.write('\n'.join(ps_cmd))
491:             self._clip_paths[key] = pid
492:         return pid
493: 
494:     def draw_path(self, gc, path, transform, rgbFace=None):
495:         '''
496:         Draws a Path instance using the given affine transform.
497:         '''
498:         clip = (rgbFace is None and gc.get_hatch_path() is None)
499:         simplify = path.should_simplify and clip
500:         ps = self._convert_path(
501:             path, transform, clip=clip, simplify=simplify)
502:         self._draw_ps(ps, gc, rgbFace)
503: 
504:     def draw_markers(self, gc, marker_path, marker_trans, path, trans, rgbFace=None):
505:         '''
506:         Draw the markers defined by path at each of the positions in x
507:         and y.  path coordinates are points, x and y coords will be
508:         transformed by the transform
509:         '''
510:         if debugPS: self._pswriter.write('% draw_markers \n')
511: 
512:         if rgbFace:
513:             if rgbFace[0]==rgbFace[1] and rgbFace[0]==rgbFace[2]:
514:                 ps_color = '%1.3f setgray' % rgbFace[0]
515:             else:
516:                 ps_color = '%1.3f %1.3f %1.3f setrgbcolor' % rgbFace[:3]
517: 
518:         # construct the generic marker command:
519:         ps_cmd = ['/o {', 'gsave', 'newpath', 'translate'] # dont want the translate to be global
520: 
521:         lw = gc.get_linewidth()
522:         stroke = lw != 0.0
523:         if stroke:
524:             ps_cmd.append('%.1f setlinewidth' % lw)
525:             jint = gc.get_joinstyle()
526:             ps_cmd.append('%d setlinejoin' % jint)
527:             cint = gc.get_capstyle()
528:             ps_cmd.append('%d setlinecap' % cint)
529: 
530:         ps_cmd.append(self._convert_path(marker_path, marker_trans,
531:                                          simplify=False))
532: 
533:         if rgbFace:
534:             if stroke:
535:                 ps_cmd.append('gsave')
536:             ps_cmd.extend([ps_color, 'fill'])
537:             if stroke:
538:                 ps_cmd.append('grestore')
539: 
540:         if stroke:
541:             ps_cmd.append('stroke')
542:         ps_cmd.extend(['grestore', '} bind def'])
543: 
544:         for vertices, code in path.iter_segments(
545:                 trans,
546:                 clip=(0, 0, self.width*72, self.height*72),
547:                 simplify=False):
548:             if len(vertices):
549:                 x, y = vertices[-2:]
550:                 ps_cmd.append("%g %g o" % (x, y))
551: 
552:         ps = '\n'.join(ps_cmd)
553:         self._draw_ps(ps, gc, rgbFace, fill=False, stroke=False)
554: 
555:     def draw_path_collection(self, gc, master_transform, paths, all_transforms,
556:                              offsets, offsetTrans, facecolors, edgecolors,
557:                              linewidths, linestyles, antialiaseds, urls,
558:                              offset_position):
559:         # Is the optimization worth it? Rough calculation:
560:         # cost of emitting a path in-line is
561:         #     (len_path + 2) * uses_per_path
562:         # cost of definition+use is
563:         #     (len_path + 3) + 3 * uses_per_path
564:         len_path = len(paths[0].vertices) if len(paths) > 0 else 0
565:         uses_per_path = self._iter_collection_uses_per_path(
566:             paths, all_transforms, offsets, facecolors, edgecolors)
567:         should_do_optimization = \
568:             len_path + 3 * uses_per_path + 3 < (len_path + 2) * uses_per_path
569:         if not should_do_optimization:
570:             return RendererBase.draw_path_collection(
571:                 self, gc, master_transform, paths, all_transforms,
572:                 offsets, offsetTrans, facecolors, edgecolors,
573:                 linewidths, linestyles, antialiaseds, urls,
574:                 offset_position)
575: 
576:         write = self._pswriter.write
577: 
578:         path_codes = []
579:         for i, (path, transform) in enumerate(self._iter_collection_raw_paths(
580:             master_transform, paths, all_transforms)):
581:             name = 'p%x_%x' % (self._path_collection_id, i)
582:             ps_cmd = ['/%s {' % name,
583:                       'newpath', 'translate']
584:             ps_cmd.append(self._convert_path(path, transform, simplify=False))
585:             ps_cmd.extend(['} bind def\n'])
586:             write('\n'.join(ps_cmd))
587:             path_codes.append(name)
588: 
589:         for xo, yo, path_id, gc0, rgbFace in self._iter_collection(
590:             gc, master_transform, all_transforms, path_codes, offsets,
591:             offsetTrans, facecolors, edgecolors, linewidths, linestyles,
592:             antialiaseds, urls, offset_position):
593:             ps = "%g %g %s" % (xo, yo, path_id)
594:             self._draw_ps(ps, gc0, rgbFace)
595: 
596:         self._path_collection_id += 1
597: 
598:     def draw_tex(self, gc, x, y, s, prop, angle, ismath='TeX!', mtext=None):
599:         '''
600:         draw a Text instance
601:         '''
602:         w, h, bl = self.get_text_width_height_descent(s, prop, ismath)
603:         fontsize = prop.get_size_in_points()
604:         thetext = 'psmarker%d' % self.textcnt
605:         color = '%1.3f,%1.3f,%1.3f'% gc.get_rgb()[:3]
606:         fontcmd = {'sans-serif' : r'{\sffamily %s}',
607:                'monospace'  : r'{\ttfamily %s}'}.get(
608:                 rcParams['font.family'][0], r'{\rmfamily %s}')
609:         s = fontcmd % s
610:         tex = r'\color[rgb]{%s} %s' % (color, s)
611: 
612:         corr = 0#w/2*(fontsize-10)/10
613:         if rcParams['text.latex.preview']:
614:             # use baseline alignment!
615:             pos = _nums_to_str(x-corr, y)
616:             self.psfrag.append(r'\psfrag{%s}[Bl][Bl][1][%f]{\fontsize{%f}{%f}%s}'%(thetext, angle, fontsize, fontsize*1.25, tex))
617:         else:
618:             # stick to the bottom alignment, but this may give incorrect baseline some times.
619:             pos = _nums_to_str(x-corr, y-bl)
620:             self.psfrag.append(r'\psfrag{%s}[bl][bl][1][%f]{\fontsize{%f}{%f}%s}'%(thetext, angle, fontsize, fontsize*1.25, tex))
621: 
622:         ps = '''\
623: gsave
624: %(pos)s moveto
625: (%(thetext)s)
626: show
627: grestore
628:     ''' % locals()
629: 
630:         self._pswriter.write(ps)
631:         self.textcnt += 1
632: 
633:     def draw_text(self, gc, x, y, s, prop, angle, ismath=False, mtext=None):
634:         '''
635:         draw a Text instance
636:         '''
637:         # local to avoid repeated attribute lookups
638:         write = self._pswriter.write
639:         if debugPS:
640:             write("% text\n")
641: 
642:         if ismath=='TeX':
643:             return self.tex(gc, x, y, s, prop, angle)
644: 
645:         elif ismath:
646:             return self.draw_mathtext(gc, x, y, s, prop, angle)
647: 
648:         elif rcParams['ps.useafm']:
649:             self.set_color(*gc.get_rgb())
650: 
651:             font = self._get_font_afm(prop)
652:             fontname = font.get_fontname()
653:             fontsize = prop.get_size_in_points()
654:             scale = 0.001*fontsize
655: 
656:             thisx = 0
657:             thisy = font.get_str_bbox_and_descent(s)[4] * scale
658:             last_name = None
659:             lines = []
660:             for c in s:
661:                 name = uni2type1.get(ord(c), 'question')
662:                 try:
663:                     width = font.get_width_from_char_name(name)
664:                 except KeyError:
665:                     name = 'question'
666:                     width = font.get_width_char('?')
667:                 if last_name is not None:
668:                     kern = font.get_kern_dist_from_name(last_name, name)
669:                 else:
670:                     kern = 0
671:                 last_name = name
672:                 thisx += kern * scale
673: 
674:                 lines.append('%f %f m /%s glyphshow'%(thisx, thisy, name))
675: 
676:                 thisx += width * scale
677: 
678:             thetext = "\n".join(lines)
679:             ps = '''\
680: gsave
681: /%(fontname)s findfont
682: %(fontsize)s scalefont
683: setfont
684: %(x)f %(y)f translate
685: %(angle)f rotate
686: %(thetext)s
687: grestore
688:     ''' % locals()
689:             self._pswriter.write(ps)
690: 
691:         else:
692:             font = self._get_font_ttf(prop)
693:             font.set_text(s, 0, flags=LOAD_NO_HINTING)
694:             self.track_characters(font, s)
695: 
696:             self.set_color(*gc.get_rgb())
697:             sfnt = font.get_sfnt()
698:             try:
699:                 ps_name = sfnt[(1,0,0,6)].decode('macroman')
700:             except KeyError:
701:                 ps_name = sfnt[(3,1,0x0409,6)].decode(
702:                     'utf-16be')
703:             ps_name = ps_name.encode('ascii', 'replace').decode('ascii')
704:             self.set_font(ps_name, prop.get_size_in_points())
705: 
706:             lastgind = None
707:             #print 'text', s
708:             lines = []
709:             thisx = 0
710:             thisy = 0
711:             for c in s:
712:                 ccode = ord(c)
713:                 gind = font.get_char_index(ccode)
714:                 if gind is None:
715:                     ccode = ord('?')
716:                     name = '.notdef'
717:                     gind = 0
718:                 else:
719:                     name = font.get_glyph_name(gind)
720:                 glyph = font.load_char(ccode, flags=LOAD_NO_HINTING)
721: 
722:                 if lastgind is not None:
723:                     kern = font.get_kerning(lastgind, gind, KERNING_DEFAULT)
724:                 else:
725:                     kern = 0
726:                 lastgind = gind
727:                 thisx += kern/64.0
728: 
729:                 lines.append('%f %f m /%s glyphshow'%(thisx, thisy, name))
730:                 thisx += glyph.linearHoriAdvance/65536.0
731: 
732: 
733:             thetext = '\n'.join(lines)
734:             ps = '''gsave
735: %(x)f %(y)f translate
736: %(angle)f rotate
737: %(thetext)s
738: grestore
739: ''' % locals()
740:             self._pswriter.write(ps)
741: 
742:     def new_gc(self):
743:         return GraphicsContextPS()
744: 
745:     def draw_mathtext(self, gc,
746:         x, y, s, prop, angle):
747:         '''
748:         Draw the math text using matplotlib.mathtext
749:         '''
750:         if debugPS:
751:             self._pswriter.write("% mathtext\n")
752: 
753:         width, height, descent, pswriter, used_characters = \
754:             self.mathtext_parser.parse(s, 72, prop)
755:         self.merge_used_characters(used_characters)
756:         self.set_color(*gc.get_rgb())
757:         thetext = pswriter.getvalue()
758:         ps = '''gsave
759: %(x)f %(y)f translate
760: %(angle)f rotate
761: %(thetext)s
762: grestore
763: ''' % locals()
764:         self._pswriter.write(ps)
765: 
766:     def draw_gouraud_triangle(self, gc, points, colors, trans):
767:         self.draw_gouraud_triangles(gc, points.reshape((1, 3, 2)),
768:                                     colors.reshape((1, 3, 4)), trans)
769: 
770:     def draw_gouraud_triangles(self, gc, points, colors, trans):
771:         assert len(points) == len(colors)
772:         assert points.ndim == 3
773:         assert points.shape[1] == 3
774:         assert points.shape[2] == 2
775:         assert colors.ndim == 3
776:         assert colors.shape[1] == 3
777:         assert colors.shape[2] == 4
778: 
779:         shape = points.shape
780:         flat_points = points.reshape((shape[0] * shape[1], 2))
781:         flat_points = trans.transform(flat_points)
782:         flat_colors = colors.reshape((shape[0] * shape[1], 4))
783:         points_min = np.min(flat_points, axis=0) - (1 << 12)
784:         points_max = np.max(flat_points, axis=0) + (1 << 12)
785:         factor = np.ceil(float(2 ** 32 - 1) / (points_max - points_min))
786: 
787:         xmin, ymin = points_min
788:         xmax, ymax = points_max
789: 
790:         streamarr = np.empty(
791:             (shape[0] * shape[1],),
792:             dtype=[('flags', 'u1'),
793:                    ('points', '>u4', (2,)),
794:                    ('colors', 'u1', (3,))])
795:         streamarr['flags'] = 0
796:         streamarr['points'] = (flat_points - points_min) * factor
797:         streamarr['colors'] = flat_colors[:, :3] * 255.0
798: 
799:         stream = quote_ps_string(streamarr.tostring())
800: 
801:         self._pswriter.write('''
802: gsave
803: << /ShadingType 4
804:    /ColorSpace [/DeviceRGB]
805:    /BitsPerCoordinate 32
806:    /BitsPerComponent 8
807:    /BitsPerFlag 8
808:    /AntiAlias true
809:    /Decode [ %(xmin)f %(xmax)f %(ymin)f %(ymax)f 0 1 0 1 0 1 ]
810:    /DataSource (%(stream)s)
811: >>
812: shfill
813: grestore
814: ''' % locals())
815: 
816:     def _draw_ps(self, ps, gc, rgbFace, fill=True, stroke=True, command=None):
817:         '''
818:         Emit the PostScript sniplet 'ps' with all the attributes from 'gc'
819:         applied.  'ps' must consist of PostScript commands to construct a path.
820: 
821:         The fill and/or stroke kwargs can be set to False if the
822:         'ps' string already includes filling and/or stroking, in
823:         which case _draw_ps is just supplying properties and
824:         clipping.
825:         '''
826:         # local variable eliminates all repeated attribute lookups
827:         write = self._pswriter.write
828:         if debugPS and command:
829:             write("% "+command+"\n")
830:         mightstroke = gc.shouldstroke()
831:         stroke = stroke and mightstroke
832:         fill = (fill and rgbFace is not None and
833:                 (len(rgbFace) <= 3 or rgbFace[3] != 0.0))
834:         hatch = gc.get_hatch()
835: 
836:         if mightstroke:
837:             self.set_linewidth(gc.get_linewidth())
838:             jint = gc.get_joinstyle()
839:             self.set_linejoin(jint)
840:             cint = gc.get_capstyle()
841:             self.set_linecap(cint)
842:             self.set_linedash(*gc.get_dashes())
843:             self.set_color(*gc.get_rgb()[:3])
844:         write('gsave\n')
845: 
846:         cliprect = gc.get_clip_rectangle()
847:         if cliprect:
848:             x,y,w,h=cliprect.bounds
849:             write('%1.4g %1.4g %1.4g %1.4g clipbox\n' % (w,h,x,y))
850:         clippath, clippath_trans = gc.get_clip_path()
851:         if clippath:
852:             id = self._get_clip_path(clippath, clippath_trans)
853:             write('%s\n' % id)
854: 
855:         # Jochen, is the strip necessary? - this could be a honking big string
856:         write(ps.strip())
857:         write("\n")
858: 
859:         if fill:
860:             if stroke or hatch:
861:                 write("gsave\n")
862:             self.set_color(store=0, *rgbFace[:3])
863:             write("fill\n")
864:             if stroke or hatch:
865:                 write("grestore\n")
866: 
867:         if hatch:
868:             hatch_name = self.create_hatch(hatch)
869:             write("gsave\n")
870:             write("%f %f %f " % gc.get_hatch_color()[:3])
871:             write("%s setpattern fill grestore\n" % hatch_name)
872: 
873:         if stroke:
874:             write("stroke\n")
875: 
876:         write("grestore\n")
877: 
878: 
879: class GraphicsContextPS(GraphicsContextBase):
880:     def get_capstyle(self):
881:         return {'butt':0,
882:                 'round':1,
883:                 'projecting':2}[GraphicsContextBase.get_capstyle(self)]
884: 
885:     def get_joinstyle(self):
886:         return {'miter':0,
887:                 'round':1,
888:                 'bevel':2}[GraphicsContextBase.get_joinstyle(self)]
889: 
890:     def shouldstroke(self):
891:         return (self.get_linewidth() > 0.0 and
892:                 (len(self.get_rgb()) <= 3 or self.get_rgb()[3] != 0.0))
893: 
894: 
895: class FigureCanvasPS(FigureCanvasBase):
896:     _renderer_class = RendererPS
897: 
898:     fixed_dpi = 72
899: 
900:     def draw(self):
901:         pass
902: 
903:     filetypes = {'ps'  : 'Postscript',
904:                  'eps' : 'Encapsulated Postscript'}
905: 
906:     def get_default_filetype(self):
907:         return 'ps'
908: 
909:     def print_ps(self, outfile, *args, **kwargs):
910:         return self._print_ps(outfile, 'ps', *args, **kwargs)
911: 
912:     def print_eps(self, outfile, *args, **kwargs):
913:         return self._print_ps(outfile, 'eps', *args, **kwargs)
914: 
915:     def _print_ps(self, outfile, format, *args, **kwargs):
916:         papertype = kwargs.pop("papertype", rcParams['ps.papersize'])
917:         papertype = papertype.lower()
918:         if papertype == 'auto':
919:             pass
920:         elif papertype not in papersize:
921:             raise RuntimeError('%s is not a valid papertype. Use one of %s' %
922:                                (papertype, ', '.join(papersize)))
923: 
924:         orientation = kwargs.pop("orientation", "portrait").lower()
925:         if orientation == 'landscape': isLandscape = True
926:         elif orientation == 'portrait': isLandscape = False
927:         else: raise RuntimeError('Orientation must be "portrait" or "landscape"')
928: 
929:         self.figure.set_dpi(72) # Override the dpi kwarg
930:         imagedpi = kwargs.pop("dpi", 72)
931:         facecolor = kwargs.pop("facecolor", "w")
932:         edgecolor = kwargs.pop("edgecolor", "w")
933: 
934:         if rcParams['text.usetex']:
935:             self._print_figure_tex(outfile, format, imagedpi, facecolor, edgecolor,
936:                                    orientation, isLandscape, papertype,
937:                                    **kwargs)
938:         else:
939:             self._print_figure(outfile, format, imagedpi, facecolor, edgecolor,
940:                                orientation, isLandscape, papertype,
941:                                **kwargs)
942: 
943:     def _print_figure(self, outfile, format, dpi=72, facecolor='w', edgecolor='w',
944:                       orientation='portrait', isLandscape=False, papertype=None,
945:                       metadata=None, **kwargs):
946:         '''
947:         Render the figure to hardcopy.  Set the figure patch face and
948:         edge colors.  This is useful because some of the GUIs have a
949:         gray figure face color background and you'll probably want to
950:         override this on hardcopy
951: 
952:         If outfile is a string, it is interpreted as a file name.
953:         If the extension matches .ep* write encapsulated postscript,
954:         otherwise write a stand-alone PostScript file.
955: 
956:         If outfile is a file object, a stand-alone PostScript file is
957:         written into this file object.
958: 
959:         metadata must be a dictionary. Currently, only the value for
960:         the key 'Creator' is used.
961:         '''
962:         isEPSF = format == 'eps'
963:         passed_in_file_object = False
964:         if isinstance(outfile, six.string_types):
965:             title = outfile
966:         elif is_writable_file_like(outfile):
967:             title = None
968:             passed_in_file_object = True
969:         else:
970:             raise ValueError("outfile must be a path or a file-like object")
971: 
972:         # find the appropriate papertype
973:         width, height = self.figure.get_size_inches()
974:         if papertype == 'auto':
975:             if isLandscape: papertype = _get_papertype(height, width)
976:             else: papertype = _get_papertype(width, height)
977: 
978:         if isLandscape: paperHeight, paperWidth = papersize[papertype]
979:         else: paperWidth, paperHeight = papersize[papertype]
980: 
981:         if rcParams['ps.usedistiller'] and not papertype == 'auto':
982:             # distillers will improperly clip eps files if the pagesize is
983:             # too small
984:             if width>paperWidth or height>paperHeight:
985:                 if isLandscape:
986:                     papertype = _get_papertype(height, width)
987:                     paperHeight, paperWidth = papersize[papertype]
988:                 else:
989:                     papertype = _get_papertype(width, height)
990:                     paperWidth, paperHeight = papersize[papertype]
991: 
992:         # center the figure on the paper
993:         xo = 72*0.5*(paperWidth - width)
994:         yo = 72*0.5*(paperHeight - height)
995: 
996:         l, b, w, h = self.figure.bbox.bounds
997:         llx = xo
998:         lly = yo
999:         urx = llx + w
1000:         ury = lly + h
1001:         rotation = 0
1002:         if isLandscape:
1003:             llx, lly, urx, ury = lly, llx, ury, urx
1004:             xo, yo = 72*paperHeight - yo, xo
1005:             rotation = 90
1006:         bbox = (llx, lly, urx, ury)
1007: 
1008:         # generate PostScript code for the figure and store it in a string
1009:         origfacecolor = self.figure.get_facecolor()
1010:         origedgecolor = self.figure.get_edgecolor()
1011:         self.figure.set_facecolor(facecolor)
1012:         self.figure.set_edgecolor(edgecolor)
1013: 
1014: 
1015:         dryrun = kwargs.get("dryrun", False)
1016:         if dryrun:
1017:             class NullWriter(object):
1018:                 def write(self, *kl, **kwargs):
1019:                     pass
1020: 
1021:             self._pswriter = NullWriter()
1022:         else:
1023:             self._pswriter = io.StringIO()
1024: 
1025: 
1026:         # mixed mode rendering
1027:         _bbox_inches_restore = kwargs.pop("bbox_inches_restore", None)
1028:         ps_renderer = self._renderer_class(width, height, self._pswriter,
1029:                                            imagedpi=dpi)
1030:         renderer = MixedModeRenderer(self.figure,
1031:             width, height, dpi, ps_renderer,
1032:             bbox_inches_restore=_bbox_inches_restore)
1033: 
1034:         self.figure.draw(renderer)
1035: 
1036:         if dryrun: # return immediately if dryrun (tightbbox=True)
1037:             return
1038: 
1039:         self.figure.set_facecolor(origfacecolor)
1040:         self.figure.set_edgecolor(origedgecolor)
1041: 
1042:         # check for custom metadata
1043:         if metadata is not None and 'Creator' in metadata:
1044:             creator_str = metadata['Creator']
1045:         else:
1046:             creator_str = "matplotlib version " + __version__ + \
1047:                 ", http://matplotlib.org/"
1048: 
1049:         def print_figure_impl(fh):
1050:             # write the PostScript headers
1051:             if isEPSF:
1052:                 print("%!PS-Adobe-3.0 EPSF-3.0", file=fh)
1053:             else:
1054:                 print("%!PS-Adobe-3.0", file=fh)
1055:             if title:
1056:                 print("%%Title: "+title, file=fh)
1057:             print("%%Creator: " + creator_str, file=fh)
1058:             # get source date from SOURCE_DATE_EPOCH, if set
1059:             # See https://reproducible-builds.org/specs/source-date-epoch/
1060:             source_date_epoch = os.getenv("SOURCE_DATE_EPOCH")
1061:             if source_date_epoch:
1062:                 source_date = datetime.datetime.utcfromtimestamp(
1063:                     int(source_date_epoch)).strftime("%a %b %d %H:%M:%S %Y")
1064:             else:
1065:                 source_date = time.ctime()
1066:             print("%%CreationDate: "+source_date, file=fh)
1067:             print("%%Orientation: " + orientation, file=fh)
1068:             if not isEPSF:
1069:                 print("%%DocumentPaperSizes: "+papertype, file=fh)
1070:             print("%%%%BoundingBox: %d %d %d %d" % bbox, file=fh)
1071:             if not isEPSF:
1072:                 print("%%Pages: 1", file=fh)
1073:             print("%%EndComments", file=fh)
1074: 
1075:             Ndict = len(psDefs)
1076:             print("%%BeginProlog", file=fh)
1077:             if not rcParams['ps.useafm']:
1078:                 Ndict += len(ps_renderer.used_characters)
1079:             print("/mpldict %d dict def" % Ndict, file=fh)
1080:             print("mpldict begin", file=fh)
1081:             for d in psDefs:
1082:                 d = d.strip()
1083:                 for l in d.split('\n'):
1084:                     print(l.strip(), file=fh)
1085:             if not rcParams['ps.useafm']:
1086:                 for font_filename, chars in six.itervalues(
1087:                         ps_renderer.used_characters):
1088:                     if len(chars):
1089:                         font = get_font(font_filename)
1090:                         glyph_ids = []
1091:                         for c in chars:
1092:                             gind = font.get_char_index(c)
1093:                             glyph_ids.append(gind)
1094: 
1095:                         fonttype = rcParams['ps.fonttype']
1096: 
1097:                         # Can not use more than 255 characters from a
1098:                         # single font for Type 3
1099:                         if len(glyph_ids) > 255:
1100:                             fonttype = 42
1101: 
1102:                         # The ttf to ps (subsetting) support doesn't work for
1103:                         # OpenType fonts that are Postscript inside (like the
1104:                         # STIX fonts).  This will simply turn that off to avoid
1105:                         # errors.
1106:                         if is_opentype_cff_font(font_filename):
1107:                             msg = ("OpenType CFF fonts can not be saved "
1108:                                    "using the internal Postscript backend "
1109:                                    "at this time.\nConsider using the "
1110:                                    "Cairo backend.")
1111:                             raise RuntimeError(msg)
1112:                         else:
1113:                             fh.flush()
1114:                             convert_ttf_to_ps(
1115:                                 font_filename.encode(
1116:                                     sys.getfilesystemencoding()),
1117:                                 fh, fonttype, glyph_ids)
1118:             print("end", file=fh)
1119:             print("%%EndProlog", file=fh)
1120: 
1121:             if not isEPSF:
1122:                 print("%%Page: 1 1", file=fh)
1123:             print("mpldict begin", file=fh)
1124: 
1125:             print("%s translate" % _nums_to_str(xo, yo), file=fh)
1126:             if rotation:
1127:                 print("%d rotate" % rotation, file=fh)
1128:             print("%s clipbox" % _nums_to_str(width*72, height*72, 0, 0),
1129:                   file=fh)
1130: 
1131:             # write the figure
1132:             content = self._pswriter.getvalue()
1133:             if not isinstance(content, six.text_type):
1134:                 content = content.decode('ascii')
1135:             print(content, file=fh)
1136: 
1137:             # write the trailer
1138:             print("end", file=fh)
1139:             print("showpage", file=fh)
1140:             if not isEPSF:
1141:                 print("%%EOF", file=fh)
1142:             fh.flush()
1143: 
1144:         if rcParams['ps.usedistiller']:
1145:             # We are going to use an external program to process the output.
1146:             # Write to a temporary file.
1147:             fd, tmpfile = mkstemp()
1148:             try:
1149:                 with io.open(fd, 'w', encoding='latin-1') as fh:
1150:                     print_figure_impl(fh)
1151:                 if rcParams['ps.usedistiller'] == 'ghostscript':
1152:                     gs_distill(tmpfile, isEPSF, ptype=papertype, bbox=bbox)
1153:                 elif rcParams['ps.usedistiller'] == 'xpdf':
1154:                     xpdf_distill(tmpfile, isEPSF, ptype=papertype, bbox=bbox)
1155: 
1156:                 if passed_in_file_object:
1157:                     if file_requires_unicode(outfile):
1158:                         with io.open(tmpfile, 'rb') as fh:
1159:                             outfile.write(fh.read().decode('latin-1'))
1160:                     else:
1161:                         with io.open(tmpfile, 'rb') as fh:
1162:                             outfile.write(fh.read())
1163:                 else:
1164:                     with io.open(outfile, 'w') as fh:
1165:                         pass
1166:                     mode = os.stat(outfile).st_mode
1167:                     shutil.move(tmpfile, outfile)
1168:                     os.chmod(outfile, mode)
1169:             finally:
1170:                 if os.path.isfile(tmpfile):
1171:                     os.unlink(tmpfile)
1172: 
1173:         else:
1174:             # Write directly to outfile.
1175:             if passed_in_file_object:
1176:                 requires_unicode = file_requires_unicode(outfile)
1177: 
1178:                 if (not requires_unicode and
1179:                         (six.PY3 or not isinstance(outfile, StringIO))):
1180:                     fh = io.TextIOWrapper(outfile, encoding="latin-1")
1181: 
1182:                     # Prevent the io.TextIOWrapper from closing the
1183:                     # underlying file
1184:                     def do_nothing():
1185:                         pass
1186:                     fh.close = do_nothing
1187:                 else:
1188:                     fh = outfile
1189: 
1190:                 print_figure_impl(fh)
1191:             else:
1192:                 with io.open(outfile, 'w', encoding='latin-1') as fh:
1193:                     print_figure_impl(fh)
1194: 
1195:     def _print_figure_tex(self, outfile, format, dpi, facecolor, edgecolor,
1196:                           orientation, isLandscape, papertype, metadata=None,
1197:                           **kwargs):
1198:         '''
1199:         If text.usetex is True in rc, a temporary pair of tex/eps files
1200:         are created to allow tex to manage the text layout via the PSFrags
1201:         package. These files are processed to yield the final ps or eps file.
1202: 
1203:         metadata must be a dictionary. Currently, only the value for
1204:         the key 'Creator' is used.
1205:         '''
1206:         isEPSF = format == 'eps'
1207:         if isinstance(outfile, six.string_types):
1208:             title = outfile
1209:         elif is_writable_file_like(outfile):
1210:             title = None
1211:         else:
1212:             raise ValueError("outfile must be a path or a file-like object")
1213: 
1214:         self.figure.dpi = 72  # ignore the dpi kwarg
1215:         width, height = self.figure.get_size_inches()
1216:         xo = 0
1217:         yo = 0
1218: 
1219:         l, b, w, h = self.figure.bbox.bounds
1220:         llx = xo
1221:         lly = yo
1222:         urx = llx + w
1223:         ury = lly + h
1224:         bbox = (llx, lly, urx, ury)
1225: 
1226:         # generate PostScript code for the figure and store it in a string
1227:         origfacecolor = self.figure.get_facecolor()
1228:         origedgecolor = self.figure.get_edgecolor()
1229:         self.figure.set_facecolor(facecolor)
1230:         self.figure.set_edgecolor(edgecolor)
1231: 
1232:         dryrun = kwargs.get("dryrun", False)
1233:         if dryrun:
1234:             class NullWriter(object):
1235:                 def write(self, *kl, **kwargs):
1236:                     pass
1237: 
1238:             self._pswriter = NullWriter()
1239:         else:
1240:             self._pswriter = io.StringIO()
1241: 
1242:         # mixed mode rendering
1243:         _bbox_inches_restore = kwargs.pop("bbox_inches_restore", None)
1244:         ps_renderer = self._renderer_class(width, height,
1245:                                            self._pswriter, imagedpi=dpi)
1246:         renderer = MixedModeRenderer(self.figure,
1247:                                      width, height, dpi, ps_renderer,
1248:                                      bbox_inches_restore=_bbox_inches_restore)
1249: 
1250:         self.figure.draw(renderer)
1251: 
1252:         if dryrun:  # return immediately if dryrun (tightbbox=True)
1253:             return
1254: 
1255:         self.figure.set_facecolor(origfacecolor)
1256:         self.figure.set_edgecolor(origedgecolor)
1257: 
1258:         # check for custom metadata
1259:         if metadata is not None and 'Creator' in metadata:
1260:             creator_str = metadata['Creator']
1261:         else:
1262:             creator_str = "matplotlib version " + __version__ + \
1263:                 ", http://matplotlib.org/"
1264: 
1265:         # write to a temp file, we'll move it to outfile when done
1266: 
1267:         fd, tmpfile = mkstemp()
1268:         try:
1269:             with io.open(fd, 'w', encoding='latin-1') as fh:
1270:                 # write the Encapsulated PostScript headers
1271:                 print("%!PS-Adobe-3.0 EPSF-3.0", file=fh)
1272:                 if title:
1273:                     print("%%Title: "+title, file=fh)
1274:                 print("%%Creator: " + creator_str, file=fh)
1275:                 # get source date from SOURCE_DATE_EPOCH, if set
1276:                 # See https://reproducible-builds.org/specs/source-date-epoch/
1277:                 source_date_epoch = os.getenv("SOURCE_DATE_EPOCH")
1278:                 if source_date_epoch:
1279:                     source_date = datetime.datetime.utcfromtimestamp(
1280:                         int(source_date_epoch)).strftime(
1281:                             "%a %b %d %H:%M:%S %Y")
1282:                 else:
1283:                     source_date = time.ctime()
1284:                 print("%%CreationDate: "+source_date, file=fh)
1285:                 print("%%%%BoundingBox: %d %d %d %d" % bbox, file=fh)
1286:                 print("%%EndComments", file=fh)
1287: 
1288:                 Ndict = len(psDefs)
1289:                 print("%%BeginProlog", file=fh)
1290:                 print("/mpldict %d dict def" % Ndict, file=fh)
1291:                 print("mpldict begin", file=fh)
1292:                 for d in psDefs:
1293:                     d = d.strip()
1294:                     for l in d.split('\n'):
1295:                         print(l.strip(), file=fh)
1296:                 print("end", file=fh)
1297:                 print("%%EndProlog", file=fh)
1298: 
1299:                 print("mpldict begin", file=fh)
1300:                 print("%s translate" % _nums_to_str(xo, yo), file=fh)
1301:                 print("%s clipbox" % _nums_to_str(width*72, height*72, 0, 0),
1302:                       file=fh)
1303: 
1304:                 # write the figure
1305:                 print(self._pswriter.getvalue(), file=fh)
1306: 
1307:                 # write the trailer
1308:                 print("end", file=fh)
1309:                 print("showpage", file=fh)
1310:                 fh.flush()
1311: 
1312:             if isLandscape:  # now we are ready to rotate
1313:                 isLandscape = True
1314:                 width, height = height, width
1315:                 bbox = (lly, llx, ury, urx)
1316: 
1317:             # set the paper size to the figure size if isEPSF. The
1318:             # resulting ps file has the given size with correct bounding
1319:             # box so that there is no need to call 'pstoeps'
1320:             if isEPSF:
1321:                 paperWidth, paperHeight = self.figure.get_size_inches()
1322:                 if isLandscape:
1323:                     paperWidth, paperHeight = paperHeight, paperWidth
1324:             else:
1325:                 temp_papertype = _get_papertype(width, height)
1326:                 if papertype == 'auto':
1327:                     papertype = temp_papertype
1328:                     paperWidth, paperHeight = papersize[temp_papertype]
1329:                 else:
1330:                     paperWidth, paperHeight = papersize[papertype]
1331:                     if (width > paperWidth or height > paperHeight) and isEPSF:
1332:                         paperWidth, paperHeight = papersize[temp_papertype]
1333:                         verbose.report(
1334:                             ('Your figure is too big to fit on %s paper. %s '
1335:                              'paper will be used to prevent clipping.'
1336:                              ) % (papertype, temp_papertype), 'helpful')
1337: 
1338:             texmanager = ps_renderer.get_texmanager()
1339:             font_preamble = texmanager.get_font_preamble()
1340:             custom_preamble = texmanager.get_custom_preamble()
1341: 
1342:             psfrag_rotated = convert_psfrags(tmpfile, ps_renderer.psfrag,
1343:                                              font_preamble,
1344:                                              custom_preamble, paperWidth,
1345:                                              paperHeight,
1346:                                              orientation)
1347: 
1348:             if rcParams['ps.usedistiller'] == 'ghostscript':
1349:                 gs_distill(tmpfile, isEPSF, ptype=papertype, bbox=bbox,
1350:                            rotated=psfrag_rotated)
1351:             elif rcParams['ps.usedistiller'] == 'xpdf':
1352:                 xpdf_distill(tmpfile, isEPSF, ptype=papertype, bbox=bbox,
1353:                              rotated=psfrag_rotated)
1354:             elif rcParams['text.usetex']:
1355:                 if False:
1356:                     pass  # for debugging
1357:                 else:
1358:                     gs_distill(tmpfile, isEPSF, ptype=papertype, bbox=bbox,
1359:                                rotated=psfrag_rotated)
1360: 
1361:             if is_writable_file_like(outfile):
1362:                 if file_requires_unicode(outfile):
1363:                     with io.open(tmpfile, 'rb') as fh:
1364:                         outfile.write(fh.read().decode('latin-1'))
1365:                 else:
1366:                     with io.open(tmpfile, 'rb') as fh:
1367:                         outfile.write(fh.read())
1368:             else:
1369:                 with io.open(outfile, 'wb') as fh:
1370:                     pass
1371:                 mode = os.stat(outfile).st_mode
1372:                 shutil.move(tmpfile, outfile)
1373:                 os.chmod(outfile, mode)
1374:         finally:
1375:             if os.path.isfile(tmpfile):
1376:                 os.unlink(tmpfile)
1377: 
1378: 
1379: def convert_psfrags(tmpfile, psfrags, font_preamble, custom_preamble,
1380:                     paperWidth, paperHeight, orientation):
1381:     '''
1382:     When we want to use the LaTeX backend with postscript, we write PSFrag tags
1383:     to a temporary postscript file, each one marking a position for LaTeX to
1384:     render some text. convert_psfrags generates a LaTeX document containing the
1385:     commands to convert those tags to text. LaTeX/dvips produces the postscript
1386:     file that includes the actual text.
1387:     '''
1388:     tmpdir = os.path.split(tmpfile)[0]
1389:     epsfile = tmpfile+'.eps'
1390:     shutil.move(tmpfile, epsfile)
1391:     latexfile = tmpfile+'.tex'
1392:     dvifile = tmpfile+'.dvi'
1393:     psfile = tmpfile+'.ps'
1394: 
1395:     if orientation == 'landscape':
1396:         angle = 90
1397:     else:
1398:         angle = 0
1399: 
1400:     if rcParams['text.latex.unicode']:
1401:         unicode_preamble = '''\\usepackage{ucs}
1402: \\usepackage[utf8x]{inputenc}'''
1403:     else:
1404:         unicode_preamble = ''
1405: 
1406:     s = '''\\documentclass{article}
1407: %s
1408: %s
1409: %s
1410: \\usepackage[dvips, papersize={%sin,%sin}, body={%sin,%sin}, margin={0in,0in}]{geometry}
1411: \\usepackage{psfrag}
1412: \\usepackage[dvips]{graphicx}
1413: \\usepackage{color}
1414: \\pagestyle{empty}
1415: \\begin{document}
1416: \\begin{figure}
1417: \\centering
1418: \\leavevmode
1419: %s
1420: \\includegraphics*[angle=%s]{%s}
1421: \\end{figure}
1422: \\end{document}
1423: '''% (font_preamble, unicode_preamble, custom_preamble, paperWidth, paperHeight,
1424:       paperWidth, paperHeight,
1425:       '\n'.join(psfrags), angle, os.path.split(epsfile)[-1])
1426: 
1427:     with io.open(latexfile, 'wb') as latexh:
1428:         if rcParams['text.latex.unicode']:
1429:             latexh.write(s.encode('utf8'))
1430:         else:
1431:             try:
1432:                 latexh.write(s.encode('ascii'))
1433:             except UnicodeEncodeError:
1434:                 verbose.report("You are using unicode and latex, but have "
1435:                                "not enabled the matplotlib 'text.latex.unicode' "
1436:                                "rcParam.", 'helpful')
1437:                 raise
1438: 
1439:     # Replace \\ for / so latex does not think there is a function call
1440:     latexfile = latexfile.replace("\\", "/")
1441:     # Replace ~ so Latex does not think it is line break
1442:     latexfile = latexfile.replace("~", "\\string~")
1443:     command = [str("latex"), "-interaction=nonstopmode",
1444:                '"%s"' % latexfile]
1445:     verbose.report(command, 'debug')
1446:     try:
1447:         report = subprocess.check_output(command, cwd=tmpdir,
1448:                                          stderr=subprocess.STDOUT)
1449:     except subprocess.CalledProcessError as exc:
1450:         raise RuntimeError(
1451:             ('LaTeX was not able to process the following '
1452:              'file:\n%s\n\n'
1453:              'Here is the full report generated by LaTeX:\n%s '
1454:              '\n\n' % (latexfile,
1455:                        exc.output.decode("utf-8"))))
1456:     verbose.report(report, 'debug')
1457: 
1458:     command = [str('dvips'), '-q', '-R0', '-o', os.path.basename(psfile),
1459:                os.path.basename(dvifile)]
1460:     verbose.report(command, 'debug')
1461:     try:
1462:         report = subprocess.check_output(command, cwd=tmpdir,
1463:                                          stderr=subprocess.STDOUT)
1464:     except subprocess.CalledProcessError as exc:
1465:         raise RuntimeError(
1466:             ('dvips was not able to process the following '
1467:              'file:\n%s\n\n'
1468:              'Here is the full report generated by dvips:\n%s '
1469:              '\n\n' % (dvifile,
1470:                        exc.output.decode("utf-8"))))
1471:     verbose.report(report, 'debug')
1472:     os.remove(epsfile)
1473:     shutil.move(psfile, tmpfile)
1474: 
1475:     # check if the dvips created a ps in landscape paper.  Somehow,
1476:     # above latex+dvips results in a ps file in a landscape mode for a
1477:     # certain figure sizes (e.g., 8.3in,5.8in which is a5). And the
1478:     # bounding box of the final output got messed up. We check see if
1479:     # the generated ps file is in landscape and return this
1480:     # information. The return value is used in pstoeps step to recover
1481:     # the correct bounding box. 2010-06-05 JJL
1482:     with io.open(tmpfile) as fh:
1483:         if "Landscape" in fh.read(1000):
1484:             psfrag_rotated = True
1485:         else:
1486:             psfrag_rotated = False
1487: 
1488:     if not debugPS:
1489:         for fname in glob.glob(tmpfile+'.*'):
1490:             os.remove(fname)
1491: 
1492:     return psfrag_rotated
1493: 
1494: def gs_distill(tmpfile, eps=False, ptype='letter', bbox=None, rotated=False):
1495:     '''
1496:     Use ghostscript's pswrite or epswrite device to distill a file.
1497:     This yields smaller files without illegal encapsulated postscript
1498:     operators. The output is low-level, converting text to outlines.
1499:     '''
1500: 
1501:     if eps:
1502:         paper_option = "-dEPSCrop"
1503:     else:
1504:         paper_option = "-sPAPERSIZE=%s" % ptype
1505: 
1506:     psfile = tmpfile + '.ps'
1507:     dpi = rcParams['ps.distiller.res']
1508: 
1509:     gs_exe = ps_backend_helper.gs_exe
1510:     if ps_backend_helper.supports_ps2write: # gs version >= 9
1511:         device_name = "ps2write"
1512:     else:
1513:         device_name = "pswrite"
1514: 
1515:     command = [str(gs_exe), "-dBATCH", "-dNOPAUSE", "-r%d" % dpi,
1516:                "-sDEVICE=%s" % device_name, paper_option,
1517:                "-sOutputFile=%s" % psfile, tmpfile]
1518:     verbose.report(command, 'debug')
1519:     try:
1520:         report = subprocess.check_output(command, stderr=subprocess.STDOUT)
1521:     except subprocess.CalledProcessError as exc:
1522:         raise RuntimeError(
1523:             ('ghostscript was not able to process your image.\n'
1524:              'Here is the full report generated by ghostscript:\n%s '
1525:              '\n\n' % exc.output.decode("utf-8")))
1526:     verbose.report(report, 'debug')
1527:     os.remove(tmpfile)
1528:     shutil.move(psfile, tmpfile)
1529: 
1530: 
1531:     # While it is best if above steps preserve the original bounding
1532:     # box, there seem to be cases when it is not. For those cases,
1533:     # the original bbox can be restored during the pstoeps step.
1534: 
1535:     if eps:
1536:         # For some versions of gs, above steps result in an ps file
1537:         # where the original bbox is no more correct. Do not adjust
1538:         # bbox for now.
1539:         if ps_backend_helper.supports_ps2write:
1540:             # fo gs version >= 9 w/ ps2write device
1541:             pstoeps(tmpfile, bbox, rotated=rotated)
1542:         else:
1543:             pstoeps(tmpfile)
1544: 
1545: 
1546: def xpdf_distill(tmpfile, eps=False, ptype='letter', bbox=None, rotated=False):
1547:     '''
1548:     Use ghostscript's ps2pdf and xpdf's/poppler's pdftops to distill a file.
1549:     This yields smaller files without illegal encapsulated postscript
1550:     operators. This distiller is preferred, generating high-level postscript
1551:     output that treats text as text.
1552:     '''
1553:     pdffile = tmpfile + '.pdf'
1554:     psfile = tmpfile + '.ps'
1555: 
1556:     if eps:
1557:         paper_option = "-dEPSCrop"
1558:     else:
1559:         if sys.platform == "win32":
1560:             paper_option = "-sPAPERSIZE#%s" % ptype
1561:         else:
1562:             paper_option = "-sPAPERSIZE=%s" % ptype
1563: 
1564:     if sys.platform == "win32":
1565:         command = [str("ps2pdf"), "-dAutoFilterColorImages#false",
1566:                    "-dAutoFilterGrayImages#false",
1567:                    "-sGrayImageFilter#FlateEncode",
1568:                    "-sColorImageFilter#FlateEncode", paper_option, tmpfile,
1569:                    pdffile]
1570:     else:
1571:         command = [str("ps2pdf"), "-dAutoFilterColorImages=false",
1572:                    "-dAutoFilterGrayImages=false",
1573:                    "-sGrayImageFilter=FlateEncode",
1574:                    "-sColorImageFilter=FlateEncode", paper_option, tmpfile,
1575:                    pdffile]
1576:     verbose.report(command, 'debug')
1577: 
1578:     try:
1579:         report = subprocess.check_output(command, stderr=subprocess.STDOUT)
1580:     except subprocess.CalledProcessError as exc:
1581:         raise RuntimeError(
1582:             ('ps2pdf was not able to process your image.\n'
1583:              'Here is the full report generated by ps2pdf:\n%s '
1584:              '\n\n' % exc.output.decode("utf-8")))
1585:     verbose.report(report, 'debug')
1586: 
1587:     command = [str("pdftops"), "-paper", "match", "-level2", pdffile, psfile]
1588:     verbose.report(command, 'debug')
1589:     try:
1590:         report = subprocess.check_output(command, stderr=subprocess.STDOUT)
1591:     except subprocess.CalledProcessError as exc:
1592:         raise RuntimeError(
1593:             ('pdftops was not able to process your image.\n'
1594:              'Here is the full report generated by pdftops:\n%s '
1595:              '\n\n' % exc.output.decode("utf-8")))
1596:     verbose.report(report, 'debug')
1597:     os.remove(tmpfile)
1598:     shutil.move(psfile, tmpfile)
1599: 
1600:     if eps:
1601:         pstoeps(tmpfile)
1602: 
1603:     for fname in glob.glob(tmpfile+'.*'):
1604:         os.remove(fname)
1605: 
1606: 
1607: def get_bbox_header(lbrt, rotated=False):
1608:     '''
1609:     return a postscript header stringfor the given bbox lbrt=(l, b, r, t).
1610:     Optionally, return rotate command.
1611:     '''
1612: 
1613:     l, b, r, t = lbrt
1614:     if rotated:
1615:         rotate = "%.2f %.2f  translate\n90 rotate" % (l+r, 0)
1616:     else:
1617:         rotate = ""
1618:     bbox_info = '%%%%BoundingBox: %d %d %d %d' % (l, b, np.ceil(r), np.ceil(t))
1619:     hires_bbox_info = '%%%%HiResBoundingBox: %.6f %.6f %.6f %.6f' % (l, b, r, t)
1620: 
1621:     return '\n'.join([bbox_info, hires_bbox_info]), rotate
1622: 
1623: 
1624: # get_bbox is deprecated. I don't see any reason to use ghostscript to
1625: # find the bounding box, as the required bounding box is alread known.
1626: def get_bbox(tmpfile, bbox):
1627:     '''
1628:     Use ghostscript's bbox device to find the center of the bounding box.
1629:     Return an appropriately sized bbox centered around that point. A bit of a
1630:     hack.
1631:     '''
1632: 
1633:     gs_exe = ps_backend_helper.gs_exe
1634:     command = [gs_exe, "-dBATCH", "-dNOPAUSE", "-sDEVICE=bbox" "%s" % tmpfile]
1635:     verbose.report(command, 'debug')
1636:     p = subprocess.Popen(command, stdin=subprocess.PIPE,
1637:                          stdout=subprocess.PIPE, stderr=subprocess.PIPE,
1638:                          close_fds=True)
1639:     (stdout, stderr) = (p.stdout, p.stderr)
1640:     verbose.report(stdout.read(), 'debug-annoying')
1641:     bbox_info = stderr.read()
1642:     verbose.report(bbox_info, 'helpful')
1643:     bbox_found = re.search('%%HiResBoundingBox: .*', bbox_info)
1644:     if bbox_found:
1645:         bbox_info = bbox_found.group()
1646:     else:
1647:         raise RuntimeError('Ghostscript was not able to extract a bounding box.\
1648: Here is the Ghostscript output:\n\n%s' % bbox_info)
1649:     l, b, r, t = [float(i) for i in bbox_info.split()[-4:]]
1650: 
1651:     # this is a hack to deal with the fact that ghostscript does not return the
1652:     # intended bbox, but a tight bbox. For now, we just center the ink in the
1653:     # intended bbox. This is not ideal, users may intend the ink to not be
1654:     # centered.
1655:     if bbox is None:
1656:         l, b, r, t = (l-1, b-1, r+1, t+1)
1657:     else:
1658:         x = (l+r)/2
1659:         y = (b+t)/2
1660:         dx = (bbox[2]-bbox[0])/2
1661:         dy = (bbox[3]-bbox[1])/2
1662:         l,b,r,t = (x-dx, y-dy, x+dx, y+dy)
1663: 
1664:     bbox_info = '%%%%BoundingBox: %d %d %d %d' % (l, b, np.ceil(r), np.ceil(t))
1665:     hires_bbox_info = '%%%%HiResBoundingBox: %.6f %.6f %.6f %.6f' % (l, b, r, t)
1666: 
1667:     return '\n'.join([bbox_info, hires_bbox_info])
1668: 
1669: 
1670: def pstoeps(tmpfile, bbox=None, rotated=False):
1671:     '''
1672:     Convert the postscript to encapsulated postscript.  The bbox of
1673:     the eps file will be replaced with the given *bbox* argument. If
1674:     None, original bbox will be used.
1675:     '''
1676: 
1677:     # if rotated==True, the output eps file need to be rotated
1678:     if bbox:
1679:         bbox_info, rotate = get_bbox_header(bbox, rotated=rotated)
1680:     else:
1681:         bbox_info, rotate = None, None
1682: 
1683:     epsfile = tmpfile + '.eps'
1684:     with io.open(epsfile, 'wb') as epsh, io.open(tmpfile, 'rb') as tmph:
1685:         write = epsh.write
1686:         # Modify the header:
1687:         for line in tmph:
1688:             if line.startswith(b'%!PS'):
1689:                 write(b"%!PS-Adobe-3.0 EPSF-3.0\n")
1690:                 if bbox:
1691:                     write(bbox_info.encode('ascii') + b'\n')
1692:             elif line.startswith(b'%%EndComments'):
1693:                 write(line)
1694:                 write(b'%%BeginProlog\n'
1695:                       b'save\n'
1696:                       b'countdictstack\n'
1697:                       b'mark\n'
1698:                       b'newpath\n'
1699:                       b'/showpage {} def\n'
1700:                       b'/setpagedevice {pop} def\n'
1701:                       b'%%EndProlog\n'
1702:                       b'%%Page 1 1\n')
1703:                 if rotate:
1704:                     write(rotate.encode('ascii') + b'\n')
1705:                 break
1706:             elif bbox and line.startswith((b'%%Bound', b'%%HiResBound',
1707:                                            b'%%DocumentMedia', b'%%Pages')):
1708:                 pass
1709:             else:
1710:                 write(line)
1711:         # Now rewrite the rest of the file, and modify the trailer.
1712:         # This is done in a second loop such that the header of the embedded
1713:         # eps file is not modified.
1714:         for line in tmph:
1715:             if line.startswith(b'%%EOF'):
1716:                 write(b'cleartomark\n'
1717:                       b'countdictstack\n'
1718:                       b'exch sub { end } repeat\n'
1719:                       b'restore\n'
1720:                       b'showpage\n'
1721:                       b'%%EOF\n')
1722:             elif line.startswith(b'%%PageBoundingBox'):
1723:                 pass
1724:             else:
1725:                 write(line)
1726: 
1727:     os.remove(tmpfile)
1728:     shutil.move(epsfile, tmpfile)
1729: 
1730: 
1731: class FigureManagerPS(FigureManagerBase):
1732:     pass
1733: 
1734: 
1735: # The following Python dictionary psDefs contains the entries for the
1736: # PostScript dictionary mpldict.  This dictionary implements most of
1737: # the matplotlib primitives and some abbreviations.
1738: #
1739: # References:
1740: # http://www.adobe.com/products/postscript/pdfs/PLRM.pdf
1741: # http://www.mactech.com/articles/mactech/Vol.09/09.04/PostscriptTutorial/
1742: # http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
1743: #
1744: 
1745: # The usage comments use the notation of the operator summary
1746: # in the PostScript Language reference manual.
1747: psDefs = [
1748:     # x y  *m*  -
1749:     "/m { moveto } bind def",
1750:     # x y  *l*  -
1751:     "/l { lineto } bind def",
1752:     # x y  *r*  -
1753:     "/r { rlineto } bind def",
1754:     # x1 y1 x2 y2 x y *c*  -
1755:     "/c { curveto } bind def",
1756:     # *closepath*  -
1757:     "/cl { closepath } bind def",
1758:     # w h x y  *box*  -
1759:     '''/box {
1760:       m
1761:       1 index 0 r
1762:       0 exch r
1763:       neg 0 r
1764:       cl
1765:     } bind def''',
1766:     # w h x y  *clipbox*  -
1767:     '''/clipbox {
1768:       box
1769:       clip
1770:       newpath
1771:     } bind def''',
1772: ]
1773: 
1774: 
1775: @_Backend.export
1776: class _BackendPS(_Backend):
1777:     FigureCanvas = FigureCanvasPS
1778:     FigureManager = FigureManagerPS
1779: 

"""

# Import the stypy library necessary elements
from stypy.type_inference_programs.type_inference_programs_imports import *

# Create the module type store
module_type_store = Context(None, __file__)

# ################# Begin of the type inference program ##################

unicode_243825 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3, (-1)), 'unicode', u'\nA PostScript backend, which can produce both PostScript .ps and .eps\n')
stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 8, 0))

# 'import six' statement (line 8)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_243826 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 8, 0), 'six')

if (type(import_243826) is not StypyTypeError):

    if (import_243826 != 'pyd_module'):
        __import__(import_243826)
        sys_modules_243827 = sys.modules[import_243826]
        import_module(stypy.reporting.localization.Localization(__file__, 8, 0), 'six', sys_modules_243827.module_type_store, module_type_store)
    else:
        import six

        import_module(stypy.reporting.localization.Localization(__file__, 8, 0), 'six', six, module_type_store)

else:
    # Assigning a type to the variable 'six' (line 8)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 8, 0), 'six', import_243826)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 9, 0))

# 'from six.moves import StringIO' statement (line 9)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_243828 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 9, 0), 'six.moves')

if (type(import_243828) is not StypyTypeError):

    if (import_243828 != 'pyd_module'):
        __import__(import_243828)
        sys_modules_243829 = sys.modules[import_243828]
        import_from_module(stypy.reporting.localization.Localization(__file__, 9, 0), 'six.moves', sys_modules_243829.module_type_store, module_type_store, ['StringIO'])
        nest_module(stypy.reporting.localization.Localization(__file__, 9, 0), __file__, sys_modules_243829, sys_modules_243829.module_type_store, module_type_store)
    else:
        from six.moves import StringIO

        import_from_module(stypy.reporting.localization.Localization(__file__, 9, 0), 'six.moves', None, module_type_store, ['StringIO'], [StringIO])

else:
    # Assigning a type to the variable 'six.moves' (line 9)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 9, 0), 'six.moves', import_243828)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 11, 0))

# Multiple import statement. import glob (1/6) (line 11)
import glob

import_module(stypy.reporting.localization.Localization(__file__, 11, 0), 'glob', glob, module_type_store)
# Multiple import statement. import os (2/6) (line 11)
import os

import_module(stypy.reporting.localization.Localization(__file__, 11, 0), 'os', os, module_type_store)
# Multiple import statement. import shutil (3/6) (line 11)
import shutil

import_module(stypy.reporting.localization.Localization(__file__, 11, 0), 'shutil', shutil, module_type_store)
# Multiple import statement. import sys (4/6) (line 11)
import sys

import_module(stypy.reporting.localization.Localization(__file__, 11, 0), 'sys', sys, module_type_store)
# Multiple import statement. import time (5/6) (line 11)
import time

import_module(stypy.reporting.localization.Localization(__file__, 11, 0), 'time', time, module_type_store)
# Multiple import statement. import datetime (6/6) (line 11)
import datetime

import_module(stypy.reporting.localization.Localization(__file__, 11, 0), 'datetime', datetime, module_type_store)

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 12, 0))

# 'import io' statement (line 12)
import io

import_module(stypy.reporting.localization.Localization(__file__, 12, 0), 'io', io, module_type_store)

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 14, 0))

# 'from tempfile import mkstemp' statement (line 14)
try:
    from tempfile import mkstemp

except:
    mkstemp = UndefinedType
import_from_module(stypy.reporting.localization.Localization(__file__, 14, 0), 'tempfile', None, module_type_store, ['mkstemp'], [mkstemp])

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 15, 0))

# 'from matplotlib import verbose, __version__, rcParams, checkdep_ghostscript' statement (line 15)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_243830 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 15, 0), 'matplotlib')

if (type(import_243830) is not StypyTypeError):

    if (import_243830 != 'pyd_module'):
        __import__(import_243830)
        sys_modules_243831 = sys.modules[import_243830]
        import_from_module(stypy.reporting.localization.Localization(__file__, 15, 0), 'matplotlib', sys_modules_243831.module_type_store, module_type_store, ['verbose', '__version__', 'rcParams', 'checkdep_ghostscript'])
        nest_module(stypy.reporting.localization.Localization(__file__, 15, 0), __file__, sys_modules_243831, sys_modules_243831.module_type_store, module_type_store)
    else:
        from matplotlib import verbose, __version__, rcParams, checkdep_ghostscript

        import_from_module(stypy.reporting.localization.Localization(__file__, 15, 0), 'matplotlib', None, module_type_store, ['verbose', '__version__', 'rcParams', 'checkdep_ghostscript'], [verbose, __version__, rcParams, checkdep_ghostscript])

else:
    # Assigning a type to the variable 'matplotlib' (line 15)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 15, 0), 'matplotlib', import_243830)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 16, 0))

# 'from matplotlib.afm import AFM' statement (line 16)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_243832 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 16, 0), 'matplotlib.afm')

if (type(import_243832) is not StypyTypeError):

    if (import_243832 != 'pyd_module'):
        __import__(import_243832)
        sys_modules_243833 = sys.modules[import_243832]
        import_from_module(stypy.reporting.localization.Localization(__file__, 16, 0), 'matplotlib.afm', sys_modules_243833.module_type_store, module_type_store, ['AFM'])
        nest_module(stypy.reporting.localization.Localization(__file__, 16, 0), __file__, sys_modules_243833, sys_modules_243833.module_type_store, module_type_store)
    else:
        from matplotlib.afm import AFM

        import_from_module(stypy.reporting.localization.Localization(__file__, 16, 0), 'matplotlib.afm', None, module_type_store, ['AFM'], [AFM])

else:
    # Assigning a type to the variable 'matplotlib.afm' (line 16)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 16, 0), 'matplotlib.afm', import_243832)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 17, 0))

# 'from matplotlib.backend_bases import _Backend, FigureCanvasBase, FigureManagerBase, GraphicsContextBase, RendererBase' statement (line 17)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_243834 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 17, 0), 'matplotlib.backend_bases')

if (type(import_243834) is not StypyTypeError):

    if (import_243834 != 'pyd_module'):
        __import__(import_243834)
        sys_modules_243835 = sys.modules[import_243834]
        import_from_module(stypy.reporting.localization.Localization(__file__, 17, 0), 'matplotlib.backend_bases', sys_modules_243835.module_type_store, module_type_store, ['_Backend', 'FigureCanvasBase', 'FigureManagerBase', 'GraphicsContextBase', 'RendererBase'])
        nest_module(stypy.reporting.localization.Localization(__file__, 17, 0), __file__, sys_modules_243835, sys_modules_243835.module_type_store, module_type_store)
    else:
        from matplotlib.backend_bases import _Backend, FigureCanvasBase, FigureManagerBase, GraphicsContextBase, RendererBase

        import_from_module(stypy.reporting.localization.Localization(__file__, 17, 0), 'matplotlib.backend_bases', None, module_type_store, ['_Backend', 'FigureCanvasBase', 'FigureManagerBase', 'GraphicsContextBase', 'RendererBase'], [_Backend, FigureCanvasBase, FigureManagerBase, GraphicsContextBase, RendererBase])

else:
    # Assigning a type to the variable 'matplotlib.backend_bases' (line 17)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 17, 0), 'matplotlib.backend_bases', import_243834)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 21, 0))

# 'from matplotlib.cbook import get_realpath_and_stat, is_writable_file_like, maxdict, file_requires_unicode' statement (line 21)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_243836 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 21, 0), 'matplotlib.cbook')

if (type(import_243836) is not StypyTypeError):

    if (import_243836 != 'pyd_module'):
        __import__(import_243836)
        sys_modules_243837 = sys.modules[import_243836]
        import_from_module(stypy.reporting.localization.Localization(__file__, 21, 0), 'matplotlib.cbook', sys_modules_243837.module_type_store, module_type_store, ['get_realpath_and_stat', 'is_writable_file_like', 'maxdict', 'file_requires_unicode'])
        nest_module(stypy.reporting.localization.Localization(__file__, 21, 0), __file__, sys_modules_243837, sys_modules_243837.module_type_store, module_type_store)
    else:
        from matplotlib.cbook import get_realpath_and_stat, is_writable_file_like, maxdict, file_requires_unicode

        import_from_module(stypy.reporting.localization.Localization(__file__, 21, 0), 'matplotlib.cbook', None, module_type_store, ['get_realpath_and_stat', 'is_writable_file_like', 'maxdict', 'file_requires_unicode'], [get_realpath_and_stat, is_writable_file_like, maxdict, file_requires_unicode])

else:
    # Assigning a type to the variable 'matplotlib.cbook' (line 21)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 21, 0), 'matplotlib.cbook', import_243836)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 23, 0))

# 'from matplotlib.compat.subprocess import subprocess' statement (line 23)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_243838 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 23, 0), 'matplotlib.compat.subprocess')

if (type(import_243838) is not StypyTypeError):

    if (import_243838 != 'pyd_module'):
        __import__(import_243838)
        sys_modules_243839 = sys.modules[import_243838]
        import_from_module(stypy.reporting.localization.Localization(__file__, 23, 0), 'matplotlib.compat.subprocess', sys_modules_243839.module_type_store, module_type_store, ['subprocess'])
        nest_module(stypy.reporting.localization.Localization(__file__, 23, 0), __file__, sys_modules_243839, sys_modules_243839.module_type_store, module_type_store)
    else:
        from matplotlib.compat.subprocess import subprocess

        import_from_module(stypy.reporting.localization.Localization(__file__, 23, 0), 'matplotlib.compat.subprocess', None, module_type_store, ['subprocess'], [subprocess])

else:
    # Assigning a type to the variable 'matplotlib.compat.subprocess' (line 23)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 23, 0), 'matplotlib.compat.subprocess', import_243838)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 24, 0))

# 'from matplotlib.figure import Figure' statement (line 24)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_243840 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 24, 0), 'matplotlib.figure')

if (type(import_243840) is not StypyTypeError):

    if (import_243840 != 'pyd_module'):
        __import__(import_243840)
        sys_modules_243841 = sys.modules[import_243840]
        import_from_module(stypy.reporting.localization.Localization(__file__, 24, 0), 'matplotlib.figure', sys_modules_243841.module_type_store, module_type_store, ['Figure'])
        nest_module(stypy.reporting.localization.Localization(__file__, 24, 0), __file__, sys_modules_243841, sys_modules_243841.module_type_store, module_type_store)
    else:
        from matplotlib.figure import Figure

        import_from_module(stypy.reporting.localization.Localization(__file__, 24, 0), 'matplotlib.figure', None, module_type_store, ['Figure'], [Figure])

else:
    # Assigning a type to the variable 'matplotlib.figure' (line 24)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 24, 0), 'matplotlib.figure', import_243840)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 26, 0))

# 'from matplotlib.font_manager import findfont, is_opentype_cff_font, get_font' statement (line 26)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_243842 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 26, 0), 'matplotlib.font_manager')

if (type(import_243842) is not StypyTypeError):

    if (import_243842 != 'pyd_module'):
        __import__(import_243842)
        sys_modules_243843 = sys.modules[import_243842]
        import_from_module(stypy.reporting.localization.Localization(__file__, 26, 0), 'matplotlib.font_manager', sys_modules_243843.module_type_store, module_type_store, ['findfont', 'is_opentype_cff_font', 'get_font'])
        nest_module(stypy.reporting.localization.Localization(__file__, 26, 0), __file__, sys_modules_243843, sys_modules_243843.module_type_store, module_type_store)
    else:
        from matplotlib.font_manager import findfont, is_opentype_cff_font, get_font

        import_from_module(stypy.reporting.localization.Localization(__file__, 26, 0), 'matplotlib.font_manager', None, module_type_store, ['findfont', 'is_opentype_cff_font', 'get_font'], [findfont, is_opentype_cff_font, get_font])

else:
    # Assigning a type to the variable 'matplotlib.font_manager' (line 26)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 26, 0), 'matplotlib.font_manager', import_243842)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 27, 0))

# 'from matplotlib.ft2font import KERNING_DEFAULT, LOAD_NO_HINTING' statement (line 27)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_243844 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 27, 0), 'matplotlib.ft2font')

if (type(import_243844) is not StypyTypeError):

    if (import_243844 != 'pyd_module'):
        __import__(import_243844)
        sys_modules_243845 = sys.modules[import_243844]
        import_from_module(stypy.reporting.localization.Localization(__file__, 27, 0), 'matplotlib.ft2font', sys_modules_243845.module_type_store, module_type_store, ['KERNING_DEFAULT', 'LOAD_NO_HINTING'])
        nest_module(stypy.reporting.localization.Localization(__file__, 27, 0), __file__, sys_modules_243845, sys_modules_243845.module_type_store, module_type_store)
    else:
        from matplotlib.ft2font import KERNING_DEFAULT, LOAD_NO_HINTING

        import_from_module(stypy.reporting.localization.Localization(__file__, 27, 0), 'matplotlib.ft2font', None, module_type_store, ['KERNING_DEFAULT', 'LOAD_NO_HINTING'], [KERNING_DEFAULT, LOAD_NO_HINTING])

else:
    # Assigning a type to the variable 'matplotlib.ft2font' (line 27)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 27, 0), 'matplotlib.ft2font', import_243844)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 28, 0))

# 'from matplotlib.ttconv import convert_ttf_to_ps' statement (line 28)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_243846 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 28, 0), 'matplotlib.ttconv')

if (type(import_243846) is not StypyTypeError):

    if (import_243846 != 'pyd_module'):
        __import__(import_243846)
        sys_modules_243847 = sys.modules[import_243846]
        import_from_module(stypy.reporting.localization.Localization(__file__, 28, 0), 'matplotlib.ttconv', sys_modules_243847.module_type_store, module_type_store, ['convert_ttf_to_ps'])
        nest_module(stypy.reporting.localization.Localization(__file__, 28, 0), __file__, sys_modules_243847, sys_modules_243847.module_type_store, module_type_store)
    else:
        from matplotlib.ttconv import convert_ttf_to_ps

        import_from_module(stypy.reporting.localization.Localization(__file__, 28, 0), 'matplotlib.ttconv', None, module_type_store, ['convert_ttf_to_ps'], [convert_ttf_to_ps])

else:
    # Assigning a type to the variable 'matplotlib.ttconv' (line 28)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 28, 0), 'matplotlib.ttconv', import_243846)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 29, 0))

# 'from matplotlib.mathtext import MathTextParser' statement (line 29)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_243848 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 29, 0), 'matplotlib.mathtext')

if (type(import_243848) is not StypyTypeError):

    if (import_243848 != 'pyd_module'):
        __import__(import_243848)
        sys_modules_243849 = sys.modules[import_243848]
        import_from_module(stypy.reporting.localization.Localization(__file__, 29, 0), 'matplotlib.mathtext', sys_modules_243849.module_type_store, module_type_store, ['MathTextParser'])
        nest_module(stypy.reporting.localization.Localization(__file__, 29, 0), __file__, sys_modules_243849, sys_modules_243849.module_type_store, module_type_store)
    else:
        from matplotlib.mathtext import MathTextParser

        import_from_module(stypy.reporting.localization.Localization(__file__, 29, 0), 'matplotlib.mathtext', None, module_type_store, ['MathTextParser'], [MathTextParser])

else:
    # Assigning a type to the variable 'matplotlib.mathtext' (line 29)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 29, 0), 'matplotlib.mathtext', import_243848)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 30, 0))

# 'from matplotlib._mathtext_data import uni2type1' statement (line 30)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_243850 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 30, 0), 'matplotlib._mathtext_data')

if (type(import_243850) is not StypyTypeError):

    if (import_243850 != 'pyd_module'):
        __import__(import_243850)
        sys_modules_243851 = sys.modules[import_243850]
        import_from_module(stypy.reporting.localization.Localization(__file__, 30, 0), 'matplotlib._mathtext_data', sys_modules_243851.module_type_store, module_type_store, ['uni2type1'])
        nest_module(stypy.reporting.localization.Localization(__file__, 30, 0), __file__, sys_modules_243851, sys_modules_243851.module_type_store, module_type_store)
    else:
        from matplotlib._mathtext_data import uni2type1

        import_from_module(stypy.reporting.localization.Localization(__file__, 30, 0), 'matplotlib._mathtext_data', None, module_type_store, ['uni2type1'], [uni2type1])

else:
    # Assigning a type to the variable 'matplotlib._mathtext_data' (line 30)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 30, 0), 'matplotlib._mathtext_data', import_243850)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 31, 0))

# 'from matplotlib.path import Path' statement (line 31)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_243852 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 31, 0), 'matplotlib.path')

if (type(import_243852) is not StypyTypeError):

    if (import_243852 != 'pyd_module'):
        __import__(import_243852)
        sys_modules_243853 = sys.modules[import_243852]
        import_from_module(stypy.reporting.localization.Localization(__file__, 31, 0), 'matplotlib.path', sys_modules_243853.module_type_store, module_type_store, ['Path'])
        nest_module(stypy.reporting.localization.Localization(__file__, 31, 0), __file__, sys_modules_243853, sys_modules_243853.module_type_store, module_type_store)
    else:
        from matplotlib.path import Path

        import_from_module(stypy.reporting.localization.Localization(__file__, 31, 0), 'matplotlib.path', None, module_type_store, ['Path'], [Path])

else:
    # Assigning a type to the variable 'matplotlib.path' (line 31)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 31, 0), 'matplotlib.path', import_243852)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 32, 0))

# 'from matplotlib import _path' statement (line 32)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_243854 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 32, 0), 'matplotlib')

if (type(import_243854) is not StypyTypeError):

    if (import_243854 != 'pyd_module'):
        __import__(import_243854)
        sys_modules_243855 = sys.modules[import_243854]
        import_from_module(stypy.reporting.localization.Localization(__file__, 32, 0), 'matplotlib', sys_modules_243855.module_type_store, module_type_store, ['_path'])
        nest_module(stypy.reporting.localization.Localization(__file__, 32, 0), __file__, sys_modules_243855, sys_modules_243855.module_type_store, module_type_store)
    else:
        from matplotlib import _path

        import_from_module(stypy.reporting.localization.Localization(__file__, 32, 0), 'matplotlib', None, module_type_store, ['_path'], [_path])

else:
    # Assigning a type to the variable 'matplotlib' (line 32)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 32, 0), 'matplotlib', import_243854)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 33, 0))

# 'from matplotlib.transforms import Affine2D' statement (line 33)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_243856 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 33, 0), 'matplotlib.transforms')

if (type(import_243856) is not StypyTypeError):

    if (import_243856 != 'pyd_module'):
        __import__(import_243856)
        sys_modules_243857 = sys.modules[import_243856]
        import_from_module(stypy.reporting.localization.Localization(__file__, 33, 0), 'matplotlib.transforms', sys_modules_243857.module_type_store, module_type_store, ['Affine2D'])
        nest_module(stypy.reporting.localization.Localization(__file__, 33, 0), __file__, sys_modules_243857, sys_modules_243857.module_type_store, module_type_store)
    else:
        from matplotlib.transforms import Affine2D

        import_from_module(stypy.reporting.localization.Localization(__file__, 33, 0), 'matplotlib.transforms', None, module_type_store, ['Affine2D'], [Affine2D])

else:
    # Assigning a type to the variable 'matplotlib.transforms' (line 33)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 33, 0), 'matplotlib.transforms', import_243856)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 35, 0))

# 'from matplotlib.backends.backend_mixed import MixedModeRenderer' statement (line 35)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_243858 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 35, 0), 'matplotlib.backends.backend_mixed')

if (type(import_243858) is not StypyTypeError):

    if (import_243858 != 'pyd_module'):
        __import__(import_243858)
        sys_modules_243859 = sys.modules[import_243858]
        import_from_module(stypy.reporting.localization.Localization(__file__, 35, 0), 'matplotlib.backends.backend_mixed', sys_modules_243859.module_type_store, module_type_store, ['MixedModeRenderer'])
        nest_module(stypy.reporting.localization.Localization(__file__, 35, 0), __file__, sys_modules_243859, sys_modules_243859.module_type_store, module_type_store)
    else:
        from matplotlib.backends.backend_mixed import MixedModeRenderer

        import_from_module(stypy.reporting.localization.Localization(__file__, 35, 0), 'matplotlib.backends.backend_mixed', None, module_type_store, ['MixedModeRenderer'], [MixedModeRenderer])

else:
    # Assigning a type to the variable 'matplotlib.backends.backend_mixed' (line 35)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 35, 0), 'matplotlib.backends.backend_mixed', import_243858)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 38, 0))

# 'import numpy' statement (line 38)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_243860 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 38, 0), 'numpy')

if (type(import_243860) is not StypyTypeError):

    if (import_243860 != 'pyd_module'):
        __import__(import_243860)
        sys_modules_243861 = sys.modules[import_243860]
        import_module(stypy.reporting.localization.Localization(__file__, 38, 0), 'np', sys_modules_243861.module_type_store, module_type_store)
    else:
        import numpy as np

        import_module(stypy.reporting.localization.Localization(__file__, 38, 0), 'np', numpy, module_type_store)

else:
    # Assigning a type to the variable 'numpy' (line 38)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 38, 0), 'numpy', import_243860)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 39, 0))

# 'import binascii' statement (line 39)
import binascii

import_module(stypy.reporting.localization.Localization(__file__, 39, 0), 'binascii', binascii, module_type_store)

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 40, 0))

# 'import re' statement (line 40)
import re

import_module(stypy.reporting.localization.Localization(__file__, 40, 0), 're', re, module_type_store)



# Call to startswith(...): (line 42)
# Processing the call arguments (line 42)
unicode_243865 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 42, 27), 'unicode', u'win')
# Processing the call keyword arguments (line 42)
kwargs_243866 = {}
# Getting the type of 'sys' (line 42)
sys_243862 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 42, 3), 'sys', False)
# Obtaining the member 'platform' of a type (line 42)
platform_243863 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 42, 3), sys_243862, 'platform')
# Obtaining the member 'startswith' of a type (line 42)
startswith_243864 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 42, 3), platform_243863, 'startswith')
# Calling startswith(args, kwargs) (line 42)
startswith_call_result_243867 = invoke(stypy.reporting.localization.Localization(__file__, 42, 3), startswith_243864, *[unicode_243865], **kwargs_243866)

# Testing the type of an if condition (line 42)
if_condition_243868 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 42, 0), startswith_call_result_243867)
# Assigning a type to the variable 'if_condition_243868' (line 42)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 42, 0), 'if_condition_243868', if_condition_243868)
# SSA begins for if statement (line 42)
module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')

# Assigning a Str to a Name (line 42):

# Assigning a Str to a Name (line 42):
unicode_243869 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 42, 47), 'unicode', u'&')
# Assigning a type to the variable 'cmd_split' (line 42)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 42, 35), 'cmd_split', unicode_243869)
# SSA branch for the else part of an if statement (line 42)
module_type_store.open_ssa_branch('else')

# Assigning a Str to a Name (line 43):

# Assigning a Str to a Name (line 43):
unicode_243870 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 43, 18), 'unicode', u';')
# Assigning a type to the variable 'cmd_split' (line 43)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 43, 6), 'cmd_split', unicode_243870)
# SSA join for if statement (line 42)
module_type_store = module_type_store.join_ssa_context()


# Assigning a Str to a Name (line 45):

# Assigning a Str to a Name (line 45):
unicode_243871 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 45, 18), 'unicode', u'Level II')
# Assigning a type to the variable 'backend_version' (line 45)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 45, 0), 'backend_version', unicode_243871)

# Assigning a Num to a Name (line 47):

# Assigning a Num to a Name (line 47):
int_243872 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 47, 10), 'int')
# Assigning a type to the variable 'debugPS' (line 47)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 47, 0), 'debugPS', int_243872)
# Declaration of the 'PsBackendHelper' class

class PsBackendHelper(object, ):

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 52, 4, False)
        # Assigning a type to the variable 'self' (line 53)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 53, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'PsBackendHelper.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Assigning a Dict to a Attribute (line 53):
        
        # Assigning a Dict to a Attribute (line 53):
        
        # Obtaining an instance of the builtin type 'dict' (line 53)
        dict_243873 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 53, 23), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 53)
        
        # Getting the type of 'self' (line 53)
        self_243874 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 53, 8), 'self')
        # Setting the type of the member '_cached' of a type (line 53)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 53, 8), self_243874, '_cached', dict_243873)
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def gs_exe(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'gs_exe'
        module_type_store = module_type_store.open_function_context('gs_exe', 55, 4, False)
        # Assigning a type to the variable 'self' (line 56)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 56, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        PsBackendHelper.gs_exe.__dict__.__setitem__('stypy_localization', localization)
        PsBackendHelper.gs_exe.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        PsBackendHelper.gs_exe.__dict__.__setitem__('stypy_type_store', module_type_store)
        PsBackendHelper.gs_exe.__dict__.__setitem__('stypy_function_name', 'PsBackendHelper.gs_exe')
        PsBackendHelper.gs_exe.__dict__.__setitem__('stypy_param_names_list', [])
        PsBackendHelper.gs_exe.__dict__.__setitem__('stypy_varargs_param_name', None)
        PsBackendHelper.gs_exe.__dict__.__setitem__('stypy_kwargs_param_name', None)
        PsBackendHelper.gs_exe.__dict__.__setitem__('stypy_call_defaults', defaults)
        PsBackendHelper.gs_exe.__dict__.__setitem__('stypy_call_varargs', varargs)
        PsBackendHelper.gs_exe.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        PsBackendHelper.gs_exe.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'PsBackendHelper.gs_exe', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'gs_exe', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'gs_exe(...)' code ##################

        unicode_243875 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 59, (-1)), 'unicode', u'\n        excutable name of ghostscript.\n        ')
        
        
        # SSA begins for try-except statement (line 60)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
        
        # Obtaining the type of the subscript
        unicode_243876 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 61, 32), 'unicode', u'gs_exe')
        # Getting the type of 'self' (line 61)
        self_243877 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 61, 19), 'self')
        # Obtaining the member '_cached' of a type (line 61)
        _cached_243878 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 61, 19), self_243877, '_cached')
        # Obtaining the member '__getitem__' of a type (line 61)
        getitem___243879 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 61, 19), _cached_243878, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 61)
        subscript_call_result_243880 = invoke(stypy.reporting.localization.Localization(__file__, 61, 19), getitem___243879, unicode_243876)
        
        # Assigning a type to the variable 'stypy_return_type' (line 61)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 61, 12), 'stypy_return_type', subscript_call_result_243880)
        # SSA branch for the except part of a try statement (line 60)
        # SSA branch for the except 'KeyError' branch of a try statement (line 60)
        module_type_store.open_ssa_branch('except')
        pass
        # SSA join for try-except statement (line 60)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Tuple (line 65):
        
        # Assigning a Call to a Name:
        
        # Call to checkdep_ghostscript(...): (line 65)
        # Processing the call keyword arguments (line 65)
        kwargs_243882 = {}
        # Getting the type of 'checkdep_ghostscript' (line 65)
        checkdep_ghostscript_243881 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 65, 29), 'checkdep_ghostscript', False)
        # Calling checkdep_ghostscript(args, kwargs) (line 65)
        checkdep_ghostscript_call_result_243883 = invoke(stypy.reporting.localization.Localization(__file__, 65, 29), checkdep_ghostscript_243881, *[], **kwargs_243882)
        
        # Assigning a type to the variable 'call_assignment_243682' (line 65)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 65, 8), 'call_assignment_243682', checkdep_ghostscript_call_result_243883)
        
        # Assigning a Call to a Name (line 65):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_243886 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 65, 8), 'int')
        # Processing the call keyword arguments
        kwargs_243887 = {}
        # Getting the type of 'call_assignment_243682' (line 65)
        call_assignment_243682_243884 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 65, 8), 'call_assignment_243682', False)
        # Obtaining the member '__getitem__' of a type (line 65)
        getitem___243885 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 65, 8), call_assignment_243682_243884, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_243888 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___243885, *[int_243886], **kwargs_243887)
        
        # Assigning a type to the variable 'call_assignment_243683' (line 65)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 65, 8), 'call_assignment_243683', getitem___call_result_243888)
        
        # Assigning a Name to a Name (line 65):
        # Getting the type of 'call_assignment_243683' (line 65)
        call_assignment_243683_243889 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 65, 8), 'call_assignment_243683')
        # Assigning a type to the variable 'gs_exe' (line 65)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 65, 8), 'gs_exe', call_assignment_243683_243889)
        
        # Assigning a Call to a Name (line 65):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_243892 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 65, 8), 'int')
        # Processing the call keyword arguments
        kwargs_243893 = {}
        # Getting the type of 'call_assignment_243682' (line 65)
        call_assignment_243682_243890 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 65, 8), 'call_assignment_243682', False)
        # Obtaining the member '__getitem__' of a type (line 65)
        getitem___243891 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 65, 8), call_assignment_243682_243890, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_243894 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___243891, *[int_243892], **kwargs_243893)
        
        # Assigning a type to the variable 'call_assignment_243684' (line 65)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 65, 8), 'call_assignment_243684', getitem___call_result_243894)
        
        # Assigning a Name to a Name (line 65):
        # Getting the type of 'call_assignment_243684' (line 65)
        call_assignment_243684_243895 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 65, 8), 'call_assignment_243684')
        # Assigning a type to the variable 'gs_version' (line 65)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 65, 16), 'gs_version', call_assignment_243684_243895)
        
        # Type idiom detected: calculating its left and rigth part (line 66)
        # Getting the type of 'gs_exe' (line 66)
        gs_exe_243896 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 66, 11), 'gs_exe')
        # Getting the type of 'None' (line 66)
        None_243897 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 66, 21), 'None')
        
        (may_be_243898, more_types_in_union_243899) = may_be_none(gs_exe_243896, None_243897)

        if may_be_243898:

            if more_types_in_union_243899:
                # Runtime conditional SSA (line 66)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Str to a Name (line 67):
            
            # Assigning a Str to a Name (line 67):
            unicode_243900 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 67, 21), 'unicode', u'gs')
            # Assigning a type to the variable 'gs_exe' (line 67)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 67, 12), 'gs_exe', unicode_243900)

            if more_types_in_union_243899:
                # SSA join for if statement (line 66)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Call to a Subscript (line 69):
        
        # Assigning a Call to a Subscript (line 69):
        
        # Call to str(...): (line 69)
        # Processing the call arguments (line 69)
        # Getting the type of 'gs_exe' (line 69)
        gs_exe_243902 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 69, 37), 'gs_exe', False)
        # Processing the call keyword arguments (line 69)
        kwargs_243903 = {}
        # Getting the type of 'str' (line 69)
        str_243901 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 69, 33), 'str', False)
        # Calling str(args, kwargs) (line 69)
        str_call_result_243904 = invoke(stypy.reporting.localization.Localization(__file__, 69, 33), str_243901, *[gs_exe_243902], **kwargs_243903)
        
        # Getting the type of 'self' (line 69)
        self_243905 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 69, 8), 'self')
        # Obtaining the member '_cached' of a type (line 69)
        _cached_243906 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 69, 8), self_243905, '_cached')
        unicode_243907 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 69, 21), 'unicode', u'gs_exe')
        # Storing an element on a container (line 69)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 69, 8), _cached_243906, (unicode_243907, str_call_result_243904))
        
        # Call to str(...): (line 70)
        # Processing the call arguments (line 70)
        # Getting the type of 'gs_exe' (line 70)
        gs_exe_243909 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 70, 19), 'gs_exe', False)
        # Processing the call keyword arguments (line 70)
        kwargs_243910 = {}
        # Getting the type of 'str' (line 70)
        str_243908 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 70, 15), 'str', False)
        # Calling str(args, kwargs) (line 70)
        str_call_result_243911 = invoke(stypy.reporting.localization.Localization(__file__, 70, 15), str_243908, *[gs_exe_243909], **kwargs_243910)
        
        # Assigning a type to the variable 'stypy_return_type' (line 70)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 70, 8), 'stypy_return_type', str_call_result_243911)
        
        # ################# End of 'gs_exe(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'gs_exe' in the type store
        # Getting the type of 'stypy_return_type' (line 55)
        stypy_return_type_243912 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 55, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_243912)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'gs_exe'
        return stypy_return_type_243912


    @norecursion
    def gs_version(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'gs_version'
        module_type_store = module_type_store.open_function_context('gs_version', 72, 4, False)
        # Assigning a type to the variable 'self' (line 73)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 73, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        PsBackendHelper.gs_version.__dict__.__setitem__('stypy_localization', localization)
        PsBackendHelper.gs_version.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        PsBackendHelper.gs_version.__dict__.__setitem__('stypy_type_store', module_type_store)
        PsBackendHelper.gs_version.__dict__.__setitem__('stypy_function_name', 'PsBackendHelper.gs_version')
        PsBackendHelper.gs_version.__dict__.__setitem__('stypy_param_names_list', [])
        PsBackendHelper.gs_version.__dict__.__setitem__('stypy_varargs_param_name', None)
        PsBackendHelper.gs_version.__dict__.__setitem__('stypy_kwargs_param_name', None)
        PsBackendHelper.gs_version.__dict__.__setitem__('stypy_call_defaults', defaults)
        PsBackendHelper.gs_version.__dict__.__setitem__('stypy_call_varargs', varargs)
        PsBackendHelper.gs_version.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        PsBackendHelper.gs_version.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'PsBackendHelper.gs_version', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'gs_version', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'gs_version(...)' code ##################

        unicode_243913 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 76, (-1)), 'unicode', u'\n        version of ghostscript.\n        ')
        
        
        # SSA begins for try-except statement (line 77)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
        
        # Obtaining the type of the subscript
        unicode_243914 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 78, 32), 'unicode', u'gs_version')
        # Getting the type of 'self' (line 78)
        self_243915 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 78, 19), 'self')
        # Obtaining the member '_cached' of a type (line 78)
        _cached_243916 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 78, 19), self_243915, '_cached')
        # Obtaining the member '__getitem__' of a type (line 78)
        getitem___243917 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 78, 19), _cached_243916, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 78)
        subscript_call_result_243918 = invoke(stypy.reporting.localization.Localization(__file__, 78, 19), getitem___243917, unicode_243914)
        
        # Assigning a type to the variable 'stypy_return_type' (line 78)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 78, 12), 'stypy_return_type', subscript_call_result_243918)
        # SSA branch for the except part of a try statement (line 77)
        # SSA branch for the except 'KeyError' branch of a try statement (line 77)
        module_type_store.open_ssa_branch('except')
        pass
        # SSA join for try-except statement (line 77)
        module_type_store = module_type_store.join_ssa_context()
        
        stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 82, 8))
        
        # 'from matplotlib.compat.subprocess import Popen, PIPE' statement (line 82)
        update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
        import_243919 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 82, 8), 'matplotlib.compat.subprocess')

        if (type(import_243919) is not StypyTypeError):

            if (import_243919 != 'pyd_module'):
                __import__(import_243919)
                sys_modules_243920 = sys.modules[import_243919]
                import_from_module(stypy.reporting.localization.Localization(__file__, 82, 8), 'matplotlib.compat.subprocess', sys_modules_243920.module_type_store, module_type_store, ['Popen', 'PIPE'])
                nest_module(stypy.reporting.localization.Localization(__file__, 82, 8), __file__, sys_modules_243920, sys_modules_243920.module_type_store, module_type_store)
            else:
                from matplotlib.compat.subprocess import Popen, PIPE

                import_from_module(stypy.reporting.localization.Localization(__file__, 82, 8), 'matplotlib.compat.subprocess', None, module_type_store, ['Popen', 'PIPE'], [Popen, PIPE])

        else:
            # Assigning a type to the variable 'matplotlib.compat.subprocess' (line 82)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 82, 8), 'matplotlib.compat.subprocess', import_243919)

        remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')
        
        
        # Assigning a Call to a Name (line 83):
        
        # Assigning a Call to a Name (line 83):
        
        # Call to Popen(...): (line 83)
        # Processing the call arguments (line 83)
        
        # Obtaining an instance of the builtin type 'list' (line 83)
        list_243922 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 83, 18), 'list')
        # Adding type elements to the builtin type 'list' instance (line 83)
        # Adding element type (line 83)
        # Getting the type of 'self' (line 83)
        self_243923 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 83, 19), 'self', False)
        # Obtaining the member 'gs_exe' of a type (line 83)
        gs_exe_243924 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 83, 19), self_243923, 'gs_exe')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 83, 18), list_243922, gs_exe_243924)
        # Adding element type (line 83)
        unicode_243925 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 83, 32), 'unicode', u'--version')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 83, 18), list_243922, unicode_243925)
        
        # Processing the call keyword arguments (line 83)
        # Getting the type of 'PIPE' (line 83)
        PIPE_243926 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 83, 53), 'PIPE', False)
        keyword_243927 = PIPE_243926
        kwargs_243928 = {'stdout': keyword_243927}
        # Getting the type of 'Popen' (line 83)
        Popen_243921 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 83, 12), 'Popen', False)
        # Calling Popen(args, kwargs) (line 83)
        Popen_call_result_243929 = invoke(stypy.reporting.localization.Localization(__file__, 83, 12), Popen_243921, *[list_243922], **kwargs_243928)
        
        # Assigning a type to the variable 's' (line 83)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 83, 8), 's', Popen_call_result_243929)
        
        # Assigning a Call to a Tuple (line 84):
        
        # Assigning a Call to a Name:
        
        # Call to communicate(...): (line 84)
        # Processing the call keyword arguments (line 84)
        kwargs_243932 = {}
        # Getting the type of 's' (line 84)
        s_243930 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 84, 23), 's', False)
        # Obtaining the member 'communicate' of a type (line 84)
        communicate_243931 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 84, 23), s_243930, 'communicate')
        # Calling communicate(args, kwargs) (line 84)
        communicate_call_result_243933 = invoke(stypy.reporting.localization.Localization(__file__, 84, 23), communicate_243931, *[], **kwargs_243932)
        
        # Assigning a type to the variable 'call_assignment_243685' (line 84)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 84, 8), 'call_assignment_243685', communicate_call_result_243933)
        
        # Assigning a Call to a Name (line 84):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_243936 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 84, 8), 'int')
        # Processing the call keyword arguments
        kwargs_243937 = {}
        # Getting the type of 'call_assignment_243685' (line 84)
        call_assignment_243685_243934 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 84, 8), 'call_assignment_243685', False)
        # Obtaining the member '__getitem__' of a type (line 84)
        getitem___243935 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 84, 8), call_assignment_243685_243934, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_243938 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___243935, *[int_243936], **kwargs_243937)
        
        # Assigning a type to the variable 'call_assignment_243686' (line 84)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 84, 8), 'call_assignment_243686', getitem___call_result_243938)
        
        # Assigning a Name to a Name (line 84):
        # Getting the type of 'call_assignment_243686' (line 84)
        call_assignment_243686_243939 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 84, 8), 'call_assignment_243686')
        # Assigning a type to the variable 'pipe' (line 84)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 84, 8), 'pipe', call_assignment_243686_243939)
        
        # Assigning a Call to a Name (line 84):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_243942 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 84, 8), 'int')
        # Processing the call keyword arguments
        kwargs_243943 = {}
        # Getting the type of 'call_assignment_243685' (line 84)
        call_assignment_243685_243940 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 84, 8), 'call_assignment_243685', False)
        # Obtaining the member '__getitem__' of a type (line 84)
        getitem___243941 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 84, 8), call_assignment_243685_243940, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_243944 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___243941, *[int_243942], **kwargs_243943)
        
        # Assigning a type to the variable 'call_assignment_243687' (line 84)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 84, 8), 'call_assignment_243687', getitem___call_result_243944)
        
        # Assigning a Name to a Name (line 84):
        # Getting the type of 'call_assignment_243687' (line 84)
        call_assignment_243687_243945 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 84, 8), 'call_assignment_243687')
        # Assigning a type to the variable 'stderr' (line 84)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 84, 14), 'stderr', call_assignment_243687_243945)
        
        # Getting the type of 'six' (line 85)
        six_243946 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 85, 11), 'six')
        # Obtaining the member 'PY3' of a type (line 85)
        PY3_243947 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 85, 11), six_243946, 'PY3')
        # Testing the type of an if condition (line 85)
        if_condition_243948 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 85, 8), PY3_243947)
        # Assigning a type to the variable 'if_condition_243948' (line 85)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 85, 8), 'if_condition_243948', if_condition_243948)
        # SSA begins for if statement (line 85)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 86):
        
        # Assigning a Call to a Name (line 86):
        
        # Call to decode(...): (line 86)
        # Processing the call arguments (line 86)
        unicode_243951 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 86, 30), 'unicode', u'ascii')
        # Processing the call keyword arguments (line 86)
        kwargs_243952 = {}
        # Getting the type of 'pipe' (line 86)
        pipe_243949 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 18), 'pipe', False)
        # Obtaining the member 'decode' of a type (line 86)
        decode_243950 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 86, 18), pipe_243949, 'decode')
        # Calling decode(args, kwargs) (line 86)
        decode_call_result_243953 = invoke(stypy.reporting.localization.Localization(__file__, 86, 18), decode_243950, *[unicode_243951], **kwargs_243952)
        
        # Assigning a type to the variable 'ver' (line 86)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 86, 12), 'ver', decode_call_result_243953)
        # SSA branch for the else part of an if statement (line 85)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Name to a Name (line 88):
        
        # Assigning a Name to a Name (line 88):
        # Getting the type of 'pipe' (line 88)
        pipe_243954 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 88, 18), 'pipe')
        # Assigning a type to the variable 'ver' (line 88)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 88, 12), 'ver', pipe_243954)
        # SSA join for if statement (line 85)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # SSA begins for try-except statement (line 89)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
        
        # Assigning a Call to a Name (line 90):
        
        # Assigning a Call to a Name (line 90):
        
        # Call to tuple(...): (line 90)
        # Processing the call arguments (line 90)
        
        # Call to map(...): (line 90)
        # Processing the call arguments (line 90)
        # Getting the type of 'int' (line 90)
        int_243957 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 90, 35), 'int', False)
        
        # Call to split(...): (line 90)
        # Processing the call arguments (line 90)
        unicode_243963 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 90, 58), 'unicode', u'.')
        # Processing the call keyword arguments (line 90)
        kwargs_243964 = {}
        
        # Call to strip(...): (line 90)
        # Processing the call keyword arguments (line 90)
        kwargs_243960 = {}
        # Getting the type of 'ver' (line 90)
        ver_243958 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 90, 40), 'ver', False)
        # Obtaining the member 'strip' of a type (line 90)
        strip_243959 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 90, 40), ver_243958, 'strip')
        # Calling strip(args, kwargs) (line 90)
        strip_call_result_243961 = invoke(stypy.reporting.localization.Localization(__file__, 90, 40), strip_243959, *[], **kwargs_243960)
        
        # Obtaining the member 'split' of a type (line 90)
        split_243962 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 90, 40), strip_call_result_243961, 'split')
        # Calling split(args, kwargs) (line 90)
        split_call_result_243965 = invoke(stypy.reporting.localization.Localization(__file__, 90, 40), split_243962, *[unicode_243963], **kwargs_243964)
        
        # Processing the call keyword arguments (line 90)
        kwargs_243966 = {}
        # Getting the type of 'map' (line 90)
        map_243956 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 90, 31), 'map', False)
        # Calling map(args, kwargs) (line 90)
        map_call_result_243967 = invoke(stypy.reporting.localization.Localization(__file__, 90, 31), map_243956, *[int_243957, split_call_result_243965], **kwargs_243966)
        
        # Processing the call keyword arguments (line 90)
        kwargs_243968 = {}
        # Getting the type of 'tuple' (line 90)
        tuple_243955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 90, 25), 'tuple', False)
        # Calling tuple(args, kwargs) (line 90)
        tuple_call_result_243969 = invoke(stypy.reporting.localization.Localization(__file__, 90, 25), tuple_243955, *[map_call_result_243967], **kwargs_243968)
        
        # Assigning a type to the variable 'gs_version' (line 90)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 90, 12), 'gs_version', tuple_call_result_243969)
        # SSA branch for the except part of a try statement (line 89)
        # SSA branch for the except 'ValueError' branch of a try statement (line 89)
        module_type_store.open_ssa_branch('except')
        
        # Assigning a Tuple to a Name (line 93):
        
        # Assigning a Tuple to a Name (line 93):
        
        # Obtaining an instance of the builtin type 'tuple' (line 93)
        tuple_243970 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 93, 26), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 93)
        # Adding element type (line 93)
        int_243971 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 93, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 93, 26), tuple_243970, int_243971)
        # Adding element type (line 93)
        int_243972 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 93, 29), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 93, 26), tuple_243970, int_243972)
        
        # Assigning a type to the variable 'gs_version' (line 93)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 93, 12), 'gs_version', tuple_243970)
        # SSA join for try-except statement (line 89)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Name to a Subscript (line 94):
        
        # Assigning a Name to a Subscript (line 94):
        # Getting the type of 'gs_version' (line 94)
        gs_version_243973 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 94, 37), 'gs_version')
        # Getting the type of 'self' (line 94)
        self_243974 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 94, 8), 'self')
        # Obtaining the member '_cached' of a type (line 94)
        _cached_243975 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 94, 8), self_243974, '_cached')
        unicode_243976 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 94, 21), 'unicode', u'gs_version')
        # Storing an element on a container (line 94)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 94, 8), _cached_243975, (unicode_243976, gs_version_243973))
        # Getting the type of 'gs_version' (line 95)
        gs_version_243977 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 95, 15), 'gs_version')
        # Assigning a type to the variable 'stypy_return_type' (line 95)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 95, 8), 'stypy_return_type', gs_version_243977)
        
        # ################# End of 'gs_version(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'gs_version' in the type store
        # Getting the type of 'stypy_return_type' (line 72)
        stypy_return_type_243978 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 72, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_243978)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'gs_version'
        return stypy_return_type_243978


    @norecursion
    def supports_ps2write(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'supports_ps2write'
        module_type_store = module_type_store.open_function_context('supports_ps2write', 97, 4, False)
        # Assigning a type to the variable 'self' (line 98)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 98, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        PsBackendHelper.supports_ps2write.__dict__.__setitem__('stypy_localization', localization)
        PsBackendHelper.supports_ps2write.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        PsBackendHelper.supports_ps2write.__dict__.__setitem__('stypy_type_store', module_type_store)
        PsBackendHelper.supports_ps2write.__dict__.__setitem__('stypy_function_name', 'PsBackendHelper.supports_ps2write')
        PsBackendHelper.supports_ps2write.__dict__.__setitem__('stypy_param_names_list', [])
        PsBackendHelper.supports_ps2write.__dict__.__setitem__('stypy_varargs_param_name', None)
        PsBackendHelper.supports_ps2write.__dict__.__setitem__('stypy_kwargs_param_name', None)
        PsBackendHelper.supports_ps2write.__dict__.__setitem__('stypy_call_defaults', defaults)
        PsBackendHelper.supports_ps2write.__dict__.__setitem__('stypy_call_varargs', varargs)
        PsBackendHelper.supports_ps2write.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        PsBackendHelper.supports_ps2write.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'PsBackendHelper.supports_ps2write', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'supports_ps2write', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'supports_ps2write(...)' code ##################

        unicode_243979 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 101, (-1)), 'unicode', u'\n        True if the installed ghostscript supports ps2write device.\n        ')
        
        
        # Obtaining the type of the subscript
        int_243980 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 102, 31), 'int')
        # Getting the type of 'self' (line 102)
        self_243981 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 102, 15), 'self')
        # Obtaining the member 'gs_version' of a type (line 102)
        gs_version_243982 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 102, 15), self_243981, 'gs_version')
        # Obtaining the member '__getitem__' of a type (line 102)
        getitem___243983 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 102, 15), gs_version_243982, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 102)
        subscript_call_result_243984 = invoke(stypy.reporting.localization.Localization(__file__, 102, 15), getitem___243983, int_243980)
        
        int_243985 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 102, 37), 'int')
        # Applying the binary operator '>=' (line 102)
        result_ge_243986 = python_operator(stypy.reporting.localization.Localization(__file__, 102, 15), '>=', subscript_call_result_243984, int_243985)
        
        # Assigning a type to the variable 'stypy_return_type' (line 102)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 102, 8), 'stypy_return_type', result_ge_243986)
        
        # ################# End of 'supports_ps2write(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'supports_ps2write' in the type store
        # Getting the type of 'stypy_return_type' (line 97)
        stypy_return_type_243987 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 97, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_243987)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'supports_ps2write'
        return stypy_return_type_243987


# Assigning a type to the variable 'PsBackendHelper' (line 50)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 50, 0), 'PsBackendHelper', PsBackendHelper)

# Assigning a Call to a Name (line 104):

# Assigning a Call to a Name (line 104):

# Call to PsBackendHelper(...): (line 104)
# Processing the call keyword arguments (line 104)
kwargs_243989 = {}
# Getting the type of 'PsBackendHelper' (line 104)
PsBackendHelper_243988 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 104, 20), 'PsBackendHelper', False)
# Calling PsBackendHelper(args, kwargs) (line 104)
PsBackendHelper_call_result_243990 = invoke(stypy.reporting.localization.Localization(__file__, 104, 20), PsBackendHelper_243988, *[], **kwargs_243989)

# Assigning a type to the variable 'ps_backend_helper' (line 104)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 104, 0), 'ps_backend_helper', PsBackendHelper_call_result_243990)

# Assigning a Dict to a Name (line 106):

# Assigning a Dict to a Name (line 106):

# Obtaining an instance of the builtin type 'dict' (line 106)
dict_243991 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 106, 12), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 106)
# Adding element type (key, value) (line 106)
unicode_243992 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 106, 13), 'unicode', u'letter')

# Obtaining an instance of the builtin type 'tuple' (line 106)
tuple_243993 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 106, 24), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 106)
# Adding element type (line 106)
float_243994 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 106, 24), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 106, 24), tuple_243993, float_243994)
# Adding element type (line 106)
int_243995 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 106, 28), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 106, 24), tuple_243993, int_243995)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 106, 12), dict_243991, (unicode_243992, tuple_243993))
# Adding element type (key, value) (line 106)
unicode_243996 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 107, 13), 'unicode', u'legal')

# Obtaining an instance of the builtin type 'tuple' (line 107)
tuple_243997 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 107, 23), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 107)
# Adding element type (line 107)
float_243998 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 107, 23), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 107, 23), tuple_243997, float_243998)
# Adding element type (line 107)
int_243999 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 107, 27), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 107, 23), tuple_243997, int_243999)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 106, 12), dict_243991, (unicode_243996, tuple_243997))
# Adding element type (key, value) (line 106)
unicode_244000 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 108, 13), 'unicode', u'ledger')

# Obtaining an instance of the builtin type 'tuple' (line 108)
tuple_244001 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 108, 24), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 108)
# Adding element type (line 108)
int_244002 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 108, 24), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 108, 24), tuple_244001, int_244002)
# Adding element type (line 108)
int_244003 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 108, 27), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 108, 24), tuple_244001, int_244003)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 106, 12), dict_243991, (unicode_244000, tuple_244001))
# Adding element type (key, value) (line 106)
unicode_244004 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 109, 13), 'unicode', u'a0')

# Obtaining an instance of the builtin type 'tuple' (line 109)
tuple_244005 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 109, 20), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 109)
# Adding element type (line 109)
float_244006 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 109, 20), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 109, 20), tuple_244005, float_244006)
# Adding element type (line 109)
float_244007 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 109, 26), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 109, 20), tuple_244005, float_244007)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 106, 12), dict_243991, (unicode_244004, tuple_244005))
# Adding element type (key, value) (line 106)
unicode_244008 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 110, 13), 'unicode', u'a1')

# Obtaining an instance of the builtin type 'tuple' (line 110)
tuple_244009 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 110, 20), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 110)
# Adding element type (line 110)
float_244010 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 110, 20), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 110, 20), tuple_244009, float_244010)
# Adding element type (line 110)
float_244011 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 110, 26), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 110, 20), tuple_244009, float_244011)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 106, 12), dict_243991, (unicode_244008, tuple_244009))
# Adding element type (key, value) (line 106)
unicode_244012 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 111, 13), 'unicode', u'a2')

# Obtaining an instance of the builtin type 'tuple' (line 111)
tuple_244013 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 111, 20), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 111)
# Adding element type (line 111)
float_244014 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 111, 20), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 111, 20), tuple_244013, float_244014)
# Adding element type (line 111)
float_244015 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 111, 26), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 111, 20), tuple_244013, float_244015)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 106, 12), dict_243991, (unicode_244012, tuple_244013))
# Adding element type (key, value) (line 106)
unicode_244016 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 112, 13), 'unicode', u'a3')

# Obtaining an instance of the builtin type 'tuple' (line 112)
tuple_244017 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 112, 20), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 112)
# Adding element type (line 112)
float_244018 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 112, 20), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 112, 20), tuple_244017, float_244018)
# Adding element type (line 112)
float_244019 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 112, 26), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 112, 20), tuple_244017, float_244019)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 106, 12), dict_243991, (unicode_244016, tuple_244017))
# Adding element type (key, value) (line 106)
unicode_244020 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 113, 13), 'unicode', u'a4')

# Obtaining an instance of the builtin type 'tuple' (line 113)
tuple_244021 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 113, 20), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 113)
# Adding element type (line 113)
float_244022 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 113, 20), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 113, 20), tuple_244021, float_244022)
# Adding element type (line 113)
float_244023 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 113, 25), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 113, 20), tuple_244021, float_244023)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 106, 12), dict_243991, (unicode_244020, tuple_244021))
# Adding element type (key, value) (line 106)
unicode_244024 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 114, 13), 'unicode', u'a5')

# Obtaining an instance of the builtin type 'tuple' (line 114)
tuple_244025 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 114, 20), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 114)
# Adding element type (line 114)
float_244026 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 114, 20), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 114, 20), tuple_244025, float_244026)
# Adding element type (line 114)
float_244027 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 114, 25), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 114, 20), tuple_244025, float_244027)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 106, 12), dict_243991, (unicode_244024, tuple_244025))
# Adding element type (key, value) (line 106)
unicode_244028 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 115, 13), 'unicode', u'a6')

# Obtaining an instance of the builtin type 'tuple' (line 115)
tuple_244029 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 115, 20), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 115)
# Adding element type (line 115)
float_244030 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 115, 20), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 115, 20), tuple_244029, float_244030)
# Adding element type (line 115)
float_244031 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 115, 25), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 115, 20), tuple_244029, float_244031)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 106, 12), dict_243991, (unicode_244028, tuple_244029))
# Adding element type (key, value) (line 106)
unicode_244032 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 116, 13), 'unicode', u'a7')

# Obtaining an instance of the builtin type 'tuple' (line 116)
tuple_244033 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 116, 20), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 116)
# Adding element type (line 116)
float_244034 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 116, 20), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 116, 20), tuple_244033, float_244034)
# Adding element type (line 116)
float_244035 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 116, 25), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 116, 20), tuple_244033, float_244035)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 106, 12), dict_243991, (unicode_244032, tuple_244033))
# Adding element type (key, value) (line 106)
unicode_244036 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 117, 13), 'unicode', u'a8')

# Obtaining an instance of the builtin type 'tuple' (line 117)
tuple_244037 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 117, 20), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 117)
# Adding element type (line 117)
float_244038 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 117, 20), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 117, 20), tuple_244037, float_244038)
# Adding element type (line 117)
float_244039 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 117, 25), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 117, 20), tuple_244037, float_244039)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 106, 12), dict_243991, (unicode_244036, tuple_244037))
# Adding element type (key, value) (line 106)
unicode_244040 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 118, 13), 'unicode', u'a9')

# Obtaining an instance of the builtin type 'tuple' (line 118)
tuple_244041 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 118, 20), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 118)
# Adding element type (line 118)
float_244042 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 118, 20), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 118, 20), tuple_244041, float_244042)
# Adding element type (line 118)
float_244043 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 118, 26), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 118, 20), tuple_244041, float_244043)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 106, 12), dict_243991, (unicode_244040, tuple_244041))
# Adding element type (key, value) (line 106)
unicode_244044 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 119, 13), 'unicode', u'a10')

# Obtaining an instance of the builtin type 'tuple' (line 119)
tuple_244045 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 119, 21), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 119)
# Adding element type (line 119)
float_244046 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 119, 21), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 119, 21), tuple_244045, float_244046)
# Adding element type (line 119)
float_244047 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 119, 26), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 119, 21), tuple_244045, float_244047)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 106, 12), dict_243991, (unicode_244044, tuple_244045))
# Adding element type (key, value) (line 106)
unicode_244048 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 120, 13), 'unicode', u'b0')

# Obtaining an instance of the builtin type 'tuple' (line 120)
tuple_244049 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 120, 20), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 120)
# Adding element type (line 120)
float_244050 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 120, 20), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 120, 20), tuple_244049, float_244050)
# Adding element type (line 120)
float_244051 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 120, 26), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 120, 20), tuple_244049, float_244051)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 106, 12), dict_243991, (unicode_244048, tuple_244049))
# Adding element type (key, value) (line 106)
unicode_244052 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 121, 13), 'unicode', u'b1')

# Obtaining an instance of the builtin type 'tuple' (line 121)
tuple_244053 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 121, 20), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 121)
# Adding element type (line 121)
float_244054 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 121, 20), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 121, 20), tuple_244053, float_244054)
# Adding element type (line 121)
float_244055 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 121, 26), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 121, 20), tuple_244053, float_244055)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 106, 12), dict_243991, (unicode_244052, tuple_244053))
# Adding element type (key, value) (line 106)
unicode_244056 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 122, 13), 'unicode', u'b2')

# Obtaining an instance of the builtin type 'tuple' (line 122)
tuple_244057 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 122, 20), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 122)
# Adding element type (line 122)
float_244058 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 122, 20), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 122, 20), tuple_244057, float_244058)
# Adding element type (line 122)
float_244059 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 122, 26), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 122, 20), tuple_244057, float_244059)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 106, 12), dict_243991, (unicode_244056, tuple_244057))
# Adding element type (key, value) (line 106)
unicode_244060 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 123, 13), 'unicode', u'b3')

# Obtaining an instance of the builtin type 'tuple' (line 123)
tuple_244061 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 123, 20), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 123)
# Adding element type (line 123)
float_244062 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 123, 20), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 123, 20), tuple_244061, float_244062)
# Adding element type (line 123)
float_244063 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 123, 26), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 123, 20), tuple_244061, float_244063)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 106, 12), dict_243991, (unicode_244060, tuple_244061))
# Adding element type (key, value) (line 106)
unicode_244064 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 124, 13), 'unicode', u'b4')

# Obtaining an instance of the builtin type 'tuple' (line 124)
tuple_244065 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 124, 20), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 124)
# Adding element type (line 124)
float_244066 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 124, 20), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 124, 20), tuple_244065, float_244066)
# Adding element type (line 124)
float_244067 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 124, 26), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 124, 20), tuple_244065, float_244067)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 106, 12), dict_243991, (unicode_244064, tuple_244065))
# Adding element type (key, value) (line 106)
unicode_244068 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 125, 13), 'unicode', u'b5')

# Obtaining an instance of the builtin type 'tuple' (line 125)
tuple_244069 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 125, 20), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 125)
# Adding element type (line 125)
float_244070 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 125, 20), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 125, 20), tuple_244069, float_244070)
# Adding element type (line 125)
float_244071 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 125, 25), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 125, 20), tuple_244069, float_244071)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 106, 12), dict_243991, (unicode_244068, tuple_244069))
# Adding element type (key, value) (line 106)
unicode_244072 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 126, 13), 'unicode', u'b6')

# Obtaining an instance of the builtin type 'tuple' (line 126)
tuple_244073 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 126, 20), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 126)
# Adding element type (line 126)
float_244074 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 126, 20), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 126, 20), tuple_244073, float_244074)
# Adding element type (line 126)
float_244075 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 126, 25), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 126, 20), tuple_244073, float_244075)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 106, 12), dict_243991, (unicode_244072, tuple_244073))
# Adding element type (key, value) (line 106)
unicode_244076 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 127, 13), 'unicode', u'b7')

# Obtaining an instance of the builtin type 'tuple' (line 127)
tuple_244077 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 127, 20), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 127)
# Adding element type (line 127)
float_244078 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 127, 20), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 127, 20), tuple_244077, float_244078)
# Adding element type (line 127)
float_244079 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 127, 25), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 127, 20), tuple_244077, float_244079)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 106, 12), dict_243991, (unicode_244076, tuple_244077))
# Adding element type (key, value) (line 106)
unicode_244080 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 128, 13), 'unicode', u'b8')

# Obtaining an instance of the builtin type 'tuple' (line 128)
tuple_244081 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 128, 20), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 128)
# Adding element type (line 128)
float_244082 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 128, 20), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 128, 20), tuple_244081, float_244082)
# Adding element type (line 128)
float_244083 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 128, 25), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 128, 20), tuple_244081, float_244083)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 106, 12), dict_243991, (unicode_244080, tuple_244081))
# Adding element type (key, value) (line 106)
unicode_244084 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 129, 13), 'unicode', u'b9')

# Obtaining an instance of the builtin type 'tuple' (line 129)
tuple_244085 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 129, 20), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 129)
# Adding element type (line 129)
float_244086 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 129, 20), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 129, 20), tuple_244085, float_244086)
# Adding element type (line 129)
float_244087 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 129, 25), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 129, 20), tuple_244085, float_244087)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 106, 12), dict_243991, (unicode_244084, tuple_244085))
# Adding element type (key, value) (line 106)
unicode_244088 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 130, 13), 'unicode', u'b10')

# Obtaining an instance of the builtin type 'tuple' (line 130)
tuple_244089 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 130, 21), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 130)
# Adding element type (line 130)
float_244090 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 130, 21), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 130, 21), tuple_244089, float_244090)
# Adding element type (line 130)
float_244091 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 130, 26), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 130, 21), tuple_244089, float_244091)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 106, 12), dict_243991, (unicode_244088, tuple_244089))

# Assigning a type to the variable 'papersize' (line 106)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 106, 0), 'papersize', dict_243991)

@norecursion
def _get_papertype(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function '_get_papertype'
    module_type_store = module_type_store.open_function_context('_get_papertype', 132, 0, False)
    
    # Passed parameters checking function
    _get_papertype.stypy_localization = localization
    _get_papertype.stypy_type_of_self = None
    _get_papertype.stypy_type_store = module_type_store
    _get_papertype.stypy_function_name = '_get_papertype'
    _get_papertype.stypy_param_names_list = ['w', 'h']
    _get_papertype.stypy_varargs_param_name = None
    _get_papertype.stypy_kwargs_param_name = None
    _get_papertype.stypy_call_defaults = defaults
    _get_papertype.stypy_call_varargs = varargs
    _get_papertype.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, '_get_papertype', ['w', 'h'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, '_get_papertype', localization, ['w', 'h'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of '_get_papertype(...)' code ##################

    
    # Assigning a Call to a Name (line 133):
    
    # Assigning a Call to a Name (line 133):
    
    # Call to list(...): (line 133)
    # Processing the call arguments (line 133)
    
    # Call to iterkeys(...): (line 133)
    # Processing the call arguments (line 133)
    # Getting the type of 'papersize' (line 133)
    papersize_244095 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 133, 29), 'papersize', False)
    # Processing the call keyword arguments (line 133)
    kwargs_244096 = {}
    # Getting the type of 'six' (line 133)
    six_244093 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 133, 16), 'six', False)
    # Obtaining the member 'iterkeys' of a type (line 133)
    iterkeys_244094 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 133, 16), six_244093, 'iterkeys')
    # Calling iterkeys(args, kwargs) (line 133)
    iterkeys_call_result_244097 = invoke(stypy.reporting.localization.Localization(__file__, 133, 16), iterkeys_244094, *[papersize_244095], **kwargs_244096)
    
    # Processing the call keyword arguments (line 133)
    kwargs_244098 = {}
    # Getting the type of 'list' (line 133)
    list_244092 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 133, 11), 'list', False)
    # Calling list(args, kwargs) (line 133)
    list_call_result_244099 = invoke(stypy.reporting.localization.Localization(__file__, 133, 11), list_244092, *[iterkeys_call_result_244097], **kwargs_244098)
    
    # Assigning a type to the variable 'keys' (line 133)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 133, 4), 'keys', list_call_result_244099)
    
    # Call to sort(...): (line 134)
    # Processing the call keyword arguments (line 134)
    kwargs_244102 = {}
    # Getting the type of 'keys' (line 134)
    keys_244100 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 134, 4), 'keys', False)
    # Obtaining the member 'sort' of a type (line 134)
    sort_244101 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 134, 4), keys_244100, 'sort')
    # Calling sort(args, kwargs) (line 134)
    sort_call_result_244103 = invoke(stypy.reporting.localization.Localization(__file__, 134, 4), sort_244101, *[], **kwargs_244102)
    
    
    # Call to reverse(...): (line 135)
    # Processing the call keyword arguments (line 135)
    kwargs_244106 = {}
    # Getting the type of 'keys' (line 135)
    keys_244104 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 135, 4), 'keys', False)
    # Obtaining the member 'reverse' of a type (line 135)
    reverse_244105 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 135, 4), keys_244104, 'reverse')
    # Calling reverse(args, kwargs) (line 135)
    reverse_call_result_244107 = invoke(stypy.reporting.localization.Localization(__file__, 135, 4), reverse_244105, *[], **kwargs_244106)
    
    
    # Getting the type of 'keys' (line 136)
    keys_244108 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 136, 15), 'keys')
    # Testing the type of a for loop iterable (line 136)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 136, 4), keys_244108)
    # Getting the type of the for loop variable (line 136)
    for_loop_var_244109 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 136, 4), keys_244108)
    # Assigning a type to the variable 'key' (line 136)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 136, 4), 'key', for_loop_var_244109)
    # SSA begins for a for statement (line 136)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Call to startswith(...): (line 137)
    # Processing the call arguments (line 137)
    unicode_244112 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 137, 26), 'unicode', u'l')
    # Processing the call keyword arguments (line 137)
    kwargs_244113 = {}
    # Getting the type of 'key' (line 137)
    key_244110 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 137, 11), 'key', False)
    # Obtaining the member 'startswith' of a type (line 137)
    startswith_244111 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 137, 11), key_244110, 'startswith')
    # Calling startswith(args, kwargs) (line 137)
    startswith_call_result_244114 = invoke(stypy.reporting.localization.Localization(__file__, 137, 11), startswith_244111, *[unicode_244112], **kwargs_244113)
    
    # Testing the type of an if condition (line 137)
    if_condition_244115 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 137, 8), startswith_call_result_244114)
    # Assigning a type to the variable 'if_condition_244115' (line 137)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 137, 8), 'if_condition_244115', if_condition_244115)
    # SSA begins for if statement (line 137)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # SSA join for if statement (line 137)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Subscript to a Tuple (line 138):
    
    # Assigning a Subscript to a Name (line 138):
    
    # Obtaining the type of the subscript
    int_244116 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 138, 8), 'int')
    
    # Obtaining the type of the subscript
    # Getting the type of 'key' (line 138)
    key_244117 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 138, 27), 'key')
    # Getting the type of 'papersize' (line 138)
    papersize_244118 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 138, 17), 'papersize')
    # Obtaining the member '__getitem__' of a type (line 138)
    getitem___244119 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 138, 17), papersize_244118, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 138)
    subscript_call_result_244120 = invoke(stypy.reporting.localization.Localization(__file__, 138, 17), getitem___244119, key_244117)
    
    # Obtaining the member '__getitem__' of a type (line 138)
    getitem___244121 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 138, 8), subscript_call_result_244120, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 138)
    subscript_call_result_244122 = invoke(stypy.reporting.localization.Localization(__file__, 138, 8), getitem___244121, int_244116)
    
    # Assigning a type to the variable 'tuple_var_assignment_243688' (line 138)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 138, 8), 'tuple_var_assignment_243688', subscript_call_result_244122)
    
    # Assigning a Subscript to a Name (line 138):
    
    # Obtaining the type of the subscript
    int_244123 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 138, 8), 'int')
    
    # Obtaining the type of the subscript
    # Getting the type of 'key' (line 138)
    key_244124 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 138, 27), 'key')
    # Getting the type of 'papersize' (line 138)
    papersize_244125 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 138, 17), 'papersize')
    # Obtaining the member '__getitem__' of a type (line 138)
    getitem___244126 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 138, 17), papersize_244125, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 138)
    subscript_call_result_244127 = invoke(stypy.reporting.localization.Localization(__file__, 138, 17), getitem___244126, key_244124)
    
    # Obtaining the member '__getitem__' of a type (line 138)
    getitem___244128 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 138, 8), subscript_call_result_244127, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 138)
    subscript_call_result_244129 = invoke(stypy.reporting.localization.Localization(__file__, 138, 8), getitem___244128, int_244123)
    
    # Assigning a type to the variable 'tuple_var_assignment_243689' (line 138)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 138, 8), 'tuple_var_assignment_243689', subscript_call_result_244129)
    
    # Assigning a Name to a Name (line 138):
    # Getting the type of 'tuple_var_assignment_243688' (line 138)
    tuple_var_assignment_243688_244130 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 138, 8), 'tuple_var_assignment_243688')
    # Assigning a type to the variable 'pw' (line 138)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 138, 8), 'pw', tuple_var_assignment_243688_244130)
    
    # Assigning a Name to a Name (line 138):
    # Getting the type of 'tuple_var_assignment_243689' (line 138)
    tuple_var_assignment_243689_244131 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 138, 8), 'tuple_var_assignment_243689')
    # Assigning a type to the variable 'ph' (line 138)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 138, 12), 'ph', tuple_var_assignment_243689_244131)
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'w' (line 139)
    w_244132 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 139, 12), 'w')
    # Getting the type of 'pw' (line 139)
    pw_244133 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 139, 16), 'pw')
    # Applying the binary operator '<' (line 139)
    result_lt_244134 = python_operator(stypy.reporting.localization.Localization(__file__, 139, 12), '<', w_244132, pw_244133)
    
    
    # Getting the type of 'h' (line 139)
    h_244135 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 139, 25), 'h')
    # Getting the type of 'ph' (line 139)
    ph_244136 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 139, 29), 'ph')
    # Applying the binary operator '<' (line 139)
    result_lt_244137 = python_operator(stypy.reporting.localization.Localization(__file__, 139, 25), '<', h_244135, ph_244136)
    
    # Applying the binary operator 'and' (line 139)
    result_and_keyword_244138 = python_operator(stypy.reporting.localization.Localization(__file__, 139, 11), 'and', result_lt_244134, result_lt_244137)
    
    # Testing the type of an if condition (line 139)
    if_condition_244139 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 139, 8), result_and_keyword_244138)
    # Assigning a type to the variable 'if_condition_244139' (line 139)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 139, 8), 'if_condition_244139', if_condition_244139)
    # SSA begins for if statement (line 139)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Getting the type of 'key' (line 139)
    key_244140 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 139, 41), 'key')
    # Assigning a type to the variable 'stypy_return_type' (line 139)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 139, 34), 'stypy_return_type', key_244140)
    # SSA join for if statement (line 139)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    unicode_244141 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 140, 11), 'unicode', u'a0')
    # Assigning a type to the variable 'stypy_return_type' (line 140)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 140, 4), 'stypy_return_type', unicode_244141)
    
    # ################# End of '_get_papertype(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function '_get_papertype' in the type store
    # Getting the type of 'stypy_return_type' (line 132)
    stypy_return_type_244142 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 132, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_244142)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function '_get_papertype'
    return stypy_return_type_244142

# Assigning a type to the variable '_get_papertype' (line 132)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 132, 0), '_get_papertype', _get_papertype)

@norecursion
def _num_to_str(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function '_num_to_str'
    module_type_store = module_type_store.open_function_context('_num_to_str', 142, 0, False)
    
    # Passed parameters checking function
    _num_to_str.stypy_localization = localization
    _num_to_str.stypy_type_of_self = None
    _num_to_str.stypy_type_store = module_type_store
    _num_to_str.stypy_function_name = '_num_to_str'
    _num_to_str.stypy_param_names_list = ['val']
    _num_to_str.stypy_varargs_param_name = None
    _num_to_str.stypy_kwargs_param_name = None
    _num_to_str.stypy_call_defaults = defaults
    _num_to_str.stypy_call_varargs = varargs
    _num_to_str.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, '_num_to_str', ['val'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, '_num_to_str', localization, ['val'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of '_num_to_str(...)' code ##################

    
    
    # Call to isinstance(...): (line 143)
    # Processing the call arguments (line 143)
    # Getting the type of 'val' (line 143)
    val_244144 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 143, 18), 'val', False)
    # Getting the type of 'six' (line 143)
    six_244145 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 143, 23), 'six', False)
    # Obtaining the member 'string_types' of a type (line 143)
    string_types_244146 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 143, 23), six_244145, 'string_types')
    # Processing the call keyword arguments (line 143)
    kwargs_244147 = {}
    # Getting the type of 'isinstance' (line 143)
    isinstance_244143 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 143, 7), 'isinstance', False)
    # Calling isinstance(args, kwargs) (line 143)
    isinstance_call_result_244148 = invoke(stypy.reporting.localization.Localization(__file__, 143, 7), isinstance_244143, *[val_244144, string_types_244146], **kwargs_244147)
    
    # Testing the type of an if condition (line 143)
    if_condition_244149 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 143, 4), isinstance_call_result_244148)
    # Assigning a type to the variable 'if_condition_244149' (line 143)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 143, 4), 'if_condition_244149', if_condition_244149)
    # SSA begins for if statement (line 143)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Getting the type of 'val' (line 143)
    val_244150 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 143, 49), 'val')
    # Assigning a type to the variable 'stypy_return_type' (line 143)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 143, 42), 'stypy_return_type', val_244150)
    # SSA join for if statement (line 143)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 145):
    
    # Assigning a Call to a Name (line 145):
    
    # Call to int(...): (line 145)
    # Processing the call arguments (line 145)
    # Getting the type of 'val' (line 145)
    val_244152 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 145, 15), 'val', False)
    # Processing the call keyword arguments (line 145)
    kwargs_244153 = {}
    # Getting the type of 'int' (line 145)
    int_244151 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 145, 11), 'int', False)
    # Calling int(args, kwargs) (line 145)
    int_call_result_244154 = invoke(stypy.reporting.localization.Localization(__file__, 145, 11), int_244151, *[val_244152], **kwargs_244153)
    
    # Assigning a type to the variable 'ival' (line 145)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 145, 4), 'ival', int_call_result_244154)
    
    
    # Getting the type of 'val' (line 146)
    val_244155 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 146, 7), 'val')
    # Getting the type of 'ival' (line 146)
    ival_244156 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 146, 14), 'ival')
    # Applying the binary operator '==' (line 146)
    result_eq_244157 = python_operator(stypy.reporting.localization.Localization(__file__, 146, 7), '==', val_244155, ival_244156)
    
    # Testing the type of an if condition (line 146)
    if_condition_244158 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 146, 4), result_eq_244157)
    # Assigning a type to the variable 'if_condition_244158' (line 146)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 146, 4), 'if_condition_244158', if_condition_244158)
    # SSA begins for if statement (line 146)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to str(...): (line 146)
    # Processing the call arguments (line 146)
    # Getting the type of 'ival' (line 146)
    ival_244160 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 146, 31), 'ival', False)
    # Processing the call keyword arguments (line 146)
    kwargs_244161 = {}
    # Getting the type of 'str' (line 146)
    str_244159 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 146, 27), 'str', False)
    # Calling str(args, kwargs) (line 146)
    str_call_result_244162 = invoke(stypy.reporting.localization.Localization(__file__, 146, 27), str_244159, *[ival_244160], **kwargs_244161)
    
    # Assigning a type to the variable 'stypy_return_type' (line 146)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 146, 20), 'stypy_return_type', str_call_result_244162)
    # SSA join for if statement (line 146)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a BinOp to a Name (line 148):
    
    # Assigning a BinOp to a Name (line 148):
    unicode_244163 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 148, 8), 'unicode', u'%1.3f')
    # Getting the type of 'val' (line 148)
    val_244164 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 148, 16), 'val')
    # Applying the binary operator '%' (line 148)
    result_mod_244165 = python_operator(stypy.reporting.localization.Localization(__file__, 148, 8), '%', unicode_244163, val_244164)
    
    # Assigning a type to the variable 's' (line 148)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 148, 4), 's', result_mod_244165)
    
    # Assigning a Call to a Name (line 149):
    
    # Assigning a Call to a Name (line 149):
    
    # Call to rstrip(...): (line 149)
    # Processing the call arguments (line 149)
    unicode_244168 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 149, 17), 'unicode', u'0')
    # Processing the call keyword arguments (line 149)
    kwargs_244169 = {}
    # Getting the type of 's' (line 149)
    s_244166 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 149, 8), 's', False)
    # Obtaining the member 'rstrip' of a type (line 149)
    rstrip_244167 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 149, 8), s_244166, 'rstrip')
    # Calling rstrip(args, kwargs) (line 149)
    rstrip_call_result_244170 = invoke(stypy.reporting.localization.Localization(__file__, 149, 8), rstrip_244167, *[unicode_244168], **kwargs_244169)
    
    # Assigning a type to the variable 's' (line 149)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 149, 4), 's', rstrip_call_result_244170)
    
    # Assigning a Call to a Name (line 150):
    
    # Assigning a Call to a Name (line 150):
    
    # Call to rstrip(...): (line 150)
    # Processing the call arguments (line 150)
    unicode_244173 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 150, 17), 'unicode', u'.')
    # Processing the call keyword arguments (line 150)
    kwargs_244174 = {}
    # Getting the type of 's' (line 150)
    s_244171 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 150, 8), 's', False)
    # Obtaining the member 'rstrip' of a type (line 150)
    rstrip_244172 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 150, 8), s_244171, 'rstrip')
    # Calling rstrip(args, kwargs) (line 150)
    rstrip_call_result_244175 = invoke(stypy.reporting.localization.Localization(__file__, 150, 8), rstrip_244172, *[unicode_244173], **kwargs_244174)
    
    # Assigning a type to the variable 's' (line 150)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 150, 4), 's', rstrip_call_result_244175)
    # Getting the type of 's' (line 151)
    s_244176 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 151, 11), 's')
    # Assigning a type to the variable 'stypy_return_type' (line 151)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 151, 4), 'stypy_return_type', s_244176)
    
    # ################# End of '_num_to_str(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function '_num_to_str' in the type store
    # Getting the type of 'stypy_return_type' (line 142)
    stypy_return_type_244177 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 142, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_244177)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function '_num_to_str'
    return stypy_return_type_244177

# Assigning a type to the variable '_num_to_str' (line 142)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 142, 0), '_num_to_str', _num_to_str)

@norecursion
def _nums_to_str(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function '_nums_to_str'
    module_type_store = module_type_store.open_function_context('_nums_to_str', 153, 0, False)
    
    # Passed parameters checking function
    _nums_to_str.stypy_localization = localization
    _nums_to_str.stypy_type_of_self = None
    _nums_to_str.stypy_type_store = module_type_store
    _nums_to_str.stypy_function_name = '_nums_to_str'
    _nums_to_str.stypy_param_names_list = []
    _nums_to_str.stypy_varargs_param_name = 'args'
    _nums_to_str.stypy_kwargs_param_name = None
    _nums_to_str.stypy_call_defaults = defaults
    _nums_to_str.stypy_call_varargs = varargs
    _nums_to_str.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, '_nums_to_str', [], 'args', None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, '_nums_to_str', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of '_nums_to_str(...)' code ##################

    
    # Call to join(...): (line 154)
    # Processing the call arguments (line 154)
    
    # Call to map(...): (line 154)
    # Processing the call arguments (line 154)
    # Getting the type of '_num_to_str' (line 154)
    _num_to_str_244181 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 154, 24), '_num_to_str', False)
    # Getting the type of 'args' (line 154)
    args_244182 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 154, 36), 'args', False)
    # Processing the call keyword arguments (line 154)
    kwargs_244183 = {}
    # Getting the type of 'map' (line 154)
    map_244180 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 154, 20), 'map', False)
    # Calling map(args, kwargs) (line 154)
    map_call_result_244184 = invoke(stypy.reporting.localization.Localization(__file__, 154, 20), map_244180, *[_num_to_str_244181, args_244182], **kwargs_244183)
    
    # Processing the call keyword arguments (line 154)
    kwargs_244185 = {}
    unicode_244178 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 154, 11), 'unicode', u' ')
    # Obtaining the member 'join' of a type (line 154)
    join_244179 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 154, 11), unicode_244178, 'join')
    # Calling join(args, kwargs) (line 154)
    join_call_result_244186 = invoke(stypy.reporting.localization.Localization(__file__, 154, 11), join_244179, *[map_call_result_244184], **kwargs_244185)
    
    # Assigning a type to the variable 'stypy_return_type' (line 154)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 154, 4), 'stypy_return_type', join_call_result_244186)
    
    # ################# End of '_nums_to_str(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function '_nums_to_str' in the type store
    # Getting the type of 'stypy_return_type' (line 153)
    stypy_return_type_244187 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 153, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_244187)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function '_nums_to_str'
    return stypy_return_type_244187

# Assigning a type to the variable '_nums_to_str' (line 153)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 153, 0), '_nums_to_str', _nums_to_str)

@norecursion
def quote_ps_string(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'quote_ps_string'
    module_type_store = module_type_store.open_function_context('quote_ps_string', 157, 0, False)
    
    # Passed parameters checking function
    quote_ps_string.stypy_localization = localization
    quote_ps_string.stypy_type_of_self = None
    quote_ps_string.stypy_type_store = module_type_store
    quote_ps_string.stypy_function_name = 'quote_ps_string'
    quote_ps_string.stypy_param_names_list = ['s']
    quote_ps_string.stypy_varargs_param_name = None
    quote_ps_string.stypy_kwargs_param_name = None
    quote_ps_string.stypy_call_defaults = defaults
    quote_ps_string.stypy_call_varargs = varargs
    quote_ps_string.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'quote_ps_string', ['s'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'quote_ps_string', localization, ['s'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'quote_ps_string(...)' code ##################

    unicode_244188 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 158, 4), 'unicode', u'Quote dangerous characters of S for use in a PostScript string constant.')
    
    # Assigning a Call to a Name (line 159):
    
    # Assigning a Call to a Name (line 159):
    
    # Call to replace(...): (line 159)
    # Processing the call arguments (line 159)
    str_244191 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 159, 18), 'str', '\\')
    str_244192 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 159, 25), 'str', '\\\\')
    # Processing the call keyword arguments (line 159)
    kwargs_244193 = {}
    # Getting the type of 's' (line 159)
    s_244189 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 159, 8), 's', False)
    # Obtaining the member 'replace' of a type (line 159)
    replace_244190 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 159, 8), s_244189, 'replace')
    # Calling replace(args, kwargs) (line 159)
    replace_call_result_244194 = invoke(stypy.reporting.localization.Localization(__file__, 159, 8), replace_244190, *[str_244191, str_244192], **kwargs_244193)
    
    # Assigning a type to the variable 's' (line 159)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 159, 4), 's', replace_call_result_244194)
    
    # Assigning a Call to a Name (line 160):
    
    # Assigning a Call to a Name (line 160):
    
    # Call to replace(...): (line 160)
    # Processing the call arguments (line 160)
    str_244197 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 160, 18), 'str', '(')
    str_244198 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 160, 24), 'str', '\\(')
    # Processing the call keyword arguments (line 160)
    kwargs_244199 = {}
    # Getting the type of 's' (line 160)
    s_244195 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 160, 8), 's', False)
    # Obtaining the member 'replace' of a type (line 160)
    replace_244196 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 160, 8), s_244195, 'replace')
    # Calling replace(args, kwargs) (line 160)
    replace_call_result_244200 = invoke(stypy.reporting.localization.Localization(__file__, 160, 8), replace_244196, *[str_244197, str_244198], **kwargs_244199)
    
    # Assigning a type to the variable 's' (line 160)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 160, 4), 's', replace_call_result_244200)
    
    # Assigning a Call to a Name (line 161):
    
    # Assigning a Call to a Name (line 161):
    
    # Call to replace(...): (line 161)
    # Processing the call arguments (line 161)
    str_244203 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 161, 18), 'str', ')')
    str_244204 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 161, 24), 'str', '\\)')
    # Processing the call keyword arguments (line 161)
    kwargs_244205 = {}
    # Getting the type of 's' (line 161)
    s_244201 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 161, 8), 's', False)
    # Obtaining the member 'replace' of a type (line 161)
    replace_244202 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 161, 8), s_244201, 'replace')
    # Calling replace(args, kwargs) (line 161)
    replace_call_result_244206 = invoke(stypy.reporting.localization.Localization(__file__, 161, 8), replace_244202, *[str_244203, str_244204], **kwargs_244205)
    
    # Assigning a type to the variable 's' (line 161)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 161, 4), 's', replace_call_result_244206)
    
    # Assigning a Call to a Name (line 162):
    
    # Assigning a Call to a Name (line 162):
    
    # Call to replace(...): (line 162)
    # Processing the call arguments (line 162)
    str_244209 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 162, 18), 'str', "'")
    str_244210 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 162, 24), 'str', '\\251')
    # Processing the call keyword arguments (line 162)
    kwargs_244211 = {}
    # Getting the type of 's' (line 162)
    s_244207 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 162, 8), 's', False)
    # Obtaining the member 'replace' of a type (line 162)
    replace_244208 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 162, 8), s_244207, 'replace')
    # Calling replace(args, kwargs) (line 162)
    replace_call_result_244212 = invoke(stypy.reporting.localization.Localization(__file__, 162, 8), replace_244208, *[str_244209, str_244210], **kwargs_244211)
    
    # Assigning a type to the variable 's' (line 162)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 162, 4), 's', replace_call_result_244212)
    
    # Assigning a Call to a Name (line 163):
    
    # Assigning a Call to a Name (line 163):
    
    # Call to replace(...): (line 163)
    # Processing the call arguments (line 163)
    str_244215 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 163, 18), 'str', '`')
    str_244216 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 163, 24), 'str', '\\301')
    # Processing the call keyword arguments (line 163)
    kwargs_244217 = {}
    # Getting the type of 's' (line 163)
    s_244213 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 163, 8), 's', False)
    # Obtaining the member 'replace' of a type (line 163)
    replace_244214 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 163, 8), s_244213, 'replace')
    # Calling replace(args, kwargs) (line 163)
    replace_call_result_244218 = invoke(stypy.reporting.localization.Localization(__file__, 163, 8), replace_244214, *[str_244215, str_244216], **kwargs_244217)
    
    # Assigning a type to the variable 's' (line 163)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 163, 4), 's', replace_call_result_244218)
    
    # Assigning a Call to a Name (line 164):
    
    # Assigning a Call to a Name (line 164):
    
    # Call to sub(...): (line 164)
    # Processing the call arguments (line 164)
    str_244221 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 164, 15), 'str', '[^ -~\\n]')

    @norecursion
    def _stypy_temp_lambda_106(localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_stypy_temp_lambda_106'
        module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_106', 164, 29, True)
        # Passed parameters checking function
        _stypy_temp_lambda_106.stypy_localization = localization
        _stypy_temp_lambda_106.stypy_type_of_self = None
        _stypy_temp_lambda_106.stypy_type_store = module_type_store
        _stypy_temp_lambda_106.stypy_function_name = '_stypy_temp_lambda_106'
        _stypy_temp_lambda_106.stypy_param_names_list = ['x']
        _stypy_temp_lambda_106.stypy_varargs_param_name = None
        _stypy_temp_lambda_106.stypy_kwargs_param_name = None
        _stypy_temp_lambda_106.stypy_call_defaults = defaults
        _stypy_temp_lambda_106.stypy_call_varargs = varargs
        _stypy_temp_lambda_106.stypy_call_kwargs = kwargs
        arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_106', ['x'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Stacktrace push for error reporting
        localization.set_stack_trace('_stypy_temp_lambda_106', ['x'], arguments)
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of the lambda function code ##################

        str_244222 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 164, 39), 'str', '\\%03o')
        
        # Call to ord(...): (line 164)
        # Processing the call arguments (line 164)
        
        # Call to group(...): (line 164)
        # Processing the call keyword arguments (line 164)
        kwargs_244226 = {}
        # Getting the type of 'x' (line 164)
        x_244224 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 164, 55), 'x', False)
        # Obtaining the member 'group' of a type (line 164)
        group_244225 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 164, 55), x_244224, 'group')
        # Calling group(args, kwargs) (line 164)
        group_call_result_244227 = invoke(stypy.reporting.localization.Localization(__file__, 164, 55), group_244225, *[], **kwargs_244226)
        
        # Processing the call keyword arguments (line 164)
        kwargs_244228 = {}
        # Getting the type of 'ord' (line 164)
        ord_244223 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 164, 51), 'ord', False)
        # Calling ord(args, kwargs) (line 164)
        ord_call_result_244229 = invoke(stypy.reporting.localization.Localization(__file__, 164, 51), ord_244223, *[group_call_result_244227], **kwargs_244228)
        
        # Applying the binary operator '%' (line 164)
        result_mod_244230 = python_operator(stypy.reporting.localization.Localization(__file__, 164, 39), '%', str_244222, ord_call_result_244229)
        
        # Assigning the return type of the lambda function
        # Assigning a type to the variable 'stypy_return_type' (line 164)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 164, 29), 'stypy_return_type', result_mod_244230)
        
        # ################# End of the lambda function code ##################

        # Stacktrace pop (error reporting)
        localization.unset_stack_trace()
        
        # Storing the return type of function '_stypy_temp_lambda_106' in the type store
        # Getting the type of 'stypy_return_type' (line 164)
        stypy_return_type_244231 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 164, 29), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_244231)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_stypy_temp_lambda_106'
        return stypy_return_type_244231

    # Assigning a type to the variable '_stypy_temp_lambda_106' (line 164)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 164, 29), '_stypy_temp_lambda_106', _stypy_temp_lambda_106)
    # Getting the type of '_stypy_temp_lambda_106' (line 164)
    _stypy_temp_lambda_106_244232 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 164, 29), '_stypy_temp_lambda_106')
    # Getting the type of 's' (line 164)
    s_244233 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 164, 67), 's', False)
    # Processing the call keyword arguments (line 164)
    kwargs_244234 = {}
    # Getting the type of 're' (line 164)
    re_244219 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 164, 8), 're', False)
    # Obtaining the member 'sub' of a type (line 164)
    sub_244220 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 164, 8), re_244219, 'sub')
    # Calling sub(args, kwargs) (line 164)
    sub_call_result_244235 = invoke(stypy.reporting.localization.Localization(__file__, 164, 8), sub_244220, *[str_244221, _stypy_temp_lambda_106_244232, s_244233], **kwargs_244234)
    
    # Assigning a type to the variable 's' (line 164)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 164, 4), 's', sub_call_result_244235)
    
    # Call to decode(...): (line 165)
    # Processing the call arguments (line 165)
    unicode_244238 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 165, 20), 'unicode', u'ascii')
    # Processing the call keyword arguments (line 165)
    kwargs_244239 = {}
    # Getting the type of 's' (line 165)
    s_244236 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 165, 11), 's', False)
    # Obtaining the member 'decode' of a type (line 165)
    decode_244237 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 165, 11), s_244236, 'decode')
    # Calling decode(args, kwargs) (line 165)
    decode_call_result_244240 = invoke(stypy.reporting.localization.Localization(__file__, 165, 11), decode_244237, *[unicode_244238], **kwargs_244239)
    
    # Assigning a type to the variable 'stypy_return_type' (line 165)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 165, 4), 'stypy_return_type', decode_call_result_244240)
    
    # ################# End of 'quote_ps_string(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'quote_ps_string' in the type store
    # Getting the type of 'stypy_return_type' (line 157)
    stypy_return_type_244241 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 157, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_244241)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'quote_ps_string'
    return stypy_return_type_244241

# Assigning a type to the variable 'quote_ps_string' (line 157)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 157, 0), 'quote_ps_string', quote_ps_string)
# Declaration of the 'RendererPS' class
# Getting the type of 'RendererBase' (line 168)
RendererBase_244242 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 168, 17), 'RendererBase')

class RendererPS(RendererBase_244242, ):
    unicode_244243 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 172, (-1)), 'unicode', u'\n    The renderer handles all the drawing primitives using a graphics\n    context instance that controls the colors/styles.\n    ')
    
    # Assigning a Call to a Name (line 174):

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        int_244244 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 176, 57), 'int')
        defaults = [int_244244]
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 176, 4, False)
        # Assigning a type to the variable 'self' (line 177)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 177, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererPS.__init__', ['width', 'height', 'pswriter', 'imagedpi'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['width', 'height', 'pswriter', 'imagedpi'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        unicode_244245 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 181, (-1)), 'unicode', u'\n        Although postscript itself is dpi independent, we need to\n        imform the image code about a requested dpi to generate high\n        res images and them scale them before embeddin them\n        ')
        
        # Call to __init__(...): (line 182)
        # Processing the call arguments (line 182)
        # Getting the type of 'self' (line 182)
        self_244248 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 182, 30), 'self', False)
        # Processing the call keyword arguments (line 182)
        kwargs_244249 = {}
        # Getting the type of 'RendererBase' (line 182)
        RendererBase_244246 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 182, 8), 'RendererBase', False)
        # Obtaining the member '__init__' of a type (line 182)
        init___244247 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 182, 8), RendererBase_244246, '__init__')
        # Calling __init__(args, kwargs) (line 182)
        init___call_result_244250 = invoke(stypy.reporting.localization.Localization(__file__, 182, 8), init___244247, *[self_244248], **kwargs_244249)
        
        
        # Assigning a Name to a Attribute (line 183):
        
        # Assigning a Name to a Attribute (line 183):
        # Getting the type of 'width' (line 183)
        width_244251 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 183, 21), 'width')
        # Getting the type of 'self' (line 183)
        self_244252 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 183, 8), 'self')
        # Setting the type of the member 'width' of a type (line 183)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 183, 8), self_244252, 'width', width_244251)
        
        # Assigning a Name to a Attribute (line 184):
        
        # Assigning a Name to a Attribute (line 184):
        # Getting the type of 'height' (line 184)
        height_244253 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 184, 22), 'height')
        # Getting the type of 'self' (line 184)
        self_244254 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 184, 8), 'self')
        # Setting the type of the member 'height' of a type (line 184)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 184, 8), self_244254, 'height', height_244253)
        
        # Assigning a Name to a Attribute (line 185):
        
        # Assigning a Name to a Attribute (line 185):
        # Getting the type of 'pswriter' (line 185)
        pswriter_244255 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 185, 25), 'pswriter')
        # Getting the type of 'self' (line 185)
        self_244256 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 185, 8), 'self')
        # Setting the type of the member '_pswriter' of a type (line 185)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 185, 8), self_244256, '_pswriter', pswriter_244255)
        
        
        # Obtaining the type of the subscript
        unicode_244257 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 186, 20), 'unicode', u'text.usetex')
        # Getting the type of 'rcParams' (line 186)
        rcParams_244258 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 186, 11), 'rcParams')
        # Obtaining the member '__getitem__' of a type (line 186)
        getitem___244259 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 186, 11), rcParams_244258, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 186)
        subscript_call_result_244260 = invoke(stypy.reporting.localization.Localization(__file__, 186, 11), getitem___244259, unicode_244257)
        
        # Testing the type of an if condition (line 186)
        if_condition_244261 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 186, 8), subscript_call_result_244260)
        # Assigning a type to the variable 'if_condition_244261' (line 186)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 186, 8), 'if_condition_244261', if_condition_244261)
        # SSA begins for if statement (line 186)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Num to a Attribute (line 187):
        
        # Assigning a Num to a Attribute (line 187):
        int_244262 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 187, 27), 'int')
        # Getting the type of 'self' (line 187)
        self_244263 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 187, 12), 'self')
        # Setting the type of the member 'textcnt' of a type (line 187)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 187, 12), self_244263, 'textcnt', int_244262)
        
        # Assigning a List to a Attribute (line 188):
        
        # Assigning a List to a Attribute (line 188):
        
        # Obtaining an instance of the builtin type 'list' (line 188)
        list_244264 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 188, 26), 'list')
        # Adding type elements to the builtin type 'list' instance (line 188)
        
        # Getting the type of 'self' (line 188)
        self_244265 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 188, 12), 'self')
        # Setting the type of the member 'psfrag' of a type (line 188)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 188, 12), self_244265, 'psfrag', list_244264)
        # SSA join for if statement (line 186)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Name to a Attribute (line 189):
        
        # Assigning a Name to a Attribute (line 189):
        # Getting the type of 'imagedpi' (line 189)
        imagedpi_244266 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 189, 24), 'imagedpi')
        # Getting the type of 'self' (line 189)
        self_244267 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 189, 8), 'self')
        # Setting the type of the member 'imagedpi' of a type (line 189)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 189, 8), self_244267, 'imagedpi', imagedpi_244266)
        
        # Assigning a Name to a Attribute (line 192):
        
        # Assigning a Name to a Attribute (line 192):
        # Getting the type of 'None' (line 192)
        None_244268 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 192, 21), 'None')
        # Getting the type of 'self' (line 192)
        self_244269 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 192, 8), 'self')
        # Setting the type of the member 'color' of a type (line 192)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 192, 8), self_244269, 'color', None_244268)
        
        # Assigning a Name to a Attribute (line 193):
        
        # Assigning a Name to a Attribute (line 193):
        # Getting the type of 'None' (line 193)
        None_244270 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 193, 25), 'None')
        # Getting the type of 'self' (line 193)
        self_244271 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 193, 8), 'self')
        # Setting the type of the member 'linewidth' of a type (line 193)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 193, 8), self_244271, 'linewidth', None_244270)
        
        # Assigning a Name to a Attribute (line 194):
        
        # Assigning a Name to a Attribute (line 194):
        # Getting the type of 'None' (line 194)
        None_244272 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 194, 24), 'None')
        # Getting the type of 'self' (line 194)
        self_244273 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 194, 8), 'self')
        # Setting the type of the member 'linejoin' of a type (line 194)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 194, 8), self_244273, 'linejoin', None_244272)
        
        # Assigning a Name to a Attribute (line 195):
        
        # Assigning a Name to a Attribute (line 195):
        # Getting the type of 'None' (line 195)
        None_244274 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 195, 23), 'None')
        # Getting the type of 'self' (line 195)
        self_244275 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 195, 8), 'self')
        # Setting the type of the member 'linecap' of a type (line 195)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 195, 8), self_244275, 'linecap', None_244274)
        
        # Assigning a Name to a Attribute (line 196):
        
        # Assigning a Name to a Attribute (line 196):
        # Getting the type of 'None' (line 196)
        None_244276 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 196, 24), 'None')
        # Getting the type of 'self' (line 196)
        self_244277 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 196, 8), 'self')
        # Setting the type of the member 'linedash' of a type (line 196)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 196, 8), self_244277, 'linedash', None_244276)
        
        # Assigning a Name to a Attribute (line 197):
        
        # Assigning a Name to a Attribute (line 197):
        # Getting the type of 'None' (line 197)
        None_244278 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 197, 24), 'None')
        # Getting the type of 'self' (line 197)
        self_244279 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 197, 8), 'self')
        # Setting the type of the member 'fontname' of a type (line 197)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 197, 8), self_244279, 'fontname', None_244278)
        
        # Assigning a Name to a Attribute (line 198):
        
        # Assigning a Name to a Attribute (line 198):
        # Getting the type of 'None' (line 198)
        None_244280 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 198, 24), 'None')
        # Getting the type of 'self' (line 198)
        self_244281 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 198, 8), 'self')
        # Setting the type of the member 'fontsize' of a type (line 198)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 198, 8), self_244281, 'fontsize', None_244280)
        
        # Assigning a Dict to a Attribute (line 199):
        
        # Assigning a Dict to a Attribute (line 199):
        
        # Obtaining an instance of the builtin type 'dict' (line 199)
        dict_244282 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 199, 24), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 199)
        
        # Getting the type of 'self' (line 199)
        self_244283 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 199, 8), 'self')
        # Setting the type of the member '_hatches' of a type (line 199)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 199, 8), self_244283, '_hatches', dict_244282)
        
        # Assigning a BinOp to a Attribute (line 200):
        
        # Assigning a BinOp to a Attribute (line 200):
        # Getting the type of 'imagedpi' (line 200)
        imagedpi_244284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 200, 35), 'imagedpi')
        float_244285 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 200, 44), 'float')
        # Applying the binary operator 'div' (line 200)
        result_div_244286 = python_operator(stypy.reporting.localization.Localization(__file__, 200, 35), 'div', imagedpi_244284, float_244285)
        
        # Getting the type of 'self' (line 200)
        self_244287 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 200, 8), 'self')
        # Setting the type of the member 'image_magnification' of a type (line 200)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 200, 8), self_244287, 'image_magnification', result_div_244286)
        
        # Assigning a Dict to a Attribute (line 201):
        
        # Assigning a Dict to a Attribute (line 201):
        
        # Obtaining an instance of the builtin type 'dict' (line 201)
        dict_244288 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 201, 27), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 201)
        
        # Getting the type of 'self' (line 201)
        self_244289 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 201, 8), 'self')
        # Setting the type of the member '_clip_paths' of a type (line 201)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 201, 8), self_244289, '_clip_paths', dict_244288)
        
        # Assigning a Num to a Attribute (line 202):
        
        # Assigning a Num to a Attribute (line 202):
        int_244290 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 202, 35), 'int')
        # Getting the type of 'self' (line 202)
        self_244291 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 202, 8), 'self')
        # Setting the type of the member '_path_collection_id' of a type (line 202)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 202, 8), self_244291, '_path_collection_id', int_244290)
        
        # Assigning a Dict to a Attribute (line 204):
        
        # Assigning a Dict to a Attribute (line 204):
        
        # Obtaining an instance of the builtin type 'dict' (line 204)
        dict_244292 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 204, 31), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 204)
        
        # Getting the type of 'self' (line 204)
        self_244293 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 204, 8), 'self')
        # Setting the type of the member 'used_characters' of a type (line 204)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 204, 8), self_244293, 'used_characters', dict_244292)
        
        # Assigning a Call to a Attribute (line 205):
        
        # Assigning a Call to a Attribute (line 205):
        
        # Call to MathTextParser(...): (line 205)
        # Processing the call arguments (line 205)
        unicode_244295 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 205, 46), 'unicode', u'PS')
        # Processing the call keyword arguments (line 205)
        kwargs_244296 = {}
        # Getting the type of 'MathTextParser' (line 205)
        MathTextParser_244294 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 205, 31), 'MathTextParser', False)
        # Calling MathTextParser(args, kwargs) (line 205)
        MathTextParser_call_result_244297 = invoke(stypy.reporting.localization.Localization(__file__, 205, 31), MathTextParser_244294, *[unicode_244295], **kwargs_244296)
        
        # Getting the type of 'self' (line 205)
        self_244298 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 205, 8), 'self')
        # Setting the type of the member 'mathtext_parser' of a type (line 205)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 205, 8), self_244298, 'mathtext_parser', MathTextParser_call_result_244297)
        
        # Assigning a Call to a Attribute (line 207):
        
        # Assigning a Call to a Attribute (line 207):
        
        # Call to join(...): (line 207)
        # Processing the call arguments (line 207)
        
        # Obtaining the type of the subscript
        unicode_244302 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 208, 21), 'unicode', u'datapath')
        # Getting the type of 'rcParams' (line 208)
        rcParams_244303 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 208, 12), 'rcParams', False)
        # Obtaining the member '__getitem__' of a type (line 208)
        getitem___244304 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 208, 12), rcParams_244303, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 208)
        subscript_call_result_244305 = invoke(stypy.reporting.localization.Localization(__file__, 208, 12), getitem___244304, unicode_244302)
        
        unicode_244306 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 208, 34), 'unicode', u'fonts')
        unicode_244307 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 208, 43), 'unicode', u'afm')
        # Processing the call keyword arguments (line 207)
        kwargs_244308 = {}
        # Getting the type of 'os' (line 207)
        os_244299 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 207, 29), 'os', False)
        # Obtaining the member 'path' of a type (line 207)
        path_244300 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 207, 29), os_244299, 'path')
        # Obtaining the member 'join' of a type (line 207)
        join_244301 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 207, 29), path_244300, 'join')
        # Calling join(args, kwargs) (line 207)
        join_call_result_244309 = invoke(stypy.reporting.localization.Localization(__file__, 207, 29), join_244301, *[subscript_call_result_244305, unicode_244306, unicode_244307], **kwargs_244308)
        
        # Getting the type of 'self' (line 207)
        self_244310 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 207, 8), 'self')
        # Setting the type of the member '_afm_font_dir' of a type (line 207)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 207, 8), self_244310, '_afm_font_dir', join_call_result_244309)
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def track_characters(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'track_characters'
        module_type_store = module_type_store.open_function_context('track_characters', 210, 4, False)
        # Assigning a type to the variable 'self' (line 211)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 211, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererPS.track_characters.__dict__.__setitem__('stypy_localization', localization)
        RendererPS.track_characters.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererPS.track_characters.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererPS.track_characters.__dict__.__setitem__('stypy_function_name', 'RendererPS.track_characters')
        RendererPS.track_characters.__dict__.__setitem__('stypy_param_names_list', ['font', 's'])
        RendererPS.track_characters.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererPS.track_characters.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererPS.track_characters.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererPS.track_characters.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererPS.track_characters.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererPS.track_characters.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererPS.track_characters', ['font', 's'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'track_characters', localization, ['font', 's'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'track_characters(...)' code ##################

        unicode_244311 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 212, (-1)), 'unicode', u'Keeps track of which characters are required from\n        each font.')
        
        # Assigning a Call to a Tuple (line 213):
        
        # Assigning a Call to a Name:
        
        # Call to get_realpath_and_stat(...): (line 213)
        # Processing the call arguments (line 213)
        # Getting the type of 'font' (line 213)
        font_244313 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 213, 51), 'font', False)
        # Obtaining the member 'fname' of a type (line 213)
        fname_244314 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 213, 51), font_244313, 'fname')
        # Processing the call keyword arguments (line 213)
        kwargs_244315 = {}
        # Getting the type of 'get_realpath_and_stat' (line 213)
        get_realpath_and_stat_244312 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 213, 29), 'get_realpath_and_stat', False)
        # Calling get_realpath_and_stat(args, kwargs) (line 213)
        get_realpath_and_stat_call_result_244316 = invoke(stypy.reporting.localization.Localization(__file__, 213, 29), get_realpath_and_stat_244312, *[fname_244314], **kwargs_244315)
        
        # Assigning a type to the variable 'call_assignment_243690' (line 213)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 213, 8), 'call_assignment_243690', get_realpath_and_stat_call_result_244316)
        
        # Assigning a Call to a Name (line 213):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_244319 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 213, 8), 'int')
        # Processing the call keyword arguments
        kwargs_244320 = {}
        # Getting the type of 'call_assignment_243690' (line 213)
        call_assignment_243690_244317 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 213, 8), 'call_assignment_243690', False)
        # Obtaining the member '__getitem__' of a type (line 213)
        getitem___244318 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 213, 8), call_assignment_243690_244317, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_244321 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___244318, *[int_244319], **kwargs_244320)
        
        # Assigning a type to the variable 'call_assignment_243691' (line 213)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 213, 8), 'call_assignment_243691', getitem___call_result_244321)
        
        # Assigning a Name to a Name (line 213):
        # Getting the type of 'call_assignment_243691' (line 213)
        call_assignment_243691_244322 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 213, 8), 'call_assignment_243691')
        # Assigning a type to the variable 'realpath' (line 213)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 213, 8), 'realpath', call_assignment_243691_244322)
        
        # Assigning a Call to a Name (line 213):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_244325 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 213, 8), 'int')
        # Processing the call keyword arguments
        kwargs_244326 = {}
        # Getting the type of 'call_assignment_243690' (line 213)
        call_assignment_243690_244323 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 213, 8), 'call_assignment_243690', False)
        # Obtaining the member '__getitem__' of a type (line 213)
        getitem___244324 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 213, 8), call_assignment_243690_244323, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_244327 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___244324, *[int_244325], **kwargs_244326)
        
        # Assigning a type to the variable 'call_assignment_243692' (line 213)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 213, 8), 'call_assignment_243692', getitem___call_result_244327)
        
        # Assigning a Name to a Name (line 213):
        # Getting the type of 'call_assignment_243692' (line 213)
        call_assignment_243692_244328 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 213, 8), 'call_assignment_243692')
        # Assigning a type to the variable 'stat_key' (line 213)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 213, 18), 'stat_key', call_assignment_243692_244328)
        
        # Assigning a Call to a Name (line 214):
        
        # Assigning a Call to a Name (line 214):
        
        # Call to setdefault(...): (line 214)
        # Processing the call arguments (line 214)
        # Getting the type of 'stat_key' (line 215)
        stat_key_244332 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 215, 12), 'stat_key', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 215)
        tuple_244333 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 215, 23), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 215)
        # Adding element type (line 215)
        # Getting the type of 'realpath' (line 215)
        realpath_244334 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 215, 23), 'realpath', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 215, 23), tuple_244333, realpath_244334)
        # Adding element type (line 215)
        
        # Call to set(...): (line 215)
        # Processing the call keyword arguments (line 215)
        kwargs_244336 = {}
        # Getting the type of 'set' (line 215)
        set_244335 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 215, 33), 'set', False)
        # Calling set(args, kwargs) (line 215)
        set_call_result_244337 = invoke(stypy.reporting.localization.Localization(__file__, 215, 33), set_244335, *[], **kwargs_244336)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 215, 23), tuple_244333, set_call_result_244337)
        
        # Processing the call keyword arguments (line 214)
        kwargs_244338 = {}
        # Getting the type of 'self' (line 214)
        self_244329 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 214, 26), 'self', False)
        # Obtaining the member 'used_characters' of a type (line 214)
        used_characters_244330 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 214, 26), self_244329, 'used_characters')
        # Obtaining the member 'setdefault' of a type (line 214)
        setdefault_244331 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 214, 26), used_characters_244330, 'setdefault')
        # Calling setdefault(args, kwargs) (line 214)
        setdefault_call_result_244339 = invoke(stypy.reporting.localization.Localization(__file__, 214, 26), setdefault_244331, *[stat_key_244332, tuple_244333], **kwargs_244338)
        
        # Assigning a type to the variable 'used_characters' (line 214)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 214, 8), 'used_characters', setdefault_call_result_244339)
        
        # Call to update(...): (line 216)
        # Processing the call arguments (line 216)
        # Calculating list comprehension
        # Calculating comprehension expression
        # Getting the type of 's' (line 216)
        s_244349 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 216, 51), 's', False)
        comprehension_244350 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 216, 35), s_244349)
        # Assigning a type to the variable 'x' (line 216)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 216, 35), 'x', comprehension_244350)
        
        # Call to ord(...): (line 216)
        # Processing the call arguments (line 216)
        # Getting the type of 'x' (line 216)
        x_244346 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 216, 39), 'x', False)
        # Processing the call keyword arguments (line 216)
        kwargs_244347 = {}
        # Getting the type of 'ord' (line 216)
        ord_244345 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 216, 35), 'ord', False)
        # Calling ord(args, kwargs) (line 216)
        ord_call_result_244348 = invoke(stypy.reporting.localization.Localization(__file__, 216, 35), ord_244345, *[x_244346], **kwargs_244347)
        
        list_244351 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 216, 35), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 216, 35), list_244351, ord_call_result_244348)
        # Processing the call keyword arguments (line 216)
        kwargs_244352 = {}
        
        # Obtaining the type of the subscript
        int_244340 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 216, 24), 'int')
        # Getting the type of 'used_characters' (line 216)
        used_characters_244341 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 216, 8), 'used_characters', False)
        # Obtaining the member '__getitem__' of a type (line 216)
        getitem___244342 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 216, 8), used_characters_244341, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 216)
        subscript_call_result_244343 = invoke(stypy.reporting.localization.Localization(__file__, 216, 8), getitem___244342, int_244340)
        
        # Obtaining the member 'update' of a type (line 216)
        update_244344 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 216, 8), subscript_call_result_244343, 'update')
        # Calling update(args, kwargs) (line 216)
        update_call_result_244353 = invoke(stypy.reporting.localization.Localization(__file__, 216, 8), update_244344, *[list_244351], **kwargs_244352)
        
        
        # ################# End of 'track_characters(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'track_characters' in the type store
        # Getting the type of 'stypy_return_type' (line 210)
        stypy_return_type_244354 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 210, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_244354)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'track_characters'
        return stypy_return_type_244354


    @norecursion
    def merge_used_characters(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'merge_used_characters'
        module_type_store = module_type_store.open_function_context('merge_used_characters', 218, 4, False)
        # Assigning a type to the variable 'self' (line 219)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 219, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererPS.merge_used_characters.__dict__.__setitem__('stypy_localization', localization)
        RendererPS.merge_used_characters.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererPS.merge_used_characters.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererPS.merge_used_characters.__dict__.__setitem__('stypy_function_name', 'RendererPS.merge_used_characters')
        RendererPS.merge_used_characters.__dict__.__setitem__('stypy_param_names_list', ['other'])
        RendererPS.merge_used_characters.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererPS.merge_used_characters.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererPS.merge_used_characters.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererPS.merge_used_characters.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererPS.merge_used_characters.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererPS.merge_used_characters.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererPS.merge_used_characters', ['other'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'merge_used_characters', localization, ['other'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'merge_used_characters(...)' code ##################

        
        
        # Call to iteritems(...): (line 219)
        # Processing the call arguments (line 219)
        # Getting the type of 'other' (line 219)
        other_244357 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 219, 59), 'other', False)
        # Processing the call keyword arguments (line 219)
        kwargs_244358 = {}
        # Getting the type of 'six' (line 219)
        six_244355 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 219, 45), 'six', False)
        # Obtaining the member 'iteritems' of a type (line 219)
        iteritems_244356 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 219, 45), six_244355, 'iteritems')
        # Calling iteritems(args, kwargs) (line 219)
        iteritems_call_result_244359 = invoke(stypy.reporting.localization.Localization(__file__, 219, 45), iteritems_244356, *[other_244357], **kwargs_244358)
        
        # Testing the type of a for loop iterable (line 219)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 219, 8), iteritems_call_result_244359)
        # Getting the type of the for loop variable (line 219)
        for_loop_var_244360 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 219, 8), iteritems_call_result_244359)
        # Assigning a type to the variable 'stat_key' (line 219)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 219, 8), 'stat_key', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 219, 8), for_loop_var_244360))
        # Assigning a type to the variable 'realpath' (line 219)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 219, 8), 'realpath', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 219, 8), for_loop_var_244360))
        # Assigning a type to the variable 'charset' (line 219)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 219, 8), 'charset', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 219, 8), for_loop_var_244360))
        # SSA begins for a for statement (line 219)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 220):
        
        # Assigning a Call to a Name (line 220):
        
        # Call to setdefault(...): (line 220)
        # Processing the call arguments (line 220)
        # Getting the type of 'stat_key' (line 221)
        stat_key_244364 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 221, 16), 'stat_key', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 221)
        tuple_244365 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 221, 27), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 221)
        # Adding element type (line 221)
        # Getting the type of 'realpath' (line 221)
        realpath_244366 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 221, 27), 'realpath', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 221, 27), tuple_244365, realpath_244366)
        # Adding element type (line 221)
        
        # Call to set(...): (line 221)
        # Processing the call keyword arguments (line 221)
        kwargs_244368 = {}
        # Getting the type of 'set' (line 221)
        set_244367 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 221, 37), 'set', False)
        # Calling set(args, kwargs) (line 221)
        set_call_result_244369 = invoke(stypy.reporting.localization.Localization(__file__, 221, 37), set_244367, *[], **kwargs_244368)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 221, 27), tuple_244365, set_call_result_244369)
        
        # Processing the call keyword arguments (line 220)
        kwargs_244370 = {}
        # Getting the type of 'self' (line 220)
        self_244361 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 220, 30), 'self', False)
        # Obtaining the member 'used_characters' of a type (line 220)
        used_characters_244362 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 220, 30), self_244361, 'used_characters')
        # Obtaining the member 'setdefault' of a type (line 220)
        setdefault_244363 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 220, 30), used_characters_244362, 'setdefault')
        # Calling setdefault(args, kwargs) (line 220)
        setdefault_call_result_244371 = invoke(stypy.reporting.localization.Localization(__file__, 220, 30), setdefault_244363, *[stat_key_244364, tuple_244365], **kwargs_244370)
        
        # Assigning a type to the variable 'used_characters' (line 220)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 220, 12), 'used_characters', setdefault_call_result_244371)
        
        # Call to update(...): (line 222)
        # Processing the call arguments (line 222)
        # Getting the type of 'charset' (line 222)
        charset_244377 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 222, 38), 'charset', False)
        # Processing the call keyword arguments (line 222)
        kwargs_244378 = {}
        
        # Obtaining the type of the subscript
        int_244372 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 222, 28), 'int')
        # Getting the type of 'used_characters' (line 222)
        used_characters_244373 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 222, 12), 'used_characters', False)
        # Obtaining the member '__getitem__' of a type (line 222)
        getitem___244374 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 222, 12), used_characters_244373, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 222)
        subscript_call_result_244375 = invoke(stypy.reporting.localization.Localization(__file__, 222, 12), getitem___244374, int_244372)
        
        # Obtaining the member 'update' of a type (line 222)
        update_244376 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 222, 12), subscript_call_result_244375, 'update')
        # Calling update(args, kwargs) (line 222)
        update_call_result_244379 = invoke(stypy.reporting.localization.Localization(__file__, 222, 12), update_244376, *[charset_244377], **kwargs_244378)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'merge_used_characters(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'merge_used_characters' in the type store
        # Getting the type of 'stypy_return_type' (line 218)
        stypy_return_type_244380 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 218, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_244380)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'merge_used_characters'
        return stypy_return_type_244380


    @norecursion
    def set_color(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        int_244381 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 224, 39), 'int')
        defaults = [int_244381]
        # Create a new context for function 'set_color'
        module_type_store = module_type_store.open_function_context('set_color', 224, 4, False)
        # Assigning a type to the variable 'self' (line 225)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 225, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererPS.set_color.__dict__.__setitem__('stypy_localization', localization)
        RendererPS.set_color.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererPS.set_color.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererPS.set_color.__dict__.__setitem__('stypy_function_name', 'RendererPS.set_color')
        RendererPS.set_color.__dict__.__setitem__('stypy_param_names_list', ['r', 'g', 'b', 'store'])
        RendererPS.set_color.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererPS.set_color.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererPS.set_color.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererPS.set_color.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererPS.set_color.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererPS.set_color.__dict__.__setitem__('stypy_declared_arg_number', 5)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererPS.set_color', ['r', 'g', 'b', 'store'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'set_color', localization, ['r', 'g', 'b', 'store'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'set_color(...)' code ##################

        
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 225)
        tuple_244382 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 225, 12), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 225)
        # Adding element type (line 225)
        # Getting the type of 'r' (line 225)
        r_244383 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 225, 12), 'r')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 225, 12), tuple_244382, r_244383)
        # Adding element type (line 225)
        # Getting the type of 'g' (line 225)
        g_244384 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 225, 14), 'g')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 225, 12), tuple_244382, g_244384)
        # Adding element type (line 225)
        # Getting the type of 'b' (line 225)
        b_244385 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 225, 16), 'b')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 225, 12), tuple_244382, b_244385)
        
        # Getting the type of 'self' (line 225)
        self_244386 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 225, 22), 'self')
        # Obtaining the member 'color' of a type (line 225)
        color_244387 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 225, 22), self_244386, 'color')
        # Applying the binary operator '!=' (line 225)
        result_ne_244388 = python_operator(stypy.reporting.localization.Localization(__file__, 225, 11), '!=', tuple_244382, color_244387)
        
        # Testing the type of an if condition (line 225)
        if_condition_244389 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 225, 8), result_ne_244388)
        # Assigning a type to the variable 'if_condition_244389' (line 225)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 225, 8), 'if_condition_244389', if_condition_244389)
        # SSA begins for if statement (line 225)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        
        # Evaluating a boolean operation
        
        # Getting the type of 'r' (line 226)
        r_244390 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 226, 15), 'r')
        # Getting the type of 'g' (line 226)
        g_244391 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 226, 18), 'g')
        # Applying the binary operator '==' (line 226)
        result_eq_244392 = python_operator(stypy.reporting.localization.Localization(__file__, 226, 15), '==', r_244390, g_244391)
        
        
        # Getting the type of 'r' (line 226)
        r_244393 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 226, 24), 'r')
        # Getting the type of 'b' (line 226)
        b_244394 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 226, 27), 'b')
        # Applying the binary operator '==' (line 226)
        result_eq_244395 = python_operator(stypy.reporting.localization.Localization(__file__, 226, 24), '==', r_244393, b_244394)
        
        # Applying the binary operator 'and' (line 226)
        result_and_keyword_244396 = python_operator(stypy.reporting.localization.Localization(__file__, 226, 15), 'and', result_eq_244392, result_eq_244395)
        
        # Testing the type of an if condition (line 226)
        if_condition_244397 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 226, 12), result_and_keyword_244396)
        # Assigning a type to the variable 'if_condition_244397' (line 226)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 226, 12), 'if_condition_244397', if_condition_244397)
        # SSA begins for if statement (line 226)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to write(...): (line 227)
        # Processing the call arguments (line 227)
        unicode_244401 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 227, 37), 'unicode', u'%1.3f setgray\n')
        # Getting the type of 'r' (line 227)
        r_244402 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 227, 55), 'r', False)
        # Applying the binary operator '%' (line 227)
        result_mod_244403 = python_operator(stypy.reporting.localization.Localization(__file__, 227, 37), '%', unicode_244401, r_244402)
        
        # Processing the call keyword arguments (line 227)
        kwargs_244404 = {}
        # Getting the type of 'self' (line 227)
        self_244398 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 227, 16), 'self', False)
        # Obtaining the member '_pswriter' of a type (line 227)
        _pswriter_244399 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 227, 16), self_244398, '_pswriter')
        # Obtaining the member 'write' of a type (line 227)
        write_244400 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 227, 16), _pswriter_244399, 'write')
        # Calling write(args, kwargs) (line 227)
        write_call_result_244405 = invoke(stypy.reporting.localization.Localization(__file__, 227, 16), write_244400, *[result_mod_244403], **kwargs_244404)
        
        # SSA branch for the else part of an if statement (line 226)
        module_type_store.open_ssa_branch('else')
        
        # Call to write(...): (line 229)
        # Processing the call arguments (line 229)
        unicode_244409 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 229, 37), 'unicode', u'%1.3f %1.3f %1.3f setrgbcolor\n')
        
        # Obtaining an instance of the builtin type 'tuple' (line 229)
        tuple_244410 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 229, 72), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 229)
        # Adding element type (line 229)
        # Getting the type of 'r' (line 229)
        r_244411 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 229, 72), 'r', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 229, 72), tuple_244410, r_244411)
        # Adding element type (line 229)
        # Getting the type of 'g' (line 229)
        g_244412 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 229, 74), 'g', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 229, 72), tuple_244410, g_244412)
        # Adding element type (line 229)
        # Getting the type of 'b' (line 229)
        b_244413 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 229, 76), 'b', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 229, 72), tuple_244410, b_244413)
        
        # Applying the binary operator '%' (line 229)
        result_mod_244414 = python_operator(stypy.reporting.localization.Localization(__file__, 229, 37), '%', unicode_244409, tuple_244410)
        
        # Processing the call keyword arguments (line 229)
        kwargs_244415 = {}
        # Getting the type of 'self' (line 229)
        self_244406 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 229, 16), 'self', False)
        # Obtaining the member '_pswriter' of a type (line 229)
        _pswriter_244407 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 229, 16), self_244406, '_pswriter')
        # Obtaining the member 'write' of a type (line 229)
        write_244408 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 229, 16), _pswriter_244407, 'write')
        # Calling write(args, kwargs) (line 229)
        write_call_result_244416 = invoke(stypy.reporting.localization.Localization(__file__, 229, 16), write_244408, *[result_mod_244414], **kwargs_244415)
        
        # SSA join for if statement (line 226)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'store' (line 230)
        store_244417 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 230, 15), 'store')
        # Testing the type of an if condition (line 230)
        if_condition_244418 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 230, 12), store_244417)
        # Assigning a type to the variable 'if_condition_244418' (line 230)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 230, 12), 'if_condition_244418', if_condition_244418)
        # SSA begins for if statement (line 230)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Tuple to a Attribute (line 230):
        
        # Assigning a Tuple to a Attribute (line 230):
        
        # Obtaining an instance of the builtin type 'tuple' (line 230)
        tuple_244419 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 230, 36), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 230)
        # Adding element type (line 230)
        # Getting the type of 'r' (line 230)
        r_244420 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 230, 36), 'r')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 230, 36), tuple_244419, r_244420)
        # Adding element type (line 230)
        # Getting the type of 'g' (line 230)
        g_244421 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 230, 38), 'g')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 230, 36), tuple_244419, g_244421)
        # Adding element type (line 230)
        # Getting the type of 'b' (line 230)
        b_244422 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 230, 40), 'b')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 230, 36), tuple_244419, b_244422)
        
        # Getting the type of 'self' (line 230)
        self_244423 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 230, 22), 'self')
        # Setting the type of the member 'color' of a type (line 230)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 230, 22), self_244423, 'color', tuple_244419)
        # SSA join for if statement (line 230)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 225)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'set_color(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'set_color' in the type store
        # Getting the type of 'stypy_return_type' (line 224)
        stypy_return_type_244424 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 224, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_244424)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'set_color'
        return stypy_return_type_244424


    @norecursion
    def set_linewidth(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        int_244425 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 232, 45), 'int')
        defaults = [int_244425]
        # Create a new context for function 'set_linewidth'
        module_type_store = module_type_store.open_function_context('set_linewidth', 232, 4, False)
        # Assigning a type to the variable 'self' (line 233)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 233, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererPS.set_linewidth.__dict__.__setitem__('stypy_localization', localization)
        RendererPS.set_linewidth.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererPS.set_linewidth.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererPS.set_linewidth.__dict__.__setitem__('stypy_function_name', 'RendererPS.set_linewidth')
        RendererPS.set_linewidth.__dict__.__setitem__('stypy_param_names_list', ['linewidth', 'store'])
        RendererPS.set_linewidth.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererPS.set_linewidth.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererPS.set_linewidth.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererPS.set_linewidth.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererPS.set_linewidth.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererPS.set_linewidth.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererPS.set_linewidth', ['linewidth', 'store'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'set_linewidth', localization, ['linewidth', 'store'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'set_linewidth(...)' code ##################

        
        # Assigning a Call to a Name (line 233):
        
        # Assigning a Call to a Name (line 233):
        
        # Call to float(...): (line 233)
        # Processing the call arguments (line 233)
        # Getting the type of 'linewidth' (line 233)
        linewidth_244427 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 233, 26), 'linewidth', False)
        # Processing the call keyword arguments (line 233)
        kwargs_244428 = {}
        # Getting the type of 'float' (line 233)
        float_244426 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 233, 20), 'float', False)
        # Calling float(args, kwargs) (line 233)
        float_call_result_244429 = invoke(stypy.reporting.localization.Localization(__file__, 233, 20), float_244426, *[linewidth_244427], **kwargs_244428)
        
        # Assigning a type to the variable 'linewidth' (line 233)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 233, 8), 'linewidth', float_call_result_244429)
        
        
        # Getting the type of 'linewidth' (line 234)
        linewidth_244430 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 234, 11), 'linewidth')
        # Getting the type of 'self' (line 234)
        self_244431 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 234, 24), 'self')
        # Obtaining the member 'linewidth' of a type (line 234)
        linewidth_244432 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 234, 24), self_244431, 'linewidth')
        # Applying the binary operator '!=' (line 234)
        result_ne_244433 = python_operator(stypy.reporting.localization.Localization(__file__, 234, 11), '!=', linewidth_244430, linewidth_244432)
        
        # Testing the type of an if condition (line 234)
        if_condition_244434 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 234, 8), result_ne_244433)
        # Assigning a type to the variable 'if_condition_244434' (line 234)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 234, 8), 'if_condition_244434', if_condition_244434)
        # SSA begins for if statement (line 234)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to write(...): (line 235)
        # Processing the call arguments (line 235)
        unicode_244438 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 235, 33), 'unicode', u'%1.3f setlinewidth\n')
        # Getting the type of 'linewidth' (line 235)
        linewidth_244439 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 235, 56), 'linewidth', False)
        # Applying the binary operator '%' (line 235)
        result_mod_244440 = python_operator(stypy.reporting.localization.Localization(__file__, 235, 33), '%', unicode_244438, linewidth_244439)
        
        # Processing the call keyword arguments (line 235)
        kwargs_244441 = {}
        # Getting the type of 'self' (line 235)
        self_244435 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 235, 12), 'self', False)
        # Obtaining the member '_pswriter' of a type (line 235)
        _pswriter_244436 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 235, 12), self_244435, '_pswriter')
        # Obtaining the member 'write' of a type (line 235)
        write_244437 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 235, 12), _pswriter_244436, 'write')
        # Calling write(args, kwargs) (line 235)
        write_call_result_244442 = invoke(stypy.reporting.localization.Localization(__file__, 235, 12), write_244437, *[result_mod_244440], **kwargs_244441)
        
        
        # Getting the type of 'store' (line 236)
        store_244443 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 236, 15), 'store')
        # Testing the type of an if condition (line 236)
        if_condition_244444 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 236, 12), store_244443)
        # Assigning a type to the variable 'if_condition_244444' (line 236)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 236, 12), 'if_condition_244444', if_condition_244444)
        # SSA begins for if statement (line 236)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Name to a Attribute (line 236):
        
        # Assigning a Name to a Attribute (line 236):
        # Getting the type of 'linewidth' (line 236)
        linewidth_244445 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 236, 39), 'linewidth')
        # Getting the type of 'self' (line 236)
        self_244446 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 236, 22), 'self')
        # Setting the type of the member 'linewidth' of a type (line 236)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 236, 22), self_244446, 'linewidth', linewidth_244445)
        # SSA join for if statement (line 236)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 234)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'set_linewidth(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'set_linewidth' in the type store
        # Getting the type of 'stypy_return_type' (line 232)
        stypy_return_type_244447 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 232, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_244447)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'set_linewidth'
        return stypy_return_type_244447


    @norecursion
    def set_linejoin(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        int_244448 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 238, 43), 'int')
        defaults = [int_244448]
        # Create a new context for function 'set_linejoin'
        module_type_store = module_type_store.open_function_context('set_linejoin', 238, 4, False)
        # Assigning a type to the variable 'self' (line 239)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 239, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererPS.set_linejoin.__dict__.__setitem__('stypy_localization', localization)
        RendererPS.set_linejoin.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererPS.set_linejoin.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererPS.set_linejoin.__dict__.__setitem__('stypy_function_name', 'RendererPS.set_linejoin')
        RendererPS.set_linejoin.__dict__.__setitem__('stypy_param_names_list', ['linejoin', 'store'])
        RendererPS.set_linejoin.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererPS.set_linejoin.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererPS.set_linejoin.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererPS.set_linejoin.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererPS.set_linejoin.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererPS.set_linejoin.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererPS.set_linejoin', ['linejoin', 'store'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'set_linejoin', localization, ['linejoin', 'store'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'set_linejoin(...)' code ##################

        
        
        # Getting the type of 'linejoin' (line 239)
        linejoin_244449 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 239, 11), 'linejoin')
        # Getting the type of 'self' (line 239)
        self_244450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 239, 23), 'self')
        # Obtaining the member 'linejoin' of a type (line 239)
        linejoin_244451 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 239, 23), self_244450, 'linejoin')
        # Applying the binary operator '!=' (line 239)
        result_ne_244452 = python_operator(stypy.reporting.localization.Localization(__file__, 239, 11), '!=', linejoin_244449, linejoin_244451)
        
        # Testing the type of an if condition (line 239)
        if_condition_244453 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 239, 8), result_ne_244452)
        # Assigning a type to the variable 'if_condition_244453' (line 239)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 239, 8), 'if_condition_244453', if_condition_244453)
        # SSA begins for if statement (line 239)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to write(...): (line 240)
        # Processing the call arguments (line 240)
        unicode_244457 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 240, 33), 'unicode', u'%d setlinejoin\n')
        # Getting the type of 'linejoin' (line 240)
        linejoin_244458 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 240, 52), 'linejoin', False)
        # Applying the binary operator '%' (line 240)
        result_mod_244459 = python_operator(stypy.reporting.localization.Localization(__file__, 240, 33), '%', unicode_244457, linejoin_244458)
        
        # Processing the call keyword arguments (line 240)
        kwargs_244460 = {}
        # Getting the type of 'self' (line 240)
        self_244454 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 240, 12), 'self', False)
        # Obtaining the member '_pswriter' of a type (line 240)
        _pswriter_244455 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 240, 12), self_244454, '_pswriter')
        # Obtaining the member 'write' of a type (line 240)
        write_244456 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 240, 12), _pswriter_244455, 'write')
        # Calling write(args, kwargs) (line 240)
        write_call_result_244461 = invoke(stypy.reporting.localization.Localization(__file__, 240, 12), write_244456, *[result_mod_244459], **kwargs_244460)
        
        
        # Getting the type of 'store' (line 241)
        store_244462 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 241, 15), 'store')
        # Testing the type of an if condition (line 241)
        if_condition_244463 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 241, 12), store_244462)
        # Assigning a type to the variable 'if_condition_244463' (line 241)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 241, 12), 'if_condition_244463', if_condition_244463)
        # SSA begins for if statement (line 241)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Name to a Attribute (line 241):
        
        # Assigning a Name to a Attribute (line 241):
        # Getting the type of 'linejoin' (line 241)
        linejoin_244464 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 241, 38), 'linejoin')
        # Getting the type of 'self' (line 241)
        self_244465 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 241, 22), 'self')
        # Setting the type of the member 'linejoin' of a type (line 241)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 241, 22), self_244465, 'linejoin', linejoin_244464)
        # SSA join for if statement (line 241)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 239)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'set_linejoin(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'set_linejoin' in the type store
        # Getting the type of 'stypy_return_type' (line 238)
        stypy_return_type_244466 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 238, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_244466)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'set_linejoin'
        return stypy_return_type_244466


    @norecursion
    def set_linecap(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        int_244467 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 243, 41), 'int')
        defaults = [int_244467]
        # Create a new context for function 'set_linecap'
        module_type_store = module_type_store.open_function_context('set_linecap', 243, 4, False)
        # Assigning a type to the variable 'self' (line 244)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 244, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererPS.set_linecap.__dict__.__setitem__('stypy_localization', localization)
        RendererPS.set_linecap.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererPS.set_linecap.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererPS.set_linecap.__dict__.__setitem__('stypy_function_name', 'RendererPS.set_linecap')
        RendererPS.set_linecap.__dict__.__setitem__('stypy_param_names_list', ['linecap', 'store'])
        RendererPS.set_linecap.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererPS.set_linecap.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererPS.set_linecap.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererPS.set_linecap.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererPS.set_linecap.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererPS.set_linecap.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererPS.set_linecap', ['linecap', 'store'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'set_linecap', localization, ['linecap', 'store'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'set_linecap(...)' code ##################

        
        
        # Getting the type of 'linecap' (line 244)
        linecap_244468 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 244, 11), 'linecap')
        # Getting the type of 'self' (line 244)
        self_244469 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 244, 22), 'self')
        # Obtaining the member 'linecap' of a type (line 244)
        linecap_244470 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 244, 22), self_244469, 'linecap')
        # Applying the binary operator '!=' (line 244)
        result_ne_244471 = python_operator(stypy.reporting.localization.Localization(__file__, 244, 11), '!=', linecap_244468, linecap_244470)
        
        # Testing the type of an if condition (line 244)
        if_condition_244472 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 244, 8), result_ne_244471)
        # Assigning a type to the variable 'if_condition_244472' (line 244)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 244, 8), 'if_condition_244472', if_condition_244472)
        # SSA begins for if statement (line 244)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to write(...): (line 245)
        # Processing the call arguments (line 245)
        unicode_244476 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 245, 33), 'unicode', u'%d setlinecap\n')
        # Getting the type of 'linecap' (line 245)
        linecap_244477 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 245, 51), 'linecap', False)
        # Applying the binary operator '%' (line 245)
        result_mod_244478 = python_operator(stypy.reporting.localization.Localization(__file__, 245, 33), '%', unicode_244476, linecap_244477)
        
        # Processing the call keyword arguments (line 245)
        kwargs_244479 = {}
        # Getting the type of 'self' (line 245)
        self_244473 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 245, 12), 'self', False)
        # Obtaining the member '_pswriter' of a type (line 245)
        _pswriter_244474 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 245, 12), self_244473, '_pswriter')
        # Obtaining the member 'write' of a type (line 245)
        write_244475 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 245, 12), _pswriter_244474, 'write')
        # Calling write(args, kwargs) (line 245)
        write_call_result_244480 = invoke(stypy.reporting.localization.Localization(__file__, 245, 12), write_244475, *[result_mod_244478], **kwargs_244479)
        
        
        # Getting the type of 'store' (line 246)
        store_244481 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 246, 15), 'store')
        # Testing the type of an if condition (line 246)
        if_condition_244482 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 246, 12), store_244481)
        # Assigning a type to the variable 'if_condition_244482' (line 246)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 246, 12), 'if_condition_244482', if_condition_244482)
        # SSA begins for if statement (line 246)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Name to a Attribute (line 246):
        
        # Assigning a Name to a Attribute (line 246):
        # Getting the type of 'linecap' (line 246)
        linecap_244483 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 246, 37), 'linecap')
        # Getting the type of 'self' (line 246)
        self_244484 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 246, 22), 'self')
        # Setting the type of the member 'linecap' of a type (line 246)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 246, 22), self_244484, 'linecap', linecap_244483)
        # SSA join for if statement (line 246)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 244)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'set_linecap(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'set_linecap' in the type store
        # Getting the type of 'stypy_return_type' (line 243)
        stypy_return_type_244485 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 243, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_244485)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'set_linecap'
        return stypy_return_type_244485


    @norecursion
    def set_linedash(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        int_244486 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 248, 46), 'int')
        defaults = [int_244486]
        # Create a new context for function 'set_linedash'
        module_type_store = module_type_store.open_function_context('set_linedash', 248, 4, False)
        # Assigning a type to the variable 'self' (line 249)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 249, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererPS.set_linedash.__dict__.__setitem__('stypy_localization', localization)
        RendererPS.set_linedash.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererPS.set_linedash.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererPS.set_linedash.__dict__.__setitem__('stypy_function_name', 'RendererPS.set_linedash')
        RendererPS.set_linedash.__dict__.__setitem__('stypy_param_names_list', ['offset', 'seq', 'store'])
        RendererPS.set_linedash.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererPS.set_linedash.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererPS.set_linedash.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererPS.set_linedash.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererPS.set_linedash.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererPS.set_linedash.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererPS.set_linedash', ['offset', 'seq', 'store'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'set_linedash', localization, ['offset', 'seq', 'store'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'set_linedash(...)' code ##################

        
        
        # Getting the type of 'self' (line 249)
        self_244487 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 249, 11), 'self')
        # Obtaining the member 'linedash' of a type (line 249)
        linedash_244488 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 249, 11), self_244487, 'linedash')
        # Getting the type of 'None' (line 249)
        None_244489 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 249, 32), 'None')
        # Applying the binary operator 'isnot' (line 249)
        result_is_not_244490 = python_operator(stypy.reporting.localization.Localization(__file__, 249, 11), 'isnot', linedash_244488, None_244489)
        
        # Testing the type of an if condition (line 249)
        if_condition_244491 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 249, 8), result_is_not_244490)
        # Assigning a type to the variable 'if_condition_244491' (line 249)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 249, 8), 'if_condition_244491', if_condition_244491)
        # SSA begins for if statement (line 249)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Attribute to a Tuple (line 250):
        
        # Assigning a Subscript to a Name (line 250):
        
        # Obtaining the type of the subscript
        int_244492 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 250, 12), 'int')
        # Getting the type of 'self' (line 250)
        self_244493 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 250, 27), 'self')
        # Obtaining the member 'linedash' of a type (line 250)
        linedash_244494 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 250, 27), self_244493, 'linedash')
        # Obtaining the member '__getitem__' of a type (line 250)
        getitem___244495 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 250, 12), linedash_244494, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 250)
        subscript_call_result_244496 = invoke(stypy.reporting.localization.Localization(__file__, 250, 12), getitem___244495, int_244492)
        
        # Assigning a type to the variable 'tuple_var_assignment_243693' (line 250)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 250, 12), 'tuple_var_assignment_243693', subscript_call_result_244496)
        
        # Assigning a Subscript to a Name (line 250):
        
        # Obtaining the type of the subscript
        int_244497 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 250, 12), 'int')
        # Getting the type of 'self' (line 250)
        self_244498 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 250, 27), 'self')
        # Obtaining the member 'linedash' of a type (line 250)
        linedash_244499 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 250, 27), self_244498, 'linedash')
        # Obtaining the member '__getitem__' of a type (line 250)
        getitem___244500 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 250, 12), linedash_244499, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 250)
        subscript_call_result_244501 = invoke(stypy.reporting.localization.Localization(__file__, 250, 12), getitem___244500, int_244497)
        
        # Assigning a type to the variable 'tuple_var_assignment_243694' (line 250)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 250, 12), 'tuple_var_assignment_243694', subscript_call_result_244501)
        
        # Assigning a Name to a Name (line 250):
        # Getting the type of 'tuple_var_assignment_243693' (line 250)
        tuple_var_assignment_243693_244502 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 250, 12), 'tuple_var_assignment_243693')
        # Assigning a type to the variable 'oldo' (line 250)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 250, 12), 'oldo', tuple_var_assignment_243693_244502)
        
        # Assigning a Name to a Name (line 250):
        # Getting the type of 'tuple_var_assignment_243694' (line 250)
        tuple_var_assignment_243694_244503 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 250, 12), 'tuple_var_assignment_243694')
        # Assigning a type to the variable 'oldseq' (line 250)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 250, 18), 'oldseq', tuple_var_assignment_243694_244503)
        
        
        # Evaluating a boolean operation
        
        # Call to array_equal(...): (line 251)
        # Processing the call arguments (line 251)
        # Getting the type of 'seq' (line 251)
        seq_244506 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 251, 30), 'seq', False)
        # Getting the type of 'oldseq' (line 251)
        oldseq_244507 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 251, 35), 'oldseq', False)
        # Processing the call keyword arguments (line 251)
        kwargs_244508 = {}
        # Getting the type of 'np' (line 251)
        np_244504 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 251, 15), 'np', False)
        # Obtaining the member 'array_equal' of a type (line 251)
        array_equal_244505 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 251, 15), np_244504, 'array_equal')
        # Calling array_equal(args, kwargs) (line 251)
        array_equal_call_result_244509 = invoke(stypy.reporting.localization.Localization(__file__, 251, 15), array_equal_244505, *[seq_244506, oldseq_244507], **kwargs_244508)
        
        
        # Getting the type of 'oldo' (line 251)
        oldo_244510 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 251, 47), 'oldo')
        # Getting the type of 'offset' (line 251)
        offset_244511 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 251, 55), 'offset')
        # Applying the binary operator '==' (line 251)
        result_eq_244512 = python_operator(stypy.reporting.localization.Localization(__file__, 251, 47), '==', oldo_244510, offset_244511)
        
        # Applying the binary operator 'and' (line 251)
        result_and_keyword_244513 = python_operator(stypy.reporting.localization.Localization(__file__, 251, 15), 'and', array_equal_call_result_244509, result_eq_244512)
        
        # Testing the type of an if condition (line 251)
        if_condition_244514 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 251, 12), result_and_keyword_244513)
        # Assigning a type to the variable 'if_condition_244514' (line 251)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 251, 12), 'if_condition_244514', if_condition_244514)
        # SSA begins for if statement (line 251)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        # Assigning a type to the variable 'stypy_return_type' (line 252)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 252, 16), 'stypy_return_type', types.NoneType)
        # SSA join for if statement (line 251)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 249)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Evaluating a boolean operation
        
        # Getting the type of 'seq' (line 254)
        seq_244515 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 254, 11), 'seq')
        # Getting the type of 'None' (line 254)
        None_244516 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 254, 22), 'None')
        # Applying the binary operator 'isnot' (line 254)
        result_is_not_244517 = python_operator(stypy.reporting.localization.Localization(__file__, 254, 11), 'isnot', seq_244515, None_244516)
        
        
        # Call to len(...): (line 254)
        # Processing the call arguments (line 254)
        # Getting the type of 'seq' (line 254)
        seq_244519 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 254, 35), 'seq', False)
        # Processing the call keyword arguments (line 254)
        kwargs_244520 = {}
        # Getting the type of 'len' (line 254)
        len_244518 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 254, 31), 'len', False)
        # Calling len(args, kwargs) (line 254)
        len_call_result_244521 = invoke(stypy.reporting.localization.Localization(__file__, 254, 31), len_244518, *[seq_244519], **kwargs_244520)
        
        # Applying the binary operator 'and' (line 254)
        result_and_keyword_244522 = python_operator(stypy.reporting.localization.Localization(__file__, 254, 11), 'and', result_is_not_244517, len_call_result_244521)
        
        # Testing the type of an if condition (line 254)
        if_condition_244523 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 254, 8), result_and_keyword_244522)
        # Assigning a type to the variable 'if_condition_244523' (line 254)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 254, 8), 'if_condition_244523', if_condition_244523)
        # SSA begins for if statement (line 254)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a BinOp to a Name (line 255):
        
        # Assigning a BinOp to a Name (line 255):
        unicode_244524 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 255, 14), 'unicode', u'[%s] %d setdash\n')
        
        # Obtaining an instance of the builtin type 'tuple' (line 255)
        tuple_244525 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 255, 35), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 255)
        # Adding element type (line 255)
        
        # Call to _nums_to_str(...): (line 255)
        # Getting the type of 'seq' (line 255)
        seq_244527 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 255, 49), 'seq', False)
        # Processing the call keyword arguments (line 255)
        kwargs_244528 = {}
        # Getting the type of '_nums_to_str' (line 255)
        _nums_to_str_244526 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 255, 35), '_nums_to_str', False)
        # Calling _nums_to_str(args, kwargs) (line 255)
        _nums_to_str_call_result_244529 = invoke(stypy.reporting.localization.Localization(__file__, 255, 35), _nums_to_str_244526, *[seq_244527], **kwargs_244528)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 255, 35), tuple_244525, _nums_to_str_call_result_244529)
        # Adding element type (line 255)
        # Getting the type of 'offset' (line 255)
        offset_244530 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 255, 55), 'offset')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 255, 35), tuple_244525, offset_244530)
        
        # Applying the binary operator '%' (line 255)
        result_mod_244531 = python_operator(stypy.reporting.localization.Localization(__file__, 255, 14), '%', unicode_244524, tuple_244525)
        
        # Assigning a type to the variable 's' (line 255)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 255, 12), 's', result_mod_244531)
        
        # Call to write(...): (line 256)
        # Processing the call arguments (line 256)
        # Getting the type of 's' (line 256)
        s_244535 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 256, 33), 's', False)
        # Processing the call keyword arguments (line 256)
        kwargs_244536 = {}
        # Getting the type of 'self' (line 256)
        self_244532 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 256, 12), 'self', False)
        # Obtaining the member '_pswriter' of a type (line 256)
        _pswriter_244533 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 256, 12), self_244532, '_pswriter')
        # Obtaining the member 'write' of a type (line 256)
        write_244534 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 256, 12), _pswriter_244533, 'write')
        # Calling write(args, kwargs) (line 256)
        write_call_result_244537 = invoke(stypy.reporting.localization.Localization(__file__, 256, 12), write_244534, *[s_244535], **kwargs_244536)
        
        # SSA branch for the else part of an if statement (line 254)
        module_type_store.open_ssa_branch('else')
        
        # Call to write(...): (line 258)
        # Processing the call arguments (line 258)
        unicode_244541 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 258, 33), 'unicode', u'[] 0 setdash\n')
        # Processing the call keyword arguments (line 258)
        kwargs_244542 = {}
        # Getting the type of 'self' (line 258)
        self_244538 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 258, 12), 'self', False)
        # Obtaining the member '_pswriter' of a type (line 258)
        _pswriter_244539 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 258, 12), self_244538, '_pswriter')
        # Obtaining the member 'write' of a type (line 258)
        write_244540 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 258, 12), _pswriter_244539, 'write')
        # Calling write(args, kwargs) (line 258)
        write_call_result_244543 = invoke(stypy.reporting.localization.Localization(__file__, 258, 12), write_244540, *[unicode_244541], **kwargs_244542)
        
        # SSA join for if statement (line 254)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'store' (line 259)
        store_244544 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 259, 11), 'store')
        # Testing the type of an if condition (line 259)
        if_condition_244545 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 259, 8), store_244544)
        # Assigning a type to the variable 'if_condition_244545' (line 259)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 259, 8), 'if_condition_244545', if_condition_244545)
        # SSA begins for if statement (line 259)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Tuple to a Attribute (line 260):
        
        # Assigning a Tuple to a Attribute (line 260):
        
        # Obtaining an instance of the builtin type 'tuple' (line 260)
        tuple_244546 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 260, 29), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 260)
        # Adding element type (line 260)
        # Getting the type of 'offset' (line 260)
        offset_244547 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 260, 29), 'offset')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 260, 29), tuple_244546, offset_244547)
        # Adding element type (line 260)
        # Getting the type of 'seq' (line 260)
        seq_244548 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 260, 37), 'seq')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 260, 29), tuple_244546, seq_244548)
        
        # Getting the type of 'self' (line 260)
        self_244549 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 260, 12), 'self')
        # Setting the type of the member 'linedash' of a type (line 260)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 260, 12), self_244549, 'linedash', tuple_244546)
        # SSA join for if statement (line 259)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'set_linedash(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'set_linedash' in the type store
        # Getting the type of 'stypy_return_type' (line 248)
        stypy_return_type_244550 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 248, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_244550)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'set_linedash'
        return stypy_return_type_244550


    @norecursion
    def set_font(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        int_244551 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 262, 49), 'int')
        defaults = [int_244551]
        # Create a new context for function 'set_font'
        module_type_store = module_type_store.open_function_context('set_font', 262, 4, False)
        # Assigning a type to the variable 'self' (line 263)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 263, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererPS.set_font.__dict__.__setitem__('stypy_localization', localization)
        RendererPS.set_font.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererPS.set_font.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererPS.set_font.__dict__.__setitem__('stypy_function_name', 'RendererPS.set_font')
        RendererPS.set_font.__dict__.__setitem__('stypy_param_names_list', ['fontname', 'fontsize', 'store'])
        RendererPS.set_font.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererPS.set_font.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererPS.set_font.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererPS.set_font.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererPS.set_font.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererPS.set_font.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererPS.set_font', ['fontname', 'fontsize', 'store'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'set_font', localization, ['fontname', 'fontsize', 'store'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'set_font(...)' code ##################

        
        
        # Obtaining the type of the subscript
        unicode_244552 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 263, 20), 'unicode', u'ps.useafm')
        # Getting the type of 'rcParams' (line 263)
        rcParams_244553 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 263, 11), 'rcParams')
        # Obtaining the member '__getitem__' of a type (line 263)
        getitem___244554 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 263, 11), rcParams_244553, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 263)
        subscript_call_result_244555 = invoke(stypy.reporting.localization.Localization(__file__, 263, 11), getitem___244554, unicode_244552)
        
        # Testing the type of an if condition (line 263)
        if_condition_244556 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 263, 8), subscript_call_result_244555)
        # Assigning a type to the variable 'if_condition_244556' (line 263)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 263, 8), 'if_condition_244556', if_condition_244556)
        # SSA begins for if statement (line 263)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        # Assigning a type to the variable 'stypy_return_type' (line 263)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 263, 34), 'stypy_return_type', types.NoneType)
        # SSA join for if statement (line 263)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 264)
        tuple_244557 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 264, 12), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 264)
        # Adding element type (line 264)
        # Getting the type of 'fontname' (line 264)
        fontname_244558 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 264, 12), 'fontname')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 264, 12), tuple_244557, fontname_244558)
        # Adding element type (line 264)
        # Getting the type of 'fontsize' (line 264)
        fontsize_244559 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 264, 21), 'fontsize')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 264, 12), tuple_244557, fontsize_244559)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 264)
        tuple_244560 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 264, 35), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 264)
        # Adding element type (line 264)
        # Getting the type of 'self' (line 264)
        self_244561 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 264, 35), 'self')
        # Obtaining the member 'fontname' of a type (line 264)
        fontname_244562 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 264, 35), self_244561, 'fontname')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 264, 35), tuple_244560, fontname_244562)
        # Adding element type (line 264)
        # Getting the type of 'self' (line 264)
        self_244563 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 264, 49), 'self')
        # Obtaining the member 'fontsize' of a type (line 264)
        fontsize_244564 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 264, 49), self_244563, 'fontsize')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 264, 35), tuple_244560, fontsize_244564)
        
        # Applying the binary operator '!=' (line 264)
        result_ne_244565 = python_operator(stypy.reporting.localization.Localization(__file__, 264, 11), '!=', tuple_244557, tuple_244560)
        
        # Testing the type of an if condition (line 264)
        if_condition_244566 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 264, 8), result_ne_244565)
        # Assigning a type to the variable 'if_condition_244566' (line 264)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 264, 8), 'if_condition_244566', if_condition_244566)
        # SSA begins for if statement (line 264)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a BinOp to a Name (line 265):
        
        # Assigning a BinOp to a Name (line 265):
        unicode_244567 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 265, 19), 'unicode', u'/%s findfont\n%1.3f scalefont\nsetfont\n')
        
        # Obtaining an instance of the builtin type 'tuple' (line 267)
        tuple_244568 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 267, 34), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 267)
        # Adding element type (line 267)
        # Getting the type of 'fontname' (line 267)
        fontname_244569 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 267, 34), 'fontname')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 267, 34), tuple_244568, fontname_244569)
        # Adding element type (line 267)
        # Getting the type of 'fontsize' (line 267)
        fontsize_244570 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 267, 44), 'fontsize')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 267, 34), tuple_244568, fontsize_244570)
        
        # Applying the binary operator '%' (line 265)
        result_mod_244571 = python_operator(stypy.reporting.localization.Localization(__file__, 265, 19), '%', unicode_244567, tuple_244568)
        
        # Assigning a type to the variable 'out' (line 265)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 265, 12), 'out', result_mod_244571)
        
        # Call to write(...): (line 269)
        # Processing the call arguments (line 269)
        # Getting the type of 'out' (line 269)
        out_244575 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 269, 33), 'out', False)
        # Processing the call keyword arguments (line 269)
        kwargs_244576 = {}
        # Getting the type of 'self' (line 269)
        self_244572 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 269, 12), 'self', False)
        # Obtaining the member '_pswriter' of a type (line 269)
        _pswriter_244573 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 269, 12), self_244572, '_pswriter')
        # Obtaining the member 'write' of a type (line 269)
        write_244574 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 269, 12), _pswriter_244573, 'write')
        # Calling write(args, kwargs) (line 269)
        write_call_result_244577 = invoke(stypy.reporting.localization.Localization(__file__, 269, 12), write_244574, *[out_244575], **kwargs_244576)
        
        
        # Getting the type of 'store' (line 270)
        store_244578 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 270, 15), 'store')
        # Testing the type of an if condition (line 270)
        if_condition_244579 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 270, 12), store_244578)
        # Assigning a type to the variable 'if_condition_244579' (line 270)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 270, 12), 'if_condition_244579', if_condition_244579)
        # SSA begins for if statement (line 270)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Name to a Attribute (line 270):
        
        # Assigning a Name to a Attribute (line 270):
        # Getting the type of 'fontname' (line 270)
        fontname_244580 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 270, 38), 'fontname')
        # Getting the type of 'self' (line 270)
        self_244581 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 270, 22), 'self')
        # Setting the type of the member 'fontname' of a type (line 270)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 270, 22), self_244581, 'fontname', fontname_244580)
        # SSA join for if statement (line 270)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'store' (line 271)
        store_244582 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 15), 'store')
        # Testing the type of an if condition (line 271)
        if_condition_244583 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 271, 12), store_244582)
        # Assigning a type to the variable 'if_condition_244583' (line 271)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 271, 12), 'if_condition_244583', if_condition_244583)
        # SSA begins for if statement (line 271)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Name to a Attribute (line 271):
        
        # Assigning a Name to a Attribute (line 271):
        # Getting the type of 'fontsize' (line 271)
        fontsize_244584 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 38), 'fontsize')
        # Getting the type of 'self' (line 271)
        self_244585 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 22), 'self')
        # Setting the type of the member 'fontsize' of a type (line 271)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 271, 22), self_244585, 'fontsize', fontsize_244584)
        # SSA join for if statement (line 271)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 264)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'set_font(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'set_font' in the type store
        # Getting the type of 'stypy_return_type' (line 262)
        stypy_return_type_244586 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 262, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_244586)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'set_font'
        return stypy_return_type_244586


    @norecursion
    def create_hatch(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'create_hatch'
        module_type_store = module_type_store.open_function_context('create_hatch', 273, 4, False)
        # Assigning a type to the variable 'self' (line 274)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 274, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererPS.create_hatch.__dict__.__setitem__('stypy_localization', localization)
        RendererPS.create_hatch.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererPS.create_hatch.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererPS.create_hatch.__dict__.__setitem__('stypy_function_name', 'RendererPS.create_hatch')
        RendererPS.create_hatch.__dict__.__setitem__('stypy_param_names_list', ['hatch'])
        RendererPS.create_hatch.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererPS.create_hatch.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererPS.create_hatch.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererPS.create_hatch.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererPS.create_hatch.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererPS.create_hatch.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererPS.create_hatch', ['hatch'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'create_hatch', localization, ['hatch'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'create_hatch(...)' code ##################

        
        # Assigning a Num to a Name (line 274):
        
        # Assigning a Num to a Name (line 274):
        int_244587 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 274, 18), 'int')
        # Assigning a type to the variable 'sidelen' (line 274)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 274, 8), 'sidelen', int_244587)
        
        
        # Getting the type of 'hatch' (line 275)
        hatch_244588 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 11), 'hatch')
        # Getting the type of 'self' (line 275)
        self_244589 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 20), 'self')
        # Obtaining the member '_hatches' of a type (line 275)
        _hatches_244590 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 275, 20), self_244589, '_hatches')
        # Applying the binary operator 'in' (line 275)
        result_contains_244591 = python_operator(stypy.reporting.localization.Localization(__file__, 275, 11), 'in', hatch_244588, _hatches_244590)
        
        # Testing the type of an if condition (line 275)
        if_condition_244592 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 275, 8), result_contains_244591)
        # Assigning a type to the variable 'if_condition_244592' (line 275)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 275, 8), 'if_condition_244592', if_condition_244592)
        # SSA begins for if statement (line 275)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Obtaining the type of the subscript
        # Getting the type of 'hatch' (line 276)
        hatch_244593 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 33), 'hatch')
        # Getting the type of 'self' (line 276)
        self_244594 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 19), 'self')
        # Obtaining the member '_hatches' of a type (line 276)
        _hatches_244595 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 19), self_244594, '_hatches')
        # Obtaining the member '__getitem__' of a type (line 276)
        getitem___244596 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 19), _hatches_244595, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 276)
        subscript_call_result_244597 = invoke(stypy.reporting.localization.Localization(__file__, 276, 19), getitem___244596, hatch_244593)
        
        # Assigning a type to the variable 'stypy_return_type' (line 276)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 276, 12), 'stypy_return_type', subscript_call_result_244597)
        # SSA join for if statement (line 275)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a BinOp to a Name (line 277):
        
        # Assigning a BinOp to a Name (line 277):
        unicode_244598 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 277, 15), 'unicode', u'H%d')
        
        # Call to len(...): (line 277)
        # Processing the call arguments (line 277)
        # Getting the type of 'self' (line 277)
        self_244600 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 27), 'self', False)
        # Obtaining the member '_hatches' of a type (line 277)
        _hatches_244601 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 27), self_244600, '_hatches')
        # Processing the call keyword arguments (line 277)
        kwargs_244602 = {}
        # Getting the type of 'len' (line 277)
        len_244599 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 23), 'len', False)
        # Calling len(args, kwargs) (line 277)
        len_call_result_244603 = invoke(stypy.reporting.localization.Localization(__file__, 277, 23), len_244599, *[_hatches_244601], **kwargs_244602)
        
        # Applying the binary operator '%' (line 277)
        result_mod_244604 = python_operator(stypy.reporting.localization.Localization(__file__, 277, 15), '%', unicode_244598, len_call_result_244603)
        
        # Assigning a type to the variable 'name' (line 277)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 277, 8), 'name', result_mod_244604)
        
        # Assigning a Subscript to a Name (line 278):
        
        # Assigning a Subscript to a Name (line 278):
        
        # Obtaining the type of the subscript
        unicode_244605 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 278, 29), 'unicode', u'hatch.linewidth')
        # Getting the type of 'rcParams' (line 278)
        rcParams_244606 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 278, 20), 'rcParams')
        # Obtaining the member '__getitem__' of a type (line 278)
        getitem___244607 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 278, 20), rcParams_244606, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 278)
        subscript_call_result_244608 = invoke(stypy.reporting.localization.Localization(__file__, 278, 20), getitem___244607, unicode_244605)
        
        # Assigning a type to the variable 'linewidth' (line 278)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 278, 8), 'linewidth', subscript_call_result_244608)
        
        # Assigning a BinOp to a Name (line 279):
        
        # Assigning a BinOp to a Name (line 279):
        # Getting the type of 'self' (line 279)
        self_244609 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 279, 21), 'self')
        # Obtaining the member 'height' of a type (line 279)
        height_244610 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 279, 21), self_244609, 'height')
        int_244611 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 279, 35), 'int')
        # Applying the binary operator '*' (line 279)
        result_mul_244612 = python_operator(stypy.reporting.localization.Localization(__file__, 279, 21), '*', height_244610, int_244611)
        
        # Assigning a type to the variable 'pageheight' (line 279)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 279, 8), 'pageheight', result_mul_244612)
        
        # Call to write(...): (line 280)
        # Processing the call arguments (line 280)
        unicode_244616 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 291, (-1)), 'unicode', u'  << /PatternType 1\n     /PaintType 2\n     /TilingType 2\n     /BBox[0 0 %(sidelen)d %(sidelen)d]\n     /XStep %(sidelen)d\n     /YStep %(sidelen)d\n\n     /PaintProc {\n        pop\n        %(linewidth)f setlinewidth\n')
        
        # Call to locals(...): (line 291)
        # Processing the call keyword arguments (line 291)
        kwargs_244618 = {}
        # Getting the type of 'locals' (line 291)
        locals_244617 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 291, 6), 'locals', False)
        # Calling locals(args, kwargs) (line 291)
        locals_call_result_244619 = invoke(stypy.reporting.localization.Localization(__file__, 291, 6), locals_244617, *[], **kwargs_244618)
        
        # Applying the binary operator '%' (line 291)
        result_mod_244620 = python_operator(stypy.reporting.localization.Localization(__file__, 291, (-1)), '%', unicode_244616, locals_call_result_244619)
        
        # Processing the call keyword arguments (line 280)
        kwargs_244621 = {}
        # Getting the type of 'self' (line 280)
        self_244613 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 280, 8), 'self', False)
        # Obtaining the member '_pswriter' of a type (line 280)
        _pswriter_244614 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 280, 8), self_244613, '_pswriter')
        # Obtaining the member 'write' of a type (line 280)
        write_244615 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 280, 8), _pswriter_244614, 'write')
        # Calling write(args, kwargs) (line 280)
        write_call_result_244622 = invoke(stypy.reporting.localization.Localization(__file__, 280, 8), write_244615, *[result_mod_244620], **kwargs_244621)
        
        
        # Call to write(...): (line 292)
        # Processing the call arguments (line 292)
        
        # Call to _convert_path(...): (line 293)
        # Processing the call arguments (line 293)
        
        # Call to hatch(...): (line 293)
        # Processing the call arguments (line 293)
        # Getting the type of 'hatch' (line 293)
        hatch_244630 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 293, 42), 'hatch', False)
        # Processing the call keyword arguments (line 293)
        kwargs_244631 = {}
        # Getting the type of 'Path' (line 293)
        Path_244628 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 293, 31), 'Path', False)
        # Obtaining the member 'hatch' of a type (line 293)
        hatch_244629 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 293, 31), Path_244628, 'hatch')
        # Calling hatch(args, kwargs) (line 293)
        hatch_call_result_244632 = invoke(stypy.reporting.localization.Localization(__file__, 293, 31), hatch_244629, *[hatch_244630], **kwargs_244631)
        
        
        # Call to scale(...): (line 293)
        # Processing the call arguments (line 293)
        # Getting the type of 'sidelen' (line 293)
        sidelen_244637 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 293, 67), 'sidelen', False)
        # Processing the call keyword arguments (line 293)
        kwargs_244638 = {}
        
        # Call to Affine2D(...): (line 293)
        # Processing the call keyword arguments (line 293)
        kwargs_244634 = {}
        # Getting the type of 'Affine2D' (line 293)
        Affine2D_244633 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 293, 50), 'Affine2D', False)
        # Calling Affine2D(args, kwargs) (line 293)
        Affine2D_call_result_244635 = invoke(stypy.reporting.localization.Localization(__file__, 293, 50), Affine2D_244633, *[], **kwargs_244634)
        
        # Obtaining the member 'scale' of a type (line 293)
        scale_244636 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 293, 50), Affine2D_call_result_244635, 'scale')
        # Calling scale(args, kwargs) (line 293)
        scale_call_result_244639 = invoke(stypy.reporting.localization.Localization(__file__, 293, 50), scale_244636, *[sidelen_244637], **kwargs_244638)
        
        # Processing the call keyword arguments (line 293)
        # Getting the type of 'False' (line 294)
        False_244640 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 294, 40), 'False', False)
        keyword_244641 = False_244640
        kwargs_244642 = {'simplify': keyword_244641}
        # Getting the type of 'self' (line 293)
        self_244626 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 293, 12), 'self', False)
        # Obtaining the member '_convert_path' of a type (line 293)
        _convert_path_244627 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 293, 12), self_244626, '_convert_path')
        # Calling _convert_path(args, kwargs) (line 293)
        _convert_path_call_result_244643 = invoke(stypy.reporting.localization.Localization(__file__, 293, 12), _convert_path_244627, *[hatch_call_result_244632, scale_call_result_244639], **kwargs_244642)
        
        # Processing the call keyword arguments (line 292)
        kwargs_244644 = {}
        # Getting the type of 'self' (line 292)
        self_244623 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 292, 8), 'self', False)
        # Obtaining the member '_pswriter' of a type (line 292)
        _pswriter_244624 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 292, 8), self_244623, '_pswriter')
        # Obtaining the member 'write' of a type (line 292)
        write_244625 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 292, 8), _pswriter_244624, 'write')
        # Calling write(args, kwargs) (line 292)
        write_call_result_244645 = invoke(stypy.reporting.localization.Localization(__file__, 292, 8), write_244625, *[_convert_path_call_result_244643], **kwargs_244644)
        
        
        # Call to write(...): (line 295)
        # Processing the call arguments (line 295)
        unicode_244649 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 304, (-1)), 'unicode', u'        fill\n        stroke\n     } bind\n   >>\n   matrix\n   0.0 %(pageheight)f translate\n   makepattern\n   /%(name)s exch def\n')
        
        # Call to locals(...): (line 304)
        # Processing the call keyword arguments (line 304)
        kwargs_244651 = {}
        # Getting the type of 'locals' (line 304)
        locals_244650 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 304, 6), 'locals', False)
        # Calling locals(args, kwargs) (line 304)
        locals_call_result_244652 = invoke(stypy.reporting.localization.Localization(__file__, 304, 6), locals_244650, *[], **kwargs_244651)
        
        # Applying the binary operator '%' (line 304)
        result_mod_244653 = python_operator(stypy.reporting.localization.Localization(__file__, 304, (-1)), '%', unicode_244649, locals_call_result_244652)
        
        # Processing the call keyword arguments (line 295)
        kwargs_244654 = {}
        # Getting the type of 'self' (line 295)
        self_244646 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 295, 8), 'self', False)
        # Obtaining the member '_pswriter' of a type (line 295)
        _pswriter_244647 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 295, 8), self_244646, '_pswriter')
        # Obtaining the member 'write' of a type (line 295)
        write_244648 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 295, 8), _pswriter_244647, 'write')
        # Calling write(args, kwargs) (line 295)
        write_call_result_244655 = invoke(stypy.reporting.localization.Localization(__file__, 295, 8), write_244648, *[result_mod_244653], **kwargs_244654)
        
        
        # Assigning a Name to a Subscript (line 305):
        
        # Assigning a Name to a Subscript (line 305):
        # Getting the type of 'name' (line 305)
        name_244656 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 305, 31), 'name')
        # Getting the type of 'self' (line 305)
        self_244657 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 305, 8), 'self')
        # Obtaining the member '_hatches' of a type (line 305)
        _hatches_244658 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 305, 8), self_244657, '_hatches')
        # Getting the type of 'hatch' (line 305)
        hatch_244659 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 305, 22), 'hatch')
        # Storing an element on a container (line 305)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 305, 8), _hatches_244658, (hatch_244659, name_244656))
        # Getting the type of 'name' (line 306)
        name_244660 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 306, 15), 'name')
        # Assigning a type to the variable 'stypy_return_type' (line 306)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 306, 8), 'stypy_return_type', name_244660)
        
        # ################# End of 'create_hatch(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'create_hatch' in the type store
        # Getting the type of 'stypy_return_type' (line 273)
        stypy_return_type_244661 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 273, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_244661)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'create_hatch'
        return stypy_return_type_244661


    @norecursion
    def get_canvas_width_height(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'get_canvas_width_height'
        module_type_store = module_type_store.open_function_context('get_canvas_width_height', 308, 4, False)
        # Assigning a type to the variable 'self' (line 309)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 309, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererPS.get_canvas_width_height.__dict__.__setitem__('stypy_localization', localization)
        RendererPS.get_canvas_width_height.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererPS.get_canvas_width_height.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererPS.get_canvas_width_height.__dict__.__setitem__('stypy_function_name', 'RendererPS.get_canvas_width_height')
        RendererPS.get_canvas_width_height.__dict__.__setitem__('stypy_param_names_list', [])
        RendererPS.get_canvas_width_height.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererPS.get_canvas_width_height.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererPS.get_canvas_width_height.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererPS.get_canvas_width_height.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererPS.get_canvas_width_height.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererPS.get_canvas_width_height.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererPS.get_canvas_width_height', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_canvas_width_height', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_canvas_width_height(...)' code ##################

        unicode_244662 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 309, 8), 'unicode', u'return the canvas width and height in display coords')
        
        # Obtaining an instance of the builtin type 'tuple' (line 310)
        tuple_244663 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 310, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 310)
        # Adding element type (line 310)
        # Getting the type of 'self' (line 310)
        self_244664 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 310, 15), 'self')
        # Obtaining the member 'width' of a type (line 310)
        width_244665 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 310, 15), self_244664, 'width')
        float_244666 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 310, 28), 'float')
        # Applying the binary operator '*' (line 310)
        result_mul_244667 = python_operator(stypy.reporting.localization.Localization(__file__, 310, 15), '*', width_244665, float_244666)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 310, 15), tuple_244663, result_mul_244667)
        # Adding element type (line 310)
        # Getting the type of 'self' (line 310)
        self_244668 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 310, 34), 'self')
        # Obtaining the member 'height' of a type (line 310)
        height_244669 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 310, 34), self_244668, 'height')
        float_244670 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 310, 48), 'float')
        # Applying the binary operator '*' (line 310)
        result_mul_244671 = python_operator(stypy.reporting.localization.Localization(__file__, 310, 34), '*', height_244669, float_244670)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 310, 15), tuple_244663, result_mul_244671)
        
        # Assigning a type to the variable 'stypy_return_type' (line 310)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 310, 8), 'stypy_return_type', tuple_244663)
        
        # ################# End of 'get_canvas_width_height(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_canvas_width_height' in the type store
        # Getting the type of 'stypy_return_type' (line 308)
        stypy_return_type_244672 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 308, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_244672)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_canvas_width_height'
        return stypy_return_type_244672


    @norecursion
    def get_text_width_height_descent(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'get_text_width_height_descent'
        module_type_store = module_type_store.open_function_context('get_text_width_height_descent', 312, 4, False)
        # Assigning a type to the variable 'self' (line 313)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 313, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererPS.get_text_width_height_descent.__dict__.__setitem__('stypy_localization', localization)
        RendererPS.get_text_width_height_descent.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererPS.get_text_width_height_descent.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererPS.get_text_width_height_descent.__dict__.__setitem__('stypy_function_name', 'RendererPS.get_text_width_height_descent')
        RendererPS.get_text_width_height_descent.__dict__.__setitem__('stypy_param_names_list', ['s', 'prop', 'ismath'])
        RendererPS.get_text_width_height_descent.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererPS.get_text_width_height_descent.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererPS.get_text_width_height_descent.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererPS.get_text_width_height_descent.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererPS.get_text_width_height_descent.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererPS.get_text_width_height_descent.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererPS.get_text_width_height_descent', ['s', 'prop', 'ismath'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_text_width_height_descent', localization, ['s', 'prop', 'ismath'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_text_width_height_descent(...)' code ##################

        unicode_244673 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 317, (-1)), 'unicode', u'\n        get the width and height in display coords of the string s\n        with FontPropertry prop\n\n        ')
        
        
        # Obtaining the type of the subscript
        unicode_244674 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 318, 20), 'unicode', u'text.usetex')
        # Getting the type of 'rcParams' (line 318)
        rcParams_244675 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 318, 11), 'rcParams')
        # Obtaining the member '__getitem__' of a type (line 318)
        getitem___244676 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 318, 11), rcParams_244675, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 318)
        subscript_call_result_244677 = invoke(stypy.reporting.localization.Localization(__file__, 318, 11), getitem___244676, unicode_244674)
        
        # Testing the type of an if condition (line 318)
        if_condition_244678 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 318, 8), subscript_call_result_244677)
        # Assigning a type to the variable 'if_condition_244678' (line 318)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 318, 8), 'if_condition_244678', if_condition_244678)
        # SSA begins for if statement (line 318)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 319):
        
        # Assigning a Call to a Name (line 319):
        
        # Call to get_texmanager(...): (line 319)
        # Processing the call keyword arguments (line 319)
        kwargs_244681 = {}
        # Getting the type of 'self' (line 319)
        self_244679 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 319, 25), 'self', False)
        # Obtaining the member 'get_texmanager' of a type (line 319)
        get_texmanager_244680 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 319, 25), self_244679, 'get_texmanager')
        # Calling get_texmanager(args, kwargs) (line 319)
        get_texmanager_call_result_244682 = invoke(stypy.reporting.localization.Localization(__file__, 319, 25), get_texmanager_244680, *[], **kwargs_244681)
        
        # Assigning a type to the variable 'texmanager' (line 319)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 319, 12), 'texmanager', get_texmanager_call_result_244682)
        
        # Assigning a Call to a Name (line 320):
        
        # Assigning a Call to a Name (line 320):
        
        # Call to get_size_in_points(...): (line 320)
        # Processing the call keyword arguments (line 320)
        kwargs_244685 = {}
        # Getting the type of 'prop' (line 320)
        prop_244683 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 320, 23), 'prop', False)
        # Obtaining the member 'get_size_in_points' of a type (line 320)
        get_size_in_points_244684 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 320, 23), prop_244683, 'get_size_in_points')
        # Calling get_size_in_points(args, kwargs) (line 320)
        get_size_in_points_call_result_244686 = invoke(stypy.reporting.localization.Localization(__file__, 320, 23), get_size_in_points_244684, *[], **kwargs_244685)
        
        # Assigning a type to the variable 'fontsize' (line 320)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 320, 12), 'fontsize', get_size_in_points_call_result_244686)
        
        # Assigning a Call to a Tuple (line 321):
        
        # Assigning a Call to a Name:
        
        # Call to get_text_width_height_descent(...): (line 321)
        # Processing the call arguments (line 321)
        # Getting the type of 's' (line 321)
        s_244689 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 321, 63), 's', False)
        # Getting the type of 'fontsize' (line 321)
        fontsize_244690 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 321, 66), 'fontsize', False)
        # Processing the call keyword arguments (line 321)
        # Getting the type of 'self' (line 322)
        self_244691 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 322, 72), 'self', False)
        keyword_244692 = self_244691
        kwargs_244693 = {'renderer': keyword_244692}
        # Getting the type of 'texmanager' (line 321)
        texmanager_244687 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 321, 22), 'texmanager', False)
        # Obtaining the member 'get_text_width_height_descent' of a type (line 321)
        get_text_width_height_descent_244688 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 321, 22), texmanager_244687, 'get_text_width_height_descent')
        # Calling get_text_width_height_descent(args, kwargs) (line 321)
        get_text_width_height_descent_call_result_244694 = invoke(stypy.reporting.localization.Localization(__file__, 321, 22), get_text_width_height_descent_244688, *[s_244689, fontsize_244690], **kwargs_244693)
        
        # Assigning a type to the variable 'call_assignment_243695' (line 321)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 321, 12), 'call_assignment_243695', get_text_width_height_descent_call_result_244694)
        
        # Assigning a Call to a Name (line 321):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_244697 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 321, 12), 'int')
        # Processing the call keyword arguments
        kwargs_244698 = {}
        # Getting the type of 'call_assignment_243695' (line 321)
        call_assignment_243695_244695 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 321, 12), 'call_assignment_243695', False)
        # Obtaining the member '__getitem__' of a type (line 321)
        getitem___244696 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 321, 12), call_assignment_243695_244695, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_244699 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___244696, *[int_244697], **kwargs_244698)
        
        # Assigning a type to the variable 'call_assignment_243696' (line 321)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 321, 12), 'call_assignment_243696', getitem___call_result_244699)
        
        # Assigning a Name to a Name (line 321):
        # Getting the type of 'call_assignment_243696' (line 321)
        call_assignment_243696_244700 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 321, 12), 'call_assignment_243696')
        # Assigning a type to the variable 'w' (line 321)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 321, 12), 'w', call_assignment_243696_244700)
        
        # Assigning a Call to a Name (line 321):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_244703 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 321, 12), 'int')
        # Processing the call keyword arguments
        kwargs_244704 = {}
        # Getting the type of 'call_assignment_243695' (line 321)
        call_assignment_243695_244701 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 321, 12), 'call_assignment_243695', False)
        # Obtaining the member '__getitem__' of a type (line 321)
        getitem___244702 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 321, 12), call_assignment_243695_244701, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_244705 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___244702, *[int_244703], **kwargs_244704)
        
        # Assigning a type to the variable 'call_assignment_243697' (line 321)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 321, 12), 'call_assignment_243697', getitem___call_result_244705)
        
        # Assigning a Name to a Name (line 321):
        # Getting the type of 'call_assignment_243697' (line 321)
        call_assignment_243697_244706 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 321, 12), 'call_assignment_243697')
        # Assigning a type to the variable 'h' (line 321)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 321, 15), 'h', call_assignment_243697_244706)
        
        # Assigning a Call to a Name (line 321):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_244709 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 321, 12), 'int')
        # Processing the call keyword arguments
        kwargs_244710 = {}
        # Getting the type of 'call_assignment_243695' (line 321)
        call_assignment_243695_244707 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 321, 12), 'call_assignment_243695', False)
        # Obtaining the member '__getitem__' of a type (line 321)
        getitem___244708 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 321, 12), call_assignment_243695_244707, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_244711 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___244708, *[int_244709], **kwargs_244710)
        
        # Assigning a type to the variable 'call_assignment_243698' (line 321)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 321, 12), 'call_assignment_243698', getitem___call_result_244711)
        
        # Assigning a Name to a Name (line 321):
        # Getting the type of 'call_assignment_243698' (line 321)
        call_assignment_243698_244712 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 321, 12), 'call_assignment_243698')
        # Assigning a type to the variable 'd' (line 321)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 321, 18), 'd', call_assignment_243698_244712)
        
        # Obtaining an instance of the builtin type 'tuple' (line 323)
        tuple_244713 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 323, 19), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 323)
        # Adding element type (line 323)
        # Getting the type of 'w' (line 323)
        w_244714 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 323, 19), 'w')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 323, 19), tuple_244713, w_244714)
        # Adding element type (line 323)
        # Getting the type of 'h' (line 323)
        h_244715 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 323, 22), 'h')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 323, 19), tuple_244713, h_244715)
        # Adding element type (line 323)
        # Getting the type of 'd' (line 323)
        d_244716 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 323, 25), 'd')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 323, 19), tuple_244713, d_244716)
        
        # Assigning a type to the variable 'stypy_return_type' (line 323)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 323, 12), 'stypy_return_type', tuple_244713)
        # SSA join for if statement (line 318)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'ismath' (line 325)
        ismath_244717 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 325, 11), 'ismath')
        # Testing the type of an if condition (line 325)
        if_condition_244718 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 325, 8), ismath_244717)
        # Assigning a type to the variable 'if_condition_244718' (line 325)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 325, 8), 'if_condition_244718', if_condition_244718)
        # SSA begins for if statement (line 325)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Tuple (line 326):
        
        # Assigning a Call to a Name:
        
        # Call to parse(...): (line 327)
        # Processing the call arguments (line 327)
        # Getting the type of 's' (line 327)
        s_244722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 327, 43), 's', False)
        int_244723 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 327, 46), 'int')
        # Getting the type of 'prop' (line 327)
        prop_244724 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 327, 50), 'prop', False)
        # Processing the call keyword arguments (line 327)
        kwargs_244725 = {}
        # Getting the type of 'self' (line 327)
        self_244719 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 327, 16), 'self', False)
        # Obtaining the member 'mathtext_parser' of a type (line 327)
        mathtext_parser_244720 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 327, 16), self_244719, 'mathtext_parser')
        # Obtaining the member 'parse' of a type (line 327)
        parse_244721 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 327, 16), mathtext_parser_244720, 'parse')
        # Calling parse(args, kwargs) (line 327)
        parse_call_result_244726 = invoke(stypy.reporting.localization.Localization(__file__, 327, 16), parse_244721, *[s_244722, int_244723, prop_244724], **kwargs_244725)
        
        # Assigning a type to the variable 'call_assignment_243699' (line 326)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 326, 12), 'call_assignment_243699', parse_call_result_244726)
        
        # Assigning a Call to a Name (line 326):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_244729 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 326, 12), 'int')
        # Processing the call keyword arguments
        kwargs_244730 = {}
        # Getting the type of 'call_assignment_243699' (line 326)
        call_assignment_243699_244727 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 326, 12), 'call_assignment_243699', False)
        # Obtaining the member '__getitem__' of a type (line 326)
        getitem___244728 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 326, 12), call_assignment_243699_244727, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_244731 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___244728, *[int_244729], **kwargs_244730)
        
        # Assigning a type to the variable 'call_assignment_243700' (line 326)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 326, 12), 'call_assignment_243700', getitem___call_result_244731)
        
        # Assigning a Name to a Name (line 326):
        # Getting the type of 'call_assignment_243700' (line 326)
        call_assignment_243700_244732 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 326, 12), 'call_assignment_243700')
        # Assigning a type to the variable 'width' (line 326)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 326, 12), 'width', call_assignment_243700_244732)
        
        # Assigning a Call to a Name (line 326):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_244735 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 326, 12), 'int')
        # Processing the call keyword arguments
        kwargs_244736 = {}
        # Getting the type of 'call_assignment_243699' (line 326)
        call_assignment_243699_244733 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 326, 12), 'call_assignment_243699', False)
        # Obtaining the member '__getitem__' of a type (line 326)
        getitem___244734 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 326, 12), call_assignment_243699_244733, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_244737 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___244734, *[int_244735], **kwargs_244736)
        
        # Assigning a type to the variable 'call_assignment_243701' (line 326)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 326, 12), 'call_assignment_243701', getitem___call_result_244737)
        
        # Assigning a Name to a Name (line 326):
        # Getting the type of 'call_assignment_243701' (line 326)
        call_assignment_243701_244738 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 326, 12), 'call_assignment_243701')
        # Assigning a type to the variable 'height' (line 326)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 326, 19), 'height', call_assignment_243701_244738)
        
        # Assigning a Call to a Name (line 326):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_244741 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 326, 12), 'int')
        # Processing the call keyword arguments
        kwargs_244742 = {}
        # Getting the type of 'call_assignment_243699' (line 326)
        call_assignment_243699_244739 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 326, 12), 'call_assignment_243699', False)
        # Obtaining the member '__getitem__' of a type (line 326)
        getitem___244740 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 326, 12), call_assignment_243699_244739, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_244743 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___244740, *[int_244741], **kwargs_244742)
        
        # Assigning a type to the variable 'call_assignment_243702' (line 326)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 326, 12), 'call_assignment_243702', getitem___call_result_244743)
        
        # Assigning a Name to a Name (line 326):
        # Getting the type of 'call_assignment_243702' (line 326)
        call_assignment_243702_244744 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 326, 12), 'call_assignment_243702')
        # Assigning a type to the variable 'descent' (line 326)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 326, 27), 'descent', call_assignment_243702_244744)
        
        # Assigning a Call to a Name (line 326):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_244747 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 326, 12), 'int')
        # Processing the call keyword arguments
        kwargs_244748 = {}
        # Getting the type of 'call_assignment_243699' (line 326)
        call_assignment_243699_244745 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 326, 12), 'call_assignment_243699', False)
        # Obtaining the member '__getitem__' of a type (line 326)
        getitem___244746 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 326, 12), call_assignment_243699_244745, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_244749 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___244746, *[int_244747], **kwargs_244748)
        
        # Assigning a type to the variable 'call_assignment_243703' (line 326)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 326, 12), 'call_assignment_243703', getitem___call_result_244749)
        
        # Assigning a Name to a Name (line 326):
        # Getting the type of 'call_assignment_243703' (line 326)
        call_assignment_243703_244750 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 326, 12), 'call_assignment_243703')
        # Assigning a type to the variable 'pswriter' (line 326)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 326, 36), 'pswriter', call_assignment_243703_244750)
        
        # Assigning a Call to a Name (line 326):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_244753 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 326, 12), 'int')
        # Processing the call keyword arguments
        kwargs_244754 = {}
        # Getting the type of 'call_assignment_243699' (line 326)
        call_assignment_243699_244751 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 326, 12), 'call_assignment_243699', False)
        # Obtaining the member '__getitem__' of a type (line 326)
        getitem___244752 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 326, 12), call_assignment_243699_244751, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_244755 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___244752, *[int_244753], **kwargs_244754)
        
        # Assigning a type to the variable 'call_assignment_243704' (line 326)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 326, 12), 'call_assignment_243704', getitem___call_result_244755)
        
        # Assigning a Name to a Name (line 326):
        # Getting the type of 'call_assignment_243704' (line 326)
        call_assignment_243704_244756 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 326, 12), 'call_assignment_243704')
        # Assigning a type to the variable 'used_characters' (line 326)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 326, 46), 'used_characters', call_assignment_243704_244756)
        
        # Obtaining an instance of the builtin type 'tuple' (line 328)
        tuple_244757 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 328, 19), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 328)
        # Adding element type (line 328)
        # Getting the type of 'width' (line 328)
        width_244758 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 328, 19), 'width')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 328, 19), tuple_244757, width_244758)
        # Adding element type (line 328)
        # Getting the type of 'height' (line 328)
        height_244759 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 328, 26), 'height')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 328, 19), tuple_244757, height_244759)
        # Adding element type (line 328)
        # Getting the type of 'descent' (line 328)
        descent_244760 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 328, 34), 'descent')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 328, 19), tuple_244757, descent_244760)
        
        # Assigning a type to the variable 'stypy_return_type' (line 328)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 328, 12), 'stypy_return_type', tuple_244757)
        # SSA join for if statement (line 325)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Obtaining the type of the subscript
        unicode_244761 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 330, 20), 'unicode', u'ps.useafm')
        # Getting the type of 'rcParams' (line 330)
        rcParams_244762 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 330, 11), 'rcParams')
        # Obtaining the member '__getitem__' of a type (line 330)
        getitem___244763 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 330, 11), rcParams_244762, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 330)
        subscript_call_result_244764 = invoke(stypy.reporting.localization.Localization(__file__, 330, 11), getitem___244763, unicode_244761)
        
        # Testing the type of an if condition (line 330)
        if_condition_244765 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 330, 8), subscript_call_result_244764)
        # Assigning a type to the variable 'if_condition_244765' (line 330)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 330, 8), 'if_condition_244765', if_condition_244765)
        # SSA begins for if statement (line 330)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'ismath' (line 331)
        ismath_244766 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 331, 15), 'ismath')
        # Testing the type of an if condition (line 331)
        if_condition_244767 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 331, 12), ismath_244766)
        # Assigning a type to the variable 'if_condition_244767' (line 331)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 331, 12), 'if_condition_244767', if_condition_244767)
        # SSA begins for if statement (line 331)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Subscript to a Name (line 331):
        
        # Assigning a Subscript to a Name (line 331):
        
        # Obtaining the type of the subscript
        int_244768 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 331, 29), 'int')
        int_244769 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 331, 31), 'int')
        slice_244770 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 331, 27), int_244768, int_244769, None)
        # Getting the type of 's' (line 331)
        s_244771 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 331, 27), 's')
        # Obtaining the member '__getitem__' of a type (line 331)
        getitem___244772 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 331, 27), s_244771, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 331)
        subscript_call_result_244773 = invoke(stypy.reporting.localization.Localization(__file__, 331, 27), getitem___244772, slice_244770)
        
        # Assigning a type to the variable 's' (line 331)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 331, 23), 's', subscript_call_result_244773)
        # SSA join for if statement (line 331)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 332):
        
        # Assigning a Call to a Name (line 332):
        
        # Call to _get_font_afm(...): (line 332)
        # Processing the call arguments (line 332)
        # Getting the type of 'prop' (line 332)
        prop_244776 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 332, 38), 'prop', False)
        # Processing the call keyword arguments (line 332)
        kwargs_244777 = {}
        # Getting the type of 'self' (line 332)
        self_244774 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 332, 19), 'self', False)
        # Obtaining the member '_get_font_afm' of a type (line 332)
        _get_font_afm_244775 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 332, 19), self_244774, '_get_font_afm')
        # Calling _get_font_afm(args, kwargs) (line 332)
        _get_font_afm_call_result_244778 = invoke(stypy.reporting.localization.Localization(__file__, 332, 19), _get_font_afm_244775, *[prop_244776], **kwargs_244777)
        
        # Assigning a type to the variable 'font' (line 332)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 332, 12), 'font', _get_font_afm_call_result_244778)
        
        # Assigning a Call to a Tuple (line 333):
        
        # Assigning a Call to a Name:
        
        # Call to get_str_bbox_and_descent(...): (line 333)
        # Processing the call arguments (line 333)
        # Getting the type of 's' (line 333)
        s_244781 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 333, 54), 's', False)
        # Processing the call keyword arguments (line 333)
        kwargs_244782 = {}
        # Getting the type of 'font' (line 333)
        font_244779 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 333, 24), 'font', False)
        # Obtaining the member 'get_str_bbox_and_descent' of a type (line 333)
        get_str_bbox_and_descent_244780 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 333, 24), font_244779, 'get_str_bbox_and_descent')
        # Calling get_str_bbox_and_descent(args, kwargs) (line 333)
        get_str_bbox_and_descent_call_result_244783 = invoke(stypy.reporting.localization.Localization(__file__, 333, 24), get_str_bbox_and_descent_244780, *[s_244781], **kwargs_244782)
        
        # Assigning a type to the variable 'call_assignment_243705' (line 333)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 333, 12), 'call_assignment_243705', get_str_bbox_and_descent_call_result_244783)
        
        # Assigning a Call to a Name (line 333):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_244786 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 333, 12), 'int')
        # Processing the call keyword arguments
        kwargs_244787 = {}
        # Getting the type of 'call_assignment_243705' (line 333)
        call_assignment_243705_244784 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 333, 12), 'call_assignment_243705', False)
        # Obtaining the member '__getitem__' of a type (line 333)
        getitem___244785 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 333, 12), call_assignment_243705_244784, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_244788 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___244785, *[int_244786], **kwargs_244787)
        
        # Assigning a type to the variable 'call_assignment_243706' (line 333)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 333, 12), 'call_assignment_243706', getitem___call_result_244788)
        
        # Assigning a Name to a Name (line 333):
        # Getting the type of 'call_assignment_243706' (line 333)
        call_assignment_243706_244789 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 333, 12), 'call_assignment_243706')
        # Assigning a type to the variable 'l' (line 333)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 333, 12), 'l', call_assignment_243706_244789)
        
        # Assigning a Call to a Name (line 333):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_244792 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 333, 12), 'int')
        # Processing the call keyword arguments
        kwargs_244793 = {}
        # Getting the type of 'call_assignment_243705' (line 333)
        call_assignment_243705_244790 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 333, 12), 'call_assignment_243705', False)
        # Obtaining the member '__getitem__' of a type (line 333)
        getitem___244791 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 333, 12), call_assignment_243705_244790, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_244794 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___244791, *[int_244792], **kwargs_244793)
        
        # Assigning a type to the variable 'call_assignment_243707' (line 333)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 333, 12), 'call_assignment_243707', getitem___call_result_244794)
        
        # Assigning a Name to a Name (line 333):
        # Getting the type of 'call_assignment_243707' (line 333)
        call_assignment_243707_244795 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 333, 12), 'call_assignment_243707')
        # Assigning a type to the variable 'b' (line 333)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 333, 14), 'b', call_assignment_243707_244795)
        
        # Assigning a Call to a Name (line 333):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_244798 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 333, 12), 'int')
        # Processing the call keyword arguments
        kwargs_244799 = {}
        # Getting the type of 'call_assignment_243705' (line 333)
        call_assignment_243705_244796 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 333, 12), 'call_assignment_243705', False)
        # Obtaining the member '__getitem__' of a type (line 333)
        getitem___244797 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 333, 12), call_assignment_243705_244796, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_244800 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___244797, *[int_244798], **kwargs_244799)
        
        # Assigning a type to the variable 'call_assignment_243708' (line 333)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 333, 12), 'call_assignment_243708', getitem___call_result_244800)
        
        # Assigning a Name to a Name (line 333):
        # Getting the type of 'call_assignment_243708' (line 333)
        call_assignment_243708_244801 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 333, 12), 'call_assignment_243708')
        # Assigning a type to the variable 'w' (line 333)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 333, 16), 'w', call_assignment_243708_244801)
        
        # Assigning a Call to a Name (line 333):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_244804 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 333, 12), 'int')
        # Processing the call keyword arguments
        kwargs_244805 = {}
        # Getting the type of 'call_assignment_243705' (line 333)
        call_assignment_243705_244802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 333, 12), 'call_assignment_243705', False)
        # Obtaining the member '__getitem__' of a type (line 333)
        getitem___244803 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 333, 12), call_assignment_243705_244802, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_244806 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___244803, *[int_244804], **kwargs_244805)
        
        # Assigning a type to the variable 'call_assignment_243709' (line 333)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 333, 12), 'call_assignment_243709', getitem___call_result_244806)
        
        # Assigning a Name to a Name (line 333):
        # Getting the type of 'call_assignment_243709' (line 333)
        call_assignment_243709_244807 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 333, 12), 'call_assignment_243709')
        # Assigning a type to the variable 'h' (line 333)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 333, 18), 'h', call_assignment_243709_244807)
        
        # Assigning a Call to a Name (line 333):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_244810 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 333, 12), 'int')
        # Processing the call keyword arguments
        kwargs_244811 = {}
        # Getting the type of 'call_assignment_243705' (line 333)
        call_assignment_243705_244808 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 333, 12), 'call_assignment_243705', False)
        # Obtaining the member '__getitem__' of a type (line 333)
        getitem___244809 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 333, 12), call_assignment_243705_244808, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_244812 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___244809, *[int_244810], **kwargs_244811)
        
        # Assigning a type to the variable 'call_assignment_243710' (line 333)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 333, 12), 'call_assignment_243710', getitem___call_result_244812)
        
        # Assigning a Name to a Name (line 333):
        # Getting the type of 'call_assignment_243710' (line 333)
        call_assignment_243710_244813 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 333, 12), 'call_assignment_243710')
        # Assigning a type to the variable 'd' (line 333)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 333, 20), 'd', call_assignment_243710_244813)
        
        # Assigning a Call to a Name (line 335):
        
        # Assigning a Call to a Name (line 335):
        
        # Call to get_size_in_points(...): (line 335)
        # Processing the call keyword arguments (line 335)
        kwargs_244816 = {}
        # Getting the type of 'prop' (line 335)
        prop_244814 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 335, 23), 'prop', False)
        # Obtaining the member 'get_size_in_points' of a type (line 335)
        get_size_in_points_244815 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 335, 23), prop_244814, 'get_size_in_points')
        # Calling get_size_in_points(args, kwargs) (line 335)
        get_size_in_points_call_result_244817 = invoke(stypy.reporting.localization.Localization(__file__, 335, 23), get_size_in_points_244815, *[], **kwargs_244816)
        
        # Assigning a type to the variable 'fontsize' (line 335)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 335, 12), 'fontsize', get_size_in_points_call_result_244817)
        
        # Assigning a BinOp to a Name (line 336):
        
        # Assigning a BinOp to a Name (line 336):
        float_244818 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 336, 20), 'float')
        # Getting the type of 'fontsize' (line 336)
        fontsize_244819 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 336, 26), 'fontsize')
        # Applying the binary operator '*' (line 336)
        result_mul_244820 = python_operator(stypy.reporting.localization.Localization(__file__, 336, 20), '*', float_244818, fontsize_244819)
        
        # Assigning a type to the variable 'scale' (line 336)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 336, 12), 'scale', result_mul_244820)
        
        # Getting the type of 'w' (line 337)
        w_244821 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 337, 12), 'w')
        # Getting the type of 'scale' (line 337)
        scale_244822 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 337, 17), 'scale')
        # Applying the binary operator '*=' (line 337)
        result_imul_244823 = python_operator(stypy.reporting.localization.Localization(__file__, 337, 12), '*=', w_244821, scale_244822)
        # Assigning a type to the variable 'w' (line 337)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 337, 12), 'w', result_imul_244823)
        
        
        # Getting the type of 'h' (line 338)
        h_244824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 338, 12), 'h')
        # Getting the type of 'scale' (line 338)
        scale_244825 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 338, 17), 'scale')
        # Applying the binary operator '*=' (line 338)
        result_imul_244826 = python_operator(stypy.reporting.localization.Localization(__file__, 338, 12), '*=', h_244824, scale_244825)
        # Assigning a type to the variable 'h' (line 338)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 338, 12), 'h', result_imul_244826)
        
        
        # Getting the type of 'd' (line 339)
        d_244827 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 339, 12), 'd')
        # Getting the type of 'scale' (line 339)
        scale_244828 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 339, 17), 'scale')
        # Applying the binary operator '*=' (line 339)
        result_imul_244829 = python_operator(stypy.reporting.localization.Localization(__file__, 339, 12), '*=', d_244827, scale_244828)
        # Assigning a type to the variable 'd' (line 339)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 339, 12), 'd', result_imul_244829)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 340)
        tuple_244830 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 340, 19), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 340)
        # Adding element type (line 340)
        # Getting the type of 'w' (line 340)
        w_244831 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 340, 19), 'w')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 340, 19), tuple_244830, w_244831)
        # Adding element type (line 340)
        # Getting the type of 'h' (line 340)
        h_244832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 340, 22), 'h')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 340, 19), tuple_244830, h_244832)
        # Adding element type (line 340)
        # Getting the type of 'd' (line 340)
        d_244833 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 340, 25), 'd')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 340, 19), tuple_244830, d_244833)
        
        # Assigning a type to the variable 'stypy_return_type' (line 340)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 340, 12), 'stypy_return_type', tuple_244830)
        # SSA join for if statement (line 330)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 342):
        
        # Assigning a Call to a Name (line 342):
        
        # Call to _get_font_ttf(...): (line 342)
        # Processing the call arguments (line 342)
        # Getting the type of 'prop' (line 342)
        prop_244836 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 342, 34), 'prop', False)
        # Processing the call keyword arguments (line 342)
        kwargs_244837 = {}
        # Getting the type of 'self' (line 342)
        self_244834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 342, 15), 'self', False)
        # Obtaining the member '_get_font_ttf' of a type (line 342)
        _get_font_ttf_244835 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 342, 15), self_244834, '_get_font_ttf')
        # Calling _get_font_ttf(args, kwargs) (line 342)
        _get_font_ttf_call_result_244838 = invoke(stypy.reporting.localization.Localization(__file__, 342, 15), _get_font_ttf_244835, *[prop_244836], **kwargs_244837)
        
        # Assigning a type to the variable 'font' (line 342)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 342, 8), 'font', _get_font_ttf_call_result_244838)
        
        # Call to set_text(...): (line 343)
        # Processing the call arguments (line 343)
        # Getting the type of 's' (line 343)
        s_244841 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 343, 22), 's', False)
        float_244842 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 343, 25), 'float')
        # Processing the call keyword arguments (line 343)
        # Getting the type of 'LOAD_NO_HINTING' (line 343)
        LOAD_NO_HINTING_244843 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 343, 36), 'LOAD_NO_HINTING', False)
        keyword_244844 = LOAD_NO_HINTING_244843
        kwargs_244845 = {'flags': keyword_244844}
        # Getting the type of 'font' (line 343)
        font_244839 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 343, 8), 'font', False)
        # Obtaining the member 'set_text' of a type (line 343)
        set_text_244840 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 343, 8), font_244839, 'set_text')
        # Calling set_text(args, kwargs) (line 343)
        set_text_call_result_244846 = invoke(stypy.reporting.localization.Localization(__file__, 343, 8), set_text_244840, *[s_244841, float_244842], **kwargs_244845)
        
        
        # Assigning a Call to a Tuple (line 344):
        
        # Assigning a Call to a Name:
        
        # Call to get_width_height(...): (line 344)
        # Processing the call keyword arguments (line 344)
        kwargs_244849 = {}
        # Getting the type of 'font' (line 344)
        font_244847 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 344, 15), 'font', False)
        # Obtaining the member 'get_width_height' of a type (line 344)
        get_width_height_244848 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 344, 15), font_244847, 'get_width_height')
        # Calling get_width_height(args, kwargs) (line 344)
        get_width_height_call_result_244850 = invoke(stypy.reporting.localization.Localization(__file__, 344, 15), get_width_height_244848, *[], **kwargs_244849)
        
        # Assigning a type to the variable 'call_assignment_243711' (line 344)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 344, 8), 'call_assignment_243711', get_width_height_call_result_244850)
        
        # Assigning a Call to a Name (line 344):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_244853 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 344, 8), 'int')
        # Processing the call keyword arguments
        kwargs_244854 = {}
        # Getting the type of 'call_assignment_243711' (line 344)
        call_assignment_243711_244851 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 344, 8), 'call_assignment_243711', False)
        # Obtaining the member '__getitem__' of a type (line 344)
        getitem___244852 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 344, 8), call_assignment_243711_244851, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_244855 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___244852, *[int_244853], **kwargs_244854)
        
        # Assigning a type to the variable 'call_assignment_243712' (line 344)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 344, 8), 'call_assignment_243712', getitem___call_result_244855)
        
        # Assigning a Name to a Name (line 344):
        # Getting the type of 'call_assignment_243712' (line 344)
        call_assignment_243712_244856 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 344, 8), 'call_assignment_243712')
        # Assigning a type to the variable 'w' (line 344)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 344, 8), 'w', call_assignment_243712_244856)
        
        # Assigning a Call to a Name (line 344):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_244859 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 344, 8), 'int')
        # Processing the call keyword arguments
        kwargs_244860 = {}
        # Getting the type of 'call_assignment_243711' (line 344)
        call_assignment_243711_244857 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 344, 8), 'call_assignment_243711', False)
        # Obtaining the member '__getitem__' of a type (line 344)
        getitem___244858 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 344, 8), call_assignment_243711_244857, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_244861 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___244858, *[int_244859], **kwargs_244860)
        
        # Assigning a type to the variable 'call_assignment_243713' (line 344)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 344, 8), 'call_assignment_243713', getitem___call_result_244861)
        
        # Assigning a Name to a Name (line 344):
        # Getting the type of 'call_assignment_243713' (line 344)
        call_assignment_243713_244862 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 344, 8), 'call_assignment_243713')
        # Assigning a type to the variable 'h' (line 344)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 344, 11), 'h', call_assignment_243713_244862)
        
        # Getting the type of 'w' (line 345)
        w_244863 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 345, 8), 'w')
        float_244864 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 345, 13), 'float')
        # Applying the binary operator 'div=' (line 345)
        result_div_244865 = python_operator(stypy.reporting.localization.Localization(__file__, 345, 8), 'div=', w_244863, float_244864)
        # Assigning a type to the variable 'w' (line 345)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 345, 8), 'w', result_div_244865)
        
        
        # Getting the type of 'h' (line 346)
        h_244866 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 346, 8), 'h')
        float_244867 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 346, 13), 'float')
        # Applying the binary operator 'div=' (line 346)
        result_div_244868 = python_operator(stypy.reporting.localization.Localization(__file__, 346, 8), 'div=', h_244866, float_244867)
        # Assigning a type to the variable 'h' (line 346)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 346, 8), 'h', result_div_244868)
        
        
        # Assigning a Call to a Name (line 347):
        
        # Assigning a Call to a Name (line 347):
        
        # Call to get_descent(...): (line 347)
        # Processing the call keyword arguments (line 347)
        kwargs_244871 = {}
        # Getting the type of 'font' (line 347)
        font_244869 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 347, 12), 'font', False)
        # Obtaining the member 'get_descent' of a type (line 347)
        get_descent_244870 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 347, 12), font_244869, 'get_descent')
        # Calling get_descent(args, kwargs) (line 347)
        get_descent_call_result_244872 = invoke(stypy.reporting.localization.Localization(__file__, 347, 12), get_descent_244870, *[], **kwargs_244871)
        
        # Assigning a type to the variable 'd' (line 347)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 347, 8), 'd', get_descent_call_result_244872)
        
        # Getting the type of 'd' (line 348)
        d_244873 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 348, 8), 'd')
        float_244874 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 348, 13), 'float')
        # Applying the binary operator 'div=' (line 348)
        result_div_244875 = python_operator(stypy.reporting.localization.Localization(__file__, 348, 8), 'div=', d_244873, float_244874)
        # Assigning a type to the variable 'd' (line 348)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 348, 8), 'd', result_div_244875)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 350)
        tuple_244876 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 350, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 350)
        # Adding element type (line 350)
        # Getting the type of 'w' (line 350)
        w_244877 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 350, 15), 'w')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 350, 15), tuple_244876, w_244877)
        # Adding element type (line 350)
        # Getting the type of 'h' (line 350)
        h_244878 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 350, 18), 'h')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 350, 15), tuple_244876, h_244878)
        # Adding element type (line 350)
        # Getting the type of 'd' (line 350)
        d_244879 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 350, 21), 'd')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 350, 15), tuple_244876, d_244879)
        
        # Assigning a type to the variable 'stypy_return_type' (line 350)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 350, 8), 'stypy_return_type', tuple_244876)
        
        # ################# End of 'get_text_width_height_descent(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_text_width_height_descent' in the type store
        # Getting the type of 'stypy_return_type' (line 312)
        stypy_return_type_244880 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 312, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_244880)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_text_width_height_descent'
        return stypy_return_type_244880


    @norecursion
    def flipy(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'flipy'
        module_type_store = module_type_store.open_function_context('flipy', 352, 4, False)
        # Assigning a type to the variable 'self' (line 353)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 353, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererPS.flipy.__dict__.__setitem__('stypy_localization', localization)
        RendererPS.flipy.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererPS.flipy.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererPS.flipy.__dict__.__setitem__('stypy_function_name', 'RendererPS.flipy')
        RendererPS.flipy.__dict__.__setitem__('stypy_param_names_list', [])
        RendererPS.flipy.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererPS.flipy.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererPS.flipy.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererPS.flipy.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererPS.flipy.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererPS.flipy.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererPS.flipy', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'flipy', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'flipy(...)' code ##################

        unicode_244881 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 353, 8), 'unicode', u'return true if small y numbers are top for renderer')
        # Getting the type of 'False' (line 354)
        False_244882 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 15), 'False')
        # Assigning a type to the variable 'stypy_return_type' (line 354)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 354, 8), 'stypy_return_type', False_244882)
        
        # ################# End of 'flipy(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'flipy' in the type store
        # Getting the type of 'stypy_return_type' (line 352)
        stypy_return_type_244883 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 352, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_244883)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'flipy'
        return stypy_return_type_244883


    @norecursion
    def _get_font_afm(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_get_font_afm'
        module_type_store = module_type_store.open_function_context('_get_font_afm', 356, 4, False)
        # Assigning a type to the variable 'self' (line 357)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 357, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererPS._get_font_afm.__dict__.__setitem__('stypy_localization', localization)
        RendererPS._get_font_afm.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererPS._get_font_afm.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererPS._get_font_afm.__dict__.__setitem__('stypy_function_name', 'RendererPS._get_font_afm')
        RendererPS._get_font_afm.__dict__.__setitem__('stypy_param_names_list', ['prop'])
        RendererPS._get_font_afm.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererPS._get_font_afm.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererPS._get_font_afm.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererPS._get_font_afm.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererPS._get_font_afm.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererPS._get_font_afm.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererPS._get_font_afm', ['prop'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_get_font_afm', localization, ['prop'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_get_font_afm(...)' code ##################

        
        # Assigning a Call to a Name (line 357):
        
        # Assigning a Call to a Name (line 357):
        
        # Call to hash(...): (line 357)
        # Processing the call arguments (line 357)
        # Getting the type of 'prop' (line 357)
        prop_244885 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 19), 'prop', False)
        # Processing the call keyword arguments (line 357)
        kwargs_244886 = {}
        # Getting the type of 'hash' (line 357)
        hash_244884 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 14), 'hash', False)
        # Calling hash(args, kwargs) (line 357)
        hash_call_result_244887 = invoke(stypy.reporting.localization.Localization(__file__, 357, 14), hash_244884, *[prop_244885], **kwargs_244886)
        
        # Assigning a type to the variable 'key' (line 357)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 357, 8), 'key', hash_call_result_244887)
        
        # Assigning a Call to a Name (line 358):
        
        # Assigning a Call to a Name (line 358):
        
        # Call to get(...): (line 358)
        # Processing the call arguments (line 358)
        # Getting the type of 'key' (line 358)
        key_244891 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 358, 33), 'key', False)
        # Processing the call keyword arguments (line 358)
        kwargs_244892 = {}
        # Getting the type of 'self' (line 358)
        self_244888 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 358, 15), 'self', False)
        # Obtaining the member 'afmfontd' of a type (line 358)
        afmfontd_244889 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 358, 15), self_244888, 'afmfontd')
        # Obtaining the member 'get' of a type (line 358)
        get_244890 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 358, 15), afmfontd_244889, 'get')
        # Calling get(args, kwargs) (line 358)
        get_call_result_244893 = invoke(stypy.reporting.localization.Localization(__file__, 358, 15), get_244890, *[key_244891], **kwargs_244892)
        
        # Assigning a type to the variable 'font' (line 358)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 358, 8), 'font', get_call_result_244893)
        
        # Type idiom detected: calculating its left and rigth part (line 359)
        # Getting the type of 'font' (line 359)
        font_244894 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 359, 11), 'font')
        # Getting the type of 'None' (line 359)
        None_244895 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 359, 19), 'None')
        
        (may_be_244896, more_types_in_union_244897) = may_be_none(font_244894, None_244895)

        if may_be_244896:

            if more_types_in_union_244897:
                # Runtime conditional SSA (line 359)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Call to a Name (line 360):
            
            # Assigning a Call to a Name (line 360):
            
            # Call to findfont(...): (line 360)
            # Processing the call arguments (line 360)
            # Getting the type of 'prop' (line 360)
            prop_244899 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 360, 29), 'prop', False)
            # Processing the call keyword arguments (line 360)
            unicode_244900 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 360, 43), 'unicode', u'afm')
            keyword_244901 = unicode_244900
            # Getting the type of 'self' (line 360)
            self_244902 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 360, 60), 'self', False)
            # Obtaining the member '_afm_font_dir' of a type (line 360)
            _afm_font_dir_244903 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 360, 60), self_244902, '_afm_font_dir')
            keyword_244904 = _afm_font_dir_244903
            kwargs_244905 = {'directory': keyword_244904, 'fontext': keyword_244901}
            # Getting the type of 'findfont' (line 360)
            findfont_244898 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 360, 20), 'findfont', False)
            # Calling findfont(args, kwargs) (line 360)
            findfont_call_result_244906 = invoke(stypy.reporting.localization.Localization(__file__, 360, 20), findfont_244898, *[prop_244899], **kwargs_244905)
            
            # Assigning a type to the variable 'fname' (line 360)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 360, 12), 'fname', findfont_call_result_244906)
            
            # Type idiom detected: calculating its left and rigth part (line 361)
            # Getting the type of 'fname' (line 361)
            fname_244907 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 361, 15), 'fname')
            # Getting the type of 'None' (line 361)
            None_244908 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 361, 24), 'None')
            
            (may_be_244909, more_types_in_union_244910) = may_be_none(fname_244907, None_244908)

            if may_be_244909:

                if more_types_in_union_244910:
                    # Runtime conditional SSA (line 361)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
                else:
                    module_type_store = module_type_store

                
                # Assigning a Call to a Name (line 362):
                
                # Assigning a Call to a Name (line 362):
                
                # Call to findfont(...): (line 362)
                # Processing the call arguments (line 362)
                unicode_244912 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 363, 20), 'unicode', u'Helvetica')
                # Processing the call keyword arguments (line 362)
                unicode_244913 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 363, 41), 'unicode', u'afm')
                keyword_244914 = unicode_244913
                # Getting the type of 'self' (line 363)
                self_244915 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 363, 58), 'self', False)
                # Obtaining the member '_afm_font_dir' of a type (line 363)
                _afm_font_dir_244916 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 363, 58), self_244915, '_afm_font_dir')
                keyword_244917 = _afm_font_dir_244916
                kwargs_244918 = {'directory': keyword_244917, 'fontext': keyword_244914}
                # Getting the type of 'findfont' (line 362)
                findfont_244911 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 362, 24), 'findfont', False)
                # Calling findfont(args, kwargs) (line 362)
                findfont_call_result_244919 = invoke(stypy.reporting.localization.Localization(__file__, 362, 24), findfont_244911, *[unicode_244912], **kwargs_244918)
                
                # Assigning a type to the variable 'fname' (line 362)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 362, 16), 'fname', findfont_call_result_244919)

                if more_types_in_union_244910:
                    # SSA join for if statement (line 361)
                    module_type_store = module_type_store.join_ssa_context()


            
            
            # Assigning a Call to a Name (line 364):
            
            # Assigning a Call to a Name (line 364):
            
            # Call to get(...): (line 364)
            # Processing the call arguments (line 364)
            # Getting the type of 'fname' (line 364)
            fname_244923 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 364, 37), 'fname', False)
            # Processing the call keyword arguments (line 364)
            kwargs_244924 = {}
            # Getting the type of 'self' (line 364)
            self_244920 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 364, 19), 'self', False)
            # Obtaining the member 'afmfontd' of a type (line 364)
            afmfontd_244921 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 364, 19), self_244920, 'afmfontd')
            # Obtaining the member 'get' of a type (line 364)
            get_244922 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 364, 19), afmfontd_244921, 'get')
            # Calling get(args, kwargs) (line 364)
            get_call_result_244925 = invoke(stypy.reporting.localization.Localization(__file__, 364, 19), get_244922, *[fname_244923], **kwargs_244924)
            
            # Assigning a type to the variable 'font' (line 364)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 364, 12), 'font', get_call_result_244925)
            
            # Type idiom detected: calculating its left and rigth part (line 365)
            # Getting the type of 'font' (line 365)
            font_244926 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 365, 15), 'font')
            # Getting the type of 'None' (line 365)
            None_244927 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 365, 23), 'None')
            
            (may_be_244928, more_types_in_union_244929) = may_be_none(font_244926, None_244927)

            if may_be_244928:

                if more_types_in_union_244929:
                    # Runtime conditional SSA (line 365)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
                else:
                    module_type_store = module_type_store

                
                # Call to open(...): (line 366)
                # Processing the call arguments (line 366)
                # Getting the type of 'fname' (line 366)
                fname_244932 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 366, 29), 'fname', False)
                unicode_244933 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 366, 36), 'unicode', u'rb')
                # Processing the call keyword arguments (line 366)
                kwargs_244934 = {}
                # Getting the type of 'io' (line 366)
                io_244930 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 366, 21), 'io', False)
                # Obtaining the member 'open' of a type (line 366)
                open_244931 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 366, 21), io_244930, 'open')
                # Calling open(args, kwargs) (line 366)
                open_call_result_244935 = invoke(stypy.reporting.localization.Localization(__file__, 366, 21), open_244931, *[fname_244932, unicode_244933], **kwargs_244934)
                
                with_244936 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 366, 21), open_call_result_244935, 'with parameter', '__enter__', '__exit__')

                if with_244936:
                    # Calling the __enter__ method to initiate a with section
                    # Obtaining the member '__enter__' of a type (line 366)
                    enter___244937 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 366, 21), open_call_result_244935, '__enter__')
                    with_enter_244938 = invoke(stypy.reporting.localization.Localization(__file__, 366, 21), enter___244937)
                    # Assigning a type to the variable 'fh' (line 366)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 366, 21), 'fh', with_enter_244938)
                    
                    # Assigning a Call to a Name (line 367):
                    
                    # Assigning a Call to a Name (line 367):
                    
                    # Call to AFM(...): (line 367)
                    # Processing the call arguments (line 367)
                    # Getting the type of 'fh' (line 367)
                    fh_244940 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 367, 31), 'fh', False)
                    # Processing the call keyword arguments (line 367)
                    kwargs_244941 = {}
                    # Getting the type of 'AFM' (line 367)
                    AFM_244939 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 367, 27), 'AFM', False)
                    # Calling AFM(args, kwargs) (line 367)
                    AFM_call_result_244942 = invoke(stypy.reporting.localization.Localization(__file__, 367, 27), AFM_244939, *[fh_244940], **kwargs_244941)
                    
                    # Assigning a type to the variable 'font' (line 367)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 367, 20), 'font', AFM_call_result_244942)
                    # Calling the __exit__ method to finish a with section
                    # Obtaining the member '__exit__' of a type (line 366)
                    exit___244943 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 366, 21), open_call_result_244935, '__exit__')
                    with_exit_244944 = invoke(stypy.reporting.localization.Localization(__file__, 366, 21), exit___244943, None, None, None)

                
                # Assigning a Name to a Subscript (line 368):
                
                # Assigning a Name to a Subscript (line 368):
                # Getting the type of 'font' (line 368)
                font_244945 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 368, 39), 'font')
                # Getting the type of 'self' (line 368)
                self_244946 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 368, 16), 'self')
                # Obtaining the member 'afmfontd' of a type (line 368)
                afmfontd_244947 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 368, 16), self_244946, 'afmfontd')
                # Getting the type of 'fname' (line 368)
                fname_244948 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 368, 30), 'fname')
                # Storing an element on a container (line 368)
                set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 368, 16), afmfontd_244947, (fname_244948, font_244945))

                if more_types_in_union_244929:
                    # SSA join for if statement (line 365)
                    module_type_store = module_type_store.join_ssa_context()


            
            
            # Assigning a Name to a Subscript (line 369):
            
            # Assigning a Name to a Subscript (line 369):
            # Getting the type of 'font' (line 369)
            font_244949 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 369, 33), 'font')
            # Getting the type of 'self' (line 369)
            self_244950 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 369, 12), 'self')
            # Obtaining the member 'afmfontd' of a type (line 369)
            afmfontd_244951 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 369, 12), self_244950, 'afmfontd')
            # Getting the type of 'key' (line 369)
            key_244952 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 369, 26), 'key')
            # Storing an element on a container (line 369)
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 369, 12), afmfontd_244951, (key_244952, font_244949))

            if more_types_in_union_244897:
                # SSA join for if statement (line 359)
                module_type_store = module_type_store.join_ssa_context()


        
        # Getting the type of 'font' (line 370)
        font_244953 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 370, 15), 'font')
        # Assigning a type to the variable 'stypy_return_type' (line 370)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 370, 8), 'stypy_return_type', font_244953)
        
        # ################# End of '_get_font_afm(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_get_font_afm' in the type store
        # Getting the type of 'stypy_return_type' (line 356)
        stypy_return_type_244954 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 356, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_244954)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_get_font_afm'
        return stypy_return_type_244954


    @norecursion
    def _get_font_ttf(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_get_font_ttf'
        module_type_store = module_type_store.open_function_context('_get_font_ttf', 372, 4, False)
        # Assigning a type to the variable 'self' (line 373)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 373, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererPS._get_font_ttf.__dict__.__setitem__('stypy_localization', localization)
        RendererPS._get_font_ttf.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererPS._get_font_ttf.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererPS._get_font_ttf.__dict__.__setitem__('stypy_function_name', 'RendererPS._get_font_ttf')
        RendererPS._get_font_ttf.__dict__.__setitem__('stypy_param_names_list', ['prop'])
        RendererPS._get_font_ttf.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererPS._get_font_ttf.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererPS._get_font_ttf.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererPS._get_font_ttf.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererPS._get_font_ttf.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererPS._get_font_ttf.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererPS._get_font_ttf', ['prop'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_get_font_ttf', localization, ['prop'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_get_font_ttf(...)' code ##################

        
        # Assigning a Call to a Name (line 373):
        
        # Assigning a Call to a Name (line 373):
        
        # Call to findfont(...): (line 373)
        # Processing the call arguments (line 373)
        # Getting the type of 'prop' (line 373)
        prop_244956 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 373, 25), 'prop', False)
        # Processing the call keyword arguments (line 373)
        kwargs_244957 = {}
        # Getting the type of 'findfont' (line 373)
        findfont_244955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 373, 16), 'findfont', False)
        # Calling findfont(args, kwargs) (line 373)
        findfont_call_result_244958 = invoke(stypy.reporting.localization.Localization(__file__, 373, 16), findfont_244955, *[prop_244956], **kwargs_244957)
        
        # Assigning a type to the variable 'fname' (line 373)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 373, 8), 'fname', findfont_call_result_244958)
        
        # Assigning a Call to a Name (line 374):
        
        # Assigning a Call to a Name (line 374):
        
        # Call to get_font(...): (line 374)
        # Processing the call arguments (line 374)
        # Getting the type of 'fname' (line 374)
        fname_244960 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 374, 24), 'fname', False)
        # Processing the call keyword arguments (line 374)
        kwargs_244961 = {}
        # Getting the type of 'get_font' (line 374)
        get_font_244959 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 374, 15), 'get_font', False)
        # Calling get_font(args, kwargs) (line 374)
        get_font_call_result_244962 = invoke(stypy.reporting.localization.Localization(__file__, 374, 15), get_font_244959, *[fname_244960], **kwargs_244961)
        
        # Assigning a type to the variable 'font' (line 374)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 374, 8), 'font', get_font_call_result_244962)
        
        # Call to clear(...): (line 375)
        # Processing the call keyword arguments (line 375)
        kwargs_244965 = {}
        # Getting the type of 'font' (line 375)
        font_244963 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 375, 8), 'font', False)
        # Obtaining the member 'clear' of a type (line 375)
        clear_244964 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 375, 8), font_244963, 'clear')
        # Calling clear(args, kwargs) (line 375)
        clear_call_result_244966 = invoke(stypy.reporting.localization.Localization(__file__, 375, 8), clear_244964, *[], **kwargs_244965)
        
        
        # Assigning a Call to a Name (line 376):
        
        # Assigning a Call to a Name (line 376):
        
        # Call to get_size_in_points(...): (line 376)
        # Processing the call keyword arguments (line 376)
        kwargs_244969 = {}
        # Getting the type of 'prop' (line 376)
        prop_244967 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 376, 15), 'prop', False)
        # Obtaining the member 'get_size_in_points' of a type (line 376)
        get_size_in_points_244968 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 376, 15), prop_244967, 'get_size_in_points')
        # Calling get_size_in_points(args, kwargs) (line 376)
        get_size_in_points_call_result_244970 = invoke(stypy.reporting.localization.Localization(__file__, 376, 15), get_size_in_points_244968, *[], **kwargs_244969)
        
        # Assigning a type to the variable 'size' (line 376)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 376, 8), 'size', get_size_in_points_call_result_244970)
        
        # Call to set_size(...): (line 377)
        # Processing the call arguments (line 377)
        # Getting the type of 'size' (line 377)
        size_244973 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 377, 22), 'size', False)
        float_244974 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 377, 28), 'float')
        # Processing the call keyword arguments (line 377)
        kwargs_244975 = {}
        # Getting the type of 'font' (line 377)
        font_244971 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 377, 8), 'font', False)
        # Obtaining the member 'set_size' of a type (line 377)
        set_size_244972 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 377, 8), font_244971, 'set_size')
        # Calling set_size(args, kwargs) (line 377)
        set_size_call_result_244976 = invoke(stypy.reporting.localization.Localization(__file__, 377, 8), set_size_244972, *[size_244973, float_244974], **kwargs_244975)
        
        # Getting the type of 'font' (line 378)
        font_244977 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 378, 15), 'font')
        # Assigning a type to the variable 'stypy_return_type' (line 378)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 378, 8), 'stypy_return_type', font_244977)
        
        # ################# End of '_get_font_ttf(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_get_font_ttf' in the type store
        # Getting the type of 'stypy_return_type' (line 372)
        stypy_return_type_244978 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 372, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_244978)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_get_font_ttf'
        return stypy_return_type_244978


    @norecursion
    def _rgb(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_rgb'
        module_type_store = module_type_store.open_function_context('_rgb', 380, 4, False)
        # Assigning a type to the variable 'self' (line 381)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 381, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererPS._rgb.__dict__.__setitem__('stypy_localization', localization)
        RendererPS._rgb.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererPS._rgb.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererPS._rgb.__dict__.__setitem__('stypy_function_name', 'RendererPS._rgb')
        RendererPS._rgb.__dict__.__setitem__('stypy_param_names_list', ['rgba'])
        RendererPS._rgb.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererPS._rgb.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererPS._rgb.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererPS._rgb.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererPS._rgb.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererPS._rgb.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererPS._rgb', ['rgba'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_rgb', localization, ['rgba'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_rgb(...)' code ##################

        
        # Assigning a Subscript to a Tuple (line 381):
        
        # Assigning a Subscript to a Name (line 381):
        
        # Obtaining the type of the subscript
        int_244979 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 381, 8), 'int')
        
        # Obtaining the type of the subscript
        int_244980 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 381, 27), 'int')
        slice_244981 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 381, 15), None, int_244980, None)
        # Getting the type of 'rgba' (line 381)
        rgba_244982 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 381, 15), 'rgba')
        # Obtaining the member 'shape' of a type (line 381)
        shape_244983 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 381, 15), rgba_244982, 'shape')
        # Obtaining the member '__getitem__' of a type (line 381)
        getitem___244984 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 381, 15), shape_244983, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 381)
        subscript_call_result_244985 = invoke(stypy.reporting.localization.Localization(__file__, 381, 15), getitem___244984, slice_244981)
        
        # Obtaining the member '__getitem__' of a type (line 381)
        getitem___244986 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 381, 8), subscript_call_result_244985, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 381)
        subscript_call_result_244987 = invoke(stypy.reporting.localization.Localization(__file__, 381, 8), getitem___244986, int_244979)
        
        # Assigning a type to the variable 'tuple_var_assignment_243714' (line 381)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 381, 8), 'tuple_var_assignment_243714', subscript_call_result_244987)
        
        # Assigning a Subscript to a Name (line 381):
        
        # Obtaining the type of the subscript
        int_244988 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 381, 8), 'int')
        
        # Obtaining the type of the subscript
        int_244989 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 381, 27), 'int')
        slice_244990 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 381, 15), None, int_244989, None)
        # Getting the type of 'rgba' (line 381)
        rgba_244991 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 381, 15), 'rgba')
        # Obtaining the member 'shape' of a type (line 381)
        shape_244992 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 381, 15), rgba_244991, 'shape')
        # Obtaining the member '__getitem__' of a type (line 381)
        getitem___244993 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 381, 15), shape_244992, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 381)
        subscript_call_result_244994 = invoke(stypy.reporting.localization.Localization(__file__, 381, 15), getitem___244993, slice_244990)
        
        # Obtaining the member '__getitem__' of a type (line 381)
        getitem___244995 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 381, 8), subscript_call_result_244994, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 381)
        subscript_call_result_244996 = invoke(stypy.reporting.localization.Localization(__file__, 381, 8), getitem___244995, int_244988)
        
        # Assigning a type to the variable 'tuple_var_assignment_243715' (line 381)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 381, 8), 'tuple_var_assignment_243715', subscript_call_result_244996)
        
        # Assigning a Name to a Name (line 381):
        # Getting the type of 'tuple_var_assignment_243714' (line 381)
        tuple_var_assignment_243714_244997 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 381, 8), 'tuple_var_assignment_243714')
        # Assigning a type to the variable 'h' (line 381)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 381, 8), 'h', tuple_var_assignment_243714_244997)
        
        # Assigning a Name to a Name (line 381):
        # Getting the type of 'tuple_var_assignment_243715' (line 381)
        tuple_var_assignment_243715_244998 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 381, 8), 'tuple_var_assignment_243715')
        # Assigning a type to the variable 'w' (line 381)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 381, 11), 'w', tuple_var_assignment_243715_244998)
        
        # Assigning a Subscript to a Name (line 382):
        
        # Assigning a Subscript to a Name (line 382):
        
        # Obtaining the type of the subscript
        int_244999 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 382, 21), 'int')
        slice_245000 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 382, 14), None, None, int_244999)
        slice_245001 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 382, 14), None, None, None)
        int_245002 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 382, 29), 'int')
        slice_245003 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 382, 14), None, int_245002, None)
        # Getting the type of 'rgba' (line 382)
        rgba_245004 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 382, 14), 'rgba')
        # Obtaining the member '__getitem__' of a type (line 382)
        getitem___245005 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 382, 14), rgba_245004, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 382)
        subscript_call_result_245006 = invoke(stypy.reporting.localization.Localization(__file__, 382, 14), getitem___245005, (slice_245000, slice_245001, slice_245003))
        
        # Assigning a type to the variable 'rgb' (line 382)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 382, 8), 'rgb', subscript_call_result_245006)
        
        # Obtaining an instance of the builtin type 'tuple' (line 383)
        tuple_245007 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 383, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 383)
        # Adding element type (line 383)
        # Getting the type of 'h' (line 383)
        h_245008 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 383, 15), 'h')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 383, 15), tuple_245007, h_245008)
        # Adding element type (line 383)
        # Getting the type of 'w' (line 383)
        w_245009 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 383, 18), 'w')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 383, 15), tuple_245007, w_245009)
        # Adding element type (line 383)
        
        # Call to tostring(...): (line 383)
        # Processing the call keyword arguments (line 383)
        kwargs_245012 = {}
        # Getting the type of 'rgb' (line 383)
        rgb_245010 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 383, 21), 'rgb', False)
        # Obtaining the member 'tostring' of a type (line 383)
        tostring_245011 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 383, 21), rgb_245010, 'tostring')
        # Calling tostring(args, kwargs) (line 383)
        tostring_call_result_245013 = invoke(stypy.reporting.localization.Localization(__file__, 383, 21), tostring_245011, *[], **kwargs_245012)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 383, 15), tuple_245007, tostring_call_result_245013)
        
        # Assigning a type to the variable 'stypy_return_type' (line 383)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 383, 8), 'stypy_return_type', tuple_245007)
        
        # ################# End of '_rgb(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_rgb' in the type store
        # Getting the type of 'stypy_return_type' (line 380)
        stypy_return_type_245014 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 380, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_245014)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_rgb'
        return stypy_return_type_245014


    @norecursion
    def _hex_lines(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        int_245015 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 385, 43), 'int')
        defaults = [int_245015]
        # Create a new context for function '_hex_lines'
        module_type_store = module_type_store.open_function_context('_hex_lines', 385, 4, False)
        # Assigning a type to the variable 'self' (line 386)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 386, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererPS._hex_lines.__dict__.__setitem__('stypy_localization', localization)
        RendererPS._hex_lines.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererPS._hex_lines.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererPS._hex_lines.__dict__.__setitem__('stypy_function_name', 'RendererPS._hex_lines')
        RendererPS._hex_lines.__dict__.__setitem__('stypy_param_names_list', ['s', 'chars_per_line'])
        RendererPS._hex_lines.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererPS._hex_lines.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererPS._hex_lines.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererPS._hex_lines.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererPS._hex_lines.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererPS._hex_lines.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererPS._hex_lines', ['s', 'chars_per_line'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_hex_lines', localization, ['s', 'chars_per_line'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_hex_lines(...)' code ##################

        
        # Assigning a Call to a Name (line 386):
        
        # Assigning a Call to a Name (line 386):
        
        # Call to b2a_hex(...): (line 386)
        # Processing the call arguments (line 386)
        # Getting the type of 's' (line 386)
        s_245018 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 386, 29), 's', False)
        # Processing the call keyword arguments (line 386)
        kwargs_245019 = {}
        # Getting the type of 'binascii' (line 386)
        binascii_245016 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 386, 12), 'binascii', False)
        # Obtaining the member 'b2a_hex' of a type (line 386)
        b2a_hex_245017 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 386, 12), binascii_245016, 'b2a_hex')
        # Calling b2a_hex(args, kwargs) (line 386)
        b2a_hex_call_result_245020 = invoke(stypy.reporting.localization.Localization(__file__, 386, 12), b2a_hex_245017, *[s_245018], **kwargs_245019)
        
        # Assigning a type to the variable 's' (line 386)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 386, 8), 's', b2a_hex_call_result_245020)
        
        # Assigning a Call to a Name (line 387):
        
        # Assigning a Call to a Name (line 387):
        
        # Call to len(...): (line 387)
        # Processing the call arguments (line 387)
        # Getting the type of 's' (line 387)
        s_245022 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 387, 19), 's', False)
        # Processing the call keyword arguments (line 387)
        kwargs_245023 = {}
        # Getting the type of 'len' (line 387)
        len_245021 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 387, 15), 'len', False)
        # Calling len(args, kwargs) (line 387)
        len_call_result_245024 = invoke(stypy.reporting.localization.Localization(__file__, 387, 15), len_245021, *[s_245022], **kwargs_245023)
        
        # Assigning a type to the variable 'nhex' (line 387)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 387, 8), 'nhex', len_call_result_245024)
        
        # Assigning a List to a Name (line 388):
        
        # Assigning a List to a Name (line 388):
        
        # Obtaining an instance of the builtin type 'list' (line 388)
        list_245025 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 388, 16), 'list')
        # Adding type elements to the builtin type 'list' instance (line 388)
        
        # Assigning a type to the variable 'lines' (line 388)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 388, 8), 'lines', list_245025)
        
        
        # Call to range(...): (line 389)
        # Processing the call arguments (line 389)
        int_245027 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 389, 23), 'int')
        # Getting the type of 'nhex' (line 389)
        nhex_245028 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 389, 25), 'nhex', False)
        # Getting the type of 'chars_per_line' (line 389)
        chars_per_line_245029 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 389, 30), 'chars_per_line', False)
        # Processing the call keyword arguments (line 389)
        kwargs_245030 = {}
        # Getting the type of 'range' (line 389)
        range_245026 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 389, 17), 'range', False)
        # Calling range(args, kwargs) (line 389)
        range_call_result_245031 = invoke(stypy.reporting.localization.Localization(__file__, 389, 17), range_245026, *[int_245027, nhex_245028, chars_per_line_245029], **kwargs_245030)
        
        # Testing the type of a for loop iterable (line 389)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 389, 8), range_call_result_245031)
        # Getting the type of the for loop variable (line 389)
        for_loop_var_245032 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 389, 8), range_call_result_245031)
        # Assigning a type to the variable 'i' (line 389)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 389, 8), 'i', for_loop_var_245032)
        # SSA begins for a for statement (line 389)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 390):
        
        # Assigning a Call to a Name (line 390):
        
        # Call to min(...): (line 390)
        # Processing the call arguments (line 390)
        # Getting the type of 'i' (line 390)
        i_245034 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 390, 24), 'i', False)
        # Getting the type of 'chars_per_line' (line 390)
        chars_per_line_245035 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 390, 26), 'chars_per_line', False)
        # Applying the binary operator '+' (line 390)
        result_add_245036 = python_operator(stypy.reporting.localization.Localization(__file__, 390, 24), '+', i_245034, chars_per_line_245035)
        
        # Getting the type of 'nhex' (line 390)
        nhex_245037 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 390, 42), 'nhex', False)
        # Processing the call keyword arguments (line 390)
        kwargs_245038 = {}
        # Getting the type of 'min' (line 390)
        min_245033 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 390, 20), 'min', False)
        # Calling min(args, kwargs) (line 390)
        min_call_result_245039 = invoke(stypy.reporting.localization.Localization(__file__, 390, 20), min_245033, *[result_add_245036, nhex_245037], **kwargs_245038)
        
        # Assigning a type to the variable 'limit' (line 390)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 390, 12), 'limit', min_call_result_245039)
        
        # Call to append(...): (line 391)
        # Processing the call arguments (line 391)
        
        # Obtaining the type of the subscript
        # Getting the type of 'i' (line 391)
        i_245042 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 391, 27), 'i', False)
        # Getting the type of 'limit' (line 391)
        limit_245043 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 391, 29), 'limit', False)
        slice_245044 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 391, 25), i_245042, limit_245043, None)
        # Getting the type of 's' (line 391)
        s_245045 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 391, 25), 's', False)
        # Obtaining the member '__getitem__' of a type (line 391)
        getitem___245046 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 391, 25), s_245045, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 391)
        subscript_call_result_245047 = invoke(stypy.reporting.localization.Localization(__file__, 391, 25), getitem___245046, slice_245044)
        
        # Processing the call keyword arguments (line 391)
        kwargs_245048 = {}
        # Getting the type of 'lines' (line 391)
        lines_245040 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 391, 12), 'lines', False)
        # Obtaining the member 'append' of a type (line 391)
        append_245041 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 391, 12), lines_245040, 'append')
        # Calling append(args, kwargs) (line 391)
        append_call_result_245049 = invoke(stypy.reporting.localization.Localization(__file__, 391, 12), append_245041, *[subscript_call_result_245047], **kwargs_245048)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        # Getting the type of 'lines' (line 392)
        lines_245050 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 15), 'lines')
        # Assigning a type to the variable 'stypy_return_type' (line 392)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 392, 8), 'stypy_return_type', lines_245050)
        
        # ################# End of '_hex_lines(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_hex_lines' in the type store
        # Getting the type of 'stypy_return_type' (line 385)
        stypy_return_type_245051 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 385, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_245051)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_hex_lines'
        return stypy_return_type_245051


    @norecursion
    def get_image_magnification(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'get_image_magnification'
        module_type_store = module_type_store.open_function_context('get_image_magnification', 394, 4, False)
        # Assigning a type to the variable 'self' (line 395)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 395, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererPS.get_image_magnification.__dict__.__setitem__('stypy_localization', localization)
        RendererPS.get_image_magnification.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererPS.get_image_magnification.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererPS.get_image_magnification.__dict__.__setitem__('stypy_function_name', 'RendererPS.get_image_magnification')
        RendererPS.get_image_magnification.__dict__.__setitem__('stypy_param_names_list', [])
        RendererPS.get_image_magnification.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererPS.get_image_magnification.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererPS.get_image_magnification.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererPS.get_image_magnification.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererPS.get_image_magnification.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererPS.get_image_magnification.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererPS.get_image_magnification', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_image_magnification', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_image_magnification(...)' code ##################

        unicode_245052 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 399, (-1)), 'unicode', u'\n        Get the factor by which to magnify images passed to draw_image.\n        Allows a backend to have images at a different resolution to other\n        artists.\n        ')
        # Getting the type of 'self' (line 400)
        self_245053 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 400, 15), 'self')
        # Obtaining the member 'image_magnification' of a type (line 400)
        image_magnification_245054 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 400, 15), self_245053, 'image_magnification')
        # Assigning a type to the variable 'stypy_return_type' (line 400)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 400, 8), 'stypy_return_type', image_magnification_245054)
        
        # ################# End of 'get_image_magnification(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_image_magnification' in the type store
        # Getting the type of 'stypy_return_type' (line 394)
        stypy_return_type_245055 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 394, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_245055)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_image_magnification'
        return stypy_return_type_245055


    @norecursion
    def option_scale_image(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'option_scale_image'
        module_type_store = module_type_store.open_function_context('option_scale_image', 402, 4, False)
        # Assigning a type to the variable 'self' (line 403)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 403, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererPS.option_scale_image.__dict__.__setitem__('stypy_localization', localization)
        RendererPS.option_scale_image.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererPS.option_scale_image.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererPS.option_scale_image.__dict__.__setitem__('stypy_function_name', 'RendererPS.option_scale_image')
        RendererPS.option_scale_image.__dict__.__setitem__('stypy_param_names_list', [])
        RendererPS.option_scale_image.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererPS.option_scale_image.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererPS.option_scale_image.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererPS.option_scale_image.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererPS.option_scale_image.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererPS.option_scale_image.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererPS.option_scale_image', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'option_scale_image', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'option_scale_image(...)' code ##################

        unicode_245056 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 405, (-1)), 'unicode', u'\n        ps backend support arbitrary scaling of image.\n        ')
        # Getting the type of 'True' (line 406)
        True_245057 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 406, 15), 'True')
        # Assigning a type to the variable 'stypy_return_type' (line 406)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 406, 8), 'stypy_return_type', True_245057)
        
        # ################# End of 'option_scale_image(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'option_scale_image' in the type store
        # Getting the type of 'stypy_return_type' (line 402)
        stypy_return_type_245058 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 402, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_245058)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'option_scale_image'
        return stypy_return_type_245058


    @norecursion
    def option_image_nocomposite(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'option_image_nocomposite'
        module_type_store = module_type_store.open_function_context('option_image_nocomposite', 408, 4, False)
        # Assigning a type to the variable 'self' (line 409)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 409, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererPS.option_image_nocomposite.__dict__.__setitem__('stypy_localization', localization)
        RendererPS.option_image_nocomposite.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererPS.option_image_nocomposite.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererPS.option_image_nocomposite.__dict__.__setitem__('stypy_function_name', 'RendererPS.option_image_nocomposite')
        RendererPS.option_image_nocomposite.__dict__.__setitem__('stypy_param_names_list', [])
        RendererPS.option_image_nocomposite.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererPS.option_image_nocomposite.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererPS.option_image_nocomposite.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererPS.option_image_nocomposite.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererPS.option_image_nocomposite.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererPS.option_image_nocomposite.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererPS.option_image_nocomposite', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'option_image_nocomposite', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'option_image_nocomposite(...)' code ##################

        unicode_245059 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 412, (-1)), 'unicode', u'\n        return whether to generate a composite image from multiple images on\n        a set of axes\n        ')
        
        
        # Obtaining the type of the subscript
        unicode_245060 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 413, 28), 'unicode', u'image.composite_image')
        # Getting the type of 'rcParams' (line 413)
        rcParams_245061 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 413, 19), 'rcParams')
        # Obtaining the member '__getitem__' of a type (line 413)
        getitem___245062 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 413, 19), rcParams_245061, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 413)
        subscript_call_result_245063 = invoke(stypy.reporting.localization.Localization(__file__, 413, 19), getitem___245062, unicode_245060)
        
        # Applying the 'not' unary operator (line 413)
        result_not__245064 = python_operator(stypy.reporting.localization.Localization(__file__, 413, 15), 'not', subscript_call_result_245063)
        
        # Assigning a type to the variable 'stypy_return_type' (line 413)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 413, 8), 'stypy_return_type', result_not__245064)
        
        # ################# End of 'option_image_nocomposite(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'option_image_nocomposite' in the type store
        # Getting the type of 'stypy_return_type' (line 408)
        stypy_return_type_245065 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 408, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_245065)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'option_image_nocomposite'
        return stypy_return_type_245065


    @norecursion
    def _get_image_h_w_bits_command(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_get_image_h_w_bits_command'
        module_type_store = module_type_store.open_function_context('_get_image_h_w_bits_command', 415, 4, False)
        # Assigning a type to the variable 'self' (line 416)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 416, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererPS._get_image_h_w_bits_command.__dict__.__setitem__('stypy_localization', localization)
        RendererPS._get_image_h_w_bits_command.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererPS._get_image_h_w_bits_command.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererPS._get_image_h_w_bits_command.__dict__.__setitem__('stypy_function_name', 'RendererPS._get_image_h_w_bits_command')
        RendererPS._get_image_h_w_bits_command.__dict__.__setitem__('stypy_param_names_list', ['im'])
        RendererPS._get_image_h_w_bits_command.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererPS._get_image_h_w_bits_command.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererPS._get_image_h_w_bits_command.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererPS._get_image_h_w_bits_command.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererPS._get_image_h_w_bits_command.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererPS._get_image_h_w_bits_command.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererPS._get_image_h_w_bits_command', ['im'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_get_image_h_w_bits_command', localization, ['im'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_get_image_h_w_bits_command(...)' code ##################

        
        # Assigning a Call to a Tuple (line 416):
        
        # Assigning a Call to a Name:
        
        # Call to _rgb(...): (line 416)
        # Processing the call arguments (line 416)
        # Getting the type of 'im' (line 416)
        im_245068 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 416, 31), 'im', False)
        # Processing the call keyword arguments (line 416)
        kwargs_245069 = {}
        # Getting the type of 'self' (line 416)
        self_245066 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 416, 21), 'self', False)
        # Obtaining the member '_rgb' of a type (line 416)
        _rgb_245067 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 416, 21), self_245066, '_rgb')
        # Calling _rgb(args, kwargs) (line 416)
        _rgb_call_result_245070 = invoke(stypy.reporting.localization.Localization(__file__, 416, 21), _rgb_245067, *[im_245068], **kwargs_245069)
        
        # Assigning a type to the variable 'call_assignment_243716' (line 416)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 416, 8), 'call_assignment_243716', _rgb_call_result_245070)
        
        # Assigning a Call to a Name (line 416):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_245073 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 416, 8), 'int')
        # Processing the call keyword arguments
        kwargs_245074 = {}
        # Getting the type of 'call_assignment_243716' (line 416)
        call_assignment_243716_245071 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 416, 8), 'call_assignment_243716', False)
        # Obtaining the member '__getitem__' of a type (line 416)
        getitem___245072 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 416, 8), call_assignment_243716_245071, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_245075 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___245072, *[int_245073], **kwargs_245074)
        
        # Assigning a type to the variable 'call_assignment_243717' (line 416)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 416, 8), 'call_assignment_243717', getitem___call_result_245075)
        
        # Assigning a Name to a Name (line 416):
        # Getting the type of 'call_assignment_243717' (line 416)
        call_assignment_243717_245076 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 416, 8), 'call_assignment_243717')
        # Assigning a type to the variable 'h' (line 416)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 416, 8), 'h', call_assignment_243717_245076)
        
        # Assigning a Call to a Name (line 416):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_245079 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 416, 8), 'int')
        # Processing the call keyword arguments
        kwargs_245080 = {}
        # Getting the type of 'call_assignment_243716' (line 416)
        call_assignment_243716_245077 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 416, 8), 'call_assignment_243716', False)
        # Obtaining the member '__getitem__' of a type (line 416)
        getitem___245078 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 416, 8), call_assignment_243716_245077, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_245081 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___245078, *[int_245079], **kwargs_245080)
        
        # Assigning a type to the variable 'call_assignment_243718' (line 416)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 416, 8), 'call_assignment_243718', getitem___call_result_245081)
        
        # Assigning a Name to a Name (line 416):
        # Getting the type of 'call_assignment_243718' (line 416)
        call_assignment_243718_245082 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 416, 8), 'call_assignment_243718')
        # Assigning a type to the variable 'w' (line 416)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 416, 11), 'w', call_assignment_243718_245082)
        
        # Assigning a Call to a Name (line 416):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_245085 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 416, 8), 'int')
        # Processing the call keyword arguments
        kwargs_245086 = {}
        # Getting the type of 'call_assignment_243716' (line 416)
        call_assignment_243716_245083 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 416, 8), 'call_assignment_243716', False)
        # Obtaining the member '__getitem__' of a type (line 416)
        getitem___245084 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 416, 8), call_assignment_243716_245083, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_245087 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___245084, *[int_245085], **kwargs_245086)
        
        # Assigning a type to the variable 'call_assignment_243719' (line 416)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 416, 8), 'call_assignment_243719', getitem___call_result_245087)
        
        # Assigning a Name to a Name (line 416):
        # Getting the type of 'call_assignment_243719' (line 416)
        call_assignment_243719_245088 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 416, 8), 'call_assignment_243719')
        # Assigning a type to the variable 'bits' (line 416)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 416, 14), 'bits', call_assignment_243719_245088)
        
        # Assigning a Str to a Name (line 417):
        
        # Assigning a Str to a Name (line 417):
        unicode_245089 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 417, 19), 'unicode', u'false 3 colorimage')
        # Assigning a type to the variable 'imagecmd' (line 417)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 417, 8), 'imagecmd', unicode_245089)
        
        # Obtaining an instance of the builtin type 'tuple' (line 419)
        tuple_245090 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 419, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 419)
        # Adding element type (line 419)
        # Getting the type of 'h' (line 419)
        h_245091 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 419, 15), 'h')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 419, 15), tuple_245090, h_245091)
        # Adding element type (line 419)
        # Getting the type of 'w' (line 419)
        w_245092 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 419, 18), 'w')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 419, 15), tuple_245090, w_245092)
        # Adding element type (line 419)
        # Getting the type of 'bits' (line 419)
        bits_245093 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 419, 21), 'bits')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 419, 15), tuple_245090, bits_245093)
        # Adding element type (line 419)
        # Getting the type of 'imagecmd' (line 419)
        imagecmd_245094 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 419, 27), 'imagecmd')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 419, 15), tuple_245090, imagecmd_245094)
        
        # Assigning a type to the variable 'stypy_return_type' (line 419)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 419, 8), 'stypy_return_type', tuple_245090)
        
        # ################# End of '_get_image_h_w_bits_command(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_get_image_h_w_bits_command' in the type store
        # Getting the type of 'stypy_return_type' (line 415)
        stypy_return_type_245095 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 415, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_245095)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_get_image_h_w_bits_command'
        return stypy_return_type_245095


    @norecursion
    def draw_image(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'None' (line 421)
        None_245096 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 421, 49), 'None')
        defaults = [None_245096]
        # Create a new context for function 'draw_image'
        module_type_store = module_type_store.open_function_context('draw_image', 421, 4, False)
        # Assigning a type to the variable 'self' (line 422)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 422, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererPS.draw_image.__dict__.__setitem__('stypy_localization', localization)
        RendererPS.draw_image.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererPS.draw_image.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererPS.draw_image.__dict__.__setitem__('stypy_function_name', 'RendererPS.draw_image')
        RendererPS.draw_image.__dict__.__setitem__('stypy_param_names_list', ['gc', 'x', 'y', 'im', 'transform'])
        RendererPS.draw_image.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererPS.draw_image.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererPS.draw_image.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererPS.draw_image.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererPS.draw_image.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererPS.draw_image.__dict__.__setitem__('stypy_declared_arg_number', 6)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererPS.draw_image', ['gc', 'x', 'y', 'im', 'transform'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'draw_image', localization, ['gc', 'x', 'y', 'im', 'transform'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'draw_image(...)' code ##################

        unicode_245097 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 426, (-1)), 'unicode', u'\n        Draw the Image instance into the current axes; x is the\n        distance in pixels from the left hand side of the canvas and y\n        is the distance from bottom\n        ')
        
        # Assigning a Call to a Tuple (line 428):
        
        # Assigning a Call to a Name:
        
        # Call to _get_image_h_w_bits_command(...): (line 428)
        # Processing the call arguments (line 428)
        # Getting the type of 'im' (line 428)
        im_245100 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 428, 64), 'im', False)
        # Processing the call keyword arguments (line 428)
        kwargs_245101 = {}
        # Getting the type of 'self' (line 428)
        self_245098 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 428, 31), 'self', False)
        # Obtaining the member '_get_image_h_w_bits_command' of a type (line 428)
        _get_image_h_w_bits_command_245099 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 428, 31), self_245098, '_get_image_h_w_bits_command')
        # Calling _get_image_h_w_bits_command(args, kwargs) (line 428)
        _get_image_h_w_bits_command_call_result_245102 = invoke(stypy.reporting.localization.Localization(__file__, 428, 31), _get_image_h_w_bits_command_245099, *[im_245100], **kwargs_245101)
        
        # Assigning a type to the variable 'call_assignment_243720' (line 428)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 428, 8), 'call_assignment_243720', _get_image_h_w_bits_command_call_result_245102)
        
        # Assigning a Call to a Name (line 428):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_245105 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 428, 8), 'int')
        # Processing the call keyword arguments
        kwargs_245106 = {}
        # Getting the type of 'call_assignment_243720' (line 428)
        call_assignment_243720_245103 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 428, 8), 'call_assignment_243720', False)
        # Obtaining the member '__getitem__' of a type (line 428)
        getitem___245104 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 428, 8), call_assignment_243720_245103, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_245107 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___245104, *[int_245105], **kwargs_245106)
        
        # Assigning a type to the variable 'call_assignment_243721' (line 428)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 428, 8), 'call_assignment_243721', getitem___call_result_245107)
        
        # Assigning a Name to a Name (line 428):
        # Getting the type of 'call_assignment_243721' (line 428)
        call_assignment_243721_245108 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 428, 8), 'call_assignment_243721')
        # Assigning a type to the variable 'h' (line 428)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 428, 8), 'h', call_assignment_243721_245108)
        
        # Assigning a Call to a Name (line 428):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_245111 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 428, 8), 'int')
        # Processing the call keyword arguments
        kwargs_245112 = {}
        # Getting the type of 'call_assignment_243720' (line 428)
        call_assignment_243720_245109 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 428, 8), 'call_assignment_243720', False)
        # Obtaining the member '__getitem__' of a type (line 428)
        getitem___245110 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 428, 8), call_assignment_243720_245109, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_245113 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___245110, *[int_245111], **kwargs_245112)
        
        # Assigning a type to the variable 'call_assignment_243722' (line 428)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 428, 8), 'call_assignment_243722', getitem___call_result_245113)
        
        # Assigning a Name to a Name (line 428):
        # Getting the type of 'call_assignment_243722' (line 428)
        call_assignment_243722_245114 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 428, 8), 'call_assignment_243722')
        # Assigning a type to the variable 'w' (line 428)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 428, 11), 'w', call_assignment_243722_245114)
        
        # Assigning a Call to a Name (line 428):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_245117 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 428, 8), 'int')
        # Processing the call keyword arguments
        kwargs_245118 = {}
        # Getting the type of 'call_assignment_243720' (line 428)
        call_assignment_243720_245115 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 428, 8), 'call_assignment_243720', False)
        # Obtaining the member '__getitem__' of a type (line 428)
        getitem___245116 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 428, 8), call_assignment_243720_245115, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_245119 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___245116, *[int_245117], **kwargs_245118)
        
        # Assigning a type to the variable 'call_assignment_243723' (line 428)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 428, 8), 'call_assignment_243723', getitem___call_result_245119)
        
        # Assigning a Name to a Name (line 428):
        # Getting the type of 'call_assignment_243723' (line 428)
        call_assignment_243723_245120 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 428, 8), 'call_assignment_243723')
        # Assigning a type to the variable 'bits' (line 428)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 428, 14), 'bits', call_assignment_243723_245120)
        
        # Assigning a Call to a Name (line 428):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_245123 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 428, 8), 'int')
        # Processing the call keyword arguments
        kwargs_245124 = {}
        # Getting the type of 'call_assignment_243720' (line 428)
        call_assignment_243720_245121 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 428, 8), 'call_assignment_243720', False)
        # Obtaining the member '__getitem__' of a type (line 428)
        getitem___245122 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 428, 8), call_assignment_243720_245121, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_245125 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___245122, *[int_245123], **kwargs_245124)
        
        # Assigning a type to the variable 'call_assignment_243724' (line 428)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 428, 8), 'call_assignment_243724', getitem___call_result_245125)
        
        # Assigning a Name to a Name (line 428):
        # Getting the type of 'call_assignment_243724' (line 428)
        call_assignment_243724_245126 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 428, 8), 'call_assignment_243724')
        # Assigning a type to the variable 'imagecmd' (line 428)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 428, 20), 'imagecmd', call_assignment_243724_245126)
        
        # Assigning a Call to a Name (line 429):
        
        # Assigning a Call to a Name (line 429):
        
        # Call to decode(...): (line 429)
        # Processing the call arguments (line 429)
        unicode_245137 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 429, 60), 'unicode', u'ascii')
        # Processing the call keyword arguments (line 429)
        kwargs_245138 = {}
        
        # Call to join(...): (line 429)
        # Processing the call arguments (line 429)
        
        # Call to _hex_lines(...): (line 429)
        # Processing the call arguments (line 429)
        # Getting the type of 'bits' (line 429)
        bits_245131 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 429, 46), 'bits', False)
        # Processing the call keyword arguments (line 429)
        kwargs_245132 = {}
        # Getting the type of 'self' (line 429)
        self_245129 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 429, 30), 'self', False)
        # Obtaining the member '_hex_lines' of a type (line 429)
        _hex_lines_245130 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 429, 30), self_245129, '_hex_lines')
        # Calling _hex_lines(args, kwargs) (line 429)
        _hex_lines_call_result_245133 = invoke(stypy.reporting.localization.Localization(__file__, 429, 30), _hex_lines_245130, *[bits_245131], **kwargs_245132)
        
        # Processing the call keyword arguments (line 429)
        kwargs_245134 = {}
        str_245127 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 429, 19), 'str', '\n')
        # Obtaining the member 'join' of a type (line 429)
        join_245128 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 429, 19), str_245127, 'join')
        # Calling join(args, kwargs) (line 429)
        join_call_result_245135 = invoke(stypy.reporting.localization.Localization(__file__, 429, 19), join_245128, *[_hex_lines_call_result_245133], **kwargs_245134)
        
        # Obtaining the member 'decode' of a type (line 429)
        decode_245136 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 429, 19), join_call_result_245135, 'decode')
        # Calling decode(args, kwargs) (line 429)
        decode_call_result_245139 = invoke(stypy.reporting.localization.Localization(__file__, 429, 19), decode_245136, *[unicode_245137], **kwargs_245138)
        
        # Assigning a type to the variable 'hexlines' (line 429)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 429, 8), 'hexlines', decode_call_result_245139)
        
        # Type idiom detected: calculating its left and rigth part (line 431)
        # Getting the type of 'transform' (line 431)
        transform_245140 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 431, 11), 'transform')
        # Getting the type of 'None' (line 431)
        None_245141 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 431, 24), 'None')
        
        (may_be_245142, more_types_in_union_245143) = may_be_none(transform_245140, None_245141)

        if may_be_245142:

            if more_types_in_union_245143:
                # Runtime conditional SSA (line 431)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Str to a Name (line 432):
            
            # Assigning a Str to a Name (line 432):
            unicode_245144 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 432, 21), 'unicode', u'1 0 0 1 0 0')
            # Assigning a type to the variable 'matrix' (line 432)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 432, 12), 'matrix', unicode_245144)
            
            # Assigning a BinOp to a Name (line 433):
            
            # Assigning a BinOp to a Name (line 433):
            # Getting the type of 'w' (line 433)
            w_245145 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 433, 21), 'w')
            # Getting the type of 'self' (line 433)
            self_245146 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 433, 25), 'self')
            # Obtaining the member 'image_magnification' of a type (line 433)
            image_magnification_245147 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 433, 25), self_245146, 'image_magnification')
            # Applying the binary operator 'div' (line 433)
            result_div_245148 = python_operator(stypy.reporting.localization.Localization(__file__, 433, 21), 'div', w_245145, image_magnification_245147)
            
            # Assigning a type to the variable 'xscale' (line 433)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 433, 12), 'xscale', result_div_245148)
            
            # Assigning a BinOp to a Name (line 434):
            
            # Assigning a BinOp to a Name (line 434):
            # Getting the type of 'h' (line 434)
            h_245149 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 434, 21), 'h')
            # Getting the type of 'self' (line 434)
            self_245150 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 434, 25), 'self')
            # Obtaining the member 'image_magnification' of a type (line 434)
            image_magnification_245151 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 434, 25), self_245150, 'image_magnification')
            # Applying the binary operator 'div' (line 434)
            result_div_245152 = python_operator(stypy.reporting.localization.Localization(__file__, 434, 21), 'div', h_245149, image_magnification_245151)
            
            # Assigning a type to the variable 'yscale' (line 434)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 434, 12), 'yscale', result_div_245152)

            if more_types_in_union_245143:
                # Runtime conditional SSA for else branch (line 431)
                module_type_store.open_ssa_branch('idiom else')



        if ((not may_be_245142) or more_types_in_union_245143):
            
            # Assigning a Call to a Name (line 436):
            
            # Assigning a Call to a Name (line 436):
            
            # Call to join(...): (line 436)
            # Processing the call arguments (line 436)
            
            # Call to map(...): (line 436)
            # Processing the call arguments (line 436)
            # Getting the type of 'str' (line 436)
            str_245156 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 436, 34), 'str', False)
            
            # Call to to_values(...): (line 436)
            # Processing the call keyword arguments (line 436)
            kwargs_245162 = {}
            
            # Call to frozen(...): (line 436)
            # Processing the call keyword arguments (line 436)
            kwargs_245159 = {}
            # Getting the type of 'transform' (line 436)
            transform_245157 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 436, 39), 'transform', False)
            # Obtaining the member 'frozen' of a type (line 436)
            frozen_245158 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 436, 39), transform_245157, 'frozen')
            # Calling frozen(args, kwargs) (line 436)
            frozen_call_result_245160 = invoke(stypy.reporting.localization.Localization(__file__, 436, 39), frozen_245158, *[], **kwargs_245159)
            
            # Obtaining the member 'to_values' of a type (line 436)
            to_values_245161 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 436, 39), frozen_call_result_245160, 'to_values')
            # Calling to_values(args, kwargs) (line 436)
            to_values_call_result_245163 = invoke(stypy.reporting.localization.Localization(__file__, 436, 39), to_values_245161, *[], **kwargs_245162)
            
            # Processing the call keyword arguments (line 436)
            kwargs_245164 = {}
            # Getting the type of 'map' (line 436)
            map_245155 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 436, 30), 'map', False)
            # Calling map(args, kwargs) (line 436)
            map_call_result_245165 = invoke(stypy.reporting.localization.Localization(__file__, 436, 30), map_245155, *[str_245156, to_values_call_result_245163], **kwargs_245164)
            
            # Processing the call keyword arguments (line 436)
            kwargs_245166 = {}
            unicode_245153 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 436, 21), 'unicode', u' ')
            # Obtaining the member 'join' of a type (line 436)
            join_245154 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 436, 21), unicode_245153, 'join')
            # Calling join(args, kwargs) (line 436)
            join_call_result_245167 = invoke(stypy.reporting.localization.Localization(__file__, 436, 21), join_245154, *[map_call_result_245165], **kwargs_245166)
            
            # Assigning a type to the variable 'matrix' (line 436)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 436, 12), 'matrix', join_call_result_245167)
            
            # Assigning a Num to a Name (line 437):
            
            # Assigning a Num to a Name (line 437):
            float_245168 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 437, 21), 'float')
            # Assigning a type to the variable 'xscale' (line 437)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 437, 12), 'xscale', float_245168)
            
            # Assigning a Num to a Name (line 438):
            
            # Assigning a Num to a Name (line 438):
            float_245169 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 438, 21), 'float')
            # Assigning a type to the variable 'yscale' (line 438)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 438, 12), 'yscale', float_245169)

            if (may_be_245142 and more_types_in_union_245143):
                # SSA join for if statement (line 431)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a BinOp to a Name (line 440):
        
        # Assigning a BinOp to a Name (line 440):
        # Getting the type of 'self' (line 440)
        self_245170 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 440, 15), 'self')
        # Obtaining the member 'height' of a type (line 440)
        height_245171 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 440, 15), self_245170, 'height')
        int_245172 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 440, 29), 'int')
        # Applying the binary operator '*' (line 440)
        result_mul_245173 = python_operator(stypy.reporting.localization.Localization(__file__, 440, 15), '*', height_245171, int_245172)
        
        # Assigning a type to the variable 'figh' (line 440)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 440, 8), 'figh', result_mul_245173)
        
        # Assigning a Call to a Name (line 443):
        
        # Assigning a Call to a Name (line 443):
        
        # Call to get_clip_rectangle(...): (line 443)
        # Processing the call keyword arguments (line 443)
        kwargs_245176 = {}
        # Getting the type of 'gc' (line 443)
        gc_245174 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 443, 15), 'gc', False)
        # Obtaining the member 'get_clip_rectangle' of a type (line 443)
        get_clip_rectangle_245175 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 443, 15), gc_245174, 'get_clip_rectangle')
        # Calling get_clip_rectangle(args, kwargs) (line 443)
        get_clip_rectangle_call_result_245177 = invoke(stypy.reporting.localization.Localization(__file__, 443, 15), get_clip_rectangle_245175, *[], **kwargs_245176)
        
        # Assigning a type to the variable 'bbox' (line 443)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 443, 8), 'bbox', get_clip_rectangle_call_result_245177)
        
        # Assigning a Call to a Tuple (line 444):
        
        # Assigning a Call to a Name:
        
        # Call to get_clip_path(...): (line 444)
        # Processing the call keyword arguments (line 444)
        kwargs_245180 = {}
        # Getting the type of 'gc' (line 444)
        gc_245178 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 444, 35), 'gc', False)
        # Obtaining the member 'get_clip_path' of a type (line 444)
        get_clip_path_245179 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 444, 35), gc_245178, 'get_clip_path')
        # Calling get_clip_path(args, kwargs) (line 444)
        get_clip_path_call_result_245181 = invoke(stypy.reporting.localization.Localization(__file__, 444, 35), get_clip_path_245179, *[], **kwargs_245180)
        
        # Assigning a type to the variable 'call_assignment_243725' (line 444)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 444, 8), 'call_assignment_243725', get_clip_path_call_result_245181)
        
        # Assigning a Call to a Name (line 444):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_245184 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 444, 8), 'int')
        # Processing the call keyword arguments
        kwargs_245185 = {}
        # Getting the type of 'call_assignment_243725' (line 444)
        call_assignment_243725_245182 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 444, 8), 'call_assignment_243725', False)
        # Obtaining the member '__getitem__' of a type (line 444)
        getitem___245183 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 444, 8), call_assignment_243725_245182, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_245186 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___245183, *[int_245184], **kwargs_245185)
        
        # Assigning a type to the variable 'call_assignment_243726' (line 444)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 444, 8), 'call_assignment_243726', getitem___call_result_245186)
        
        # Assigning a Name to a Name (line 444):
        # Getting the type of 'call_assignment_243726' (line 444)
        call_assignment_243726_245187 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 444, 8), 'call_assignment_243726')
        # Assigning a type to the variable 'clippath' (line 444)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 444, 8), 'clippath', call_assignment_243726_245187)
        
        # Assigning a Call to a Name (line 444):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_245190 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 444, 8), 'int')
        # Processing the call keyword arguments
        kwargs_245191 = {}
        # Getting the type of 'call_assignment_243725' (line 444)
        call_assignment_243725_245188 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 444, 8), 'call_assignment_243725', False)
        # Obtaining the member '__getitem__' of a type (line 444)
        getitem___245189 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 444, 8), call_assignment_243725_245188, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_245192 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___245189, *[int_245190], **kwargs_245191)
        
        # Assigning a type to the variable 'call_assignment_243727' (line 444)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 444, 8), 'call_assignment_243727', getitem___call_result_245192)
        
        # Assigning a Name to a Name (line 444):
        # Getting the type of 'call_assignment_243727' (line 444)
        call_assignment_243727_245193 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 444, 8), 'call_assignment_243727')
        # Assigning a type to the variable 'clippath_trans' (line 444)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 444, 18), 'clippath_trans', call_assignment_243727_245193)
        
        # Assigning a List to a Name (line 446):
        
        # Assigning a List to a Name (line 446):
        
        # Obtaining an instance of the builtin type 'list' (line 446)
        list_245194 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 446, 15), 'list')
        # Adding type elements to the builtin type 'list' instance (line 446)
        
        # Assigning a type to the variable 'clip' (line 446)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 446, 8), 'clip', list_245194)
        
        # Type idiom detected: calculating its left and rigth part (line 447)
        # Getting the type of 'bbox' (line 447)
        bbox_245195 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 447, 8), 'bbox')
        # Getting the type of 'None' (line 447)
        None_245196 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 447, 23), 'None')
        
        (may_be_245197, more_types_in_union_245198) = may_not_be_none(bbox_245195, None_245196)

        if may_be_245197:

            if more_types_in_union_245198:
                # Runtime conditional SSA (line 447)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Attribute to a Tuple (line 448):
            
            # Assigning a Subscript to a Name (line 448):
            
            # Obtaining the type of the subscript
            int_245199 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 448, 12), 'int')
            # Getting the type of 'bbox' (line 448)
            bbox_245200 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 38), 'bbox')
            # Obtaining the member 'bounds' of a type (line 448)
            bounds_245201 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 448, 38), bbox_245200, 'bounds')
            # Obtaining the member '__getitem__' of a type (line 448)
            getitem___245202 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 448, 12), bounds_245201, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 448)
            subscript_call_result_245203 = invoke(stypy.reporting.localization.Localization(__file__, 448, 12), getitem___245202, int_245199)
            
            # Assigning a type to the variable 'tuple_var_assignment_243728' (line 448)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 448, 12), 'tuple_var_assignment_243728', subscript_call_result_245203)
            
            # Assigning a Subscript to a Name (line 448):
            
            # Obtaining the type of the subscript
            int_245204 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 448, 12), 'int')
            # Getting the type of 'bbox' (line 448)
            bbox_245205 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 38), 'bbox')
            # Obtaining the member 'bounds' of a type (line 448)
            bounds_245206 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 448, 38), bbox_245205, 'bounds')
            # Obtaining the member '__getitem__' of a type (line 448)
            getitem___245207 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 448, 12), bounds_245206, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 448)
            subscript_call_result_245208 = invoke(stypy.reporting.localization.Localization(__file__, 448, 12), getitem___245207, int_245204)
            
            # Assigning a type to the variable 'tuple_var_assignment_243729' (line 448)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 448, 12), 'tuple_var_assignment_243729', subscript_call_result_245208)
            
            # Assigning a Subscript to a Name (line 448):
            
            # Obtaining the type of the subscript
            int_245209 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 448, 12), 'int')
            # Getting the type of 'bbox' (line 448)
            bbox_245210 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 38), 'bbox')
            # Obtaining the member 'bounds' of a type (line 448)
            bounds_245211 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 448, 38), bbox_245210, 'bounds')
            # Obtaining the member '__getitem__' of a type (line 448)
            getitem___245212 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 448, 12), bounds_245211, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 448)
            subscript_call_result_245213 = invoke(stypy.reporting.localization.Localization(__file__, 448, 12), getitem___245212, int_245209)
            
            # Assigning a type to the variable 'tuple_var_assignment_243730' (line 448)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 448, 12), 'tuple_var_assignment_243730', subscript_call_result_245213)
            
            # Assigning a Subscript to a Name (line 448):
            
            # Obtaining the type of the subscript
            int_245214 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 448, 12), 'int')
            # Getting the type of 'bbox' (line 448)
            bbox_245215 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 38), 'bbox')
            # Obtaining the member 'bounds' of a type (line 448)
            bounds_245216 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 448, 38), bbox_245215, 'bounds')
            # Obtaining the member '__getitem__' of a type (line 448)
            getitem___245217 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 448, 12), bounds_245216, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 448)
            subscript_call_result_245218 = invoke(stypy.reporting.localization.Localization(__file__, 448, 12), getitem___245217, int_245214)
            
            # Assigning a type to the variable 'tuple_var_assignment_243731' (line 448)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 448, 12), 'tuple_var_assignment_243731', subscript_call_result_245218)
            
            # Assigning a Name to a Name (line 448):
            # Getting the type of 'tuple_var_assignment_243728' (line 448)
            tuple_var_assignment_243728_245219 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 12), 'tuple_var_assignment_243728')
            # Assigning a type to the variable 'clipx' (line 448)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 448, 12), 'clipx', tuple_var_assignment_243728_245219)
            
            # Assigning a Name to a Name (line 448):
            # Getting the type of 'tuple_var_assignment_243729' (line 448)
            tuple_var_assignment_243729_245220 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 12), 'tuple_var_assignment_243729')
            # Assigning a type to the variable 'clipy' (line 448)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 448, 18), 'clipy', tuple_var_assignment_243729_245220)
            
            # Assigning a Name to a Name (line 448):
            # Getting the type of 'tuple_var_assignment_243730' (line 448)
            tuple_var_assignment_243730_245221 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 12), 'tuple_var_assignment_243730')
            # Assigning a type to the variable 'clipw' (line 448)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 448, 24), 'clipw', tuple_var_assignment_243730_245221)
            
            # Assigning a Name to a Name (line 448):
            # Getting the type of 'tuple_var_assignment_243731' (line 448)
            tuple_var_assignment_243731_245222 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 12), 'tuple_var_assignment_243731')
            # Assigning a type to the variable 'cliph' (line 448)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 448, 30), 'cliph', tuple_var_assignment_243731_245222)
            
            # Call to append(...): (line 449)
            # Processing the call arguments (line 449)
            unicode_245225 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 449, 24), 'unicode', u'%s clipbox')
            
            # Call to _nums_to_str(...): (line 449)
            # Processing the call arguments (line 449)
            # Getting the type of 'clipw' (line 449)
            clipw_245227 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 449, 52), 'clipw', False)
            # Getting the type of 'cliph' (line 449)
            cliph_245228 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 449, 59), 'cliph', False)
            # Getting the type of 'clipx' (line 449)
            clipx_245229 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 449, 66), 'clipx', False)
            # Getting the type of 'clipy' (line 449)
            clipy_245230 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 449, 73), 'clipy', False)
            # Processing the call keyword arguments (line 449)
            kwargs_245231 = {}
            # Getting the type of '_nums_to_str' (line 449)
            _nums_to_str_245226 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 449, 39), '_nums_to_str', False)
            # Calling _nums_to_str(args, kwargs) (line 449)
            _nums_to_str_call_result_245232 = invoke(stypy.reporting.localization.Localization(__file__, 449, 39), _nums_to_str_245226, *[clipw_245227, cliph_245228, clipx_245229, clipy_245230], **kwargs_245231)
            
            # Applying the binary operator '%' (line 449)
            result_mod_245233 = python_operator(stypy.reporting.localization.Localization(__file__, 449, 24), '%', unicode_245225, _nums_to_str_call_result_245232)
            
            # Processing the call keyword arguments (line 449)
            kwargs_245234 = {}
            # Getting the type of 'clip' (line 449)
            clip_245223 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 449, 12), 'clip', False)
            # Obtaining the member 'append' of a type (line 449)
            append_245224 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 449, 12), clip_245223, 'append')
            # Calling append(args, kwargs) (line 449)
            append_call_result_245235 = invoke(stypy.reporting.localization.Localization(__file__, 449, 12), append_245224, *[result_mod_245233], **kwargs_245234)
            

            if more_types_in_union_245198:
                # SSA join for if statement (line 447)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Type idiom detected: calculating its left and rigth part (line 450)
        # Getting the type of 'clippath' (line 450)
        clippath_245236 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 450, 8), 'clippath')
        # Getting the type of 'None' (line 450)
        None_245237 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 450, 27), 'None')
        
        (may_be_245238, more_types_in_union_245239) = may_not_be_none(clippath_245236, None_245237)

        if may_be_245238:

            if more_types_in_union_245239:
                # Runtime conditional SSA (line 450)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Call to a Name (line 451):
            
            # Assigning a Call to a Name (line 451):
            
            # Call to _get_clip_path(...): (line 451)
            # Processing the call arguments (line 451)
            # Getting the type of 'clippath' (line 451)
            clippath_245242 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 451, 37), 'clippath', False)
            # Getting the type of 'clippath_trans' (line 451)
            clippath_trans_245243 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 451, 47), 'clippath_trans', False)
            # Processing the call keyword arguments (line 451)
            kwargs_245244 = {}
            # Getting the type of 'self' (line 451)
            self_245240 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 451, 17), 'self', False)
            # Obtaining the member '_get_clip_path' of a type (line 451)
            _get_clip_path_245241 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 451, 17), self_245240, '_get_clip_path')
            # Calling _get_clip_path(args, kwargs) (line 451)
            _get_clip_path_call_result_245245 = invoke(stypy.reporting.localization.Localization(__file__, 451, 17), _get_clip_path_245241, *[clippath_245242, clippath_trans_245243], **kwargs_245244)
            
            # Assigning a type to the variable 'id' (line 451)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 451, 12), 'id', _get_clip_path_call_result_245245)
            
            # Call to append(...): (line 452)
            # Processing the call arguments (line 452)
            unicode_245248 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 452, 24), 'unicode', u'%s')
            # Getting the type of 'id' (line 452)
            id_245249 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 452, 31), 'id', False)
            # Applying the binary operator '%' (line 452)
            result_mod_245250 = python_operator(stypy.reporting.localization.Localization(__file__, 452, 24), '%', unicode_245248, id_245249)
            
            # Processing the call keyword arguments (line 452)
            kwargs_245251 = {}
            # Getting the type of 'clip' (line 452)
            clip_245246 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 452, 12), 'clip', False)
            # Obtaining the member 'append' of a type (line 452)
            append_245247 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 452, 12), clip_245246, 'append')
            # Calling append(args, kwargs) (line 452)
            append_call_result_245252 = invoke(stypy.reporting.localization.Localization(__file__, 452, 12), append_245247, *[result_mod_245250], **kwargs_245251)
            

            if more_types_in_union_245239:
                # SSA join for if statement (line 450)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Call to a Name (line 453):
        
        # Assigning a Call to a Name (line 453):
        
        # Call to join(...): (line 453)
        # Processing the call arguments (line 453)
        # Getting the type of 'clip' (line 453)
        clip_245255 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 453, 25), 'clip', False)
        # Processing the call keyword arguments (line 453)
        kwargs_245256 = {}
        unicode_245253 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 453, 15), 'unicode', u'\n')
        # Obtaining the member 'join' of a type (line 453)
        join_245254 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 453, 15), unicode_245253, 'join')
        # Calling join(args, kwargs) (line 453)
        join_call_result_245257 = invoke(stypy.reporting.localization.Localization(__file__, 453, 15), join_245254, *[clip_245255], **kwargs_245256)
        
        # Assigning a type to the variable 'clip' (line 453)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 453, 8), 'clip', join_call_result_245257)
        
        # Assigning a BinOp to a Name (line 456):
        
        # Assigning a BinOp to a Name (line 456):
        unicode_245258 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 468, (-1)), 'unicode', u'gsave\n%(clip)s\n%(x)s %(y)s translate\n[%(matrix)s] concat\n%(xscale)s %(yscale)s scale\n/DataString %(w)s string def\n%(w)s %(h)s 8 [ %(w)s 0 0 -%(h)s 0 %(h)s ]\n{\ncurrentfile DataString readhexstring pop\n} bind %(imagecmd)s\n%(hexlines)s\ngrestore\n')
        
        # Call to locals(...): (line 468)
        # Processing the call keyword arguments (line 468)
        kwargs_245260 = {}
        # Getting the type of 'locals' (line 468)
        locals_245259 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 468, 6), 'locals', False)
        # Calling locals(args, kwargs) (line 468)
        locals_call_result_245261 = invoke(stypy.reporting.localization.Localization(__file__, 468, 6), locals_245259, *[], **kwargs_245260)
        
        # Applying the binary operator '%' (line 468)
        result_mod_245262 = python_operator(stypy.reporting.localization.Localization(__file__, 468, (-1)), '%', unicode_245258, locals_call_result_245261)
        
        # Assigning a type to the variable 'ps' (line 456)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 456, 8), 'ps', result_mod_245262)
        
        # Call to write(...): (line 469)
        # Processing the call arguments (line 469)
        # Getting the type of 'ps' (line 469)
        ps_245266 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 469, 29), 'ps', False)
        # Processing the call keyword arguments (line 469)
        kwargs_245267 = {}
        # Getting the type of 'self' (line 469)
        self_245263 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 469, 8), 'self', False)
        # Obtaining the member '_pswriter' of a type (line 469)
        _pswriter_245264 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 469, 8), self_245263, '_pswriter')
        # Obtaining the member 'write' of a type (line 469)
        write_245265 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 469, 8), _pswriter_245264, 'write')
        # Calling write(args, kwargs) (line 469)
        write_call_result_245268 = invoke(stypy.reporting.localization.Localization(__file__, 469, 8), write_245265, *[ps_245266], **kwargs_245267)
        
        
        # ################# End of 'draw_image(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'draw_image' in the type store
        # Getting the type of 'stypy_return_type' (line 421)
        stypy_return_type_245269 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 421, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_245269)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'draw_image'
        return stypy_return_type_245269


    @norecursion
    def _convert_path(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'False' (line 471)
        False_245270 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 471, 50), 'False')
        # Getting the type of 'None' (line 471)
        None_245271 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 471, 66), 'None')
        defaults = [False_245270, None_245271]
        # Create a new context for function '_convert_path'
        module_type_store = module_type_store.open_function_context('_convert_path', 471, 4, False)
        # Assigning a type to the variable 'self' (line 472)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 472, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererPS._convert_path.__dict__.__setitem__('stypy_localization', localization)
        RendererPS._convert_path.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererPS._convert_path.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererPS._convert_path.__dict__.__setitem__('stypy_function_name', 'RendererPS._convert_path')
        RendererPS._convert_path.__dict__.__setitem__('stypy_param_names_list', ['path', 'transform', 'clip', 'simplify'])
        RendererPS._convert_path.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererPS._convert_path.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererPS._convert_path.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererPS._convert_path.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererPS._convert_path.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererPS._convert_path.__dict__.__setitem__('stypy_declared_arg_number', 5)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererPS._convert_path', ['path', 'transform', 'clip', 'simplify'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_convert_path', localization, ['path', 'transform', 'clip', 'simplify'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_convert_path(...)' code ##################

        
        # Getting the type of 'clip' (line 472)
        clip_245272 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 472, 11), 'clip')
        # Testing the type of an if condition (line 472)
        if_condition_245273 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 472, 8), clip_245272)
        # Assigning a type to the variable 'if_condition_245273' (line 472)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 472, 8), 'if_condition_245273', if_condition_245273)
        # SSA begins for if statement (line 472)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Tuple to a Name (line 473):
        
        # Assigning a Tuple to a Name (line 473):
        
        # Obtaining an instance of the builtin type 'tuple' (line 473)
        tuple_245274 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 473, 20), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 473)
        # Adding element type (line 473)
        float_245275 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 473, 20), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 473, 20), tuple_245274, float_245275)
        # Adding element type (line 473)
        float_245276 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 473, 25), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 473, 20), tuple_245274, float_245276)
        # Adding element type (line 473)
        # Getting the type of 'self' (line 473)
        self_245277 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 473, 30), 'self')
        # Obtaining the member 'width' of a type (line 473)
        width_245278 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 473, 30), self_245277, 'width')
        float_245279 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 473, 43), 'float')
        # Applying the binary operator '*' (line 473)
        result_mul_245280 = python_operator(stypy.reporting.localization.Localization(__file__, 473, 30), '*', width_245278, float_245279)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 473, 20), tuple_245274, result_mul_245280)
        # Adding element type (line 473)
        # Getting the type of 'self' (line 474)
        self_245281 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 474, 20), 'self')
        # Obtaining the member 'height' of a type (line 474)
        height_245282 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 474, 20), self_245281, 'height')
        float_245283 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 474, 34), 'float')
        # Applying the binary operator '*' (line 474)
        result_mul_245284 = python_operator(stypy.reporting.localization.Localization(__file__, 474, 20), '*', height_245282, float_245283)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 473, 20), tuple_245274, result_mul_245284)
        
        # Assigning a type to the variable 'clip' (line 473)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 473, 12), 'clip', tuple_245274)
        # SSA branch for the else part of an if statement (line 472)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Name to a Name (line 476):
        
        # Assigning a Name to a Name (line 476):
        # Getting the type of 'None' (line 476)
        None_245285 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 476, 19), 'None')
        # Assigning a type to the variable 'clip' (line 476)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 476, 12), 'clip', None_245285)
        # SSA join for if statement (line 472)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to decode(...): (line 477)
        # Processing the call arguments (line 477)
        unicode_245304 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 479, 60), 'unicode', u'ascii')
        # Processing the call keyword arguments (line 477)
        kwargs_245305 = {}
        
        # Call to convert_to_string(...): (line 477)
        # Processing the call arguments (line 477)
        # Getting the type of 'path' (line 478)
        path_245288 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 478, 12), 'path', False)
        # Getting the type of 'transform' (line 478)
        transform_245289 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 478, 18), 'transform', False)
        # Getting the type of 'clip' (line 478)
        clip_245290 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 478, 29), 'clip', False)
        # Getting the type of 'simplify' (line 478)
        simplify_245291 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 478, 35), 'simplify', False)
        # Getting the type of 'None' (line 478)
        None_245292 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 478, 45), 'None', False)
        int_245293 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 479, 12), 'int')
        
        # Obtaining an instance of the builtin type 'list' (line 479)
        list_245294 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 479, 15), 'list')
        # Adding type elements to the builtin type 'list' instance (line 479)
        # Adding element type (line 479)
        str_245295 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 479, 16), 'str', 'm')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 479, 15), list_245294, str_245295)
        # Adding element type (line 479)
        str_245296 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 479, 22), 'str', 'l')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 479, 15), list_245294, str_245296)
        # Adding element type (line 479)
        str_245297 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 479, 28), 'str', '')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 479, 15), list_245294, str_245297)
        # Adding element type (line 479)
        str_245298 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 479, 33), 'str', 'c')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 479, 15), list_245294, str_245298)
        # Adding element type (line 479)
        str_245299 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 479, 39), 'str', 'cl')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 479, 15), list_245294, str_245299)
        
        # Getting the type of 'True' (line 479)
        True_245300 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 479, 47), 'True', False)
        # Processing the call keyword arguments (line 477)
        kwargs_245301 = {}
        # Getting the type of '_path' (line 477)
        _path_245286 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 477, 15), '_path', False)
        # Obtaining the member 'convert_to_string' of a type (line 477)
        convert_to_string_245287 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 477, 15), _path_245286, 'convert_to_string')
        # Calling convert_to_string(args, kwargs) (line 477)
        convert_to_string_call_result_245302 = invoke(stypy.reporting.localization.Localization(__file__, 477, 15), convert_to_string_245287, *[path_245288, transform_245289, clip_245290, simplify_245291, None_245292, int_245293, list_245294, True_245300], **kwargs_245301)
        
        # Obtaining the member 'decode' of a type (line 477)
        decode_245303 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 477, 15), convert_to_string_call_result_245302, 'decode')
        # Calling decode(args, kwargs) (line 477)
        decode_call_result_245306 = invoke(stypy.reporting.localization.Localization(__file__, 477, 15), decode_245303, *[unicode_245304], **kwargs_245305)
        
        # Assigning a type to the variable 'stypy_return_type' (line 477)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 477, 8), 'stypy_return_type', decode_call_result_245306)
        
        # ################# End of '_convert_path(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_convert_path' in the type store
        # Getting the type of 'stypy_return_type' (line 471)
        stypy_return_type_245307 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 471, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_245307)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_convert_path'
        return stypy_return_type_245307


    @norecursion
    def _get_clip_path(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_get_clip_path'
        module_type_store = module_type_store.open_function_context('_get_clip_path', 481, 4, False)
        # Assigning a type to the variable 'self' (line 482)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 482, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererPS._get_clip_path.__dict__.__setitem__('stypy_localization', localization)
        RendererPS._get_clip_path.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererPS._get_clip_path.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererPS._get_clip_path.__dict__.__setitem__('stypy_function_name', 'RendererPS._get_clip_path')
        RendererPS._get_clip_path.__dict__.__setitem__('stypy_param_names_list', ['clippath', 'clippath_transform'])
        RendererPS._get_clip_path.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererPS._get_clip_path.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererPS._get_clip_path.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererPS._get_clip_path.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererPS._get_clip_path.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererPS._get_clip_path.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererPS._get_clip_path', ['clippath', 'clippath_transform'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_get_clip_path', localization, ['clippath', 'clippath_transform'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_get_clip_path(...)' code ##################

        
        # Assigning a Tuple to a Name (line 482):
        
        # Assigning a Tuple to a Name (line 482):
        
        # Obtaining an instance of the builtin type 'tuple' (line 482)
        tuple_245308 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 482, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 482)
        # Adding element type (line 482)
        # Getting the type of 'clippath' (line 482)
        clippath_245309 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 482, 15), 'clippath')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 482, 15), tuple_245308, clippath_245309)
        # Adding element type (line 482)
        
        # Call to id(...): (line 482)
        # Processing the call arguments (line 482)
        # Getting the type of 'clippath_transform' (line 482)
        clippath_transform_245311 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 482, 28), 'clippath_transform', False)
        # Processing the call keyword arguments (line 482)
        kwargs_245312 = {}
        # Getting the type of 'id' (line 482)
        id_245310 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 482, 25), 'id', False)
        # Calling id(args, kwargs) (line 482)
        id_call_result_245313 = invoke(stypy.reporting.localization.Localization(__file__, 482, 25), id_245310, *[clippath_transform_245311], **kwargs_245312)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 482, 15), tuple_245308, id_call_result_245313)
        
        # Assigning a type to the variable 'key' (line 482)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 482, 8), 'key', tuple_245308)
        
        # Assigning a Call to a Name (line 483):
        
        # Assigning a Call to a Name (line 483):
        
        # Call to get(...): (line 483)
        # Processing the call arguments (line 483)
        # Getting the type of 'key' (line 483)
        key_245317 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 483, 35), 'key', False)
        # Processing the call keyword arguments (line 483)
        kwargs_245318 = {}
        # Getting the type of 'self' (line 483)
        self_245314 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 483, 14), 'self', False)
        # Obtaining the member '_clip_paths' of a type (line 483)
        _clip_paths_245315 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 483, 14), self_245314, '_clip_paths')
        # Obtaining the member 'get' of a type (line 483)
        get_245316 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 483, 14), _clip_paths_245315, 'get')
        # Calling get(args, kwargs) (line 483)
        get_call_result_245319 = invoke(stypy.reporting.localization.Localization(__file__, 483, 14), get_245316, *[key_245317], **kwargs_245318)
        
        # Assigning a type to the variable 'pid' (line 483)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 483, 8), 'pid', get_call_result_245319)
        
        # Type idiom detected: calculating its left and rigth part (line 484)
        # Getting the type of 'pid' (line 484)
        pid_245320 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 484, 11), 'pid')
        # Getting the type of 'None' (line 484)
        None_245321 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 484, 18), 'None')
        
        (may_be_245322, more_types_in_union_245323) = may_be_none(pid_245320, None_245321)

        if may_be_245322:

            if more_types_in_union_245323:
                # Runtime conditional SSA (line 484)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a BinOp to a Name (line 485):
            
            # Assigning a BinOp to a Name (line 485):
            unicode_245324 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 485, 18), 'unicode', u'c%x')
            
            # Call to len(...): (line 485)
            # Processing the call arguments (line 485)
            # Getting the type of 'self' (line 485)
            self_245326 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 485, 30), 'self', False)
            # Obtaining the member '_clip_paths' of a type (line 485)
            _clip_paths_245327 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 485, 30), self_245326, '_clip_paths')
            # Processing the call keyword arguments (line 485)
            kwargs_245328 = {}
            # Getting the type of 'len' (line 485)
            len_245325 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 485, 26), 'len', False)
            # Calling len(args, kwargs) (line 485)
            len_call_result_245329 = invoke(stypy.reporting.localization.Localization(__file__, 485, 26), len_245325, *[_clip_paths_245327], **kwargs_245328)
            
            # Applying the binary operator '%' (line 485)
            result_mod_245330 = python_operator(stypy.reporting.localization.Localization(__file__, 485, 18), '%', unicode_245324, len_call_result_245329)
            
            # Assigning a type to the variable 'pid' (line 485)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 485, 12), 'pid', result_mod_245330)
            
            # Assigning a List to a Name (line 486):
            
            # Assigning a List to a Name (line 486):
            
            # Obtaining an instance of the builtin type 'list' (line 486)
            list_245331 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 486, 21), 'list')
            # Adding type elements to the builtin type 'list' instance (line 486)
            # Adding element type (line 486)
            unicode_245332 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 486, 22), 'unicode', u'/%s {')
            # Getting the type of 'pid' (line 486)
            pid_245333 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 486, 32), 'pid')
            # Applying the binary operator '%' (line 486)
            result_mod_245334 = python_operator(stypy.reporting.localization.Localization(__file__, 486, 22), '%', unicode_245332, pid_245333)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 486, 21), list_245331, result_mod_245334)
            
            # Assigning a type to the variable 'ps_cmd' (line 486)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 486, 12), 'ps_cmd', list_245331)
            
            # Call to append(...): (line 487)
            # Processing the call arguments (line 487)
            
            # Call to _convert_path(...): (line 487)
            # Processing the call arguments (line 487)
            # Getting the type of 'clippath' (line 487)
            clippath_245339 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 487, 45), 'clippath', False)
            # Getting the type of 'clippath_transform' (line 487)
            clippath_transform_245340 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 487, 55), 'clippath_transform', False)
            # Processing the call keyword arguments (line 487)
            # Getting the type of 'False' (line 488)
            False_245341 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 488, 54), 'False', False)
            keyword_245342 = False_245341
            kwargs_245343 = {'simplify': keyword_245342}
            # Getting the type of 'self' (line 487)
            self_245337 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 487, 26), 'self', False)
            # Obtaining the member '_convert_path' of a type (line 487)
            _convert_path_245338 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 487, 26), self_245337, '_convert_path')
            # Calling _convert_path(args, kwargs) (line 487)
            _convert_path_call_result_245344 = invoke(stypy.reporting.localization.Localization(__file__, 487, 26), _convert_path_245338, *[clippath_245339, clippath_transform_245340], **kwargs_245343)
            
            # Processing the call keyword arguments (line 487)
            kwargs_245345 = {}
            # Getting the type of 'ps_cmd' (line 487)
            ps_cmd_245335 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 487, 12), 'ps_cmd', False)
            # Obtaining the member 'append' of a type (line 487)
            append_245336 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 487, 12), ps_cmd_245335, 'append')
            # Calling append(args, kwargs) (line 487)
            append_call_result_245346 = invoke(stypy.reporting.localization.Localization(__file__, 487, 12), append_245336, *[_convert_path_call_result_245344], **kwargs_245345)
            
            
            # Call to extend(...): (line 489)
            # Processing the call arguments (line 489)
            
            # Obtaining an instance of the builtin type 'list' (line 489)
            list_245349 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 489, 26), 'list')
            # Adding type elements to the builtin type 'list' instance (line 489)
            # Adding element type (line 489)
            unicode_245350 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 489, 27), 'unicode', u'clip')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 489, 26), list_245349, unicode_245350)
            # Adding element type (line 489)
            unicode_245351 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 489, 35), 'unicode', u'newpath')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 489, 26), list_245349, unicode_245351)
            # Adding element type (line 489)
            unicode_245352 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 489, 46), 'unicode', u'} bind def\n')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 489, 26), list_245349, unicode_245352)
            
            # Processing the call keyword arguments (line 489)
            kwargs_245353 = {}
            # Getting the type of 'ps_cmd' (line 489)
            ps_cmd_245347 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 489, 12), 'ps_cmd', False)
            # Obtaining the member 'extend' of a type (line 489)
            extend_245348 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 489, 12), ps_cmd_245347, 'extend')
            # Calling extend(args, kwargs) (line 489)
            extend_call_result_245354 = invoke(stypy.reporting.localization.Localization(__file__, 489, 12), extend_245348, *[list_245349], **kwargs_245353)
            
            
            # Call to write(...): (line 490)
            # Processing the call arguments (line 490)
            
            # Call to join(...): (line 490)
            # Processing the call arguments (line 490)
            # Getting the type of 'ps_cmd' (line 490)
            ps_cmd_245360 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 490, 43), 'ps_cmd', False)
            # Processing the call keyword arguments (line 490)
            kwargs_245361 = {}
            unicode_245358 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 490, 33), 'unicode', u'\n')
            # Obtaining the member 'join' of a type (line 490)
            join_245359 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 490, 33), unicode_245358, 'join')
            # Calling join(args, kwargs) (line 490)
            join_call_result_245362 = invoke(stypy.reporting.localization.Localization(__file__, 490, 33), join_245359, *[ps_cmd_245360], **kwargs_245361)
            
            # Processing the call keyword arguments (line 490)
            kwargs_245363 = {}
            # Getting the type of 'self' (line 490)
            self_245355 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 490, 12), 'self', False)
            # Obtaining the member '_pswriter' of a type (line 490)
            _pswriter_245356 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 490, 12), self_245355, '_pswriter')
            # Obtaining the member 'write' of a type (line 490)
            write_245357 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 490, 12), _pswriter_245356, 'write')
            # Calling write(args, kwargs) (line 490)
            write_call_result_245364 = invoke(stypy.reporting.localization.Localization(__file__, 490, 12), write_245357, *[join_call_result_245362], **kwargs_245363)
            
            
            # Assigning a Name to a Subscript (line 491):
            
            # Assigning a Name to a Subscript (line 491):
            # Getting the type of 'pid' (line 491)
            pid_245365 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 491, 36), 'pid')
            # Getting the type of 'self' (line 491)
            self_245366 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 491, 12), 'self')
            # Obtaining the member '_clip_paths' of a type (line 491)
            _clip_paths_245367 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 491, 12), self_245366, '_clip_paths')
            # Getting the type of 'key' (line 491)
            key_245368 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 491, 29), 'key')
            # Storing an element on a container (line 491)
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 491, 12), _clip_paths_245367, (key_245368, pid_245365))

            if more_types_in_union_245323:
                # SSA join for if statement (line 484)
                module_type_store = module_type_store.join_ssa_context()


        
        # Getting the type of 'pid' (line 492)
        pid_245369 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 492, 15), 'pid')
        # Assigning a type to the variable 'stypy_return_type' (line 492)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 492, 8), 'stypy_return_type', pid_245369)
        
        # ################# End of '_get_clip_path(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_get_clip_path' in the type store
        # Getting the type of 'stypy_return_type' (line 481)
        stypy_return_type_245370 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 481, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_245370)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_get_clip_path'
        return stypy_return_type_245370


    @norecursion
    def draw_path(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'None' (line 494)
        None_245371 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 494, 53), 'None')
        defaults = [None_245371]
        # Create a new context for function 'draw_path'
        module_type_store = module_type_store.open_function_context('draw_path', 494, 4, False)
        # Assigning a type to the variable 'self' (line 495)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 495, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererPS.draw_path.__dict__.__setitem__('stypy_localization', localization)
        RendererPS.draw_path.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererPS.draw_path.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererPS.draw_path.__dict__.__setitem__('stypy_function_name', 'RendererPS.draw_path')
        RendererPS.draw_path.__dict__.__setitem__('stypy_param_names_list', ['gc', 'path', 'transform', 'rgbFace'])
        RendererPS.draw_path.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererPS.draw_path.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererPS.draw_path.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererPS.draw_path.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererPS.draw_path.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererPS.draw_path.__dict__.__setitem__('stypy_declared_arg_number', 5)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererPS.draw_path', ['gc', 'path', 'transform', 'rgbFace'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'draw_path', localization, ['gc', 'path', 'transform', 'rgbFace'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'draw_path(...)' code ##################

        unicode_245372 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 497, (-1)), 'unicode', u'\n        Draws a Path instance using the given affine transform.\n        ')
        
        # Assigning a BoolOp to a Name (line 498):
        
        # Assigning a BoolOp to a Name (line 498):
        
        # Evaluating a boolean operation
        
        # Getting the type of 'rgbFace' (line 498)
        rgbFace_245373 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 498, 16), 'rgbFace')
        # Getting the type of 'None' (line 498)
        None_245374 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 498, 27), 'None')
        # Applying the binary operator 'is' (line 498)
        result_is__245375 = python_operator(stypy.reporting.localization.Localization(__file__, 498, 16), 'is', rgbFace_245373, None_245374)
        
        
        
        # Call to get_hatch_path(...): (line 498)
        # Processing the call keyword arguments (line 498)
        kwargs_245378 = {}
        # Getting the type of 'gc' (line 498)
        gc_245376 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 498, 36), 'gc', False)
        # Obtaining the member 'get_hatch_path' of a type (line 498)
        get_hatch_path_245377 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 498, 36), gc_245376, 'get_hatch_path')
        # Calling get_hatch_path(args, kwargs) (line 498)
        get_hatch_path_call_result_245379 = invoke(stypy.reporting.localization.Localization(__file__, 498, 36), get_hatch_path_245377, *[], **kwargs_245378)
        
        # Getting the type of 'None' (line 498)
        None_245380 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 498, 59), 'None')
        # Applying the binary operator 'is' (line 498)
        result_is__245381 = python_operator(stypy.reporting.localization.Localization(__file__, 498, 36), 'is', get_hatch_path_call_result_245379, None_245380)
        
        # Applying the binary operator 'and' (line 498)
        result_and_keyword_245382 = python_operator(stypy.reporting.localization.Localization(__file__, 498, 16), 'and', result_is__245375, result_is__245381)
        
        # Assigning a type to the variable 'clip' (line 498)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 498, 8), 'clip', result_and_keyword_245382)
        
        # Assigning a BoolOp to a Name (line 499):
        
        # Assigning a BoolOp to a Name (line 499):
        
        # Evaluating a boolean operation
        # Getting the type of 'path' (line 499)
        path_245383 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 499, 19), 'path')
        # Obtaining the member 'should_simplify' of a type (line 499)
        should_simplify_245384 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 499, 19), path_245383, 'should_simplify')
        # Getting the type of 'clip' (line 499)
        clip_245385 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 499, 44), 'clip')
        # Applying the binary operator 'and' (line 499)
        result_and_keyword_245386 = python_operator(stypy.reporting.localization.Localization(__file__, 499, 19), 'and', should_simplify_245384, clip_245385)
        
        # Assigning a type to the variable 'simplify' (line 499)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 499, 8), 'simplify', result_and_keyword_245386)
        
        # Assigning a Call to a Name (line 500):
        
        # Assigning a Call to a Name (line 500):
        
        # Call to _convert_path(...): (line 500)
        # Processing the call arguments (line 500)
        # Getting the type of 'path' (line 501)
        path_245389 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 501, 12), 'path', False)
        # Getting the type of 'transform' (line 501)
        transform_245390 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 501, 18), 'transform', False)
        # Processing the call keyword arguments (line 500)
        # Getting the type of 'clip' (line 501)
        clip_245391 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 501, 34), 'clip', False)
        keyword_245392 = clip_245391
        # Getting the type of 'simplify' (line 501)
        simplify_245393 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 501, 49), 'simplify', False)
        keyword_245394 = simplify_245393
        kwargs_245395 = {'simplify': keyword_245394, 'clip': keyword_245392}
        # Getting the type of 'self' (line 500)
        self_245387 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 500, 13), 'self', False)
        # Obtaining the member '_convert_path' of a type (line 500)
        _convert_path_245388 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 500, 13), self_245387, '_convert_path')
        # Calling _convert_path(args, kwargs) (line 500)
        _convert_path_call_result_245396 = invoke(stypy.reporting.localization.Localization(__file__, 500, 13), _convert_path_245388, *[path_245389, transform_245390], **kwargs_245395)
        
        # Assigning a type to the variable 'ps' (line 500)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 500, 8), 'ps', _convert_path_call_result_245396)
        
        # Call to _draw_ps(...): (line 502)
        # Processing the call arguments (line 502)
        # Getting the type of 'ps' (line 502)
        ps_245399 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 502, 22), 'ps', False)
        # Getting the type of 'gc' (line 502)
        gc_245400 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 502, 26), 'gc', False)
        # Getting the type of 'rgbFace' (line 502)
        rgbFace_245401 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 502, 30), 'rgbFace', False)
        # Processing the call keyword arguments (line 502)
        kwargs_245402 = {}
        # Getting the type of 'self' (line 502)
        self_245397 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 502, 8), 'self', False)
        # Obtaining the member '_draw_ps' of a type (line 502)
        _draw_ps_245398 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 502, 8), self_245397, '_draw_ps')
        # Calling _draw_ps(args, kwargs) (line 502)
        _draw_ps_call_result_245403 = invoke(stypy.reporting.localization.Localization(__file__, 502, 8), _draw_ps_245398, *[ps_245399, gc_245400, rgbFace_245401], **kwargs_245402)
        
        
        # ################# End of 'draw_path(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'draw_path' in the type store
        # Getting the type of 'stypy_return_type' (line 494)
        stypy_return_type_245404 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 494, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_245404)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'draw_path'
        return stypy_return_type_245404


    @norecursion
    def draw_markers(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'None' (line 504)
        None_245405 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 504, 79), 'None')
        defaults = [None_245405]
        # Create a new context for function 'draw_markers'
        module_type_store = module_type_store.open_function_context('draw_markers', 504, 4, False)
        # Assigning a type to the variable 'self' (line 505)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 505, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererPS.draw_markers.__dict__.__setitem__('stypy_localization', localization)
        RendererPS.draw_markers.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererPS.draw_markers.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererPS.draw_markers.__dict__.__setitem__('stypy_function_name', 'RendererPS.draw_markers')
        RendererPS.draw_markers.__dict__.__setitem__('stypy_param_names_list', ['gc', 'marker_path', 'marker_trans', 'path', 'trans', 'rgbFace'])
        RendererPS.draw_markers.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererPS.draw_markers.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererPS.draw_markers.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererPS.draw_markers.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererPS.draw_markers.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererPS.draw_markers.__dict__.__setitem__('stypy_declared_arg_number', 7)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererPS.draw_markers', ['gc', 'marker_path', 'marker_trans', 'path', 'trans', 'rgbFace'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'draw_markers', localization, ['gc', 'marker_path', 'marker_trans', 'path', 'trans', 'rgbFace'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'draw_markers(...)' code ##################

        unicode_245406 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 509, (-1)), 'unicode', u'\n        Draw the markers defined by path at each of the positions in x\n        and y.  path coordinates are points, x and y coords will be\n        transformed by the transform\n        ')
        
        # Getting the type of 'debugPS' (line 510)
        debugPS_245407 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 510, 11), 'debugPS')
        # Testing the type of an if condition (line 510)
        if_condition_245408 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 510, 8), debugPS_245407)
        # Assigning a type to the variable 'if_condition_245408' (line 510)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 510, 8), 'if_condition_245408', if_condition_245408)
        # SSA begins for if statement (line 510)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to write(...): (line 510)
        # Processing the call arguments (line 510)
        unicode_245412 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 510, 41), 'unicode', u'% draw_markers \n')
        # Processing the call keyword arguments (line 510)
        kwargs_245413 = {}
        # Getting the type of 'self' (line 510)
        self_245409 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 510, 20), 'self', False)
        # Obtaining the member '_pswriter' of a type (line 510)
        _pswriter_245410 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 510, 20), self_245409, '_pswriter')
        # Obtaining the member 'write' of a type (line 510)
        write_245411 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 510, 20), _pswriter_245410, 'write')
        # Calling write(args, kwargs) (line 510)
        write_call_result_245414 = invoke(stypy.reporting.localization.Localization(__file__, 510, 20), write_245411, *[unicode_245412], **kwargs_245413)
        
        # SSA join for if statement (line 510)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'rgbFace' (line 512)
        rgbFace_245415 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 512, 11), 'rgbFace')
        # Testing the type of an if condition (line 512)
        if_condition_245416 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 512, 8), rgbFace_245415)
        # Assigning a type to the variable 'if_condition_245416' (line 512)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 512, 8), 'if_condition_245416', if_condition_245416)
        # SSA begins for if statement (line 512)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        
        # Evaluating a boolean operation
        
        
        # Obtaining the type of the subscript
        int_245417 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 513, 23), 'int')
        # Getting the type of 'rgbFace' (line 513)
        rgbFace_245418 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 513, 15), 'rgbFace')
        # Obtaining the member '__getitem__' of a type (line 513)
        getitem___245419 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 513, 15), rgbFace_245418, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 513)
        subscript_call_result_245420 = invoke(stypy.reporting.localization.Localization(__file__, 513, 15), getitem___245419, int_245417)
        
        
        # Obtaining the type of the subscript
        int_245421 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 513, 35), 'int')
        # Getting the type of 'rgbFace' (line 513)
        rgbFace_245422 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 513, 27), 'rgbFace')
        # Obtaining the member '__getitem__' of a type (line 513)
        getitem___245423 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 513, 27), rgbFace_245422, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 513)
        subscript_call_result_245424 = invoke(stypy.reporting.localization.Localization(__file__, 513, 27), getitem___245423, int_245421)
        
        # Applying the binary operator '==' (line 513)
        result_eq_245425 = python_operator(stypy.reporting.localization.Localization(__file__, 513, 15), '==', subscript_call_result_245420, subscript_call_result_245424)
        
        
        
        # Obtaining the type of the subscript
        int_245426 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 513, 50), 'int')
        # Getting the type of 'rgbFace' (line 513)
        rgbFace_245427 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 513, 42), 'rgbFace')
        # Obtaining the member '__getitem__' of a type (line 513)
        getitem___245428 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 513, 42), rgbFace_245427, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 513)
        subscript_call_result_245429 = invoke(stypy.reporting.localization.Localization(__file__, 513, 42), getitem___245428, int_245426)
        
        
        # Obtaining the type of the subscript
        int_245430 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 513, 62), 'int')
        # Getting the type of 'rgbFace' (line 513)
        rgbFace_245431 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 513, 54), 'rgbFace')
        # Obtaining the member '__getitem__' of a type (line 513)
        getitem___245432 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 513, 54), rgbFace_245431, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 513)
        subscript_call_result_245433 = invoke(stypy.reporting.localization.Localization(__file__, 513, 54), getitem___245432, int_245430)
        
        # Applying the binary operator '==' (line 513)
        result_eq_245434 = python_operator(stypy.reporting.localization.Localization(__file__, 513, 42), '==', subscript_call_result_245429, subscript_call_result_245433)
        
        # Applying the binary operator 'and' (line 513)
        result_and_keyword_245435 = python_operator(stypy.reporting.localization.Localization(__file__, 513, 15), 'and', result_eq_245425, result_eq_245434)
        
        # Testing the type of an if condition (line 513)
        if_condition_245436 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 513, 12), result_and_keyword_245435)
        # Assigning a type to the variable 'if_condition_245436' (line 513)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 513, 12), 'if_condition_245436', if_condition_245436)
        # SSA begins for if statement (line 513)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a BinOp to a Name (line 514):
        
        # Assigning a BinOp to a Name (line 514):
        unicode_245437 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 514, 27), 'unicode', u'%1.3f setgray')
        
        # Obtaining the type of the subscript
        int_245438 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 514, 53), 'int')
        # Getting the type of 'rgbFace' (line 514)
        rgbFace_245439 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 514, 45), 'rgbFace')
        # Obtaining the member '__getitem__' of a type (line 514)
        getitem___245440 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 514, 45), rgbFace_245439, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 514)
        subscript_call_result_245441 = invoke(stypy.reporting.localization.Localization(__file__, 514, 45), getitem___245440, int_245438)
        
        # Applying the binary operator '%' (line 514)
        result_mod_245442 = python_operator(stypy.reporting.localization.Localization(__file__, 514, 27), '%', unicode_245437, subscript_call_result_245441)
        
        # Assigning a type to the variable 'ps_color' (line 514)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 514, 16), 'ps_color', result_mod_245442)
        # SSA branch for the else part of an if statement (line 513)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a BinOp to a Name (line 516):
        
        # Assigning a BinOp to a Name (line 516):
        unicode_245443 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 516, 27), 'unicode', u'%1.3f %1.3f %1.3f setrgbcolor')
        
        # Obtaining the type of the subscript
        int_245444 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 516, 70), 'int')
        slice_245445 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 516, 61), None, int_245444, None)
        # Getting the type of 'rgbFace' (line 516)
        rgbFace_245446 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 516, 61), 'rgbFace')
        # Obtaining the member '__getitem__' of a type (line 516)
        getitem___245447 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 516, 61), rgbFace_245446, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 516)
        subscript_call_result_245448 = invoke(stypy.reporting.localization.Localization(__file__, 516, 61), getitem___245447, slice_245445)
        
        # Applying the binary operator '%' (line 516)
        result_mod_245449 = python_operator(stypy.reporting.localization.Localization(__file__, 516, 27), '%', unicode_245443, subscript_call_result_245448)
        
        # Assigning a type to the variable 'ps_color' (line 516)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 516, 16), 'ps_color', result_mod_245449)
        # SSA join for if statement (line 513)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 512)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a List to a Name (line 519):
        
        # Assigning a List to a Name (line 519):
        
        # Obtaining an instance of the builtin type 'list' (line 519)
        list_245450 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 519, 17), 'list')
        # Adding type elements to the builtin type 'list' instance (line 519)
        # Adding element type (line 519)
        unicode_245451 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 519, 18), 'unicode', u'/o {')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 519, 17), list_245450, unicode_245451)
        # Adding element type (line 519)
        unicode_245452 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 519, 26), 'unicode', u'gsave')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 519, 17), list_245450, unicode_245452)
        # Adding element type (line 519)
        unicode_245453 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 519, 35), 'unicode', u'newpath')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 519, 17), list_245450, unicode_245453)
        # Adding element type (line 519)
        unicode_245454 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 519, 46), 'unicode', u'translate')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 519, 17), list_245450, unicode_245454)
        
        # Assigning a type to the variable 'ps_cmd' (line 519)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 519, 8), 'ps_cmd', list_245450)
        
        # Assigning a Call to a Name (line 521):
        
        # Assigning a Call to a Name (line 521):
        
        # Call to get_linewidth(...): (line 521)
        # Processing the call keyword arguments (line 521)
        kwargs_245457 = {}
        # Getting the type of 'gc' (line 521)
        gc_245455 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 521, 13), 'gc', False)
        # Obtaining the member 'get_linewidth' of a type (line 521)
        get_linewidth_245456 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 521, 13), gc_245455, 'get_linewidth')
        # Calling get_linewidth(args, kwargs) (line 521)
        get_linewidth_call_result_245458 = invoke(stypy.reporting.localization.Localization(__file__, 521, 13), get_linewidth_245456, *[], **kwargs_245457)
        
        # Assigning a type to the variable 'lw' (line 521)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 521, 8), 'lw', get_linewidth_call_result_245458)
        
        # Assigning a Compare to a Name (line 522):
        
        # Assigning a Compare to a Name (line 522):
        
        # Getting the type of 'lw' (line 522)
        lw_245459 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 522, 17), 'lw')
        float_245460 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 522, 23), 'float')
        # Applying the binary operator '!=' (line 522)
        result_ne_245461 = python_operator(stypy.reporting.localization.Localization(__file__, 522, 17), '!=', lw_245459, float_245460)
        
        # Assigning a type to the variable 'stroke' (line 522)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 522, 8), 'stroke', result_ne_245461)
        
        # Getting the type of 'stroke' (line 523)
        stroke_245462 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 523, 11), 'stroke')
        # Testing the type of an if condition (line 523)
        if_condition_245463 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 523, 8), stroke_245462)
        # Assigning a type to the variable 'if_condition_245463' (line 523)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 523, 8), 'if_condition_245463', if_condition_245463)
        # SSA begins for if statement (line 523)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to append(...): (line 524)
        # Processing the call arguments (line 524)
        unicode_245466 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 524, 26), 'unicode', u'%.1f setlinewidth')
        # Getting the type of 'lw' (line 524)
        lw_245467 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 524, 48), 'lw', False)
        # Applying the binary operator '%' (line 524)
        result_mod_245468 = python_operator(stypy.reporting.localization.Localization(__file__, 524, 26), '%', unicode_245466, lw_245467)
        
        # Processing the call keyword arguments (line 524)
        kwargs_245469 = {}
        # Getting the type of 'ps_cmd' (line 524)
        ps_cmd_245464 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 524, 12), 'ps_cmd', False)
        # Obtaining the member 'append' of a type (line 524)
        append_245465 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 524, 12), ps_cmd_245464, 'append')
        # Calling append(args, kwargs) (line 524)
        append_call_result_245470 = invoke(stypy.reporting.localization.Localization(__file__, 524, 12), append_245465, *[result_mod_245468], **kwargs_245469)
        
        
        # Assigning a Call to a Name (line 525):
        
        # Assigning a Call to a Name (line 525):
        
        # Call to get_joinstyle(...): (line 525)
        # Processing the call keyword arguments (line 525)
        kwargs_245473 = {}
        # Getting the type of 'gc' (line 525)
        gc_245471 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 525, 19), 'gc', False)
        # Obtaining the member 'get_joinstyle' of a type (line 525)
        get_joinstyle_245472 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 525, 19), gc_245471, 'get_joinstyle')
        # Calling get_joinstyle(args, kwargs) (line 525)
        get_joinstyle_call_result_245474 = invoke(stypy.reporting.localization.Localization(__file__, 525, 19), get_joinstyle_245472, *[], **kwargs_245473)
        
        # Assigning a type to the variable 'jint' (line 525)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 525, 12), 'jint', get_joinstyle_call_result_245474)
        
        # Call to append(...): (line 526)
        # Processing the call arguments (line 526)
        unicode_245477 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 526, 26), 'unicode', u'%d setlinejoin')
        # Getting the type of 'jint' (line 526)
        jint_245478 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 526, 45), 'jint', False)
        # Applying the binary operator '%' (line 526)
        result_mod_245479 = python_operator(stypy.reporting.localization.Localization(__file__, 526, 26), '%', unicode_245477, jint_245478)
        
        # Processing the call keyword arguments (line 526)
        kwargs_245480 = {}
        # Getting the type of 'ps_cmd' (line 526)
        ps_cmd_245475 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 526, 12), 'ps_cmd', False)
        # Obtaining the member 'append' of a type (line 526)
        append_245476 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 526, 12), ps_cmd_245475, 'append')
        # Calling append(args, kwargs) (line 526)
        append_call_result_245481 = invoke(stypy.reporting.localization.Localization(__file__, 526, 12), append_245476, *[result_mod_245479], **kwargs_245480)
        
        
        # Assigning a Call to a Name (line 527):
        
        # Assigning a Call to a Name (line 527):
        
        # Call to get_capstyle(...): (line 527)
        # Processing the call keyword arguments (line 527)
        kwargs_245484 = {}
        # Getting the type of 'gc' (line 527)
        gc_245482 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 527, 19), 'gc', False)
        # Obtaining the member 'get_capstyle' of a type (line 527)
        get_capstyle_245483 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 527, 19), gc_245482, 'get_capstyle')
        # Calling get_capstyle(args, kwargs) (line 527)
        get_capstyle_call_result_245485 = invoke(stypy.reporting.localization.Localization(__file__, 527, 19), get_capstyle_245483, *[], **kwargs_245484)
        
        # Assigning a type to the variable 'cint' (line 527)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 527, 12), 'cint', get_capstyle_call_result_245485)
        
        # Call to append(...): (line 528)
        # Processing the call arguments (line 528)
        unicode_245488 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 528, 26), 'unicode', u'%d setlinecap')
        # Getting the type of 'cint' (line 528)
        cint_245489 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 528, 44), 'cint', False)
        # Applying the binary operator '%' (line 528)
        result_mod_245490 = python_operator(stypy.reporting.localization.Localization(__file__, 528, 26), '%', unicode_245488, cint_245489)
        
        # Processing the call keyword arguments (line 528)
        kwargs_245491 = {}
        # Getting the type of 'ps_cmd' (line 528)
        ps_cmd_245486 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 528, 12), 'ps_cmd', False)
        # Obtaining the member 'append' of a type (line 528)
        append_245487 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 528, 12), ps_cmd_245486, 'append')
        # Calling append(args, kwargs) (line 528)
        append_call_result_245492 = invoke(stypy.reporting.localization.Localization(__file__, 528, 12), append_245487, *[result_mod_245490], **kwargs_245491)
        
        # SSA join for if statement (line 523)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to append(...): (line 530)
        # Processing the call arguments (line 530)
        
        # Call to _convert_path(...): (line 530)
        # Processing the call arguments (line 530)
        # Getting the type of 'marker_path' (line 530)
        marker_path_245497 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 530, 41), 'marker_path', False)
        # Getting the type of 'marker_trans' (line 530)
        marker_trans_245498 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 530, 54), 'marker_trans', False)
        # Processing the call keyword arguments (line 530)
        # Getting the type of 'False' (line 531)
        False_245499 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 531, 50), 'False', False)
        keyword_245500 = False_245499
        kwargs_245501 = {'simplify': keyword_245500}
        # Getting the type of 'self' (line 530)
        self_245495 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 530, 22), 'self', False)
        # Obtaining the member '_convert_path' of a type (line 530)
        _convert_path_245496 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 530, 22), self_245495, '_convert_path')
        # Calling _convert_path(args, kwargs) (line 530)
        _convert_path_call_result_245502 = invoke(stypy.reporting.localization.Localization(__file__, 530, 22), _convert_path_245496, *[marker_path_245497, marker_trans_245498], **kwargs_245501)
        
        # Processing the call keyword arguments (line 530)
        kwargs_245503 = {}
        # Getting the type of 'ps_cmd' (line 530)
        ps_cmd_245493 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 530, 8), 'ps_cmd', False)
        # Obtaining the member 'append' of a type (line 530)
        append_245494 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 530, 8), ps_cmd_245493, 'append')
        # Calling append(args, kwargs) (line 530)
        append_call_result_245504 = invoke(stypy.reporting.localization.Localization(__file__, 530, 8), append_245494, *[_convert_path_call_result_245502], **kwargs_245503)
        
        
        # Getting the type of 'rgbFace' (line 533)
        rgbFace_245505 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 533, 11), 'rgbFace')
        # Testing the type of an if condition (line 533)
        if_condition_245506 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 533, 8), rgbFace_245505)
        # Assigning a type to the variable 'if_condition_245506' (line 533)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 533, 8), 'if_condition_245506', if_condition_245506)
        # SSA begins for if statement (line 533)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'stroke' (line 534)
        stroke_245507 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 534, 15), 'stroke')
        # Testing the type of an if condition (line 534)
        if_condition_245508 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 534, 12), stroke_245507)
        # Assigning a type to the variable 'if_condition_245508' (line 534)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 534, 12), 'if_condition_245508', if_condition_245508)
        # SSA begins for if statement (line 534)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to append(...): (line 535)
        # Processing the call arguments (line 535)
        unicode_245511 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 535, 30), 'unicode', u'gsave')
        # Processing the call keyword arguments (line 535)
        kwargs_245512 = {}
        # Getting the type of 'ps_cmd' (line 535)
        ps_cmd_245509 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 535, 16), 'ps_cmd', False)
        # Obtaining the member 'append' of a type (line 535)
        append_245510 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 535, 16), ps_cmd_245509, 'append')
        # Calling append(args, kwargs) (line 535)
        append_call_result_245513 = invoke(stypy.reporting.localization.Localization(__file__, 535, 16), append_245510, *[unicode_245511], **kwargs_245512)
        
        # SSA join for if statement (line 534)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to extend(...): (line 536)
        # Processing the call arguments (line 536)
        
        # Obtaining an instance of the builtin type 'list' (line 536)
        list_245516 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 536, 26), 'list')
        # Adding type elements to the builtin type 'list' instance (line 536)
        # Adding element type (line 536)
        # Getting the type of 'ps_color' (line 536)
        ps_color_245517 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 27), 'ps_color', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 536, 26), list_245516, ps_color_245517)
        # Adding element type (line 536)
        unicode_245518 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 536, 37), 'unicode', u'fill')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 536, 26), list_245516, unicode_245518)
        
        # Processing the call keyword arguments (line 536)
        kwargs_245519 = {}
        # Getting the type of 'ps_cmd' (line 536)
        ps_cmd_245514 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 12), 'ps_cmd', False)
        # Obtaining the member 'extend' of a type (line 536)
        extend_245515 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 536, 12), ps_cmd_245514, 'extend')
        # Calling extend(args, kwargs) (line 536)
        extend_call_result_245520 = invoke(stypy.reporting.localization.Localization(__file__, 536, 12), extend_245515, *[list_245516], **kwargs_245519)
        
        
        # Getting the type of 'stroke' (line 537)
        stroke_245521 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 537, 15), 'stroke')
        # Testing the type of an if condition (line 537)
        if_condition_245522 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 537, 12), stroke_245521)
        # Assigning a type to the variable 'if_condition_245522' (line 537)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 537, 12), 'if_condition_245522', if_condition_245522)
        # SSA begins for if statement (line 537)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to append(...): (line 538)
        # Processing the call arguments (line 538)
        unicode_245525 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 538, 30), 'unicode', u'grestore')
        # Processing the call keyword arguments (line 538)
        kwargs_245526 = {}
        # Getting the type of 'ps_cmd' (line 538)
        ps_cmd_245523 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 538, 16), 'ps_cmd', False)
        # Obtaining the member 'append' of a type (line 538)
        append_245524 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 538, 16), ps_cmd_245523, 'append')
        # Calling append(args, kwargs) (line 538)
        append_call_result_245527 = invoke(stypy.reporting.localization.Localization(__file__, 538, 16), append_245524, *[unicode_245525], **kwargs_245526)
        
        # SSA join for if statement (line 537)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 533)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'stroke' (line 540)
        stroke_245528 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 540, 11), 'stroke')
        # Testing the type of an if condition (line 540)
        if_condition_245529 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 540, 8), stroke_245528)
        # Assigning a type to the variable 'if_condition_245529' (line 540)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 540, 8), 'if_condition_245529', if_condition_245529)
        # SSA begins for if statement (line 540)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to append(...): (line 541)
        # Processing the call arguments (line 541)
        unicode_245532 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 541, 26), 'unicode', u'stroke')
        # Processing the call keyword arguments (line 541)
        kwargs_245533 = {}
        # Getting the type of 'ps_cmd' (line 541)
        ps_cmd_245530 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 541, 12), 'ps_cmd', False)
        # Obtaining the member 'append' of a type (line 541)
        append_245531 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 541, 12), ps_cmd_245530, 'append')
        # Calling append(args, kwargs) (line 541)
        append_call_result_245534 = invoke(stypy.reporting.localization.Localization(__file__, 541, 12), append_245531, *[unicode_245532], **kwargs_245533)
        
        # SSA join for if statement (line 540)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to extend(...): (line 542)
        # Processing the call arguments (line 542)
        
        # Obtaining an instance of the builtin type 'list' (line 542)
        list_245537 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 542, 22), 'list')
        # Adding type elements to the builtin type 'list' instance (line 542)
        # Adding element type (line 542)
        unicode_245538 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 542, 23), 'unicode', u'grestore')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 542, 22), list_245537, unicode_245538)
        # Adding element type (line 542)
        unicode_245539 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 542, 35), 'unicode', u'} bind def')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 542, 22), list_245537, unicode_245539)
        
        # Processing the call keyword arguments (line 542)
        kwargs_245540 = {}
        # Getting the type of 'ps_cmd' (line 542)
        ps_cmd_245535 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 542, 8), 'ps_cmd', False)
        # Obtaining the member 'extend' of a type (line 542)
        extend_245536 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 542, 8), ps_cmd_245535, 'extend')
        # Calling extend(args, kwargs) (line 542)
        extend_call_result_245541 = invoke(stypy.reporting.localization.Localization(__file__, 542, 8), extend_245536, *[list_245537], **kwargs_245540)
        
        
        
        # Call to iter_segments(...): (line 544)
        # Processing the call arguments (line 544)
        # Getting the type of 'trans' (line 545)
        trans_245544 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 545, 16), 'trans', False)
        # Processing the call keyword arguments (line 544)
        
        # Obtaining an instance of the builtin type 'tuple' (line 546)
        tuple_245545 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 546, 22), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 546)
        # Adding element type (line 546)
        int_245546 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 546, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 546, 22), tuple_245545, int_245546)
        # Adding element type (line 546)
        int_245547 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 546, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 546, 22), tuple_245545, int_245547)
        # Adding element type (line 546)
        # Getting the type of 'self' (line 546)
        self_245548 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 546, 28), 'self', False)
        # Obtaining the member 'width' of a type (line 546)
        width_245549 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 546, 28), self_245548, 'width')
        int_245550 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 546, 39), 'int')
        # Applying the binary operator '*' (line 546)
        result_mul_245551 = python_operator(stypy.reporting.localization.Localization(__file__, 546, 28), '*', width_245549, int_245550)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 546, 22), tuple_245545, result_mul_245551)
        # Adding element type (line 546)
        # Getting the type of 'self' (line 546)
        self_245552 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 546, 43), 'self', False)
        # Obtaining the member 'height' of a type (line 546)
        height_245553 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 546, 43), self_245552, 'height')
        int_245554 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 546, 55), 'int')
        # Applying the binary operator '*' (line 546)
        result_mul_245555 = python_operator(stypy.reporting.localization.Localization(__file__, 546, 43), '*', height_245553, int_245554)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 546, 22), tuple_245545, result_mul_245555)
        
        keyword_245556 = tuple_245545
        # Getting the type of 'False' (line 547)
        False_245557 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 547, 25), 'False', False)
        keyword_245558 = False_245557
        kwargs_245559 = {'simplify': keyword_245558, 'clip': keyword_245556}
        # Getting the type of 'path' (line 544)
        path_245542 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 544, 30), 'path', False)
        # Obtaining the member 'iter_segments' of a type (line 544)
        iter_segments_245543 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 544, 30), path_245542, 'iter_segments')
        # Calling iter_segments(args, kwargs) (line 544)
        iter_segments_call_result_245560 = invoke(stypy.reporting.localization.Localization(__file__, 544, 30), iter_segments_245543, *[trans_245544], **kwargs_245559)
        
        # Testing the type of a for loop iterable (line 544)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 544, 8), iter_segments_call_result_245560)
        # Getting the type of the for loop variable (line 544)
        for_loop_var_245561 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 544, 8), iter_segments_call_result_245560)
        # Assigning a type to the variable 'vertices' (line 544)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 544, 8), 'vertices', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 544, 8), for_loop_var_245561))
        # Assigning a type to the variable 'code' (line 544)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 544, 8), 'code', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 544, 8), for_loop_var_245561))
        # SSA begins for a for statement (line 544)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        
        # Call to len(...): (line 548)
        # Processing the call arguments (line 548)
        # Getting the type of 'vertices' (line 548)
        vertices_245563 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 548, 19), 'vertices', False)
        # Processing the call keyword arguments (line 548)
        kwargs_245564 = {}
        # Getting the type of 'len' (line 548)
        len_245562 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 548, 15), 'len', False)
        # Calling len(args, kwargs) (line 548)
        len_call_result_245565 = invoke(stypy.reporting.localization.Localization(__file__, 548, 15), len_245562, *[vertices_245563], **kwargs_245564)
        
        # Testing the type of an if condition (line 548)
        if_condition_245566 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 548, 12), len_call_result_245565)
        # Assigning a type to the variable 'if_condition_245566' (line 548)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 548, 12), 'if_condition_245566', if_condition_245566)
        # SSA begins for if statement (line 548)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Subscript to a Tuple (line 549):
        
        # Assigning a Subscript to a Name (line 549):
        
        # Obtaining the type of the subscript
        int_245567 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 549, 16), 'int')
        
        # Obtaining the type of the subscript
        int_245568 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 549, 32), 'int')
        slice_245569 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 549, 23), int_245568, None, None)
        # Getting the type of 'vertices' (line 549)
        vertices_245570 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 549, 23), 'vertices')
        # Obtaining the member '__getitem__' of a type (line 549)
        getitem___245571 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 549, 23), vertices_245570, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 549)
        subscript_call_result_245572 = invoke(stypy.reporting.localization.Localization(__file__, 549, 23), getitem___245571, slice_245569)
        
        # Obtaining the member '__getitem__' of a type (line 549)
        getitem___245573 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 549, 16), subscript_call_result_245572, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 549)
        subscript_call_result_245574 = invoke(stypy.reporting.localization.Localization(__file__, 549, 16), getitem___245573, int_245567)
        
        # Assigning a type to the variable 'tuple_var_assignment_243732' (line 549)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 549, 16), 'tuple_var_assignment_243732', subscript_call_result_245574)
        
        # Assigning a Subscript to a Name (line 549):
        
        # Obtaining the type of the subscript
        int_245575 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 549, 16), 'int')
        
        # Obtaining the type of the subscript
        int_245576 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 549, 32), 'int')
        slice_245577 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 549, 23), int_245576, None, None)
        # Getting the type of 'vertices' (line 549)
        vertices_245578 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 549, 23), 'vertices')
        # Obtaining the member '__getitem__' of a type (line 549)
        getitem___245579 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 549, 23), vertices_245578, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 549)
        subscript_call_result_245580 = invoke(stypy.reporting.localization.Localization(__file__, 549, 23), getitem___245579, slice_245577)
        
        # Obtaining the member '__getitem__' of a type (line 549)
        getitem___245581 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 549, 16), subscript_call_result_245580, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 549)
        subscript_call_result_245582 = invoke(stypy.reporting.localization.Localization(__file__, 549, 16), getitem___245581, int_245575)
        
        # Assigning a type to the variable 'tuple_var_assignment_243733' (line 549)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 549, 16), 'tuple_var_assignment_243733', subscript_call_result_245582)
        
        # Assigning a Name to a Name (line 549):
        # Getting the type of 'tuple_var_assignment_243732' (line 549)
        tuple_var_assignment_243732_245583 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 549, 16), 'tuple_var_assignment_243732')
        # Assigning a type to the variable 'x' (line 549)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 549, 16), 'x', tuple_var_assignment_243732_245583)
        
        # Assigning a Name to a Name (line 549):
        # Getting the type of 'tuple_var_assignment_243733' (line 549)
        tuple_var_assignment_243733_245584 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 549, 16), 'tuple_var_assignment_243733')
        # Assigning a type to the variable 'y' (line 549)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 549, 19), 'y', tuple_var_assignment_243733_245584)
        
        # Call to append(...): (line 550)
        # Processing the call arguments (line 550)
        unicode_245587 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 550, 30), 'unicode', u'%g %g o')
        
        # Obtaining an instance of the builtin type 'tuple' (line 550)
        tuple_245588 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 550, 43), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 550)
        # Adding element type (line 550)
        # Getting the type of 'x' (line 550)
        x_245589 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 550, 43), 'x', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 550, 43), tuple_245588, x_245589)
        # Adding element type (line 550)
        # Getting the type of 'y' (line 550)
        y_245590 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 550, 46), 'y', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 550, 43), tuple_245588, y_245590)
        
        # Applying the binary operator '%' (line 550)
        result_mod_245591 = python_operator(stypy.reporting.localization.Localization(__file__, 550, 30), '%', unicode_245587, tuple_245588)
        
        # Processing the call keyword arguments (line 550)
        kwargs_245592 = {}
        # Getting the type of 'ps_cmd' (line 550)
        ps_cmd_245585 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 550, 16), 'ps_cmd', False)
        # Obtaining the member 'append' of a type (line 550)
        append_245586 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 550, 16), ps_cmd_245585, 'append')
        # Calling append(args, kwargs) (line 550)
        append_call_result_245593 = invoke(stypy.reporting.localization.Localization(__file__, 550, 16), append_245586, *[result_mod_245591], **kwargs_245592)
        
        # SSA join for if statement (line 548)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 552):
        
        # Assigning a Call to a Name (line 552):
        
        # Call to join(...): (line 552)
        # Processing the call arguments (line 552)
        # Getting the type of 'ps_cmd' (line 552)
        ps_cmd_245596 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 552, 23), 'ps_cmd', False)
        # Processing the call keyword arguments (line 552)
        kwargs_245597 = {}
        unicode_245594 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 552, 13), 'unicode', u'\n')
        # Obtaining the member 'join' of a type (line 552)
        join_245595 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 552, 13), unicode_245594, 'join')
        # Calling join(args, kwargs) (line 552)
        join_call_result_245598 = invoke(stypy.reporting.localization.Localization(__file__, 552, 13), join_245595, *[ps_cmd_245596], **kwargs_245597)
        
        # Assigning a type to the variable 'ps' (line 552)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 552, 8), 'ps', join_call_result_245598)
        
        # Call to _draw_ps(...): (line 553)
        # Processing the call arguments (line 553)
        # Getting the type of 'ps' (line 553)
        ps_245601 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 553, 22), 'ps', False)
        # Getting the type of 'gc' (line 553)
        gc_245602 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 553, 26), 'gc', False)
        # Getting the type of 'rgbFace' (line 553)
        rgbFace_245603 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 553, 30), 'rgbFace', False)
        # Processing the call keyword arguments (line 553)
        # Getting the type of 'False' (line 553)
        False_245604 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 553, 44), 'False', False)
        keyword_245605 = False_245604
        # Getting the type of 'False' (line 553)
        False_245606 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 553, 58), 'False', False)
        keyword_245607 = False_245606
        kwargs_245608 = {'stroke': keyword_245607, 'fill': keyword_245605}
        # Getting the type of 'self' (line 553)
        self_245599 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 553, 8), 'self', False)
        # Obtaining the member '_draw_ps' of a type (line 553)
        _draw_ps_245600 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 553, 8), self_245599, '_draw_ps')
        # Calling _draw_ps(args, kwargs) (line 553)
        _draw_ps_call_result_245609 = invoke(stypy.reporting.localization.Localization(__file__, 553, 8), _draw_ps_245600, *[ps_245601, gc_245602, rgbFace_245603], **kwargs_245608)
        
        
        # ################# End of 'draw_markers(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'draw_markers' in the type store
        # Getting the type of 'stypy_return_type' (line 504)
        stypy_return_type_245610 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 504, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_245610)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'draw_markers'
        return stypy_return_type_245610


    @norecursion
    def draw_path_collection(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'draw_path_collection'
        module_type_store = module_type_store.open_function_context('draw_path_collection', 555, 4, False)
        # Assigning a type to the variable 'self' (line 556)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 556, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererPS.draw_path_collection.__dict__.__setitem__('stypy_localization', localization)
        RendererPS.draw_path_collection.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererPS.draw_path_collection.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererPS.draw_path_collection.__dict__.__setitem__('stypy_function_name', 'RendererPS.draw_path_collection')
        RendererPS.draw_path_collection.__dict__.__setitem__('stypy_param_names_list', ['gc', 'master_transform', 'paths', 'all_transforms', 'offsets', 'offsetTrans', 'facecolors', 'edgecolors', 'linewidths', 'linestyles', 'antialiaseds', 'urls', 'offset_position'])
        RendererPS.draw_path_collection.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererPS.draw_path_collection.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererPS.draw_path_collection.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererPS.draw_path_collection.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererPS.draw_path_collection.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererPS.draw_path_collection.__dict__.__setitem__('stypy_declared_arg_number', 14)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererPS.draw_path_collection', ['gc', 'master_transform', 'paths', 'all_transforms', 'offsets', 'offsetTrans', 'facecolors', 'edgecolors', 'linewidths', 'linestyles', 'antialiaseds', 'urls', 'offset_position'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'draw_path_collection', localization, ['gc', 'master_transform', 'paths', 'all_transforms', 'offsets', 'offsetTrans', 'facecolors', 'edgecolors', 'linewidths', 'linestyles', 'antialiaseds', 'urls', 'offset_position'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'draw_path_collection(...)' code ##################

        
        # Assigning a IfExp to a Name (line 564):
        
        # Assigning a IfExp to a Name (line 564):
        
        
        
        # Call to len(...): (line 564)
        # Processing the call arguments (line 564)
        # Getting the type of 'paths' (line 564)
        paths_245612 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 564, 49), 'paths', False)
        # Processing the call keyword arguments (line 564)
        kwargs_245613 = {}
        # Getting the type of 'len' (line 564)
        len_245611 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 564, 45), 'len', False)
        # Calling len(args, kwargs) (line 564)
        len_call_result_245614 = invoke(stypy.reporting.localization.Localization(__file__, 564, 45), len_245611, *[paths_245612], **kwargs_245613)
        
        int_245615 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 564, 58), 'int')
        # Applying the binary operator '>' (line 564)
        result_gt_245616 = python_operator(stypy.reporting.localization.Localization(__file__, 564, 45), '>', len_call_result_245614, int_245615)
        
        # Testing the type of an if expression (line 564)
        is_suitable_condition(stypy.reporting.localization.Localization(__file__, 564, 19), result_gt_245616)
        # SSA begins for if expression (line 564)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if expression')
        
        # Call to len(...): (line 564)
        # Processing the call arguments (line 564)
        
        # Obtaining the type of the subscript
        int_245618 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 564, 29), 'int')
        # Getting the type of 'paths' (line 564)
        paths_245619 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 564, 23), 'paths', False)
        # Obtaining the member '__getitem__' of a type (line 564)
        getitem___245620 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 564, 23), paths_245619, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 564)
        subscript_call_result_245621 = invoke(stypy.reporting.localization.Localization(__file__, 564, 23), getitem___245620, int_245618)
        
        # Obtaining the member 'vertices' of a type (line 564)
        vertices_245622 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 564, 23), subscript_call_result_245621, 'vertices')
        # Processing the call keyword arguments (line 564)
        kwargs_245623 = {}
        # Getting the type of 'len' (line 564)
        len_245617 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 564, 19), 'len', False)
        # Calling len(args, kwargs) (line 564)
        len_call_result_245624 = invoke(stypy.reporting.localization.Localization(__file__, 564, 19), len_245617, *[vertices_245622], **kwargs_245623)
        
        # SSA branch for the else part of an if expression (line 564)
        module_type_store.open_ssa_branch('if expression else')
        int_245625 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 564, 65), 'int')
        # SSA join for if expression (line 564)
        module_type_store = module_type_store.join_ssa_context()
        if_exp_245626 = union_type.UnionType.add(len_call_result_245624, int_245625)
        
        # Assigning a type to the variable 'len_path' (line 564)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 564, 8), 'len_path', if_exp_245626)
        
        # Assigning a Call to a Name (line 565):
        
        # Assigning a Call to a Name (line 565):
        
        # Call to _iter_collection_uses_per_path(...): (line 565)
        # Processing the call arguments (line 565)
        # Getting the type of 'paths' (line 566)
        paths_245629 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 566, 12), 'paths', False)
        # Getting the type of 'all_transforms' (line 566)
        all_transforms_245630 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 566, 19), 'all_transforms', False)
        # Getting the type of 'offsets' (line 566)
        offsets_245631 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 566, 35), 'offsets', False)
        # Getting the type of 'facecolors' (line 566)
        facecolors_245632 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 566, 44), 'facecolors', False)
        # Getting the type of 'edgecolors' (line 566)
        edgecolors_245633 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 566, 56), 'edgecolors', False)
        # Processing the call keyword arguments (line 565)
        kwargs_245634 = {}
        # Getting the type of 'self' (line 565)
        self_245627 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 565, 24), 'self', False)
        # Obtaining the member '_iter_collection_uses_per_path' of a type (line 565)
        _iter_collection_uses_per_path_245628 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 565, 24), self_245627, '_iter_collection_uses_per_path')
        # Calling _iter_collection_uses_per_path(args, kwargs) (line 565)
        _iter_collection_uses_per_path_call_result_245635 = invoke(stypy.reporting.localization.Localization(__file__, 565, 24), _iter_collection_uses_per_path_245628, *[paths_245629, all_transforms_245630, offsets_245631, facecolors_245632, edgecolors_245633], **kwargs_245634)
        
        # Assigning a type to the variable 'uses_per_path' (line 565)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 565, 8), 'uses_per_path', _iter_collection_uses_per_path_call_result_245635)
        
        # Assigning a Compare to a Name (line 567):
        
        # Assigning a Compare to a Name (line 567):
        
        # Getting the type of 'len_path' (line 568)
        len_path_245636 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 568, 12), 'len_path')
        int_245637 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 568, 23), 'int')
        # Getting the type of 'uses_per_path' (line 568)
        uses_per_path_245638 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 568, 27), 'uses_per_path')
        # Applying the binary operator '*' (line 568)
        result_mul_245639 = python_operator(stypy.reporting.localization.Localization(__file__, 568, 23), '*', int_245637, uses_per_path_245638)
        
        # Applying the binary operator '+' (line 568)
        result_add_245640 = python_operator(stypy.reporting.localization.Localization(__file__, 568, 12), '+', len_path_245636, result_mul_245639)
        
        int_245641 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 568, 43), 'int')
        # Applying the binary operator '+' (line 568)
        result_add_245642 = python_operator(stypy.reporting.localization.Localization(__file__, 568, 41), '+', result_add_245640, int_245641)
        
        # Getting the type of 'len_path' (line 568)
        len_path_245643 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 568, 48), 'len_path')
        int_245644 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 568, 59), 'int')
        # Applying the binary operator '+' (line 568)
        result_add_245645 = python_operator(stypy.reporting.localization.Localization(__file__, 568, 48), '+', len_path_245643, int_245644)
        
        # Getting the type of 'uses_per_path' (line 568)
        uses_per_path_245646 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 568, 64), 'uses_per_path')
        # Applying the binary operator '*' (line 568)
        result_mul_245647 = python_operator(stypy.reporting.localization.Localization(__file__, 568, 47), '*', result_add_245645, uses_per_path_245646)
        
        # Applying the binary operator '<' (line 568)
        result_lt_245648 = python_operator(stypy.reporting.localization.Localization(__file__, 568, 12), '<', result_add_245642, result_mul_245647)
        
        # Assigning a type to the variable 'should_do_optimization' (line 567)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 567, 8), 'should_do_optimization', result_lt_245648)
        
        
        # Getting the type of 'should_do_optimization' (line 569)
        should_do_optimization_245649 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 569, 15), 'should_do_optimization')
        # Applying the 'not' unary operator (line 569)
        result_not__245650 = python_operator(stypy.reporting.localization.Localization(__file__, 569, 11), 'not', should_do_optimization_245649)
        
        # Testing the type of an if condition (line 569)
        if_condition_245651 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 569, 8), result_not__245650)
        # Assigning a type to the variable 'if_condition_245651' (line 569)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 569, 8), 'if_condition_245651', if_condition_245651)
        # SSA begins for if statement (line 569)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to draw_path_collection(...): (line 570)
        # Processing the call arguments (line 570)
        # Getting the type of 'self' (line 571)
        self_245654 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 571, 16), 'self', False)
        # Getting the type of 'gc' (line 571)
        gc_245655 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 571, 22), 'gc', False)
        # Getting the type of 'master_transform' (line 571)
        master_transform_245656 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 571, 26), 'master_transform', False)
        # Getting the type of 'paths' (line 571)
        paths_245657 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 571, 44), 'paths', False)
        # Getting the type of 'all_transforms' (line 571)
        all_transforms_245658 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 571, 51), 'all_transforms', False)
        # Getting the type of 'offsets' (line 572)
        offsets_245659 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 572, 16), 'offsets', False)
        # Getting the type of 'offsetTrans' (line 572)
        offsetTrans_245660 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 572, 25), 'offsetTrans', False)
        # Getting the type of 'facecolors' (line 572)
        facecolors_245661 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 572, 38), 'facecolors', False)
        # Getting the type of 'edgecolors' (line 572)
        edgecolors_245662 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 572, 50), 'edgecolors', False)
        # Getting the type of 'linewidths' (line 573)
        linewidths_245663 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 573, 16), 'linewidths', False)
        # Getting the type of 'linestyles' (line 573)
        linestyles_245664 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 573, 28), 'linestyles', False)
        # Getting the type of 'antialiaseds' (line 573)
        antialiaseds_245665 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 573, 40), 'antialiaseds', False)
        # Getting the type of 'urls' (line 573)
        urls_245666 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 573, 54), 'urls', False)
        # Getting the type of 'offset_position' (line 574)
        offset_position_245667 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 574, 16), 'offset_position', False)
        # Processing the call keyword arguments (line 570)
        kwargs_245668 = {}
        # Getting the type of 'RendererBase' (line 570)
        RendererBase_245652 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 570, 19), 'RendererBase', False)
        # Obtaining the member 'draw_path_collection' of a type (line 570)
        draw_path_collection_245653 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 570, 19), RendererBase_245652, 'draw_path_collection')
        # Calling draw_path_collection(args, kwargs) (line 570)
        draw_path_collection_call_result_245669 = invoke(stypy.reporting.localization.Localization(__file__, 570, 19), draw_path_collection_245653, *[self_245654, gc_245655, master_transform_245656, paths_245657, all_transforms_245658, offsets_245659, offsetTrans_245660, facecolors_245661, edgecolors_245662, linewidths_245663, linestyles_245664, antialiaseds_245665, urls_245666, offset_position_245667], **kwargs_245668)
        
        # Assigning a type to the variable 'stypy_return_type' (line 570)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 570, 12), 'stypy_return_type', draw_path_collection_call_result_245669)
        # SSA join for if statement (line 569)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Attribute to a Name (line 576):
        
        # Assigning a Attribute to a Name (line 576):
        # Getting the type of 'self' (line 576)
        self_245670 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 576, 16), 'self')
        # Obtaining the member '_pswriter' of a type (line 576)
        _pswriter_245671 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 576, 16), self_245670, '_pswriter')
        # Obtaining the member 'write' of a type (line 576)
        write_245672 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 576, 16), _pswriter_245671, 'write')
        # Assigning a type to the variable 'write' (line 576)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 576, 8), 'write', write_245672)
        
        # Assigning a List to a Name (line 578):
        
        # Assigning a List to a Name (line 578):
        
        # Obtaining an instance of the builtin type 'list' (line 578)
        list_245673 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 578, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 578)
        
        # Assigning a type to the variable 'path_codes' (line 578)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 578, 8), 'path_codes', list_245673)
        
        
        # Call to enumerate(...): (line 579)
        # Processing the call arguments (line 579)
        
        # Call to _iter_collection_raw_paths(...): (line 579)
        # Processing the call arguments (line 579)
        # Getting the type of 'master_transform' (line 580)
        master_transform_245677 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 580, 12), 'master_transform', False)
        # Getting the type of 'paths' (line 580)
        paths_245678 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 580, 30), 'paths', False)
        # Getting the type of 'all_transforms' (line 580)
        all_transforms_245679 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 580, 37), 'all_transforms', False)
        # Processing the call keyword arguments (line 579)
        kwargs_245680 = {}
        # Getting the type of 'self' (line 579)
        self_245675 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 579, 46), 'self', False)
        # Obtaining the member '_iter_collection_raw_paths' of a type (line 579)
        _iter_collection_raw_paths_245676 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 579, 46), self_245675, '_iter_collection_raw_paths')
        # Calling _iter_collection_raw_paths(args, kwargs) (line 579)
        _iter_collection_raw_paths_call_result_245681 = invoke(stypy.reporting.localization.Localization(__file__, 579, 46), _iter_collection_raw_paths_245676, *[master_transform_245677, paths_245678, all_transforms_245679], **kwargs_245680)
        
        # Processing the call keyword arguments (line 579)
        kwargs_245682 = {}
        # Getting the type of 'enumerate' (line 579)
        enumerate_245674 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 579, 36), 'enumerate', False)
        # Calling enumerate(args, kwargs) (line 579)
        enumerate_call_result_245683 = invoke(stypy.reporting.localization.Localization(__file__, 579, 36), enumerate_245674, *[_iter_collection_raw_paths_call_result_245681], **kwargs_245682)
        
        # Testing the type of a for loop iterable (line 579)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 579, 8), enumerate_call_result_245683)
        # Getting the type of the for loop variable (line 579)
        for_loop_var_245684 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 579, 8), enumerate_call_result_245683)
        # Assigning a type to the variable 'i' (line 579)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 579, 8), 'i', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 579, 8), for_loop_var_245684))
        # Assigning a type to the variable 'path' (line 579)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 579, 8), 'path', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 579, 8), for_loop_var_245684))
        # Assigning a type to the variable 'transform' (line 579)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 579, 8), 'transform', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 579, 8), for_loop_var_245684))
        # SSA begins for a for statement (line 579)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a BinOp to a Name (line 581):
        
        # Assigning a BinOp to a Name (line 581):
        unicode_245685 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 581, 19), 'unicode', u'p%x_%x')
        
        # Obtaining an instance of the builtin type 'tuple' (line 581)
        tuple_245686 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 581, 31), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 581)
        # Adding element type (line 581)
        # Getting the type of 'self' (line 581)
        self_245687 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 581, 31), 'self')
        # Obtaining the member '_path_collection_id' of a type (line 581)
        _path_collection_id_245688 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 581, 31), self_245687, '_path_collection_id')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 581, 31), tuple_245686, _path_collection_id_245688)
        # Adding element type (line 581)
        # Getting the type of 'i' (line 581)
        i_245689 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 581, 57), 'i')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 581, 31), tuple_245686, i_245689)
        
        # Applying the binary operator '%' (line 581)
        result_mod_245690 = python_operator(stypy.reporting.localization.Localization(__file__, 581, 19), '%', unicode_245685, tuple_245686)
        
        # Assigning a type to the variable 'name' (line 581)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 581, 12), 'name', result_mod_245690)
        
        # Assigning a List to a Name (line 582):
        
        # Assigning a List to a Name (line 582):
        
        # Obtaining an instance of the builtin type 'list' (line 582)
        list_245691 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 582, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 582)
        # Adding element type (line 582)
        unicode_245692 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 582, 22), 'unicode', u'/%s {')
        # Getting the type of 'name' (line 582)
        name_245693 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 582, 32), 'name')
        # Applying the binary operator '%' (line 582)
        result_mod_245694 = python_operator(stypy.reporting.localization.Localization(__file__, 582, 22), '%', unicode_245692, name_245693)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 582, 21), list_245691, result_mod_245694)
        # Adding element type (line 582)
        unicode_245695 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 583, 22), 'unicode', u'newpath')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 582, 21), list_245691, unicode_245695)
        # Adding element type (line 582)
        unicode_245696 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 583, 33), 'unicode', u'translate')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 582, 21), list_245691, unicode_245696)
        
        # Assigning a type to the variable 'ps_cmd' (line 582)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 582, 12), 'ps_cmd', list_245691)
        
        # Call to append(...): (line 584)
        # Processing the call arguments (line 584)
        
        # Call to _convert_path(...): (line 584)
        # Processing the call arguments (line 584)
        # Getting the type of 'path' (line 584)
        path_245701 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 584, 45), 'path', False)
        # Getting the type of 'transform' (line 584)
        transform_245702 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 584, 51), 'transform', False)
        # Processing the call keyword arguments (line 584)
        # Getting the type of 'False' (line 584)
        False_245703 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 584, 71), 'False', False)
        keyword_245704 = False_245703
        kwargs_245705 = {'simplify': keyword_245704}
        # Getting the type of 'self' (line 584)
        self_245699 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 584, 26), 'self', False)
        # Obtaining the member '_convert_path' of a type (line 584)
        _convert_path_245700 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 584, 26), self_245699, '_convert_path')
        # Calling _convert_path(args, kwargs) (line 584)
        _convert_path_call_result_245706 = invoke(stypy.reporting.localization.Localization(__file__, 584, 26), _convert_path_245700, *[path_245701, transform_245702], **kwargs_245705)
        
        # Processing the call keyword arguments (line 584)
        kwargs_245707 = {}
        # Getting the type of 'ps_cmd' (line 584)
        ps_cmd_245697 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 584, 12), 'ps_cmd', False)
        # Obtaining the member 'append' of a type (line 584)
        append_245698 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 584, 12), ps_cmd_245697, 'append')
        # Calling append(args, kwargs) (line 584)
        append_call_result_245708 = invoke(stypy.reporting.localization.Localization(__file__, 584, 12), append_245698, *[_convert_path_call_result_245706], **kwargs_245707)
        
        
        # Call to extend(...): (line 585)
        # Processing the call arguments (line 585)
        
        # Obtaining an instance of the builtin type 'list' (line 585)
        list_245711 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 585, 26), 'list')
        # Adding type elements to the builtin type 'list' instance (line 585)
        # Adding element type (line 585)
        unicode_245712 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 585, 27), 'unicode', u'} bind def\n')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 585, 26), list_245711, unicode_245712)
        
        # Processing the call keyword arguments (line 585)
        kwargs_245713 = {}
        # Getting the type of 'ps_cmd' (line 585)
        ps_cmd_245709 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 585, 12), 'ps_cmd', False)
        # Obtaining the member 'extend' of a type (line 585)
        extend_245710 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 585, 12), ps_cmd_245709, 'extend')
        # Calling extend(args, kwargs) (line 585)
        extend_call_result_245714 = invoke(stypy.reporting.localization.Localization(__file__, 585, 12), extend_245710, *[list_245711], **kwargs_245713)
        
        
        # Call to write(...): (line 586)
        # Processing the call arguments (line 586)
        
        # Call to join(...): (line 586)
        # Processing the call arguments (line 586)
        # Getting the type of 'ps_cmd' (line 586)
        ps_cmd_245718 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 586, 28), 'ps_cmd', False)
        # Processing the call keyword arguments (line 586)
        kwargs_245719 = {}
        unicode_245716 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 586, 18), 'unicode', u'\n')
        # Obtaining the member 'join' of a type (line 586)
        join_245717 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 586, 18), unicode_245716, 'join')
        # Calling join(args, kwargs) (line 586)
        join_call_result_245720 = invoke(stypy.reporting.localization.Localization(__file__, 586, 18), join_245717, *[ps_cmd_245718], **kwargs_245719)
        
        # Processing the call keyword arguments (line 586)
        kwargs_245721 = {}
        # Getting the type of 'write' (line 586)
        write_245715 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 586, 12), 'write', False)
        # Calling write(args, kwargs) (line 586)
        write_call_result_245722 = invoke(stypy.reporting.localization.Localization(__file__, 586, 12), write_245715, *[join_call_result_245720], **kwargs_245721)
        
        
        # Call to append(...): (line 587)
        # Processing the call arguments (line 587)
        # Getting the type of 'name' (line 587)
        name_245725 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 587, 30), 'name', False)
        # Processing the call keyword arguments (line 587)
        kwargs_245726 = {}
        # Getting the type of 'path_codes' (line 587)
        path_codes_245723 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 587, 12), 'path_codes', False)
        # Obtaining the member 'append' of a type (line 587)
        append_245724 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 587, 12), path_codes_245723, 'append')
        # Calling append(args, kwargs) (line 587)
        append_call_result_245727 = invoke(stypy.reporting.localization.Localization(__file__, 587, 12), append_245724, *[name_245725], **kwargs_245726)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Call to _iter_collection(...): (line 589)
        # Processing the call arguments (line 589)
        # Getting the type of 'gc' (line 590)
        gc_245730 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 590, 12), 'gc', False)
        # Getting the type of 'master_transform' (line 590)
        master_transform_245731 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 590, 16), 'master_transform', False)
        # Getting the type of 'all_transforms' (line 590)
        all_transforms_245732 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 590, 34), 'all_transforms', False)
        # Getting the type of 'path_codes' (line 590)
        path_codes_245733 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 590, 50), 'path_codes', False)
        # Getting the type of 'offsets' (line 590)
        offsets_245734 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 590, 62), 'offsets', False)
        # Getting the type of 'offsetTrans' (line 591)
        offsetTrans_245735 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 591, 12), 'offsetTrans', False)
        # Getting the type of 'facecolors' (line 591)
        facecolors_245736 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 591, 25), 'facecolors', False)
        # Getting the type of 'edgecolors' (line 591)
        edgecolors_245737 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 591, 37), 'edgecolors', False)
        # Getting the type of 'linewidths' (line 591)
        linewidths_245738 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 591, 49), 'linewidths', False)
        # Getting the type of 'linestyles' (line 591)
        linestyles_245739 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 591, 61), 'linestyles', False)
        # Getting the type of 'antialiaseds' (line 592)
        antialiaseds_245740 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 592, 12), 'antialiaseds', False)
        # Getting the type of 'urls' (line 592)
        urls_245741 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 592, 26), 'urls', False)
        # Getting the type of 'offset_position' (line 592)
        offset_position_245742 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 592, 32), 'offset_position', False)
        # Processing the call keyword arguments (line 589)
        kwargs_245743 = {}
        # Getting the type of 'self' (line 589)
        self_245728 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 589, 45), 'self', False)
        # Obtaining the member '_iter_collection' of a type (line 589)
        _iter_collection_245729 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 589, 45), self_245728, '_iter_collection')
        # Calling _iter_collection(args, kwargs) (line 589)
        _iter_collection_call_result_245744 = invoke(stypy.reporting.localization.Localization(__file__, 589, 45), _iter_collection_245729, *[gc_245730, master_transform_245731, all_transforms_245732, path_codes_245733, offsets_245734, offsetTrans_245735, facecolors_245736, edgecolors_245737, linewidths_245738, linestyles_245739, antialiaseds_245740, urls_245741, offset_position_245742], **kwargs_245743)
        
        # Testing the type of a for loop iterable (line 589)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 589, 8), _iter_collection_call_result_245744)
        # Getting the type of the for loop variable (line 589)
        for_loop_var_245745 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 589, 8), _iter_collection_call_result_245744)
        # Assigning a type to the variable 'xo' (line 589)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 589, 8), 'xo', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 589, 8), for_loop_var_245745))
        # Assigning a type to the variable 'yo' (line 589)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 589, 8), 'yo', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 589, 8), for_loop_var_245745))
        # Assigning a type to the variable 'path_id' (line 589)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 589, 8), 'path_id', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 589, 8), for_loop_var_245745))
        # Assigning a type to the variable 'gc0' (line 589)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 589, 8), 'gc0', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 589, 8), for_loop_var_245745))
        # Assigning a type to the variable 'rgbFace' (line 589)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 589, 8), 'rgbFace', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 589, 8), for_loop_var_245745))
        # SSA begins for a for statement (line 589)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a BinOp to a Name (line 593):
        
        # Assigning a BinOp to a Name (line 593):
        unicode_245746 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 593, 17), 'unicode', u'%g %g %s')
        
        # Obtaining an instance of the builtin type 'tuple' (line 593)
        tuple_245747 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 593, 31), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 593)
        # Adding element type (line 593)
        # Getting the type of 'xo' (line 593)
        xo_245748 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 593, 31), 'xo')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 593, 31), tuple_245747, xo_245748)
        # Adding element type (line 593)
        # Getting the type of 'yo' (line 593)
        yo_245749 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 593, 35), 'yo')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 593, 31), tuple_245747, yo_245749)
        # Adding element type (line 593)
        # Getting the type of 'path_id' (line 593)
        path_id_245750 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 593, 39), 'path_id')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 593, 31), tuple_245747, path_id_245750)
        
        # Applying the binary operator '%' (line 593)
        result_mod_245751 = python_operator(stypy.reporting.localization.Localization(__file__, 593, 17), '%', unicode_245746, tuple_245747)
        
        # Assigning a type to the variable 'ps' (line 593)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 593, 12), 'ps', result_mod_245751)
        
        # Call to _draw_ps(...): (line 594)
        # Processing the call arguments (line 594)
        # Getting the type of 'ps' (line 594)
        ps_245754 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 594, 26), 'ps', False)
        # Getting the type of 'gc0' (line 594)
        gc0_245755 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 594, 30), 'gc0', False)
        # Getting the type of 'rgbFace' (line 594)
        rgbFace_245756 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 594, 35), 'rgbFace', False)
        # Processing the call keyword arguments (line 594)
        kwargs_245757 = {}
        # Getting the type of 'self' (line 594)
        self_245752 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 594, 12), 'self', False)
        # Obtaining the member '_draw_ps' of a type (line 594)
        _draw_ps_245753 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 594, 12), self_245752, '_draw_ps')
        # Calling _draw_ps(args, kwargs) (line 594)
        _draw_ps_call_result_245758 = invoke(stypy.reporting.localization.Localization(__file__, 594, 12), _draw_ps_245753, *[ps_245754, gc0_245755, rgbFace_245756], **kwargs_245757)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'self' (line 596)
        self_245759 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 596, 8), 'self')
        # Obtaining the member '_path_collection_id' of a type (line 596)
        _path_collection_id_245760 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 596, 8), self_245759, '_path_collection_id')
        int_245761 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 596, 36), 'int')
        # Applying the binary operator '+=' (line 596)
        result_iadd_245762 = python_operator(stypy.reporting.localization.Localization(__file__, 596, 8), '+=', _path_collection_id_245760, int_245761)
        # Getting the type of 'self' (line 596)
        self_245763 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 596, 8), 'self')
        # Setting the type of the member '_path_collection_id' of a type (line 596)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 596, 8), self_245763, '_path_collection_id', result_iadd_245762)
        
        
        # ################# End of 'draw_path_collection(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'draw_path_collection' in the type store
        # Getting the type of 'stypy_return_type' (line 555)
        stypy_return_type_245764 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 555, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_245764)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'draw_path_collection'
        return stypy_return_type_245764


    @norecursion
    def draw_tex(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        unicode_245765 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 598, 56), 'unicode', u'TeX!')
        # Getting the type of 'None' (line 598)
        None_245766 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 598, 70), 'None')
        defaults = [unicode_245765, None_245766]
        # Create a new context for function 'draw_tex'
        module_type_store = module_type_store.open_function_context('draw_tex', 598, 4, False)
        # Assigning a type to the variable 'self' (line 599)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 599, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererPS.draw_tex.__dict__.__setitem__('stypy_localization', localization)
        RendererPS.draw_tex.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererPS.draw_tex.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererPS.draw_tex.__dict__.__setitem__('stypy_function_name', 'RendererPS.draw_tex')
        RendererPS.draw_tex.__dict__.__setitem__('stypy_param_names_list', ['gc', 'x', 'y', 's', 'prop', 'angle', 'ismath', 'mtext'])
        RendererPS.draw_tex.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererPS.draw_tex.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererPS.draw_tex.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererPS.draw_tex.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererPS.draw_tex.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererPS.draw_tex.__dict__.__setitem__('stypy_declared_arg_number', 9)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererPS.draw_tex', ['gc', 'x', 'y', 's', 'prop', 'angle', 'ismath', 'mtext'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'draw_tex', localization, ['gc', 'x', 'y', 's', 'prop', 'angle', 'ismath', 'mtext'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'draw_tex(...)' code ##################

        unicode_245767 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 601, (-1)), 'unicode', u'\n        draw a Text instance\n        ')
        
        # Assigning a Call to a Tuple (line 602):
        
        # Assigning a Call to a Name:
        
        # Call to get_text_width_height_descent(...): (line 602)
        # Processing the call arguments (line 602)
        # Getting the type of 's' (line 602)
        s_245770 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 602, 54), 's', False)
        # Getting the type of 'prop' (line 602)
        prop_245771 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 602, 57), 'prop', False)
        # Getting the type of 'ismath' (line 602)
        ismath_245772 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 602, 63), 'ismath', False)
        # Processing the call keyword arguments (line 602)
        kwargs_245773 = {}
        # Getting the type of 'self' (line 602)
        self_245768 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 602, 19), 'self', False)
        # Obtaining the member 'get_text_width_height_descent' of a type (line 602)
        get_text_width_height_descent_245769 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 602, 19), self_245768, 'get_text_width_height_descent')
        # Calling get_text_width_height_descent(args, kwargs) (line 602)
        get_text_width_height_descent_call_result_245774 = invoke(stypy.reporting.localization.Localization(__file__, 602, 19), get_text_width_height_descent_245769, *[s_245770, prop_245771, ismath_245772], **kwargs_245773)
        
        # Assigning a type to the variable 'call_assignment_243734' (line 602)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 602, 8), 'call_assignment_243734', get_text_width_height_descent_call_result_245774)
        
        # Assigning a Call to a Name (line 602):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_245777 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 602, 8), 'int')
        # Processing the call keyword arguments
        kwargs_245778 = {}
        # Getting the type of 'call_assignment_243734' (line 602)
        call_assignment_243734_245775 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 602, 8), 'call_assignment_243734', False)
        # Obtaining the member '__getitem__' of a type (line 602)
        getitem___245776 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 602, 8), call_assignment_243734_245775, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_245779 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___245776, *[int_245777], **kwargs_245778)
        
        # Assigning a type to the variable 'call_assignment_243735' (line 602)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 602, 8), 'call_assignment_243735', getitem___call_result_245779)
        
        # Assigning a Name to a Name (line 602):
        # Getting the type of 'call_assignment_243735' (line 602)
        call_assignment_243735_245780 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 602, 8), 'call_assignment_243735')
        # Assigning a type to the variable 'w' (line 602)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 602, 8), 'w', call_assignment_243735_245780)
        
        # Assigning a Call to a Name (line 602):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_245783 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 602, 8), 'int')
        # Processing the call keyword arguments
        kwargs_245784 = {}
        # Getting the type of 'call_assignment_243734' (line 602)
        call_assignment_243734_245781 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 602, 8), 'call_assignment_243734', False)
        # Obtaining the member '__getitem__' of a type (line 602)
        getitem___245782 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 602, 8), call_assignment_243734_245781, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_245785 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___245782, *[int_245783], **kwargs_245784)
        
        # Assigning a type to the variable 'call_assignment_243736' (line 602)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 602, 8), 'call_assignment_243736', getitem___call_result_245785)
        
        # Assigning a Name to a Name (line 602):
        # Getting the type of 'call_assignment_243736' (line 602)
        call_assignment_243736_245786 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 602, 8), 'call_assignment_243736')
        # Assigning a type to the variable 'h' (line 602)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 602, 11), 'h', call_assignment_243736_245786)
        
        # Assigning a Call to a Name (line 602):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_245789 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 602, 8), 'int')
        # Processing the call keyword arguments
        kwargs_245790 = {}
        # Getting the type of 'call_assignment_243734' (line 602)
        call_assignment_243734_245787 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 602, 8), 'call_assignment_243734', False)
        # Obtaining the member '__getitem__' of a type (line 602)
        getitem___245788 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 602, 8), call_assignment_243734_245787, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_245791 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___245788, *[int_245789], **kwargs_245790)
        
        # Assigning a type to the variable 'call_assignment_243737' (line 602)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 602, 8), 'call_assignment_243737', getitem___call_result_245791)
        
        # Assigning a Name to a Name (line 602):
        # Getting the type of 'call_assignment_243737' (line 602)
        call_assignment_243737_245792 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 602, 8), 'call_assignment_243737')
        # Assigning a type to the variable 'bl' (line 602)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 602, 14), 'bl', call_assignment_243737_245792)
        
        # Assigning a Call to a Name (line 603):
        
        # Assigning a Call to a Name (line 603):
        
        # Call to get_size_in_points(...): (line 603)
        # Processing the call keyword arguments (line 603)
        kwargs_245795 = {}
        # Getting the type of 'prop' (line 603)
        prop_245793 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 603, 19), 'prop', False)
        # Obtaining the member 'get_size_in_points' of a type (line 603)
        get_size_in_points_245794 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 603, 19), prop_245793, 'get_size_in_points')
        # Calling get_size_in_points(args, kwargs) (line 603)
        get_size_in_points_call_result_245796 = invoke(stypy.reporting.localization.Localization(__file__, 603, 19), get_size_in_points_245794, *[], **kwargs_245795)
        
        # Assigning a type to the variable 'fontsize' (line 603)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 603, 8), 'fontsize', get_size_in_points_call_result_245796)
        
        # Assigning a BinOp to a Name (line 604):
        
        # Assigning a BinOp to a Name (line 604):
        unicode_245797 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 604, 18), 'unicode', u'psmarker%d')
        # Getting the type of 'self' (line 604)
        self_245798 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 604, 33), 'self')
        # Obtaining the member 'textcnt' of a type (line 604)
        textcnt_245799 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 604, 33), self_245798, 'textcnt')
        # Applying the binary operator '%' (line 604)
        result_mod_245800 = python_operator(stypy.reporting.localization.Localization(__file__, 604, 18), '%', unicode_245797, textcnt_245799)
        
        # Assigning a type to the variable 'thetext' (line 604)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 604, 8), 'thetext', result_mod_245800)
        
        # Assigning a BinOp to a Name (line 605):
        
        # Assigning a BinOp to a Name (line 605):
        unicode_245801 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 605, 16), 'unicode', u'%1.3f,%1.3f,%1.3f')
        
        # Obtaining the type of the subscript
        int_245802 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 605, 51), 'int')
        slice_245803 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 605, 37), None, int_245802, None)
        
        # Call to get_rgb(...): (line 605)
        # Processing the call keyword arguments (line 605)
        kwargs_245806 = {}
        # Getting the type of 'gc' (line 605)
        gc_245804 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 605, 37), 'gc', False)
        # Obtaining the member 'get_rgb' of a type (line 605)
        get_rgb_245805 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 605, 37), gc_245804, 'get_rgb')
        # Calling get_rgb(args, kwargs) (line 605)
        get_rgb_call_result_245807 = invoke(stypy.reporting.localization.Localization(__file__, 605, 37), get_rgb_245805, *[], **kwargs_245806)
        
        # Obtaining the member '__getitem__' of a type (line 605)
        getitem___245808 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 605, 37), get_rgb_call_result_245807, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 605)
        subscript_call_result_245809 = invoke(stypy.reporting.localization.Localization(__file__, 605, 37), getitem___245808, slice_245803)
        
        # Applying the binary operator '%' (line 605)
        result_mod_245810 = python_operator(stypy.reporting.localization.Localization(__file__, 605, 16), '%', unicode_245801, subscript_call_result_245809)
        
        # Assigning a type to the variable 'color' (line 605)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 605, 8), 'color', result_mod_245810)
        
        # Assigning a Call to a Name (line 606):
        
        # Assigning a Call to a Name (line 606):
        
        # Call to get(...): (line 606)
        # Processing the call arguments (line 606)
        
        # Obtaining the type of the subscript
        int_245817 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 608, 40), 'int')
        
        # Obtaining the type of the subscript
        unicode_245818 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 608, 25), 'unicode', u'font.family')
        # Getting the type of 'rcParams' (line 608)
        rcParams_245819 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 608, 16), 'rcParams', False)
        # Obtaining the member '__getitem__' of a type (line 608)
        getitem___245820 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 608, 16), rcParams_245819, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 608)
        subscript_call_result_245821 = invoke(stypy.reporting.localization.Localization(__file__, 608, 16), getitem___245820, unicode_245818)
        
        # Obtaining the member '__getitem__' of a type (line 608)
        getitem___245822 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 608, 16), subscript_call_result_245821, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 608)
        subscript_call_result_245823 = invoke(stypy.reporting.localization.Localization(__file__, 608, 16), getitem___245822, int_245817)
        
        unicode_245824 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 608, 44), 'unicode', u'{\\rmfamily %s}')
        # Processing the call keyword arguments (line 606)
        kwargs_245825 = {}
        
        # Obtaining an instance of the builtin type 'dict' (line 606)
        dict_245811 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 606, 18), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 606)
        # Adding element type (key, value) (line 606)
        unicode_245812 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 606, 19), 'unicode', u'sans-serif')
        unicode_245813 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 606, 34), 'unicode', u'{\\sffamily %s}')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 606, 18), dict_245811, (unicode_245812, unicode_245813))
        # Adding element type (key, value) (line 606)
        unicode_245814 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 607, 15), 'unicode', u'monospace')
        unicode_245815 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 607, 30), 'unicode', u'{\\ttfamily %s}')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 606, 18), dict_245811, (unicode_245814, unicode_245815))
        
        # Obtaining the member 'get' of a type (line 606)
        get_245816 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 606, 18), dict_245811, 'get')
        # Calling get(args, kwargs) (line 606)
        get_call_result_245826 = invoke(stypy.reporting.localization.Localization(__file__, 606, 18), get_245816, *[subscript_call_result_245823, unicode_245824], **kwargs_245825)
        
        # Assigning a type to the variable 'fontcmd' (line 606)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 606, 8), 'fontcmd', get_call_result_245826)
        
        # Assigning a BinOp to a Name (line 609):
        
        # Assigning a BinOp to a Name (line 609):
        # Getting the type of 'fontcmd' (line 609)
        fontcmd_245827 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 609, 12), 'fontcmd')
        # Getting the type of 's' (line 609)
        s_245828 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 609, 22), 's')
        # Applying the binary operator '%' (line 609)
        result_mod_245829 = python_operator(stypy.reporting.localization.Localization(__file__, 609, 12), '%', fontcmd_245827, s_245828)
        
        # Assigning a type to the variable 's' (line 609)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 609, 8), 's', result_mod_245829)
        
        # Assigning a BinOp to a Name (line 610):
        
        # Assigning a BinOp to a Name (line 610):
        unicode_245830 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 610, 14), 'unicode', u'\\color[rgb]{%s} %s')
        
        # Obtaining an instance of the builtin type 'tuple' (line 610)
        tuple_245831 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 610, 39), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 610)
        # Adding element type (line 610)
        # Getting the type of 'color' (line 610)
        color_245832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 610, 39), 'color')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 610, 39), tuple_245831, color_245832)
        # Adding element type (line 610)
        # Getting the type of 's' (line 610)
        s_245833 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 610, 46), 's')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 610, 39), tuple_245831, s_245833)
        
        # Applying the binary operator '%' (line 610)
        result_mod_245834 = python_operator(stypy.reporting.localization.Localization(__file__, 610, 14), '%', unicode_245830, tuple_245831)
        
        # Assigning a type to the variable 'tex' (line 610)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 610, 8), 'tex', result_mod_245834)
        
        # Assigning a Num to a Name (line 612):
        
        # Assigning a Num to a Name (line 612):
        int_245835 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 612, 15), 'int')
        # Assigning a type to the variable 'corr' (line 612)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 612, 8), 'corr', int_245835)
        
        
        # Obtaining the type of the subscript
        unicode_245836 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 613, 20), 'unicode', u'text.latex.preview')
        # Getting the type of 'rcParams' (line 613)
        rcParams_245837 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 613, 11), 'rcParams')
        # Obtaining the member '__getitem__' of a type (line 613)
        getitem___245838 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 613, 11), rcParams_245837, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 613)
        subscript_call_result_245839 = invoke(stypy.reporting.localization.Localization(__file__, 613, 11), getitem___245838, unicode_245836)
        
        # Testing the type of an if condition (line 613)
        if_condition_245840 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 613, 8), subscript_call_result_245839)
        # Assigning a type to the variable 'if_condition_245840' (line 613)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 613, 8), 'if_condition_245840', if_condition_245840)
        # SSA begins for if statement (line 613)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 615):
        
        # Assigning a Call to a Name (line 615):
        
        # Call to _nums_to_str(...): (line 615)
        # Processing the call arguments (line 615)
        # Getting the type of 'x' (line 615)
        x_245842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 615, 31), 'x', False)
        # Getting the type of 'corr' (line 615)
        corr_245843 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 615, 33), 'corr', False)
        # Applying the binary operator '-' (line 615)
        result_sub_245844 = python_operator(stypy.reporting.localization.Localization(__file__, 615, 31), '-', x_245842, corr_245843)
        
        # Getting the type of 'y' (line 615)
        y_245845 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 615, 39), 'y', False)
        # Processing the call keyword arguments (line 615)
        kwargs_245846 = {}
        # Getting the type of '_nums_to_str' (line 615)
        _nums_to_str_245841 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 615, 18), '_nums_to_str', False)
        # Calling _nums_to_str(args, kwargs) (line 615)
        _nums_to_str_call_result_245847 = invoke(stypy.reporting.localization.Localization(__file__, 615, 18), _nums_to_str_245841, *[result_sub_245844, y_245845], **kwargs_245846)
        
        # Assigning a type to the variable 'pos' (line 615)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 615, 12), 'pos', _nums_to_str_call_result_245847)
        
        # Call to append(...): (line 616)
        # Processing the call arguments (line 616)
        unicode_245851 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 616, 31), 'unicode', u'\\psfrag{%s}[Bl][Bl][1][%f]{\\fontsize{%f}{%f}%s}')
        
        # Obtaining an instance of the builtin type 'tuple' (line 616)
        tuple_245852 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 616, 83), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 616)
        # Adding element type (line 616)
        # Getting the type of 'thetext' (line 616)
        thetext_245853 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 616, 83), 'thetext', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 616, 83), tuple_245852, thetext_245853)
        # Adding element type (line 616)
        # Getting the type of 'angle' (line 616)
        angle_245854 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 616, 92), 'angle', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 616, 83), tuple_245852, angle_245854)
        # Adding element type (line 616)
        # Getting the type of 'fontsize' (line 616)
        fontsize_245855 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 616, 99), 'fontsize', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 616, 83), tuple_245852, fontsize_245855)
        # Adding element type (line 616)
        # Getting the type of 'fontsize' (line 616)
        fontsize_245856 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 616, 109), 'fontsize', False)
        float_245857 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 616, 118), 'float')
        # Applying the binary operator '*' (line 616)
        result_mul_245858 = python_operator(stypy.reporting.localization.Localization(__file__, 616, 109), '*', fontsize_245856, float_245857)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 616, 83), tuple_245852, result_mul_245858)
        # Adding element type (line 616)
        # Getting the type of 'tex' (line 616)
        tex_245859 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 616, 124), 'tex', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 616, 83), tuple_245852, tex_245859)
        
        # Applying the binary operator '%' (line 616)
        result_mod_245860 = python_operator(stypy.reporting.localization.Localization(__file__, 616, 31), '%', unicode_245851, tuple_245852)
        
        # Processing the call keyword arguments (line 616)
        kwargs_245861 = {}
        # Getting the type of 'self' (line 616)
        self_245848 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 616, 12), 'self', False)
        # Obtaining the member 'psfrag' of a type (line 616)
        psfrag_245849 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 616, 12), self_245848, 'psfrag')
        # Obtaining the member 'append' of a type (line 616)
        append_245850 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 616, 12), psfrag_245849, 'append')
        # Calling append(args, kwargs) (line 616)
        append_call_result_245862 = invoke(stypy.reporting.localization.Localization(__file__, 616, 12), append_245850, *[result_mod_245860], **kwargs_245861)
        
        # SSA branch for the else part of an if statement (line 613)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Call to a Name (line 619):
        
        # Assigning a Call to a Name (line 619):
        
        # Call to _nums_to_str(...): (line 619)
        # Processing the call arguments (line 619)
        # Getting the type of 'x' (line 619)
        x_245864 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 619, 31), 'x', False)
        # Getting the type of 'corr' (line 619)
        corr_245865 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 619, 33), 'corr', False)
        # Applying the binary operator '-' (line 619)
        result_sub_245866 = python_operator(stypy.reporting.localization.Localization(__file__, 619, 31), '-', x_245864, corr_245865)
        
        # Getting the type of 'y' (line 619)
        y_245867 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 619, 39), 'y', False)
        # Getting the type of 'bl' (line 619)
        bl_245868 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 619, 41), 'bl', False)
        # Applying the binary operator '-' (line 619)
        result_sub_245869 = python_operator(stypy.reporting.localization.Localization(__file__, 619, 39), '-', y_245867, bl_245868)
        
        # Processing the call keyword arguments (line 619)
        kwargs_245870 = {}
        # Getting the type of '_nums_to_str' (line 619)
        _nums_to_str_245863 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 619, 18), '_nums_to_str', False)
        # Calling _nums_to_str(args, kwargs) (line 619)
        _nums_to_str_call_result_245871 = invoke(stypy.reporting.localization.Localization(__file__, 619, 18), _nums_to_str_245863, *[result_sub_245866, result_sub_245869], **kwargs_245870)
        
        # Assigning a type to the variable 'pos' (line 619)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 619, 12), 'pos', _nums_to_str_call_result_245871)
        
        # Call to append(...): (line 620)
        # Processing the call arguments (line 620)
        unicode_245875 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 620, 31), 'unicode', u'\\psfrag{%s}[bl][bl][1][%f]{\\fontsize{%f}{%f}%s}')
        
        # Obtaining an instance of the builtin type 'tuple' (line 620)
        tuple_245876 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 620, 83), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 620)
        # Adding element type (line 620)
        # Getting the type of 'thetext' (line 620)
        thetext_245877 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 620, 83), 'thetext', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 620, 83), tuple_245876, thetext_245877)
        # Adding element type (line 620)
        # Getting the type of 'angle' (line 620)
        angle_245878 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 620, 92), 'angle', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 620, 83), tuple_245876, angle_245878)
        # Adding element type (line 620)
        # Getting the type of 'fontsize' (line 620)
        fontsize_245879 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 620, 99), 'fontsize', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 620, 83), tuple_245876, fontsize_245879)
        # Adding element type (line 620)
        # Getting the type of 'fontsize' (line 620)
        fontsize_245880 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 620, 109), 'fontsize', False)
        float_245881 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 620, 118), 'float')
        # Applying the binary operator '*' (line 620)
        result_mul_245882 = python_operator(stypy.reporting.localization.Localization(__file__, 620, 109), '*', fontsize_245880, float_245881)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 620, 83), tuple_245876, result_mul_245882)
        # Adding element type (line 620)
        # Getting the type of 'tex' (line 620)
        tex_245883 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 620, 124), 'tex', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 620, 83), tuple_245876, tex_245883)
        
        # Applying the binary operator '%' (line 620)
        result_mod_245884 = python_operator(stypy.reporting.localization.Localization(__file__, 620, 31), '%', unicode_245875, tuple_245876)
        
        # Processing the call keyword arguments (line 620)
        kwargs_245885 = {}
        # Getting the type of 'self' (line 620)
        self_245872 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 620, 12), 'self', False)
        # Obtaining the member 'psfrag' of a type (line 620)
        psfrag_245873 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 620, 12), self_245872, 'psfrag')
        # Obtaining the member 'append' of a type (line 620)
        append_245874 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 620, 12), psfrag_245873, 'append')
        # Calling append(args, kwargs) (line 620)
        append_call_result_245886 = invoke(stypy.reporting.localization.Localization(__file__, 620, 12), append_245874, *[result_mod_245884], **kwargs_245885)
        
        # SSA join for if statement (line 613)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a BinOp to a Name (line 622):
        
        # Assigning a BinOp to a Name (line 622):
        unicode_245887 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 628, (-1)), 'unicode', u'gsave\n%(pos)s moveto\n(%(thetext)s)\nshow\ngrestore\n    ')
        
        # Call to locals(...): (line 628)
        # Processing the call keyword arguments (line 628)
        kwargs_245889 = {}
        # Getting the type of 'locals' (line 628)
        locals_245888 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 628, 10), 'locals', False)
        # Calling locals(args, kwargs) (line 628)
        locals_call_result_245890 = invoke(stypy.reporting.localization.Localization(__file__, 628, 10), locals_245888, *[], **kwargs_245889)
        
        # Applying the binary operator '%' (line 628)
        result_mod_245891 = python_operator(stypy.reporting.localization.Localization(__file__, 628, (-1)), '%', unicode_245887, locals_call_result_245890)
        
        # Assigning a type to the variable 'ps' (line 622)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 622, 8), 'ps', result_mod_245891)
        
        # Call to write(...): (line 630)
        # Processing the call arguments (line 630)
        # Getting the type of 'ps' (line 630)
        ps_245895 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 630, 29), 'ps', False)
        # Processing the call keyword arguments (line 630)
        kwargs_245896 = {}
        # Getting the type of 'self' (line 630)
        self_245892 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 630, 8), 'self', False)
        # Obtaining the member '_pswriter' of a type (line 630)
        _pswriter_245893 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 630, 8), self_245892, '_pswriter')
        # Obtaining the member 'write' of a type (line 630)
        write_245894 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 630, 8), _pswriter_245893, 'write')
        # Calling write(args, kwargs) (line 630)
        write_call_result_245897 = invoke(stypy.reporting.localization.Localization(__file__, 630, 8), write_245894, *[ps_245895], **kwargs_245896)
        
        
        # Getting the type of 'self' (line 631)
        self_245898 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 631, 8), 'self')
        # Obtaining the member 'textcnt' of a type (line 631)
        textcnt_245899 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 631, 8), self_245898, 'textcnt')
        int_245900 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 631, 24), 'int')
        # Applying the binary operator '+=' (line 631)
        result_iadd_245901 = python_operator(stypy.reporting.localization.Localization(__file__, 631, 8), '+=', textcnt_245899, int_245900)
        # Getting the type of 'self' (line 631)
        self_245902 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 631, 8), 'self')
        # Setting the type of the member 'textcnt' of a type (line 631)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 631, 8), self_245902, 'textcnt', result_iadd_245901)
        
        
        # ################# End of 'draw_tex(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'draw_tex' in the type store
        # Getting the type of 'stypy_return_type' (line 598)
        stypy_return_type_245903 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 598, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_245903)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'draw_tex'
        return stypy_return_type_245903


    @norecursion
    def draw_text(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'False' (line 633)
        False_245904 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 633, 57), 'False')
        # Getting the type of 'None' (line 633)
        None_245905 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 633, 70), 'None')
        defaults = [False_245904, None_245905]
        # Create a new context for function 'draw_text'
        module_type_store = module_type_store.open_function_context('draw_text', 633, 4, False)
        # Assigning a type to the variable 'self' (line 634)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 634, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererPS.draw_text.__dict__.__setitem__('stypy_localization', localization)
        RendererPS.draw_text.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererPS.draw_text.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererPS.draw_text.__dict__.__setitem__('stypy_function_name', 'RendererPS.draw_text')
        RendererPS.draw_text.__dict__.__setitem__('stypy_param_names_list', ['gc', 'x', 'y', 's', 'prop', 'angle', 'ismath', 'mtext'])
        RendererPS.draw_text.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererPS.draw_text.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererPS.draw_text.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererPS.draw_text.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererPS.draw_text.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererPS.draw_text.__dict__.__setitem__('stypy_declared_arg_number', 9)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererPS.draw_text', ['gc', 'x', 'y', 's', 'prop', 'angle', 'ismath', 'mtext'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'draw_text', localization, ['gc', 'x', 'y', 's', 'prop', 'angle', 'ismath', 'mtext'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'draw_text(...)' code ##################

        unicode_245906 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 636, (-1)), 'unicode', u'\n        draw a Text instance\n        ')
        
        # Assigning a Attribute to a Name (line 638):
        
        # Assigning a Attribute to a Name (line 638):
        # Getting the type of 'self' (line 638)
        self_245907 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 638, 16), 'self')
        # Obtaining the member '_pswriter' of a type (line 638)
        _pswriter_245908 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 638, 16), self_245907, '_pswriter')
        # Obtaining the member 'write' of a type (line 638)
        write_245909 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 638, 16), _pswriter_245908, 'write')
        # Assigning a type to the variable 'write' (line 638)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 638, 8), 'write', write_245909)
        
        # Getting the type of 'debugPS' (line 639)
        debugPS_245910 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 639, 11), 'debugPS')
        # Testing the type of an if condition (line 639)
        if_condition_245911 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 639, 8), debugPS_245910)
        # Assigning a type to the variable 'if_condition_245911' (line 639)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 639, 8), 'if_condition_245911', if_condition_245911)
        # SSA begins for if statement (line 639)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to write(...): (line 640)
        # Processing the call arguments (line 640)
        unicode_245913 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 640, 18), 'unicode', u'% text\n')
        # Processing the call keyword arguments (line 640)
        kwargs_245914 = {}
        # Getting the type of 'write' (line 640)
        write_245912 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 640, 12), 'write', False)
        # Calling write(args, kwargs) (line 640)
        write_call_result_245915 = invoke(stypy.reporting.localization.Localization(__file__, 640, 12), write_245912, *[unicode_245913], **kwargs_245914)
        
        # SSA join for if statement (line 639)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'ismath' (line 642)
        ismath_245916 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 642, 11), 'ismath')
        unicode_245917 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 642, 19), 'unicode', u'TeX')
        # Applying the binary operator '==' (line 642)
        result_eq_245918 = python_operator(stypy.reporting.localization.Localization(__file__, 642, 11), '==', ismath_245916, unicode_245917)
        
        # Testing the type of an if condition (line 642)
        if_condition_245919 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 642, 8), result_eq_245918)
        # Assigning a type to the variable 'if_condition_245919' (line 642)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 642, 8), 'if_condition_245919', if_condition_245919)
        # SSA begins for if statement (line 642)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to tex(...): (line 643)
        # Processing the call arguments (line 643)
        # Getting the type of 'gc' (line 643)
        gc_245922 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 643, 28), 'gc', False)
        # Getting the type of 'x' (line 643)
        x_245923 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 643, 32), 'x', False)
        # Getting the type of 'y' (line 643)
        y_245924 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 643, 35), 'y', False)
        # Getting the type of 's' (line 643)
        s_245925 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 643, 38), 's', False)
        # Getting the type of 'prop' (line 643)
        prop_245926 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 643, 41), 'prop', False)
        # Getting the type of 'angle' (line 643)
        angle_245927 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 643, 47), 'angle', False)
        # Processing the call keyword arguments (line 643)
        kwargs_245928 = {}
        # Getting the type of 'self' (line 643)
        self_245920 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 643, 19), 'self', False)
        # Obtaining the member 'tex' of a type (line 643)
        tex_245921 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 643, 19), self_245920, 'tex')
        # Calling tex(args, kwargs) (line 643)
        tex_call_result_245929 = invoke(stypy.reporting.localization.Localization(__file__, 643, 19), tex_245921, *[gc_245922, x_245923, y_245924, s_245925, prop_245926, angle_245927], **kwargs_245928)
        
        # Assigning a type to the variable 'stypy_return_type' (line 643)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 643, 12), 'stypy_return_type', tex_call_result_245929)
        # SSA branch for the else part of an if statement (line 642)
        module_type_store.open_ssa_branch('else')
        
        # Getting the type of 'ismath' (line 645)
        ismath_245930 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 645, 13), 'ismath')
        # Testing the type of an if condition (line 645)
        if_condition_245931 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 645, 13), ismath_245930)
        # Assigning a type to the variable 'if_condition_245931' (line 645)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 645, 13), 'if_condition_245931', if_condition_245931)
        # SSA begins for if statement (line 645)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to draw_mathtext(...): (line 646)
        # Processing the call arguments (line 646)
        # Getting the type of 'gc' (line 646)
        gc_245934 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 646, 38), 'gc', False)
        # Getting the type of 'x' (line 646)
        x_245935 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 646, 42), 'x', False)
        # Getting the type of 'y' (line 646)
        y_245936 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 646, 45), 'y', False)
        # Getting the type of 's' (line 646)
        s_245937 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 646, 48), 's', False)
        # Getting the type of 'prop' (line 646)
        prop_245938 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 646, 51), 'prop', False)
        # Getting the type of 'angle' (line 646)
        angle_245939 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 646, 57), 'angle', False)
        # Processing the call keyword arguments (line 646)
        kwargs_245940 = {}
        # Getting the type of 'self' (line 646)
        self_245932 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 646, 19), 'self', False)
        # Obtaining the member 'draw_mathtext' of a type (line 646)
        draw_mathtext_245933 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 646, 19), self_245932, 'draw_mathtext')
        # Calling draw_mathtext(args, kwargs) (line 646)
        draw_mathtext_call_result_245941 = invoke(stypy.reporting.localization.Localization(__file__, 646, 19), draw_mathtext_245933, *[gc_245934, x_245935, y_245936, s_245937, prop_245938, angle_245939], **kwargs_245940)
        
        # Assigning a type to the variable 'stypy_return_type' (line 646)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 646, 12), 'stypy_return_type', draw_mathtext_call_result_245941)
        # SSA branch for the else part of an if statement (line 645)
        module_type_store.open_ssa_branch('else')
        
        
        # Obtaining the type of the subscript
        unicode_245942 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 648, 22), 'unicode', u'ps.useafm')
        # Getting the type of 'rcParams' (line 648)
        rcParams_245943 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 648, 13), 'rcParams')
        # Obtaining the member '__getitem__' of a type (line 648)
        getitem___245944 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 648, 13), rcParams_245943, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 648)
        subscript_call_result_245945 = invoke(stypy.reporting.localization.Localization(__file__, 648, 13), getitem___245944, unicode_245942)
        
        # Testing the type of an if condition (line 648)
        if_condition_245946 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 648, 13), subscript_call_result_245945)
        # Assigning a type to the variable 'if_condition_245946' (line 648)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 648, 13), 'if_condition_245946', if_condition_245946)
        # SSA begins for if statement (line 648)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to set_color(...): (line 649)
        
        # Call to get_rgb(...): (line 649)
        # Processing the call keyword arguments (line 649)
        kwargs_245951 = {}
        # Getting the type of 'gc' (line 649)
        gc_245949 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 649, 28), 'gc', False)
        # Obtaining the member 'get_rgb' of a type (line 649)
        get_rgb_245950 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 649, 28), gc_245949, 'get_rgb')
        # Calling get_rgb(args, kwargs) (line 649)
        get_rgb_call_result_245952 = invoke(stypy.reporting.localization.Localization(__file__, 649, 28), get_rgb_245950, *[], **kwargs_245951)
        
        # Processing the call keyword arguments (line 649)
        kwargs_245953 = {}
        # Getting the type of 'self' (line 649)
        self_245947 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 649, 12), 'self', False)
        # Obtaining the member 'set_color' of a type (line 649)
        set_color_245948 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 649, 12), self_245947, 'set_color')
        # Calling set_color(args, kwargs) (line 649)
        set_color_call_result_245954 = invoke(stypy.reporting.localization.Localization(__file__, 649, 12), set_color_245948, *[get_rgb_call_result_245952], **kwargs_245953)
        
        
        # Assigning a Call to a Name (line 651):
        
        # Assigning a Call to a Name (line 651):
        
        # Call to _get_font_afm(...): (line 651)
        # Processing the call arguments (line 651)
        # Getting the type of 'prop' (line 651)
        prop_245957 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 651, 38), 'prop', False)
        # Processing the call keyword arguments (line 651)
        kwargs_245958 = {}
        # Getting the type of 'self' (line 651)
        self_245955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 651, 19), 'self', False)
        # Obtaining the member '_get_font_afm' of a type (line 651)
        _get_font_afm_245956 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 651, 19), self_245955, '_get_font_afm')
        # Calling _get_font_afm(args, kwargs) (line 651)
        _get_font_afm_call_result_245959 = invoke(stypy.reporting.localization.Localization(__file__, 651, 19), _get_font_afm_245956, *[prop_245957], **kwargs_245958)
        
        # Assigning a type to the variable 'font' (line 651)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 651, 12), 'font', _get_font_afm_call_result_245959)
        
        # Assigning a Call to a Name (line 652):
        
        # Assigning a Call to a Name (line 652):
        
        # Call to get_fontname(...): (line 652)
        # Processing the call keyword arguments (line 652)
        kwargs_245962 = {}
        # Getting the type of 'font' (line 652)
        font_245960 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 652, 23), 'font', False)
        # Obtaining the member 'get_fontname' of a type (line 652)
        get_fontname_245961 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 652, 23), font_245960, 'get_fontname')
        # Calling get_fontname(args, kwargs) (line 652)
        get_fontname_call_result_245963 = invoke(stypy.reporting.localization.Localization(__file__, 652, 23), get_fontname_245961, *[], **kwargs_245962)
        
        # Assigning a type to the variable 'fontname' (line 652)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 652, 12), 'fontname', get_fontname_call_result_245963)
        
        # Assigning a Call to a Name (line 653):
        
        # Assigning a Call to a Name (line 653):
        
        # Call to get_size_in_points(...): (line 653)
        # Processing the call keyword arguments (line 653)
        kwargs_245966 = {}
        # Getting the type of 'prop' (line 653)
        prop_245964 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 653, 23), 'prop', False)
        # Obtaining the member 'get_size_in_points' of a type (line 653)
        get_size_in_points_245965 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 653, 23), prop_245964, 'get_size_in_points')
        # Calling get_size_in_points(args, kwargs) (line 653)
        get_size_in_points_call_result_245967 = invoke(stypy.reporting.localization.Localization(__file__, 653, 23), get_size_in_points_245965, *[], **kwargs_245966)
        
        # Assigning a type to the variable 'fontsize' (line 653)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 653, 12), 'fontsize', get_size_in_points_call_result_245967)
        
        # Assigning a BinOp to a Name (line 654):
        
        # Assigning a BinOp to a Name (line 654):
        float_245968 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 654, 20), 'float')
        # Getting the type of 'fontsize' (line 654)
        fontsize_245969 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 654, 26), 'fontsize')
        # Applying the binary operator '*' (line 654)
        result_mul_245970 = python_operator(stypy.reporting.localization.Localization(__file__, 654, 20), '*', float_245968, fontsize_245969)
        
        # Assigning a type to the variable 'scale' (line 654)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 654, 12), 'scale', result_mul_245970)
        
        # Assigning a Num to a Name (line 656):
        
        # Assigning a Num to a Name (line 656):
        int_245971 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 656, 20), 'int')
        # Assigning a type to the variable 'thisx' (line 656)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 656, 12), 'thisx', int_245971)
        
        # Assigning a BinOp to a Name (line 657):
        
        # Assigning a BinOp to a Name (line 657):
        
        # Obtaining the type of the subscript
        int_245972 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 657, 53), 'int')
        
        # Call to get_str_bbox_and_descent(...): (line 657)
        # Processing the call arguments (line 657)
        # Getting the type of 's' (line 657)
        s_245975 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 657, 50), 's', False)
        # Processing the call keyword arguments (line 657)
        kwargs_245976 = {}
        # Getting the type of 'font' (line 657)
        font_245973 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 657, 20), 'font', False)
        # Obtaining the member 'get_str_bbox_and_descent' of a type (line 657)
        get_str_bbox_and_descent_245974 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 657, 20), font_245973, 'get_str_bbox_and_descent')
        # Calling get_str_bbox_and_descent(args, kwargs) (line 657)
        get_str_bbox_and_descent_call_result_245977 = invoke(stypy.reporting.localization.Localization(__file__, 657, 20), get_str_bbox_and_descent_245974, *[s_245975], **kwargs_245976)
        
        # Obtaining the member '__getitem__' of a type (line 657)
        getitem___245978 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 657, 20), get_str_bbox_and_descent_call_result_245977, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 657)
        subscript_call_result_245979 = invoke(stypy.reporting.localization.Localization(__file__, 657, 20), getitem___245978, int_245972)
        
        # Getting the type of 'scale' (line 657)
        scale_245980 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 657, 58), 'scale')
        # Applying the binary operator '*' (line 657)
        result_mul_245981 = python_operator(stypy.reporting.localization.Localization(__file__, 657, 20), '*', subscript_call_result_245979, scale_245980)
        
        # Assigning a type to the variable 'thisy' (line 657)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 657, 12), 'thisy', result_mul_245981)
        
        # Assigning a Name to a Name (line 658):
        
        # Assigning a Name to a Name (line 658):
        # Getting the type of 'None' (line 658)
        None_245982 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 658, 24), 'None')
        # Assigning a type to the variable 'last_name' (line 658)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 658, 12), 'last_name', None_245982)
        
        # Assigning a List to a Name (line 659):
        
        # Assigning a List to a Name (line 659):
        
        # Obtaining an instance of the builtin type 'list' (line 659)
        list_245983 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 659, 20), 'list')
        # Adding type elements to the builtin type 'list' instance (line 659)
        
        # Assigning a type to the variable 'lines' (line 659)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 659, 12), 'lines', list_245983)
        
        # Getting the type of 's' (line 660)
        s_245984 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 660, 21), 's')
        # Testing the type of a for loop iterable (line 660)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 660, 12), s_245984)
        # Getting the type of the for loop variable (line 660)
        for_loop_var_245985 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 660, 12), s_245984)
        # Assigning a type to the variable 'c' (line 660)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 660, 12), 'c', for_loop_var_245985)
        # SSA begins for a for statement (line 660)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 661):
        
        # Assigning a Call to a Name (line 661):
        
        # Call to get(...): (line 661)
        # Processing the call arguments (line 661)
        
        # Call to ord(...): (line 661)
        # Processing the call arguments (line 661)
        # Getting the type of 'c' (line 661)
        c_245989 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 661, 41), 'c', False)
        # Processing the call keyword arguments (line 661)
        kwargs_245990 = {}
        # Getting the type of 'ord' (line 661)
        ord_245988 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 661, 37), 'ord', False)
        # Calling ord(args, kwargs) (line 661)
        ord_call_result_245991 = invoke(stypy.reporting.localization.Localization(__file__, 661, 37), ord_245988, *[c_245989], **kwargs_245990)
        
        unicode_245992 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 661, 45), 'unicode', u'question')
        # Processing the call keyword arguments (line 661)
        kwargs_245993 = {}
        # Getting the type of 'uni2type1' (line 661)
        uni2type1_245986 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 661, 23), 'uni2type1', False)
        # Obtaining the member 'get' of a type (line 661)
        get_245987 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 661, 23), uni2type1_245986, 'get')
        # Calling get(args, kwargs) (line 661)
        get_call_result_245994 = invoke(stypy.reporting.localization.Localization(__file__, 661, 23), get_245987, *[ord_call_result_245991, unicode_245992], **kwargs_245993)
        
        # Assigning a type to the variable 'name' (line 661)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 661, 16), 'name', get_call_result_245994)
        
        
        # SSA begins for try-except statement (line 662)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
        
        # Assigning a Call to a Name (line 663):
        
        # Assigning a Call to a Name (line 663):
        
        # Call to get_width_from_char_name(...): (line 663)
        # Processing the call arguments (line 663)
        # Getting the type of 'name' (line 663)
        name_245997 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 663, 58), 'name', False)
        # Processing the call keyword arguments (line 663)
        kwargs_245998 = {}
        # Getting the type of 'font' (line 663)
        font_245995 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 663, 28), 'font', False)
        # Obtaining the member 'get_width_from_char_name' of a type (line 663)
        get_width_from_char_name_245996 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 663, 28), font_245995, 'get_width_from_char_name')
        # Calling get_width_from_char_name(args, kwargs) (line 663)
        get_width_from_char_name_call_result_245999 = invoke(stypy.reporting.localization.Localization(__file__, 663, 28), get_width_from_char_name_245996, *[name_245997], **kwargs_245998)
        
        # Assigning a type to the variable 'width' (line 663)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 663, 20), 'width', get_width_from_char_name_call_result_245999)
        # SSA branch for the except part of a try statement (line 662)
        # SSA branch for the except 'KeyError' branch of a try statement (line 662)
        module_type_store.open_ssa_branch('except')
        
        # Assigning a Str to a Name (line 665):
        
        # Assigning a Str to a Name (line 665):
        unicode_246000 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 665, 27), 'unicode', u'question')
        # Assigning a type to the variable 'name' (line 665)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 665, 20), 'name', unicode_246000)
        
        # Assigning a Call to a Name (line 666):
        
        # Assigning a Call to a Name (line 666):
        
        # Call to get_width_char(...): (line 666)
        # Processing the call arguments (line 666)
        unicode_246003 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 666, 48), 'unicode', u'?')
        # Processing the call keyword arguments (line 666)
        kwargs_246004 = {}
        # Getting the type of 'font' (line 666)
        font_246001 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 666, 28), 'font', False)
        # Obtaining the member 'get_width_char' of a type (line 666)
        get_width_char_246002 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 666, 28), font_246001, 'get_width_char')
        # Calling get_width_char(args, kwargs) (line 666)
        get_width_char_call_result_246005 = invoke(stypy.reporting.localization.Localization(__file__, 666, 28), get_width_char_246002, *[unicode_246003], **kwargs_246004)
        
        # Assigning a type to the variable 'width' (line 666)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 666, 20), 'width', get_width_char_call_result_246005)
        # SSA join for try-except statement (line 662)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Type idiom detected: calculating its left and rigth part (line 667)
        # Getting the type of 'last_name' (line 667)
        last_name_246006 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 667, 16), 'last_name')
        # Getting the type of 'None' (line 667)
        None_246007 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 667, 36), 'None')
        
        (may_be_246008, more_types_in_union_246009) = may_not_be_none(last_name_246006, None_246007)

        if may_be_246008:

            if more_types_in_union_246009:
                # Runtime conditional SSA (line 667)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Call to a Name (line 668):
            
            # Assigning a Call to a Name (line 668):
            
            # Call to get_kern_dist_from_name(...): (line 668)
            # Processing the call arguments (line 668)
            # Getting the type of 'last_name' (line 668)
            last_name_246012 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 668, 56), 'last_name', False)
            # Getting the type of 'name' (line 668)
            name_246013 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 668, 67), 'name', False)
            # Processing the call keyword arguments (line 668)
            kwargs_246014 = {}
            # Getting the type of 'font' (line 668)
            font_246010 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 668, 27), 'font', False)
            # Obtaining the member 'get_kern_dist_from_name' of a type (line 668)
            get_kern_dist_from_name_246011 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 668, 27), font_246010, 'get_kern_dist_from_name')
            # Calling get_kern_dist_from_name(args, kwargs) (line 668)
            get_kern_dist_from_name_call_result_246015 = invoke(stypy.reporting.localization.Localization(__file__, 668, 27), get_kern_dist_from_name_246011, *[last_name_246012, name_246013], **kwargs_246014)
            
            # Assigning a type to the variable 'kern' (line 668)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 668, 20), 'kern', get_kern_dist_from_name_call_result_246015)

            if more_types_in_union_246009:
                # Runtime conditional SSA for else branch (line 667)
                module_type_store.open_ssa_branch('idiom else')



        if ((not may_be_246008) or more_types_in_union_246009):
            
            # Assigning a Num to a Name (line 670):
            
            # Assigning a Num to a Name (line 670):
            int_246016 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 670, 27), 'int')
            # Assigning a type to the variable 'kern' (line 670)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 670, 20), 'kern', int_246016)

            if (may_be_246008 and more_types_in_union_246009):
                # SSA join for if statement (line 667)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Name to a Name (line 671):
        
        # Assigning a Name to a Name (line 671):
        # Getting the type of 'name' (line 671)
        name_246017 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 671, 28), 'name')
        # Assigning a type to the variable 'last_name' (line 671)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 671, 16), 'last_name', name_246017)
        
        # Getting the type of 'thisx' (line 672)
        thisx_246018 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 672, 16), 'thisx')
        # Getting the type of 'kern' (line 672)
        kern_246019 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 672, 25), 'kern')
        # Getting the type of 'scale' (line 672)
        scale_246020 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 672, 32), 'scale')
        # Applying the binary operator '*' (line 672)
        result_mul_246021 = python_operator(stypy.reporting.localization.Localization(__file__, 672, 25), '*', kern_246019, scale_246020)
        
        # Applying the binary operator '+=' (line 672)
        result_iadd_246022 = python_operator(stypy.reporting.localization.Localization(__file__, 672, 16), '+=', thisx_246018, result_mul_246021)
        # Assigning a type to the variable 'thisx' (line 672)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 672, 16), 'thisx', result_iadd_246022)
        
        
        # Call to append(...): (line 674)
        # Processing the call arguments (line 674)
        unicode_246025 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 674, 29), 'unicode', u'%f %f m /%s glyphshow')
        
        # Obtaining an instance of the builtin type 'tuple' (line 674)
        tuple_246026 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 674, 54), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 674)
        # Adding element type (line 674)
        # Getting the type of 'thisx' (line 674)
        thisx_246027 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 674, 54), 'thisx', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 674, 54), tuple_246026, thisx_246027)
        # Adding element type (line 674)
        # Getting the type of 'thisy' (line 674)
        thisy_246028 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 674, 61), 'thisy', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 674, 54), tuple_246026, thisy_246028)
        # Adding element type (line 674)
        # Getting the type of 'name' (line 674)
        name_246029 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 674, 68), 'name', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 674, 54), tuple_246026, name_246029)
        
        # Applying the binary operator '%' (line 674)
        result_mod_246030 = python_operator(stypy.reporting.localization.Localization(__file__, 674, 29), '%', unicode_246025, tuple_246026)
        
        # Processing the call keyword arguments (line 674)
        kwargs_246031 = {}
        # Getting the type of 'lines' (line 674)
        lines_246023 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 674, 16), 'lines', False)
        # Obtaining the member 'append' of a type (line 674)
        append_246024 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 674, 16), lines_246023, 'append')
        # Calling append(args, kwargs) (line 674)
        append_call_result_246032 = invoke(stypy.reporting.localization.Localization(__file__, 674, 16), append_246024, *[result_mod_246030], **kwargs_246031)
        
        
        # Getting the type of 'thisx' (line 676)
        thisx_246033 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 676, 16), 'thisx')
        # Getting the type of 'width' (line 676)
        width_246034 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 676, 25), 'width')
        # Getting the type of 'scale' (line 676)
        scale_246035 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 676, 33), 'scale')
        # Applying the binary operator '*' (line 676)
        result_mul_246036 = python_operator(stypy.reporting.localization.Localization(__file__, 676, 25), '*', width_246034, scale_246035)
        
        # Applying the binary operator '+=' (line 676)
        result_iadd_246037 = python_operator(stypy.reporting.localization.Localization(__file__, 676, 16), '+=', thisx_246033, result_mul_246036)
        # Assigning a type to the variable 'thisx' (line 676)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 676, 16), 'thisx', result_iadd_246037)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 678):
        
        # Assigning a Call to a Name (line 678):
        
        # Call to join(...): (line 678)
        # Processing the call arguments (line 678)
        # Getting the type of 'lines' (line 678)
        lines_246040 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 678, 32), 'lines', False)
        # Processing the call keyword arguments (line 678)
        kwargs_246041 = {}
        unicode_246038 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 678, 22), 'unicode', u'\n')
        # Obtaining the member 'join' of a type (line 678)
        join_246039 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 678, 22), unicode_246038, 'join')
        # Calling join(args, kwargs) (line 678)
        join_call_result_246042 = invoke(stypy.reporting.localization.Localization(__file__, 678, 22), join_246039, *[lines_246040], **kwargs_246041)
        
        # Assigning a type to the variable 'thetext' (line 678)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 678, 12), 'thetext', join_call_result_246042)
        
        # Assigning a BinOp to a Name (line 679):
        
        # Assigning a BinOp to a Name (line 679):
        unicode_246043 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 688, (-1)), 'unicode', u'gsave\n/%(fontname)s findfont\n%(fontsize)s scalefont\nsetfont\n%(x)f %(y)f translate\n%(angle)f rotate\n%(thetext)s\ngrestore\n    ')
        
        # Call to locals(...): (line 688)
        # Processing the call keyword arguments (line 688)
        kwargs_246045 = {}
        # Getting the type of 'locals' (line 688)
        locals_246044 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 688, 10), 'locals', False)
        # Calling locals(args, kwargs) (line 688)
        locals_call_result_246046 = invoke(stypy.reporting.localization.Localization(__file__, 688, 10), locals_246044, *[], **kwargs_246045)
        
        # Applying the binary operator '%' (line 688)
        result_mod_246047 = python_operator(stypy.reporting.localization.Localization(__file__, 688, (-1)), '%', unicode_246043, locals_call_result_246046)
        
        # Assigning a type to the variable 'ps' (line 679)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 679, 12), 'ps', result_mod_246047)
        
        # Call to write(...): (line 689)
        # Processing the call arguments (line 689)
        # Getting the type of 'ps' (line 689)
        ps_246051 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 689, 33), 'ps', False)
        # Processing the call keyword arguments (line 689)
        kwargs_246052 = {}
        # Getting the type of 'self' (line 689)
        self_246048 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 689, 12), 'self', False)
        # Obtaining the member '_pswriter' of a type (line 689)
        _pswriter_246049 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 689, 12), self_246048, '_pswriter')
        # Obtaining the member 'write' of a type (line 689)
        write_246050 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 689, 12), _pswriter_246049, 'write')
        # Calling write(args, kwargs) (line 689)
        write_call_result_246053 = invoke(stypy.reporting.localization.Localization(__file__, 689, 12), write_246050, *[ps_246051], **kwargs_246052)
        
        # SSA branch for the else part of an if statement (line 648)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Call to a Name (line 692):
        
        # Assigning a Call to a Name (line 692):
        
        # Call to _get_font_ttf(...): (line 692)
        # Processing the call arguments (line 692)
        # Getting the type of 'prop' (line 692)
        prop_246056 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 692, 38), 'prop', False)
        # Processing the call keyword arguments (line 692)
        kwargs_246057 = {}
        # Getting the type of 'self' (line 692)
        self_246054 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 692, 19), 'self', False)
        # Obtaining the member '_get_font_ttf' of a type (line 692)
        _get_font_ttf_246055 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 692, 19), self_246054, '_get_font_ttf')
        # Calling _get_font_ttf(args, kwargs) (line 692)
        _get_font_ttf_call_result_246058 = invoke(stypy.reporting.localization.Localization(__file__, 692, 19), _get_font_ttf_246055, *[prop_246056], **kwargs_246057)
        
        # Assigning a type to the variable 'font' (line 692)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 692, 12), 'font', _get_font_ttf_call_result_246058)
        
        # Call to set_text(...): (line 693)
        # Processing the call arguments (line 693)
        # Getting the type of 's' (line 693)
        s_246061 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 693, 26), 's', False)
        int_246062 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 693, 29), 'int')
        # Processing the call keyword arguments (line 693)
        # Getting the type of 'LOAD_NO_HINTING' (line 693)
        LOAD_NO_HINTING_246063 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 693, 38), 'LOAD_NO_HINTING', False)
        keyword_246064 = LOAD_NO_HINTING_246063
        kwargs_246065 = {'flags': keyword_246064}
        # Getting the type of 'font' (line 693)
        font_246059 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 693, 12), 'font', False)
        # Obtaining the member 'set_text' of a type (line 693)
        set_text_246060 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 693, 12), font_246059, 'set_text')
        # Calling set_text(args, kwargs) (line 693)
        set_text_call_result_246066 = invoke(stypy.reporting.localization.Localization(__file__, 693, 12), set_text_246060, *[s_246061, int_246062], **kwargs_246065)
        
        
        # Call to track_characters(...): (line 694)
        # Processing the call arguments (line 694)
        # Getting the type of 'font' (line 694)
        font_246069 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 694, 34), 'font', False)
        # Getting the type of 's' (line 694)
        s_246070 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 694, 40), 's', False)
        # Processing the call keyword arguments (line 694)
        kwargs_246071 = {}
        # Getting the type of 'self' (line 694)
        self_246067 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 694, 12), 'self', False)
        # Obtaining the member 'track_characters' of a type (line 694)
        track_characters_246068 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 694, 12), self_246067, 'track_characters')
        # Calling track_characters(args, kwargs) (line 694)
        track_characters_call_result_246072 = invoke(stypy.reporting.localization.Localization(__file__, 694, 12), track_characters_246068, *[font_246069, s_246070], **kwargs_246071)
        
        
        # Call to set_color(...): (line 696)
        
        # Call to get_rgb(...): (line 696)
        # Processing the call keyword arguments (line 696)
        kwargs_246077 = {}
        # Getting the type of 'gc' (line 696)
        gc_246075 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 696, 28), 'gc', False)
        # Obtaining the member 'get_rgb' of a type (line 696)
        get_rgb_246076 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 696, 28), gc_246075, 'get_rgb')
        # Calling get_rgb(args, kwargs) (line 696)
        get_rgb_call_result_246078 = invoke(stypy.reporting.localization.Localization(__file__, 696, 28), get_rgb_246076, *[], **kwargs_246077)
        
        # Processing the call keyword arguments (line 696)
        kwargs_246079 = {}
        # Getting the type of 'self' (line 696)
        self_246073 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 696, 12), 'self', False)
        # Obtaining the member 'set_color' of a type (line 696)
        set_color_246074 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 696, 12), self_246073, 'set_color')
        # Calling set_color(args, kwargs) (line 696)
        set_color_call_result_246080 = invoke(stypy.reporting.localization.Localization(__file__, 696, 12), set_color_246074, *[get_rgb_call_result_246078], **kwargs_246079)
        
        
        # Assigning a Call to a Name (line 697):
        
        # Assigning a Call to a Name (line 697):
        
        # Call to get_sfnt(...): (line 697)
        # Processing the call keyword arguments (line 697)
        kwargs_246083 = {}
        # Getting the type of 'font' (line 697)
        font_246081 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 697, 19), 'font', False)
        # Obtaining the member 'get_sfnt' of a type (line 697)
        get_sfnt_246082 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 697, 19), font_246081, 'get_sfnt')
        # Calling get_sfnt(args, kwargs) (line 697)
        get_sfnt_call_result_246084 = invoke(stypy.reporting.localization.Localization(__file__, 697, 19), get_sfnt_246082, *[], **kwargs_246083)
        
        # Assigning a type to the variable 'sfnt' (line 697)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 697, 12), 'sfnt', get_sfnt_call_result_246084)
        
        
        # SSA begins for try-except statement (line 698)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
        
        # Assigning a Call to a Name (line 699):
        
        # Assigning a Call to a Name (line 699):
        
        # Call to decode(...): (line 699)
        # Processing the call arguments (line 699)
        unicode_246094 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 699, 49), 'unicode', u'macroman')
        # Processing the call keyword arguments (line 699)
        kwargs_246095 = {}
        
        # Obtaining the type of the subscript
        
        # Obtaining an instance of the builtin type 'tuple' (line 699)
        tuple_246085 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 699, 32), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 699)
        # Adding element type (line 699)
        int_246086 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 699, 32), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 699, 32), tuple_246085, int_246086)
        # Adding element type (line 699)
        int_246087 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 699, 34), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 699, 32), tuple_246085, int_246087)
        # Adding element type (line 699)
        int_246088 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 699, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 699, 32), tuple_246085, int_246088)
        # Adding element type (line 699)
        int_246089 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 699, 38), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 699, 32), tuple_246085, int_246089)
        
        # Getting the type of 'sfnt' (line 699)
        sfnt_246090 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 699, 26), 'sfnt', False)
        # Obtaining the member '__getitem__' of a type (line 699)
        getitem___246091 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 699, 26), sfnt_246090, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 699)
        subscript_call_result_246092 = invoke(stypy.reporting.localization.Localization(__file__, 699, 26), getitem___246091, tuple_246085)
        
        # Obtaining the member 'decode' of a type (line 699)
        decode_246093 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 699, 26), subscript_call_result_246092, 'decode')
        # Calling decode(args, kwargs) (line 699)
        decode_call_result_246096 = invoke(stypy.reporting.localization.Localization(__file__, 699, 26), decode_246093, *[unicode_246094], **kwargs_246095)
        
        # Assigning a type to the variable 'ps_name' (line 699)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 699, 16), 'ps_name', decode_call_result_246096)
        # SSA branch for the except part of a try statement (line 698)
        # SSA branch for the except 'KeyError' branch of a try statement (line 698)
        module_type_store.open_ssa_branch('except')
        
        # Assigning a Call to a Name (line 701):
        
        # Assigning a Call to a Name (line 701):
        
        # Call to decode(...): (line 701)
        # Processing the call arguments (line 701)
        unicode_246106 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 702, 20), 'unicode', u'utf-16be')
        # Processing the call keyword arguments (line 701)
        kwargs_246107 = {}
        
        # Obtaining the type of the subscript
        
        # Obtaining an instance of the builtin type 'tuple' (line 701)
        tuple_246097 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 701, 32), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 701)
        # Adding element type (line 701)
        int_246098 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 701, 32), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 701, 32), tuple_246097, int_246098)
        # Adding element type (line 701)
        int_246099 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 701, 34), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 701, 32), tuple_246097, int_246099)
        # Adding element type (line 701)
        int_246100 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 701, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 701, 32), tuple_246097, int_246100)
        # Adding element type (line 701)
        int_246101 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 701, 43), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 701, 32), tuple_246097, int_246101)
        
        # Getting the type of 'sfnt' (line 701)
        sfnt_246102 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 701, 26), 'sfnt', False)
        # Obtaining the member '__getitem__' of a type (line 701)
        getitem___246103 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 701, 26), sfnt_246102, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 701)
        subscript_call_result_246104 = invoke(stypy.reporting.localization.Localization(__file__, 701, 26), getitem___246103, tuple_246097)
        
        # Obtaining the member 'decode' of a type (line 701)
        decode_246105 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 701, 26), subscript_call_result_246104, 'decode')
        # Calling decode(args, kwargs) (line 701)
        decode_call_result_246108 = invoke(stypy.reporting.localization.Localization(__file__, 701, 26), decode_246105, *[unicode_246106], **kwargs_246107)
        
        # Assigning a type to the variable 'ps_name' (line 701)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 701, 16), 'ps_name', decode_call_result_246108)
        # SSA join for try-except statement (line 698)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 703):
        
        # Assigning a Call to a Name (line 703):
        
        # Call to decode(...): (line 703)
        # Processing the call arguments (line 703)
        unicode_246116 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 703, 64), 'unicode', u'ascii')
        # Processing the call keyword arguments (line 703)
        kwargs_246117 = {}
        
        # Call to encode(...): (line 703)
        # Processing the call arguments (line 703)
        unicode_246111 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 703, 37), 'unicode', u'ascii')
        unicode_246112 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 703, 46), 'unicode', u'replace')
        # Processing the call keyword arguments (line 703)
        kwargs_246113 = {}
        # Getting the type of 'ps_name' (line 703)
        ps_name_246109 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 703, 22), 'ps_name', False)
        # Obtaining the member 'encode' of a type (line 703)
        encode_246110 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 703, 22), ps_name_246109, 'encode')
        # Calling encode(args, kwargs) (line 703)
        encode_call_result_246114 = invoke(stypy.reporting.localization.Localization(__file__, 703, 22), encode_246110, *[unicode_246111, unicode_246112], **kwargs_246113)
        
        # Obtaining the member 'decode' of a type (line 703)
        decode_246115 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 703, 22), encode_call_result_246114, 'decode')
        # Calling decode(args, kwargs) (line 703)
        decode_call_result_246118 = invoke(stypy.reporting.localization.Localization(__file__, 703, 22), decode_246115, *[unicode_246116], **kwargs_246117)
        
        # Assigning a type to the variable 'ps_name' (line 703)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 703, 12), 'ps_name', decode_call_result_246118)
        
        # Call to set_font(...): (line 704)
        # Processing the call arguments (line 704)
        # Getting the type of 'ps_name' (line 704)
        ps_name_246121 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 704, 26), 'ps_name', False)
        
        # Call to get_size_in_points(...): (line 704)
        # Processing the call keyword arguments (line 704)
        kwargs_246124 = {}
        # Getting the type of 'prop' (line 704)
        prop_246122 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 704, 35), 'prop', False)
        # Obtaining the member 'get_size_in_points' of a type (line 704)
        get_size_in_points_246123 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 704, 35), prop_246122, 'get_size_in_points')
        # Calling get_size_in_points(args, kwargs) (line 704)
        get_size_in_points_call_result_246125 = invoke(stypy.reporting.localization.Localization(__file__, 704, 35), get_size_in_points_246123, *[], **kwargs_246124)
        
        # Processing the call keyword arguments (line 704)
        kwargs_246126 = {}
        # Getting the type of 'self' (line 704)
        self_246119 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 704, 12), 'self', False)
        # Obtaining the member 'set_font' of a type (line 704)
        set_font_246120 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 704, 12), self_246119, 'set_font')
        # Calling set_font(args, kwargs) (line 704)
        set_font_call_result_246127 = invoke(stypy.reporting.localization.Localization(__file__, 704, 12), set_font_246120, *[ps_name_246121, get_size_in_points_call_result_246125], **kwargs_246126)
        
        
        # Assigning a Name to a Name (line 706):
        
        # Assigning a Name to a Name (line 706):
        # Getting the type of 'None' (line 706)
        None_246128 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 706, 23), 'None')
        # Assigning a type to the variable 'lastgind' (line 706)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 706, 12), 'lastgind', None_246128)
        
        # Assigning a List to a Name (line 708):
        
        # Assigning a List to a Name (line 708):
        
        # Obtaining an instance of the builtin type 'list' (line 708)
        list_246129 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 708, 20), 'list')
        # Adding type elements to the builtin type 'list' instance (line 708)
        
        # Assigning a type to the variable 'lines' (line 708)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 708, 12), 'lines', list_246129)
        
        # Assigning a Num to a Name (line 709):
        
        # Assigning a Num to a Name (line 709):
        int_246130 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 709, 20), 'int')
        # Assigning a type to the variable 'thisx' (line 709)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 709, 12), 'thisx', int_246130)
        
        # Assigning a Num to a Name (line 710):
        
        # Assigning a Num to a Name (line 710):
        int_246131 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 710, 20), 'int')
        # Assigning a type to the variable 'thisy' (line 710)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 710, 12), 'thisy', int_246131)
        
        # Getting the type of 's' (line 711)
        s_246132 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 711, 21), 's')
        # Testing the type of a for loop iterable (line 711)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 711, 12), s_246132)
        # Getting the type of the for loop variable (line 711)
        for_loop_var_246133 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 711, 12), s_246132)
        # Assigning a type to the variable 'c' (line 711)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 711, 12), 'c', for_loop_var_246133)
        # SSA begins for a for statement (line 711)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 712):
        
        # Assigning a Call to a Name (line 712):
        
        # Call to ord(...): (line 712)
        # Processing the call arguments (line 712)
        # Getting the type of 'c' (line 712)
        c_246135 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 712, 28), 'c', False)
        # Processing the call keyword arguments (line 712)
        kwargs_246136 = {}
        # Getting the type of 'ord' (line 712)
        ord_246134 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 712, 24), 'ord', False)
        # Calling ord(args, kwargs) (line 712)
        ord_call_result_246137 = invoke(stypy.reporting.localization.Localization(__file__, 712, 24), ord_246134, *[c_246135], **kwargs_246136)
        
        # Assigning a type to the variable 'ccode' (line 712)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 712, 16), 'ccode', ord_call_result_246137)
        
        # Assigning a Call to a Name (line 713):
        
        # Assigning a Call to a Name (line 713):
        
        # Call to get_char_index(...): (line 713)
        # Processing the call arguments (line 713)
        # Getting the type of 'ccode' (line 713)
        ccode_246140 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 713, 43), 'ccode', False)
        # Processing the call keyword arguments (line 713)
        kwargs_246141 = {}
        # Getting the type of 'font' (line 713)
        font_246138 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 713, 23), 'font', False)
        # Obtaining the member 'get_char_index' of a type (line 713)
        get_char_index_246139 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 713, 23), font_246138, 'get_char_index')
        # Calling get_char_index(args, kwargs) (line 713)
        get_char_index_call_result_246142 = invoke(stypy.reporting.localization.Localization(__file__, 713, 23), get_char_index_246139, *[ccode_246140], **kwargs_246141)
        
        # Assigning a type to the variable 'gind' (line 713)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 713, 16), 'gind', get_char_index_call_result_246142)
        
        # Type idiom detected: calculating its left and rigth part (line 714)
        # Getting the type of 'gind' (line 714)
        gind_246143 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 714, 19), 'gind')
        # Getting the type of 'None' (line 714)
        None_246144 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 714, 27), 'None')
        
        (may_be_246145, more_types_in_union_246146) = may_be_none(gind_246143, None_246144)

        if may_be_246145:

            if more_types_in_union_246146:
                # Runtime conditional SSA (line 714)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Call to a Name (line 715):
            
            # Assigning a Call to a Name (line 715):
            
            # Call to ord(...): (line 715)
            # Processing the call arguments (line 715)
            unicode_246148 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 715, 32), 'unicode', u'?')
            # Processing the call keyword arguments (line 715)
            kwargs_246149 = {}
            # Getting the type of 'ord' (line 715)
            ord_246147 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 715, 28), 'ord', False)
            # Calling ord(args, kwargs) (line 715)
            ord_call_result_246150 = invoke(stypy.reporting.localization.Localization(__file__, 715, 28), ord_246147, *[unicode_246148], **kwargs_246149)
            
            # Assigning a type to the variable 'ccode' (line 715)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 715, 20), 'ccode', ord_call_result_246150)
            
            # Assigning a Str to a Name (line 716):
            
            # Assigning a Str to a Name (line 716):
            unicode_246151 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 716, 27), 'unicode', u'.notdef')
            # Assigning a type to the variable 'name' (line 716)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 716, 20), 'name', unicode_246151)
            
            # Assigning a Num to a Name (line 717):
            
            # Assigning a Num to a Name (line 717):
            int_246152 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 717, 27), 'int')
            # Assigning a type to the variable 'gind' (line 717)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 717, 20), 'gind', int_246152)

            if more_types_in_union_246146:
                # Runtime conditional SSA for else branch (line 714)
                module_type_store.open_ssa_branch('idiom else')



        if ((not may_be_246145) or more_types_in_union_246146):
            
            # Assigning a Call to a Name (line 719):
            
            # Assigning a Call to a Name (line 719):
            
            # Call to get_glyph_name(...): (line 719)
            # Processing the call arguments (line 719)
            # Getting the type of 'gind' (line 719)
            gind_246155 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 719, 47), 'gind', False)
            # Processing the call keyword arguments (line 719)
            kwargs_246156 = {}
            # Getting the type of 'font' (line 719)
            font_246153 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 719, 27), 'font', False)
            # Obtaining the member 'get_glyph_name' of a type (line 719)
            get_glyph_name_246154 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 719, 27), font_246153, 'get_glyph_name')
            # Calling get_glyph_name(args, kwargs) (line 719)
            get_glyph_name_call_result_246157 = invoke(stypy.reporting.localization.Localization(__file__, 719, 27), get_glyph_name_246154, *[gind_246155], **kwargs_246156)
            
            # Assigning a type to the variable 'name' (line 719)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 719, 20), 'name', get_glyph_name_call_result_246157)

            if (may_be_246145 and more_types_in_union_246146):
                # SSA join for if statement (line 714)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Call to a Name (line 720):
        
        # Assigning a Call to a Name (line 720):
        
        # Call to load_char(...): (line 720)
        # Processing the call arguments (line 720)
        # Getting the type of 'ccode' (line 720)
        ccode_246160 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 720, 39), 'ccode', False)
        # Processing the call keyword arguments (line 720)
        # Getting the type of 'LOAD_NO_HINTING' (line 720)
        LOAD_NO_HINTING_246161 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 720, 52), 'LOAD_NO_HINTING', False)
        keyword_246162 = LOAD_NO_HINTING_246161
        kwargs_246163 = {'flags': keyword_246162}
        # Getting the type of 'font' (line 720)
        font_246158 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 720, 24), 'font', False)
        # Obtaining the member 'load_char' of a type (line 720)
        load_char_246159 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 720, 24), font_246158, 'load_char')
        # Calling load_char(args, kwargs) (line 720)
        load_char_call_result_246164 = invoke(stypy.reporting.localization.Localization(__file__, 720, 24), load_char_246159, *[ccode_246160], **kwargs_246163)
        
        # Assigning a type to the variable 'glyph' (line 720)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 720, 16), 'glyph', load_char_call_result_246164)
        
        # Type idiom detected: calculating its left and rigth part (line 722)
        # Getting the type of 'lastgind' (line 722)
        lastgind_246165 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 16), 'lastgind')
        # Getting the type of 'None' (line 722)
        None_246166 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 35), 'None')
        
        (may_be_246167, more_types_in_union_246168) = may_not_be_none(lastgind_246165, None_246166)

        if may_be_246167:

            if more_types_in_union_246168:
                # Runtime conditional SSA (line 722)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Call to a Name (line 723):
            
            # Assigning a Call to a Name (line 723):
            
            # Call to get_kerning(...): (line 723)
            # Processing the call arguments (line 723)
            # Getting the type of 'lastgind' (line 723)
            lastgind_246171 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 723, 44), 'lastgind', False)
            # Getting the type of 'gind' (line 723)
            gind_246172 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 723, 54), 'gind', False)
            # Getting the type of 'KERNING_DEFAULT' (line 723)
            KERNING_DEFAULT_246173 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 723, 60), 'KERNING_DEFAULT', False)
            # Processing the call keyword arguments (line 723)
            kwargs_246174 = {}
            # Getting the type of 'font' (line 723)
            font_246169 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 723, 27), 'font', False)
            # Obtaining the member 'get_kerning' of a type (line 723)
            get_kerning_246170 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 723, 27), font_246169, 'get_kerning')
            # Calling get_kerning(args, kwargs) (line 723)
            get_kerning_call_result_246175 = invoke(stypy.reporting.localization.Localization(__file__, 723, 27), get_kerning_246170, *[lastgind_246171, gind_246172, KERNING_DEFAULT_246173], **kwargs_246174)
            
            # Assigning a type to the variable 'kern' (line 723)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 723, 20), 'kern', get_kerning_call_result_246175)

            if more_types_in_union_246168:
                # Runtime conditional SSA for else branch (line 722)
                module_type_store.open_ssa_branch('idiom else')



        if ((not may_be_246167) or more_types_in_union_246168):
            
            # Assigning a Num to a Name (line 725):
            
            # Assigning a Num to a Name (line 725):
            int_246176 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 725, 27), 'int')
            # Assigning a type to the variable 'kern' (line 725)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 725, 20), 'kern', int_246176)

            if (may_be_246167 and more_types_in_union_246168):
                # SSA join for if statement (line 722)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Name to a Name (line 726):
        
        # Assigning a Name to a Name (line 726):
        # Getting the type of 'gind' (line 726)
        gind_246177 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 726, 27), 'gind')
        # Assigning a type to the variable 'lastgind' (line 726)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 726, 16), 'lastgind', gind_246177)
        
        # Getting the type of 'thisx' (line 727)
        thisx_246178 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 727, 16), 'thisx')
        # Getting the type of 'kern' (line 727)
        kern_246179 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 727, 25), 'kern')
        float_246180 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 727, 30), 'float')
        # Applying the binary operator 'div' (line 727)
        result_div_246181 = python_operator(stypy.reporting.localization.Localization(__file__, 727, 25), 'div', kern_246179, float_246180)
        
        # Applying the binary operator '+=' (line 727)
        result_iadd_246182 = python_operator(stypy.reporting.localization.Localization(__file__, 727, 16), '+=', thisx_246178, result_div_246181)
        # Assigning a type to the variable 'thisx' (line 727)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 727, 16), 'thisx', result_iadd_246182)
        
        
        # Call to append(...): (line 729)
        # Processing the call arguments (line 729)
        unicode_246185 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 729, 29), 'unicode', u'%f %f m /%s glyphshow')
        
        # Obtaining an instance of the builtin type 'tuple' (line 729)
        tuple_246186 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 729, 54), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 729)
        # Adding element type (line 729)
        # Getting the type of 'thisx' (line 729)
        thisx_246187 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 54), 'thisx', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 729, 54), tuple_246186, thisx_246187)
        # Adding element type (line 729)
        # Getting the type of 'thisy' (line 729)
        thisy_246188 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 61), 'thisy', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 729, 54), tuple_246186, thisy_246188)
        # Adding element type (line 729)
        # Getting the type of 'name' (line 729)
        name_246189 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 68), 'name', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 729, 54), tuple_246186, name_246189)
        
        # Applying the binary operator '%' (line 729)
        result_mod_246190 = python_operator(stypy.reporting.localization.Localization(__file__, 729, 29), '%', unicode_246185, tuple_246186)
        
        # Processing the call keyword arguments (line 729)
        kwargs_246191 = {}
        # Getting the type of 'lines' (line 729)
        lines_246183 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 16), 'lines', False)
        # Obtaining the member 'append' of a type (line 729)
        append_246184 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 729, 16), lines_246183, 'append')
        # Calling append(args, kwargs) (line 729)
        append_call_result_246192 = invoke(stypy.reporting.localization.Localization(__file__, 729, 16), append_246184, *[result_mod_246190], **kwargs_246191)
        
        
        # Getting the type of 'thisx' (line 730)
        thisx_246193 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 730, 16), 'thisx')
        # Getting the type of 'glyph' (line 730)
        glyph_246194 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 730, 25), 'glyph')
        # Obtaining the member 'linearHoriAdvance' of a type (line 730)
        linearHoriAdvance_246195 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 730, 25), glyph_246194, 'linearHoriAdvance')
        float_246196 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 730, 49), 'float')
        # Applying the binary operator 'div' (line 730)
        result_div_246197 = python_operator(stypy.reporting.localization.Localization(__file__, 730, 25), 'div', linearHoriAdvance_246195, float_246196)
        
        # Applying the binary operator '+=' (line 730)
        result_iadd_246198 = python_operator(stypy.reporting.localization.Localization(__file__, 730, 16), '+=', thisx_246193, result_div_246197)
        # Assigning a type to the variable 'thisx' (line 730)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 730, 16), 'thisx', result_iadd_246198)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 733):
        
        # Assigning a Call to a Name (line 733):
        
        # Call to join(...): (line 733)
        # Processing the call arguments (line 733)
        # Getting the type of 'lines' (line 733)
        lines_246201 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 733, 32), 'lines', False)
        # Processing the call keyword arguments (line 733)
        kwargs_246202 = {}
        unicode_246199 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 733, 22), 'unicode', u'\n')
        # Obtaining the member 'join' of a type (line 733)
        join_246200 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 733, 22), unicode_246199, 'join')
        # Calling join(args, kwargs) (line 733)
        join_call_result_246203 = invoke(stypy.reporting.localization.Localization(__file__, 733, 22), join_246200, *[lines_246201], **kwargs_246202)
        
        # Assigning a type to the variable 'thetext' (line 733)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 733, 12), 'thetext', join_call_result_246203)
        
        # Assigning a BinOp to a Name (line 734):
        
        # Assigning a BinOp to a Name (line 734):
        unicode_246204 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 739, (-1)), 'unicode', u'gsave\n%(x)f %(y)f translate\n%(angle)f rotate\n%(thetext)s\ngrestore\n')
        
        # Call to locals(...): (line 739)
        # Processing the call keyword arguments (line 739)
        kwargs_246206 = {}
        # Getting the type of 'locals' (line 739)
        locals_246205 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 739, 6), 'locals', False)
        # Calling locals(args, kwargs) (line 739)
        locals_call_result_246207 = invoke(stypy.reporting.localization.Localization(__file__, 739, 6), locals_246205, *[], **kwargs_246206)
        
        # Applying the binary operator '%' (line 739)
        result_mod_246208 = python_operator(stypy.reporting.localization.Localization(__file__, 739, (-1)), '%', unicode_246204, locals_call_result_246207)
        
        # Assigning a type to the variable 'ps' (line 734)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 734, 12), 'ps', result_mod_246208)
        
        # Call to write(...): (line 740)
        # Processing the call arguments (line 740)
        # Getting the type of 'ps' (line 740)
        ps_246212 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 740, 33), 'ps', False)
        # Processing the call keyword arguments (line 740)
        kwargs_246213 = {}
        # Getting the type of 'self' (line 740)
        self_246209 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 740, 12), 'self', False)
        # Obtaining the member '_pswriter' of a type (line 740)
        _pswriter_246210 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 740, 12), self_246209, '_pswriter')
        # Obtaining the member 'write' of a type (line 740)
        write_246211 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 740, 12), _pswriter_246210, 'write')
        # Calling write(args, kwargs) (line 740)
        write_call_result_246214 = invoke(stypy.reporting.localization.Localization(__file__, 740, 12), write_246211, *[ps_246212], **kwargs_246213)
        
        # SSA join for if statement (line 648)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 645)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 642)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'draw_text(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'draw_text' in the type store
        # Getting the type of 'stypy_return_type' (line 633)
        stypy_return_type_246215 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 633, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_246215)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'draw_text'
        return stypy_return_type_246215


    @norecursion
    def new_gc(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'new_gc'
        module_type_store = module_type_store.open_function_context('new_gc', 742, 4, False)
        # Assigning a type to the variable 'self' (line 743)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 743, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererPS.new_gc.__dict__.__setitem__('stypy_localization', localization)
        RendererPS.new_gc.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererPS.new_gc.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererPS.new_gc.__dict__.__setitem__('stypy_function_name', 'RendererPS.new_gc')
        RendererPS.new_gc.__dict__.__setitem__('stypy_param_names_list', [])
        RendererPS.new_gc.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererPS.new_gc.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererPS.new_gc.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererPS.new_gc.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererPS.new_gc.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererPS.new_gc.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererPS.new_gc', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'new_gc', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'new_gc(...)' code ##################

        
        # Call to GraphicsContextPS(...): (line 743)
        # Processing the call keyword arguments (line 743)
        kwargs_246217 = {}
        # Getting the type of 'GraphicsContextPS' (line 743)
        GraphicsContextPS_246216 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 743, 15), 'GraphicsContextPS', False)
        # Calling GraphicsContextPS(args, kwargs) (line 743)
        GraphicsContextPS_call_result_246218 = invoke(stypy.reporting.localization.Localization(__file__, 743, 15), GraphicsContextPS_246216, *[], **kwargs_246217)
        
        # Assigning a type to the variable 'stypy_return_type' (line 743)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 743, 8), 'stypy_return_type', GraphicsContextPS_call_result_246218)
        
        # ################# End of 'new_gc(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'new_gc' in the type store
        # Getting the type of 'stypy_return_type' (line 742)
        stypy_return_type_246219 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 742, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_246219)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'new_gc'
        return stypy_return_type_246219


    @norecursion
    def draw_mathtext(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'draw_mathtext'
        module_type_store = module_type_store.open_function_context('draw_mathtext', 745, 4, False)
        # Assigning a type to the variable 'self' (line 746)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 746, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererPS.draw_mathtext.__dict__.__setitem__('stypy_localization', localization)
        RendererPS.draw_mathtext.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererPS.draw_mathtext.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererPS.draw_mathtext.__dict__.__setitem__('stypy_function_name', 'RendererPS.draw_mathtext')
        RendererPS.draw_mathtext.__dict__.__setitem__('stypy_param_names_list', ['gc', 'x', 'y', 's', 'prop', 'angle'])
        RendererPS.draw_mathtext.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererPS.draw_mathtext.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererPS.draw_mathtext.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererPS.draw_mathtext.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererPS.draw_mathtext.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererPS.draw_mathtext.__dict__.__setitem__('stypy_declared_arg_number', 7)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererPS.draw_mathtext', ['gc', 'x', 'y', 's', 'prop', 'angle'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'draw_mathtext', localization, ['gc', 'x', 'y', 's', 'prop', 'angle'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'draw_mathtext(...)' code ##################

        unicode_246220 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 749, (-1)), 'unicode', u'\n        Draw the math text using matplotlib.mathtext\n        ')
        
        # Getting the type of 'debugPS' (line 750)
        debugPS_246221 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 750, 11), 'debugPS')
        # Testing the type of an if condition (line 750)
        if_condition_246222 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 750, 8), debugPS_246221)
        # Assigning a type to the variable 'if_condition_246222' (line 750)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 750, 8), 'if_condition_246222', if_condition_246222)
        # SSA begins for if statement (line 750)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to write(...): (line 751)
        # Processing the call arguments (line 751)
        unicode_246226 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 751, 33), 'unicode', u'% mathtext\n')
        # Processing the call keyword arguments (line 751)
        kwargs_246227 = {}
        # Getting the type of 'self' (line 751)
        self_246223 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 751, 12), 'self', False)
        # Obtaining the member '_pswriter' of a type (line 751)
        _pswriter_246224 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 751, 12), self_246223, '_pswriter')
        # Obtaining the member 'write' of a type (line 751)
        write_246225 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 751, 12), _pswriter_246224, 'write')
        # Calling write(args, kwargs) (line 751)
        write_call_result_246228 = invoke(stypy.reporting.localization.Localization(__file__, 751, 12), write_246225, *[unicode_246226], **kwargs_246227)
        
        # SSA join for if statement (line 750)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Tuple (line 753):
        
        # Assigning a Call to a Name:
        
        # Call to parse(...): (line 754)
        # Processing the call arguments (line 754)
        # Getting the type of 's' (line 754)
        s_246232 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 754, 39), 's', False)
        int_246233 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 754, 42), 'int')
        # Getting the type of 'prop' (line 754)
        prop_246234 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 754, 46), 'prop', False)
        # Processing the call keyword arguments (line 754)
        kwargs_246235 = {}
        # Getting the type of 'self' (line 754)
        self_246229 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 754, 12), 'self', False)
        # Obtaining the member 'mathtext_parser' of a type (line 754)
        mathtext_parser_246230 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 754, 12), self_246229, 'mathtext_parser')
        # Obtaining the member 'parse' of a type (line 754)
        parse_246231 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 754, 12), mathtext_parser_246230, 'parse')
        # Calling parse(args, kwargs) (line 754)
        parse_call_result_246236 = invoke(stypy.reporting.localization.Localization(__file__, 754, 12), parse_246231, *[s_246232, int_246233, prop_246234], **kwargs_246235)
        
        # Assigning a type to the variable 'call_assignment_243738' (line 753)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 753, 8), 'call_assignment_243738', parse_call_result_246236)
        
        # Assigning a Call to a Name (line 753):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_246239 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 753, 8), 'int')
        # Processing the call keyword arguments
        kwargs_246240 = {}
        # Getting the type of 'call_assignment_243738' (line 753)
        call_assignment_243738_246237 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 753, 8), 'call_assignment_243738', False)
        # Obtaining the member '__getitem__' of a type (line 753)
        getitem___246238 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 753, 8), call_assignment_243738_246237, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_246241 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___246238, *[int_246239], **kwargs_246240)
        
        # Assigning a type to the variable 'call_assignment_243739' (line 753)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 753, 8), 'call_assignment_243739', getitem___call_result_246241)
        
        # Assigning a Name to a Name (line 753):
        # Getting the type of 'call_assignment_243739' (line 753)
        call_assignment_243739_246242 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 753, 8), 'call_assignment_243739')
        # Assigning a type to the variable 'width' (line 753)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 753, 8), 'width', call_assignment_243739_246242)
        
        # Assigning a Call to a Name (line 753):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_246245 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 753, 8), 'int')
        # Processing the call keyword arguments
        kwargs_246246 = {}
        # Getting the type of 'call_assignment_243738' (line 753)
        call_assignment_243738_246243 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 753, 8), 'call_assignment_243738', False)
        # Obtaining the member '__getitem__' of a type (line 753)
        getitem___246244 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 753, 8), call_assignment_243738_246243, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_246247 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___246244, *[int_246245], **kwargs_246246)
        
        # Assigning a type to the variable 'call_assignment_243740' (line 753)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 753, 8), 'call_assignment_243740', getitem___call_result_246247)
        
        # Assigning a Name to a Name (line 753):
        # Getting the type of 'call_assignment_243740' (line 753)
        call_assignment_243740_246248 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 753, 8), 'call_assignment_243740')
        # Assigning a type to the variable 'height' (line 753)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 753, 15), 'height', call_assignment_243740_246248)
        
        # Assigning a Call to a Name (line 753):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_246251 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 753, 8), 'int')
        # Processing the call keyword arguments
        kwargs_246252 = {}
        # Getting the type of 'call_assignment_243738' (line 753)
        call_assignment_243738_246249 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 753, 8), 'call_assignment_243738', False)
        # Obtaining the member '__getitem__' of a type (line 753)
        getitem___246250 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 753, 8), call_assignment_243738_246249, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_246253 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___246250, *[int_246251], **kwargs_246252)
        
        # Assigning a type to the variable 'call_assignment_243741' (line 753)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 753, 8), 'call_assignment_243741', getitem___call_result_246253)
        
        # Assigning a Name to a Name (line 753):
        # Getting the type of 'call_assignment_243741' (line 753)
        call_assignment_243741_246254 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 753, 8), 'call_assignment_243741')
        # Assigning a type to the variable 'descent' (line 753)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 753, 23), 'descent', call_assignment_243741_246254)
        
        # Assigning a Call to a Name (line 753):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_246257 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 753, 8), 'int')
        # Processing the call keyword arguments
        kwargs_246258 = {}
        # Getting the type of 'call_assignment_243738' (line 753)
        call_assignment_243738_246255 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 753, 8), 'call_assignment_243738', False)
        # Obtaining the member '__getitem__' of a type (line 753)
        getitem___246256 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 753, 8), call_assignment_243738_246255, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_246259 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___246256, *[int_246257], **kwargs_246258)
        
        # Assigning a type to the variable 'call_assignment_243742' (line 753)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 753, 8), 'call_assignment_243742', getitem___call_result_246259)
        
        # Assigning a Name to a Name (line 753):
        # Getting the type of 'call_assignment_243742' (line 753)
        call_assignment_243742_246260 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 753, 8), 'call_assignment_243742')
        # Assigning a type to the variable 'pswriter' (line 753)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 753, 32), 'pswriter', call_assignment_243742_246260)
        
        # Assigning a Call to a Name (line 753):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_246263 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 753, 8), 'int')
        # Processing the call keyword arguments
        kwargs_246264 = {}
        # Getting the type of 'call_assignment_243738' (line 753)
        call_assignment_243738_246261 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 753, 8), 'call_assignment_243738', False)
        # Obtaining the member '__getitem__' of a type (line 753)
        getitem___246262 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 753, 8), call_assignment_243738_246261, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_246265 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___246262, *[int_246263], **kwargs_246264)
        
        # Assigning a type to the variable 'call_assignment_243743' (line 753)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 753, 8), 'call_assignment_243743', getitem___call_result_246265)
        
        # Assigning a Name to a Name (line 753):
        # Getting the type of 'call_assignment_243743' (line 753)
        call_assignment_243743_246266 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 753, 8), 'call_assignment_243743')
        # Assigning a type to the variable 'used_characters' (line 753)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 753, 42), 'used_characters', call_assignment_243743_246266)
        
        # Call to merge_used_characters(...): (line 755)
        # Processing the call arguments (line 755)
        # Getting the type of 'used_characters' (line 755)
        used_characters_246269 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 755, 35), 'used_characters', False)
        # Processing the call keyword arguments (line 755)
        kwargs_246270 = {}
        # Getting the type of 'self' (line 755)
        self_246267 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 755, 8), 'self', False)
        # Obtaining the member 'merge_used_characters' of a type (line 755)
        merge_used_characters_246268 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 755, 8), self_246267, 'merge_used_characters')
        # Calling merge_used_characters(args, kwargs) (line 755)
        merge_used_characters_call_result_246271 = invoke(stypy.reporting.localization.Localization(__file__, 755, 8), merge_used_characters_246268, *[used_characters_246269], **kwargs_246270)
        
        
        # Call to set_color(...): (line 756)
        
        # Call to get_rgb(...): (line 756)
        # Processing the call keyword arguments (line 756)
        kwargs_246276 = {}
        # Getting the type of 'gc' (line 756)
        gc_246274 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 756, 24), 'gc', False)
        # Obtaining the member 'get_rgb' of a type (line 756)
        get_rgb_246275 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 756, 24), gc_246274, 'get_rgb')
        # Calling get_rgb(args, kwargs) (line 756)
        get_rgb_call_result_246277 = invoke(stypy.reporting.localization.Localization(__file__, 756, 24), get_rgb_246275, *[], **kwargs_246276)
        
        # Processing the call keyword arguments (line 756)
        kwargs_246278 = {}
        # Getting the type of 'self' (line 756)
        self_246272 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 756, 8), 'self', False)
        # Obtaining the member 'set_color' of a type (line 756)
        set_color_246273 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 756, 8), self_246272, 'set_color')
        # Calling set_color(args, kwargs) (line 756)
        set_color_call_result_246279 = invoke(stypy.reporting.localization.Localization(__file__, 756, 8), set_color_246273, *[get_rgb_call_result_246277], **kwargs_246278)
        
        
        # Assigning a Call to a Name (line 757):
        
        # Assigning a Call to a Name (line 757):
        
        # Call to getvalue(...): (line 757)
        # Processing the call keyword arguments (line 757)
        kwargs_246282 = {}
        # Getting the type of 'pswriter' (line 757)
        pswriter_246280 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 757, 18), 'pswriter', False)
        # Obtaining the member 'getvalue' of a type (line 757)
        getvalue_246281 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 757, 18), pswriter_246280, 'getvalue')
        # Calling getvalue(args, kwargs) (line 757)
        getvalue_call_result_246283 = invoke(stypy.reporting.localization.Localization(__file__, 757, 18), getvalue_246281, *[], **kwargs_246282)
        
        # Assigning a type to the variable 'thetext' (line 757)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 757, 8), 'thetext', getvalue_call_result_246283)
        
        # Assigning a BinOp to a Name (line 758):
        
        # Assigning a BinOp to a Name (line 758):
        unicode_246284 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 763, (-1)), 'unicode', u'gsave\n%(x)f %(y)f translate\n%(angle)f rotate\n%(thetext)s\ngrestore\n')
        
        # Call to locals(...): (line 763)
        # Processing the call keyword arguments (line 763)
        kwargs_246286 = {}
        # Getting the type of 'locals' (line 763)
        locals_246285 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 763, 6), 'locals', False)
        # Calling locals(args, kwargs) (line 763)
        locals_call_result_246287 = invoke(stypy.reporting.localization.Localization(__file__, 763, 6), locals_246285, *[], **kwargs_246286)
        
        # Applying the binary operator '%' (line 763)
        result_mod_246288 = python_operator(stypy.reporting.localization.Localization(__file__, 763, (-1)), '%', unicode_246284, locals_call_result_246287)
        
        # Assigning a type to the variable 'ps' (line 758)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 758, 8), 'ps', result_mod_246288)
        
        # Call to write(...): (line 764)
        # Processing the call arguments (line 764)
        # Getting the type of 'ps' (line 764)
        ps_246292 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 764, 29), 'ps', False)
        # Processing the call keyword arguments (line 764)
        kwargs_246293 = {}
        # Getting the type of 'self' (line 764)
        self_246289 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 764, 8), 'self', False)
        # Obtaining the member '_pswriter' of a type (line 764)
        _pswriter_246290 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 764, 8), self_246289, '_pswriter')
        # Obtaining the member 'write' of a type (line 764)
        write_246291 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 764, 8), _pswriter_246290, 'write')
        # Calling write(args, kwargs) (line 764)
        write_call_result_246294 = invoke(stypy.reporting.localization.Localization(__file__, 764, 8), write_246291, *[ps_246292], **kwargs_246293)
        
        
        # ################# End of 'draw_mathtext(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'draw_mathtext' in the type store
        # Getting the type of 'stypy_return_type' (line 745)
        stypy_return_type_246295 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 745, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_246295)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'draw_mathtext'
        return stypy_return_type_246295


    @norecursion
    def draw_gouraud_triangle(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'draw_gouraud_triangle'
        module_type_store = module_type_store.open_function_context('draw_gouraud_triangle', 766, 4, False)
        # Assigning a type to the variable 'self' (line 767)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 767, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererPS.draw_gouraud_triangle.__dict__.__setitem__('stypy_localization', localization)
        RendererPS.draw_gouraud_triangle.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererPS.draw_gouraud_triangle.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererPS.draw_gouraud_triangle.__dict__.__setitem__('stypy_function_name', 'RendererPS.draw_gouraud_triangle')
        RendererPS.draw_gouraud_triangle.__dict__.__setitem__('stypy_param_names_list', ['gc', 'points', 'colors', 'trans'])
        RendererPS.draw_gouraud_triangle.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererPS.draw_gouraud_triangle.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererPS.draw_gouraud_triangle.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererPS.draw_gouraud_triangle.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererPS.draw_gouraud_triangle.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererPS.draw_gouraud_triangle.__dict__.__setitem__('stypy_declared_arg_number', 5)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererPS.draw_gouraud_triangle', ['gc', 'points', 'colors', 'trans'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'draw_gouraud_triangle', localization, ['gc', 'points', 'colors', 'trans'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'draw_gouraud_triangle(...)' code ##################

        
        # Call to draw_gouraud_triangles(...): (line 767)
        # Processing the call arguments (line 767)
        # Getting the type of 'gc' (line 767)
        gc_246298 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 767, 36), 'gc', False)
        
        # Call to reshape(...): (line 767)
        # Processing the call arguments (line 767)
        
        # Obtaining an instance of the builtin type 'tuple' (line 767)
        tuple_246301 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 767, 56), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 767)
        # Adding element type (line 767)
        int_246302 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 767, 56), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 767, 56), tuple_246301, int_246302)
        # Adding element type (line 767)
        int_246303 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 767, 59), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 767, 56), tuple_246301, int_246303)
        # Adding element type (line 767)
        int_246304 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 767, 62), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 767, 56), tuple_246301, int_246304)
        
        # Processing the call keyword arguments (line 767)
        kwargs_246305 = {}
        # Getting the type of 'points' (line 767)
        points_246299 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 767, 40), 'points', False)
        # Obtaining the member 'reshape' of a type (line 767)
        reshape_246300 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 767, 40), points_246299, 'reshape')
        # Calling reshape(args, kwargs) (line 767)
        reshape_call_result_246306 = invoke(stypy.reporting.localization.Localization(__file__, 767, 40), reshape_246300, *[tuple_246301], **kwargs_246305)
        
        
        # Call to reshape(...): (line 768)
        # Processing the call arguments (line 768)
        
        # Obtaining an instance of the builtin type 'tuple' (line 768)
        tuple_246309 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 768, 52), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 768)
        # Adding element type (line 768)
        int_246310 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 768, 52), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 768, 52), tuple_246309, int_246310)
        # Adding element type (line 768)
        int_246311 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 768, 55), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 768, 52), tuple_246309, int_246311)
        # Adding element type (line 768)
        int_246312 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 768, 58), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 768, 52), tuple_246309, int_246312)
        
        # Processing the call keyword arguments (line 768)
        kwargs_246313 = {}
        # Getting the type of 'colors' (line 768)
        colors_246307 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 768, 36), 'colors', False)
        # Obtaining the member 'reshape' of a type (line 768)
        reshape_246308 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 768, 36), colors_246307, 'reshape')
        # Calling reshape(args, kwargs) (line 768)
        reshape_call_result_246314 = invoke(stypy.reporting.localization.Localization(__file__, 768, 36), reshape_246308, *[tuple_246309], **kwargs_246313)
        
        # Getting the type of 'trans' (line 768)
        trans_246315 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 768, 63), 'trans', False)
        # Processing the call keyword arguments (line 767)
        kwargs_246316 = {}
        # Getting the type of 'self' (line 767)
        self_246296 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 767, 8), 'self', False)
        # Obtaining the member 'draw_gouraud_triangles' of a type (line 767)
        draw_gouraud_triangles_246297 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 767, 8), self_246296, 'draw_gouraud_triangles')
        # Calling draw_gouraud_triangles(args, kwargs) (line 767)
        draw_gouraud_triangles_call_result_246317 = invoke(stypy.reporting.localization.Localization(__file__, 767, 8), draw_gouraud_triangles_246297, *[gc_246298, reshape_call_result_246306, reshape_call_result_246314, trans_246315], **kwargs_246316)
        
        
        # ################# End of 'draw_gouraud_triangle(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'draw_gouraud_triangle' in the type store
        # Getting the type of 'stypy_return_type' (line 766)
        stypy_return_type_246318 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 766, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_246318)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'draw_gouraud_triangle'
        return stypy_return_type_246318


    @norecursion
    def draw_gouraud_triangles(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'draw_gouraud_triangles'
        module_type_store = module_type_store.open_function_context('draw_gouraud_triangles', 770, 4, False)
        # Assigning a type to the variable 'self' (line 771)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 771, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererPS.draw_gouraud_triangles.__dict__.__setitem__('stypy_localization', localization)
        RendererPS.draw_gouraud_triangles.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererPS.draw_gouraud_triangles.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererPS.draw_gouraud_triangles.__dict__.__setitem__('stypy_function_name', 'RendererPS.draw_gouraud_triangles')
        RendererPS.draw_gouraud_triangles.__dict__.__setitem__('stypy_param_names_list', ['gc', 'points', 'colors', 'trans'])
        RendererPS.draw_gouraud_triangles.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererPS.draw_gouraud_triangles.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererPS.draw_gouraud_triangles.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererPS.draw_gouraud_triangles.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererPS.draw_gouraud_triangles.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererPS.draw_gouraud_triangles.__dict__.__setitem__('stypy_declared_arg_number', 5)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererPS.draw_gouraud_triangles', ['gc', 'points', 'colors', 'trans'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'draw_gouraud_triangles', localization, ['gc', 'points', 'colors', 'trans'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'draw_gouraud_triangles(...)' code ##################

        # Evaluating assert statement condition
        
        
        # Call to len(...): (line 771)
        # Processing the call arguments (line 771)
        # Getting the type of 'points' (line 771)
        points_246320 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 771, 19), 'points', False)
        # Processing the call keyword arguments (line 771)
        kwargs_246321 = {}
        # Getting the type of 'len' (line 771)
        len_246319 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 771, 15), 'len', False)
        # Calling len(args, kwargs) (line 771)
        len_call_result_246322 = invoke(stypy.reporting.localization.Localization(__file__, 771, 15), len_246319, *[points_246320], **kwargs_246321)
        
        
        # Call to len(...): (line 771)
        # Processing the call arguments (line 771)
        # Getting the type of 'colors' (line 771)
        colors_246324 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 771, 34), 'colors', False)
        # Processing the call keyword arguments (line 771)
        kwargs_246325 = {}
        # Getting the type of 'len' (line 771)
        len_246323 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 771, 30), 'len', False)
        # Calling len(args, kwargs) (line 771)
        len_call_result_246326 = invoke(stypy.reporting.localization.Localization(__file__, 771, 30), len_246323, *[colors_246324], **kwargs_246325)
        
        # Applying the binary operator '==' (line 771)
        result_eq_246327 = python_operator(stypy.reporting.localization.Localization(__file__, 771, 15), '==', len_call_result_246322, len_call_result_246326)
        
        # Evaluating assert statement condition
        
        # Getting the type of 'points' (line 772)
        points_246328 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 772, 15), 'points')
        # Obtaining the member 'ndim' of a type (line 772)
        ndim_246329 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 772, 15), points_246328, 'ndim')
        int_246330 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 772, 30), 'int')
        # Applying the binary operator '==' (line 772)
        result_eq_246331 = python_operator(stypy.reporting.localization.Localization(__file__, 772, 15), '==', ndim_246329, int_246330)
        
        # Evaluating assert statement condition
        
        
        # Obtaining the type of the subscript
        int_246332 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 773, 28), 'int')
        # Getting the type of 'points' (line 773)
        points_246333 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 773, 15), 'points')
        # Obtaining the member 'shape' of a type (line 773)
        shape_246334 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 773, 15), points_246333, 'shape')
        # Obtaining the member '__getitem__' of a type (line 773)
        getitem___246335 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 773, 15), shape_246334, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 773)
        subscript_call_result_246336 = invoke(stypy.reporting.localization.Localization(__file__, 773, 15), getitem___246335, int_246332)
        
        int_246337 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 773, 34), 'int')
        # Applying the binary operator '==' (line 773)
        result_eq_246338 = python_operator(stypy.reporting.localization.Localization(__file__, 773, 15), '==', subscript_call_result_246336, int_246337)
        
        # Evaluating assert statement condition
        
        
        # Obtaining the type of the subscript
        int_246339 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 774, 28), 'int')
        # Getting the type of 'points' (line 774)
        points_246340 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 774, 15), 'points')
        # Obtaining the member 'shape' of a type (line 774)
        shape_246341 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 774, 15), points_246340, 'shape')
        # Obtaining the member '__getitem__' of a type (line 774)
        getitem___246342 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 774, 15), shape_246341, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 774)
        subscript_call_result_246343 = invoke(stypy.reporting.localization.Localization(__file__, 774, 15), getitem___246342, int_246339)
        
        int_246344 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 774, 34), 'int')
        # Applying the binary operator '==' (line 774)
        result_eq_246345 = python_operator(stypy.reporting.localization.Localization(__file__, 774, 15), '==', subscript_call_result_246343, int_246344)
        
        # Evaluating assert statement condition
        
        # Getting the type of 'colors' (line 775)
        colors_246346 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 775, 15), 'colors')
        # Obtaining the member 'ndim' of a type (line 775)
        ndim_246347 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 775, 15), colors_246346, 'ndim')
        int_246348 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 775, 30), 'int')
        # Applying the binary operator '==' (line 775)
        result_eq_246349 = python_operator(stypy.reporting.localization.Localization(__file__, 775, 15), '==', ndim_246347, int_246348)
        
        # Evaluating assert statement condition
        
        
        # Obtaining the type of the subscript
        int_246350 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 776, 28), 'int')
        # Getting the type of 'colors' (line 776)
        colors_246351 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 776, 15), 'colors')
        # Obtaining the member 'shape' of a type (line 776)
        shape_246352 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 776, 15), colors_246351, 'shape')
        # Obtaining the member '__getitem__' of a type (line 776)
        getitem___246353 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 776, 15), shape_246352, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 776)
        subscript_call_result_246354 = invoke(stypy.reporting.localization.Localization(__file__, 776, 15), getitem___246353, int_246350)
        
        int_246355 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 776, 34), 'int')
        # Applying the binary operator '==' (line 776)
        result_eq_246356 = python_operator(stypy.reporting.localization.Localization(__file__, 776, 15), '==', subscript_call_result_246354, int_246355)
        
        # Evaluating assert statement condition
        
        
        # Obtaining the type of the subscript
        int_246357 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 777, 28), 'int')
        # Getting the type of 'colors' (line 777)
        colors_246358 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 777, 15), 'colors')
        # Obtaining the member 'shape' of a type (line 777)
        shape_246359 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 777, 15), colors_246358, 'shape')
        # Obtaining the member '__getitem__' of a type (line 777)
        getitem___246360 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 777, 15), shape_246359, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 777)
        subscript_call_result_246361 = invoke(stypy.reporting.localization.Localization(__file__, 777, 15), getitem___246360, int_246357)
        
        int_246362 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 777, 34), 'int')
        # Applying the binary operator '==' (line 777)
        result_eq_246363 = python_operator(stypy.reporting.localization.Localization(__file__, 777, 15), '==', subscript_call_result_246361, int_246362)
        
        
        # Assigning a Attribute to a Name (line 779):
        
        # Assigning a Attribute to a Name (line 779):
        # Getting the type of 'points' (line 779)
        points_246364 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 779, 16), 'points')
        # Obtaining the member 'shape' of a type (line 779)
        shape_246365 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 779, 16), points_246364, 'shape')
        # Assigning a type to the variable 'shape' (line 779)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 779, 8), 'shape', shape_246365)
        
        # Assigning a Call to a Name (line 780):
        
        # Assigning a Call to a Name (line 780):
        
        # Call to reshape(...): (line 780)
        # Processing the call arguments (line 780)
        
        # Obtaining an instance of the builtin type 'tuple' (line 780)
        tuple_246368 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 780, 38), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 780)
        # Adding element type (line 780)
        
        # Obtaining the type of the subscript
        int_246369 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 780, 44), 'int')
        # Getting the type of 'shape' (line 780)
        shape_246370 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 780, 38), 'shape', False)
        # Obtaining the member '__getitem__' of a type (line 780)
        getitem___246371 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 780, 38), shape_246370, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 780)
        subscript_call_result_246372 = invoke(stypy.reporting.localization.Localization(__file__, 780, 38), getitem___246371, int_246369)
        
        
        # Obtaining the type of the subscript
        int_246373 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 780, 55), 'int')
        # Getting the type of 'shape' (line 780)
        shape_246374 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 780, 49), 'shape', False)
        # Obtaining the member '__getitem__' of a type (line 780)
        getitem___246375 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 780, 49), shape_246374, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 780)
        subscript_call_result_246376 = invoke(stypy.reporting.localization.Localization(__file__, 780, 49), getitem___246375, int_246373)
        
        # Applying the binary operator '*' (line 780)
        result_mul_246377 = python_operator(stypy.reporting.localization.Localization(__file__, 780, 38), '*', subscript_call_result_246372, subscript_call_result_246376)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 780, 38), tuple_246368, result_mul_246377)
        # Adding element type (line 780)
        int_246378 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 780, 59), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 780, 38), tuple_246368, int_246378)
        
        # Processing the call keyword arguments (line 780)
        kwargs_246379 = {}
        # Getting the type of 'points' (line 780)
        points_246366 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 780, 22), 'points', False)
        # Obtaining the member 'reshape' of a type (line 780)
        reshape_246367 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 780, 22), points_246366, 'reshape')
        # Calling reshape(args, kwargs) (line 780)
        reshape_call_result_246380 = invoke(stypy.reporting.localization.Localization(__file__, 780, 22), reshape_246367, *[tuple_246368], **kwargs_246379)
        
        # Assigning a type to the variable 'flat_points' (line 780)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 780, 8), 'flat_points', reshape_call_result_246380)
        
        # Assigning a Call to a Name (line 781):
        
        # Assigning a Call to a Name (line 781):
        
        # Call to transform(...): (line 781)
        # Processing the call arguments (line 781)
        # Getting the type of 'flat_points' (line 781)
        flat_points_246383 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 781, 38), 'flat_points', False)
        # Processing the call keyword arguments (line 781)
        kwargs_246384 = {}
        # Getting the type of 'trans' (line 781)
        trans_246381 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 781, 22), 'trans', False)
        # Obtaining the member 'transform' of a type (line 781)
        transform_246382 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 781, 22), trans_246381, 'transform')
        # Calling transform(args, kwargs) (line 781)
        transform_call_result_246385 = invoke(stypy.reporting.localization.Localization(__file__, 781, 22), transform_246382, *[flat_points_246383], **kwargs_246384)
        
        # Assigning a type to the variable 'flat_points' (line 781)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 781, 8), 'flat_points', transform_call_result_246385)
        
        # Assigning a Call to a Name (line 782):
        
        # Assigning a Call to a Name (line 782):
        
        # Call to reshape(...): (line 782)
        # Processing the call arguments (line 782)
        
        # Obtaining an instance of the builtin type 'tuple' (line 782)
        tuple_246388 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 782, 38), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 782)
        # Adding element type (line 782)
        
        # Obtaining the type of the subscript
        int_246389 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 782, 44), 'int')
        # Getting the type of 'shape' (line 782)
        shape_246390 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 782, 38), 'shape', False)
        # Obtaining the member '__getitem__' of a type (line 782)
        getitem___246391 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 782, 38), shape_246390, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 782)
        subscript_call_result_246392 = invoke(stypy.reporting.localization.Localization(__file__, 782, 38), getitem___246391, int_246389)
        
        
        # Obtaining the type of the subscript
        int_246393 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 782, 55), 'int')
        # Getting the type of 'shape' (line 782)
        shape_246394 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 782, 49), 'shape', False)
        # Obtaining the member '__getitem__' of a type (line 782)
        getitem___246395 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 782, 49), shape_246394, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 782)
        subscript_call_result_246396 = invoke(stypy.reporting.localization.Localization(__file__, 782, 49), getitem___246395, int_246393)
        
        # Applying the binary operator '*' (line 782)
        result_mul_246397 = python_operator(stypy.reporting.localization.Localization(__file__, 782, 38), '*', subscript_call_result_246392, subscript_call_result_246396)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 782, 38), tuple_246388, result_mul_246397)
        # Adding element type (line 782)
        int_246398 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 782, 59), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 782, 38), tuple_246388, int_246398)
        
        # Processing the call keyword arguments (line 782)
        kwargs_246399 = {}
        # Getting the type of 'colors' (line 782)
        colors_246386 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 782, 22), 'colors', False)
        # Obtaining the member 'reshape' of a type (line 782)
        reshape_246387 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 782, 22), colors_246386, 'reshape')
        # Calling reshape(args, kwargs) (line 782)
        reshape_call_result_246400 = invoke(stypy.reporting.localization.Localization(__file__, 782, 22), reshape_246387, *[tuple_246388], **kwargs_246399)
        
        # Assigning a type to the variable 'flat_colors' (line 782)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 782, 8), 'flat_colors', reshape_call_result_246400)
        
        # Assigning a BinOp to a Name (line 783):
        
        # Assigning a BinOp to a Name (line 783):
        
        # Call to min(...): (line 783)
        # Processing the call arguments (line 783)
        # Getting the type of 'flat_points' (line 783)
        flat_points_246403 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 783, 28), 'flat_points', False)
        # Processing the call keyword arguments (line 783)
        int_246404 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 783, 46), 'int')
        keyword_246405 = int_246404
        kwargs_246406 = {'axis': keyword_246405}
        # Getting the type of 'np' (line 783)
        np_246401 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 783, 21), 'np', False)
        # Obtaining the member 'min' of a type (line 783)
        min_246402 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 783, 21), np_246401, 'min')
        # Calling min(args, kwargs) (line 783)
        min_call_result_246407 = invoke(stypy.reporting.localization.Localization(__file__, 783, 21), min_246402, *[flat_points_246403], **kwargs_246406)
        
        int_246408 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 783, 52), 'int')
        int_246409 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 783, 57), 'int')
        # Applying the binary operator '<<' (line 783)
        result_lshift_246410 = python_operator(stypy.reporting.localization.Localization(__file__, 783, 52), '<<', int_246408, int_246409)
        
        # Applying the binary operator '-' (line 783)
        result_sub_246411 = python_operator(stypy.reporting.localization.Localization(__file__, 783, 21), '-', min_call_result_246407, result_lshift_246410)
        
        # Assigning a type to the variable 'points_min' (line 783)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 783, 8), 'points_min', result_sub_246411)
        
        # Assigning a BinOp to a Name (line 784):
        
        # Assigning a BinOp to a Name (line 784):
        
        # Call to max(...): (line 784)
        # Processing the call arguments (line 784)
        # Getting the type of 'flat_points' (line 784)
        flat_points_246414 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 784, 28), 'flat_points', False)
        # Processing the call keyword arguments (line 784)
        int_246415 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 784, 46), 'int')
        keyword_246416 = int_246415
        kwargs_246417 = {'axis': keyword_246416}
        # Getting the type of 'np' (line 784)
        np_246412 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 784, 21), 'np', False)
        # Obtaining the member 'max' of a type (line 784)
        max_246413 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 784, 21), np_246412, 'max')
        # Calling max(args, kwargs) (line 784)
        max_call_result_246418 = invoke(stypy.reporting.localization.Localization(__file__, 784, 21), max_246413, *[flat_points_246414], **kwargs_246417)
        
        int_246419 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 784, 52), 'int')
        int_246420 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 784, 57), 'int')
        # Applying the binary operator '<<' (line 784)
        result_lshift_246421 = python_operator(stypy.reporting.localization.Localization(__file__, 784, 52), '<<', int_246419, int_246420)
        
        # Applying the binary operator '+' (line 784)
        result_add_246422 = python_operator(stypy.reporting.localization.Localization(__file__, 784, 21), '+', max_call_result_246418, result_lshift_246421)
        
        # Assigning a type to the variable 'points_max' (line 784)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 784, 8), 'points_max', result_add_246422)
        
        # Assigning a Call to a Name (line 785):
        
        # Assigning a Call to a Name (line 785):
        
        # Call to ceil(...): (line 785)
        # Processing the call arguments (line 785)
        
        # Call to float(...): (line 785)
        # Processing the call arguments (line 785)
        int_246426 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 785, 31), 'int')
        int_246427 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 785, 36), 'int')
        # Applying the binary operator '**' (line 785)
        result_pow_246428 = python_operator(stypy.reporting.localization.Localization(__file__, 785, 31), '**', int_246426, int_246427)
        
        int_246429 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 785, 41), 'int')
        # Applying the binary operator '-' (line 785)
        result_sub_246430 = python_operator(stypy.reporting.localization.Localization(__file__, 785, 31), '-', result_pow_246428, int_246429)
        
        # Processing the call keyword arguments (line 785)
        kwargs_246431 = {}
        # Getting the type of 'float' (line 785)
        float_246425 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 785, 25), 'float', False)
        # Calling float(args, kwargs) (line 785)
        float_call_result_246432 = invoke(stypy.reporting.localization.Localization(__file__, 785, 25), float_246425, *[result_sub_246430], **kwargs_246431)
        
        # Getting the type of 'points_max' (line 785)
        points_max_246433 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 785, 47), 'points_max', False)
        # Getting the type of 'points_min' (line 785)
        points_min_246434 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 785, 60), 'points_min', False)
        # Applying the binary operator '-' (line 785)
        result_sub_246435 = python_operator(stypy.reporting.localization.Localization(__file__, 785, 47), '-', points_max_246433, points_min_246434)
        
        # Applying the binary operator 'div' (line 785)
        result_div_246436 = python_operator(stypy.reporting.localization.Localization(__file__, 785, 25), 'div', float_call_result_246432, result_sub_246435)
        
        # Processing the call keyword arguments (line 785)
        kwargs_246437 = {}
        # Getting the type of 'np' (line 785)
        np_246423 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 785, 17), 'np', False)
        # Obtaining the member 'ceil' of a type (line 785)
        ceil_246424 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 785, 17), np_246423, 'ceil')
        # Calling ceil(args, kwargs) (line 785)
        ceil_call_result_246438 = invoke(stypy.reporting.localization.Localization(__file__, 785, 17), ceil_246424, *[result_div_246436], **kwargs_246437)
        
        # Assigning a type to the variable 'factor' (line 785)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 785, 8), 'factor', ceil_call_result_246438)
        
        # Assigning a Name to a Tuple (line 787):
        
        # Assigning a Subscript to a Name (line 787):
        
        # Obtaining the type of the subscript
        int_246439 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 787, 8), 'int')
        # Getting the type of 'points_min' (line 787)
        points_min_246440 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 787, 21), 'points_min')
        # Obtaining the member '__getitem__' of a type (line 787)
        getitem___246441 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 787, 8), points_min_246440, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 787)
        subscript_call_result_246442 = invoke(stypy.reporting.localization.Localization(__file__, 787, 8), getitem___246441, int_246439)
        
        # Assigning a type to the variable 'tuple_var_assignment_243744' (line 787)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 787, 8), 'tuple_var_assignment_243744', subscript_call_result_246442)
        
        # Assigning a Subscript to a Name (line 787):
        
        # Obtaining the type of the subscript
        int_246443 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 787, 8), 'int')
        # Getting the type of 'points_min' (line 787)
        points_min_246444 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 787, 21), 'points_min')
        # Obtaining the member '__getitem__' of a type (line 787)
        getitem___246445 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 787, 8), points_min_246444, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 787)
        subscript_call_result_246446 = invoke(stypy.reporting.localization.Localization(__file__, 787, 8), getitem___246445, int_246443)
        
        # Assigning a type to the variable 'tuple_var_assignment_243745' (line 787)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 787, 8), 'tuple_var_assignment_243745', subscript_call_result_246446)
        
        # Assigning a Name to a Name (line 787):
        # Getting the type of 'tuple_var_assignment_243744' (line 787)
        tuple_var_assignment_243744_246447 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 787, 8), 'tuple_var_assignment_243744')
        # Assigning a type to the variable 'xmin' (line 787)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 787, 8), 'xmin', tuple_var_assignment_243744_246447)
        
        # Assigning a Name to a Name (line 787):
        # Getting the type of 'tuple_var_assignment_243745' (line 787)
        tuple_var_assignment_243745_246448 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 787, 8), 'tuple_var_assignment_243745')
        # Assigning a type to the variable 'ymin' (line 787)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 787, 14), 'ymin', tuple_var_assignment_243745_246448)
        
        # Assigning a Name to a Tuple (line 788):
        
        # Assigning a Subscript to a Name (line 788):
        
        # Obtaining the type of the subscript
        int_246449 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 788, 8), 'int')
        # Getting the type of 'points_max' (line 788)
        points_max_246450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 788, 21), 'points_max')
        # Obtaining the member '__getitem__' of a type (line 788)
        getitem___246451 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 788, 8), points_max_246450, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 788)
        subscript_call_result_246452 = invoke(stypy.reporting.localization.Localization(__file__, 788, 8), getitem___246451, int_246449)
        
        # Assigning a type to the variable 'tuple_var_assignment_243746' (line 788)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 788, 8), 'tuple_var_assignment_243746', subscript_call_result_246452)
        
        # Assigning a Subscript to a Name (line 788):
        
        # Obtaining the type of the subscript
        int_246453 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 788, 8), 'int')
        # Getting the type of 'points_max' (line 788)
        points_max_246454 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 788, 21), 'points_max')
        # Obtaining the member '__getitem__' of a type (line 788)
        getitem___246455 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 788, 8), points_max_246454, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 788)
        subscript_call_result_246456 = invoke(stypy.reporting.localization.Localization(__file__, 788, 8), getitem___246455, int_246453)
        
        # Assigning a type to the variable 'tuple_var_assignment_243747' (line 788)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 788, 8), 'tuple_var_assignment_243747', subscript_call_result_246456)
        
        # Assigning a Name to a Name (line 788):
        # Getting the type of 'tuple_var_assignment_243746' (line 788)
        tuple_var_assignment_243746_246457 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 788, 8), 'tuple_var_assignment_243746')
        # Assigning a type to the variable 'xmax' (line 788)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 788, 8), 'xmax', tuple_var_assignment_243746_246457)
        
        # Assigning a Name to a Name (line 788):
        # Getting the type of 'tuple_var_assignment_243747' (line 788)
        tuple_var_assignment_243747_246458 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 788, 8), 'tuple_var_assignment_243747')
        # Assigning a type to the variable 'ymax' (line 788)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 788, 14), 'ymax', tuple_var_assignment_243747_246458)
        
        # Assigning a Call to a Name (line 790):
        
        # Assigning a Call to a Name (line 790):
        
        # Call to empty(...): (line 790)
        # Processing the call arguments (line 790)
        
        # Obtaining an instance of the builtin type 'tuple' (line 791)
        tuple_246461 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 791, 13), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 791)
        # Adding element type (line 791)
        
        # Obtaining the type of the subscript
        int_246462 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 791, 19), 'int')
        # Getting the type of 'shape' (line 791)
        shape_246463 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 791, 13), 'shape', False)
        # Obtaining the member '__getitem__' of a type (line 791)
        getitem___246464 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 791, 13), shape_246463, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 791)
        subscript_call_result_246465 = invoke(stypy.reporting.localization.Localization(__file__, 791, 13), getitem___246464, int_246462)
        
        
        # Obtaining the type of the subscript
        int_246466 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 791, 30), 'int')
        # Getting the type of 'shape' (line 791)
        shape_246467 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 791, 24), 'shape', False)
        # Obtaining the member '__getitem__' of a type (line 791)
        getitem___246468 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 791, 24), shape_246467, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 791)
        subscript_call_result_246469 = invoke(stypy.reporting.localization.Localization(__file__, 791, 24), getitem___246468, int_246466)
        
        # Applying the binary operator '*' (line 791)
        result_mul_246470 = python_operator(stypy.reporting.localization.Localization(__file__, 791, 13), '*', subscript_call_result_246465, subscript_call_result_246469)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 791, 13), tuple_246461, result_mul_246470)
        
        # Processing the call keyword arguments (line 790)
        
        # Obtaining an instance of the builtin type 'list' (line 792)
        list_246471 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 792, 18), 'list')
        # Adding type elements to the builtin type 'list' instance (line 792)
        # Adding element type (line 792)
        
        # Obtaining an instance of the builtin type 'tuple' (line 792)
        tuple_246472 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 792, 20), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 792)
        # Adding element type (line 792)
        unicode_246473 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 792, 20), 'unicode', u'flags')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 792, 20), tuple_246472, unicode_246473)
        # Adding element type (line 792)
        unicode_246474 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 792, 29), 'unicode', u'u1')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 792, 20), tuple_246472, unicode_246474)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 792, 18), list_246471, tuple_246472)
        # Adding element type (line 792)
        
        # Obtaining an instance of the builtin type 'tuple' (line 793)
        tuple_246475 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 793, 20), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 793)
        # Adding element type (line 793)
        unicode_246476 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 793, 20), 'unicode', u'points')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 793, 20), tuple_246475, unicode_246476)
        # Adding element type (line 793)
        unicode_246477 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 793, 30), 'unicode', u'>u4')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 793, 20), tuple_246475, unicode_246477)
        # Adding element type (line 793)
        
        # Obtaining an instance of the builtin type 'tuple' (line 793)
        tuple_246478 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 793, 38), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 793)
        # Adding element type (line 793)
        int_246479 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 793, 38), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 793, 38), tuple_246478, int_246479)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 793, 20), tuple_246475, tuple_246478)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 792, 18), list_246471, tuple_246475)
        # Adding element type (line 792)
        
        # Obtaining an instance of the builtin type 'tuple' (line 794)
        tuple_246480 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 794, 20), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 794)
        # Adding element type (line 794)
        unicode_246481 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 794, 20), 'unicode', u'colors')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 794, 20), tuple_246480, unicode_246481)
        # Adding element type (line 794)
        unicode_246482 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 794, 30), 'unicode', u'u1')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 794, 20), tuple_246480, unicode_246482)
        # Adding element type (line 794)
        
        # Obtaining an instance of the builtin type 'tuple' (line 794)
        tuple_246483 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 794, 37), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 794)
        # Adding element type (line 794)
        int_246484 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 794, 37), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 794, 37), tuple_246483, int_246484)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 794, 20), tuple_246480, tuple_246483)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 792, 18), list_246471, tuple_246480)
        
        keyword_246485 = list_246471
        kwargs_246486 = {'dtype': keyword_246485}
        # Getting the type of 'np' (line 790)
        np_246459 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 790, 20), 'np', False)
        # Obtaining the member 'empty' of a type (line 790)
        empty_246460 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 790, 20), np_246459, 'empty')
        # Calling empty(args, kwargs) (line 790)
        empty_call_result_246487 = invoke(stypy.reporting.localization.Localization(__file__, 790, 20), empty_246460, *[tuple_246461], **kwargs_246486)
        
        # Assigning a type to the variable 'streamarr' (line 790)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 790, 8), 'streamarr', empty_call_result_246487)
        
        # Assigning a Num to a Subscript (line 795):
        
        # Assigning a Num to a Subscript (line 795):
        int_246488 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 795, 29), 'int')
        # Getting the type of 'streamarr' (line 795)
        streamarr_246489 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 795, 8), 'streamarr')
        unicode_246490 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 795, 18), 'unicode', u'flags')
        # Storing an element on a container (line 795)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 795, 8), streamarr_246489, (unicode_246490, int_246488))
        
        # Assigning a BinOp to a Subscript (line 796):
        
        # Assigning a BinOp to a Subscript (line 796):
        # Getting the type of 'flat_points' (line 796)
        flat_points_246491 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 796, 31), 'flat_points')
        # Getting the type of 'points_min' (line 796)
        points_min_246492 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 796, 45), 'points_min')
        # Applying the binary operator '-' (line 796)
        result_sub_246493 = python_operator(stypy.reporting.localization.Localization(__file__, 796, 31), '-', flat_points_246491, points_min_246492)
        
        # Getting the type of 'factor' (line 796)
        factor_246494 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 796, 59), 'factor')
        # Applying the binary operator '*' (line 796)
        result_mul_246495 = python_operator(stypy.reporting.localization.Localization(__file__, 796, 30), '*', result_sub_246493, factor_246494)
        
        # Getting the type of 'streamarr' (line 796)
        streamarr_246496 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 796, 8), 'streamarr')
        unicode_246497 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 796, 18), 'unicode', u'points')
        # Storing an element on a container (line 796)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 796, 8), streamarr_246496, (unicode_246497, result_mul_246495))
        
        # Assigning a BinOp to a Subscript (line 797):
        
        # Assigning a BinOp to a Subscript (line 797):
        
        # Obtaining the type of the subscript
        slice_246498 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 797, 30), None, None, None)
        int_246499 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 797, 46), 'int')
        slice_246500 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 797, 30), None, int_246499, None)
        # Getting the type of 'flat_colors' (line 797)
        flat_colors_246501 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 797, 30), 'flat_colors')
        # Obtaining the member '__getitem__' of a type (line 797)
        getitem___246502 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 797, 30), flat_colors_246501, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 797)
        subscript_call_result_246503 = invoke(stypy.reporting.localization.Localization(__file__, 797, 30), getitem___246502, (slice_246498, slice_246500))
        
        float_246504 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 797, 51), 'float')
        # Applying the binary operator '*' (line 797)
        result_mul_246505 = python_operator(stypy.reporting.localization.Localization(__file__, 797, 30), '*', subscript_call_result_246503, float_246504)
        
        # Getting the type of 'streamarr' (line 797)
        streamarr_246506 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 797, 8), 'streamarr')
        unicode_246507 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 797, 18), 'unicode', u'colors')
        # Storing an element on a container (line 797)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 797, 8), streamarr_246506, (unicode_246507, result_mul_246505))
        
        # Assigning a Call to a Name (line 799):
        
        # Assigning a Call to a Name (line 799):
        
        # Call to quote_ps_string(...): (line 799)
        # Processing the call arguments (line 799)
        
        # Call to tostring(...): (line 799)
        # Processing the call keyword arguments (line 799)
        kwargs_246511 = {}
        # Getting the type of 'streamarr' (line 799)
        streamarr_246509 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 799, 33), 'streamarr', False)
        # Obtaining the member 'tostring' of a type (line 799)
        tostring_246510 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 799, 33), streamarr_246509, 'tostring')
        # Calling tostring(args, kwargs) (line 799)
        tostring_call_result_246512 = invoke(stypy.reporting.localization.Localization(__file__, 799, 33), tostring_246510, *[], **kwargs_246511)
        
        # Processing the call keyword arguments (line 799)
        kwargs_246513 = {}
        # Getting the type of 'quote_ps_string' (line 799)
        quote_ps_string_246508 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 799, 17), 'quote_ps_string', False)
        # Calling quote_ps_string(args, kwargs) (line 799)
        quote_ps_string_call_result_246514 = invoke(stypy.reporting.localization.Localization(__file__, 799, 17), quote_ps_string_246508, *[tostring_call_result_246512], **kwargs_246513)
        
        # Assigning a type to the variable 'stream' (line 799)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 799, 8), 'stream', quote_ps_string_call_result_246514)
        
        # Call to write(...): (line 801)
        # Processing the call arguments (line 801)
        unicode_246518 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 814, (-1)), 'unicode', u'\ngsave\n<< /ShadingType 4\n   /ColorSpace [/DeviceRGB]\n   /BitsPerCoordinate 32\n   /BitsPerComponent 8\n   /BitsPerFlag 8\n   /AntiAlias true\n   /Decode [ %(xmin)f %(xmax)f %(ymin)f %(ymax)f 0 1 0 1 0 1 ]\n   /DataSource (%(stream)s)\n>>\nshfill\ngrestore\n')
        
        # Call to locals(...): (line 814)
        # Processing the call keyword arguments (line 814)
        kwargs_246520 = {}
        # Getting the type of 'locals' (line 814)
        locals_246519 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 814, 6), 'locals', False)
        # Calling locals(args, kwargs) (line 814)
        locals_call_result_246521 = invoke(stypy.reporting.localization.Localization(__file__, 814, 6), locals_246519, *[], **kwargs_246520)
        
        # Applying the binary operator '%' (line 814)
        result_mod_246522 = python_operator(stypy.reporting.localization.Localization(__file__, 814, (-1)), '%', unicode_246518, locals_call_result_246521)
        
        # Processing the call keyword arguments (line 801)
        kwargs_246523 = {}
        # Getting the type of 'self' (line 801)
        self_246515 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 801, 8), 'self', False)
        # Obtaining the member '_pswriter' of a type (line 801)
        _pswriter_246516 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 801, 8), self_246515, '_pswriter')
        # Obtaining the member 'write' of a type (line 801)
        write_246517 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 801, 8), _pswriter_246516, 'write')
        # Calling write(args, kwargs) (line 801)
        write_call_result_246524 = invoke(stypy.reporting.localization.Localization(__file__, 801, 8), write_246517, *[result_mod_246522], **kwargs_246523)
        
        
        # ################# End of 'draw_gouraud_triangles(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'draw_gouraud_triangles' in the type store
        # Getting the type of 'stypy_return_type' (line 770)
        stypy_return_type_246525 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 770, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_246525)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'draw_gouraud_triangles'
        return stypy_return_type_246525


    @norecursion
    def _draw_ps(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'True' (line 816)
        True_246526 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 816, 45), 'True')
        # Getting the type of 'True' (line 816)
        True_246527 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 816, 58), 'True')
        # Getting the type of 'None' (line 816)
        None_246528 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 816, 72), 'None')
        defaults = [True_246526, True_246527, None_246528]
        # Create a new context for function '_draw_ps'
        module_type_store = module_type_store.open_function_context('_draw_ps', 816, 4, False)
        # Assigning a type to the variable 'self' (line 817)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 817, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererPS._draw_ps.__dict__.__setitem__('stypy_localization', localization)
        RendererPS._draw_ps.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererPS._draw_ps.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererPS._draw_ps.__dict__.__setitem__('stypy_function_name', 'RendererPS._draw_ps')
        RendererPS._draw_ps.__dict__.__setitem__('stypy_param_names_list', ['ps', 'gc', 'rgbFace', 'fill', 'stroke', 'command'])
        RendererPS._draw_ps.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererPS._draw_ps.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererPS._draw_ps.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererPS._draw_ps.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererPS._draw_ps.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererPS._draw_ps.__dict__.__setitem__('stypy_declared_arg_number', 7)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererPS._draw_ps', ['ps', 'gc', 'rgbFace', 'fill', 'stroke', 'command'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_draw_ps', localization, ['ps', 'gc', 'rgbFace', 'fill', 'stroke', 'command'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_draw_ps(...)' code ##################

        unicode_246529 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 825, (-1)), 'unicode', u"\n        Emit the PostScript sniplet 'ps' with all the attributes from 'gc'\n        applied.  'ps' must consist of PostScript commands to construct a path.\n\n        The fill and/or stroke kwargs can be set to False if the\n        'ps' string already includes filling and/or stroking, in\n        which case _draw_ps is just supplying properties and\n        clipping.\n        ")
        
        # Assigning a Attribute to a Name (line 827):
        
        # Assigning a Attribute to a Name (line 827):
        # Getting the type of 'self' (line 827)
        self_246530 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 827, 16), 'self')
        # Obtaining the member '_pswriter' of a type (line 827)
        _pswriter_246531 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 827, 16), self_246530, '_pswriter')
        # Obtaining the member 'write' of a type (line 827)
        write_246532 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 827, 16), _pswriter_246531, 'write')
        # Assigning a type to the variable 'write' (line 827)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 827, 8), 'write', write_246532)
        
        
        # Evaluating a boolean operation
        # Getting the type of 'debugPS' (line 828)
        debugPS_246533 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 828, 11), 'debugPS')
        # Getting the type of 'command' (line 828)
        command_246534 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 828, 23), 'command')
        # Applying the binary operator 'and' (line 828)
        result_and_keyword_246535 = python_operator(stypy.reporting.localization.Localization(__file__, 828, 11), 'and', debugPS_246533, command_246534)
        
        # Testing the type of an if condition (line 828)
        if_condition_246536 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 828, 8), result_and_keyword_246535)
        # Assigning a type to the variable 'if_condition_246536' (line 828)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 828, 8), 'if_condition_246536', if_condition_246536)
        # SSA begins for if statement (line 828)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to write(...): (line 829)
        # Processing the call arguments (line 829)
        unicode_246538 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 829, 18), 'unicode', u'% ')
        # Getting the type of 'command' (line 829)
        command_246539 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 829, 23), 'command', False)
        # Applying the binary operator '+' (line 829)
        result_add_246540 = python_operator(stypy.reporting.localization.Localization(__file__, 829, 18), '+', unicode_246538, command_246539)
        
        unicode_246541 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 829, 31), 'unicode', u'\n')
        # Applying the binary operator '+' (line 829)
        result_add_246542 = python_operator(stypy.reporting.localization.Localization(__file__, 829, 30), '+', result_add_246540, unicode_246541)
        
        # Processing the call keyword arguments (line 829)
        kwargs_246543 = {}
        # Getting the type of 'write' (line 829)
        write_246537 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 829, 12), 'write', False)
        # Calling write(args, kwargs) (line 829)
        write_call_result_246544 = invoke(stypy.reporting.localization.Localization(__file__, 829, 12), write_246537, *[result_add_246542], **kwargs_246543)
        
        # SSA join for if statement (line 828)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 830):
        
        # Assigning a Call to a Name (line 830):
        
        # Call to shouldstroke(...): (line 830)
        # Processing the call keyword arguments (line 830)
        kwargs_246547 = {}
        # Getting the type of 'gc' (line 830)
        gc_246545 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 830, 22), 'gc', False)
        # Obtaining the member 'shouldstroke' of a type (line 830)
        shouldstroke_246546 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 830, 22), gc_246545, 'shouldstroke')
        # Calling shouldstroke(args, kwargs) (line 830)
        shouldstroke_call_result_246548 = invoke(stypy.reporting.localization.Localization(__file__, 830, 22), shouldstroke_246546, *[], **kwargs_246547)
        
        # Assigning a type to the variable 'mightstroke' (line 830)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 830, 8), 'mightstroke', shouldstroke_call_result_246548)
        
        # Assigning a BoolOp to a Name (line 831):
        
        # Assigning a BoolOp to a Name (line 831):
        
        # Evaluating a boolean operation
        # Getting the type of 'stroke' (line 831)
        stroke_246549 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 831, 17), 'stroke')
        # Getting the type of 'mightstroke' (line 831)
        mightstroke_246550 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 831, 28), 'mightstroke')
        # Applying the binary operator 'and' (line 831)
        result_and_keyword_246551 = python_operator(stypy.reporting.localization.Localization(__file__, 831, 17), 'and', stroke_246549, mightstroke_246550)
        
        # Assigning a type to the variable 'stroke' (line 831)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 831, 8), 'stroke', result_and_keyword_246551)
        
        # Assigning a BoolOp to a Name (line 832):
        
        # Assigning a BoolOp to a Name (line 832):
        
        # Evaluating a boolean operation
        # Getting the type of 'fill' (line 832)
        fill_246552 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 832, 16), 'fill')
        
        # Getting the type of 'rgbFace' (line 832)
        rgbFace_246553 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 832, 25), 'rgbFace')
        # Getting the type of 'None' (line 832)
        None_246554 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 832, 40), 'None')
        # Applying the binary operator 'isnot' (line 832)
        result_is_not_246555 = python_operator(stypy.reporting.localization.Localization(__file__, 832, 25), 'isnot', rgbFace_246553, None_246554)
        
        # Applying the binary operator 'and' (line 832)
        result_and_keyword_246556 = python_operator(stypy.reporting.localization.Localization(__file__, 832, 16), 'and', fill_246552, result_is_not_246555)
        
        # Evaluating a boolean operation
        
        
        # Call to len(...): (line 833)
        # Processing the call arguments (line 833)
        # Getting the type of 'rgbFace' (line 833)
        rgbFace_246558 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 833, 21), 'rgbFace', False)
        # Processing the call keyword arguments (line 833)
        kwargs_246559 = {}
        # Getting the type of 'len' (line 833)
        len_246557 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 833, 17), 'len', False)
        # Calling len(args, kwargs) (line 833)
        len_call_result_246560 = invoke(stypy.reporting.localization.Localization(__file__, 833, 17), len_246557, *[rgbFace_246558], **kwargs_246559)
        
        int_246561 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 833, 33), 'int')
        # Applying the binary operator '<=' (line 833)
        result_le_246562 = python_operator(stypy.reporting.localization.Localization(__file__, 833, 17), '<=', len_call_result_246560, int_246561)
        
        
        
        # Obtaining the type of the subscript
        int_246563 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 833, 46), 'int')
        # Getting the type of 'rgbFace' (line 833)
        rgbFace_246564 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 833, 38), 'rgbFace')
        # Obtaining the member '__getitem__' of a type (line 833)
        getitem___246565 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 833, 38), rgbFace_246564, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 833)
        subscript_call_result_246566 = invoke(stypy.reporting.localization.Localization(__file__, 833, 38), getitem___246565, int_246563)
        
        float_246567 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 833, 52), 'float')
        # Applying the binary operator '!=' (line 833)
        result_ne_246568 = python_operator(stypy.reporting.localization.Localization(__file__, 833, 38), '!=', subscript_call_result_246566, float_246567)
        
        # Applying the binary operator 'or' (line 833)
        result_or_keyword_246569 = python_operator(stypy.reporting.localization.Localization(__file__, 833, 17), 'or', result_le_246562, result_ne_246568)
        
        # Applying the binary operator 'and' (line 832)
        result_and_keyword_246570 = python_operator(stypy.reporting.localization.Localization(__file__, 832, 16), 'and', result_and_keyword_246556, result_or_keyword_246569)
        
        # Assigning a type to the variable 'fill' (line 832)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 832, 8), 'fill', result_and_keyword_246570)
        
        # Assigning a Call to a Name (line 834):
        
        # Assigning a Call to a Name (line 834):
        
        # Call to get_hatch(...): (line 834)
        # Processing the call keyword arguments (line 834)
        kwargs_246573 = {}
        # Getting the type of 'gc' (line 834)
        gc_246571 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 834, 16), 'gc', False)
        # Obtaining the member 'get_hatch' of a type (line 834)
        get_hatch_246572 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 834, 16), gc_246571, 'get_hatch')
        # Calling get_hatch(args, kwargs) (line 834)
        get_hatch_call_result_246574 = invoke(stypy.reporting.localization.Localization(__file__, 834, 16), get_hatch_246572, *[], **kwargs_246573)
        
        # Assigning a type to the variable 'hatch' (line 834)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 834, 8), 'hatch', get_hatch_call_result_246574)
        
        # Getting the type of 'mightstroke' (line 836)
        mightstroke_246575 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 836, 11), 'mightstroke')
        # Testing the type of an if condition (line 836)
        if_condition_246576 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 836, 8), mightstroke_246575)
        # Assigning a type to the variable 'if_condition_246576' (line 836)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 836, 8), 'if_condition_246576', if_condition_246576)
        # SSA begins for if statement (line 836)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to set_linewidth(...): (line 837)
        # Processing the call arguments (line 837)
        
        # Call to get_linewidth(...): (line 837)
        # Processing the call keyword arguments (line 837)
        kwargs_246581 = {}
        # Getting the type of 'gc' (line 837)
        gc_246579 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 837, 31), 'gc', False)
        # Obtaining the member 'get_linewidth' of a type (line 837)
        get_linewidth_246580 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 837, 31), gc_246579, 'get_linewidth')
        # Calling get_linewidth(args, kwargs) (line 837)
        get_linewidth_call_result_246582 = invoke(stypy.reporting.localization.Localization(__file__, 837, 31), get_linewidth_246580, *[], **kwargs_246581)
        
        # Processing the call keyword arguments (line 837)
        kwargs_246583 = {}
        # Getting the type of 'self' (line 837)
        self_246577 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 837, 12), 'self', False)
        # Obtaining the member 'set_linewidth' of a type (line 837)
        set_linewidth_246578 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 837, 12), self_246577, 'set_linewidth')
        # Calling set_linewidth(args, kwargs) (line 837)
        set_linewidth_call_result_246584 = invoke(stypy.reporting.localization.Localization(__file__, 837, 12), set_linewidth_246578, *[get_linewidth_call_result_246582], **kwargs_246583)
        
        
        # Assigning a Call to a Name (line 838):
        
        # Assigning a Call to a Name (line 838):
        
        # Call to get_joinstyle(...): (line 838)
        # Processing the call keyword arguments (line 838)
        kwargs_246587 = {}
        # Getting the type of 'gc' (line 838)
        gc_246585 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 838, 19), 'gc', False)
        # Obtaining the member 'get_joinstyle' of a type (line 838)
        get_joinstyle_246586 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 838, 19), gc_246585, 'get_joinstyle')
        # Calling get_joinstyle(args, kwargs) (line 838)
        get_joinstyle_call_result_246588 = invoke(stypy.reporting.localization.Localization(__file__, 838, 19), get_joinstyle_246586, *[], **kwargs_246587)
        
        # Assigning a type to the variable 'jint' (line 838)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 838, 12), 'jint', get_joinstyle_call_result_246588)
        
        # Call to set_linejoin(...): (line 839)
        # Processing the call arguments (line 839)
        # Getting the type of 'jint' (line 839)
        jint_246591 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 839, 30), 'jint', False)
        # Processing the call keyword arguments (line 839)
        kwargs_246592 = {}
        # Getting the type of 'self' (line 839)
        self_246589 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 839, 12), 'self', False)
        # Obtaining the member 'set_linejoin' of a type (line 839)
        set_linejoin_246590 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 839, 12), self_246589, 'set_linejoin')
        # Calling set_linejoin(args, kwargs) (line 839)
        set_linejoin_call_result_246593 = invoke(stypy.reporting.localization.Localization(__file__, 839, 12), set_linejoin_246590, *[jint_246591], **kwargs_246592)
        
        
        # Assigning a Call to a Name (line 840):
        
        # Assigning a Call to a Name (line 840):
        
        # Call to get_capstyle(...): (line 840)
        # Processing the call keyword arguments (line 840)
        kwargs_246596 = {}
        # Getting the type of 'gc' (line 840)
        gc_246594 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 840, 19), 'gc', False)
        # Obtaining the member 'get_capstyle' of a type (line 840)
        get_capstyle_246595 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 840, 19), gc_246594, 'get_capstyle')
        # Calling get_capstyle(args, kwargs) (line 840)
        get_capstyle_call_result_246597 = invoke(stypy.reporting.localization.Localization(__file__, 840, 19), get_capstyle_246595, *[], **kwargs_246596)
        
        # Assigning a type to the variable 'cint' (line 840)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 840, 12), 'cint', get_capstyle_call_result_246597)
        
        # Call to set_linecap(...): (line 841)
        # Processing the call arguments (line 841)
        # Getting the type of 'cint' (line 841)
        cint_246600 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 841, 29), 'cint', False)
        # Processing the call keyword arguments (line 841)
        kwargs_246601 = {}
        # Getting the type of 'self' (line 841)
        self_246598 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 841, 12), 'self', False)
        # Obtaining the member 'set_linecap' of a type (line 841)
        set_linecap_246599 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 841, 12), self_246598, 'set_linecap')
        # Calling set_linecap(args, kwargs) (line 841)
        set_linecap_call_result_246602 = invoke(stypy.reporting.localization.Localization(__file__, 841, 12), set_linecap_246599, *[cint_246600], **kwargs_246601)
        
        
        # Call to set_linedash(...): (line 842)
        
        # Call to get_dashes(...): (line 842)
        # Processing the call keyword arguments (line 842)
        kwargs_246607 = {}
        # Getting the type of 'gc' (line 842)
        gc_246605 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 842, 31), 'gc', False)
        # Obtaining the member 'get_dashes' of a type (line 842)
        get_dashes_246606 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 842, 31), gc_246605, 'get_dashes')
        # Calling get_dashes(args, kwargs) (line 842)
        get_dashes_call_result_246608 = invoke(stypy.reporting.localization.Localization(__file__, 842, 31), get_dashes_246606, *[], **kwargs_246607)
        
        # Processing the call keyword arguments (line 842)
        kwargs_246609 = {}
        # Getting the type of 'self' (line 842)
        self_246603 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 842, 12), 'self', False)
        # Obtaining the member 'set_linedash' of a type (line 842)
        set_linedash_246604 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 842, 12), self_246603, 'set_linedash')
        # Calling set_linedash(args, kwargs) (line 842)
        set_linedash_call_result_246610 = invoke(stypy.reporting.localization.Localization(__file__, 842, 12), set_linedash_246604, *[get_dashes_call_result_246608], **kwargs_246609)
        
        
        # Call to set_color(...): (line 843)
        
        # Obtaining the type of the subscript
        int_246613 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 843, 42), 'int')
        slice_246614 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 843, 28), None, int_246613, None)
        
        # Call to get_rgb(...): (line 843)
        # Processing the call keyword arguments (line 843)
        kwargs_246617 = {}
        # Getting the type of 'gc' (line 843)
        gc_246615 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 843, 28), 'gc', False)
        # Obtaining the member 'get_rgb' of a type (line 843)
        get_rgb_246616 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 843, 28), gc_246615, 'get_rgb')
        # Calling get_rgb(args, kwargs) (line 843)
        get_rgb_call_result_246618 = invoke(stypy.reporting.localization.Localization(__file__, 843, 28), get_rgb_246616, *[], **kwargs_246617)
        
        # Obtaining the member '__getitem__' of a type (line 843)
        getitem___246619 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 843, 28), get_rgb_call_result_246618, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 843)
        subscript_call_result_246620 = invoke(stypy.reporting.localization.Localization(__file__, 843, 28), getitem___246619, slice_246614)
        
        # Processing the call keyword arguments (line 843)
        kwargs_246621 = {}
        # Getting the type of 'self' (line 843)
        self_246611 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 843, 12), 'self', False)
        # Obtaining the member 'set_color' of a type (line 843)
        set_color_246612 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 843, 12), self_246611, 'set_color')
        # Calling set_color(args, kwargs) (line 843)
        set_color_call_result_246622 = invoke(stypy.reporting.localization.Localization(__file__, 843, 12), set_color_246612, *[subscript_call_result_246620], **kwargs_246621)
        
        # SSA join for if statement (line 836)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to write(...): (line 844)
        # Processing the call arguments (line 844)
        unicode_246624 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 844, 14), 'unicode', u'gsave\n')
        # Processing the call keyword arguments (line 844)
        kwargs_246625 = {}
        # Getting the type of 'write' (line 844)
        write_246623 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 844, 8), 'write', False)
        # Calling write(args, kwargs) (line 844)
        write_call_result_246626 = invoke(stypy.reporting.localization.Localization(__file__, 844, 8), write_246623, *[unicode_246624], **kwargs_246625)
        
        
        # Assigning a Call to a Name (line 846):
        
        # Assigning a Call to a Name (line 846):
        
        # Call to get_clip_rectangle(...): (line 846)
        # Processing the call keyword arguments (line 846)
        kwargs_246629 = {}
        # Getting the type of 'gc' (line 846)
        gc_246627 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 846, 19), 'gc', False)
        # Obtaining the member 'get_clip_rectangle' of a type (line 846)
        get_clip_rectangle_246628 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 846, 19), gc_246627, 'get_clip_rectangle')
        # Calling get_clip_rectangle(args, kwargs) (line 846)
        get_clip_rectangle_call_result_246630 = invoke(stypy.reporting.localization.Localization(__file__, 846, 19), get_clip_rectangle_246628, *[], **kwargs_246629)
        
        # Assigning a type to the variable 'cliprect' (line 846)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 846, 8), 'cliprect', get_clip_rectangle_call_result_246630)
        
        # Getting the type of 'cliprect' (line 847)
        cliprect_246631 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 847, 11), 'cliprect')
        # Testing the type of an if condition (line 847)
        if_condition_246632 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 847, 8), cliprect_246631)
        # Assigning a type to the variable 'if_condition_246632' (line 847)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 847, 8), 'if_condition_246632', if_condition_246632)
        # SSA begins for if statement (line 847)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Attribute to a Tuple (line 848):
        
        # Assigning a Subscript to a Name (line 848):
        
        # Obtaining the type of the subscript
        int_246633 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 848, 12), 'int')
        # Getting the type of 'cliprect' (line 848)
        cliprect_246634 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 848, 20), 'cliprect')
        # Obtaining the member 'bounds' of a type (line 848)
        bounds_246635 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 848, 20), cliprect_246634, 'bounds')
        # Obtaining the member '__getitem__' of a type (line 848)
        getitem___246636 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 848, 12), bounds_246635, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 848)
        subscript_call_result_246637 = invoke(stypy.reporting.localization.Localization(__file__, 848, 12), getitem___246636, int_246633)
        
        # Assigning a type to the variable 'tuple_var_assignment_243748' (line 848)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 848, 12), 'tuple_var_assignment_243748', subscript_call_result_246637)
        
        # Assigning a Subscript to a Name (line 848):
        
        # Obtaining the type of the subscript
        int_246638 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 848, 12), 'int')
        # Getting the type of 'cliprect' (line 848)
        cliprect_246639 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 848, 20), 'cliprect')
        # Obtaining the member 'bounds' of a type (line 848)
        bounds_246640 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 848, 20), cliprect_246639, 'bounds')
        # Obtaining the member '__getitem__' of a type (line 848)
        getitem___246641 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 848, 12), bounds_246640, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 848)
        subscript_call_result_246642 = invoke(stypy.reporting.localization.Localization(__file__, 848, 12), getitem___246641, int_246638)
        
        # Assigning a type to the variable 'tuple_var_assignment_243749' (line 848)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 848, 12), 'tuple_var_assignment_243749', subscript_call_result_246642)
        
        # Assigning a Subscript to a Name (line 848):
        
        # Obtaining the type of the subscript
        int_246643 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 848, 12), 'int')
        # Getting the type of 'cliprect' (line 848)
        cliprect_246644 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 848, 20), 'cliprect')
        # Obtaining the member 'bounds' of a type (line 848)
        bounds_246645 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 848, 20), cliprect_246644, 'bounds')
        # Obtaining the member '__getitem__' of a type (line 848)
        getitem___246646 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 848, 12), bounds_246645, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 848)
        subscript_call_result_246647 = invoke(stypy.reporting.localization.Localization(__file__, 848, 12), getitem___246646, int_246643)
        
        # Assigning a type to the variable 'tuple_var_assignment_243750' (line 848)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 848, 12), 'tuple_var_assignment_243750', subscript_call_result_246647)
        
        # Assigning a Subscript to a Name (line 848):
        
        # Obtaining the type of the subscript
        int_246648 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 848, 12), 'int')
        # Getting the type of 'cliprect' (line 848)
        cliprect_246649 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 848, 20), 'cliprect')
        # Obtaining the member 'bounds' of a type (line 848)
        bounds_246650 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 848, 20), cliprect_246649, 'bounds')
        # Obtaining the member '__getitem__' of a type (line 848)
        getitem___246651 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 848, 12), bounds_246650, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 848)
        subscript_call_result_246652 = invoke(stypy.reporting.localization.Localization(__file__, 848, 12), getitem___246651, int_246648)
        
        # Assigning a type to the variable 'tuple_var_assignment_243751' (line 848)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 848, 12), 'tuple_var_assignment_243751', subscript_call_result_246652)
        
        # Assigning a Name to a Name (line 848):
        # Getting the type of 'tuple_var_assignment_243748' (line 848)
        tuple_var_assignment_243748_246653 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 848, 12), 'tuple_var_assignment_243748')
        # Assigning a type to the variable 'x' (line 848)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 848, 12), 'x', tuple_var_assignment_243748_246653)
        
        # Assigning a Name to a Name (line 848):
        # Getting the type of 'tuple_var_assignment_243749' (line 848)
        tuple_var_assignment_243749_246654 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 848, 12), 'tuple_var_assignment_243749')
        # Assigning a type to the variable 'y' (line 848)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 848, 14), 'y', tuple_var_assignment_243749_246654)
        
        # Assigning a Name to a Name (line 848):
        # Getting the type of 'tuple_var_assignment_243750' (line 848)
        tuple_var_assignment_243750_246655 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 848, 12), 'tuple_var_assignment_243750')
        # Assigning a type to the variable 'w' (line 848)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 848, 16), 'w', tuple_var_assignment_243750_246655)
        
        # Assigning a Name to a Name (line 848):
        # Getting the type of 'tuple_var_assignment_243751' (line 848)
        tuple_var_assignment_243751_246656 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 848, 12), 'tuple_var_assignment_243751')
        # Assigning a type to the variable 'h' (line 848)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 848, 18), 'h', tuple_var_assignment_243751_246656)
        
        # Call to write(...): (line 849)
        # Processing the call arguments (line 849)
        unicode_246658 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 849, 18), 'unicode', u'%1.4g %1.4g %1.4g %1.4g clipbox\n')
        
        # Obtaining an instance of the builtin type 'tuple' (line 849)
        tuple_246659 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 849, 57), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 849)
        # Adding element type (line 849)
        # Getting the type of 'w' (line 849)
        w_246660 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 849, 57), 'w', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 849, 57), tuple_246659, w_246660)
        # Adding element type (line 849)
        # Getting the type of 'h' (line 849)
        h_246661 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 849, 59), 'h', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 849, 57), tuple_246659, h_246661)
        # Adding element type (line 849)
        # Getting the type of 'x' (line 849)
        x_246662 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 849, 61), 'x', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 849, 57), tuple_246659, x_246662)
        # Adding element type (line 849)
        # Getting the type of 'y' (line 849)
        y_246663 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 849, 63), 'y', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 849, 57), tuple_246659, y_246663)
        
        # Applying the binary operator '%' (line 849)
        result_mod_246664 = python_operator(stypy.reporting.localization.Localization(__file__, 849, 18), '%', unicode_246658, tuple_246659)
        
        # Processing the call keyword arguments (line 849)
        kwargs_246665 = {}
        # Getting the type of 'write' (line 849)
        write_246657 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 849, 12), 'write', False)
        # Calling write(args, kwargs) (line 849)
        write_call_result_246666 = invoke(stypy.reporting.localization.Localization(__file__, 849, 12), write_246657, *[result_mod_246664], **kwargs_246665)
        
        # SSA join for if statement (line 847)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Tuple (line 850):
        
        # Assigning a Call to a Name:
        
        # Call to get_clip_path(...): (line 850)
        # Processing the call keyword arguments (line 850)
        kwargs_246669 = {}
        # Getting the type of 'gc' (line 850)
        gc_246667 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 850, 35), 'gc', False)
        # Obtaining the member 'get_clip_path' of a type (line 850)
        get_clip_path_246668 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 850, 35), gc_246667, 'get_clip_path')
        # Calling get_clip_path(args, kwargs) (line 850)
        get_clip_path_call_result_246670 = invoke(stypy.reporting.localization.Localization(__file__, 850, 35), get_clip_path_246668, *[], **kwargs_246669)
        
        # Assigning a type to the variable 'call_assignment_243752' (line 850)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 850, 8), 'call_assignment_243752', get_clip_path_call_result_246670)
        
        # Assigning a Call to a Name (line 850):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_246673 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 850, 8), 'int')
        # Processing the call keyword arguments
        kwargs_246674 = {}
        # Getting the type of 'call_assignment_243752' (line 850)
        call_assignment_243752_246671 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 850, 8), 'call_assignment_243752', False)
        # Obtaining the member '__getitem__' of a type (line 850)
        getitem___246672 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 850, 8), call_assignment_243752_246671, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_246675 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___246672, *[int_246673], **kwargs_246674)
        
        # Assigning a type to the variable 'call_assignment_243753' (line 850)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 850, 8), 'call_assignment_243753', getitem___call_result_246675)
        
        # Assigning a Name to a Name (line 850):
        # Getting the type of 'call_assignment_243753' (line 850)
        call_assignment_243753_246676 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 850, 8), 'call_assignment_243753')
        # Assigning a type to the variable 'clippath' (line 850)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 850, 8), 'clippath', call_assignment_243753_246676)
        
        # Assigning a Call to a Name (line 850):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_246679 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 850, 8), 'int')
        # Processing the call keyword arguments
        kwargs_246680 = {}
        # Getting the type of 'call_assignment_243752' (line 850)
        call_assignment_243752_246677 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 850, 8), 'call_assignment_243752', False)
        # Obtaining the member '__getitem__' of a type (line 850)
        getitem___246678 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 850, 8), call_assignment_243752_246677, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_246681 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___246678, *[int_246679], **kwargs_246680)
        
        # Assigning a type to the variable 'call_assignment_243754' (line 850)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 850, 8), 'call_assignment_243754', getitem___call_result_246681)
        
        # Assigning a Name to a Name (line 850):
        # Getting the type of 'call_assignment_243754' (line 850)
        call_assignment_243754_246682 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 850, 8), 'call_assignment_243754')
        # Assigning a type to the variable 'clippath_trans' (line 850)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 850, 18), 'clippath_trans', call_assignment_243754_246682)
        
        # Getting the type of 'clippath' (line 851)
        clippath_246683 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 851, 11), 'clippath')
        # Testing the type of an if condition (line 851)
        if_condition_246684 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 851, 8), clippath_246683)
        # Assigning a type to the variable 'if_condition_246684' (line 851)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 851, 8), 'if_condition_246684', if_condition_246684)
        # SSA begins for if statement (line 851)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 852):
        
        # Assigning a Call to a Name (line 852):
        
        # Call to _get_clip_path(...): (line 852)
        # Processing the call arguments (line 852)
        # Getting the type of 'clippath' (line 852)
        clippath_246687 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 852, 37), 'clippath', False)
        # Getting the type of 'clippath_trans' (line 852)
        clippath_trans_246688 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 852, 47), 'clippath_trans', False)
        # Processing the call keyword arguments (line 852)
        kwargs_246689 = {}
        # Getting the type of 'self' (line 852)
        self_246685 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 852, 17), 'self', False)
        # Obtaining the member '_get_clip_path' of a type (line 852)
        _get_clip_path_246686 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 852, 17), self_246685, '_get_clip_path')
        # Calling _get_clip_path(args, kwargs) (line 852)
        _get_clip_path_call_result_246690 = invoke(stypy.reporting.localization.Localization(__file__, 852, 17), _get_clip_path_246686, *[clippath_246687, clippath_trans_246688], **kwargs_246689)
        
        # Assigning a type to the variable 'id' (line 852)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 852, 12), 'id', _get_clip_path_call_result_246690)
        
        # Call to write(...): (line 853)
        # Processing the call arguments (line 853)
        unicode_246692 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 853, 18), 'unicode', u'%s\n')
        # Getting the type of 'id' (line 853)
        id_246693 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 853, 27), 'id', False)
        # Applying the binary operator '%' (line 853)
        result_mod_246694 = python_operator(stypy.reporting.localization.Localization(__file__, 853, 18), '%', unicode_246692, id_246693)
        
        # Processing the call keyword arguments (line 853)
        kwargs_246695 = {}
        # Getting the type of 'write' (line 853)
        write_246691 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 853, 12), 'write', False)
        # Calling write(args, kwargs) (line 853)
        write_call_result_246696 = invoke(stypy.reporting.localization.Localization(__file__, 853, 12), write_246691, *[result_mod_246694], **kwargs_246695)
        
        # SSA join for if statement (line 851)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to write(...): (line 856)
        # Processing the call arguments (line 856)
        
        # Call to strip(...): (line 856)
        # Processing the call keyword arguments (line 856)
        kwargs_246700 = {}
        # Getting the type of 'ps' (line 856)
        ps_246698 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 856, 14), 'ps', False)
        # Obtaining the member 'strip' of a type (line 856)
        strip_246699 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 856, 14), ps_246698, 'strip')
        # Calling strip(args, kwargs) (line 856)
        strip_call_result_246701 = invoke(stypy.reporting.localization.Localization(__file__, 856, 14), strip_246699, *[], **kwargs_246700)
        
        # Processing the call keyword arguments (line 856)
        kwargs_246702 = {}
        # Getting the type of 'write' (line 856)
        write_246697 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 856, 8), 'write', False)
        # Calling write(args, kwargs) (line 856)
        write_call_result_246703 = invoke(stypy.reporting.localization.Localization(__file__, 856, 8), write_246697, *[strip_call_result_246701], **kwargs_246702)
        
        
        # Call to write(...): (line 857)
        # Processing the call arguments (line 857)
        unicode_246705 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 857, 14), 'unicode', u'\n')
        # Processing the call keyword arguments (line 857)
        kwargs_246706 = {}
        # Getting the type of 'write' (line 857)
        write_246704 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 857, 8), 'write', False)
        # Calling write(args, kwargs) (line 857)
        write_call_result_246707 = invoke(stypy.reporting.localization.Localization(__file__, 857, 8), write_246704, *[unicode_246705], **kwargs_246706)
        
        
        # Getting the type of 'fill' (line 859)
        fill_246708 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 859, 11), 'fill')
        # Testing the type of an if condition (line 859)
        if_condition_246709 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 859, 8), fill_246708)
        # Assigning a type to the variable 'if_condition_246709' (line 859)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 859, 8), 'if_condition_246709', if_condition_246709)
        # SSA begins for if statement (line 859)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        
        # Evaluating a boolean operation
        # Getting the type of 'stroke' (line 860)
        stroke_246710 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 860, 15), 'stroke')
        # Getting the type of 'hatch' (line 860)
        hatch_246711 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 860, 25), 'hatch')
        # Applying the binary operator 'or' (line 860)
        result_or_keyword_246712 = python_operator(stypy.reporting.localization.Localization(__file__, 860, 15), 'or', stroke_246710, hatch_246711)
        
        # Testing the type of an if condition (line 860)
        if_condition_246713 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 860, 12), result_or_keyword_246712)
        # Assigning a type to the variable 'if_condition_246713' (line 860)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 860, 12), 'if_condition_246713', if_condition_246713)
        # SSA begins for if statement (line 860)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to write(...): (line 861)
        # Processing the call arguments (line 861)
        unicode_246715 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 861, 22), 'unicode', u'gsave\n')
        # Processing the call keyword arguments (line 861)
        kwargs_246716 = {}
        # Getting the type of 'write' (line 861)
        write_246714 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 861, 16), 'write', False)
        # Calling write(args, kwargs) (line 861)
        write_call_result_246717 = invoke(stypy.reporting.localization.Localization(__file__, 861, 16), write_246714, *[unicode_246715], **kwargs_246716)
        
        # SSA join for if statement (line 860)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to set_color(...): (line 862)
        
        # Obtaining the type of the subscript
        int_246720 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 862, 46), 'int')
        slice_246721 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 862, 37), None, int_246720, None)
        # Getting the type of 'rgbFace' (line 862)
        rgbFace_246722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 862, 37), 'rgbFace', False)
        # Obtaining the member '__getitem__' of a type (line 862)
        getitem___246723 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 862, 37), rgbFace_246722, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 862)
        subscript_call_result_246724 = invoke(stypy.reporting.localization.Localization(__file__, 862, 37), getitem___246723, slice_246721)
        
        # Processing the call keyword arguments (line 862)
        int_246725 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 862, 33), 'int')
        keyword_246726 = int_246725
        kwargs_246727 = {'store': keyword_246726}
        # Getting the type of 'self' (line 862)
        self_246718 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 862, 12), 'self', False)
        # Obtaining the member 'set_color' of a type (line 862)
        set_color_246719 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 862, 12), self_246718, 'set_color')
        # Calling set_color(args, kwargs) (line 862)
        set_color_call_result_246728 = invoke(stypy.reporting.localization.Localization(__file__, 862, 12), set_color_246719, *[subscript_call_result_246724], **kwargs_246727)
        
        
        # Call to write(...): (line 863)
        # Processing the call arguments (line 863)
        unicode_246730 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 863, 18), 'unicode', u'fill\n')
        # Processing the call keyword arguments (line 863)
        kwargs_246731 = {}
        # Getting the type of 'write' (line 863)
        write_246729 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 863, 12), 'write', False)
        # Calling write(args, kwargs) (line 863)
        write_call_result_246732 = invoke(stypy.reporting.localization.Localization(__file__, 863, 12), write_246729, *[unicode_246730], **kwargs_246731)
        
        
        
        # Evaluating a boolean operation
        # Getting the type of 'stroke' (line 864)
        stroke_246733 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 864, 15), 'stroke')
        # Getting the type of 'hatch' (line 864)
        hatch_246734 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 864, 25), 'hatch')
        # Applying the binary operator 'or' (line 864)
        result_or_keyword_246735 = python_operator(stypy.reporting.localization.Localization(__file__, 864, 15), 'or', stroke_246733, hatch_246734)
        
        # Testing the type of an if condition (line 864)
        if_condition_246736 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 864, 12), result_or_keyword_246735)
        # Assigning a type to the variable 'if_condition_246736' (line 864)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 864, 12), 'if_condition_246736', if_condition_246736)
        # SSA begins for if statement (line 864)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to write(...): (line 865)
        # Processing the call arguments (line 865)
        unicode_246738 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 865, 22), 'unicode', u'grestore\n')
        # Processing the call keyword arguments (line 865)
        kwargs_246739 = {}
        # Getting the type of 'write' (line 865)
        write_246737 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 865, 16), 'write', False)
        # Calling write(args, kwargs) (line 865)
        write_call_result_246740 = invoke(stypy.reporting.localization.Localization(__file__, 865, 16), write_246737, *[unicode_246738], **kwargs_246739)
        
        # SSA join for if statement (line 864)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 859)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'hatch' (line 867)
        hatch_246741 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 867, 11), 'hatch')
        # Testing the type of an if condition (line 867)
        if_condition_246742 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 867, 8), hatch_246741)
        # Assigning a type to the variable 'if_condition_246742' (line 867)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 867, 8), 'if_condition_246742', if_condition_246742)
        # SSA begins for if statement (line 867)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 868):
        
        # Assigning a Call to a Name (line 868):
        
        # Call to create_hatch(...): (line 868)
        # Processing the call arguments (line 868)
        # Getting the type of 'hatch' (line 868)
        hatch_246745 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 868, 43), 'hatch', False)
        # Processing the call keyword arguments (line 868)
        kwargs_246746 = {}
        # Getting the type of 'self' (line 868)
        self_246743 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 868, 25), 'self', False)
        # Obtaining the member 'create_hatch' of a type (line 868)
        create_hatch_246744 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 868, 25), self_246743, 'create_hatch')
        # Calling create_hatch(args, kwargs) (line 868)
        create_hatch_call_result_246747 = invoke(stypy.reporting.localization.Localization(__file__, 868, 25), create_hatch_246744, *[hatch_246745], **kwargs_246746)
        
        # Assigning a type to the variable 'hatch_name' (line 868)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 868, 12), 'hatch_name', create_hatch_call_result_246747)
        
        # Call to write(...): (line 869)
        # Processing the call arguments (line 869)
        unicode_246749 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 869, 18), 'unicode', u'gsave\n')
        # Processing the call keyword arguments (line 869)
        kwargs_246750 = {}
        # Getting the type of 'write' (line 869)
        write_246748 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 869, 12), 'write', False)
        # Calling write(args, kwargs) (line 869)
        write_call_result_246751 = invoke(stypy.reporting.localization.Localization(__file__, 869, 12), write_246748, *[unicode_246749], **kwargs_246750)
        
        
        # Call to write(...): (line 870)
        # Processing the call arguments (line 870)
        unicode_246753 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 870, 18), 'unicode', u'%f %f %f ')
        
        # Obtaining the type of the subscript
        int_246754 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 870, 54), 'int')
        slice_246755 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 870, 32), None, int_246754, None)
        
        # Call to get_hatch_color(...): (line 870)
        # Processing the call keyword arguments (line 870)
        kwargs_246758 = {}
        # Getting the type of 'gc' (line 870)
        gc_246756 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 870, 32), 'gc', False)
        # Obtaining the member 'get_hatch_color' of a type (line 870)
        get_hatch_color_246757 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 870, 32), gc_246756, 'get_hatch_color')
        # Calling get_hatch_color(args, kwargs) (line 870)
        get_hatch_color_call_result_246759 = invoke(stypy.reporting.localization.Localization(__file__, 870, 32), get_hatch_color_246757, *[], **kwargs_246758)
        
        # Obtaining the member '__getitem__' of a type (line 870)
        getitem___246760 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 870, 32), get_hatch_color_call_result_246759, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 870)
        subscript_call_result_246761 = invoke(stypy.reporting.localization.Localization(__file__, 870, 32), getitem___246760, slice_246755)
        
        # Applying the binary operator '%' (line 870)
        result_mod_246762 = python_operator(stypy.reporting.localization.Localization(__file__, 870, 18), '%', unicode_246753, subscript_call_result_246761)
        
        # Processing the call keyword arguments (line 870)
        kwargs_246763 = {}
        # Getting the type of 'write' (line 870)
        write_246752 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 870, 12), 'write', False)
        # Calling write(args, kwargs) (line 870)
        write_call_result_246764 = invoke(stypy.reporting.localization.Localization(__file__, 870, 12), write_246752, *[result_mod_246762], **kwargs_246763)
        
        
        # Call to write(...): (line 871)
        # Processing the call arguments (line 871)
        unicode_246766 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 871, 18), 'unicode', u'%s setpattern fill grestore\n')
        # Getting the type of 'hatch_name' (line 871)
        hatch_name_246767 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 871, 52), 'hatch_name', False)
        # Applying the binary operator '%' (line 871)
        result_mod_246768 = python_operator(stypy.reporting.localization.Localization(__file__, 871, 18), '%', unicode_246766, hatch_name_246767)
        
        # Processing the call keyword arguments (line 871)
        kwargs_246769 = {}
        # Getting the type of 'write' (line 871)
        write_246765 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 871, 12), 'write', False)
        # Calling write(args, kwargs) (line 871)
        write_call_result_246770 = invoke(stypy.reporting.localization.Localization(__file__, 871, 12), write_246765, *[result_mod_246768], **kwargs_246769)
        
        # SSA join for if statement (line 867)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'stroke' (line 873)
        stroke_246771 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 873, 11), 'stroke')
        # Testing the type of an if condition (line 873)
        if_condition_246772 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 873, 8), stroke_246771)
        # Assigning a type to the variable 'if_condition_246772' (line 873)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 873, 8), 'if_condition_246772', if_condition_246772)
        # SSA begins for if statement (line 873)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to write(...): (line 874)
        # Processing the call arguments (line 874)
        unicode_246774 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 874, 18), 'unicode', u'stroke\n')
        # Processing the call keyword arguments (line 874)
        kwargs_246775 = {}
        # Getting the type of 'write' (line 874)
        write_246773 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 874, 12), 'write', False)
        # Calling write(args, kwargs) (line 874)
        write_call_result_246776 = invoke(stypy.reporting.localization.Localization(__file__, 874, 12), write_246773, *[unicode_246774], **kwargs_246775)
        
        # SSA join for if statement (line 873)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to write(...): (line 876)
        # Processing the call arguments (line 876)
        unicode_246778 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 876, 14), 'unicode', u'grestore\n')
        # Processing the call keyword arguments (line 876)
        kwargs_246779 = {}
        # Getting the type of 'write' (line 876)
        write_246777 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 876, 8), 'write', False)
        # Calling write(args, kwargs) (line 876)
        write_call_result_246780 = invoke(stypy.reporting.localization.Localization(__file__, 876, 8), write_246777, *[unicode_246778], **kwargs_246779)
        
        
        # ################# End of '_draw_ps(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_draw_ps' in the type store
        # Getting the type of 'stypy_return_type' (line 816)
        stypy_return_type_246781 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 816, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_246781)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_draw_ps'
        return stypy_return_type_246781


# Assigning a type to the variable 'RendererPS' (line 168)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 168, 0), 'RendererPS', RendererPS)

# Assigning a Call to a Name (line 174):

# Call to maxdict(...): (line 174)
# Processing the call arguments (line 174)
int_246783 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 174, 23), 'int')
# Processing the call keyword arguments (line 174)
kwargs_246784 = {}
# Getting the type of 'maxdict' (line 174)
maxdict_246782 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 174, 15), 'maxdict', False)
# Calling maxdict(args, kwargs) (line 174)
maxdict_call_result_246785 = invoke(stypy.reporting.localization.Localization(__file__, 174, 15), maxdict_246782, *[int_246783], **kwargs_246784)

# Getting the type of 'RendererPS'
RendererPS_246786 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'RendererPS')
# Setting the type of the member 'afmfontd' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), RendererPS_246786, 'afmfontd', maxdict_call_result_246785)
# Declaration of the 'GraphicsContextPS' class
# Getting the type of 'GraphicsContextBase' (line 879)
GraphicsContextBase_246787 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 879, 24), 'GraphicsContextBase')

class GraphicsContextPS(GraphicsContextBase_246787, ):

    @norecursion
    def get_capstyle(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'get_capstyle'
        module_type_store = module_type_store.open_function_context('get_capstyle', 880, 4, False)
        # Assigning a type to the variable 'self' (line 881)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 881, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        GraphicsContextPS.get_capstyle.__dict__.__setitem__('stypy_localization', localization)
        GraphicsContextPS.get_capstyle.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        GraphicsContextPS.get_capstyle.__dict__.__setitem__('stypy_type_store', module_type_store)
        GraphicsContextPS.get_capstyle.__dict__.__setitem__('stypy_function_name', 'GraphicsContextPS.get_capstyle')
        GraphicsContextPS.get_capstyle.__dict__.__setitem__('stypy_param_names_list', [])
        GraphicsContextPS.get_capstyle.__dict__.__setitem__('stypy_varargs_param_name', None)
        GraphicsContextPS.get_capstyle.__dict__.__setitem__('stypy_kwargs_param_name', None)
        GraphicsContextPS.get_capstyle.__dict__.__setitem__('stypy_call_defaults', defaults)
        GraphicsContextPS.get_capstyle.__dict__.__setitem__('stypy_call_varargs', varargs)
        GraphicsContextPS.get_capstyle.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        GraphicsContextPS.get_capstyle.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'GraphicsContextPS.get_capstyle', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_capstyle', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_capstyle(...)' code ##################

        
        # Obtaining the type of the subscript
        
        # Call to get_capstyle(...): (line 883)
        # Processing the call arguments (line 883)
        # Getting the type of 'self' (line 883)
        self_246790 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 883, 65), 'self', False)
        # Processing the call keyword arguments (line 883)
        kwargs_246791 = {}
        # Getting the type of 'GraphicsContextBase' (line 883)
        GraphicsContextBase_246788 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 883, 32), 'GraphicsContextBase', False)
        # Obtaining the member 'get_capstyle' of a type (line 883)
        get_capstyle_246789 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 883, 32), GraphicsContextBase_246788, 'get_capstyle')
        # Calling get_capstyle(args, kwargs) (line 883)
        get_capstyle_call_result_246792 = invoke(stypy.reporting.localization.Localization(__file__, 883, 32), get_capstyle_246789, *[self_246790], **kwargs_246791)
        
        
        # Obtaining an instance of the builtin type 'dict' (line 881)
        dict_246793 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 881, 15), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 881)
        # Adding element type (key, value) (line 881)
        unicode_246794 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 881, 16), 'unicode', u'butt')
        int_246795 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 881, 23), 'int')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 881, 15), dict_246793, (unicode_246794, int_246795))
        # Adding element type (key, value) (line 881)
        unicode_246796 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 882, 16), 'unicode', u'round')
        int_246797 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 882, 24), 'int')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 881, 15), dict_246793, (unicode_246796, int_246797))
        # Adding element type (key, value) (line 881)
        unicode_246798 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 883, 16), 'unicode', u'projecting')
        int_246799 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 883, 29), 'int')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 881, 15), dict_246793, (unicode_246798, int_246799))
        
        # Obtaining the member '__getitem__' of a type (line 881)
        getitem___246800 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 881, 15), dict_246793, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 881)
        subscript_call_result_246801 = invoke(stypy.reporting.localization.Localization(__file__, 881, 15), getitem___246800, get_capstyle_call_result_246792)
        
        # Assigning a type to the variable 'stypy_return_type' (line 881)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 881, 8), 'stypy_return_type', subscript_call_result_246801)
        
        # ################# End of 'get_capstyle(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_capstyle' in the type store
        # Getting the type of 'stypy_return_type' (line 880)
        stypy_return_type_246802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 880, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_246802)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_capstyle'
        return stypy_return_type_246802


    @norecursion
    def get_joinstyle(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'get_joinstyle'
        module_type_store = module_type_store.open_function_context('get_joinstyle', 885, 4, False)
        # Assigning a type to the variable 'self' (line 886)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 886, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        GraphicsContextPS.get_joinstyle.__dict__.__setitem__('stypy_localization', localization)
        GraphicsContextPS.get_joinstyle.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        GraphicsContextPS.get_joinstyle.__dict__.__setitem__('stypy_type_store', module_type_store)
        GraphicsContextPS.get_joinstyle.__dict__.__setitem__('stypy_function_name', 'GraphicsContextPS.get_joinstyle')
        GraphicsContextPS.get_joinstyle.__dict__.__setitem__('stypy_param_names_list', [])
        GraphicsContextPS.get_joinstyle.__dict__.__setitem__('stypy_varargs_param_name', None)
        GraphicsContextPS.get_joinstyle.__dict__.__setitem__('stypy_kwargs_param_name', None)
        GraphicsContextPS.get_joinstyle.__dict__.__setitem__('stypy_call_defaults', defaults)
        GraphicsContextPS.get_joinstyle.__dict__.__setitem__('stypy_call_varargs', varargs)
        GraphicsContextPS.get_joinstyle.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        GraphicsContextPS.get_joinstyle.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'GraphicsContextPS.get_joinstyle', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_joinstyle', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_joinstyle(...)' code ##################

        
        # Obtaining the type of the subscript
        
        # Call to get_joinstyle(...): (line 888)
        # Processing the call arguments (line 888)
        # Getting the type of 'self' (line 888)
        self_246805 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 888, 61), 'self', False)
        # Processing the call keyword arguments (line 888)
        kwargs_246806 = {}
        # Getting the type of 'GraphicsContextBase' (line 888)
        GraphicsContextBase_246803 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 888, 27), 'GraphicsContextBase', False)
        # Obtaining the member 'get_joinstyle' of a type (line 888)
        get_joinstyle_246804 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 888, 27), GraphicsContextBase_246803, 'get_joinstyle')
        # Calling get_joinstyle(args, kwargs) (line 888)
        get_joinstyle_call_result_246807 = invoke(stypy.reporting.localization.Localization(__file__, 888, 27), get_joinstyle_246804, *[self_246805], **kwargs_246806)
        
        
        # Obtaining an instance of the builtin type 'dict' (line 886)
        dict_246808 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 886, 15), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 886)
        # Adding element type (key, value) (line 886)
        unicode_246809 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 886, 16), 'unicode', u'miter')
        int_246810 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 886, 24), 'int')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 886, 15), dict_246808, (unicode_246809, int_246810))
        # Adding element type (key, value) (line 886)
        unicode_246811 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 887, 16), 'unicode', u'round')
        int_246812 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 887, 24), 'int')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 886, 15), dict_246808, (unicode_246811, int_246812))
        # Adding element type (key, value) (line 886)
        unicode_246813 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 888, 16), 'unicode', u'bevel')
        int_246814 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 888, 24), 'int')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 886, 15), dict_246808, (unicode_246813, int_246814))
        
        # Obtaining the member '__getitem__' of a type (line 886)
        getitem___246815 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 886, 15), dict_246808, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 886)
        subscript_call_result_246816 = invoke(stypy.reporting.localization.Localization(__file__, 886, 15), getitem___246815, get_joinstyle_call_result_246807)
        
        # Assigning a type to the variable 'stypy_return_type' (line 886)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 886, 8), 'stypy_return_type', subscript_call_result_246816)
        
        # ################# End of 'get_joinstyle(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_joinstyle' in the type store
        # Getting the type of 'stypy_return_type' (line 885)
        stypy_return_type_246817 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 885, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_246817)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_joinstyle'
        return stypy_return_type_246817


    @norecursion
    def shouldstroke(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'shouldstroke'
        module_type_store = module_type_store.open_function_context('shouldstroke', 890, 4, False)
        # Assigning a type to the variable 'self' (line 891)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 891, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        GraphicsContextPS.shouldstroke.__dict__.__setitem__('stypy_localization', localization)
        GraphicsContextPS.shouldstroke.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        GraphicsContextPS.shouldstroke.__dict__.__setitem__('stypy_type_store', module_type_store)
        GraphicsContextPS.shouldstroke.__dict__.__setitem__('stypy_function_name', 'GraphicsContextPS.shouldstroke')
        GraphicsContextPS.shouldstroke.__dict__.__setitem__('stypy_param_names_list', [])
        GraphicsContextPS.shouldstroke.__dict__.__setitem__('stypy_varargs_param_name', None)
        GraphicsContextPS.shouldstroke.__dict__.__setitem__('stypy_kwargs_param_name', None)
        GraphicsContextPS.shouldstroke.__dict__.__setitem__('stypy_call_defaults', defaults)
        GraphicsContextPS.shouldstroke.__dict__.__setitem__('stypy_call_varargs', varargs)
        GraphicsContextPS.shouldstroke.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        GraphicsContextPS.shouldstroke.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'GraphicsContextPS.shouldstroke', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'shouldstroke', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'shouldstroke(...)' code ##################

        
        # Evaluating a boolean operation
        
        
        # Call to get_linewidth(...): (line 891)
        # Processing the call keyword arguments (line 891)
        kwargs_246820 = {}
        # Getting the type of 'self' (line 891)
        self_246818 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 891, 16), 'self', False)
        # Obtaining the member 'get_linewidth' of a type (line 891)
        get_linewidth_246819 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 891, 16), self_246818, 'get_linewidth')
        # Calling get_linewidth(args, kwargs) (line 891)
        get_linewidth_call_result_246821 = invoke(stypy.reporting.localization.Localization(__file__, 891, 16), get_linewidth_246819, *[], **kwargs_246820)
        
        float_246822 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 891, 39), 'float')
        # Applying the binary operator '>' (line 891)
        result_gt_246823 = python_operator(stypy.reporting.localization.Localization(__file__, 891, 16), '>', get_linewidth_call_result_246821, float_246822)
        
        
        # Evaluating a boolean operation
        
        
        # Call to len(...): (line 892)
        # Processing the call arguments (line 892)
        
        # Call to get_rgb(...): (line 892)
        # Processing the call keyword arguments (line 892)
        kwargs_246827 = {}
        # Getting the type of 'self' (line 892)
        self_246825 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 892, 21), 'self', False)
        # Obtaining the member 'get_rgb' of a type (line 892)
        get_rgb_246826 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 892, 21), self_246825, 'get_rgb')
        # Calling get_rgb(args, kwargs) (line 892)
        get_rgb_call_result_246828 = invoke(stypy.reporting.localization.Localization(__file__, 892, 21), get_rgb_246826, *[], **kwargs_246827)
        
        # Processing the call keyword arguments (line 892)
        kwargs_246829 = {}
        # Getting the type of 'len' (line 892)
        len_246824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 892, 17), 'len', False)
        # Calling len(args, kwargs) (line 892)
        len_call_result_246830 = invoke(stypy.reporting.localization.Localization(__file__, 892, 17), len_246824, *[get_rgb_call_result_246828], **kwargs_246829)
        
        int_246831 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 892, 40), 'int')
        # Applying the binary operator '<=' (line 892)
        result_le_246832 = python_operator(stypy.reporting.localization.Localization(__file__, 892, 17), '<=', len_call_result_246830, int_246831)
        
        
        
        # Obtaining the type of the subscript
        int_246833 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 892, 60), 'int')
        
        # Call to get_rgb(...): (line 892)
        # Processing the call keyword arguments (line 892)
        kwargs_246836 = {}
        # Getting the type of 'self' (line 892)
        self_246834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 892, 45), 'self', False)
        # Obtaining the member 'get_rgb' of a type (line 892)
        get_rgb_246835 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 892, 45), self_246834, 'get_rgb')
        # Calling get_rgb(args, kwargs) (line 892)
        get_rgb_call_result_246837 = invoke(stypy.reporting.localization.Localization(__file__, 892, 45), get_rgb_246835, *[], **kwargs_246836)
        
        # Obtaining the member '__getitem__' of a type (line 892)
        getitem___246838 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 892, 45), get_rgb_call_result_246837, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 892)
        subscript_call_result_246839 = invoke(stypy.reporting.localization.Localization(__file__, 892, 45), getitem___246838, int_246833)
        
        float_246840 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 892, 66), 'float')
        # Applying the binary operator '!=' (line 892)
        result_ne_246841 = python_operator(stypy.reporting.localization.Localization(__file__, 892, 45), '!=', subscript_call_result_246839, float_246840)
        
        # Applying the binary operator 'or' (line 892)
        result_or_keyword_246842 = python_operator(stypy.reporting.localization.Localization(__file__, 892, 17), 'or', result_le_246832, result_ne_246841)
        
        # Applying the binary operator 'and' (line 891)
        result_and_keyword_246843 = python_operator(stypy.reporting.localization.Localization(__file__, 891, 16), 'and', result_gt_246823, result_or_keyword_246842)
        
        # Assigning a type to the variable 'stypy_return_type' (line 891)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 891, 8), 'stypy_return_type', result_and_keyword_246843)
        
        # ################# End of 'shouldstroke(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'shouldstroke' in the type store
        # Getting the type of 'stypy_return_type' (line 890)
        stypy_return_type_246844 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 890, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_246844)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'shouldstroke'
        return stypy_return_type_246844


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 879, 0, False)
        # Assigning a type to the variable 'self' (line 880)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 880, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'GraphicsContextPS.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'GraphicsContextPS' (line 879)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 879, 0), 'GraphicsContextPS', GraphicsContextPS)
# Declaration of the 'FigureCanvasPS' class
# Getting the type of 'FigureCanvasBase' (line 895)
FigureCanvasBase_246845 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 895, 21), 'FigureCanvasBase')

class FigureCanvasPS(FigureCanvasBase_246845, ):
    
    # Assigning a Name to a Name (line 896):
    
    # Assigning a Num to a Name (line 898):

    @norecursion
    def draw(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'draw'
        module_type_store = module_type_store.open_function_context('draw', 900, 4, False)
        # Assigning a type to the variable 'self' (line 901)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 901, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        FigureCanvasPS.draw.__dict__.__setitem__('stypy_localization', localization)
        FigureCanvasPS.draw.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        FigureCanvasPS.draw.__dict__.__setitem__('stypy_type_store', module_type_store)
        FigureCanvasPS.draw.__dict__.__setitem__('stypy_function_name', 'FigureCanvasPS.draw')
        FigureCanvasPS.draw.__dict__.__setitem__('stypy_param_names_list', [])
        FigureCanvasPS.draw.__dict__.__setitem__('stypy_varargs_param_name', None)
        FigureCanvasPS.draw.__dict__.__setitem__('stypy_kwargs_param_name', None)
        FigureCanvasPS.draw.__dict__.__setitem__('stypy_call_defaults', defaults)
        FigureCanvasPS.draw.__dict__.__setitem__('stypy_call_varargs', varargs)
        FigureCanvasPS.draw.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        FigureCanvasPS.draw.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FigureCanvasPS.draw', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'draw', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'draw(...)' code ##################

        pass
        
        # ################# End of 'draw(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'draw' in the type store
        # Getting the type of 'stypy_return_type' (line 900)
        stypy_return_type_246846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 900, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_246846)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'draw'
        return stypy_return_type_246846

    
    # Assigning a Dict to a Name (line 903):

    @norecursion
    def get_default_filetype(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'get_default_filetype'
        module_type_store = module_type_store.open_function_context('get_default_filetype', 906, 4, False)
        # Assigning a type to the variable 'self' (line 907)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 907, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        FigureCanvasPS.get_default_filetype.__dict__.__setitem__('stypy_localization', localization)
        FigureCanvasPS.get_default_filetype.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        FigureCanvasPS.get_default_filetype.__dict__.__setitem__('stypy_type_store', module_type_store)
        FigureCanvasPS.get_default_filetype.__dict__.__setitem__('stypy_function_name', 'FigureCanvasPS.get_default_filetype')
        FigureCanvasPS.get_default_filetype.__dict__.__setitem__('stypy_param_names_list', [])
        FigureCanvasPS.get_default_filetype.__dict__.__setitem__('stypy_varargs_param_name', None)
        FigureCanvasPS.get_default_filetype.__dict__.__setitem__('stypy_kwargs_param_name', None)
        FigureCanvasPS.get_default_filetype.__dict__.__setitem__('stypy_call_defaults', defaults)
        FigureCanvasPS.get_default_filetype.__dict__.__setitem__('stypy_call_varargs', varargs)
        FigureCanvasPS.get_default_filetype.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        FigureCanvasPS.get_default_filetype.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FigureCanvasPS.get_default_filetype', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_default_filetype', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_default_filetype(...)' code ##################

        unicode_246847 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 907, 15), 'unicode', u'ps')
        # Assigning a type to the variable 'stypy_return_type' (line 907)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 907, 8), 'stypy_return_type', unicode_246847)
        
        # ################# End of 'get_default_filetype(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_default_filetype' in the type store
        # Getting the type of 'stypy_return_type' (line 906)
        stypy_return_type_246848 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 906, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_246848)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_default_filetype'
        return stypy_return_type_246848


    @norecursion
    def print_ps(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'print_ps'
        module_type_store = module_type_store.open_function_context('print_ps', 909, 4, False)
        # Assigning a type to the variable 'self' (line 910)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 910, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        FigureCanvasPS.print_ps.__dict__.__setitem__('stypy_localization', localization)
        FigureCanvasPS.print_ps.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        FigureCanvasPS.print_ps.__dict__.__setitem__('stypy_type_store', module_type_store)
        FigureCanvasPS.print_ps.__dict__.__setitem__('stypy_function_name', 'FigureCanvasPS.print_ps')
        FigureCanvasPS.print_ps.__dict__.__setitem__('stypy_param_names_list', ['outfile'])
        FigureCanvasPS.print_ps.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        FigureCanvasPS.print_ps.__dict__.__setitem__('stypy_kwargs_param_name', 'kwargs')
        FigureCanvasPS.print_ps.__dict__.__setitem__('stypy_call_defaults', defaults)
        FigureCanvasPS.print_ps.__dict__.__setitem__('stypy_call_varargs', varargs)
        FigureCanvasPS.print_ps.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        FigureCanvasPS.print_ps.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FigureCanvasPS.print_ps', ['outfile'], 'args', 'kwargs', defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'print_ps', localization, ['outfile'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'print_ps(...)' code ##################

        
        # Call to _print_ps(...): (line 910)
        # Processing the call arguments (line 910)
        # Getting the type of 'outfile' (line 910)
        outfile_246851 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 910, 30), 'outfile', False)
        unicode_246852 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 910, 39), 'unicode', u'ps')
        # Getting the type of 'args' (line 910)
        args_246853 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 910, 46), 'args', False)
        # Processing the call keyword arguments (line 910)
        # Getting the type of 'kwargs' (line 910)
        kwargs_246854 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 910, 54), 'kwargs', False)
        kwargs_246855 = {'kwargs_246854': kwargs_246854}
        # Getting the type of 'self' (line 910)
        self_246849 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 910, 15), 'self', False)
        # Obtaining the member '_print_ps' of a type (line 910)
        _print_ps_246850 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 910, 15), self_246849, '_print_ps')
        # Calling _print_ps(args, kwargs) (line 910)
        _print_ps_call_result_246856 = invoke(stypy.reporting.localization.Localization(__file__, 910, 15), _print_ps_246850, *[outfile_246851, unicode_246852, args_246853], **kwargs_246855)
        
        # Assigning a type to the variable 'stypy_return_type' (line 910)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 910, 8), 'stypy_return_type', _print_ps_call_result_246856)
        
        # ################# End of 'print_ps(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'print_ps' in the type store
        # Getting the type of 'stypy_return_type' (line 909)
        stypy_return_type_246857 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 909, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_246857)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'print_ps'
        return stypy_return_type_246857


    @norecursion
    def print_eps(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'print_eps'
        module_type_store = module_type_store.open_function_context('print_eps', 912, 4, False)
        # Assigning a type to the variable 'self' (line 913)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 913, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        FigureCanvasPS.print_eps.__dict__.__setitem__('stypy_localization', localization)
        FigureCanvasPS.print_eps.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        FigureCanvasPS.print_eps.__dict__.__setitem__('stypy_type_store', module_type_store)
        FigureCanvasPS.print_eps.__dict__.__setitem__('stypy_function_name', 'FigureCanvasPS.print_eps')
        FigureCanvasPS.print_eps.__dict__.__setitem__('stypy_param_names_list', ['outfile'])
        FigureCanvasPS.print_eps.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        FigureCanvasPS.print_eps.__dict__.__setitem__('stypy_kwargs_param_name', 'kwargs')
        FigureCanvasPS.print_eps.__dict__.__setitem__('stypy_call_defaults', defaults)
        FigureCanvasPS.print_eps.__dict__.__setitem__('stypy_call_varargs', varargs)
        FigureCanvasPS.print_eps.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        FigureCanvasPS.print_eps.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FigureCanvasPS.print_eps', ['outfile'], 'args', 'kwargs', defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'print_eps', localization, ['outfile'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'print_eps(...)' code ##################

        
        # Call to _print_ps(...): (line 913)
        # Processing the call arguments (line 913)
        # Getting the type of 'outfile' (line 913)
        outfile_246860 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 913, 30), 'outfile', False)
        unicode_246861 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 913, 39), 'unicode', u'eps')
        # Getting the type of 'args' (line 913)
        args_246862 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 913, 47), 'args', False)
        # Processing the call keyword arguments (line 913)
        # Getting the type of 'kwargs' (line 913)
        kwargs_246863 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 913, 55), 'kwargs', False)
        kwargs_246864 = {'kwargs_246863': kwargs_246863}
        # Getting the type of 'self' (line 913)
        self_246858 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 913, 15), 'self', False)
        # Obtaining the member '_print_ps' of a type (line 913)
        _print_ps_246859 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 913, 15), self_246858, '_print_ps')
        # Calling _print_ps(args, kwargs) (line 913)
        _print_ps_call_result_246865 = invoke(stypy.reporting.localization.Localization(__file__, 913, 15), _print_ps_246859, *[outfile_246860, unicode_246861, args_246862], **kwargs_246864)
        
        # Assigning a type to the variable 'stypy_return_type' (line 913)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 913, 8), 'stypy_return_type', _print_ps_call_result_246865)
        
        # ################# End of 'print_eps(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'print_eps' in the type store
        # Getting the type of 'stypy_return_type' (line 912)
        stypy_return_type_246866 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 912, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_246866)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'print_eps'
        return stypy_return_type_246866


    @norecursion
    def _print_ps(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_print_ps'
        module_type_store = module_type_store.open_function_context('_print_ps', 915, 4, False)
        # Assigning a type to the variable 'self' (line 916)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 916, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        FigureCanvasPS._print_ps.__dict__.__setitem__('stypy_localization', localization)
        FigureCanvasPS._print_ps.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        FigureCanvasPS._print_ps.__dict__.__setitem__('stypy_type_store', module_type_store)
        FigureCanvasPS._print_ps.__dict__.__setitem__('stypy_function_name', 'FigureCanvasPS._print_ps')
        FigureCanvasPS._print_ps.__dict__.__setitem__('stypy_param_names_list', ['outfile', 'format'])
        FigureCanvasPS._print_ps.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        FigureCanvasPS._print_ps.__dict__.__setitem__('stypy_kwargs_param_name', 'kwargs')
        FigureCanvasPS._print_ps.__dict__.__setitem__('stypy_call_defaults', defaults)
        FigureCanvasPS._print_ps.__dict__.__setitem__('stypy_call_varargs', varargs)
        FigureCanvasPS._print_ps.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        FigureCanvasPS._print_ps.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FigureCanvasPS._print_ps', ['outfile', 'format'], 'args', 'kwargs', defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_print_ps', localization, ['outfile', 'format'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_print_ps(...)' code ##################

        
        # Assigning a Call to a Name (line 916):
        
        # Assigning a Call to a Name (line 916):
        
        # Call to pop(...): (line 916)
        # Processing the call arguments (line 916)
        unicode_246869 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 916, 31), 'unicode', u'papertype')
        
        # Obtaining the type of the subscript
        unicode_246870 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 916, 53), 'unicode', u'ps.papersize')
        # Getting the type of 'rcParams' (line 916)
        rcParams_246871 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 916, 44), 'rcParams', False)
        # Obtaining the member '__getitem__' of a type (line 916)
        getitem___246872 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 916, 44), rcParams_246871, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 916)
        subscript_call_result_246873 = invoke(stypy.reporting.localization.Localization(__file__, 916, 44), getitem___246872, unicode_246870)
        
        # Processing the call keyword arguments (line 916)
        kwargs_246874 = {}
        # Getting the type of 'kwargs' (line 916)
        kwargs_246867 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 916, 20), 'kwargs', False)
        # Obtaining the member 'pop' of a type (line 916)
        pop_246868 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 916, 20), kwargs_246867, 'pop')
        # Calling pop(args, kwargs) (line 916)
        pop_call_result_246875 = invoke(stypy.reporting.localization.Localization(__file__, 916, 20), pop_246868, *[unicode_246869, subscript_call_result_246873], **kwargs_246874)
        
        # Assigning a type to the variable 'papertype' (line 916)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 916, 8), 'papertype', pop_call_result_246875)
        
        # Assigning a Call to a Name (line 917):
        
        # Assigning a Call to a Name (line 917):
        
        # Call to lower(...): (line 917)
        # Processing the call keyword arguments (line 917)
        kwargs_246878 = {}
        # Getting the type of 'papertype' (line 917)
        papertype_246876 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 917, 20), 'papertype', False)
        # Obtaining the member 'lower' of a type (line 917)
        lower_246877 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 917, 20), papertype_246876, 'lower')
        # Calling lower(args, kwargs) (line 917)
        lower_call_result_246879 = invoke(stypy.reporting.localization.Localization(__file__, 917, 20), lower_246877, *[], **kwargs_246878)
        
        # Assigning a type to the variable 'papertype' (line 917)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 917, 8), 'papertype', lower_call_result_246879)
        
        
        # Getting the type of 'papertype' (line 918)
        papertype_246880 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 918, 11), 'papertype')
        unicode_246881 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 918, 24), 'unicode', u'auto')
        # Applying the binary operator '==' (line 918)
        result_eq_246882 = python_operator(stypy.reporting.localization.Localization(__file__, 918, 11), '==', papertype_246880, unicode_246881)
        
        # Testing the type of an if condition (line 918)
        if_condition_246883 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 918, 8), result_eq_246882)
        # Assigning a type to the variable 'if_condition_246883' (line 918)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 918, 8), 'if_condition_246883', if_condition_246883)
        # SSA begins for if statement (line 918)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        pass
        # SSA branch for the else part of an if statement (line 918)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'papertype' (line 920)
        papertype_246884 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 920, 13), 'papertype')
        # Getting the type of 'papersize' (line 920)
        papersize_246885 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 920, 30), 'papersize')
        # Applying the binary operator 'notin' (line 920)
        result_contains_246886 = python_operator(stypy.reporting.localization.Localization(__file__, 920, 13), 'notin', papertype_246884, papersize_246885)
        
        # Testing the type of an if condition (line 920)
        if_condition_246887 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 920, 13), result_contains_246886)
        # Assigning a type to the variable 'if_condition_246887' (line 920)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 920, 13), 'if_condition_246887', if_condition_246887)
        # SSA begins for if statement (line 920)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to RuntimeError(...): (line 921)
        # Processing the call arguments (line 921)
        unicode_246889 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 921, 31), 'unicode', u'%s is not a valid papertype. Use one of %s')
        
        # Obtaining an instance of the builtin type 'tuple' (line 922)
        tuple_246890 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 922, 32), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 922)
        # Adding element type (line 922)
        # Getting the type of 'papertype' (line 922)
        papertype_246891 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 922, 32), 'papertype', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 922, 32), tuple_246890, papertype_246891)
        # Adding element type (line 922)
        
        # Call to join(...): (line 922)
        # Processing the call arguments (line 922)
        # Getting the type of 'papersize' (line 922)
        papersize_246894 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 922, 53), 'papersize', False)
        # Processing the call keyword arguments (line 922)
        kwargs_246895 = {}
        unicode_246892 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 922, 43), 'unicode', u', ')
        # Obtaining the member 'join' of a type (line 922)
        join_246893 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 922, 43), unicode_246892, 'join')
        # Calling join(args, kwargs) (line 922)
        join_call_result_246896 = invoke(stypy.reporting.localization.Localization(__file__, 922, 43), join_246893, *[papersize_246894], **kwargs_246895)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 922, 32), tuple_246890, join_call_result_246896)
        
        # Applying the binary operator '%' (line 921)
        result_mod_246897 = python_operator(stypy.reporting.localization.Localization(__file__, 921, 31), '%', unicode_246889, tuple_246890)
        
        # Processing the call keyword arguments (line 921)
        kwargs_246898 = {}
        # Getting the type of 'RuntimeError' (line 921)
        RuntimeError_246888 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 921, 18), 'RuntimeError', False)
        # Calling RuntimeError(args, kwargs) (line 921)
        RuntimeError_call_result_246899 = invoke(stypy.reporting.localization.Localization(__file__, 921, 18), RuntimeError_246888, *[result_mod_246897], **kwargs_246898)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 921, 12), RuntimeError_call_result_246899, 'raise parameter', BaseException)
        # SSA join for if statement (line 920)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 918)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 924):
        
        # Assigning a Call to a Name (line 924):
        
        # Call to lower(...): (line 924)
        # Processing the call keyword arguments (line 924)
        kwargs_246907 = {}
        
        # Call to pop(...): (line 924)
        # Processing the call arguments (line 924)
        unicode_246902 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 924, 33), 'unicode', u'orientation')
        unicode_246903 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 924, 48), 'unicode', u'portrait')
        # Processing the call keyword arguments (line 924)
        kwargs_246904 = {}
        # Getting the type of 'kwargs' (line 924)
        kwargs_246900 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 924, 22), 'kwargs', False)
        # Obtaining the member 'pop' of a type (line 924)
        pop_246901 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 924, 22), kwargs_246900, 'pop')
        # Calling pop(args, kwargs) (line 924)
        pop_call_result_246905 = invoke(stypy.reporting.localization.Localization(__file__, 924, 22), pop_246901, *[unicode_246902, unicode_246903], **kwargs_246904)
        
        # Obtaining the member 'lower' of a type (line 924)
        lower_246906 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 924, 22), pop_call_result_246905, 'lower')
        # Calling lower(args, kwargs) (line 924)
        lower_call_result_246908 = invoke(stypy.reporting.localization.Localization(__file__, 924, 22), lower_246906, *[], **kwargs_246907)
        
        # Assigning a type to the variable 'orientation' (line 924)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 924, 8), 'orientation', lower_call_result_246908)
        
        
        # Getting the type of 'orientation' (line 925)
        orientation_246909 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 925, 11), 'orientation')
        unicode_246910 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 925, 26), 'unicode', u'landscape')
        # Applying the binary operator '==' (line 925)
        result_eq_246911 = python_operator(stypy.reporting.localization.Localization(__file__, 925, 11), '==', orientation_246909, unicode_246910)
        
        # Testing the type of an if condition (line 925)
        if_condition_246912 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 925, 8), result_eq_246911)
        # Assigning a type to the variable 'if_condition_246912' (line 925)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 925, 8), 'if_condition_246912', if_condition_246912)
        # SSA begins for if statement (line 925)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Name to a Name (line 925):
        
        # Assigning a Name to a Name (line 925):
        # Getting the type of 'True' (line 925)
        True_246913 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 925, 53), 'True')
        # Assigning a type to the variable 'isLandscape' (line 925)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 925, 39), 'isLandscape', True_246913)
        # SSA branch for the else part of an if statement (line 925)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'orientation' (line 926)
        orientation_246914 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 926, 13), 'orientation')
        unicode_246915 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 926, 28), 'unicode', u'portrait')
        # Applying the binary operator '==' (line 926)
        result_eq_246916 = python_operator(stypy.reporting.localization.Localization(__file__, 926, 13), '==', orientation_246914, unicode_246915)
        
        # Testing the type of an if condition (line 926)
        if_condition_246917 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 926, 13), result_eq_246916)
        # Assigning a type to the variable 'if_condition_246917' (line 926)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 926, 13), 'if_condition_246917', if_condition_246917)
        # SSA begins for if statement (line 926)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Name to a Name (line 926):
        
        # Assigning a Name to a Name (line 926):
        # Getting the type of 'False' (line 926)
        False_246918 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 926, 54), 'False')
        # Assigning a type to the variable 'isLandscape' (line 926)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 926, 40), 'isLandscape', False_246918)
        # SSA branch for the else part of an if statement (line 926)
        module_type_store.open_ssa_branch('else')
        
        # Call to RuntimeError(...): (line 927)
        # Processing the call arguments (line 927)
        unicode_246920 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 927, 33), 'unicode', u'Orientation must be "portrait" or "landscape"')
        # Processing the call keyword arguments (line 927)
        kwargs_246921 = {}
        # Getting the type of 'RuntimeError' (line 927)
        RuntimeError_246919 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 927, 20), 'RuntimeError', False)
        # Calling RuntimeError(args, kwargs) (line 927)
        RuntimeError_call_result_246922 = invoke(stypy.reporting.localization.Localization(__file__, 927, 20), RuntimeError_246919, *[unicode_246920], **kwargs_246921)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 927, 14), RuntimeError_call_result_246922, 'raise parameter', BaseException)
        # SSA join for if statement (line 926)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 925)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to set_dpi(...): (line 929)
        # Processing the call arguments (line 929)
        int_246926 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 929, 28), 'int')
        # Processing the call keyword arguments (line 929)
        kwargs_246927 = {}
        # Getting the type of 'self' (line 929)
        self_246923 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 929, 8), 'self', False)
        # Obtaining the member 'figure' of a type (line 929)
        figure_246924 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 929, 8), self_246923, 'figure')
        # Obtaining the member 'set_dpi' of a type (line 929)
        set_dpi_246925 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 929, 8), figure_246924, 'set_dpi')
        # Calling set_dpi(args, kwargs) (line 929)
        set_dpi_call_result_246928 = invoke(stypy.reporting.localization.Localization(__file__, 929, 8), set_dpi_246925, *[int_246926], **kwargs_246927)
        
        
        # Assigning a Call to a Name (line 930):
        
        # Assigning a Call to a Name (line 930):
        
        # Call to pop(...): (line 930)
        # Processing the call arguments (line 930)
        unicode_246931 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 930, 30), 'unicode', u'dpi')
        int_246932 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 930, 37), 'int')
        # Processing the call keyword arguments (line 930)
        kwargs_246933 = {}
        # Getting the type of 'kwargs' (line 930)
        kwargs_246929 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 930, 19), 'kwargs', False)
        # Obtaining the member 'pop' of a type (line 930)
        pop_246930 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 930, 19), kwargs_246929, 'pop')
        # Calling pop(args, kwargs) (line 930)
        pop_call_result_246934 = invoke(stypy.reporting.localization.Localization(__file__, 930, 19), pop_246930, *[unicode_246931, int_246932], **kwargs_246933)
        
        # Assigning a type to the variable 'imagedpi' (line 930)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 930, 8), 'imagedpi', pop_call_result_246934)
        
        # Assigning a Call to a Name (line 931):
        
        # Assigning a Call to a Name (line 931):
        
        # Call to pop(...): (line 931)
        # Processing the call arguments (line 931)
        unicode_246937 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 931, 31), 'unicode', u'facecolor')
        unicode_246938 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 931, 44), 'unicode', u'w')
        # Processing the call keyword arguments (line 931)
        kwargs_246939 = {}
        # Getting the type of 'kwargs' (line 931)
        kwargs_246935 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 931, 20), 'kwargs', False)
        # Obtaining the member 'pop' of a type (line 931)
        pop_246936 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 931, 20), kwargs_246935, 'pop')
        # Calling pop(args, kwargs) (line 931)
        pop_call_result_246940 = invoke(stypy.reporting.localization.Localization(__file__, 931, 20), pop_246936, *[unicode_246937, unicode_246938], **kwargs_246939)
        
        # Assigning a type to the variable 'facecolor' (line 931)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 931, 8), 'facecolor', pop_call_result_246940)
        
        # Assigning a Call to a Name (line 932):
        
        # Assigning a Call to a Name (line 932):
        
        # Call to pop(...): (line 932)
        # Processing the call arguments (line 932)
        unicode_246943 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 932, 31), 'unicode', u'edgecolor')
        unicode_246944 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 932, 44), 'unicode', u'w')
        # Processing the call keyword arguments (line 932)
        kwargs_246945 = {}
        # Getting the type of 'kwargs' (line 932)
        kwargs_246941 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 932, 20), 'kwargs', False)
        # Obtaining the member 'pop' of a type (line 932)
        pop_246942 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 932, 20), kwargs_246941, 'pop')
        # Calling pop(args, kwargs) (line 932)
        pop_call_result_246946 = invoke(stypy.reporting.localization.Localization(__file__, 932, 20), pop_246942, *[unicode_246943, unicode_246944], **kwargs_246945)
        
        # Assigning a type to the variable 'edgecolor' (line 932)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 932, 8), 'edgecolor', pop_call_result_246946)
        
        
        # Obtaining the type of the subscript
        unicode_246947 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 934, 20), 'unicode', u'text.usetex')
        # Getting the type of 'rcParams' (line 934)
        rcParams_246948 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 934, 11), 'rcParams')
        # Obtaining the member '__getitem__' of a type (line 934)
        getitem___246949 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 934, 11), rcParams_246948, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 934)
        subscript_call_result_246950 = invoke(stypy.reporting.localization.Localization(__file__, 934, 11), getitem___246949, unicode_246947)
        
        # Testing the type of an if condition (line 934)
        if_condition_246951 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 934, 8), subscript_call_result_246950)
        # Assigning a type to the variable 'if_condition_246951' (line 934)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 934, 8), 'if_condition_246951', if_condition_246951)
        # SSA begins for if statement (line 934)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to _print_figure_tex(...): (line 935)
        # Processing the call arguments (line 935)
        # Getting the type of 'outfile' (line 935)
        outfile_246954 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 935, 35), 'outfile', False)
        # Getting the type of 'format' (line 935)
        format_246955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 935, 44), 'format', False)
        # Getting the type of 'imagedpi' (line 935)
        imagedpi_246956 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 935, 52), 'imagedpi', False)
        # Getting the type of 'facecolor' (line 935)
        facecolor_246957 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 935, 62), 'facecolor', False)
        # Getting the type of 'edgecolor' (line 935)
        edgecolor_246958 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 935, 73), 'edgecolor', False)
        # Getting the type of 'orientation' (line 936)
        orientation_246959 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 936, 35), 'orientation', False)
        # Getting the type of 'isLandscape' (line 936)
        isLandscape_246960 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 936, 48), 'isLandscape', False)
        # Getting the type of 'papertype' (line 936)
        papertype_246961 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 936, 61), 'papertype', False)
        # Processing the call keyword arguments (line 935)
        # Getting the type of 'kwargs' (line 937)
        kwargs_246962 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 937, 37), 'kwargs', False)
        kwargs_246963 = {'kwargs_246962': kwargs_246962}
        # Getting the type of 'self' (line 935)
        self_246952 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 935, 12), 'self', False)
        # Obtaining the member '_print_figure_tex' of a type (line 935)
        _print_figure_tex_246953 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 935, 12), self_246952, '_print_figure_tex')
        # Calling _print_figure_tex(args, kwargs) (line 935)
        _print_figure_tex_call_result_246964 = invoke(stypy.reporting.localization.Localization(__file__, 935, 12), _print_figure_tex_246953, *[outfile_246954, format_246955, imagedpi_246956, facecolor_246957, edgecolor_246958, orientation_246959, isLandscape_246960, papertype_246961], **kwargs_246963)
        
        # SSA branch for the else part of an if statement (line 934)
        module_type_store.open_ssa_branch('else')
        
        # Call to _print_figure(...): (line 939)
        # Processing the call arguments (line 939)
        # Getting the type of 'outfile' (line 939)
        outfile_246967 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 939, 31), 'outfile', False)
        # Getting the type of 'format' (line 939)
        format_246968 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 939, 40), 'format', False)
        # Getting the type of 'imagedpi' (line 939)
        imagedpi_246969 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 939, 48), 'imagedpi', False)
        # Getting the type of 'facecolor' (line 939)
        facecolor_246970 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 939, 58), 'facecolor', False)
        # Getting the type of 'edgecolor' (line 939)
        edgecolor_246971 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 939, 69), 'edgecolor', False)
        # Getting the type of 'orientation' (line 940)
        orientation_246972 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 940, 31), 'orientation', False)
        # Getting the type of 'isLandscape' (line 940)
        isLandscape_246973 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 940, 44), 'isLandscape', False)
        # Getting the type of 'papertype' (line 940)
        papertype_246974 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 940, 57), 'papertype', False)
        # Processing the call keyword arguments (line 939)
        # Getting the type of 'kwargs' (line 941)
        kwargs_246975 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 941, 33), 'kwargs', False)
        kwargs_246976 = {'kwargs_246975': kwargs_246975}
        # Getting the type of 'self' (line 939)
        self_246965 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 939, 12), 'self', False)
        # Obtaining the member '_print_figure' of a type (line 939)
        _print_figure_246966 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 939, 12), self_246965, '_print_figure')
        # Calling _print_figure(args, kwargs) (line 939)
        _print_figure_call_result_246977 = invoke(stypy.reporting.localization.Localization(__file__, 939, 12), _print_figure_246966, *[outfile_246967, format_246968, imagedpi_246969, facecolor_246970, edgecolor_246971, orientation_246972, isLandscape_246973, papertype_246974], **kwargs_246976)
        
        # SSA join for if statement (line 934)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of '_print_ps(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_print_ps' in the type store
        # Getting the type of 'stypy_return_type' (line 915)
        stypy_return_type_246978 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 915, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_246978)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_print_ps'
        return stypy_return_type_246978


    @norecursion
    def _print_figure(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        int_246979 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 943, 49), 'int')
        unicode_246980 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 943, 63), 'unicode', u'w')
        unicode_246981 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 943, 78), 'unicode', u'w')
        unicode_246982 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 944, 34), 'unicode', u'portrait')
        # Getting the type of 'False' (line 944)
        False_246983 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 944, 58), 'False')
        # Getting the type of 'None' (line 944)
        None_246984 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 944, 75), 'None')
        # Getting the type of 'None' (line 945)
        None_246985 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 945, 31), 'None')
        defaults = [int_246979, unicode_246980, unicode_246981, unicode_246982, False_246983, None_246984, None_246985]
        # Create a new context for function '_print_figure'
        module_type_store = module_type_store.open_function_context('_print_figure', 943, 4, False)
        # Assigning a type to the variable 'self' (line 944)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 944, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        FigureCanvasPS._print_figure.__dict__.__setitem__('stypy_localization', localization)
        FigureCanvasPS._print_figure.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        FigureCanvasPS._print_figure.__dict__.__setitem__('stypy_type_store', module_type_store)
        FigureCanvasPS._print_figure.__dict__.__setitem__('stypy_function_name', 'FigureCanvasPS._print_figure')
        FigureCanvasPS._print_figure.__dict__.__setitem__('stypy_param_names_list', ['outfile', 'format', 'dpi', 'facecolor', 'edgecolor', 'orientation', 'isLandscape', 'papertype', 'metadata'])
        FigureCanvasPS._print_figure.__dict__.__setitem__('stypy_varargs_param_name', None)
        FigureCanvasPS._print_figure.__dict__.__setitem__('stypy_kwargs_param_name', 'kwargs')
        FigureCanvasPS._print_figure.__dict__.__setitem__('stypy_call_defaults', defaults)
        FigureCanvasPS._print_figure.__dict__.__setitem__('stypy_call_varargs', varargs)
        FigureCanvasPS._print_figure.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        FigureCanvasPS._print_figure.__dict__.__setitem__('stypy_declared_arg_number', 10)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FigureCanvasPS._print_figure', ['outfile', 'format', 'dpi', 'facecolor', 'edgecolor', 'orientation', 'isLandscape', 'papertype', 'metadata'], None, 'kwargs', defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_print_figure', localization, ['outfile', 'format', 'dpi', 'facecolor', 'edgecolor', 'orientation', 'isLandscape', 'papertype', 'metadata'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_print_figure(...)' code ##################

        unicode_246986 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 961, (-1)), 'unicode', u"\n        Render the figure to hardcopy.  Set the figure patch face and\n        edge colors.  This is useful because some of the GUIs have a\n        gray figure face color background and you'll probably want to\n        override this on hardcopy\n\n        If outfile is a string, it is interpreted as a file name.\n        If the extension matches .ep* write encapsulated postscript,\n        otherwise write a stand-alone PostScript file.\n\n        If outfile is a file object, a stand-alone PostScript file is\n        written into this file object.\n\n        metadata must be a dictionary. Currently, only the value for\n        the key 'Creator' is used.\n        ")
        
        # Assigning a Compare to a Name (line 962):
        
        # Assigning a Compare to a Name (line 962):
        
        # Getting the type of 'format' (line 962)
        format_246987 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 962, 17), 'format')
        unicode_246988 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 962, 27), 'unicode', u'eps')
        # Applying the binary operator '==' (line 962)
        result_eq_246989 = python_operator(stypy.reporting.localization.Localization(__file__, 962, 17), '==', format_246987, unicode_246988)
        
        # Assigning a type to the variable 'isEPSF' (line 962)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 962, 8), 'isEPSF', result_eq_246989)
        
        # Assigning a Name to a Name (line 963):
        
        # Assigning a Name to a Name (line 963):
        # Getting the type of 'False' (line 963)
        False_246990 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 963, 32), 'False')
        # Assigning a type to the variable 'passed_in_file_object' (line 963)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 963, 8), 'passed_in_file_object', False_246990)
        
        
        # Call to isinstance(...): (line 964)
        # Processing the call arguments (line 964)
        # Getting the type of 'outfile' (line 964)
        outfile_246992 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 964, 22), 'outfile', False)
        # Getting the type of 'six' (line 964)
        six_246993 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 964, 31), 'six', False)
        # Obtaining the member 'string_types' of a type (line 964)
        string_types_246994 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 964, 31), six_246993, 'string_types')
        # Processing the call keyword arguments (line 964)
        kwargs_246995 = {}
        # Getting the type of 'isinstance' (line 964)
        isinstance_246991 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 964, 11), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 964)
        isinstance_call_result_246996 = invoke(stypy.reporting.localization.Localization(__file__, 964, 11), isinstance_246991, *[outfile_246992, string_types_246994], **kwargs_246995)
        
        # Testing the type of an if condition (line 964)
        if_condition_246997 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 964, 8), isinstance_call_result_246996)
        # Assigning a type to the variable 'if_condition_246997' (line 964)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 964, 8), 'if_condition_246997', if_condition_246997)
        # SSA begins for if statement (line 964)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Name to a Name (line 965):
        
        # Assigning a Name to a Name (line 965):
        # Getting the type of 'outfile' (line 965)
        outfile_246998 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 965, 20), 'outfile')
        # Assigning a type to the variable 'title' (line 965)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 965, 12), 'title', outfile_246998)
        # SSA branch for the else part of an if statement (line 964)
        module_type_store.open_ssa_branch('else')
        
        
        # Call to is_writable_file_like(...): (line 966)
        # Processing the call arguments (line 966)
        # Getting the type of 'outfile' (line 966)
        outfile_247000 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 966, 35), 'outfile', False)
        # Processing the call keyword arguments (line 966)
        kwargs_247001 = {}
        # Getting the type of 'is_writable_file_like' (line 966)
        is_writable_file_like_246999 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 966, 13), 'is_writable_file_like', False)
        # Calling is_writable_file_like(args, kwargs) (line 966)
        is_writable_file_like_call_result_247002 = invoke(stypy.reporting.localization.Localization(__file__, 966, 13), is_writable_file_like_246999, *[outfile_247000], **kwargs_247001)
        
        # Testing the type of an if condition (line 966)
        if_condition_247003 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 966, 13), is_writable_file_like_call_result_247002)
        # Assigning a type to the variable 'if_condition_247003' (line 966)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 966, 13), 'if_condition_247003', if_condition_247003)
        # SSA begins for if statement (line 966)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Name to a Name (line 967):
        
        # Assigning a Name to a Name (line 967):
        # Getting the type of 'None' (line 967)
        None_247004 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 967, 20), 'None')
        # Assigning a type to the variable 'title' (line 967)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 967, 12), 'title', None_247004)
        
        # Assigning a Name to a Name (line 968):
        
        # Assigning a Name to a Name (line 968):
        # Getting the type of 'True' (line 968)
        True_247005 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 968, 36), 'True')
        # Assigning a type to the variable 'passed_in_file_object' (line 968)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 968, 12), 'passed_in_file_object', True_247005)
        # SSA branch for the else part of an if statement (line 966)
        module_type_store.open_ssa_branch('else')
        
        # Call to ValueError(...): (line 970)
        # Processing the call arguments (line 970)
        unicode_247007 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 970, 29), 'unicode', u'outfile must be a path or a file-like object')
        # Processing the call keyword arguments (line 970)
        kwargs_247008 = {}
        # Getting the type of 'ValueError' (line 970)
        ValueError_247006 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 970, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 970)
        ValueError_call_result_247009 = invoke(stypy.reporting.localization.Localization(__file__, 970, 18), ValueError_247006, *[unicode_247007], **kwargs_247008)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 970, 12), ValueError_call_result_247009, 'raise parameter', BaseException)
        # SSA join for if statement (line 966)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 964)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Tuple (line 973):
        
        # Assigning a Call to a Name:
        
        # Call to get_size_inches(...): (line 973)
        # Processing the call keyword arguments (line 973)
        kwargs_247013 = {}
        # Getting the type of 'self' (line 973)
        self_247010 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 973, 24), 'self', False)
        # Obtaining the member 'figure' of a type (line 973)
        figure_247011 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 973, 24), self_247010, 'figure')
        # Obtaining the member 'get_size_inches' of a type (line 973)
        get_size_inches_247012 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 973, 24), figure_247011, 'get_size_inches')
        # Calling get_size_inches(args, kwargs) (line 973)
        get_size_inches_call_result_247014 = invoke(stypy.reporting.localization.Localization(__file__, 973, 24), get_size_inches_247012, *[], **kwargs_247013)
        
        # Assigning a type to the variable 'call_assignment_243755' (line 973)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 973, 8), 'call_assignment_243755', get_size_inches_call_result_247014)
        
        # Assigning a Call to a Name (line 973):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_247017 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 973, 8), 'int')
        # Processing the call keyword arguments
        kwargs_247018 = {}
        # Getting the type of 'call_assignment_243755' (line 973)
        call_assignment_243755_247015 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 973, 8), 'call_assignment_243755', False)
        # Obtaining the member '__getitem__' of a type (line 973)
        getitem___247016 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 973, 8), call_assignment_243755_247015, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_247019 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___247016, *[int_247017], **kwargs_247018)
        
        # Assigning a type to the variable 'call_assignment_243756' (line 973)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 973, 8), 'call_assignment_243756', getitem___call_result_247019)
        
        # Assigning a Name to a Name (line 973):
        # Getting the type of 'call_assignment_243756' (line 973)
        call_assignment_243756_247020 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 973, 8), 'call_assignment_243756')
        # Assigning a type to the variable 'width' (line 973)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 973, 8), 'width', call_assignment_243756_247020)
        
        # Assigning a Call to a Name (line 973):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_247023 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 973, 8), 'int')
        # Processing the call keyword arguments
        kwargs_247024 = {}
        # Getting the type of 'call_assignment_243755' (line 973)
        call_assignment_243755_247021 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 973, 8), 'call_assignment_243755', False)
        # Obtaining the member '__getitem__' of a type (line 973)
        getitem___247022 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 973, 8), call_assignment_243755_247021, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_247025 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___247022, *[int_247023], **kwargs_247024)
        
        # Assigning a type to the variable 'call_assignment_243757' (line 973)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 973, 8), 'call_assignment_243757', getitem___call_result_247025)
        
        # Assigning a Name to a Name (line 973):
        # Getting the type of 'call_assignment_243757' (line 973)
        call_assignment_243757_247026 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 973, 8), 'call_assignment_243757')
        # Assigning a type to the variable 'height' (line 973)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 973, 15), 'height', call_assignment_243757_247026)
        
        
        # Getting the type of 'papertype' (line 974)
        papertype_247027 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 974, 11), 'papertype')
        unicode_247028 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 974, 24), 'unicode', u'auto')
        # Applying the binary operator '==' (line 974)
        result_eq_247029 = python_operator(stypy.reporting.localization.Localization(__file__, 974, 11), '==', papertype_247027, unicode_247028)
        
        # Testing the type of an if condition (line 974)
        if_condition_247030 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 974, 8), result_eq_247029)
        # Assigning a type to the variable 'if_condition_247030' (line 974)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 974, 8), 'if_condition_247030', if_condition_247030)
        # SSA begins for if statement (line 974)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'isLandscape' (line 975)
        isLandscape_247031 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 975, 15), 'isLandscape')
        # Testing the type of an if condition (line 975)
        if_condition_247032 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 975, 12), isLandscape_247031)
        # Assigning a type to the variable 'if_condition_247032' (line 975)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 975, 12), 'if_condition_247032', if_condition_247032)
        # SSA begins for if statement (line 975)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 975):
        
        # Assigning a Call to a Name (line 975):
        
        # Call to _get_papertype(...): (line 975)
        # Processing the call arguments (line 975)
        # Getting the type of 'height' (line 975)
        height_247034 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 975, 55), 'height', False)
        # Getting the type of 'width' (line 975)
        width_247035 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 975, 63), 'width', False)
        # Processing the call keyword arguments (line 975)
        kwargs_247036 = {}
        # Getting the type of '_get_papertype' (line 975)
        _get_papertype_247033 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 975, 40), '_get_papertype', False)
        # Calling _get_papertype(args, kwargs) (line 975)
        _get_papertype_call_result_247037 = invoke(stypy.reporting.localization.Localization(__file__, 975, 40), _get_papertype_247033, *[height_247034, width_247035], **kwargs_247036)
        
        # Assigning a type to the variable 'papertype' (line 975)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 975, 28), 'papertype', _get_papertype_call_result_247037)
        # SSA branch for the else part of an if statement (line 975)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Call to a Name (line 976):
        
        # Assigning a Call to a Name (line 976):
        
        # Call to _get_papertype(...): (line 976)
        # Processing the call arguments (line 976)
        # Getting the type of 'width' (line 976)
        width_247039 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 976, 45), 'width', False)
        # Getting the type of 'height' (line 976)
        height_247040 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 976, 52), 'height', False)
        # Processing the call keyword arguments (line 976)
        kwargs_247041 = {}
        # Getting the type of '_get_papertype' (line 976)
        _get_papertype_247038 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 976, 30), '_get_papertype', False)
        # Calling _get_papertype(args, kwargs) (line 976)
        _get_papertype_call_result_247042 = invoke(stypy.reporting.localization.Localization(__file__, 976, 30), _get_papertype_247038, *[width_247039, height_247040], **kwargs_247041)
        
        # Assigning a type to the variable 'papertype' (line 976)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 976, 18), 'papertype', _get_papertype_call_result_247042)
        # SSA join for if statement (line 975)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 974)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'isLandscape' (line 978)
        isLandscape_247043 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 978, 11), 'isLandscape')
        # Testing the type of an if condition (line 978)
        if_condition_247044 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 978, 8), isLandscape_247043)
        # Assigning a type to the variable 'if_condition_247044' (line 978)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 978, 8), 'if_condition_247044', if_condition_247044)
        # SSA begins for if statement (line 978)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Subscript to a Tuple (line 978):
        
        # Assigning a Subscript to a Name (line 978):
        
        # Obtaining the type of the subscript
        int_247045 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 978, 24), 'int')
        
        # Obtaining the type of the subscript
        # Getting the type of 'papertype' (line 978)
        papertype_247046 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 978, 60), 'papertype')
        # Getting the type of 'papersize' (line 978)
        papersize_247047 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 978, 50), 'papersize')
        # Obtaining the member '__getitem__' of a type (line 978)
        getitem___247048 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 978, 50), papersize_247047, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 978)
        subscript_call_result_247049 = invoke(stypy.reporting.localization.Localization(__file__, 978, 50), getitem___247048, papertype_247046)
        
        # Obtaining the member '__getitem__' of a type (line 978)
        getitem___247050 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 978, 24), subscript_call_result_247049, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 978)
        subscript_call_result_247051 = invoke(stypy.reporting.localization.Localization(__file__, 978, 24), getitem___247050, int_247045)
        
        # Assigning a type to the variable 'tuple_var_assignment_243758' (line 978)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 978, 24), 'tuple_var_assignment_243758', subscript_call_result_247051)
        
        # Assigning a Subscript to a Name (line 978):
        
        # Obtaining the type of the subscript
        int_247052 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 978, 24), 'int')
        
        # Obtaining the type of the subscript
        # Getting the type of 'papertype' (line 978)
        papertype_247053 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 978, 60), 'papertype')
        # Getting the type of 'papersize' (line 978)
        papersize_247054 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 978, 50), 'papersize')
        # Obtaining the member '__getitem__' of a type (line 978)
        getitem___247055 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 978, 50), papersize_247054, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 978)
        subscript_call_result_247056 = invoke(stypy.reporting.localization.Localization(__file__, 978, 50), getitem___247055, papertype_247053)
        
        # Obtaining the member '__getitem__' of a type (line 978)
        getitem___247057 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 978, 24), subscript_call_result_247056, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 978)
        subscript_call_result_247058 = invoke(stypy.reporting.localization.Localization(__file__, 978, 24), getitem___247057, int_247052)
        
        # Assigning a type to the variable 'tuple_var_assignment_243759' (line 978)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 978, 24), 'tuple_var_assignment_243759', subscript_call_result_247058)
        
        # Assigning a Name to a Name (line 978):
        # Getting the type of 'tuple_var_assignment_243758' (line 978)
        tuple_var_assignment_243758_247059 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 978, 24), 'tuple_var_assignment_243758')
        # Assigning a type to the variable 'paperHeight' (line 978)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 978, 24), 'paperHeight', tuple_var_assignment_243758_247059)
        
        # Assigning a Name to a Name (line 978):
        # Getting the type of 'tuple_var_assignment_243759' (line 978)
        tuple_var_assignment_243759_247060 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 978, 24), 'tuple_var_assignment_243759')
        # Assigning a type to the variable 'paperWidth' (line 978)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 978, 37), 'paperWidth', tuple_var_assignment_243759_247060)
        # SSA branch for the else part of an if statement (line 978)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Subscript to a Tuple (line 979):
        
        # Assigning a Subscript to a Name (line 979):
        
        # Obtaining the type of the subscript
        int_247061 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 979, 14), 'int')
        
        # Obtaining the type of the subscript
        # Getting the type of 'papertype' (line 979)
        papertype_247062 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 979, 50), 'papertype')
        # Getting the type of 'papersize' (line 979)
        papersize_247063 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 979, 40), 'papersize')
        # Obtaining the member '__getitem__' of a type (line 979)
        getitem___247064 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 979, 40), papersize_247063, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 979)
        subscript_call_result_247065 = invoke(stypy.reporting.localization.Localization(__file__, 979, 40), getitem___247064, papertype_247062)
        
        # Obtaining the member '__getitem__' of a type (line 979)
        getitem___247066 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 979, 14), subscript_call_result_247065, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 979)
        subscript_call_result_247067 = invoke(stypy.reporting.localization.Localization(__file__, 979, 14), getitem___247066, int_247061)
        
        # Assigning a type to the variable 'tuple_var_assignment_243760' (line 979)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 979, 14), 'tuple_var_assignment_243760', subscript_call_result_247067)
        
        # Assigning a Subscript to a Name (line 979):
        
        # Obtaining the type of the subscript
        int_247068 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 979, 14), 'int')
        
        # Obtaining the type of the subscript
        # Getting the type of 'papertype' (line 979)
        papertype_247069 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 979, 50), 'papertype')
        # Getting the type of 'papersize' (line 979)
        papersize_247070 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 979, 40), 'papersize')
        # Obtaining the member '__getitem__' of a type (line 979)
        getitem___247071 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 979, 40), papersize_247070, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 979)
        subscript_call_result_247072 = invoke(stypy.reporting.localization.Localization(__file__, 979, 40), getitem___247071, papertype_247069)
        
        # Obtaining the member '__getitem__' of a type (line 979)
        getitem___247073 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 979, 14), subscript_call_result_247072, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 979)
        subscript_call_result_247074 = invoke(stypy.reporting.localization.Localization(__file__, 979, 14), getitem___247073, int_247068)
        
        # Assigning a type to the variable 'tuple_var_assignment_243761' (line 979)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 979, 14), 'tuple_var_assignment_243761', subscript_call_result_247074)
        
        # Assigning a Name to a Name (line 979):
        # Getting the type of 'tuple_var_assignment_243760' (line 979)
        tuple_var_assignment_243760_247075 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 979, 14), 'tuple_var_assignment_243760')
        # Assigning a type to the variable 'paperWidth' (line 979)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 979, 14), 'paperWidth', tuple_var_assignment_243760_247075)
        
        # Assigning a Name to a Name (line 979):
        # Getting the type of 'tuple_var_assignment_243761' (line 979)
        tuple_var_assignment_243761_247076 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 979, 14), 'tuple_var_assignment_243761')
        # Assigning a type to the variable 'paperHeight' (line 979)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 979, 26), 'paperHeight', tuple_var_assignment_243761_247076)
        # SSA join for if statement (line 978)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Evaluating a boolean operation
        
        # Obtaining the type of the subscript
        unicode_247077 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 981, 20), 'unicode', u'ps.usedistiller')
        # Getting the type of 'rcParams' (line 981)
        rcParams_247078 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 981, 11), 'rcParams')
        # Obtaining the member '__getitem__' of a type (line 981)
        getitem___247079 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 981, 11), rcParams_247078, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 981)
        subscript_call_result_247080 = invoke(stypy.reporting.localization.Localization(__file__, 981, 11), getitem___247079, unicode_247077)
        
        
        
        # Getting the type of 'papertype' (line 981)
        papertype_247081 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 981, 47), 'papertype')
        unicode_247082 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 981, 60), 'unicode', u'auto')
        # Applying the binary operator '==' (line 981)
        result_eq_247083 = python_operator(stypy.reporting.localization.Localization(__file__, 981, 47), '==', papertype_247081, unicode_247082)
        
        # Applying the 'not' unary operator (line 981)
        result_not__247084 = python_operator(stypy.reporting.localization.Localization(__file__, 981, 43), 'not', result_eq_247083)
        
        # Applying the binary operator 'and' (line 981)
        result_and_keyword_247085 = python_operator(stypy.reporting.localization.Localization(__file__, 981, 11), 'and', subscript_call_result_247080, result_not__247084)
        
        # Testing the type of an if condition (line 981)
        if_condition_247086 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 981, 8), result_and_keyword_247085)
        # Assigning a type to the variable 'if_condition_247086' (line 981)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 981, 8), 'if_condition_247086', if_condition_247086)
        # SSA begins for if statement (line 981)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        
        # Evaluating a boolean operation
        
        # Getting the type of 'width' (line 984)
        width_247087 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 984, 15), 'width')
        # Getting the type of 'paperWidth' (line 984)
        paperWidth_247088 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 984, 21), 'paperWidth')
        # Applying the binary operator '>' (line 984)
        result_gt_247089 = python_operator(stypy.reporting.localization.Localization(__file__, 984, 15), '>', width_247087, paperWidth_247088)
        
        
        # Getting the type of 'height' (line 984)
        height_247090 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 984, 35), 'height')
        # Getting the type of 'paperHeight' (line 984)
        paperHeight_247091 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 984, 42), 'paperHeight')
        # Applying the binary operator '>' (line 984)
        result_gt_247092 = python_operator(stypy.reporting.localization.Localization(__file__, 984, 35), '>', height_247090, paperHeight_247091)
        
        # Applying the binary operator 'or' (line 984)
        result_or_keyword_247093 = python_operator(stypy.reporting.localization.Localization(__file__, 984, 15), 'or', result_gt_247089, result_gt_247092)
        
        # Testing the type of an if condition (line 984)
        if_condition_247094 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 984, 12), result_or_keyword_247093)
        # Assigning a type to the variable 'if_condition_247094' (line 984)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 984, 12), 'if_condition_247094', if_condition_247094)
        # SSA begins for if statement (line 984)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'isLandscape' (line 985)
        isLandscape_247095 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 985, 19), 'isLandscape')
        # Testing the type of an if condition (line 985)
        if_condition_247096 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 985, 16), isLandscape_247095)
        # Assigning a type to the variable 'if_condition_247096' (line 985)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 985, 16), 'if_condition_247096', if_condition_247096)
        # SSA begins for if statement (line 985)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 986):
        
        # Assigning a Call to a Name (line 986):
        
        # Call to _get_papertype(...): (line 986)
        # Processing the call arguments (line 986)
        # Getting the type of 'height' (line 986)
        height_247098 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 986, 47), 'height', False)
        # Getting the type of 'width' (line 986)
        width_247099 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 986, 55), 'width', False)
        # Processing the call keyword arguments (line 986)
        kwargs_247100 = {}
        # Getting the type of '_get_papertype' (line 986)
        _get_papertype_247097 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 986, 32), '_get_papertype', False)
        # Calling _get_papertype(args, kwargs) (line 986)
        _get_papertype_call_result_247101 = invoke(stypy.reporting.localization.Localization(__file__, 986, 32), _get_papertype_247097, *[height_247098, width_247099], **kwargs_247100)
        
        # Assigning a type to the variable 'papertype' (line 986)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 986, 20), 'papertype', _get_papertype_call_result_247101)
        
        # Assigning a Subscript to a Tuple (line 987):
        
        # Assigning a Subscript to a Name (line 987):
        
        # Obtaining the type of the subscript
        int_247102 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 987, 20), 'int')
        
        # Obtaining the type of the subscript
        # Getting the type of 'papertype' (line 987)
        papertype_247103 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 987, 56), 'papertype')
        # Getting the type of 'papersize' (line 987)
        papersize_247104 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 987, 46), 'papersize')
        # Obtaining the member '__getitem__' of a type (line 987)
        getitem___247105 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 987, 46), papersize_247104, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 987)
        subscript_call_result_247106 = invoke(stypy.reporting.localization.Localization(__file__, 987, 46), getitem___247105, papertype_247103)
        
        # Obtaining the member '__getitem__' of a type (line 987)
        getitem___247107 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 987, 20), subscript_call_result_247106, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 987)
        subscript_call_result_247108 = invoke(stypy.reporting.localization.Localization(__file__, 987, 20), getitem___247107, int_247102)
        
        # Assigning a type to the variable 'tuple_var_assignment_243762' (line 987)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 987, 20), 'tuple_var_assignment_243762', subscript_call_result_247108)
        
        # Assigning a Subscript to a Name (line 987):
        
        # Obtaining the type of the subscript
        int_247109 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 987, 20), 'int')
        
        # Obtaining the type of the subscript
        # Getting the type of 'papertype' (line 987)
        papertype_247110 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 987, 56), 'papertype')
        # Getting the type of 'papersize' (line 987)
        papersize_247111 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 987, 46), 'papersize')
        # Obtaining the member '__getitem__' of a type (line 987)
        getitem___247112 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 987, 46), papersize_247111, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 987)
        subscript_call_result_247113 = invoke(stypy.reporting.localization.Localization(__file__, 987, 46), getitem___247112, papertype_247110)
        
        # Obtaining the member '__getitem__' of a type (line 987)
        getitem___247114 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 987, 20), subscript_call_result_247113, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 987)
        subscript_call_result_247115 = invoke(stypy.reporting.localization.Localization(__file__, 987, 20), getitem___247114, int_247109)
        
        # Assigning a type to the variable 'tuple_var_assignment_243763' (line 987)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 987, 20), 'tuple_var_assignment_243763', subscript_call_result_247115)
        
        # Assigning a Name to a Name (line 987):
        # Getting the type of 'tuple_var_assignment_243762' (line 987)
        tuple_var_assignment_243762_247116 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 987, 20), 'tuple_var_assignment_243762')
        # Assigning a type to the variable 'paperHeight' (line 987)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 987, 20), 'paperHeight', tuple_var_assignment_243762_247116)
        
        # Assigning a Name to a Name (line 987):
        # Getting the type of 'tuple_var_assignment_243763' (line 987)
        tuple_var_assignment_243763_247117 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 987, 20), 'tuple_var_assignment_243763')
        # Assigning a type to the variable 'paperWidth' (line 987)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 987, 33), 'paperWidth', tuple_var_assignment_243763_247117)
        # SSA branch for the else part of an if statement (line 985)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Call to a Name (line 989):
        
        # Assigning a Call to a Name (line 989):
        
        # Call to _get_papertype(...): (line 989)
        # Processing the call arguments (line 989)
        # Getting the type of 'width' (line 989)
        width_247119 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 989, 47), 'width', False)
        # Getting the type of 'height' (line 989)
        height_247120 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 989, 54), 'height', False)
        # Processing the call keyword arguments (line 989)
        kwargs_247121 = {}
        # Getting the type of '_get_papertype' (line 989)
        _get_papertype_247118 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 989, 32), '_get_papertype', False)
        # Calling _get_papertype(args, kwargs) (line 989)
        _get_papertype_call_result_247122 = invoke(stypy.reporting.localization.Localization(__file__, 989, 32), _get_papertype_247118, *[width_247119, height_247120], **kwargs_247121)
        
        # Assigning a type to the variable 'papertype' (line 989)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 989, 20), 'papertype', _get_papertype_call_result_247122)
        
        # Assigning a Subscript to a Tuple (line 990):
        
        # Assigning a Subscript to a Name (line 990):
        
        # Obtaining the type of the subscript
        int_247123 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 990, 20), 'int')
        
        # Obtaining the type of the subscript
        # Getting the type of 'papertype' (line 990)
        papertype_247124 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 990, 56), 'papertype')
        # Getting the type of 'papersize' (line 990)
        papersize_247125 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 990, 46), 'papersize')
        # Obtaining the member '__getitem__' of a type (line 990)
        getitem___247126 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 990, 46), papersize_247125, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 990)
        subscript_call_result_247127 = invoke(stypy.reporting.localization.Localization(__file__, 990, 46), getitem___247126, papertype_247124)
        
        # Obtaining the member '__getitem__' of a type (line 990)
        getitem___247128 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 990, 20), subscript_call_result_247127, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 990)
        subscript_call_result_247129 = invoke(stypy.reporting.localization.Localization(__file__, 990, 20), getitem___247128, int_247123)
        
        # Assigning a type to the variable 'tuple_var_assignment_243764' (line 990)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 990, 20), 'tuple_var_assignment_243764', subscript_call_result_247129)
        
        # Assigning a Subscript to a Name (line 990):
        
        # Obtaining the type of the subscript
        int_247130 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 990, 20), 'int')
        
        # Obtaining the type of the subscript
        # Getting the type of 'papertype' (line 990)
        papertype_247131 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 990, 56), 'papertype')
        # Getting the type of 'papersize' (line 990)
        papersize_247132 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 990, 46), 'papersize')
        # Obtaining the member '__getitem__' of a type (line 990)
        getitem___247133 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 990, 46), papersize_247132, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 990)
        subscript_call_result_247134 = invoke(stypy.reporting.localization.Localization(__file__, 990, 46), getitem___247133, papertype_247131)
        
        # Obtaining the member '__getitem__' of a type (line 990)
        getitem___247135 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 990, 20), subscript_call_result_247134, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 990)
        subscript_call_result_247136 = invoke(stypy.reporting.localization.Localization(__file__, 990, 20), getitem___247135, int_247130)
        
        # Assigning a type to the variable 'tuple_var_assignment_243765' (line 990)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 990, 20), 'tuple_var_assignment_243765', subscript_call_result_247136)
        
        # Assigning a Name to a Name (line 990):
        # Getting the type of 'tuple_var_assignment_243764' (line 990)
        tuple_var_assignment_243764_247137 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 990, 20), 'tuple_var_assignment_243764')
        # Assigning a type to the variable 'paperWidth' (line 990)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 990, 20), 'paperWidth', tuple_var_assignment_243764_247137)
        
        # Assigning a Name to a Name (line 990):
        # Getting the type of 'tuple_var_assignment_243765' (line 990)
        tuple_var_assignment_243765_247138 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 990, 20), 'tuple_var_assignment_243765')
        # Assigning a type to the variable 'paperHeight' (line 990)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 990, 32), 'paperHeight', tuple_var_assignment_243765_247138)
        # SSA join for if statement (line 985)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 984)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 981)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a BinOp to a Name (line 993):
        
        # Assigning a BinOp to a Name (line 993):
        int_247139 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 993, 13), 'int')
        float_247140 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 993, 16), 'float')
        # Applying the binary operator '*' (line 993)
        result_mul_247141 = python_operator(stypy.reporting.localization.Localization(__file__, 993, 13), '*', int_247139, float_247140)
        
        # Getting the type of 'paperWidth' (line 993)
        paperWidth_247142 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 993, 21), 'paperWidth')
        # Getting the type of 'width' (line 993)
        width_247143 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 993, 34), 'width')
        # Applying the binary operator '-' (line 993)
        result_sub_247144 = python_operator(stypy.reporting.localization.Localization(__file__, 993, 21), '-', paperWidth_247142, width_247143)
        
        # Applying the binary operator '*' (line 993)
        result_mul_247145 = python_operator(stypy.reporting.localization.Localization(__file__, 993, 19), '*', result_mul_247141, result_sub_247144)
        
        # Assigning a type to the variable 'xo' (line 993)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 993, 8), 'xo', result_mul_247145)
        
        # Assigning a BinOp to a Name (line 994):
        
        # Assigning a BinOp to a Name (line 994):
        int_247146 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 994, 13), 'int')
        float_247147 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 994, 16), 'float')
        # Applying the binary operator '*' (line 994)
        result_mul_247148 = python_operator(stypy.reporting.localization.Localization(__file__, 994, 13), '*', int_247146, float_247147)
        
        # Getting the type of 'paperHeight' (line 994)
        paperHeight_247149 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 994, 21), 'paperHeight')
        # Getting the type of 'height' (line 994)
        height_247150 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 994, 35), 'height')
        # Applying the binary operator '-' (line 994)
        result_sub_247151 = python_operator(stypy.reporting.localization.Localization(__file__, 994, 21), '-', paperHeight_247149, height_247150)
        
        # Applying the binary operator '*' (line 994)
        result_mul_247152 = python_operator(stypy.reporting.localization.Localization(__file__, 994, 19), '*', result_mul_247148, result_sub_247151)
        
        # Assigning a type to the variable 'yo' (line 994)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 994, 8), 'yo', result_mul_247152)
        
        # Assigning a Attribute to a Tuple (line 996):
        
        # Assigning a Subscript to a Name (line 996):
        
        # Obtaining the type of the subscript
        int_247153 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 996, 8), 'int')
        # Getting the type of 'self' (line 996)
        self_247154 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 996, 21), 'self')
        # Obtaining the member 'figure' of a type (line 996)
        figure_247155 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 996, 21), self_247154, 'figure')
        # Obtaining the member 'bbox' of a type (line 996)
        bbox_247156 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 996, 21), figure_247155, 'bbox')
        # Obtaining the member 'bounds' of a type (line 996)
        bounds_247157 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 996, 21), bbox_247156, 'bounds')
        # Obtaining the member '__getitem__' of a type (line 996)
        getitem___247158 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 996, 8), bounds_247157, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 996)
        subscript_call_result_247159 = invoke(stypy.reporting.localization.Localization(__file__, 996, 8), getitem___247158, int_247153)
        
        # Assigning a type to the variable 'tuple_var_assignment_243766' (line 996)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 996, 8), 'tuple_var_assignment_243766', subscript_call_result_247159)
        
        # Assigning a Subscript to a Name (line 996):
        
        # Obtaining the type of the subscript
        int_247160 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 996, 8), 'int')
        # Getting the type of 'self' (line 996)
        self_247161 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 996, 21), 'self')
        # Obtaining the member 'figure' of a type (line 996)
        figure_247162 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 996, 21), self_247161, 'figure')
        # Obtaining the member 'bbox' of a type (line 996)
        bbox_247163 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 996, 21), figure_247162, 'bbox')
        # Obtaining the member 'bounds' of a type (line 996)
        bounds_247164 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 996, 21), bbox_247163, 'bounds')
        # Obtaining the member '__getitem__' of a type (line 996)
        getitem___247165 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 996, 8), bounds_247164, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 996)
        subscript_call_result_247166 = invoke(stypy.reporting.localization.Localization(__file__, 996, 8), getitem___247165, int_247160)
        
        # Assigning a type to the variable 'tuple_var_assignment_243767' (line 996)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 996, 8), 'tuple_var_assignment_243767', subscript_call_result_247166)
        
        # Assigning a Subscript to a Name (line 996):
        
        # Obtaining the type of the subscript
        int_247167 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 996, 8), 'int')
        # Getting the type of 'self' (line 996)
        self_247168 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 996, 21), 'self')
        # Obtaining the member 'figure' of a type (line 996)
        figure_247169 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 996, 21), self_247168, 'figure')
        # Obtaining the member 'bbox' of a type (line 996)
        bbox_247170 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 996, 21), figure_247169, 'bbox')
        # Obtaining the member 'bounds' of a type (line 996)
        bounds_247171 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 996, 21), bbox_247170, 'bounds')
        # Obtaining the member '__getitem__' of a type (line 996)
        getitem___247172 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 996, 8), bounds_247171, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 996)
        subscript_call_result_247173 = invoke(stypy.reporting.localization.Localization(__file__, 996, 8), getitem___247172, int_247167)
        
        # Assigning a type to the variable 'tuple_var_assignment_243768' (line 996)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 996, 8), 'tuple_var_assignment_243768', subscript_call_result_247173)
        
        # Assigning a Subscript to a Name (line 996):
        
        # Obtaining the type of the subscript
        int_247174 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 996, 8), 'int')
        # Getting the type of 'self' (line 996)
        self_247175 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 996, 21), 'self')
        # Obtaining the member 'figure' of a type (line 996)
        figure_247176 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 996, 21), self_247175, 'figure')
        # Obtaining the member 'bbox' of a type (line 996)
        bbox_247177 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 996, 21), figure_247176, 'bbox')
        # Obtaining the member 'bounds' of a type (line 996)
        bounds_247178 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 996, 21), bbox_247177, 'bounds')
        # Obtaining the member '__getitem__' of a type (line 996)
        getitem___247179 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 996, 8), bounds_247178, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 996)
        subscript_call_result_247180 = invoke(stypy.reporting.localization.Localization(__file__, 996, 8), getitem___247179, int_247174)
        
        # Assigning a type to the variable 'tuple_var_assignment_243769' (line 996)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 996, 8), 'tuple_var_assignment_243769', subscript_call_result_247180)
        
        # Assigning a Name to a Name (line 996):
        # Getting the type of 'tuple_var_assignment_243766' (line 996)
        tuple_var_assignment_243766_247181 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 996, 8), 'tuple_var_assignment_243766')
        # Assigning a type to the variable 'l' (line 996)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 996, 8), 'l', tuple_var_assignment_243766_247181)
        
        # Assigning a Name to a Name (line 996):
        # Getting the type of 'tuple_var_assignment_243767' (line 996)
        tuple_var_assignment_243767_247182 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 996, 8), 'tuple_var_assignment_243767')
        # Assigning a type to the variable 'b' (line 996)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 996, 11), 'b', tuple_var_assignment_243767_247182)
        
        # Assigning a Name to a Name (line 996):
        # Getting the type of 'tuple_var_assignment_243768' (line 996)
        tuple_var_assignment_243768_247183 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 996, 8), 'tuple_var_assignment_243768')
        # Assigning a type to the variable 'w' (line 996)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 996, 14), 'w', tuple_var_assignment_243768_247183)
        
        # Assigning a Name to a Name (line 996):
        # Getting the type of 'tuple_var_assignment_243769' (line 996)
        tuple_var_assignment_243769_247184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 996, 8), 'tuple_var_assignment_243769')
        # Assigning a type to the variable 'h' (line 996)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 996, 17), 'h', tuple_var_assignment_243769_247184)
        
        # Assigning a Name to a Name (line 997):
        
        # Assigning a Name to a Name (line 997):
        # Getting the type of 'xo' (line 997)
        xo_247185 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 997, 14), 'xo')
        # Assigning a type to the variable 'llx' (line 997)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 997, 8), 'llx', xo_247185)
        
        # Assigning a Name to a Name (line 998):
        
        # Assigning a Name to a Name (line 998):
        # Getting the type of 'yo' (line 998)
        yo_247186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 998, 14), 'yo')
        # Assigning a type to the variable 'lly' (line 998)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 998, 8), 'lly', yo_247186)
        
        # Assigning a BinOp to a Name (line 999):
        
        # Assigning a BinOp to a Name (line 999):
        # Getting the type of 'llx' (line 999)
        llx_247187 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 999, 14), 'llx')
        # Getting the type of 'w' (line 999)
        w_247188 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 999, 20), 'w')
        # Applying the binary operator '+' (line 999)
        result_add_247189 = python_operator(stypy.reporting.localization.Localization(__file__, 999, 14), '+', llx_247187, w_247188)
        
        # Assigning a type to the variable 'urx' (line 999)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 999, 8), 'urx', result_add_247189)
        
        # Assigning a BinOp to a Name (line 1000):
        
        # Assigning a BinOp to a Name (line 1000):
        # Getting the type of 'lly' (line 1000)
        lly_247190 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1000, 14), 'lly')
        # Getting the type of 'h' (line 1000)
        h_247191 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1000, 20), 'h')
        # Applying the binary operator '+' (line 1000)
        result_add_247192 = python_operator(stypy.reporting.localization.Localization(__file__, 1000, 14), '+', lly_247190, h_247191)
        
        # Assigning a type to the variable 'ury' (line 1000)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1000, 8), 'ury', result_add_247192)
        
        # Assigning a Num to a Name (line 1001):
        
        # Assigning a Num to a Name (line 1001):
        int_247193 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1001, 19), 'int')
        # Assigning a type to the variable 'rotation' (line 1001)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1001, 8), 'rotation', int_247193)
        
        # Getting the type of 'isLandscape' (line 1002)
        isLandscape_247194 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1002, 11), 'isLandscape')
        # Testing the type of an if condition (line 1002)
        if_condition_247195 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1002, 8), isLandscape_247194)
        # Assigning a type to the variable 'if_condition_247195' (line 1002)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1002, 8), 'if_condition_247195', if_condition_247195)
        # SSA begins for if statement (line 1002)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Tuple to a Tuple (line 1003):
        
        # Assigning a Name to a Name (line 1003):
        # Getting the type of 'lly' (line 1003)
        lly_247196 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1003, 33), 'lly')
        # Assigning a type to the variable 'tuple_assignment_243770' (line 1003)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1003, 12), 'tuple_assignment_243770', lly_247196)
        
        # Assigning a Name to a Name (line 1003):
        # Getting the type of 'llx' (line 1003)
        llx_247197 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1003, 38), 'llx')
        # Assigning a type to the variable 'tuple_assignment_243771' (line 1003)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1003, 12), 'tuple_assignment_243771', llx_247197)
        
        # Assigning a Name to a Name (line 1003):
        # Getting the type of 'ury' (line 1003)
        ury_247198 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1003, 43), 'ury')
        # Assigning a type to the variable 'tuple_assignment_243772' (line 1003)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1003, 12), 'tuple_assignment_243772', ury_247198)
        
        # Assigning a Name to a Name (line 1003):
        # Getting the type of 'urx' (line 1003)
        urx_247199 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1003, 48), 'urx')
        # Assigning a type to the variable 'tuple_assignment_243773' (line 1003)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1003, 12), 'tuple_assignment_243773', urx_247199)
        
        # Assigning a Name to a Name (line 1003):
        # Getting the type of 'tuple_assignment_243770' (line 1003)
        tuple_assignment_243770_247200 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1003, 12), 'tuple_assignment_243770')
        # Assigning a type to the variable 'llx' (line 1003)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1003, 12), 'llx', tuple_assignment_243770_247200)
        
        # Assigning a Name to a Name (line 1003):
        # Getting the type of 'tuple_assignment_243771' (line 1003)
        tuple_assignment_243771_247201 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1003, 12), 'tuple_assignment_243771')
        # Assigning a type to the variable 'lly' (line 1003)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1003, 17), 'lly', tuple_assignment_243771_247201)
        
        # Assigning a Name to a Name (line 1003):
        # Getting the type of 'tuple_assignment_243772' (line 1003)
        tuple_assignment_243772_247202 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1003, 12), 'tuple_assignment_243772')
        # Assigning a type to the variable 'urx' (line 1003)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1003, 22), 'urx', tuple_assignment_243772_247202)
        
        # Assigning a Name to a Name (line 1003):
        # Getting the type of 'tuple_assignment_243773' (line 1003)
        tuple_assignment_243773_247203 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1003, 12), 'tuple_assignment_243773')
        # Assigning a type to the variable 'ury' (line 1003)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1003, 27), 'ury', tuple_assignment_243773_247203)
        
        # Assigning a Tuple to a Tuple (line 1004):
        
        # Assigning a BinOp to a Name (line 1004):
        int_247204 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1004, 21), 'int')
        # Getting the type of 'paperHeight' (line 1004)
        paperHeight_247205 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1004, 24), 'paperHeight')
        # Applying the binary operator '*' (line 1004)
        result_mul_247206 = python_operator(stypy.reporting.localization.Localization(__file__, 1004, 21), '*', int_247204, paperHeight_247205)
        
        # Getting the type of 'yo' (line 1004)
        yo_247207 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1004, 38), 'yo')
        # Applying the binary operator '-' (line 1004)
        result_sub_247208 = python_operator(stypy.reporting.localization.Localization(__file__, 1004, 21), '-', result_mul_247206, yo_247207)
        
        # Assigning a type to the variable 'tuple_assignment_243774' (line 1004)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1004, 12), 'tuple_assignment_243774', result_sub_247208)
        
        # Assigning a Name to a Name (line 1004):
        # Getting the type of 'xo' (line 1004)
        xo_247209 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1004, 42), 'xo')
        # Assigning a type to the variable 'tuple_assignment_243775' (line 1004)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1004, 12), 'tuple_assignment_243775', xo_247209)
        
        # Assigning a Name to a Name (line 1004):
        # Getting the type of 'tuple_assignment_243774' (line 1004)
        tuple_assignment_243774_247210 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1004, 12), 'tuple_assignment_243774')
        # Assigning a type to the variable 'xo' (line 1004)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1004, 12), 'xo', tuple_assignment_243774_247210)
        
        # Assigning a Name to a Name (line 1004):
        # Getting the type of 'tuple_assignment_243775' (line 1004)
        tuple_assignment_243775_247211 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1004, 12), 'tuple_assignment_243775')
        # Assigning a type to the variable 'yo' (line 1004)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1004, 16), 'yo', tuple_assignment_243775_247211)
        
        # Assigning a Num to a Name (line 1005):
        
        # Assigning a Num to a Name (line 1005):
        int_247212 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1005, 23), 'int')
        # Assigning a type to the variable 'rotation' (line 1005)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1005, 12), 'rotation', int_247212)
        # SSA join for if statement (line 1002)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Tuple to a Name (line 1006):
        
        # Assigning a Tuple to a Name (line 1006):
        
        # Obtaining an instance of the builtin type 'tuple' (line 1006)
        tuple_247213 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1006, 16), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1006)
        # Adding element type (line 1006)
        # Getting the type of 'llx' (line 1006)
        llx_247214 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1006, 16), 'llx')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1006, 16), tuple_247213, llx_247214)
        # Adding element type (line 1006)
        # Getting the type of 'lly' (line 1006)
        lly_247215 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1006, 21), 'lly')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1006, 16), tuple_247213, lly_247215)
        # Adding element type (line 1006)
        # Getting the type of 'urx' (line 1006)
        urx_247216 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1006, 26), 'urx')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1006, 16), tuple_247213, urx_247216)
        # Adding element type (line 1006)
        # Getting the type of 'ury' (line 1006)
        ury_247217 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1006, 31), 'ury')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1006, 16), tuple_247213, ury_247217)
        
        # Assigning a type to the variable 'bbox' (line 1006)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1006, 8), 'bbox', tuple_247213)
        
        # Assigning a Call to a Name (line 1009):
        
        # Assigning a Call to a Name (line 1009):
        
        # Call to get_facecolor(...): (line 1009)
        # Processing the call keyword arguments (line 1009)
        kwargs_247221 = {}
        # Getting the type of 'self' (line 1009)
        self_247218 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1009, 24), 'self', False)
        # Obtaining the member 'figure' of a type (line 1009)
        figure_247219 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1009, 24), self_247218, 'figure')
        # Obtaining the member 'get_facecolor' of a type (line 1009)
        get_facecolor_247220 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1009, 24), figure_247219, 'get_facecolor')
        # Calling get_facecolor(args, kwargs) (line 1009)
        get_facecolor_call_result_247222 = invoke(stypy.reporting.localization.Localization(__file__, 1009, 24), get_facecolor_247220, *[], **kwargs_247221)
        
        # Assigning a type to the variable 'origfacecolor' (line 1009)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1009, 8), 'origfacecolor', get_facecolor_call_result_247222)
        
        # Assigning a Call to a Name (line 1010):
        
        # Assigning a Call to a Name (line 1010):
        
        # Call to get_edgecolor(...): (line 1010)
        # Processing the call keyword arguments (line 1010)
        kwargs_247226 = {}
        # Getting the type of 'self' (line 1010)
        self_247223 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1010, 24), 'self', False)
        # Obtaining the member 'figure' of a type (line 1010)
        figure_247224 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1010, 24), self_247223, 'figure')
        # Obtaining the member 'get_edgecolor' of a type (line 1010)
        get_edgecolor_247225 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1010, 24), figure_247224, 'get_edgecolor')
        # Calling get_edgecolor(args, kwargs) (line 1010)
        get_edgecolor_call_result_247227 = invoke(stypy.reporting.localization.Localization(__file__, 1010, 24), get_edgecolor_247225, *[], **kwargs_247226)
        
        # Assigning a type to the variable 'origedgecolor' (line 1010)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1010, 8), 'origedgecolor', get_edgecolor_call_result_247227)
        
        # Call to set_facecolor(...): (line 1011)
        # Processing the call arguments (line 1011)
        # Getting the type of 'facecolor' (line 1011)
        facecolor_247231 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1011, 34), 'facecolor', False)
        # Processing the call keyword arguments (line 1011)
        kwargs_247232 = {}
        # Getting the type of 'self' (line 1011)
        self_247228 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1011, 8), 'self', False)
        # Obtaining the member 'figure' of a type (line 1011)
        figure_247229 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1011, 8), self_247228, 'figure')
        # Obtaining the member 'set_facecolor' of a type (line 1011)
        set_facecolor_247230 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1011, 8), figure_247229, 'set_facecolor')
        # Calling set_facecolor(args, kwargs) (line 1011)
        set_facecolor_call_result_247233 = invoke(stypy.reporting.localization.Localization(__file__, 1011, 8), set_facecolor_247230, *[facecolor_247231], **kwargs_247232)
        
        
        # Call to set_edgecolor(...): (line 1012)
        # Processing the call arguments (line 1012)
        # Getting the type of 'edgecolor' (line 1012)
        edgecolor_247237 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1012, 34), 'edgecolor', False)
        # Processing the call keyword arguments (line 1012)
        kwargs_247238 = {}
        # Getting the type of 'self' (line 1012)
        self_247234 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1012, 8), 'self', False)
        # Obtaining the member 'figure' of a type (line 1012)
        figure_247235 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1012, 8), self_247234, 'figure')
        # Obtaining the member 'set_edgecolor' of a type (line 1012)
        set_edgecolor_247236 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1012, 8), figure_247235, 'set_edgecolor')
        # Calling set_edgecolor(args, kwargs) (line 1012)
        set_edgecolor_call_result_247239 = invoke(stypy.reporting.localization.Localization(__file__, 1012, 8), set_edgecolor_247236, *[edgecolor_247237], **kwargs_247238)
        
        
        # Assigning a Call to a Name (line 1015):
        
        # Assigning a Call to a Name (line 1015):
        
        # Call to get(...): (line 1015)
        # Processing the call arguments (line 1015)
        unicode_247242 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1015, 28), 'unicode', u'dryrun')
        # Getting the type of 'False' (line 1015)
        False_247243 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1015, 38), 'False', False)
        # Processing the call keyword arguments (line 1015)
        kwargs_247244 = {}
        # Getting the type of 'kwargs' (line 1015)
        kwargs_247240 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1015, 17), 'kwargs', False)
        # Obtaining the member 'get' of a type (line 1015)
        get_247241 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1015, 17), kwargs_247240, 'get')
        # Calling get(args, kwargs) (line 1015)
        get_call_result_247245 = invoke(stypy.reporting.localization.Localization(__file__, 1015, 17), get_247241, *[unicode_247242, False_247243], **kwargs_247244)
        
        # Assigning a type to the variable 'dryrun' (line 1015)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1015, 8), 'dryrun', get_call_result_247245)
        
        # Getting the type of 'dryrun' (line 1016)
        dryrun_247246 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1016, 11), 'dryrun')
        # Testing the type of an if condition (line 1016)
        if_condition_247247 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1016, 8), dryrun_247246)
        # Assigning a type to the variable 'if_condition_247247' (line 1016)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1016, 8), 'if_condition_247247', if_condition_247247)
        # SSA begins for if statement (line 1016)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        # Declaration of the 'NullWriter' class

        class NullWriter(object, ):

            @norecursion
            def write(type_of_self, localization, *varargs, **kwargs):
                global module_type_store
                # Assign values to the parameters with defaults
                defaults = []
                # Create a new context for function 'write'
                module_type_store = module_type_store.open_function_context('write', 1018, 16, False)
                # Assigning a type to the variable 'self' (line 1019)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1019, 16), 'self', type_of_self)
                
                # Passed parameters checking function
                NullWriter.write.__dict__.__setitem__('stypy_localization', localization)
                NullWriter.write.__dict__.__setitem__('stypy_type_of_self', type_of_self)
                NullWriter.write.__dict__.__setitem__('stypy_type_store', module_type_store)
                NullWriter.write.__dict__.__setitem__('stypy_function_name', 'NullWriter.write')
                NullWriter.write.__dict__.__setitem__('stypy_param_names_list', [])
                NullWriter.write.__dict__.__setitem__('stypy_varargs_param_name', 'kl')
                NullWriter.write.__dict__.__setitem__('stypy_kwargs_param_name', 'kwargs')
                NullWriter.write.__dict__.__setitem__('stypy_call_defaults', defaults)
                NullWriter.write.__dict__.__setitem__('stypy_call_varargs', varargs)
                NullWriter.write.__dict__.__setitem__('stypy_call_kwargs', kwargs)
                NullWriter.write.__dict__.__setitem__('stypy_declared_arg_number', 1)
                arguments = process_argument_values(localization, type_of_self, module_type_store, 'NullWriter.write', [], 'kl', 'kwargs', defaults, varargs, kwargs)

                if is_error_type(arguments):
                    # Destroy the current context
                    module_type_store = module_type_store.close_function_context()
                    return arguments

                # Initialize method data
                init_call_information(module_type_store, 'write', localization, [], arguments)
                
                # Default return type storage variable (SSA)
                # Assigning a type to the variable 'stypy_return_type'
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
                
                
                # ################# Begin of 'write(...)' code ##################

                pass
                
                # ################# End of 'write(...)' code ##################

                # Teardown call information
                teardown_call_information(localization, arguments)
                
                # Storing the return type of function 'write' in the type store
                # Getting the type of 'stypy_return_type' (line 1018)
                stypy_return_type_247248 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1018, 16), 'stypy_return_type')
                module_type_store.store_return_type_of_current_context(stypy_return_type_247248)
                
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                
                # Return type of the function 'write'
                return stypy_return_type_247248

        
        # Assigning a type to the variable 'NullWriter' (line 1017)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1017, 12), 'NullWriter', NullWriter)
        
        # Assigning a Call to a Attribute (line 1021):
        
        # Assigning a Call to a Attribute (line 1021):
        
        # Call to NullWriter(...): (line 1021)
        # Processing the call keyword arguments (line 1021)
        kwargs_247250 = {}
        # Getting the type of 'NullWriter' (line 1021)
        NullWriter_247249 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1021, 29), 'NullWriter', False)
        # Calling NullWriter(args, kwargs) (line 1021)
        NullWriter_call_result_247251 = invoke(stypy.reporting.localization.Localization(__file__, 1021, 29), NullWriter_247249, *[], **kwargs_247250)
        
        # Getting the type of 'self' (line 1021)
        self_247252 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1021, 12), 'self')
        # Setting the type of the member '_pswriter' of a type (line 1021)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1021, 12), self_247252, '_pswriter', NullWriter_call_result_247251)
        # SSA branch for the else part of an if statement (line 1016)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Call to a Attribute (line 1023):
        
        # Assigning a Call to a Attribute (line 1023):
        
        # Call to StringIO(...): (line 1023)
        # Processing the call keyword arguments (line 1023)
        kwargs_247255 = {}
        # Getting the type of 'io' (line 1023)
        io_247253 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1023, 29), 'io', False)
        # Obtaining the member 'StringIO' of a type (line 1023)
        StringIO_247254 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1023, 29), io_247253, 'StringIO')
        # Calling StringIO(args, kwargs) (line 1023)
        StringIO_call_result_247256 = invoke(stypy.reporting.localization.Localization(__file__, 1023, 29), StringIO_247254, *[], **kwargs_247255)
        
        # Getting the type of 'self' (line 1023)
        self_247257 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1023, 12), 'self')
        # Setting the type of the member '_pswriter' of a type (line 1023)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1023, 12), self_247257, '_pswriter', StringIO_call_result_247256)
        # SSA join for if statement (line 1016)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 1027):
        
        # Assigning a Call to a Name (line 1027):
        
        # Call to pop(...): (line 1027)
        # Processing the call arguments (line 1027)
        unicode_247260 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1027, 42), 'unicode', u'bbox_inches_restore')
        # Getting the type of 'None' (line 1027)
        None_247261 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1027, 65), 'None', False)
        # Processing the call keyword arguments (line 1027)
        kwargs_247262 = {}
        # Getting the type of 'kwargs' (line 1027)
        kwargs_247258 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1027, 31), 'kwargs', False)
        # Obtaining the member 'pop' of a type (line 1027)
        pop_247259 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1027, 31), kwargs_247258, 'pop')
        # Calling pop(args, kwargs) (line 1027)
        pop_call_result_247263 = invoke(stypy.reporting.localization.Localization(__file__, 1027, 31), pop_247259, *[unicode_247260, None_247261], **kwargs_247262)
        
        # Assigning a type to the variable '_bbox_inches_restore' (line 1027)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1027, 8), '_bbox_inches_restore', pop_call_result_247263)
        
        # Assigning a Call to a Name (line 1028):
        
        # Assigning a Call to a Name (line 1028):
        
        # Call to _renderer_class(...): (line 1028)
        # Processing the call arguments (line 1028)
        # Getting the type of 'width' (line 1028)
        width_247266 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1028, 43), 'width', False)
        # Getting the type of 'height' (line 1028)
        height_247267 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1028, 50), 'height', False)
        # Getting the type of 'self' (line 1028)
        self_247268 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1028, 58), 'self', False)
        # Obtaining the member '_pswriter' of a type (line 1028)
        _pswriter_247269 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1028, 58), self_247268, '_pswriter')
        # Processing the call keyword arguments (line 1028)
        # Getting the type of 'dpi' (line 1029)
        dpi_247270 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1029, 52), 'dpi', False)
        keyword_247271 = dpi_247270
        kwargs_247272 = {'imagedpi': keyword_247271}
        # Getting the type of 'self' (line 1028)
        self_247264 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1028, 22), 'self', False)
        # Obtaining the member '_renderer_class' of a type (line 1028)
        _renderer_class_247265 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1028, 22), self_247264, '_renderer_class')
        # Calling _renderer_class(args, kwargs) (line 1028)
        _renderer_class_call_result_247273 = invoke(stypy.reporting.localization.Localization(__file__, 1028, 22), _renderer_class_247265, *[width_247266, height_247267, _pswriter_247269], **kwargs_247272)
        
        # Assigning a type to the variable 'ps_renderer' (line 1028)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1028, 8), 'ps_renderer', _renderer_class_call_result_247273)
        
        # Assigning a Call to a Name (line 1030):
        
        # Assigning a Call to a Name (line 1030):
        
        # Call to MixedModeRenderer(...): (line 1030)
        # Processing the call arguments (line 1030)
        # Getting the type of 'self' (line 1030)
        self_247275 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1030, 37), 'self', False)
        # Obtaining the member 'figure' of a type (line 1030)
        figure_247276 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1030, 37), self_247275, 'figure')
        # Getting the type of 'width' (line 1031)
        width_247277 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1031, 12), 'width', False)
        # Getting the type of 'height' (line 1031)
        height_247278 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1031, 19), 'height', False)
        # Getting the type of 'dpi' (line 1031)
        dpi_247279 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1031, 27), 'dpi', False)
        # Getting the type of 'ps_renderer' (line 1031)
        ps_renderer_247280 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1031, 32), 'ps_renderer', False)
        # Processing the call keyword arguments (line 1030)
        # Getting the type of '_bbox_inches_restore' (line 1032)
        _bbox_inches_restore_247281 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1032, 32), '_bbox_inches_restore', False)
        keyword_247282 = _bbox_inches_restore_247281
        kwargs_247283 = {'bbox_inches_restore': keyword_247282}
        # Getting the type of 'MixedModeRenderer' (line 1030)
        MixedModeRenderer_247274 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1030, 19), 'MixedModeRenderer', False)
        # Calling MixedModeRenderer(args, kwargs) (line 1030)
        MixedModeRenderer_call_result_247284 = invoke(stypy.reporting.localization.Localization(__file__, 1030, 19), MixedModeRenderer_247274, *[figure_247276, width_247277, height_247278, dpi_247279, ps_renderer_247280], **kwargs_247283)
        
        # Assigning a type to the variable 'renderer' (line 1030)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1030, 8), 'renderer', MixedModeRenderer_call_result_247284)
        
        # Call to draw(...): (line 1034)
        # Processing the call arguments (line 1034)
        # Getting the type of 'renderer' (line 1034)
        renderer_247288 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1034, 25), 'renderer', False)
        # Processing the call keyword arguments (line 1034)
        kwargs_247289 = {}
        # Getting the type of 'self' (line 1034)
        self_247285 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1034, 8), 'self', False)
        # Obtaining the member 'figure' of a type (line 1034)
        figure_247286 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1034, 8), self_247285, 'figure')
        # Obtaining the member 'draw' of a type (line 1034)
        draw_247287 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1034, 8), figure_247286, 'draw')
        # Calling draw(args, kwargs) (line 1034)
        draw_call_result_247290 = invoke(stypy.reporting.localization.Localization(__file__, 1034, 8), draw_247287, *[renderer_247288], **kwargs_247289)
        
        
        # Getting the type of 'dryrun' (line 1036)
        dryrun_247291 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1036, 11), 'dryrun')
        # Testing the type of an if condition (line 1036)
        if_condition_247292 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1036, 8), dryrun_247291)
        # Assigning a type to the variable 'if_condition_247292' (line 1036)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1036, 8), 'if_condition_247292', if_condition_247292)
        # SSA begins for if statement (line 1036)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        # Assigning a type to the variable 'stypy_return_type' (line 1037)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1037, 12), 'stypy_return_type', types.NoneType)
        # SSA join for if statement (line 1036)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to set_facecolor(...): (line 1039)
        # Processing the call arguments (line 1039)
        # Getting the type of 'origfacecolor' (line 1039)
        origfacecolor_247296 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1039, 34), 'origfacecolor', False)
        # Processing the call keyword arguments (line 1039)
        kwargs_247297 = {}
        # Getting the type of 'self' (line 1039)
        self_247293 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1039, 8), 'self', False)
        # Obtaining the member 'figure' of a type (line 1039)
        figure_247294 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1039, 8), self_247293, 'figure')
        # Obtaining the member 'set_facecolor' of a type (line 1039)
        set_facecolor_247295 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1039, 8), figure_247294, 'set_facecolor')
        # Calling set_facecolor(args, kwargs) (line 1039)
        set_facecolor_call_result_247298 = invoke(stypy.reporting.localization.Localization(__file__, 1039, 8), set_facecolor_247295, *[origfacecolor_247296], **kwargs_247297)
        
        
        # Call to set_edgecolor(...): (line 1040)
        # Processing the call arguments (line 1040)
        # Getting the type of 'origedgecolor' (line 1040)
        origedgecolor_247302 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1040, 34), 'origedgecolor', False)
        # Processing the call keyword arguments (line 1040)
        kwargs_247303 = {}
        # Getting the type of 'self' (line 1040)
        self_247299 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1040, 8), 'self', False)
        # Obtaining the member 'figure' of a type (line 1040)
        figure_247300 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1040, 8), self_247299, 'figure')
        # Obtaining the member 'set_edgecolor' of a type (line 1040)
        set_edgecolor_247301 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1040, 8), figure_247300, 'set_edgecolor')
        # Calling set_edgecolor(args, kwargs) (line 1040)
        set_edgecolor_call_result_247304 = invoke(stypy.reporting.localization.Localization(__file__, 1040, 8), set_edgecolor_247301, *[origedgecolor_247302], **kwargs_247303)
        
        
        
        # Evaluating a boolean operation
        
        # Getting the type of 'metadata' (line 1043)
        metadata_247305 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1043, 11), 'metadata')
        # Getting the type of 'None' (line 1043)
        None_247306 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1043, 27), 'None')
        # Applying the binary operator 'isnot' (line 1043)
        result_is_not_247307 = python_operator(stypy.reporting.localization.Localization(__file__, 1043, 11), 'isnot', metadata_247305, None_247306)
        
        
        unicode_247308 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1043, 36), 'unicode', u'Creator')
        # Getting the type of 'metadata' (line 1043)
        metadata_247309 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1043, 49), 'metadata')
        # Applying the binary operator 'in' (line 1043)
        result_contains_247310 = python_operator(stypy.reporting.localization.Localization(__file__, 1043, 36), 'in', unicode_247308, metadata_247309)
        
        # Applying the binary operator 'and' (line 1043)
        result_and_keyword_247311 = python_operator(stypy.reporting.localization.Localization(__file__, 1043, 11), 'and', result_is_not_247307, result_contains_247310)
        
        # Testing the type of an if condition (line 1043)
        if_condition_247312 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1043, 8), result_and_keyword_247311)
        # Assigning a type to the variable 'if_condition_247312' (line 1043)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1043, 8), 'if_condition_247312', if_condition_247312)
        # SSA begins for if statement (line 1043)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Subscript to a Name (line 1044):
        
        # Assigning a Subscript to a Name (line 1044):
        
        # Obtaining the type of the subscript
        unicode_247313 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1044, 35), 'unicode', u'Creator')
        # Getting the type of 'metadata' (line 1044)
        metadata_247314 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1044, 26), 'metadata')
        # Obtaining the member '__getitem__' of a type (line 1044)
        getitem___247315 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1044, 26), metadata_247314, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1044)
        subscript_call_result_247316 = invoke(stypy.reporting.localization.Localization(__file__, 1044, 26), getitem___247315, unicode_247313)
        
        # Assigning a type to the variable 'creator_str' (line 1044)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1044, 12), 'creator_str', subscript_call_result_247316)
        # SSA branch for the else part of an if statement (line 1043)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a BinOp to a Name (line 1046):
        
        # Assigning a BinOp to a Name (line 1046):
        unicode_247317 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1046, 26), 'unicode', u'matplotlib version ')
        # Getting the type of '__version__' (line 1046)
        version___247318 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1046, 50), '__version__')
        # Applying the binary operator '+' (line 1046)
        result_add_247319 = python_operator(stypy.reporting.localization.Localization(__file__, 1046, 26), '+', unicode_247317, version___247318)
        
        unicode_247320 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1047, 16), 'unicode', u', http://matplotlib.org/')
        # Applying the binary operator '+' (line 1046)
        result_add_247321 = python_operator(stypy.reporting.localization.Localization(__file__, 1046, 62), '+', result_add_247319, unicode_247320)
        
        # Assigning a type to the variable 'creator_str' (line 1046)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1046, 12), 'creator_str', result_add_247321)
        # SSA join for if statement (line 1043)
        module_type_store = module_type_store.join_ssa_context()
        

        @norecursion
        def print_figure_impl(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'print_figure_impl'
            module_type_store = module_type_store.open_function_context('print_figure_impl', 1049, 8, False)
            
            # Passed parameters checking function
            print_figure_impl.stypy_localization = localization
            print_figure_impl.stypy_type_of_self = None
            print_figure_impl.stypy_type_store = module_type_store
            print_figure_impl.stypy_function_name = 'print_figure_impl'
            print_figure_impl.stypy_param_names_list = ['fh']
            print_figure_impl.stypy_varargs_param_name = None
            print_figure_impl.stypy_kwargs_param_name = None
            print_figure_impl.stypy_call_defaults = defaults
            print_figure_impl.stypy_call_varargs = varargs
            print_figure_impl.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'print_figure_impl', ['fh'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'print_figure_impl', localization, ['fh'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'print_figure_impl(...)' code ##################

            
            # Getting the type of 'isEPSF' (line 1051)
            isEPSF_247322 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1051, 15), 'isEPSF')
            # Testing the type of an if condition (line 1051)
            if_condition_247323 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1051, 12), isEPSF_247322)
            # Assigning a type to the variable 'if_condition_247323' (line 1051)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1051, 12), 'if_condition_247323', if_condition_247323)
            # SSA begins for if statement (line 1051)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Call to print(...): (line 1052)
            # Processing the call arguments (line 1052)
            unicode_247325 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1052, 22), 'unicode', u'%!PS-Adobe-3.0 EPSF-3.0')
            # Processing the call keyword arguments (line 1052)
            # Getting the type of 'fh' (line 1052)
            fh_247326 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1052, 54), 'fh', False)
            keyword_247327 = fh_247326
            kwargs_247328 = {'file': keyword_247327}
            # Getting the type of 'print' (line 1052)
            print_247324 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1052, 16), 'print', False)
            # Calling print(args, kwargs) (line 1052)
            print_call_result_247329 = invoke(stypy.reporting.localization.Localization(__file__, 1052, 16), print_247324, *[unicode_247325], **kwargs_247328)
            
            # SSA branch for the else part of an if statement (line 1051)
            module_type_store.open_ssa_branch('else')
            
            # Call to print(...): (line 1054)
            # Processing the call arguments (line 1054)
            unicode_247331 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1054, 22), 'unicode', u'%!PS-Adobe-3.0')
            # Processing the call keyword arguments (line 1054)
            # Getting the type of 'fh' (line 1054)
            fh_247332 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1054, 45), 'fh', False)
            keyword_247333 = fh_247332
            kwargs_247334 = {'file': keyword_247333}
            # Getting the type of 'print' (line 1054)
            print_247330 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1054, 16), 'print', False)
            # Calling print(args, kwargs) (line 1054)
            print_call_result_247335 = invoke(stypy.reporting.localization.Localization(__file__, 1054, 16), print_247330, *[unicode_247331], **kwargs_247334)
            
            # SSA join for if statement (line 1051)
            module_type_store = module_type_store.join_ssa_context()
            
            
            # Getting the type of 'title' (line 1055)
            title_247336 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1055, 15), 'title')
            # Testing the type of an if condition (line 1055)
            if_condition_247337 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1055, 12), title_247336)
            # Assigning a type to the variable 'if_condition_247337' (line 1055)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1055, 12), 'if_condition_247337', if_condition_247337)
            # SSA begins for if statement (line 1055)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Call to print(...): (line 1056)
            # Processing the call arguments (line 1056)
            unicode_247339 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1056, 22), 'unicode', u'%%Title: ')
            # Getting the type of 'title' (line 1056)
            title_247340 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1056, 34), 'title', False)
            # Applying the binary operator '+' (line 1056)
            result_add_247341 = python_operator(stypy.reporting.localization.Localization(__file__, 1056, 22), '+', unicode_247339, title_247340)
            
            # Processing the call keyword arguments (line 1056)
            # Getting the type of 'fh' (line 1056)
            fh_247342 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1056, 46), 'fh', False)
            keyword_247343 = fh_247342
            kwargs_247344 = {'file': keyword_247343}
            # Getting the type of 'print' (line 1056)
            print_247338 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1056, 16), 'print', False)
            # Calling print(args, kwargs) (line 1056)
            print_call_result_247345 = invoke(stypy.reporting.localization.Localization(__file__, 1056, 16), print_247338, *[result_add_247341], **kwargs_247344)
            
            # SSA join for if statement (line 1055)
            module_type_store = module_type_store.join_ssa_context()
            
            
            # Call to print(...): (line 1057)
            # Processing the call arguments (line 1057)
            unicode_247347 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1057, 18), 'unicode', u'%%Creator: ')
            # Getting the type of 'creator_str' (line 1057)
            creator_str_247348 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1057, 34), 'creator_str', False)
            # Applying the binary operator '+' (line 1057)
            result_add_247349 = python_operator(stypy.reporting.localization.Localization(__file__, 1057, 18), '+', unicode_247347, creator_str_247348)
            
            # Processing the call keyword arguments (line 1057)
            # Getting the type of 'fh' (line 1057)
            fh_247350 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1057, 52), 'fh', False)
            keyword_247351 = fh_247350
            kwargs_247352 = {'file': keyword_247351}
            # Getting the type of 'print' (line 1057)
            print_247346 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1057, 12), 'print', False)
            # Calling print(args, kwargs) (line 1057)
            print_call_result_247353 = invoke(stypy.reporting.localization.Localization(__file__, 1057, 12), print_247346, *[result_add_247349], **kwargs_247352)
            
            
            # Assigning a Call to a Name (line 1060):
            
            # Assigning a Call to a Name (line 1060):
            
            # Call to getenv(...): (line 1060)
            # Processing the call arguments (line 1060)
            unicode_247356 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1060, 42), 'unicode', u'SOURCE_DATE_EPOCH')
            # Processing the call keyword arguments (line 1060)
            kwargs_247357 = {}
            # Getting the type of 'os' (line 1060)
            os_247354 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1060, 32), 'os', False)
            # Obtaining the member 'getenv' of a type (line 1060)
            getenv_247355 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1060, 32), os_247354, 'getenv')
            # Calling getenv(args, kwargs) (line 1060)
            getenv_call_result_247358 = invoke(stypy.reporting.localization.Localization(__file__, 1060, 32), getenv_247355, *[unicode_247356], **kwargs_247357)
            
            # Assigning a type to the variable 'source_date_epoch' (line 1060)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1060, 12), 'source_date_epoch', getenv_call_result_247358)
            
            # Getting the type of 'source_date_epoch' (line 1061)
            source_date_epoch_247359 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1061, 15), 'source_date_epoch')
            # Testing the type of an if condition (line 1061)
            if_condition_247360 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1061, 12), source_date_epoch_247359)
            # Assigning a type to the variable 'if_condition_247360' (line 1061)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1061, 12), 'if_condition_247360', if_condition_247360)
            # SSA begins for if statement (line 1061)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Call to a Name (line 1062):
            
            # Assigning a Call to a Name (line 1062):
            
            # Call to strftime(...): (line 1062)
            # Processing the call arguments (line 1062)
            unicode_247371 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1063, 53), 'unicode', u'%a %b %d %H:%M:%S %Y')
            # Processing the call keyword arguments (line 1062)
            kwargs_247372 = {}
            
            # Call to utcfromtimestamp(...): (line 1062)
            # Processing the call arguments (line 1062)
            
            # Call to int(...): (line 1063)
            # Processing the call arguments (line 1063)
            # Getting the type of 'source_date_epoch' (line 1063)
            source_date_epoch_247365 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1063, 24), 'source_date_epoch', False)
            # Processing the call keyword arguments (line 1063)
            kwargs_247366 = {}
            # Getting the type of 'int' (line 1063)
            int_247364 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1063, 20), 'int', False)
            # Calling int(args, kwargs) (line 1063)
            int_call_result_247367 = invoke(stypy.reporting.localization.Localization(__file__, 1063, 20), int_247364, *[source_date_epoch_247365], **kwargs_247366)
            
            # Processing the call keyword arguments (line 1062)
            kwargs_247368 = {}
            # Getting the type of 'datetime' (line 1062)
            datetime_247361 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1062, 30), 'datetime', False)
            # Obtaining the member 'datetime' of a type (line 1062)
            datetime_247362 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1062, 30), datetime_247361, 'datetime')
            # Obtaining the member 'utcfromtimestamp' of a type (line 1062)
            utcfromtimestamp_247363 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1062, 30), datetime_247362, 'utcfromtimestamp')
            # Calling utcfromtimestamp(args, kwargs) (line 1062)
            utcfromtimestamp_call_result_247369 = invoke(stypy.reporting.localization.Localization(__file__, 1062, 30), utcfromtimestamp_247363, *[int_call_result_247367], **kwargs_247368)
            
            # Obtaining the member 'strftime' of a type (line 1062)
            strftime_247370 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1062, 30), utcfromtimestamp_call_result_247369, 'strftime')
            # Calling strftime(args, kwargs) (line 1062)
            strftime_call_result_247373 = invoke(stypy.reporting.localization.Localization(__file__, 1062, 30), strftime_247370, *[unicode_247371], **kwargs_247372)
            
            # Assigning a type to the variable 'source_date' (line 1062)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1062, 16), 'source_date', strftime_call_result_247373)
            # SSA branch for the else part of an if statement (line 1061)
            module_type_store.open_ssa_branch('else')
            
            # Assigning a Call to a Name (line 1065):
            
            # Assigning a Call to a Name (line 1065):
            
            # Call to ctime(...): (line 1065)
            # Processing the call keyword arguments (line 1065)
            kwargs_247376 = {}
            # Getting the type of 'time' (line 1065)
            time_247374 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1065, 30), 'time', False)
            # Obtaining the member 'ctime' of a type (line 1065)
            ctime_247375 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1065, 30), time_247374, 'ctime')
            # Calling ctime(args, kwargs) (line 1065)
            ctime_call_result_247377 = invoke(stypy.reporting.localization.Localization(__file__, 1065, 30), ctime_247375, *[], **kwargs_247376)
            
            # Assigning a type to the variable 'source_date' (line 1065)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1065, 16), 'source_date', ctime_call_result_247377)
            # SSA join for if statement (line 1061)
            module_type_store = module_type_store.join_ssa_context()
            
            
            # Call to print(...): (line 1066)
            # Processing the call arguments (line 1066)
            unicode_247379 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1066, 18), 'unicode', u'%%CreationDate: ')
            # Getting the type of 'source_date' (line 1066)
            source_date_247380 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1066, 37), 'source_date', False)
            # Applying the binary operator '+' (line 1066)
            result_add_247381 = python_operator(stypy.reporting.localization.Localization(__file__, 1066, 18), '+', unicode_247379, source_date_247380)
            
            # Processing the call keyword arguments (line 1066)
            # Getting the type of 'fh' (line 1066)
            fh_247382 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1066, 55), 'fh', False)
            keyword_247383 = fh_247382
            kwargs_247384 = {'file': keyword_247383}
            # Getting the type of 'print' (line 1066)
            print_247378 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1066, 12), 'print', False)
            # Calling print(args, kwargs) (line 1066)
            print_call_result_247385 = invoke(stypy.reporting.localization.Localization(__file__, 1066, 12), print_247378, *[result_add_247381], **kwargs_247384)
            
            
            # Call to print(...): (line 1067)
            # Processing the call arguments (line 1067)
            unicode_247387 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1067, 18), 'unicode', u'%%Orientation: ')
            # Getting the type of 'orientation' (line 1067)
            orientation_247388 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1067, 38), 'orientation', False)
            # Applying the binary operator '+' (line 1067)
            result_add_247389 = python_operator(stypy.reporting.localization.Localization(__file__, 1067, 18), '+', unicode_247387, orientation_247388)
            
            # Processing the call keyword arguments (line 1067)
            # Getting the type of 'fh' (line 1067)
            fh_247390 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1067, 56), 'fh', False)
            keyword_247391 = fh_247390
            kwargs_247392 = {'file': keyword_247391}
            # Getting the type of 'print' (line 1067)
            print_247386 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1067, 12), 'print', False)
            # Calling print(args, kwargs) (line 1067)
            print_call_result_247393 = invoke(stypy.reporting.localization.Localization(__file__, 1067, 12), print_247386, *[result_add_247389], **kwargs_247392)
            
            
            
            # Getting the type of 'isEPSF' (line 1068)
            isEPSF_247394 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1068, 19), 'isEPSF')
            # Applying the 'not' unary operator (line 1068)
            result_not__247395 = python_operator(stypy.reporting.localization.Localization(__file__, 1068, 15), 'not', isEPSF_247394)
            
            # Testing the type of an if condition (line 1068)
            if_condition_247396 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1068, 12), result_not__247395)
            # Assigning a type to the variable 'if_condition_247396' (line 1068)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1068, 12), 'if_condition_247396', if_condition_247396)
            # SSA begins for if statement (line 1068)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Call to print(...): (line 1069)
            # Processing the call arguments (line 1069)
            unicode_247398 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1069, 22), 'unicode', u'%%DocumentPaperSizes: ')
            # Getting the type of 'papertype' (line 1069)
            papertype_247399 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1069, 47), 'papertype', False)
            # Applying the binary operator '+' (line 1069)
            result_add_247400 = python_operator(stypy.reporting.localization.Localization(__file__, 1069, 22), '+', unicode_247398, papertype_247399)
            
            # Processing the call keyword arguments (line 1069)
            # Getting the type of 'fh' (line 1069)
            fh_247401 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1069, 63), 'fh', False)
            keyword_247402 = fh_247401
            kwargs_247403 = {'file': keyword_247402}
            # Getting the type of 'print' (line 1069)
            print_247397 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1069, 16), 'print', False)
            # Calling print(args, kwargs) (line 1069)
            print_call_result_247404 = invoke(stypy.reporting.localization.Localization(__file__, 1069, 16), print_247397, *[result_add_247400], **kwargs_247403)
            
            # SSA join for if statement (line 1068)
            module_type_store = module_type_store.join_ssa_context()
            
            
            # Call to print(...): (line 1070)
            # Processing the call arguments (line 1070)
            unicode_247406 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1070, 18), 'unicode', u'%%%%BoundingBox: %d %d %d %d')
            # Getting the type of 'bbox' (line 1070)
            bbox_247407 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1070, 51), 'bbox', False)
            # Applying the binary operator '%' (line 1070)
            result_mod_247408 = python_operator(stypy.reporting.localization.Localization(__file__, 1070, 18), '%', unicode_247406, bbox_247407)
            
            # Processing the call keyword arguments (line 1070)
            # Getting the type of 'fh' (line 1070)
            fh_247409 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1070, 62), 'fh', False)
            keyword_247410 = fh_247409
            kwargs_247411 = {'file': keyword_247410}
            # Getting the type of 'print' (line 1070)
            print_247405 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1070, 12), 'print', False)
            # Calling print(args, kwargs) (line 1070)
            print_call_result_247412 = invoke(stypy.reporting.localization.Localization(__file__, 1070, 12), print_247405, *[result_mod_247408], **kwargs_247411)
            
            
            
            # Getting the type of 'isEPSF' (line 1071)
            isEPSF_247413 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1071, 19), 'isEPSF')
            # Applying the 'not' unary operator (line 1071)
            result_not__247414 = python_operator(stypy.reporting.localization.Localization(__file__, 1071, 15), 'not', isEPSF_247413)
            
            # Testing the type of an if condition (line 1071)
            if_condition_247415 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1071, 12), result_not__247414)
            # Assigning a type to the variable 'if_condition_247415' (line 1071)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1071, 12), 'if_condition_247415', if_condition_247415)
            # SSA begins for if statement (line 1071)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Call to print(...): (line 1072)
            # Processing the call arguments (line 1072)
            unicode_247417 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1072, 22), 'unicode', u'%%Pages: 1')
            # Processing the call keyword arguments (line 1072)
            # Getting the type of 'fh' (line 1072)
            fh_247418 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1072, 41), 'fh', False)
            keyword_247419 = fh_247418
            kwargs_247420 = {'file': keyword_247419}
            # Getting the type of 'print' (line 1072)
            print_247416 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1072, 16), 'print', False)
            # Calling print(args, kwargs) (line 1072)
            print_call_result_247421 = invoke(stypy.reporting.localization.Localization(__file__, 1072, 16), print_247416, *[unicode_247417], **kwargs_247420)
            
            # SSA join for if statement (line 1071)
            module_type_store = module_type_store.join_ssa_context()
            
            
            # Call to print(...): (line 1073)
            # Processing the call arguments (line 1073)
            unicode_247423 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1073, 18), 'unicode', u'%%EndComments')
            # Processing the call keyword arguments (line 1073)
            # Getting the type of 'fh' (line 1073)
            fh_247424 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1073, 40), 'fh', False)
            keyword_247425 = fh_247424
            kwargs_247426 = {'file': keyword_247425}
            # Getting the type of 'print' (line 1073)
            print_247422 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1073, 12), 'print', False)
            # Calling print(args, kwargs) (line 1073)
            print_call_result_247427 = invoke(stypy.reporting.localization.Localization(__file__, 1073, 12), print_247422, *[unicode_247423], **kwargs_247426)
            
            
            # Assigning a Call to a Name (line 1075):
            
            # Assigning a Call to a Name (line 1075):
            
            # Call to len(...): (line 1075)
            # Processing the call arguments (line 1075)
            # Getting the type of 'psDefs' (line 1075)
            psDefs_247429 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1075, 24), 'psDefs', False)
            # Processing the call keyword arguments (line 1075)
            kwargs_247430 = {}
            # Getting the type of 'len' (line 1075)
            len_247428 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1075, 20), 'len', False)
            # Calling len(args, kwargs) (line 1075)
            len_call_result_247431 = invoke(stypy.reporting.localization.Localization(__file__, 1075, 20), len_247428, *[psDefs_247429], **kwargs_247430)
            
            # Assigning a type to the variable 'Ndict' (line 1075)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1075, 12), 'Ndict', len_call_result_247431)
            
            # Call to print(...): (line 1076)
            # Processing the call arguments (line 1076)
            unicode_247433 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1076, 18), 'unicode', u'%%BeginProlog')
            # Processing the call keyword arguments (line 1076)
            # Getting the type of 'fh' (line 1076)
            fh_247434 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1076, 40), 'fh', False)
            keyword_247435 = fh_247434
            kwargs_247436 = {'file': keyword_247435}
            # Getting the type of 'print' (line 1076)
            print_247432 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1076, 12), 'print', False)
            # Calling print(args, kwargs) (line 1076)
            print_call_result_247437 = invoke(stypy.reporting.localization.Localization(__file__, 1076, 12), print_247432, *[unicode_247433], **kwargs_247436)
            
            
            
            
            # Obtaining the type of the subscript
            unicode_247438 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1077, 28), 'unicode', u'ps.useafm')
            # Getting the type of 'rcParams' (line 1077)
            rcParams_247439 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1077, 19), 'rcParams')
            # Obtaining the member '__getitem__' of a type (line 1077)
            getitem___247440 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1077, 19), rcParams_247439, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 1077)
            subscript_call_result_247441 = invoke(stypy.reporting.localization.Localization(__file__, 1077, 19), getitem___247440, unicode_247438)
            
            # Applying the 'not' unary operator (line 1077)
            result_not__247442 = python_operator(stypy.reporting.localization.Localization(__file__, 1077, 15), 'not', subscript_call_result_247441)
            
            # Testing the type of an if condition (line 1077)
            if_condition_247443 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1077, 12), result_not__247442)
            # Assigning a type to the variable 'if_condition_247443' (line 1077)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1077, 12), 'if_condition_247443', if_condition_247443)
            # SSA begins for if statement (line 1077)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Getting the type of 'Ndict' (line 1078)
            Ndict_247444 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1078, 16), 'Ndict')
            
            # Call to len(...): (line 1078)
            # Processing the call arguments (line 1078)
            # Getting the type of 'ps_renderer' (line 1078)
            ps_renderer_247446 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1078, 29), 'ps_renderer', False)
            # Obtaining the member 'used_characters' of a type (line 1078)
            used_characters_247447 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1078, 29), ps_renderer_247446, 'used_characters')
            # Processing the call keyword arguments (line 1078)
            kwargs_247448 = {}
            # Getting the type of 'len' (line 1078)
            len_247445 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1078, 25), 'len', False)
            # Calling len(args, kwargs) (line 1078)
            len_call_result_247449 = invoke(stypy.reporting.localization.Localization(__file__, 1078, 25), len_247445, *[used_characters_247447], **kwargs_247448)
            
            # Applying the binary operator '+=' (line 1078)
            result_iadd_247450 = python_operator(stypy.reporting.localization.Localization(__file__, 1078, 16), '+=', Ndict_247444, len_call_result_247449)
            # Assigning a type to the variable 'Ndict' (line 1078)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1078, 16), 'Ndict', result_iadd_247450)
            
            # SSA join for if statement (line 1077)
            module_type_store = module_type_store.join_ssa_context()
            
            
            # Call to print(...): (line 1079)
            # Processing the call arguments (line 1079)
            unicode_247452 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1079, 18), 'unicode', u'/mpldict %d dict def')
            # Getting the type of 'Ndict' (line 1079)
            Ndict_247453 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1079, 43), 'Ndict', False)
            # Applying the binary operator '%' (line 1079)
            result_mod_247454 = python_operator(stypy.reporting.localization.Localization(__file__, 1079, 18), '%', unicode_247452, Ndict_247453)
            
            # Processing the call keyword arguments (line 1079)
            # Getting the type of 'fh' (line 1079)
            fh_247455 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1079, 55), 'fh', False)
            keyword_247456 = fh_247455
            kwargs_247457 = {'file': keyword_247456}
            # Getting the type of 'print' (line 1079)
            print_247451 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1079, 12), 'print', False)
            # Calling print(args, kwargs) (line 1079)
            print_call_result_247458 = invoke(stypy.reporting.localization.Localization(__file__, 1079, 12), print_247451, *[result_mod_247454], **kwargs_247457)
            
            
            # Call to print(...): (line 1080)
            # Processing the call arguments (line 1080)
            unicode_247460 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1080, 18), 'unicode', u'mpldict begin')
            # Processing the call keyword arguments (line 1080)
            # Getting the type of 'fh' (line 1080)
            fh_247461 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1080, 40), 'fh', False)
            keyword_247462 = fh_247461
            kwargs_247463 = {'file': keyword_247462}
            # Getting the type of 'print' (line 1080)
            print_247459 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1080, 12), 'print', False)
            # Calling print(args, kwargs) (line 1080)
            print_call_result_247464 = invoke(stypy.reporting.localization.Localization(__file__, 1080, 12), print_247459, *[unicode_247460], **kwargs_247463)
            
            
            # Getting the type of 'psDefs' (line 1081)
            psDefs_247465 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1081, 21), 'psDefs')
            # Testing the type of a for loop iterable (line 1081)
            is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1081, 12), psDefs_247465)
            # Getting the type of the for loop variable (line 1081)
            for_loop_var_247466 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1081, 12), psDefs_247465)
            # Assigning a type to the variable 'd' (line 1081)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1081, 12), 'd', for_loop_var_247466)
            # SSA begins for a for statement (line 1081)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
            
            # Assigning a Call to a Name (line 1082):
            
            # Assigning a Call to a Name (line 1082):
            
            # Call to strip(...): (line 1082)
            # Processing the call keyword arguments (line 1082)
            kwargs_247469 = {}
            # Getting the type of 'd' (line 1082)
            d_247467 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1082, 20), 'd', False)
            # Obtaining the member 'strip' of a type (line 1082)
            strip_247468 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1082, 20), d_247467, 'strip')
            # Calling strip(args, kwargs) (line 1082)
            strip_call_result_247470 = invoke(stypy.reporting.localization.Localization(__file__, 1082, 20), strip_247468, *[], **kwargs_247469)
            
            # Assigning a type to the variable 'd' (line 1082)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1082, 16), 'd', strip_call_result_247470)
            
            
            # Call to split(...): (line 1083)
            # Processing the call arguments (line 1083)
            unicode_247473 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1083, 33), 'unicode', u'\n')
            # Processing the call keyword arguments (line 1083)
            kwargs_247474 = {}
            # Getting the type of 'd' (line 1083)
            d_247471 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1083, 25), 'd', False)
            # Obtaining the member 'split' of a type (line 1083)
            split_247472 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1083, 25), d_247471, 'split')
            # Calling split(args, kwargs) (line 1083)
            split_call_result_247475 = invoke(stypy.reporting.localization.Localization(__file__, 1083, 25), split_247472, *[unicode_247473], **kwargs_247474)
            
            # Testing the type of a for loop iterable (line 1083)
            is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1083, 16), split_call_result_247475)
            # Getting the type of the for loop variable (line 1083)
            for_loop_var_247476 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1083, 16), split_call_result_247475)
            # Assigning a type to the variable 'l' (line 1083)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1083, 16), 'l', for_loop_var_247476)
            # SSA begins for a for statement (line 1083)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
            
            # Call to print(...): (line 1084)
            # Processing the call arguments (line 1084)
            
            # Call to strip(...): (line 1084)
            # Processing the call keyword arguments (line 1084)
            kwargs_247480 = {}
            # Getting the type of 'l' (line 1084)
            l_247478 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1084, 26), 'l', False)
            # Obtaining the member 'strip' of a type (line 1084)
            strip_247479 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1084, 26), l_247478, 'strip')
            # Calling strip(args, kwargs) (line 1084)
            strip_call_result_247481 = invoke(stypy.reporting.localization.Localization(__file__, 1084, 26), strip_247479, *[], **kwargs_247480)
            
            # Processing the call keyword arguments (line 1084)
            # Getting the type of 'fh' (line 1084)
            fh_247482 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1084, 42), 'fh', False)
            keyword_247483 = fh_247482
            kwargs_247484 = {'file': keyword_247483}
            # Getting the type of 'print' (line 1084)
            print_247477 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1084, 20), 'print', False)
            # Calling print(args, kwargs) (line 1084)
            print_call_result_247485 = invoke(stypy.reporting.localization.Localization(__file__, 1084, 20), print_247477, *[strip_call_result_247481], **kwargs_247484)
            
            # SSA join for a for statement
            module_type_store = module_type_store.join_ssa_context()
            
            # SSA join for a for statement
            module_type_store = module_type_store.join_ssa_context()
            
            
            
            
            # Obtaining the type of the subscript
            unicode_247486 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1085, 28), 'unicode', u'ps.useafm')
            # Getting the type of 'rcParams' (line 1085)
            rcParams_247487 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1085, 19), 'rcParams')
            # Obtaining the member '__getitem__' of a type (line 1085)
            getitem___247488 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1085, 19), rcParams_247487, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 1085)
            subscript_call_result_247489 = invoke(stypy.reporting.localization.Localization(__file__, 1085, 19), getitem___247488, unicode_247486)
            
            # Applying the 'not' unary operator (line 1085)
            result_not__247490 = python_operator(stypy.reporting.localization.Localization(__file__, 1085, 15), 'not', subscript_call_result_247489)
            
            # Testing the type of an if condition (line 1085)
            if_condition_247491 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1085, 12), result_not__247490)
            # Assigning a type to the variable 'if_condition_247491' (line 1085)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1085, 12), 'if_condition_247491', if_condition_247491)
            # SSA begins for if statement (line 1085)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            
            # Call to itervalues(...): (line 1086)
            # Processing the call arguments (line 1086)
            # Getting the type of 'ps_renderer' (line 1087)
            ps_renderer_247494 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1087, 24), 'ps_renderer', False)
            # Obtaining the member 'used_characters' of a type (line 1087)
            used_characters_247495 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1087, 24), ps_renderer_247494, 'used_characters')
            # Processing the call keyword arguments (line 1086)
            kwargs_247496 = {}
            # Getting the type of 'six' (line 1086)
            six_247492 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1086, 44), 'six', False)
            # Obtaining the member 'itervalues' of a type (line 1086)
            itervalues_247493 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1086, 44), six_247492, 'itervalues')
            # Calling itervalues(args, kwargs) (line 1086)
            itervalues_call_result_247497 = invoke(stypy.reporting.localization.Localization(__file__, 1086, 44), itervalues_247493, *[used_characters_247495], **kwargs_247496)
            
            # Testing the type of a for loop iterable (line 1086)
            is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1086, 16), itervalues_call_result_247497)
            # Getting the type of the for loop variable (line 1086)
            for_loop_var_247498 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1086, 16), itervalues_call_result_247497)
            # Assigning a type to the variable 'font_filename' (line 1086)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1086, 16), 'font_filename', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1086, 16), for_loop_var_247498))
            # Assigning a type to the variable 'chars' (line 1086)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1086, 16), 'chars', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1086, 16), for_loop_var_247498))
            # SSA begins for a for statement (line 1086)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
            
            
            # Call to len(...): (line 1088)
            # Processing the call arguments (line 1088)
            # Getting the type of 'chars' (line 1088)
            chars_247500 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1088, 27), 'chars', False)
            # Processing the call keyword arguments (line 1088)
            kwargs_247501 = {}
            # Getting the type of 'len' (line 1088)
            len_247499 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1088, 23), 'len', False)
            # Calling len(args, kwargs) (line 1088)
            len_call_result_247502 = invoke(stypy.reporting.localization.Localization(__file__, 1088, 23), len_247499, *[chars_247500], **kwargs_247501)
            
            # Testing the type of an if condition (line 1088)
            if_condition_247503 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1088, 20), len_call_result_247502)
            # Assigning a type to the variable 'if_condition_247503' (line 1088)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1088, 20), 'if_condition_247503', if_condition_247503)
            # SSA begins for if statement (line 1088)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Call to a Name (line 1089):
            
            # Assigning a Call to a Name (line 1089):
            
            # Call to get_font(...): (line 1089)
            # Processing the call arguments (line 1089)
            # Getting the type of 'font_filename' (line 1089)
            font_filename_247505 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1089, 40), 'font_filename', False)
            # Processing the call keyword arguments (line 1089)
            kwargs_247506 = {}
            # Getting the type of 'get_font' (line 1089)
            get_font_247504 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1089, 31), 'get_font', False)
            # Calling get_font(args, kwargs) (line 1089)
            get_font_call_result_247507 = invoke(stypy.reporting.localization.Localization(__file__, 1089, 31), get_font_247504, *[font_filename_247505], **kwargs_247506)
            
            # Assigning a type to the variable 'font' (line 1089)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1089, 24), 'font', get_font_call_result_247507)
            
            # Assigning a List to a Name (line 1090):
            
            # Assigning a List to a Name (line 1090):
            
            # Obtaining an instance of the builtin type 'list' (line 1090)
            list_247508 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1090, 36), 'list')
            # Adding type elements to the builtin type 'list' instance (line 1090)
            
            # Assigning a type to the variable 'glyph_ids' (line 1090)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1090, 24), 'glyph_ids', list_247508)
            
            # Getting the type of 'chars' (line 1091)
            chars_247509 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1091, 33), 'chars')
            # Testing the type of a for loop iterable (line 1091)
            is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1091, 24), chars_247509)
            # Getting the type of the for loop variable (line 1091)
            for_loop_var_247510 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1091, 24), chars_247509)
            # Assigning a type to the variable 'c' (line 1091)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1091, 24), 'c', for_loop_var_247510)
            # SSA begins for a for statement (line 1091)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
            
            # Assigning a Call to a Name (line 1092):
            
            # Assigning a Call to a Name (line 1092):
            
            # Call to get_char_index(...): (line 1092)
            # Processing the call arguments (line 1092)
            # Getting the type of 'c' (line 1092)
            c_247513 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1092, 55), 'c', False)
            # Processing the call keyword arguments (line 1092)
            kwargs_247514 = {}
            # Getting the type of 'font' (line 1092)
            font_247511 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1092, 35), 'font', False)
            # Obtaining the member 'get_char_index' of a type (line 1092)
            get_char_index_247512 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1092, 35), font_247511, 'get_char_index')
            # Calling get_char_index(args, kwargs) (line 1092)
            get_char_index_call_result_247515 = invoke(stypy.reporting.localization.Localization(__file__, 1092, 35), get_char_index_247512, *[c_247513], **kwargs_247514)
            
            # Assigning a type to the variable 'gind' (line 1092)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1092, 28), 'gind', get_char_index_call_result_247515)
            
            # Call to append(...): (line 1093)
            # Processing the call arguments (line 1093)
            # Getting the type of 'gind' (line 1093)
            gind_247518 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1093, 45), 'gind', False)
            # Processing the call keyword arguments (line 1093)
            kwargs_247519 = {}
            # Getting the type of 'glyph_ids' (line 1093)
            glyph_ids_247516 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1093, 28), 'glyph_ids', False)
            # Obtaining the member 'append' of a type (line 1093)
            append_247517 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1093, 28), glyph_ids_247516, 'append')
            # Calling append(args, kwargs) (line 1093)
            append_call_result_247520 = invoke(stypy.reporting.localization.Localization(__file__, 1093, 28), append_247517, *[gind_247518], **kwargs_247519)
            
            # SSA join for a for statement
            module_type_store = module_type_store.join_ssa_context()
            
            
            # Assigning a Subscript to a Name (line 1095):
            
            # Assigning a Subscript to a Name (line 1095):
            
            # Obtaining the type of the subscript
            unicode_247521 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1095, 44), 'unicode', u'ps.fonttype')
            # Getting the type of 'rcParams' (line 1095)
            rcParams_247522 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1095, 35), 'rcParams')
            # Obtaining the member '__getitem__' of a type (line 1095)
            getitem___247523 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1095, 35), rcParams_247522, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 1095)
            subscript_call_result_247524 = invoke(stypy.reporting.localization.Localization(__file__, 1095, 35), getitem___247523, unicode_247521)
            
            # Assigning a type to the variable 'fonttype' (line 1095)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1095, 24), 'fonttype', subscript_call_result_247524)
            
            
            
            # Call to len(...): (line 1099)
            # Processing the call arguments (line 1099)
            # Getting the type of 'glyph_ids' (line 1099)
            glyph_ids_247526 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1099, 31), 'glyph_ids', False)
            # Processing the call keyword arguments (line 1099)
            kwargs_247527 = {}
            # Getting the type of 'len' (line 1099)
            len_247525 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1099, 27), 'len', False)
            # Calling len(args, kwargs) (line 1099)
            len_call_result_247528 = invoke(stypy.reporting.localization.Localization(__file__, 1099, 27), len_247525, *[glyph_ids_247526], **kwargs_247527)
            
            int_247529 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1099, 44), 'int')
            # Applying the binary operator '>' (line 1099)
            result_gt_247530 = python_operator(stypy.reporting.localization.Localization(__file__, 1099, 27), '>', len_call_result_247528, int_247529)
            
            # Testing the type of an if condition (line 1099)
            if_condition_247531 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1099, 24), result_gt_247530)
            # Assigning a type to the variable 'if_condition_247531' (line 1099)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1099, 24), 'if_condition_247531', if_condition_247531)
            # SSA begins for if statement (line 1099)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Num to a Name (line 1100):
            
            # Assigning a Num to a Name (line 1100):
            int_247532 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1100, 39), 'int')
            # Assigning a type to the variable 'fonttype' (line 1100)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1100, 28), 'fonttype', int_247532)
            # SSA join for if statement (line 1099)
            module_type_store = module_type_store.join_ssa_context()
            
            
            
            # Call to is_opentype_cff_font(...): (line 1106)
            # Processing the call arguments (line 1106)
            # Getting the type of 'font_filename' (line 1106)
            font_filename_247534 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1106, 48), 'font_filename', False)
            # Processing the call keyword arguments (line 1106)
            kwargs_247535 = {}
            # Getting the type of 'is_opentype_cff_font' (line 1106)
            is_opentype_cff_font_247533 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1106, 27), 'is_opentype_cff_font', False)
            # Calling is_opentype_cff_font(args, kwargs) (line 1106)
            is_opentype_cff_font_call_result_247536 = invoke(stypy.reporting.localization.Localization(__file__, 1106, 27), is_opentype_cff_font_247533, *[font_filename_247534], **kwargs_247535)
            
            # Testing the type of an if condition (line 1106)
            if_condition_247537 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1106, 24), is_opentype_cff_font_call_result_247536)
            # Assigning a type to the variable 'if_condition_247537' (line 1106)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1106, 24), 'if_condition_247537', if_condition_247537)
            # SSA begins for if statement (line 1106)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Str to a Name (line 1107):
            
            # Assigning a Str to a Name (line 1107):
            unicode_247538 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1107, 35), 'unicode', u'OpenType CFF fonts can not be saved using the internal Postscript backend at this time.\nConsider using the Cairo backend.')
            # Assigning a type to the variable 'msg' (line 1107)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1107, 28), 'msg', unicode_247538)
            
            # Call to RuntimeError(...): (line 1111)
            # Processing the call arguments (line 1111)
            # Getting the type of 'msg' (line 1111)
            msg_247540 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1111, 47), 'msg', False)
            # Processing the call keyword arguments (line 1111)
            kwargs_247541 = {}
            # Getting the type of 'RuntimeError' (line 1111)
            RuntimeError_247539 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1111, 34), 'RuntimeError', False)
            # Calling RuntimeError(args, kwargs) (line 1111)
            RuntimeError_call_result_247542 = invoke(stypy.reporting.localization.Localization(__file__, 1111, 34), RuntimeError_247539, *[msg_247540], **kwargs_247541)
            
            ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1111, 28), RuntimeError_call_result_247542, 'raise parameter', BaseException)
            # SSA branch for the else part of an if statement (line 1106)
            module_type_store.open_ssa_branch('else')
            
            # Call to flush(...): (line 1113)
            # Processing the call keyword arguments (line 1113)
            kwargs_247545 = {}
            # Getting the type of 'fh' (line 1113)
            fh_247543 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1113, 28), 'fh', False)
            # Obtaining the member 'flush' of a type (line 1113)
            flush_247544 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1113, 28), fh_247543, 'flush')
            # Calling flush(args, kwargs) (line 1113)
            flush_call_result_247546 = invoke(stypy.reporting.localization.Localization(__file__, 1113, 28), flush_247544, *[], **kwargs_247545)
            
            
            # Call to convert_ttf_to_ps(...): (line 1114)
            # Processing the call arguments (line 1114)
            
            # Call to encode(...): (line 1115)
            # Processing the call arguments (line 1115)
            
            # Call to getfilesystemencoding(...): (line 1116)
            # Processing the call keyword arguments (line 1116)
            kwargs_247552 = {}
            # Getting the type of 'sys' (line 1116)
            sys_247550 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1116, 36), 'sys', False)
            # Obtaining the member 'getfilesystemencoding' of a type (line 1116)
            getfilesystemencoding_247551 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1116, 36), sys_247550, 'getfilesystemencoding')
            # Calling getfilesystemencoding(args, kwargs) (line 1116)
            getfilesystemencoding_call_result_247553 = invoke(stypy.reporting.localization.Localization(__file__, 1116, 36), getfilesystemencoding_247551, *[], **kwargs_247552)
            
            # Processing the call keyword arguments (line 1115)
            kwargs_247554 = {}
            # Getting the type of 'font_filename' (line 1115)
            font_filename_247548 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1115, 32), 'font_filename', False)
            # Obtaining the member 'encode' of a type (line 1115)
            encode_247549 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1115, 32), font_filename_247548, 'encode')
            # Calling encode(args, kwargs) (line 1115)
            encode_call_result_247555 = invoke(stypy.reporting.localization.Localization(__file__, 1115, 32), encode_247549, *[getfilesystemencoding_call_result_247553], **kwargs_247554)
            
            # Getting the type of 'fh' (line 1117)
            fh_247556 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1117, 32), 'fh', False)
            # Getting the type of 'fonttype' (line 1117)
            fonttype_247557 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1117, 36), 'fonttype', False)
            # Getting the type of 'glyph_ids' (line 1117)
            glyph_ids_247558 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1117, 46), 'glyph_ids', False)
            # Processing the call keyword arguments (line 1114)
            kwargs_247559 = {}
            # Getting the type of 'convert_ttf_to_ps' (line 1114)
            convert_ttf_to_ps_247547 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1114, 28), 'convert_ttf_to_ps', False)
            # Calling convert_ttf_to_ps(args, kwargs) (line 1114)
            convert_ttf_to_ps_call_result_247560 = invoke(stypy.reporting.localization.Localization(__file__, 1114, 28), convert_ttf_to_ps_247547, *[encode_call_result_247555, fh_247556, fonttype_247557, glyph_ids_247558], **kwargs_247559)
            
            # SSA join for if statement (line 1106)
            module_type_store = module_type_store.join_ssa_context()
            
            # SSA join for if statement (line 1088)
            module_type_store = module_type_store.join_ssa_context()
            
            # SSA join for a for statement
            module_type_store = module_type_store.join_ssa_context()
            
            # SSA join for if statement (line 1085)
            module_type_store = module_type_store.join_ssa_context()
            
            
            # Call to print(...): (line 1118)
            # Processing the call arguments (line 1118)
            unicode_247562 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1118, 18), 'unicode', u'end')
            # Processing the call keyword arguments (line 1118)
            # Getting the type of 'fh' (line 1118)
            fh_247563 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1118, 30), 'fh', False)
            keyword_247564 = fh_247563
            kwargs_247565 = {'file': keyword_247564}
            # Getting the type of 'print' (line 1118)
            print_247561 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1118, 12), 'print', False)
            # Calling print(args, kwargs) (line 1118)
            print_call_result_247566 = invoke(stypy.reporting.localization.Localization(__file__, 1118, 12), print_247561, *[unicode_247562], **kwargs_247565)
            
            
            # Call to print(...): (line 1119)
            # Processing the call arguments (line 1119)
            unicode_247568 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1119, 18), 'unicode', u'%%EndProlog')
            # Processing the call keyword arguments (line 1119)
            # Getting the type of 'fh' (line 1119)
            fh_247569 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1119, 38), 'fh', False)
            keyword_247570 = fh_247569
            kwargs_247571 = {'file': keyword_247570}
            # Getting the type of 'print' (line 1119)
            print_247567 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1119, 12), 'print', False)
            # Calling print(args, kwargs) (line 1119)
            print_call_result_247572 = invoke(stypy.reporting.localization.Localization(__file__, 1119, 12), print_247567, *[unicode_247568], **kwargs_247571)
            
            
            
            # Getting the type of 'isEPSF' (line 1121)
            isEPSF_247573 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1121, 19), 'isEPSF')
            # Applying the 'not' unary operator (line 1121)
            result_not__247574 = python_operator(stypy.reporting.localization.Localization(__file__, 1121, 15), 'not', isEPSF_247573)
            
            # Testing the type of an if condition (line 1121)
            if_condition_247575 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1121, 12), result_not__247574)
            # Assigning a type to the variable 'if_condition_247575' (line 1121)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1121, 12), 'if_condition_247575', if_condition_247575)
            # SSA begins for if statement (line 1121)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Call to print(...): (line 1122)
            # Processing the call arguments (line 1122)
            unicode_247577 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1122, 22), 'unicode', u'%%Page: 1 1')
            # Processing the call keyword arguments (line 1122)
            # Getting the type of 'fh' (line 1122)
            fh_247578 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1122, 42), 'fh', False)
            keyword_247579 = fh_247578
            kwargs_247580 = {'file': keyword_247579}
            # Getting the type of 'print' (line 1122)
            print_247576 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1122, 16), 'print', False)
            # Calling print(args, kwargs) (line 1122)
            print_call_result_247581 = invoke(stypy.reporting.localization.Localization(__file__, 1122, 16), print_247576, *[unicode_247577], **kwargs_247580)
            
            # SSA join for if statement (line 1121)
            module_type_store = module_type_store.join_ssa_context()
            
            
            # Call to print(...): (line 1123)
            # Processing the call arguments (line 1123)
            unicode_247583 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1123, 18), 'unicode', u'mpldict begin')
            # Processing the call keyword arguments (line 1123)
            # Getting the type of 'fh' (line 1123)
            fh_247584 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1123, 40), 'fh', False)
            keyword_247585 = fh_247584
            kwargs_247586 = {'file': keyword_247585}
            # Getting the type of 'print' (line 1123)
            print_247582 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1123, 12), 'print', False)
            # Calling print(args, kwargs) (line 1123)
            print_call_result_247587 = invoke(stypy.reporting.localization.Localization(__file__, 1123, 12), print_247582, *[unicode_247583], **kwargs_247586)
            
            
            # Call to print(...): (line 1125)
            # Processing the call arguments (line 1125)
            unicode_247589 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1125, 18), 'unicode', u'%s translate')
            
            # Call to _nums_to_str(...): (line 1125)
            # Processing the call arguments (line 1125)
            # Getting the type of 'xo' (line 1125)
            xo_247591 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1125, 48), 'xo', False)
            # Getting the type of 'yo' (line 1125)
            yo_247592 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1125, 52), 'yo', False)
            # Processing the call keyword arguments (line 1125)
            kwargs_247593 = {}
            # Getting the type of '_nums_to_str' (line 1125)
            _nums_to_str_247590 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1125, 35), '_nums_to_str', False)
            # Calling _nums_to_str(args, kwargs) (line 1125)
            _nums_to_str_call_result_247594 = invoke(stypy.reporting.localization.Localization(__file__, 1125, 35), _nums_to_str_247590, *[xo_247591, yo_247592], **kwargs_247593)
            
            # Applying the binary operator '%' (line 1125)
            result_mod_247595 = python_operator(stypy.reporting.localization.Localization(__file__, 1125, 18), '%', unicode_247589, _nums_to_str_call_result_247594)
            
            # Processing the call keyword arguments (line 1125)
            # Getting the type of 'fh' (line 1125)
            fh_247596 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1125, 62), 'fh', False)
            keyword_247597 = fh_247596
            kwargs_247598 = {'file': keyword_247597}
            # Getting the type of 'print' (line 1125)
            print_247588 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1125, 12), 'print', False)
            # Calling print(args, kwargs) (line 1125)
            print_call_result_247599 = invoke(stypy.reporting.localization.Localization(__file__, 1125, 12), print_247588, *[result_mod_247595], **kwargs_247598)
            
            
            # Getting the type of 'rotation' (line 1126)
            rotation_247600 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1126, 15), 'rotation')
            # Testing the type of an if condition (line 1126)
            if_condition_247601 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1126, 12), rotation_247600)
            # Assigning a type to the variable 'if_condition_247601' (line 1126)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1126, 12), 'if_condition_247601', if_condition_247601)
            # SSA begins for if statement (line 1126)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Call to print(...): (line 1127)
            # Processing the call arguments (line 1127)
            unicode_247603 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1127, 22), 'unicode', u'%d rotate')
            # Getting the type of 'rotation' (line 1127)
            rotation_247604 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1127, 36), 'rotation', False)
            # Applying the binary operator '%' (line 1127)
            result_mod_247605 = python_operator(stypy.reporting.localization.Localization(__file__, 1127, 22), '%', unicode_247603, rotation_247604)
            
            # Processing the call keyword arguments (line 1127)
            # Getting the type of 'fh' (line 1127)
            fh_247606 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1127, 51), 'fh', False)
            keyword_247607 = fh_247606
            kwargs_247608 = {'file': keyword_247607}
            # Getting the type of 'print' (line 1127)
            print_247602 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1127, 16), 'print', False)
            # Calling print(args, kwargs) (line 1127)
            print_call_result_247609 = invoke(stypy.reporting.localization.Localization(__file__, 1127, 16), print_247602, *[result_mod_247605], **kwargs_247608)
            
            # SSA join for if statement (line 1126)
            module_type_store = module_type_store.join_ssa_context()
            
            
            # Call to print(...): (line 1128)
            # Processing the call arguments (line 1128)
            unicode_247611 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1128, 18), 'unicode', u'%s clipbox')
            
            # Call to _nums_to_str(...): (line 1128)
            # Processing the call arguments (line 1128)
            # Getting the type of 'width' (line 1128)
            width_247613 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1128, 46), 'width', False)
            int_247614 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1128, 52), 'int')
            # Applying the binary operator '*' (line 1128)
            result_mul_247615 = python_operator(stypy.reporting.localization.Localization(__file__, 1128, 46), '*', width_247613, int_247614)
            
            # Getting the type of 'height' (line 1128)
            height_247616 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1128, 56), 'height', False)
            int_247617 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1128, 63), 'int')
            # Applying the binary operator '*' (line 1128)
            result_mul_247618 = python_operator(stypy.reporting.localization.Localization(__file__, 1128, 56), '*', height_247616, int_247617)
            
            int_247619 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1128, 67), 'int')
            int_247620 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1128, 70), 'int')
            # Processing the call keyword arguments (line 1128)
            kwargs_247621 = {}
            # Getting the type of '_nums_to_str' (line 1128)
            _nums_to_str_247612 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1128, 33), '_nums_to_str', False)
            # Calling _nums_to_str(args, kwargs) (line 1128)
            _nums_to_str_call_result_247622 = invoke(stypy.reporting.localization.Localization(__file__, 1128, 33), _nums_to_str_247612, *[result_mul_247615, result_mul_247618, int_247619, int_247620], **kwargs_247621)
            
            # Applying the binary operator '%' (line 1128)
            result_mod_247623 = python_operator(stypy.reporting.localization.Localization(__file__, 1128, 18), '%', unicode_247611, _nums_to_str_call_result_247622)
            
            # Processing the call keyword arguments (line 1128)
            # Getting the type of 'fh' (line 1129)
            fh_247624 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1129, 23), 'fh', False)
            keyword_247625 = fh_247624
            kwargs_247626 = {'file': keyword_247625}
            # Getting the type of 'print' (line 1128)
            print_247610 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1128, 12), 'print', False)
            # Calling print(args, kwargs) (line 1128)
            print_call_result_247627 = invoke(stypy.reporting.localization.Localization(__file__, 1128, 12), print_247610, *[result_mod_247623], **kwargs_247626)
            
            
            # Assigning a Call to a Name (line 1132):
            
            # Assigning a Call to a Name (line 1132):
            
            # Call to getvalue(...): (line 1132)
            # Processing the call keyword arguments (line 1132)
            kwargs_247631 = {}
            # Getting the type of 'self' (line 1132)
            self_247628 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1132, 22), 'self', False)
            # Obtaining the member '_pswriter' of a type (line 1132)
            _pswriter_247629 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1132, 22), self_247628, '_pswriter')
            # Obtaining the member 'getvalue' of a type (line 1132)
            getvalue_247630 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1132, 22), _pswriter_247629, 'getvalue')
            # Calling getvalue(args, kwargs) (line 1132)
            getvalue_call_result_247632 = invoke(stypy.reporting.localization.Localization(__file__, 1132, 22), getvalue_247630, *[], **kwargs_247631)
            
            # Assigning a type to the variable 'content' (line 1132)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1132, 12), 'content', getvalue_call_result_247632)
            
            
            
            # Call to isinstance(...): (line 1133)
            # Processing the call arguments (line 1133)
            # Getting the type of 'content' (line 1133)
            content_247634 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1133, 30), 'content', False)
            # Getting the type of 'six' (line 1133)
            six_247635 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1133, 39), 'six', False)
            # Obtaining the member 'text_type' of a type (line 1133)
            text_type_247636 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1133, 39), six_247635, 'text_type')
            # Processing the call keyword arguments (line 1133)
            kwargs_247637 = {}
            # Getting the type of 'isinstance' (line 1133)
            isinstance_247633 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1133, 19), 'isinstance', False)
            # Calling isinstance(args, kwargs) (line 1133)
            isinstance_call_result_247638 = invoke(stypy.reporting.localization.Localization(__file__, 1133, 19), isinstance_247633, *[content_247634, text_type_247636], **kwargs_247637)
            
            # Applying the 'not' unary operator (line 1133)
            result_not__247639 = python_operator(stypy.reporting.localization.Localization(__file__, 1133, 15), 'not', isinstance_call_result_247638)
            
            # Testing the type of an if condition (line 1133)
            if_condition_247640 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1133, 12), result_not__247639)
            # Assigning a type to the variable 'if_condition_247640' (line 1133)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1133, 12), 'if_condition_247640', if_condition_247640)
            # SSA begins for if statement (line 1133)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Call to a Name (line 1134):
            
            # Assigning a Call to a Name (line 1134):
            
            # Call to decode(...): (line 1134)
            # Processing the call arguments (line 1134)
            unicode_247643 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1134, 41), 'unicode', u'ascii')
            # Processing the call keyword arguments (line 1134)
            kwargs_247644 = {}
            # Getting the type of 'content' (line 1134)
            content_247641 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1134, 26), 'content', False)
            # Obtaining the member 'decode' of a type (line 1134)
            decode_247642 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1134, 26), content_247641, 'decode')
            # Calling decode(args, kwargs) (line 1134)
            decode_call_result_247645 = invoke(stypy.reporting.localization.Localization(__file__, 1134, 26), decode_247642, *[unicode_247643], **kwargs_247644)
            
            # Assigning a type to the variable 'content' (line 1134)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1134, 16), 'content', decode_call_result_247645)
            # SSA join for if statement (line 1133)
            module_type_store = module_type_store.join_ssa_context()
            
            
            # Call to print(...): (line 1135)
            # Processing the call arguments (line 1135)
            # Getting the type of 'content' (line 1135)
            content_247647 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1135, 18), 'content', False)
            # Processing the call keyword arguments (line 1135)
            # Getting the type of 'fh' (line 1135)
            fh_247648 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1135, 32), 'fh', False)
            keyword_247649 = fh_247648
            kwargs_247650 = {'file': keyword_247649}
            # Getting the type of 'print' (line 1135)
            print_247646 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1135, 12), 'print', False)
            # Calling print(args, kwargs) (line 1135)
            print_call_result_247651 = invoke(stypy.reporting.localization.Localization(__file__, 1135, 12), print_247646, *[content_247647], **kwargs_247650)
            
            
            # Call to print(...): (line 1138)
            # Processing the call arguments (line 1138)
            unicode_247653 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1138, 18), 'unicode', u'end')
            # Processing the call keyword arguments (line 1138)
            # Getting the type of 'fh' (line 1138)
            fh_247654 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1138, 30), 'fh', False)
            keyword_247655 = fh_247654
            kwargs_247656 = {'file': keyword_247655}
            # Getting the type of 'print' (line 1138)
            print_247652 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1138, 12), 'print', False)
            # Calling print(args, kwargs) (line 1138)
            print_call_result_247657 = invoke(stypy.reporting.localization.Localization(__file__, 1138, 12), print_247652, *[unicode_247653], **kwargs_247656)
            
            
            # Call to print(...): (line 1139)
            # Processing the call arguments (line 1139)
            unicode_247659 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1139, 18), 'unicode', u'showpage')
            # Processing the call keyword arguments (line 1139)
            # Getting the type of 'fh' (line 1139)
            fh_247660 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1139, 35), 'fh', False)
            keyword_247661 = fh_247660
            kwargs_247662 = {'file': keyword_247661}
            # Getting the type of 'print' (line 1139)
            print_247658 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1139, 12), 'print', False)
            # Calling print(args, kwargs) (line 1139)
            print_call_result_247663 = invoke(stypy.reporting.localization.Localization(__file__, 1139, 12), print_247658, *[unicode_247659], **kwargs_247662)
            
            
            
            # Getting the type of 'isEPSF' (line 1140)
            isEPSF_247664 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1140, 19), 'isEPSF')
            # Applying the 'not' unary operator (line 1140)
            result_not__247665 = python_operator(stypy.reporting.localization.Localization(__file__, 1140, 15), 'not', isEPSF_247664)
            
            # Testing the type of an if condition (line 1140)
            if_condition_247666 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1140, 12), result_not__247665)
            # Assigning a type to the variable 'if_condition_247666' (line 1140)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1140, 12), 'if_condition_247666', if_condition_247666)
            # SSA begins for if statement (line 1140)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Call to print(...): (line 1141)
            # Processing the call arguments (line 1141)
            unicode_247668 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1141, 22), 'unicode', u'%%EOF')
            # Processing the call keyword arguments (line 1141)
            # Getting the type of 'fh' (line 1141)
            fh_247669 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1141, 36), 'fh', False)
            keyword_247670 = fh_247669
            kwargs_247671 = {'file': keyword_247670}
            # Getting the type of 'print' (line 1141)
            print_247667 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1141, 16), 'print', False)
            # Calling print(args, kwargs) (line 1141)
            print_call_result_247672 = invoke(stypy.reporting.localization.Localization(__file__, 1141, 16), print_247667, *[unicode_247668], **kwargs_247671)
            
            # SSA join for if statement (line 1140)
            module_type_store = module_type_store.join_ssa_context()
            
            
            # Call to flush(...): (line 1142)
            # Processing the call keyword arguments (line 1142)
            kwargs_247675 = {}
            # Getting the type of 'fh' (line 1142)
            fh_247673 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1142, 12), 'fh', False)
            # Obtaining the member 'flush' of a type (line 1142)
            flush_247674 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1142, 12), fh_247673, 'flush')
            # Calling flush(args, kwargs) (line 1142)
            flush_call_result_247676 = invoke(stypy.reporting.localization.Localization(__file__, 1142, 12), flush_247674, *[], **kwargs_247675)
            
            
            # ################# End of 'print_figure_impl(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'print_figure_impl' in the type store
            # Getting the type of 'stypy_return_type' (line 1049)
            stypy_return_type_247677 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1049, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_247677)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'print_figure_impl'
            return stypy_return_type_247677

        # Assigning a type to the variable 'print_figure_impl' (line 1049)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1049, 8), 'print_figure_impl', print_figure_impl)
        
        
        # Obtaining the type of the subscript
        unicode_247678 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1144, 20), 'unicode', u'ps.usedistiller')
        # Getting the type of 'rcParams' (line 1144)
        rcParams_247679 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1144, 11), 'rcParams')
        # Obtaining the member '__getitem__' of a type (line 1144)
        getitem___247680 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1144, 11), rcParams_247679, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1144)
        subscript_call_result_247681 = invoke(stypy.reporting.localization.Localization(__file__, 1144, 11), getitem___247680, unicode_247678)
        
        # Testing the type of an if condition (line 1144)
        if_condition_247682 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1144, 8), subscript_call_result_247681)
        # Assigning a type to the variable 'if_condition_247682' (line 1144)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1144, 8), 'if_condition_247682', if_condition_247682)
        # SSA begins for if statement (line 1144)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Tuple (line 1147):
        
        # Assigning a Call to a Name:
        
        # Call to mkstemp(...): (line 1147)
        # Processing the call keyword arguments (line 1147)
        kwargs_247684 = {}
        # Getting the type of 'mkstemp' (line 1147)
        mkstemp_247683 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1147, 26), 'mkstemp', False)
        # Calling mkstemp(args, kwargs) (line 1147)
        mkstemp_call_result_247685 = invoke(stypy.reporting.localization.Localization(__file__, 1147, 26), mkstemp_247683, *[], **kwargs_247684)
        
        # Assigning a type to the variable 'call_assignment_243776' (line 1147)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1147, 12), 'call_assignment_243776', mkstemp_call_result_247685)
        
        # Assigning a Call to a Name (line 1147):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_247688 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1147, 12), 'int')
        # Processing the call keyword arguments
        kwargs_247689 = {}
        # Getting the type of 'call_assignment_243776' (line 1147)
        call_assignment_243776_247686 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1147, 12), 'call_assignment_243776', False)
        # Obtaining the member '__getitem__' of a type (line 1147)
        getitem___247687 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1147, 12), call_assignment_243776_247686, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_247690 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___247687, *[int_247688], **kwargs_247689)
        
        # Assigning a type to the variable 'call_assignment_243777' (line 1147)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1147, 12), 'call_assignment_243777', getitem___call_result_247690)
        
        # Assigning a Name to a Name (line 1147):
        # Getting the type of 'call_assignment_243777' (line 1147)
        call_assignment_243777_247691 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1147, 12), 'call_assignment_243777')
        # Assigning a type to the variable 'fd' (line 1147)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1147, 12), 'fd', call_assignment_243777_247691)
        
        # Assigning a Call to a Name (line 1147):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_247694 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1147, 12), 'int')
        # Processing the call keyword arguments
        kwargs_247695 = {}
        # Getting the type of 'call_assignment_243776' (line 1147)
        call_assignment_243776_247692 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1147, 12), 'call_assignment_243776', False)
        # Obtaining the member '__getitem__' of a type (line 1147)
        getitem___247693 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1147, 12), call_assignment_243776_247692, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_247696 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___247693, *[int_247694], **kwargs_247695)
        
        # Assigning a type to the variable 'call_assignment_243778' (line 1147)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1147, 12), 'call_assignment_243778', getitem___call_result_247696)
        
        # Assigning a Name to a Name (line 1147):
        # Getting the type of 'call_assignment_243778' (line 1147)
        call_assignment_243778_247697 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1147, 12), 'call_assignment_243778')
        # Assigning a type to the variable 'tmpfile' (line 1147)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1147, 16), 'tmpfile', call_assignment_243778_247697)
        
        # Try-finally block (line 1148)
        
        # Call to open(...): (line 1149)
        # Processing the call arguments (line 1149)
        # Getting the type of 'fd' (line 1149)
        fd_247700 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1149, 29), 'fd', False)
        unicode_247701 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1149, 33), 'unicode', u'w')
        # Processing the call keyword arguments (line 1149)
        unicode_247702 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1149, 47), 'unicode', u'latin-1')
        keyword_247703 = unicode_247702
        kwargs_247704 = {'encoding': keyword_247703}
        # Getting the type of 'io' (line 1149)
        io_247698 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1149, 21), 'io', False)
        # Obtaining the member 'open' of a type (line 1149)
        open_247699 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1149, 21), io_247698, 'open')
        # Calling open(args, kwargs) (line 1149)
        open_call_result_247705 = invoke(stypy.reporting.localization.Localization(__file__, 1149, 21), open_247699, *[fd_247700, unicode_247701], **kwargs_247704)
        
        with_247706 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 1149, 21), open_call_result_247705, 'with parameter', '__enter__', '__exit__')

        if with_247706:
            # Calling the __enter__ method to initiate a with section
            # Obtaining the member '__enter__' of a type (line 1149)
            enter___247707 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1149, 21), open_call_result_247705, '__enter__')
            with_enter_247708 = invoke(stypy.reporting.localization.Localization(__file__, 1149, 21), enter___247707)
            # Assigning a type to the variable 'fh' (line 1149)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1149, 21), 'fh', with_enter_247708)
            
            # Call to print_figure_impl(...): (line 1150)
            # Processing the call arguments (line 1150)
            # Getting the type of 'fh' (line 1150)
            fh_247710 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1150, 38), 'fh', False)
            # Processing the call keyword arguments (line 1150)
            kwargs_247711 = {}
            # Getting the type of 'print_figure_impl' (line 1150)
            print_figure_impl_247709 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1150, 20), 'print_figure_impl', False)
            # Calling print_figure_impl(args, kwargs) (line 1150)
            print_figure_impl_call_result_247712 = invoke(stypy.reporting.localization.Localization(__file__, 1150, 20), print_figure_impl_247709, *[fh_247710], **kwargs_247711)
            
            # Calling the __exit__ method to finish a with section
            # Obtaining the member '__exit__' of a type (line 1149)
            exit___247713 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1149, 21), open_call_result_247705, '__exit__')
            with_exit_247714 = invoke(stypy.reporting.localization.Localization(__file__, 1149, 21), exit___247713, None, None, None)

        
        
        
        # Obtaining the type of the subscript
        unicode_247715 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1151, 28), 'unicode', u'ps.usedistiller')
        # Getting the type of 'rcParams' (line 1151)
        rcParams_247716 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1151, 19), 'rcParams')
        # Obtaining the member '__getitem__' of a type (line 1151)
        getitem___247717 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1151, 19), rcParams_247716, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1151)
        subscript_call_result_247718 = invoke(stypy.reporting.localization.Localization(__file__, 1151, 19), getitem___247717, unicode_247715)
        
        unicode_247719 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1151, 50), 'unicode', u'ghostscript')
        # Applying the binary operator '==' (line 1151)
        result_eq_247720 = python_operator(stypy.reporting.localization.Localization(__file__, 1151, 19), '==', subscript_call_result_247718, unicode_247719)
        
        # Testing the type of an if condition (line 1151)
        if_condition_247721 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1151, 16), result_eq_247720)
        # Assigning a type to the variable 'if_condition_247721' (line 1151)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1151, 16), 'if_condition_247721', if_condition_247721)
        # SSA begins for if statement (line 1151)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to gs_distill(...): (line 1152)
        # Processing the call arguments (line 1152)
        # Getting the type of 'tmpfile' (line 1152)
        tmpfile_247723 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1152, 31), 'tmpfile', False)
        # Getting the type of 'isEPSF' (line 1152)
        isEPSF_247724 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1152, 40), 'isEPSF', False)
        # Processing the call keyword arguments (line 1152)
        # Getting the type of 'papertype' (line 1152)
        papertype_247725 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1152, 54), 'papertype', False)
        keyword_247726 = papertype_247725
        # Getting the type of 'bbox' (line 1152)
        bbox_247727 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1152, 70), 'bbox', False)
        keyword_247728 = bbox_247727
        kwargs_247729 = {'ptype': keyword_247726, 'bbox': keyword_247728}
        # Getting the type of 'gs_distill' (line 1152)
        gs_distill_247722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1152, 20), 'gs_distill', False)
        # Calling gs_distill(args, kwargs) (line 1152)
        gs_distill_call_result_247730 = invoke(stypy.reporting.localization.Localization(__file__, 1152, 20), gs_distill_247722, *[tmpfile_247723, isEPSF_247724], **kwargs_247729)
        
        # SSA branch for the else part of an if statement (line 1151)
        module_type_store.open_ssa_branch('else')
        
        
        
        # Obtaining the type of the subscript
        unicode_247731 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1153, 30), 'unicode', u'ps.usedistiller')
        # Getting the type of 'rcParams' (line 1153)
        rcParams_247732 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1153, 21), 'rcParams')
        # Obtaining the member '__getitem__' of a type (line 1153)
        getitem___247733 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1153, 21), rcParams_247732, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1153)
        subscript_call_result_247734 = invoke(stypy.reporting.localization.Localization(__file__, 1153, 21), getitem___247733, unicode_247731)
        
        unicode_247735 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1153, 52), 'unicode', u'xpdf')
        # Applying the binary operator '==' (line 1153)
        result_eq_247736 = python_operator(stypy.reporting.localization.Localization(__file__, 1153, 21), '==', subscript_call_result_247734, unicode_247735)
        
        # Testing the type of an if condition (line 1153)
        if_condition_247737 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1153, 21), result_eq_247736)
        # Assigning a type to the variable 'if_condition_247737' (line 1153)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1153, 21), 'if_condition_247737', if_condition_247737)
        # SSA begins for if statement (line 1153)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to xpdf_distill(...): (line 1154)
        # Processing the call arguments (line 1154)
        # Getting the type of 'tmpfile' (line 1154)
        tmpfile_247739 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1154, 33), 'tmpfile', False)
        # Getting the type of 'isEPSF' (line 1154)
        isEPSF_247740 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1154, 42), 'isEPSF', False)
        # Processing the call keyword arguments (line 1154)
        # Getting the type of 'papertype' (line 1154)
        papertype_247741 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1154, 56), 'papertype', False)
        keyword_247742 = papertype_247741
        # Getting the type of 'bbox' (line 1154)
        bbox_247743 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1154, 72), 'bbox', False)
        keyword_247744 = bbox_247743
        kwargs_247745 = {'ptype': keyword_247742, 'bbox': keyword_247744}
        # Getting the type of 'xpdf_distill' (line 1154)
        xpdf_distill_247738 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1154, 20), 'xpdf_distill', False)
        # Calling xpdf_distill(args, kwargs) (line 1154)
        xpdf_distill_call_result_247746 = invoke(stypy.reporting.localization.Localization(__file__, 1154, 20), xpdf_distill_247738, *[tmpfile_247739, isEPSF_247740], **kwargs_247745)
        
        # SSA join for if statement (line 1153)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 1151)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'passed_in_file_object' (line 1156)
        passed_in_file_object_247747 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1156, 19), 'passed_in_file_object')
        # Testing the type of an if condition (line 1156)
        if_condition_247748 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1156, 16), passed_in_file_object_247747)
        # Assigning a type to the variable 'if_condition_247748' (line 1156)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1156, 16), 'if_condition_247748', if_condition_247748)
        # SSA begins for if statement (line 1156)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        
        # Call to file_requires_unicode(...): (line 1157)
        # Processing the call arguments (line 1157)
        # Getting the type of 'outfile' (line 1157)
        outfile_247750 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1157, 45), 'outfile', False)
        # Processing the call keyword arguments (line 1157)
        kwargs_247751 = {}
        # Getting the type of 'file_requires_unicode' (line 1157)
        file_requires_unicode_247749 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1157, 23), 'file_requires_unicode', False)
        # Calling file_requires_unicode(args, kwargs) (line 1157)
        file_requires_unicode_call_result_247752 = invoke(stypy.reporting.localization.Localization(__file__, 1157, 23), file_requires_unicode_247749, *[outfile_247750], **kwargs_247751)
        
        # Testing the type of an if condition (line 1157)
        if_condition_247753 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1157, 20), file_requires_unicode_call_result_247752)
        # Assigning a type to the variable 'if_condition_247753' (line 1157)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1157, 20), 'if_condition_247753', if_condition_247753)
        # SSA begins for if statement (line 1157)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to open(...): (line 1158)
        # Processing the call arguments (line 1158)
        # Getting the type of 'tmpfile' (line 1158)
        tmpfile_247756 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1158, 37), 'tmpfile', False)
        unicode_247757 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1158, 46), 'unicode', u'rb')
        # Processing the call keyword arguments (line 1158)
        kwargs_247758 = {}
        # Getting the type of 'io' (line 1158)
        io_247754 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1158, 29), 'io', False)
        # Obtaining the member 'open' of a type (line 1158)
        open_247755 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1158, 29), io_247754, 'open')
        # Calling open(args, kwargs) (line 1158)
        open_call_result_247759 = invoke(stypy.reporting.localization.Localization(__file__, 1158, 29), open_247755, *[tmpfile_247756, unicode_247757], **kwargs_247758)
        
        with_247760 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 1158, 29), open_call_result_247759, 'with parameter', '__enter__', '__exit__')

        if with_247760:
            # Calling the __enter__ method to initiate a with section
            # Obtaining the member '__enter__' of a type (line 1158)
            enter___247761 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1158, 29), open_call_result_247759, '__enter__')
            with_enter_247762 = invoke(stypy.reporting.localization.Localization(__file__, 1158, 29), enter___247761)
            # Assigning a type to the variable 'fh' (line 1158)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1158, 29), 'fh', with_enter_247762)
            
            # Call to write(...): (line 1159)
            # Processing the call arguments (line 1159)
            
            # Call to decode(...): (line 1159)
            # Processing the call arguments (line 1159)
            unicode_247770 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1159, 59), 'unicode', u'latin-1')
            # Processing the call keyword arguments (line 1159)
            kwargs_247771 = {}
            
            # Call to read(...): (line 1159)
            # Processing the call keyword arguments (line 1159)
            kwargs_247767 = {}
            # Getting the type of 'fh' (line 1159)
            fh_247765 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1159, 42), 'fh', False)
            # Obtaining the member 'read' of a type (line 1159)
            read_247766 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1159, 42), fh_247765, 'read')
            # Calling read(args, kwargs) (line 1159)
            read_call_result_247768 = invoke(stypy.reporting.localization.Localization(__file__, 1159, 42), read_247766, *[], **kwargs_247767)
            
            # Obtaining the member 'decode' of a type (line 1159)
            decode_247769 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1159, 42), read_call_result_247768, 'decode')
            # Calling decode(args, kwargs) (line 1159)
            decode_call_result_247772 = invoke(stypy.reporting.localization.Localization(__file__, 1159, 42), decode_247769, *[unicode_247770], **kwargs_247771)
            
            # Processing the call keyword arguments (line 1159)
            kwargs_247773 = {}
            # Getting the type of 'outfile' (line 1159)
            outfile_247763 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1159, 28), 'outfile', False)
            # Obtaining the member 'write' of a type (line 1159)
            write_247764 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1159, 28), outfile_247763, 'write')
            # Calling write(args, kwargs) (line 1159)
            write_call_result_247774 = invoke(stypy.reporting.localization.Localization(__file__, 1159, 28), write_247764, *[decode_call_result_247772], **kwargs_247773)
            
            # Calling the __exit__ method to finish a with section
            # Obtaining the member '__exit__' of a type (line 1158)
            exit___247775 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1158, 29), open_call_result_247759, '__exit__')
            with_exit_247776 = invoke(stypy.reporting.localization.Localization(__file__, 1158, 29), exit___247775, None, None, None)

        # SSA branch for the else part of an if statement (line 1157)
        module_type_store.open_ssa_branch('else')
        
        # Call to open(...): (line 1161)
        # Processing the call arguments (line 1161)
        # Getting the type of 'tmpfile' (line 1161)
        tmpfile_247779 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1161, 37), 'tmpfile', False)
        unicode_247780 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1161, 46), 'unicode', u'rb')
        # Processing the call keyword arguments (line 1161)
        kwargs_247781 = {}
        # Getting the type of 'io' (line 1161)
        io_247777 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1161, 29), 'io', False)
        # Obtaining the member 'open' of a type (line 1161)
        open_247778 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1161, 29), io_247777, 'open')
        # Calling open(args, kwargs) (line 1161)
        open_call_result_247782 = invoke(stypy.reporting.localization.Localization(__file__, 1161, 29), open_247778, *[tmpfile_247779, unicode_247780], **kwargs_247781)
        
        with_247783 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 1161, 29), open_call_result_247782, 'with parameter', '__enter__', '__exit__')

        if with_247783:
            # Calling the __enter__ method to initiate a with section
            # Obtaining the member '__enter__' of a type (line 1161)
            enter___247784 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1161, 29), open_call_result_247782, '__enter__')
            with_enter_247785 = invoke(stypy.reporting.localization.Localization(__file__, 1161, 29), enter___247784)
            # Assigning a type to the variable 'fh' (line 1161)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1161, 29), 'fh', with_enter_247785)
            
            # Call to write(...): (line 1162)
            # Processing the call arguments (line 1162)
            
            # Call to read(...): (line 1162)
            # Processing the call keyword arguments (line 1162)
            kwargs_247790 = {}
            # Getting the type of 'fh' (line 1162)
            fh_247788 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1162, 42), 'fh', False)
            # Obtaining the member 'read' of a type (line 1162)
            read_247789 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1162, 42), fh_247788, 'read')
            # Calling read(args, kwargs) (line 1162)
            read_call_result_247791 = invoke(stypy.reporting.localization.Localization(__file__, 1162, 42), read_247789, *[], **kwargs_247790)
            
            # Processing the call keyword arguments (line 1162)
            kwargs_247792 = {}
            # Getting the type of 'outfile' (line 1162)
            outfile_247786 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1162, 28), 'outfile', False)
            # Obtaining the member 'write' of a type (line 1162)
            write_247787 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1162, 28), outfile_247786, 'write')
            # Calling write(args, kwargs) (line 1162)
            write_call_result_247793 = invoke(stypy.reporting.localization.Localization(__file__, 1162, 28), write_247787, *[read_call_result_247791], **kwargs_247792)
            
            # Calling the __exit__ method to finish a with section
            # Obtaining the member '__exit__' of a type (line 1161)
            exit___247794 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1161, 29), open_call_result_247782, '__exit__')
            with_exit_247795 = invoke(stypy.reporting.localization.Localization(__file__, 1161, 29), exit___247794, None, None, None)

        # SSA join for if statement (line 1157)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA branch for the else part of an if statement (line 1156)
        module_type_store.open_ssa_branch('else')
        
        # Call to open(...): (line 1164)
        # Processing the call arguments (line 1164)
        # Getting the type of 'outfile' (line 1164)
        outfile_247798 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1164, 33), 'outfile', False)
        unicode_247799 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1164, 42), 'unicode', u'w')
        # Processing the call keyword arguments (line 1164)
        kwargs_247800 = {}
        # Getting the type of 'io' (line 1164)
        io_247796 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1164, 25), 'io', False)
        # Obtaining the member 'open' of a type (line 1164)
        open_247797 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1164, 25), io_247796, 'open')
        # Calling open(args, kwargs) (line 1164)
        open_call_result_247801 = invoke(stypy.reporting.localization.Localization(__file__, 1164, 25), open_247797, *[outfile_247798, unicode_247799], **kwargs_247800)
        
        with_247802 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 1164, 25), open_call_result_247801, 'with parameter', '__enter__', '__exit__')

        if with_247802:
            # Calling the __enter__ method to initiate a with section
            # Obtaining the member '__enter__' of a type (line 1164)
            enter___247803 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1164, 25), open_call_result_247801, '__enter__')
            with_enter_247804 = invoke(stypy.reporting.localization.Localization(__file__, 1164, 25), enter___247803)
            # Assigning a type to the variable 'fh' (line 1164)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1164, 25), 'fh', with_enter_247804)
            pass
            # Calling the __exit__ method to finish a with section
            # Obtaining the member '__exit__' of a type (line 1164)
            exit___247805 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1164, 25), open_call_result_247801, '__exit__')
            with_exit_247806 = invoke(stypy.reporting.localization.Localization(__file__, 1164, 25), exit___247805, None, None, None)

        
        # Assigning a Attribute to a Name (line 1166):
        
        # Assigning a Attribute to a Name (line 1166):
        
        # Call to stat(...): (line 1166)
        # Processing the call arguments (line 1166)
        # Getting the type of 'outfile' (line 1166)
        outfile_247809 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1166, 35), 'outfile', False)
        # Processing the call keyword arguments (line 1166)
        kwargs_247810 = {}
        # Getting the type of 'os' (line 1166)
        os_247807 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1166, 27), 'os', False)
        # Obtaining the member 'stat' of a type (line 1166)
        stat_247808 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1166, 27), os_247807, 'stat')
        # Calling stat(args, kwargs) (line 1166)
        stat_call_result_247811 = invoke(stypy.reporting.localization.Localization(__file__, 1166, 27), stat_247808, *[outfile_247809], **kwargs_247810)
        
        # Obtaining the member 'st_mode' of a type (line 1166)
        st_mode_247812 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1166, 27), stat_call_result_247811, 'st_mode')
        # Assigning a type to the variable 'mode' (line 1166)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1166, 20), 'mode', st_mode_247812)
        
        # Call to move(...): (line 1167)
        # Processing the call arguments (line 1167)
        # Getting the type of 'tmpfile' (line 1167)
        tmpfile_247815 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1167, 32), 'tmpfile', False)
        # Getting the type of 'outfile' (line 1167)
        outfile_247816 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1167, 41), 'outfile', False)
        # Processing the call keyword arguments (line 1167)
        kwargs_247817 = {}
        # Getting the type of 'shutil' (line 1167)
        shutil_247813 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1167, 20), 'shutil', False)
        # Obtaining the member 'move' of a type (line 1167)
        move_247814 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1167, 20), shutil_247813, 'move')
        # Calling move(args, kwargs) (line 1167)
        move_call_result_247818 = invoke(stypy.reporting.localization.Localization(__file__, 1167, 20), move_247814, *[tmpfile_247815, outfile_247816], **kwargs_247817)
        
        
        # Call to chmod(...): (line 1168)
        # Processing the call arguments (line 1168)
        # Getting the type of 'outfile' (line 1168)
        outfile_247821 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1168, 29), 'outfile', False)
        # Getting the type of 'mode' (line 1168)
        mode_247822 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1168, 38), 'mode', False)
        # Processing the call keyword arguments (line 1168)
        kwargs_247823 = {}
        # Getting the type of 'os' (line 1168)
        os_247819 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1168, 20), 'os', False)
        # Obtaining the member 'chmod' of a type (line 1168)
        chmod_247820 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1168, 20), os_247819, 'chmod')
        # Calling chmod(args, kwargs) (line 1168)
        chmod_call_result_247824 = invoke(stypy.reporting.localization.Localization(__file__, 1168, 20), chmod_247820, *[outfile_247821, mode_247822], **kwargs_247823)
        
        # SSA join for if statement (line 1156)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # finally branch of the try-finally block (line 1148)
        
        
        # Call to isfile(...): (line 1170)
        # Processing the call arguments (line 1170)
        # Getting the type of 'tmpfile' (line 1170)
        tmpfile_247828 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1170, 34), 'tmpfile', False)
        # Processing the call keyword arguments (line 1170)
        kwargs_247829 = {}
        # Getting the type of 'os' (line 1170)
        os_247825 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1170, 19), 'os', False)
        # Obtaining the member 'path' of a type (line 1170)
        path_247826 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1170, 19), os_247825, 'path')
        # Obtaining the member 'isfile' of a type (line 1170)
        isfile_247827 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1170, 19), path_247826, 'isfile')
        # Calling isfile(args, kwargs) (line 1170)
        isfile_call_result_247830 = invoke(stypy.reporting.localization.Localization(__file__, 1170, 19), isfile_247827, *[tmpfile_247828], **kwargs_247829)
        
        # Testing the type of an if condition (line 1170)
        if_condition_247831 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1170, 16), isfile_call_result_247830)
        # Assigning a type to the variable 'if_condition_247831' (line 1170)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1170, 16), 'if_condition_247831', if_condition_247831)
        # SSA begins for if statement (line 1170)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to unlink(...): (line 1171)
        # Processing the call arguments (line 1171)
        # Getting the type of 'tmpfile' (line 1171)
        tmpfile_247834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1171, 30), 'tmpfile', False)
        # Processing the call keyword arguments (line 1171)
        kwargs_247835 = {}
        # Getting the type of 'os' (line 1171)
        os_247832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1171, 20), 'os', False)
        # Obtaining the member 'unlink' of a type (line 1171)
        unlink_247833 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1171, 20), os_247832, 'unlink')
        # Calling unlink(args, kwargs) (line 1171)
        unlink_call_result_247836 = invoke(stypy.reporting.localization.Localization(__file__, 1171, 20), unlink_247833, *[tmpfile_247834], **kwargs_247835)
        
        # SSA join for if statement (line 1170)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # SSA branch for the else part of an if statement (line 1144)
        module_type_store.open_ssa_branch('else')
        
        # Getting the type of 'passed_in_file_object' (line 1175)
        passed_in_file_object_247837 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1175, 15), 'passed_in_file_object')
        # Testing the type of an if condition (line 1175)
        if_condition_247838 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1175, 12), passed_in_file_object_247837)
        # Assigning a type to the variable 'if_condition_247838' (line 1175)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1175, 12), 'if_condition_247838', if_condition_247838)
        # SSA begins for if statement (line 1175)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 1176):
        
        # Assigning a Call to a Name (line 1176):
        
        # Call to file_requires_unicode(...): (line 1176)
        # Processing the call arguments (line 1176)
        # Getting the type of 'outfile' (line 1176)
        outfile_247840 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1176, 57), 'outfile', False)
        # Processing the call keyword arguments (line 1176)
        kwargs_247841 = {}
        # Getting the type of 'file_requires_unicode' (line 1176)
        file_requires_unicode_247839 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1176, 35), 'file_requires_unicode', False)
        # Calling file_requires_unicode(args, kwargs) (line 1176)
        file_requires_unicode_call_result_247842 = invoke(stypy.reporting.localization.Localization(__file__, 1176, 35), file_requires_unicode_247839, *[outfile_247840], **kwargs_247841)
        
        # Assigning a type to the variable 'requires_unicode' (line 1176)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1176, 16), 'requires_unicode', file_requires_unicode_call_result_247842)
        
        
        # Evaluating a boolean operation
        
        # Getting the type of 'requires_unicode' (line 1178)
        requires_unicode_247843 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1178, 24), 'requires_unicode')
        # Applying the 'not' unary operator (line 1178)
        result_not__247844 = python_operator(stypy.reporting.localization.Localization(__file__, 1178, 20), 'not', requires_unicode_247843)
        
        
        # Evaluating a boolean operation
        # Getting the type of 'six' (line 1179)
        six_247845 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1179, 25), 'six')
        # Obtaining the member 'PY3' of a type (line 1179)
        PY3_247846 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1179, 25), six_247845, 'PY3')
        
        
        # Call to isinstance(...): (line 1179)
        # Processing the call arguments (line 1179)
        # Getting the type of 'outfile' (line 1179)
        outfile_247848 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1179, 51), 'outfile', False)
        # Getting the type of 'StringIO' (line 1179)
        StringIO_247849 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1179, 60), 'StringIO', False)
        # Processing the call keyword arguments (line 1179)
        kwargs_247850 = {}
        # Getting the type of 'isinstance' (line 1179)
        isinstance_247847 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1179, 40), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 1179)
        isinstance_call_result_247851 = invoke(stypy.reporting.localization.Localization(__file__, 1179, 40), isinstance_247847, *[outfile_247848, StringIO_247849], **kwargs_247850)
        
        # Applying the 'not' unary operator (line 1179)
        result_not__247852 = python_operator(stypy.reporting.localization.Localization(__file__, 1179, 36), 'not', isinstance_call_result_247851)
        
        # Applying the binary operator 'or' (line 1179)
        result_or_keyword_247853 = python_operator(stypy.reporting.localization.Localization(__file__, 1179, 25), 'or', PY3_247846, result_not__247852)
        
        # Applying the binary operator 'and' (line 1178)
        result_and_keyword_247854 = python_operator(stypy.reporting.localization.Localization(__file__, 1178, 20), 'and', result_not__247844, result_or_keyword_247853)
        
        # Testing the type of an if condition (line 1178)
        if_condition_247855 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1178, 16), result_and_keyword_247854)
        # Assigning a type to the variable 'if_condition_247855' (line 1178)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1178, 16), 'if_condition_247855', if_condition_247855)
        # SSA begins for if statement (line 1178)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 1180):
        
        # Assigning a Call to a Name (line 1180):
        
        # Call to TextIOWrapper(...): (line 1180)
        # Processing the call arguments (line 1180)
        # Getting the type of 'outfile' (line 1180)
        outfile_247858 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1180, 42), 'outfile', False)
        # Processing the call keyword arguments (line 1180)
        unicode_247859 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1180, 60), 'unicode', u'latin-1')
        keyword_247860 = unicode_247859
        kwargs_247861 = {'encoding': keyword_247860}
        # Getting the type of 'io' (line 1180)
        io_247856 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1180, 25), 'io', False)
        # Obtaining the member 'TextIOWrapper' of a type (line 1180)
        TextIOWrapper_247857 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1180, 25), io_247856, 'TextIOWrapper')
        # Calling TextIOWrapper(args, kwargs) (line 1180)
        TextIOWrapper_call_result_247862 = invoke(stypy.reporting.localization.Localization(__file__, 1180, 25), TextIOWrapper_247857, *[outfile_247858], **kwargs_247861)
        
        # Assigning a type to the variable 'fh' (line 1180)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1180, 20), 'fh', TextIOWrapper_call_result_247862)

        @norecursion
        def do_nothing(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'do_nothing'
            module_type_store = module_type_store.open_function_context('do_nothing', 1184, 20, False)
            
            # Passed parameters checking function
            do_nothing.stypy_localization = localization
            do_nothing.stypy_type_of_self = None
            do_nothing.stypy_type_store = module_type_store
            do_nothing.stypy_function_name = 'do_nothing'
            do_nothing.stypy_param_names_list = []
            do_nothing.stypy_varargs_param_name = None
            do_nothing.stypy_kwargs_param_name = None
            do_nothing.stypy_call_defaults = defaults
            do_nothing.stypy_call_varargs = varargs
            do_nothing.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'do_nothing', [], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'do_nothing', localization, [], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'do_nothing(...)' code ##################

            pass
            
            # ################# End of 'do_nothing(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'do_nothing' in the type store
            # Getting the type of 'stypy_return_type' (line 1184)
            stypy_return_type_247863 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1184, 20), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_247863)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'do_nothing'
            return stypy_return_type_247863

        # Assigning a type to the variable 'do_nothing' (line 1184)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1184, 20), 'do_nothing', do_nothing)
        
        # Assigning a Name to a Attribute (line 1186):
        
        # Assigning a Name to a Attribute (line 1186):
        # Getting the type of 'do_nothing' (line 1186)
        do_nothing_247864 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1186, 31), 'do_nothing')
        # Getting the type of 'fh' (line 1186)
        fh_247865 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1186, 20), 'fh')
        # Setting the type of the member 'close' of a type (line 1186)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1186, 20), fh_247865, 'close', do_nothing_247864)
        # SSA branch for the else part of an if statement (line 1178)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Name to a Name (line 1188):
        
        # Assigning a Name to a Name (line 1188):
        # Getting the type of 'outfile' (line 1188)
        outfile_247866 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1188, 25), 'outfile')
        # Assigning a type to the variable 'fh' (line 1188)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1188, 20), 'fh', outfile_247866)
        # SSA join for if statement (line 1178)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to print_figure_impl(...): (line 1190)
        # Processing the call arguments (line 1190)
        # Getting the type of 'fh' (line 1190)
        fh_247868 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1190, 34), 'fh', False)
        # Processing the call keyword arguments (line 1190)
        kwargs_247869 = {}
        # Getting the type of 'print_figure_impl' (line 1190)
        print_figure_impl_247867 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1190, 16), 'print_figure_impl', False)
        # Calling print_figure_impl(args, kwargs) (line 1190)
        print_figure_impl_call_result_247870 = invoke(stypy.reporting.localization.Localization(__file__, 1190, 16), print_figure_impl_247867, *[fh_247868], **kwargs_247869)
        
        # SSA branch for the else part of an if statement (line 1175)
        module_type_store.open_ssa_branch('else')
        
        # Call to open(...): (line 1192)
        # Processing the call arguments (line 1192)
        # Getting the type of 'outfile' (line 1192)
        outfile_247873 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1192, 29), 'outfile', False)
        unicode_247874 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1192, 38), 'unicode', u'w')
        # Processing the call keyword arguments (line 1192)
        unicode_247875 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1192, 52), 'unicode', u'latin-1')
        keyword_247876 = unicode_247875
        kwargs_247877 = {'encoding': keyword_247876}
        # Getting the type of 'io' (line 1192)
        io_247871 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1192, 21), 'io', False)
        # Obtaining the member 'open' of a type (line 1192)
        open_247872 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1192, 21), io_247871, 'open')
        # Calling open(args, kwargs) (line 1192)
        open_call_result_247878 = invoke(stypy.reporting.localization.Localization(__file__, 1192, 21), open_247872, *[outfile_247873, unicode_247874], **kwargs_247877)
        
        with_247879 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 1192, 21), open_call_result_247878, 'with parameter', '__enter__', '__exit__')

        if with_247879:
            # Calling the __enter__ method to initiate a with section
            # Obtaining the member '__enter__' of a type (line 1192)
            enter___247880 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1192, 21), open_call_result_247878, '__enter__')
            with_enter_247881 = invoke(stypy.reporting.localization.Localization(__file__, 1192, 21), enter___247880)
            # Assigning a type to the variable 'fh' (line 1192)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1192, 21), 'fh', with_enter_247881)
            
            # Call to print_figure_impl(...): (line 1193)
            # Processing the call arguments (line 1193)
            # Getting the type of 'fh' (line 1193)
            fh_247883 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1193, 38), 'fh', False)
            # Processing the call keyword arguments (line 1193)
            kwargs_247884 = {}
            # Getting the type of 'print_figure_impl' (line 1193)
            print_figure_impl_247882 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1193, 20), 'print_figure_impl', False)
            # Calling print_figure_impl(args, kwargs) (line 1193)
            print_figure_impl_call_result_247885 = invoke(stypy.reporting.localization.Localization(__file__, 1193, 20), print_figure_impl_247882, *[fh_247883], **kwargs_247884)
            
            # Calling the __exit__ method to finish a with section
            # Obtaining the member '__exit__' of a type (line 1192)
            exit___247886 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1192, 21), open_call_result_247878, '__exit__')
            with_exit_247887 = invoke(stypy.reporting.localization.Localization(__file__, 1192, 21), exit___247886, None, None, None)

        # SSA join for if statement (line 1175)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 1144)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of '_print_figure(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_print_figure' in the type store
        # Getting the type of 'stypy_return_type' (line 943)
        stypy_return_type_247888 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 943, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_247888)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_print_figure'
        return stypy_return_type_247888


    @norecursion
    def _print_figure_tex(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'None' (line 1196)
        None_247889 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1196, 72), 'None')
        defaults = [None_247889]
        # Create a new context for function '_print_figure_tex'
        module_type_store = module_type_store.open_function_context('_print_figure_tex', 1195, 4, False)
        # Assigning a type to the variable 'self' (line 1196)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1196, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        FigureCanvasPS._print_figure_tex.__dict__.__setitem__('stypy_localization', localization)
        FigureCanvasPS._print_figure_tex.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        FigureCanvasPS._print_figure_tex.__dict__.__setitem__('stypy_type_store', module_type_store)
        FigureCanvasPS._print_figure_tex.__dict__.__setitem__('stypy_function_name', 'FigureCanvasPS._print_figure_tex')
        FigureCanvasPS._print_figure_tex.__dict__.__setitem__('stypy_param_names_list', ['outfile', 'format', 'dpi', 'facecolor', 'edgecolor', 'orientation', 'isLandscape', 'papertype', 'metadata'])
        FigureCanvasPS._print_figure_tex.__dict__.__setitem__('stypy_varargs_param_name', None)
        FigureCanvasPS._print_figure_tex.__dict__.__setitem__('stypy_kwargs_param_name', 'kwargs')
        FigureCanvasPS._print_figure_tex.__dict__.__setitem__('stypy_call_defaults', defaults)
        FigureCanvasPS._print_figure_tex.__dict__.__setitem__('stypy_call_varargs', varargs)
        FigureCanvasPS._print_figure_tex.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        FigureCanvasPS._print_figure_tex.__dict__.__setitem__('stypy_declared_arg_number', 10)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FigureCanvasPS._print_figure_tex', ['outfile', 'format', 'dpi', 'facecolor', 'edgecolor', 'orientation', 'isLandscape', 'papertype', 'metadata'], None, 'kwargs', defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_print_figure_tex', localization, ['outfile', 'format', 'dpi', 'facecolor', 'edgecolor', 'orientation', 'isLandscape', 'papertype', 'metadata'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_print_figure_tex(...)' code ##################

        unicode_247890 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1205, (-1)), 'unicode', u"\n        If text.usetex is True in rc, a temporary pair of tex/eps files\n        are created to allow tex to manage the text layout via the PSFrags\n        package. These files are processed to yield the final ps or eps file.\n\n        metadata must be a dictionary. Currently, only the value for\n        the key 'Creator' is used.\n        ")
        
        # Assigning a Compare to a Name (line 1206):
        
        # Assigning a Compare to a Name (line 1206):
        
        # Getting the type of 'format' (line 1206)
        format_247891 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1206, 17), 'format')
        unicode_247892 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1206, 27), 'unicode', u'eps')
        # Applying the binary operator '==' (line 1206)
        result_eq_247893 = python_operator(stypy.reporting.localization.Localization(__file__, 1206, 17), '==', format_247891, unicode_247892)
        
        # Assigning a type to the variable 'isEPSF' (line 1206)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1206, 8), 'isEPSF', result_eq_247893)
        
        
        # Call to isinstance(...): (line 1207)
        # Processing the call arguments (line 1207)
        # Getting the type of 'outfile' (line 1207)
        outfile_247895 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1207, 22), 'outfile', False)
        # Getting the type of 'six' (line 1207)
        six_247896 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1207, 31), 'six', False)
        # Obtaining the member 'string_types' of a type (line 1207)
        string_types_247897 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1207, 31), six_247896, 'string_types')
        # Processing the call keyword arguments (line 1207)
        kwargs_247898 = {}
        # Getting the type of 'isinstance' (line 1207)
        isinstance_247894 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1207, 11), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 1207)
        isinstance_call_result_247899 = invoke(stypy.reporting.localization.Localization(__file__, 1207, 11), isinstance_247894, *[outfile_247895, string_types_247897], **kwargs_247898)
        
        # Testing the type of an if condition (line 1207)
        if_condition_247900 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1207, 8), isinstance_call_result_247899)
        # Assigning a type to the variable 'if_condition_247900' (line 1207)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1207, 8), 'if_condition_247900', if_condition_247900)
        # SSA begins for if statement (line 1207)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Name to a Name (line 1208):
        
        # Assigning a Name to a Name (line 1208):
        # Getting the type of 'outfile' (line 1208)
        outfile_247901 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1208, 20), 'outfile')
        # Assigning a type to the variable 'title' (line 1208)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1208, 12), 'title', outfile_247901)
        # SSA branch for the else part of an if statement (line 1207)
        module_type_store.open_ssa_branch('else')
        
        
        # Call to is_writable_file_like(...): (line 1209)
        # Processing the call arguments (line 1209)
        # Getting the type of 'outfile' (line 1209)
        outfile_247903 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1209, 35), 'outfile', False)
        # Processing the call keyword arguments (line 1209)
        kwargs_247904 = {}
        # Getting the type of 'is_writable_file_like' (line 1209)
        is_writable_file_like_247902 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1209, 13), 'is_writable_file_like', False)
        # Calling is_writable_file_like(args, kwargs) (line 1209)
        is_writable_file_like_call_result_247905 = invoke(stypy.reporting.localization.Localization(__file__, 1209, 13), is_writable_file_like_247902, *[outfile_247903], **kwargs_247904)
        
        # Testing the type of an if condition (line 1209)
        if_condition_247906 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1209, 13), is_writable_file_like_call_result_247905)
        # Assigning a type to the variable 'if_condition_247906' (line 1209)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1209, 13), 'if_condition_247906', if_condition_247906)
        # SSA begins for if statement (line 1209)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Name to a Name (line 1210):
        
        # Assigning a Name to a Name (line 1210):
        # Getting the type of 'None' (line 1210)
        None_247907 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1210, 20), 'None')
        # Assigning a type to the variable 'title' (line 1210)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1210, 12), 'title', None_247907)
        # SSA branch for the else part of an if statement (line 1209)
        module_type_store.open_ssa_branch('else')
        
        # Call to ValueError(...): (line 1212)
        # Processing the call arguments (line 1212)
        unicode_247909 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1212, 29), 'unicode', u'outfile must be a path or a file-like object')
        # Processing the call keyword arguments (line 1212)
        kwargs_247910 = {}
        # Getting the type of 'ValueError' (line 1212)
        ValueError_247908 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1212, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 1212)
        ValueError_call_result_247911 = invoke(stypy.reporting.localization.Localization(__file__, 1212, 18), ValueError_247908, *[unicode_247909], **kwargs_247910)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1212, 12), ValueError_call_result_247911, 'raise parameter', BaseException)
        # SSA join for if statement (line 1209)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 1207)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Num to a Attribute (line 1214):
        
        # Assigning a Num to a Attribute (line 1214):
        int_247912 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1214, 26), 'int')
        # Getting the type of 'self' (line 1214)
        self_247913 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1214, 8), 'self')
        # Obtaining the member 'figure' of a type (line 1214)
        figure_247914 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1214, 8), self_247913, 'figure')
        # Setting the type of the member 'dpi' of a type (line 1214)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1214, 8), figure_247914, 'dpi', int_247912)
        
        # Assigning a Call to a Tuple (line 1215):
        
        # Assigning a Call to a Name:
        
        # Call to get_size_inches(...): (line 1215)
        # Processing the call keyword arguments (line 1215)
        kwargs_247918 = {}
        # Getting the type of 'self' (line 1215)
        self_247915 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1215, 24), 'self', False)
        # Obtaining the member 'figure' of a type (line 1215)
        figure_247916 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1215, 24), self_247915, 'figure')
        # Obtaining the member 'get_size_inches' of a type (line 1215)
        get_size_inches_247917 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1215, 24), figure_247916, 'get_size_inches')
        # Calling get_size_inches(args, kwargs) (line 1215)
        get_size_inches_call_result_247919 = invoke(stypy.reporting.localization.Localization(__file__, 1215, 24), get_size_inches_247917, *[], **kwargs_247918)
        
        # Assigning a type to the variable 'call_assignment_243779' (line 1215)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1215, 8), 'call_assignment_243779', get_size_inches_call_result_247919)
        
        # Assigning a Call to a Name (line 1215):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_247922 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1215, 8), 'int')
        # Processing the call keyword arguments
        kwargs_247923 = {}
        # Getting the type of 'call_assignment_243779' (line 1215)
        call_assignment_243779_247920 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1215, 8), 'call_assignment_243779', False)
        # Obtaining the member '__getitem__' of a type (line 1215)
        getitem___247921 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1215, 8), call_assignment_243779_247920, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_247924 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___247921, *[int_247922], **kwargs_247923)
        
        # Assigning a type to the variable 'call_assignment_243780' (line 1215)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1215, 8), 'call_assignment_243780', getitem___call_result_247924)
        
        # Assigning a Name to a Name (line 1215):
        # Getting the type of 'call_assignment_243780' (line 1215)
        call_assignment_243780_247925 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1215, 8), 'call_assignment_243780')
        # Assigning a type to the variable 'width' (line 1215)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1215, 8), 'width', call_assignment_243780_247925)
        
        # Assigning a Call to a Name (line 1215):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_247928 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1215, 8), 'int')
        # Processing the call keyword arguments
        kwargs_247929 = {}
        # Getting the type of 'call_assignment_243779' (line 1215)
        call_assignment_243779_247926 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1215, 8), 'call_assignment_243779', False)
        # Obtaining the member '__getitem__' of a type (line 1215)
        getitem___247927 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1215, 8), call_assignment_243779_247926, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_247930 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___247927, *[int_247928], **kwargs_247929)
        
        # Assigning a type to the variable 'call_assignment_243781' (line 1215)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1215, 8), 'call_assignment_243781', getitem___call_result_247930)
        
        # Assigning a Name to a Name (line 1215):
        # Getting the type of 'call_assignment_243781' (line 1215)
        call_assignment_243781_247931 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1215, 8), 'call_assignment_243781')
        # Assigning a type to the variable 'height' (line 1215)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1215, 15), 'height', call_assignment_243781_247931)
        
        # Assigning a Num to a Name (line 1216):
        
        # Assigning a Num to a Name (line 1216):
        int_247932 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1216, 13), 'int')
        # Assigning a type to the variable 'xo' (line 1216)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1216, 8), 'xo', int_247932)
        
        # Assigning a Num to a Name (line 1217):
        
        # Assigning a Num to a Name (line 1217):
        int_247933 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1217, 13), 'int')
        # Assigning a type to the variable 'yo' (line 1217)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1217, 8), 'yo', int_247933)
        
        # Assigning a Attribute to a Tuple (line 1219):
        
        # Assigning a Subscript to a Name (line 1219):
        
        # Obtaining the type of the subscript
        int_247934 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1219, 8), 'int')
        # Getting the type of 'self' (line 1219)
        self_247935 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1219, 21), 'self')
        # Obtaining the member 'figure' of a type (line 1219)
        figure_247936 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1219, 21), self_247935, 'figure')
        # Obtaining the member 'bbox' of a type (line 1219)
        bbox_247937 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1219, 21), figure_247936, 'bbox')
        # Obtaining the member 'bounds' of a type (line 1219)
        bounds_247938 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1219, 21), bbox_247937, 'bounds')
        # Obtaining the member '__getitem__' of a type (line 1219)
        getitem___247939 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1219, 8), bounds_247938, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1219)
        subscript_call_result_247940 = invoke(stypy.reporting.localization.Localization(__file__, 1219, 8), getitem___247939, int_247934)
        
        # Assigning a type to the variable 'tuple_var_assignment_243782' (line 1219)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1219, 8), 'tuple_var_assignment_243782', subscript_call_result_247940)
        
        # Assigning a Subscript to a Name (line 1219):
        
        # Obtaining the type of the subscript
        int_247941 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1219, 8), 'int')
        # Getting the type of 'self' (line 1219)
        self_247942 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1219, 21), 'self')
        # Obtaining the member 'figure' of a type (line 1219)
        figure_247943 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1219, 21), self_247942, 'figure')
        # Obtaining the member 'bbox' of a type (line 1219)
        bbox_247944 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1219, 21), figure_247943, 'bbox')
        # Obtaining the member 'bounds' of a type (line 1219)
        bounds_247945 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1219, 21), bbox_247944, 'bounds')
        # Obtaining the member '__getitem__' of a type (line 1219)
        getitem___247946 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1219, 8), bounds_247945, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1219)
        subscript_call_result_247947 = invoke(stypy.reporting.localization.Localization(__file__, 1219, 8), getitem___247946, int_247941)
        
        # Assigning a type to the variable 'tuple_var_assignment_243783' (line 1219)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1219, 8), 'tuple_var_assignment_243783', subscript_call_result_247947)
        
        # Assigning a Subscript to a Name (line 1219):
        
        # Obtaining the type of the subscript
        int_247948 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1219, 8), 'int')
        # Getting the type of 'self' (line 1219)
        self_247949 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1219, 21), 'self')
        # Obtaining the member 'figure' of a type (line 1219)
        figure_247950 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1219, 21), self_247949, 'figure')
        # Obtaining the member 'bbox' of a type (line 1219)
        bbox_247951 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1219, 21), figure_247950, 'bbox')
        # Obtaining the member 'bounds' of a type (line 1219)
        bounds_247952 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1219, 21), bbox_247951, 'bounds')
        # Obtaining the member '__getitem__' of a type (line 1219)
        getitem___247953 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1219, 8), bounds_247952, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1219)
        subscript_call_result_247954 = invoke(stypy.reporting.localization.Localization(__file__, 1219, 8), getitem___247953, int_247948)
        
        # Assigning a type to the variable 'tuple_var_assignment_243784' (line 1219)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1219, 8), 'tuple_var_assignment_243784', subscript_call_result_247954)
        
        # Assigning a Subscript to a Name (line 1219):
        
        # Obtaining the type of the subscript
        int_247955 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1219, 8), 'int')
        # Getting the type of 'self' (line 1219)
        self_247956 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1219, 21), 'self')
        # Obtaining the member 'figure' of a type (line 1219)
        figure_247957 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1219, 21), self_247956, 'figure')
        # Obtaining the member 'bbox' of a type (line 1219)
        bbox_247958 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1219, 21), figure_247957, 'bbox')
        # Obtaining the member 'bounds' of a type (line 1219)
        bounds_247959 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1219, 21), bbox_247958, 'bounds')
        # Obtaining the member '__getitem__' of a type (line 1219)
        getitem___247960 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1219, 8), bounds_247959, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1219)
        subscript_call_result_247961 = invoke(stypy.reporting.localization.Localization(__file__, 1219, 8), getitem___247960, int_247955)
        
        # Assigning a type to the variable 'tuple_var_assignment_243785' (line 1219)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1219, 8), 'tuple_var_assignment_243785', subscript_call_result_247961)
        
        # Assigning a Name to a Name (line 1219):
        # Getting the type of 'tuple_var_assignment_243782' (line 1219)
        tuple_var_assignment_243782_247962 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1219, 8), 'tuple_var_assignment_243782')
        # Assigning a type to the variable 'l' (line 1219)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1219, 8), 'l', tuple_var_assignment_243782_247962)
        
        # Assigning a Name to a Name (line 1219):
        # Getting the type of 'tuple_var_assignment_243783' (line 1219)
        tuple_var_assignment_243783_247963 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1219, 8), 'tuple_var_assignment_243783')
        # Assigning a type to the variable 'b' (line 1219)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1219, 11), 'b', tuple_var_assignment_243783_247963)
        
        # Assigning a Name to a Name (line 1219):
        # Getting the type of 'tuple_var_assignment_243784' (line 1219)
        tuple_var_assignment_243784_247964 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1219, 8), 'tuple_var_assignment_243784')
        # Assigning a type to the variable 'w' (line 1219)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1219, 14), 'w', tuple_var_assignment_243784_247964)
        
        # Assigning a Name to a Name (line 1219):
        # Getting the type of 'tuple_var_assignment_243785' (line 1219)
        tuple_var_assignment_243785_247965 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1219, 8), 'tuple_var_assignment_243785')
        # Assigning a type to the variable 'h' (line 1219)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1219, 17), 'h', tuple_var_assignment_243785_247965)
        
        # Assigning a Name to a Name (line 1220):
        
        # Assigning a Name to a Name (line 1220):
        # Getting the type of 'xo' (line 1220)
        xo_247966 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1220, 14), 'xo')
        # Assigning a type to the variable 'llx' (line 1220)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1220, 8), 'llx', xo_247966)
        
        # Assigning a Name to a Name (line 1221):
        
        # Assigning a Name to a Name (line 1221):
        # Getting the type of 'yo' (line 1221)
        yo_247967 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1221, 14), 'yo')
        # Assigning a type to the variable 'lly' (line 1221)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1221, 8), 'lly', yo_247967)
        
        # Assigning a BinOp to a Name (line 1222):
        
        # Assigning a BinOp to a Name (line 1222):
        # Getting the type of 'llx' (line 1222)
        llx_247968 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1222, 14), 'llx')
        # Getting the type of 'w' (line 1222)
        w_247969 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1222, 20), 'w')
        # Applying the binary operator '+' (line 1222)
        result_add_247970 = python_operator(stypy.reporting.localization.Localization(__file__, 1222, 14), '+', llx_247968, w_247969)
        
        # Assigning a type to the variable 'urx' (line 1222)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1222, 8), 'urx', result_add_247970)
        
        # Assigning a BinOp to a Name (line 1223):
        
        # Assigning a BinOp to a Name (line 1223):
        # Getting the type of 'lly' (line 1223)
        lly_247971 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1223, 14), 'lly')
        # Getting the type of 'h' (line 1223)
        h_247972 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1223, 20), 'h')
        # Applying the binary operator '+' (line 1223)
        result_add_247973 = python_operator(stypy.reporting.localization.Localization(__file__, 1223, 14), '+', lly_247971, h_247972)
        
        # Assigning a type to the variable 'ury' (line 1223)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1223, 8), 'ury', result_add_247973)
        
        # Assigning a Tuple to a Name (line 1224):
        
        # Assigning a Tuple to a Name (line 1224):
        
        # Obtaining an instance of the builtin type 'tuple' (line 1224)
        tuple_247974 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1224, 16), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1224)
        # Adding element type (line 1224)
        # Getting the type of 'llx' (line 1224)
        llx_247975 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1224, 16), 'llx')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1224, 16), tuple_247974, llx_247975)
        # Adding element type (line 1224)
        # Getting the type of 'lly' (line 1224)
        lly_247976 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1224, 21), 'lly')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1224, 16), tuple_247974, lly_247976)
        # Adding element type (line 1224)
        # Getting the type of 'urx' (line 1224)
        urx_247977 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1224, 26), 'urx')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1224, 16), tuple_247974, urx_247977)
        # Adding element type (line 1224)
        # Getting the type of 'ury' (line 1224)
        ury_247978 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1224, 31), 'ury')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1224, 16), tuple_247974, ury_247978)
        
        # Assigning a type to the variable 'bbox' (line 1224)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1224, 8), 'bbox', tuple_247974)
        
        # Assigning a Call to a Name (line 1227):
        
        # Assigning a Call to a Name (line 1227):
        
        # Call to get_facecolor(...): (line 1227)
        # Processing the call keyword arguments (line 1227)
        kwargs_247982 = {}
        # Getting the type of 'self' (line 1227)
        self_247979 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1227, 24), 'self', False)
        # Obtaining the member 'figure' of a type (line 1227)
        figure_247980 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1227, 24), self_247979, 'figure')
        # Obtaining the member 'get_facecolor' of a type (line 1227)
        get_facecolor_247981 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1227, 24), figure_247980, 'get_facecolor')
        # Calling get_facecolor(args, kwargs) (line 1227)
        get_facecolor_call_result_247983 = invoke(stypy.reporting.localization.Localization(__file__, 1227, 24), get_facecolor_247981, *[], **kwargs_247982)
        
        # Assigning a type to the variable 'origfacecolor' (line 1227)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1227, 8), 'origfacecolor', get_facecolor_call_result_247983)
        
        # Assigning a Call to a Name (line 1228):
        
        # Assigning a Call to a Name (line 1228):
        
        # Call to get_edgecolor(...): (line 1228)
        # Processing the call keyword arguments (line 1228)
        kwargs_247987 = {}
        # Getting the type of 'self' (line 1228)
        self_247984 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1228, 24), 'self', False)
        # Obtaining the member 'figure' of a type (line 1228)
        figure_247985 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1228, 24), self_247984, 'figure')
        # Obtaining the member 'get_edgecolor' of a type (line 1228)
        get_edgecolor_247986 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1228, 24), figure_247985, 'get_edgecolor')
        # Calling get_edgecolor(args, kwargs) (line 1228)
        get_edgecolor_call_result_247988 = invoke(stypy.reporting.localization.Localization(__file__, 1228, 24), get_edgecolor_247986, *[], **kwargs_247987)
        
        # Assigning a type to the variable 'origedgecolor' (line 1228)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1228, 8), 'origedgecolor', get_edgecolor_call_result_247988)
        
        # Call to set_facecolor(...): (line 1229)
        # Processing the call arguments (line 1229)
        # Getting the type of 'facecolor' (line 1229)
        facecolor_247992 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1229, 34), 'facecolor', False)
        # Processing the call keyword arguments (line 1229)
        kwargs_247993 = {}
        # Getting the type of 'self' (line 1229)
        self_247989 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1229, 8), 'self', False)
        # Obtaining the member 'figure' of a type (line 1229)
        figure_247990 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1229, 8), self_247989, 'figure')
        # Obtaining the member 'set_facecolor' of a type (line 1229)
        set_facecolor_247991 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1229, 8), figure_247990, 'set_facecolor')
        # Calling set_facecolor(args, kwargs) (line 1229)
        set_facecolor_call_result_247994 = invoke(stypy.reporting.localization.Localization(__file__, 1229, 8), set_facecolor_247991, *[facecolor_247992], **kwargs_247993)
        
        
        # Call to set_edgecolor(...): (line 1230)
        # Processing the call arguments (line 1230)
        # Getting the type of 'edgecolor' (line 1230)
        edgecolor_247998 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1230, 34), 'edgecolor', False)
        # Processing the call keyword arguments (line 1230)
        kwargs_247999 = {}
        # Getting the type of 'self' (line 1230)
        self_247995 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1230, 8), 'self', False)
        # Obtaining the member 'figure' of a type (line 1230)
        figure_247996 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1230, 8), self_247995, 'figure')
        # Obtaining the member 'set_edgecolor' of a type (line 1230)
        set_edgecolor_247997 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1230, 8), figure_247996, 'set_edgecolor')
        # Calling set_edgecolor(args, kwargs) (line 1230)
        set_edgecolor_call_result_248000 = invoke(stypy.reporting.localization.Localization(__file__, 1230, 8), set_edgecolor_247997, *[edgecolor_247998], **kwargs_247999)
        
        
        # Assigning a Call to a Name (line 1232):
        
        # Assigning a Call to a Name (line 1232):
        
        # Call to get(...): (line 1232)
        # Processing the call arguments (line 1232)
        unicode_248003 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1232, 28), 'unicode', u'dryrun')
        # Getting the type of 'False' (line 1232)
        False_248004 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1232, 38), 'False', False)
        # Processing the call keyword arguments (line 1232)
        kwargs_248005 = {}
        # Getting the type of 'kwargs' (line 1232)
        kwargs_248001 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1232, 17), 'kwargs', False)
        # Obtaining the member 'get' of a type (line 1232)
        get_248002 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1232, 17), kwargs_248001, 'get')
        # Calling get(args, kwargs) (line 1232)
        get_call_result_248006 = invoke(stypy.reporting.localization.Localization(__file__, 1232, 17), get_248002, *[unicode_248003, False_248004], **kwargs_248005)
        
        # Assigning a type to the variable 'dryrun' (line 1232)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1232, 8), 'dryrun', get_call_result_248006)
        
        # Getting the type of 'dryrun' (line 1233)
        dryrun_248007 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1233, 11), 'dryrun')
        # Testing the type of an if condition (line 1233)
        if_condition_248008 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1233, 8), dryrun_248007)
        # Assigning a type to the variable 'if_condition_248008' (line 1233)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1233, 8), 'if_condition_248008', if_condition_248008)
        # SSA begins for if statement (line 1233)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        # Declaration of the 'NullWriter' class

        class NullWriter(object, ):

            @norecursion
            def write(type_of_self, localization, *varargs, **kwargs):
                global module_type_store
                # Assign values to the parameters with defaults
                defaults = []
                # Create a new context for function 'write'
                module_type_store = module_type_store.open_function_context('write', 1235, 16, False)
                # Assigning a type to the variable 'self' (line 1236)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1236, 16), 'self', type_of_self)
                
                # Passed parameters checking function
                NullWriter.write.__dict__.__setitem__('stypy_localization', localization)
                NullWriter.write.__dict__.__setitem__('stypy_type_of_self', type_of_self)
                NullWriter.write.__dict__.__setitem__('stypy_type_store', module_type_store)
                NullWriter.write.__dict__.__setitem__('stypy_function_name', 'NullWriter.write')
                NullWriter.write.__dict__.__setitem__('stypy_param_names_list', [])
                NullWriter.write.__dict__.__setitem__('stypy_varargs_param_name', 'kl')
                NullWriter.write.__dict__.__setitem__('stypy_kwargs_param_name', 'kwargs')
                NullWriter.write.__dict__.__setitem__('stypy_call_defaults', defaults)
                NullWriter.write.__dict__.__setitem__('stypy_call_varargs', varargs)
                NullWriter.write.__dict__.__setitem__('stypy_call_kwargs', kwargs)
                NullWriter.write.__dict__.__setitem__('stypy_declared_arg_number', 1)
                arguments = process_argument_values(localization, type_of_self, module_type_store, 'NullWriter.write', [], 'kl', 'kwargs', defaults, varargs, kwargs)

                if is_error_type(arguments):
                    # Destroy the current context
                    module_type_store = module_type_store.close_function_context()
                    return arguments

                # Initialize method data
                init_call_information(module_type_store, 'write', localization, [], arguments)
                
                # Default return type storage variable (SSA)
                # Assigning a type to the variable 'stypy_return_type'
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
                
                
                # ################# Begin of 'write(...)' code ##################

                pass
                
                # ################# End of 'write(...)' code ##################

                # Teardown call information
                teardown_call_information(localization, arguments)
                
                # Storing the return type of function 'write' in the type store
                # Getting the type of 'stypy_return_type' (line 1235)
                stypy_return_type_248009 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1235, 16), 'stypy_return_type')
                module_type_store.store_return_type_of_current_context(stypy_return_type_248009)
                
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                
                # Return type of the function 'write'
                return stypy_return_type_248009

        
        # Assigning a type to the variable 'NullWriter' (line 1234)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1234, 12), 'NullWriter', NullWriter)
        
        # Assigning a Call to a Attribute (line 1238):
        
        # Assigning a Call to a Attribute (line 1238):
        
        # Call to NullWriter(...): (line 1238)
        # Processing the call keyword arguments (line 1238)
        kwargs_248011 = {}
        # Getting the type of 'NullWriter' (line 1238)
        NullWriter_248010 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1238, 29), 'NullWriter', False)
        # Calling NullWriter(args, kwargs) (line 1238)
        NullWriter_call_result_248012 = invoke(stypy.reporting.localization.Localization(__file__, 1238, 29), NullWriter_248010, *[], **kwargs_248011)
        
        # Getting the type of 'self' (line 1238)
        self_248013 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1238, 12), 'self')
        # Setting the type of the member '_pswriter' of a type (line 1238)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1238, 12), self_248013, '_pswriter', NullWriter_call_result_248012)
        # SSA branch for the else part of an if statement (line 1233)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Call to a Attribute (line 1240):
        
        # Assigning a Call to a Attribute (line 1240):
        
        # Call to StringIO(...): (line 1240)
        # Processing the call keyword arguments (line 1240)
        kwargs_248016 = {}
        # Getting the type of 'io' (line 1240)
        io_248014 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1240, 29), 'io', False)
        # Obtaining the member 'StringIO' of a type (line 1240)
        StringIO_248015 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1240, 29), io_248014, 'StringIO')
        # Calling StringIO(args, kwargs) (line 1240)
        StringIO_call_result_248017 = invoke(stypy.reporting.localization.Localization(__file__, 1240, 29), StringIO_248015, *[], **kwargs_248016)
        
        # Getting the type of 'self' (line 1240)
        self_248018 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1240, 12), 'self')
        # Setting the type of the member '_pswriter' of a type (line 1240)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1240, 12), self_248018, '_pswriter', StringIO_call_result_248017)
        # SSA join for if statement (line 1233)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 1243):
        
        # Assigning a Call to a Name (line 1243):
        
        # Call to pop(...): (line 1243)
        # Processing the call arguments (line 1243)
        unicode_248021 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1243, 42), 'unicode', u'bbox_inches_restore')
        # Getting the type of 'None' (line 1243)
        None_248022 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1243, 65), 'None', False)
        # Processing the call keyword arguments (line 1243)
        kwargs_248023 = {}
        # Getting the type of 'kwargs' (line 1243)
        kwargs_248019 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1243, 31), 'kwargs', False)
        # Obtaining the member 'pop' of a type (line 1243)
        pop_248020 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1243, 31), kwargs_248019, 'pop')
        # Calling pop(args, kwargs) (line 1243)
        pop_call_result_248024 = invoke(stypy.reporting.localization.Localization(__file__, 1243, 31), pop_248020, *[unicode_248021, None_248022], **kwargs_248023)
        
        # Assigning a type to the variable '_bbox_inches_restore' (line 1243)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1243, 8), '_bbox_inches_restore', pop_call_result_248024)
        
        # Assigning a Call to a Name (line 1244):
        
        # Assigning a Call to a Name (line 1244):
        
        # Call to _renderer_class(...): (line 1244)
        # Processing the call arguments (line 1244)
        # Getting the type of 'width' (line 1244)
        width_248027 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1244, 43), 'width', False)
        # Getting the type of 'height' (line 1244)
        height_248028 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1244, 50), 'height', False)
        # Getting the type of 'self' (line 1245)
        self_248029 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1245, 43), 'self', False)
        # Obtaining the member '_pswriter' of a type (line 1245)
        _pswriter_248030 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1245, 43), self_248029, '_pswriter')
        # Processing the call keyword arguments (line 1244)
        # Getting the type of 'dpi' (line 1245)
        dpi_248031 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1245, 68), 'dpi', False)
        keyword_248032 = dpi_248031
        kwargs_248033 = {'imagedpi': keyword_248032}
        # Getting the type of 'self' (line 1244)
        self_248025 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1244, 22), 'self', False)
        # Obtaining the member '_renderer_class' of a type (line 1244)
        _renderer_class_248026 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1244, 22), self_248025, '_renderer_class')
        # Calling _renderer_class(args, kwargs) (line 1244)
        _renderer_class_call_result_248034 = invoke(stypy.reporting.localization.Localization(__file__, 1244, 22), _renderer_class_248026, *[width_248027, height_248028, _pswriter_248030], **kwargs_248033)
        
        # Assigning a type to the variable 'ps_renderer' (line 1244)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1244, 8), 'ps_renderer', _renderer_class_call_result_248034)
        
        # Assigning a Call to a Name (line 1246):
        
        # Assigning a Call to a Name (line 1246):
        
        # Call to MixedModeRenderer(...): (line 1246)
        # Processing the call arguments (line 1246)
        # Getting the type of 'self' (line 1246)
        self_248036 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1246, 37), 'self', False)
        # Obtaining the member 'figure' of a type (line 1246)
        figure_248037 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1246, 37), self_248036, 'figure')
        # Getting the type of 'width' (line 1247)
        width_248038 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1247, 37), 'width', False)
        # Getting the type of 'height' (line 1247)
        height_248039 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1247, 44), 'height', False)
        # Getting the type of 'dpi' (line 1247)
        dpi_248040 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1247, 52), 'dpi', False)
        # Getting the type of 'ps_renderer' (line 1247)
        ps_renderer_248041 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1247, 57), 'ps_renderer', False)
        # Processing the call keyword arguments (line 1246)
        # Getting the type of '_bbox_inches_restore' (line 1248)
        _bbox_inches_restore_248042 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1248, 57), '_bbox_inches_restore', False)
        keyword_248043 = _bbox_inches_restore_248042
        kwargs_248044 = {'bbox_inches_restore': keyword_248043}
        # Getting the type of 'MixedModeRenderer' (line 1246)
        MixedModeRenderer_248035 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1246, 19), 'MixedModeRenderer', False)
        # Calling MixedModeRenderer(args, kwargs) (line 1246)
        MixedModeRenderer_call_result_248045 = invoke(stypy.reporting.localization.Localization(__file__, 1246, 19), MixedModeRenderer_248035, *[figure_248037, width_248038, height_248039, dpi_248040, ps_renderer_248041], **kwargs_248044)
        
        # Assigning a type to the variable 'renderer' (line 1246)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1246, 8), 'renderer', MixedModeRenderer_call_result_248045)
        
        # Call to draw(...): (line 1250)
        # Processing the call arguments (line 1250)
        # Getting the type of 'renderer' (line 1250)
        renderer_248049 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1250, 25), 'renderer', False)
        # Processing the call keyword arguments (line 1250)
        kwargs_248050 = {}
        # Getting the type of 'self' (line 1250)
        self_248046 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1250, 8), 'self', False)
        # Obtaining the member 'figure' of a type (line 1250)
        figure_248047 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1250, 8), self_248046, 'figure')
        # Obtaining the member 'draw' of a type (line 1250)
        draw_248048 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1250, 8), figure_248047, 'draw')
        # Calling draw(args, kwargs) (line 1250)
        draw_call_result_248051 = invoke(stypy.reporting.localization.Localization(__file__, 1250, 8), draw_248048, *[renderer_248049], **kwargs_248050)
        
        
        # Getting the type of 'dryrun' (line 1252)
        dryrun_248052 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1252, 11), 'dryrun')
        # Testing the type of an if condition (line 1252)
        if_condition_248053 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1252, 8), dryrun_248052)
        # Assigning a type to the variable 'if_condition_248053' (line 1252)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1252, 8), 'if_condition_248053', if_condition_248053)
        # SSA begins for if statement (line 1252)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        # Assigning a type to the variable 'stypy_return_type' (line 1253)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1253, 12), 'stypy_return_type', types.NoneType)
        # SSA join for if statement (line 1252)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to set_facecolor(...): (line 1255)
        # Processing the call arguments (line 1255)
        # Getting the type of 'origfacecolor' (line 1255)
        origfacecolor_248057 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1255, 34), 'origfacecolor', False)
        # Processing the call keyword arguments (line 1255)
        kwargs_248058 = {}
        # Getting the type of 'self' (line 1255)
        self_248054 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1255, 8), 'self', False)
        # Obtaining the member 'figure' of a type (line 1255)
        figure_248055 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1255, 8), self_248054, 'figure')
        # Obtaining the member 'set_facecolor' of a type (line 1255)
        set_facecolor_248056 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1255, 8), figure_248055, 'set_facecolor')
        # Calling set_facecolor(args, kwargs) (line 1255)
        set_facecolor_call_result_248059 = invoke(stypy.reporting.localization.Localization(__file__, 1255, 8), set_facecolor_248056, *[origfacecolor_248057], **kwargs_248058)
        
        
        # Call to set_edgecolor(...): (line 1256)
        # Processing the call arguments (line 1256)
        # Getting the type of 'origedgecolor' (line 1256)
        origedgecolor_248063 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1256, 34), 'origedgecolor', False)
        # Processing the call keyword arguments (line 1256)
        kwargs_248064 = {}
        # Getting the type of 'self' (line 1256)
        self_248060 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1256, 8), 'self', False)
        # Obtaining the member 'figure' of a type (line 1256)
        figure_248061 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1256, 8), self_248060, 'figure')
        # Obtaining the member 'set_edgecolor' of a type (line 1256)
        set_edgecolor_248062 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1256, 8), figure_248061, 'set_edgecolor')
        # Calling set_edgecolor(args, kwargs) (line 1256)
        set_edgecolor_call_result_248065 = invoke(stypy.reporting.localization.Localization(__file__, 1256, 8), set_edgecolor_248062, *[origedgecolor_248063], **kwargs_248064)
        
        
        
        # Evaluating a boolean operation
        
        # Getting the type of 'metadata' (line 1259)
        metadata_248066 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1259, 11), 'metadata')
        # Getting the type of 'None' (line 1259)
        None_248067 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1259, 27), 'None')
        # Applying the binary operator 'isnot' (line 1259)
        result_is_not_248068 = python_operator(stypy.reporting.localization.Localization(__file__, 1259, 11), 'isnot', metadata_248066, None_248067)
        
        
        unicode_248069 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1259, 36), 'unicode', u'Creator')
        # Getting the type of 'metadata' (line 1259)
        metadata_248070 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1259, 49), 'metadata')
        # Applying the binary operator 'in' (line 1259)
        result_contains_248071 = python_operator(stypy.reporting.localization.Localization(__file__, 1259, 36), 'in', unicode_248069, metadata_248070)
        
        # Applying the binary operator 'and' (line 1259)
        result_and_keyword_248072 = python_operator(stypy.reporting.localization.Localization(__file__, 1259, 11), 'and', result_is_not_248068, result_contains_248071)
        
        # Testing the type of an if condition (line 1259)
        if_condition_248073 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1259, 8), result_and_keyword_248072)
        # Assigning a type to the variable 'if_condition_248073' (line 1259)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1259, 8), 'if_condition_248073', if_condition_248073)
        # SSA begins for if statement (line 1259)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Subscript to a Name (line 1260):
        
        # Assigning a Subscript to a Name (line 1260):
        
        # Obtaining the type of the subscript
        unicode_248074 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1260, 35), 'unicode', u'Creator')
        # Getting the type of 'metadata' (line 1260)
        metadata_248075 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1260, 26), 'metadata')
        # Obtaining the member '__getitem__' of a type (line 1260)
        getitem___248076 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1260, 26), metadata_248075, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1260)
        subscript_call_result_248077 = invoke(stypy.reporting.localization.Localization(__file__, 1260, 26), getitem___248076, unicode_248074)
        
        # Assigning a type to the variable 'creator_str' (line 1260)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1260, 12), 'creator_str', subscript_call_result_248077)
        # SSA branch for the else part of an if statement (line 1259)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a BinOp to a Name (line 1262):
        
        # Assigning a BinOp to a Name (line 1262):
        unicode_248078 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1262, 26), 'unicode', u'matplotlib version ')
        # Getting the type of '__version__' (line 1262)
        version___248079 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1262, 50), '__version__')
        # Applying the binary operator '+' (line 1262)
        result_add_248080 = python_operator(stypy.reporting.localization.Localization(__file__, 1262, 26), '+', unicode_248078, version___248079)
        
        unicode_248081 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1263, 16), 'unicode', u', http://matplotlib.org/')
        # Applying the binary operator '+' (line 1262)
        result_add_248082 = python_operator(stypy.reporting.localization.Localization(__file__, 1262, 62), '+', result_add_248080, unicode_248081)
        
        # Assigning a type to the variable 'creator_str' (line 1262)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1262, 12), 'creator_str', result_add_248082)
        # SSA join for if statement (line 1259)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Tuple (line 1267):
        
        # Assigning a Call to a Name:
        
        # Call to mkstemp(...): (line 1267)
        # Processing the call keyword arguments (line 1267)
        kwargs_248084 = {}
        # Getting the type of 'mkstemp' (line 1267)
        mkstemp_248083 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1267, 22), 'mkstemp', False)
        # Calling mkstemp(args, kwargs) (line 1267)
        mkstemp_call_result_248085 = invoke(stypy.reporting.localization.Localization(__file__, 1267, 22), mkstemp_248083, *[], **kwargs_248084)
        
        # Assigning a type to the variable 'call_assignment_243786' (line 1267)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1267, 8), 'call_assignment_243786', mkstemp_call_result_248085)
        
        # Assigning a Call to a Name (line 1267):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_248088 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1267, 8), 'int')
        # Processing the call keyword arguments
        kwargs_248089 = {}
        # Getting the type of 'call_assignment_243786' (line 1267)
        call_assignment_243786_248086 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1267, 8), 'call_assignment_243786', False)
        # Obtaining the member '__getitem__' of a type (line 1267)
        getitem___248087 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1267, 8), call_assignment_243786_248086, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_248090 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___248087, *[int_248088], **kwargs_248089)
        
        # Assigning a type to the variable 'call_assignment_243787' (line 1267)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1267, 8), 'call_assignment_243787', getitem___call_result_248090)
        
        # Assigning a Name to a Name (line 1267):
        # Getting the type of 'call_assignment_243787' (line 1267)
        call_assignment_243787_248091 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1267, 8), 'call_assignment_243787')
        # Assigning a type to the variable 'fd' (line 1267)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1267, 8), 'fd', call_assignment_243787_248091)
        
        # Assigning a Call to a Name (line 1267):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_248094 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1267, 8), 'int')
        # Processing the call keyword arguments
        kwargs_248095 = {}
        # Getting the type of 'call_assignment_243786' (line 1267)
        call_assignment_243786_248092 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1267, 8), 'call_assignment_243786', False)
        # Obtaining the member '__getitem__' of a type (line 1267)
        getitem___248093 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1267, 8), call_assignment_243786_248092, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_248096 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___248093, *[int_248094], **kwargs_248095)
        
        # Assigning a type to the variable 'call_assignment_243788' (line 1267)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1267, 8), 'call_assignment_243788', getitem___call_result_248096)
        
        # Assigning a Name to a Name (line 1267):
        # Getting the type of 'call_assignment_243788' (line 1267)
        call_assignment_243788_248097 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1267, 8), 'call_assignment_243788')
        # Assigning a type to the variable 'tmpfile' (line 1267)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1267, 12), 'tmpfile', call_assignment_243788_248097)
        
        # Try-finally block (line 1268)
        
        # Call to open(...): (line 1269)
        # Processing the call arguments (line 1269)
        # Getting the type of 'fd' (line 1269)
        fd_248100 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1269, 25), 'fd', False)
        unicode_248101 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1269, 29), 'unicode', u'w')
        # Processing the call keyword arguments (line 1269)
        unicode_248102 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1269, 43), 'unicode', u'latin-1')
        keyword_248103 = unicode_248102
        kwargs_248104 = {'encoding': keyword_248103}
        # Getting the type of 'io' (line 1269)
        io_248098 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1269, 17), 'io', False)
        # Obtaining the member 'open' of a type (line 1269)
        open_248099 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1269, 17), io_248098, 'open')
        # Calling open(args, kwargs) (line 1269)
        open_call_result_248105 = invoke(stypy.reporting.localization.Localization(__file__, 1269, 17), open_248099, *[fd_248100, unicode_248101], **kwargs_248104)
        
        with_248106 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 1269, 17), open_call_result_248105, 'with parameter', '__enter__', '__exit__')

        if with_248106:
            # Calling the __enter__ method to initiate a with section
            # Obtaining the member '__enter__' of a type (line 1269)
            enter___248107 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1269, 17), open_call_result_248105, '__enter__')
            with_enter_248108 = invoke(stypy.reporting.localization.Localization(__file__, 1269, 17), enter___248107)
            # Assigning a type to the variable 'fh' (line 1269)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1269, 17), 'fh', with_enter_248108)
            
            # Call to print(...): (line 1271)
            # Processing the call arguments (line 1271)
            unicode_248110 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1271, 22), 'unicode', u'%!PS-Adobe-3.0 EPSF-3.0')
            # Processing the call keyword arguments (line 1271)
            # Getting the type of 'fh' (line 1271)
            fh_248111 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1271, 54), 'fh', False)
            keyword_248112 = fh_248111
            kwargs_248113 = {'file': keyword_248112}
            # Getting the type of 'print' (line 1271)
            print_248109 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1271, 16), 'print', False)
            # Calling print(args, kwargs) (line 1271)
            print_call_result_248114 = invoke(stypy.reporting.localization.Localization(__file__, 1271, 16), print_248109, *[unicode_248110], **kwargs_248113)
            
            
            # Getting the type of 'title' (line 1272)
            title_248115 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1272, 19), 'title')
            # Testing the type of an if condition (line 1272)
            if_condition_248116 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1272, 16), title_248115)
            # Assigning a type to the variable 'if_condition_248116' (line 1272)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1272, 16), 'if_condition_248116', if_condition_248116)
            # SSA begins for if statement (line 1272)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Call to print(...): (line 1273)
            # Processing the call arguments (line 1273)
            unicode_248118 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1273, 26), 'unicode', u'%%Title: ')
            # Getting the type of 'title' (line 1273)
            title_248119 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1273, 38), 'title', False)
            # Applying the binary operator '+' (line 1273)
            result_add_248120 = python_operator(stypy.reporting.localization.Localization(__file__, 1273, 26), '+', unicode_248118, title_248119)
            
            # Processing the call keyword arguments (line 1273)
            # Getting the type of 'fh' (line 1273)
            fh_248121 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1273, 50), 'fh', False)
            keyword_248122 = fh_248121
            kwargs_248123 = {'file': keyword_248122}
            # Getting the type of 'print' (line 1273)
            print_248117 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1273, 20), 'print', False)
            # Calling print(args, kwargs) (line 1273)
            print_call_result_248124 = invoke(stypy.reporting.localization.Localization(__file__, 1273, 20), print_248117, *[result_add_248120], **kwargs_248123)
            
            # SSA join for if statement (line 1272)
            module_type_store = module_type_store.join_ssa_context()
            
            
            # Call to print(...): (line 1274)
            # Processing the call arguments (line 1274)
            unicode_248126 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1274, 22), 'unicode', u'%%Creator: ')
            # Getting the type of 'creator_str' (line 1274)
            creator_str_248127 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1274, 38), 'creator_str', False)
            # Applying the binary operator '+' (line 1274)
            result_add_248128 = python_operator(stypy.reporting.localization.Localization(__file__, 1274, 22), '+', unicode_248126, creator_str_248127)
            
            # Processing the call keyword arguments (line 1274)
            # Getting the type of 'fh' (line 1274)
            fh_248129 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1274, 56), 'fh', False)
            keyword_248130 = fh_248129
            kwargs_248131 = {'file': keyword_248130}
            # Getting the type of 'print' (line 1274)
            print_248125 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1274, 16), 'print', False)
            # Calling print(args, kwargs) (line 1274)
            print_call_result_248132 = invoke(stypy.reporting.localization.Localization(__file__, 1274, 16), print_248125, *[result_add_248128], **kwargs_248131)
            
            
            # Assigning a Call to a Name (line 1277):
            
            # Assigning a Call to a Name (line 1277):
            
            # Call to getenv(...): (line 1277)
            # Processing the call arguments (line 1277)
            unicode_248135 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1277, 46), 'unicode', u'SOURCE_DATE_EPOCH')
            # Processing the call keyword arguments (line 1277)
            kwargs_248136 = {}
            # Getting the type of 'os' (line 1277)
            os_248133 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1277, 36), 'os', False)
            # Obtaining the member 'getenv' of a type (line 1277)
            getenv_248134 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1277, 36), os_248133, 'getenv')
            # Calling getenv(args, kwargs) (line 1277)
            getenv_call_result_248137 = invoke(stypy.reporting.localization.Localization(__file__, 1277, 36), getenv_248134, *[unicode_248135], **kwargs_248136)
            
            # Assigning a type to the variable 'source_date_epoch' (line 1277)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1277, 16), 'source_date_epoch', getenv_call_result_248137)
            
            # Getting the type of 'source_date_epoch' (line 1278)
            source_date_epoch_248138 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1278, 19), 'source_date_epoch')
            # Testing the type of an if condition (line 1278)
            if_condition_248139 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1278, 16), source_date_epoch_248138)
            # Assigning a type to the variable 'if_condition_248139' (line 1278)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1278, 16), 'if_condition_248139', if_condition_248139)
            # SSA begins for if statement (line 1278)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Call to a Name (line 1279):
            
            # Assigning a Call to a Name (line 1279):
            
            # Call to strftime(...): (line 1279)
            # Processing the call arguments (line 1279)
            unicode_248150 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1281, 28), 'unicode', u'%a %b %d %H:%M:%S %Y')
            # Processing the call keyword arguments (line 1279)
            kwargs_248151 = {}
            
            # Call to utcfromtimestamp(...): (line 1279)
            # Processing the call arguments (line 1279)
            
            # Call to int(...): (line 1280)
            # Processing the call arguments (line 1280)
            # Getting the type of 'source_date_epoch' (line 1280)
            source_date_epoch_248144 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1280, 28), 'source_date_epoch', False)
            # Processing the call keyword arguments (line 1280)
            kwargs_248145 = {}
            # Getting the type of 'int' (line 1280)
            int_248143 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1280, 24), 'int', False)
            # Calling int(args, kwargs) (line 1280)
            int_call_result_248146 = invoke(stypy.reporting.localization.Localization(__file__, 1280, 24), int_248143, *[source_date_epoch_248144], **kwargs_248145)
            
            # Processing the call keyword arguments (line 1279)
            kwargs_248147 = {}
            # Getting the type of 'datetime' (line 1279)
            datetime_248140 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1279, 34), 'datetime', False)
            # Obtaining the member 'datetime' of a type (line 1279)
            datetime_248141 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1279, 34), datetime_248140, 'datetime')
            # Obtaining the member 'utcfromtimestamp' of a type (line 1279)
            utcfromtimestamp_248142 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1279, 34), datetime_248141, 'utcfromtimestamp')
            # Calling utcfromtimestamp(args, kwargs) (line 1279)
            utcfromtimestamp_call_result_248148 = invoke(stypy.reporting.localization.Localization(__file__, 1279, 34), utcfromtimestamp_248142, *[int_call_result_248146], **kwargs_248147)
            
            # Obtaining the member 'strftime' of a type (line 1279)
            strftime_248149 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1279, 34), utcfromtimestamp_call_result_248148, 'strftime')
            # Calling strftime(args, kwargs) (line 1279)
            strftime_call_result_248152 = invoke(stypy.reporting.localization.Localization(__file__, 1279, 34), strftime_248149, *[unicode_248150], **kwargs_248151)
            
            # Assigning a type to the variable 'source_date' (line 1279)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1279, 20), 'source_date', strftime_call_result_248152)
            # SSA branch for the else part of an if statement (line 1278)
            module_type_store.open_ssa_branch('else')
            
            # Assigning a Call to a Name (line 1283):
            
            # Assigning a Call to a Name (line 1283):
            
            # Call to ctime(...): (line 1283)
            # Processing the call keyword arguments (line 1283)
            kwargs_248155 = {}
            # Getting the type of 'time' (line 1283)
            time_248153 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1283, 34), 'time', False)
            # Obtaining the member 'ctime' of a type (line 1283)
            ctime_248154 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1283, 34), time_248153, 'ctime')
            # Calling ctime(args, kwargs) (line 1283)
            ctime_call_result_248156 = invoke(stypy.reporting.localization.Localization(__file__, 1283, 34), ctime_248154, *[], **kwargs_248155)
            
            # Assigning a type to the variable 'source_date' (line 1283)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1283, 20), 'source_date', ctime_call_result_248156)
            # SSA join for if statement (line 1278)
            module_type_store = module_type_store.join_ssa_context()
            
            
            # Call to print(...): (line 1284)
            # Processing the call arguments (line 1284)
            unicode_248158 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1284, 22), 'unicode', u'%%CreationDate: ')
            # Getting the type of 'source_date' (line 1284)
            source_date_248159 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1284, 41), 'source_date', False)
            # Applying the binary operator '+' (line 1284)
            result_add_248160 = python_operator(stypy.reporting.localization.Localization(__file__, 1284, 22), '+', unicode_248158, source_date_248159)
            
            # Processing the call keyword arguments (line 1284)
            # Getting the type of 'fh' (line 1284)
            fh_248161 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1284, 59), 'fh', False)
            keyword_248162 = fh_248161
            kwargs_248163 = {'file': keyword_248162}
            # Getting the type of 'print' (line 1284)
            print_248157 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1284, 16), 'print', False)
            # Calling print(args, kwargs) (line 1284)
            print_call_result_248164 = invoke(stypy.reporting.localization.Localization(__file__, 1284, 16), print_248157, *[result_add_248160], **kwargs_248163)
            
            
            # Call to print(...): (line 1285)
            # Processing the call arguments (line 1285)
            unicode_248166 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1285, 22), 'unicode', u'%%%%BoundingBox: %d %d %d %d')
            # Getting the type of 'bbox' (line 1285)
            bbox_248167 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1285, 55), 'bbox', False)
            # Applying the binary operator '%' (line 1285)
            result_mod_248168 = python_operator(stypy.reporting.localization.Localization(__file__, 1285, 22), '%', unicode_248166, bbox_248167)
            
            # Processing the call keyword arguments (line 1285)
            # Getting the type of 'fh' (line 1285)
            fh_248169 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1285, 66), 'fh', False)
            keyword_248170 = fh_248169
            kwargs_248171 = {'file': keyword_248170}
            # Getting the type of 'print' (line 1285)
            print_248165 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1285, 16), 'print', False)
            # Calling print(args, kwargs) (line 1285)
            print_call_result_248172 = invoke(stypy.reporting.localization.Localization(__file__, 1285, 16), print_248165, *[result_mod_248168], **kwargs_248171)
            
            
            # Call to print(...): (line 1286)
            # Processing the call arguments (line 1286)
            unicode_248174 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1286, 22), 'unicode', u'%%EndComments')
            # Processing the call keyword arguments (line 1286)
            # Getting the type of 'fh' (line 1286)
            fh_248175 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1286, 44), 'fh', False)
            keyword_248176 = fh_248175
            kwargs_248177 = {'file': keyword_248176}
            # Getting the type of 'print' (line 1286)
            print_248173 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1286, 16), 'print', False)
            # Calling print(args, kwargs) (line 1286)
            print_call_result_248178 = invoke(stypy.reporting.localization.Localization(__file__, 1286, 16), print_248173, *[unicode_248174], **kwargs_248177)
            
            
            # Assigning a Call to a Name (line 1288):
            
            # Assigning a Call to a Name (line 1288):
            
            # Call to len(...): (line 1288)
            # Processing the call arguments (line 1288)
            # Getting the type of 'psDefs' (line 1288)
            psDefs_248180 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1288, 28), 'psDefs', False)
            # Processing the call keyword arguments (line 1288)
            kwargs_248181 = {}
            # Getting the type of 'len' (line 1288)
            len_248179 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1288, 24), 'len', False)
            # Calling len(args, kwargs) (line 1288)
            len_call_result_248182 = invoke(stypy.reporting.localization.Localization(__file__, 1288, 24), len_248179, *[psDefs_248180], **kwargs_248181)
            
            # Assigning a type to the variable 'Ndict' (line 1288)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1288, 16), 'Ndict', len_call_result_248182)
            
            # Call to print(...): (line 1289)
            # Processing the call arguments (line 1289)
            unicode_248184 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1289, 22), 'unicode', u'%%BeginProlog')
            # Processing the call keyword arguments (line 1289)
            # Getting the type of 'fh' (line 1289)
            fh_248185 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1289, 44), 'fh', False)
            keyword_248186 = fh_248185
            kwargs_248187 = {'file': keyword_248186}
            # Getting the type of 'print' (line 1289)
            print_248183 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1289, 16), 'print', False)
            # Calling print(args, kwargs) (line 1289)
            print_call_result_248188 = invoke(stypy.reporting.localization.Localization(__file__, 1289, 16), print_248183, *[unicode_248184], **kwargs_248187)
            
            
            # Call to print(...): (line 1290)
            # Processing the call arguments (line 1290)
            unicode_248190 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1290, 22), 'unicode', u'/mpldict %d dict def')
            # Getting the type of 'Ndict' (line 1290)
            Ndict_248191 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1290, 47), 'Ndict', False)
            # Applying the binary operator '%' (line 1290)
            result_mod_248192 = python_operator(stypy.reporting.localization.Localization(__file__, 1290, 22), '%', unicode_248190, Ndict_248191)
            
            # Processing the call keyword arguments (line 1290)
            # Getting the type of 'fh' (line 1290)
            fh_248193 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1290, 59), 'fh', False)
            keyword_248194 = fh_248193
            kwargs_248195 = {'file': keyword_248194}
            # Getting the type of 'print' (line 1290)
            print_248189 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1290, 16), 'print', False)
            # Calling print(args, kwargs) (line 1290)
            print_call_result_248196 = invoke(stypy.reporting.localization.Localization(__file__, 1290, 16), print_248189, *[result_mod_248192], **kwargs_248195)
            
            
            # Call to print(...): (line 1291)
            # Processing the call arguments (line 1291)
            unicode_248198 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1291, 22), 'unicode', u'mpldict begin')
            # Processing the call keyword arguments (line 1291)
            # Getting the type of 'fh' (line 1291)
            fh_248199 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1291, 44), 'fh', False)
            keyword_248200 = fh_248199
            kwargs_248201 = {'file': keyword_248200}
            # Getting the type of 'print' (line 1291)
            print_248197 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1291, 16), 'print', False)
            # Calling print(args, kwargs) (line 1291)
            print_call_result_248202 = invoke(stypy.reporting.localization.Localization(__file__, 1291, 16), print_248197, *[unicode_248198], **kwargs_248201)
            
            
            # Getting the type of 'psDefs' (line 1292)
            psDefs_248203 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1292, 25), 'psDefs')
            # Testing the type of a for loop iterable (line 1292)
            is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1292, 16), psDefs_248203)
            # Getting the type of the for loop variable (line 1292)
            for_loop_var_248204 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1292, 16), psDefs_248203)
            # Assigning a type to the variable 'd' (line 1292)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1292, 16), 'd', for_loop_var_248204)
            # SSA begins for a for statement (line 1292)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
            
            # Assigning a Call to a Name (line 1293):
            
            # Assigning a Call to a Name (line 1293):
            
            # Call to strip(...): (line 1293)
            # Processing the call keyword arguments (line 1293)
            kwargs_248207 = {}
            # Getting the type of 'd' (line 1293)
            d_248205 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1293, 24), 'd', False)
            # Obtaining the member 'strip' of a type (line 1293)
            strip_248206 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1293, 24), d_248205, 'strip')
            # Calling strip(args, kwargs) (line 1293)
            strip_call_result_248208 = invoke(stypy.reporting.localization.Localization(__file__, 1293, 24), strip_248206, *[], **kwargs_248207)
            
            # Assigning a type to the variable 'd' (line 1293)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1293, 20), 'd', strip_call_result_248208)
            
            
            # Call to split(...): (line 1294)
            # Processing the call arguments (line 1294)
            unicode_248211 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1294, 37), 'unicode', u'\n')
            # Processing the call keyword arguments (line 1294)
            kwargs_248212 = {}
            # Getting the type of 'd' (line 1294)
            d_248209 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1294, 29), 'd', False)
            # Obtaining the member 'split' of a type (line 1294)
            split_248210 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1294, 29), d_248209, 'split')
            # Calling split(args, kwargs) (line 1294)
            split_call_result_248213 = invoke(stypy.reporting.localization.Localization(__file__, 1294, 29), split_248210, *[unicode_248211], **kwargs_248212)
            
            # Testing the type of a for loop iterable (line 1294)
            is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1294, 20), split_call_result_248213)
            # Getting the type of the for loop variable (line 1294)
            for_loop_var_248214 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1294, 20), split_call_result_248213)
            # Assigning a type to the variable 'l' (line 1294)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1294, 20), 'l', for_loop_var_248214)
            # SSA begins for a for statement (line 1294)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
            
            # Call to print(...): (line 1295)
            # Processing the call arguments (line 1295)
            
            # Call to strip(...): (line 1295)
            # Processing the call keyword arguments (line 1295)
            kwargs_248218 = {}
            # Getting the type of 'l' (line 1295)
            l_248216 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1295, 30), 'l', False)
            # Obtaining the member 'strip' of a type (line 1295)
            strip_248217 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1295, 30), l_248216, 'strip')
            # Calling strip(args, kwargs) (line 1295)
            strip_call_result_248219 = invoke(stypy.reporting.localization.Localization(__file__, 1295, 30), strip_248217, *[], **kwargs_248218)
            
            # Processing the call keyword arguments (line 1295)
            # Getting the type of 'fh' (line 1295)
            fh_248220 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1295, 46), 'fh', False)
            keyword_248221 = fh_248220
            kwargs_248222 = {'file': keyword_248221}
            # Getting the type of 'print' (line 1295)
            print_248215 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1295, 24), 'print', False)
            # Calling print(args, kwargs) (line 1295)
            print_call_result_248223 = invoke(stypy.reporting.localization.Localization(__file__, 1295, 24), print_248215, *[strip_call_result_248219], **kwargs_248222)
            
            # SSA join for a for statement
            module_type_store = module_type_store.join_ssa_context()
            
            # SSA join for a for statement
            module_type_store = module_type_store.join_ssa_context()
            
            
            # Call to print(...): (line 1296)
            # Processing the call arguments (line 1296)
            unicode_248225 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1296, 22), 'unicode', u'end')
            # Processing the call keyword arguments (line 1296)
            # Getting the type of 'fh' (line 1296)
            fh_248226 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1296, 34), 'fh', False)
            keyword_248227 = fh_248226
            kwargs_248228 = {'file': keyword_248227}
            # Getting the type of 'print' (line 1296)
            print_248224 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1296, 16), 'print', False)
            # Calling print(args, kwargs) (line 1296)
            print_call_result_248229 = invoke(stypy.reporting.localization.Localization(__file__, 1296, 16), print_248224, *[unicode_248225], **kwargs_248228)
            
            
            # Call to print(...): (line 1297)
            # Processing the call arguments (line 1297)
            unicode_248231 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1297, 22), 'unicode', u'%%EndProlog')
            # Processing the call keyword arguments (line 1297)
            # Getting the type of 'fh' (line 1297)
            fh_248232 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1297, 42), 'fh', False)
            keyword_248233 = fh_248232
            kwargs_248234 = {'file': keyword_248233}
            # Getting the type of 'print' (line 1297)
            print_248230 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1297, 16), 'print', False)
            # Calling print(args, kwargs) (line 1297)
            print_call_result_248235 = invoke(stypy.reporting.localization.Localization(__file__, 1297, 16), print_248230, *[unicode_248231], **kwargs_248234)
            
            
            # Call to print(...): (line 1299)
            # Processing the call arguments (line 1299)
            unicode_248237 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1299, 22), 'unicode', u'mpldict begin')
            # Processing the call keyword arguments (line 1299)
            # Getting the type of 'fh' (line 1299)
            fh_248238 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1299, 44), 'fh', False)
            keyword_248239 = fh_248238
            kwargs_248240 = {'file': keyword_248239}
            # Getting the type of 'print' (line 1299)
            print_248236 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1299, 16), 'print', False)
            # Calling print(args, kwargs) (line 1299)
            print_call_result_248241 = invoke(stypy.reporting.localization.Localization(__file__, 1299, 16), print_248236, *[unicode_248237], **kwargs_248240)
            
            
            # Call to print(...): (line 1300)
            # Processing the call arguments (line 1300)
            unicode_248243 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1300, 22), 'unicode', u'%s translate')
            
            # Call to _nums_to_str(...): (line 1300)
            # Processing the call arguments (line 1300)
            # Getting the type of 'xo' (line 1300)
            xo_248245 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1300, 52), 'xo', False)
            # Getting the type of 'yo' (line 1300)
            yo_248246 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1300, 56), 'yo', False)
            # Processing the call keyword arguments (line 1300)
            kwargs_248247 = {}
            # Getting the type of '_nums_to_str' (line 1300)
            _nums_to_str_248244 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1300, 39), '_nums_to_str', False)
            # Calling _nums_to_str(args, kwargs) (line 1300)
            _nums_to_str_call_result_248248 = invoke(stypy.reporting.localization.Localization(__file__, 1300, 39), _nums_to_str_248244, *[xo_248245, yo_248246], **kwargs_248247)
            
            # Applying the binary operator '%' (line 1300)
            result_mod_248249 = python_operator(stypy.reporting.localization.Localization(__file__, 1300, 22), '%', unicode_248243, _nums_to_str_call_result_248248)
            
            # Processing the call keyword arguments (line 1300)
            # Getting the type of 'fh' (line 1300)
            fh_248250 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1300, 66), 'fh', False)
            keyword_248251 = fh_248250
            kwargs_248252 = {'file': keyword_248251}
            # Getting the type of 'print' (line 1300)
            print_248242 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1300, 16), 'print', False)
            # Calling print(args, kwargs) (line 1300)
            print_call_result_248253 = invoke(stypy.reporting.localization.Localization(__file__, 1300, 16), print_248242, *[result_mod_248249], **kwargs_248252)
            
            
            # Call to print(...): (line 1301)
            # Processing the call arguments (line 1301)
            unicode_248255 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1301, 22), 'unicode', u'%s clipbox')
            
            # Call to _nums_to_str(...): (line 1301)
            # Processing the call arguments (line 1301)
            # Getting the type of 'width' (line 1301)
            width_248257 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1301, 50), 'width', False)
            int_248258 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1301, 56), 'int')
            # Applying the binary operator '*' (line 1301)
            result_mul_248259 = python_operator(stypy.reporting.localization.Localization(__file__, 1301, 50), '*', width_248257, int_248258)
            
            # Getting the type of 'height' (line 1301)
            height_248260 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1301, 60), 'height', False)
            int_248261 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1301, 67), 'int')
            # Applying the binary operator '*' (line 1301)
            result_mul_248262 = python_operator(stypy.reporting.localization.Localization(__file__, 1301, 60), '*', height_248260, int_248261)
            
            int_248263 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1301, 71), 'int')
            int_248264 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1301, 74), 'int')
            # Processing the call keyword arguments (line 1301)
            kwargs_248265 = {}
            # Getting the type of '_nums_to_str' (line 1301)
            _nums_to_str_248256 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1301, 37), '_nums_to_str', False)
            # Calling _nums_to_str(args, kwargs) (line 1301)
            _nums_to_str_call_result_248266 = invoke(stypy.reporting.localization.Localization(__file__, 1301, 37), _nums_to_str_248256, *[result_mul_248259, result_mul_248262, int_248263, int_248264], **kwargs_248265)
            
            # Applying the binary operator '%' (line 1301)
            result_mod_248267 = python_operator(stypy.reporting.localization.Localization(__file__, 1301, 22), '%', unicode_248255, _nums_to_str_call_result_248266)
            
            # Processing the call keyword arguments (line 1301)
            # Getting the type of 'fh' (line 1302)
            fh_248268 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1302, 27), 'fh', False)
            keyword_248269 = fh_248268
            kwargs_248270 = {'file': keyword_248269}
            # Getting the type of 'print' (line 1301)
            print_248254 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1301, 16), 'print', False)
            # Calling print(args, kwargs) (line 1301)
            print_call_result_248271 = invoke(stypy.reporting.localization.Localization(__file__, 1301, 16), print_248254, *[result_mod_248267], **kwargs_248270)
            
            
            # Call to print(...): (line 1305)
            # Processing the call arguments (line 1305)
            
            # Call to getvalue(...): (line 1305)
            # Processing the call keyword arguments (line 1305)
            kwargs_248276 = {}
            # Getting the type of 'self' (line 1305)
            self_248273 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1305, 22), 'self', False)
            # Obtaining the member '_pswriter' of a type (line 1305)
            _pswriter_248274 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1305, 22), self_248273, '_pswriter')
            # Obtaining the member 'getvalue' of a type (line 1305)
            getvalue_248275 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1305, 22), _pswriter_248274, 'getvalue')
            # Calling getvalue(args, kwargs) (line 1305)
            getvalue_call_result_248277 = invoke(stypy.reporting.localization.Localization(__file__, 1305, 22), getvalue_248275, *[], **kwargs_248276)
            
            # Processing the call keyword arguments (line 1305)
            # Getting the type of 'fh' (line 1305)
            fh_248278 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1305, 54), 'fh', False)
            keyword_248279 = fh_248278
            kwargs_248280 = {'file': keyword_248279}
            # Getting the type of 'print' (line 1305)
            print_248272 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1305, 16), 'print', False)
            # Calling print(args, kwargs) (line 1305)
            print_call_result_248281 = invoke(stypy.reporting.localization.Localization(__file__, 1305, 16), print_248272, *[getvalue_call_result_248277], **kwargs_248280)
            
            
            # Call to print(...): (line 1308)
            # Processing the call arguments (line 1308)
            unicode_248283 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1308, 22), 'unicode', u'end')
            # Processing the call keyword arguments (line 1308)
            # Getting the type of 'fh' (line 1308)
            fh_248284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1308, 34), 'fh', False)
            keyword_248285 = fh_248284
            kwargs_248286 = {'file': keyword_248285}
            # Getting the type of 'print' (line 1308)
            print_248282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1308, 16), 'print', False)
            # Calling print(args, kwargs) (line 1308)
            print_call_result_248287 = invoke(stypy.reporting.localization.Localization(__file__, 1308, 16), print_248282, *[unicode_248283], **kwargs_248286)
            
            
            # Call to print(...): (line 1309)
            # Processing the call arguments (line 1309)
            unicode_248289 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1309, 22), 'unicode', u'showpage')
            # Processing the call keyword arguments (line 1309)
            # Getting the type of 'fh' (line 1309)
            fh_248290 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1309, 39), 'fh', False)
            keyword_248291 = fh_248290
            kwargs_248292 = {'file': keyword_248291}
            # Getting the type of 'print' (line 1309)
            print_248288 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1309, 16), 'print', False)
            # Calling print(args, kwargs) (line 1309)
            print_call_result_248293 = invoke(stypy.reporting.localization.Localization(__file__, 1309, 16), print_248288, *[unicode_248289], **kwargs_248292)
            
            
            # Call to flush(...): (line 1310)
            # Processing the call keyword arguments (line 1310)
            kwargs_248296 = {}
            # Getting the type of 'fh' (line 1310)
            fh_248294 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1310, 16), 'fh', False)
            # Obtaining the member 'flush' of a type (line 1310)
            flush_248295 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1310, 16), fh_248294, 'flush')
            # Calling flush(args, kwargs) (line 1310)
            flush_call_result_248297 = invoke(stypy.reporting.localization.Localization(__file__, 1310, 16), flush_248295, *[], **kwargs_248296)
            
            # Calling the __exit__ method to finish a with section
            # Obtaining the member '__exit__' of a type (line 1269)
            exit___248298 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1269, 17), open_call_result_248105, '__exit__')
            with_exit_248299 = invoke(stypy.reporting.localization.Localization(__file__, 1269, 17), exit___248298, None, None, None)

        
        # Getting the type of 'isLandscape' (line 1312)
        isLandscape_248300 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1312, 15), 'isLandscape')
        # Testing the type of an if condition (line 1312)
        if_condition_248301 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1312, 12), isLandscape_248300)
        # Assigning a type to the variable 'if_condition_248301' (line 1312)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1312, 12), 'if_condition_248301', if_condition_248301)
        # SSA begins for if statement (line 1312)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Name to a Name (line 1313):
        
        # Assigning a Name to a Name (line 1313):
        # Getting the type of 'True' (line 1313)
        True_248302 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1313, 30), 'True')
        # Assigning a type to the variable 'isLandscape' (line 1313)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1313, 16), 'isLandscape', True_248302)
        
        # Assigning a Tuple to a Tuple (line 1314):
        
        # Assigning a Name to a Name (line 1314):
        # Getting the type of 'height' (line 1314)
        height_248303 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1314, 32), 'height')
        # Assigning a type to the variable 'tuple_assignment_243789' (line 1314)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1314, 16), 'tuple_assignment_243789', height_248303)
        
        # Assigning a Name to a Name (line 1314):
        # Getting the type of 'width' (line 1314)
        width_248304 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1314, 40), 'width')
        # Assigning a type to the variable 'tuple_assignment_243790' (line 1314)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1314, 16), 'tuple_assignment_243790', width_248304)
        
        # Assigning a Name to a Name (line 1314):
        # Getting the type of 'tuple_assignment_243789' (line 1314)
        tuple_assignment_243789_248305 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1314, 16), 'tuple_assignment_243789')
        # Assigning a type to the variable 'width' (line 1314)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1314, 16), 'width', tuple_assignment_243789_248305)
        
        # Assigning a Name to a Name (line 1314):
        # Getting the type of 'tuple_assignment_243790' (line 1314)
        tuple_assignment_243790_248306 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1314, 16), 'tuple_assignment_243790')
        # Assigning a type to the variable 'height' (line 1314)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1314, 23), 'height', tuple_assignment_243790_248306)
        
        # Assigning a Tuple to a Name (line 1315):
        
        # Assigning a Tuple to a Name (line 1315):
        
        # Obtaining an instance of the builtin type 'tuple' (line 1315)
        tuple_248307 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1315, 24), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1315)
        # Adding element type (line 1315)
        # Getting the type of 'lly' (line 1315)
        lly_248308 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1315, 24), 'lly')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1315, 24), tuple_248307, lly_248308)
        # Adding element type (line 1315)
        # Getting the type of 'llx' (line 1315)
        llx_248309 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1315, 29), 'llx')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1315, 24), tuple_248307, llx_248309)
        # Adding element type (line 1315)
        # Getting the type of 'ury' (line 1315)
        ury_248310 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1315, 34), 'ury')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1315, 24), tuple_248307, ury_248310)
        # Adding element type (line 1315)
        # Getting the type of 'urx' (line 1315)
        urx_248311 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1315, 39), 'urx')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1315, 24), tuple_248307, urx_248311)
        
        # Assigning a type to the variable 'bbox' (line 1315)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1315, 16), 'bbox', tuple_248307)
        # SSA join for if statement (line 1312)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'isEPSF' (line 1320)
        isEPSF_248312 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1320, 15), 'isEPSF')
        # Testing the type of an if condition (line 1320)
        if_condition_248313 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1320, 12), isEPSF_248312)
        # Assigning a type to the variable 'if_condition_248313' (line 1320)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1320, 12), 'if_condition_248313', if_condition_248313)
        # SSA begins for if statement (line 1320)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Tuple (line 1321):
        
        # Assigning a Call to a Name:
        
        # Call to get_size_inches(...): (line 1321)
        # Processing the call keyword arguments (line 1321)
        kwargs_248317 = {}
        # Getting the type of 'self' (line 1321)
        self_248314 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1321, 42), 'self', False)
        # Obtaining the member 'figure' of a type (line 1321)
        figure_248315 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1321, 42), self_248314, 'figure')
        # Obtaining the member 'get_size_inches' of a type (line 1321)
        get_size_inches_248316 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1321, 42), figure_248315, 'get_size_inches')
        # Calling get_size_inches(args, kwargs) (line 1321)
        get_size_inches_call_result_248318 = invoke(stypy.reporting.localization.Localization(__file__, 1321, 42), get_size_inches_248316, *[], **kwargs_248317)
        
        # Assigning a type to the variable 'call_assignment_243791' (line 1321)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1321, 16), 'call_assignment_243791', get_size_inches_call_result_248318)
        
        # Assigning a Call to a Name (line 1321):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_248321 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1321, 16), 'int')
        # Processing the call keyword arguments
        kwargs_248322 = {}
        # Getting the type of 'call_assignment_243791' (line 1321)
        call_assignment_243791_248319 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1321, 16), 'call_assignment_243791', False)
        # Obtaining the member '__getitem__' of a type (line 1321)
        getitem___248320 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1321, 16), call_assignment_243791_248319, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_248323 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___248320, *[int_248321], **kwargs_248322)
        
        # Assigning a type to the variable 'call_assignment_243792' (line 1321)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1321, 16), 'call_assignment_243792', getitem___call_result_248323)
        
        # Assigning a Name to a Name (line 1321):
        # Getting the type of 'call_assignment_243792' (line 1321)
        call_assignment_243792_248324 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1321, 16), 'call_assignment_243792')
        # Assigning a type to the variable 'paperWidth' (line 1321)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1321, 16), 'paperWidth', call_assignment_243792_248324)
        
        # Assigning a Call to a Name (line 1321):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_248327 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1321, 16), 'int')
        # Processing the call keyword arguments
        kwargs_248328 = {}
        # Getting the type of 'call_assignment_243791' (line 1321)
        call_assignment_243791_248325 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1321, 16), 'call_assignment_243791', False)
        # Obtaining the member '__getitem__' of a type (line 1321)
        getitem___248326 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1321, 16), call_assignment_243791_248325, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_248329 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___248326, *[int_248327], **kwargs_248328)
        
        # Assigning a type to the variable 'call_assignment_243793' (line 1321)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1321, 16), 'call_assignment_243793', getitem___call_result_248329)
        
        # Assigning a Name to a Name (line 1321):
        # Getting the type of 'call_assignment_243793' (line 1321)
        call_assignment_243793_248330 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1321, 16), 'call_assignment_243793')
        # Assigning a type to the variable 'paperHeight' (line 1321)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1321, 28), 'paperHeight', call_assignment_243793_248330)
        
        # Getting the type of 'isLandscape' (line 1322)
        isLandscape_248331 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1322, 19), 'isLandscape')
        # Testing the type of an if condition (line 1322)
        if_condition_248332 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1322, 16), isLandscape_248331)
        # Assigning a type to the variable 'if_condition_248332' (line 1322)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1322, 16), 'if_condition_248332', if_condition_248332)
        # SSA begins for if statement (line 1322)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Tuple to a Tuple (line 1323):
        
        # Assigning a Name to a Name (line 1323):
        # Getting the type of 'paperHeight' (line 1323)
        paperHeight_248333 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1323, 46), 'paperHeight')
        # Assigning a type to the variable 'tuple_assignment_243794' (line 1323)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1323, 20), 'tuple_assignment_243794', paperHeight_248333)
        
        # Assigning a Name to a Name (line 1323):
        # Getting the type of 'paperWidth' (line 1323)
        paperWidth_248334 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1323, 59), 'paperWidth')
        # Assigning a type to the variable 'tuple_assignment_243795' (line 1323)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1323, 20), 'tuple_assignment_243795', paperWidth_248334)
        
        # Assigning a Name to a Name (line 1323):
        # Getting the type of 'tuple_assignment_243794' (line 1323)
        tuple_assignment_243794_248335 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1323, 20), 'tuple_assignment_243794')
        # Assigning a type to the variable 'paperWidth' (line 1323)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1323, 20), 'paperWidth', tuple_assignment_243794_248335)
        
        # Assigning a Name to a Name (line 1323):
        # Getting the type of 'tuple_assignment_243795' (line 1323)
        tuple_assignment_243795_248336 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1323, 20), 'tuple_assignment_243795')
        # Assigning a type to the variable 'paperHeight' (line 1323)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1323, 32), 'paperHeight', tuple_assignment_243795_248336)
        # SSA join for if statement (line 1322)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA branch for the else part of an if statement (line 1320)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Call to a Name (line 1325):
        
        # Assigning a Call to a Name (line 1325):
        
        # Call to _get_papertype(...): (line 1325)
        # Processing the call arguments (line 1325)
        # Getting the type of 'width' (line 1325)
        width_248338 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1325, 48), 'width', False)
        # Getting the type of 'height' (line 1325)
        height_248339 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1325, 55), 'height', False)
        # Processing the call keyword arguments (line 1325)
        kwargs_248340 = {}
        # Getting the type of '_get_papertype' (line 1325)
        _get_papertype_248337 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1325, 33), '_get_papertype', False)
        # Calling _get_papertype(args, kwargs) (line 1325)
        _get_papertype_call_result_248341 = invoke(stypy.reporting.localization.Localization(__file__, 1325, 33), _get_papertype_248337, *[width_248338, height_248339], **kwargs_248340)
        
        # Assigning a type to the variable 'temp_papertype' (line 1325)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1325, 16), 'temp_papertype', _get_papertype_call_result_248341)
        
        
        # Getting the type of 'papertype' (line 1326)
        papertype_248342 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1326, 19), 'papertype')
        unicode_248343 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1326, 32), 'unicode', u'auto')
        # Applying the binary operator '==' (line 1326)
        result_eq_248344 = python_operator(stypy.reporting.localization.Localization(__file__, 1326, 19), '==', papertype_248342, unicode_248343)
        
        # Testing the type of an if condition (line 1326)
        if_condition_248345 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1326, 16), result_eq_248344)
        # Assigning a type to the variable 'if_condition_248345' (line 1326)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1326, 16), 'if_condition_248345', if_condition_248345)
        # SSA begins for if statement (line 1326)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Name to a Name (line 1327):
        
        # Assigning a Name to a Name (line 1327):
        # Getting the type of 'temp_papertype' (line 1327)
        temp_papertype_248346 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1327, 32), 'temp_papertype')
        # Assigning a type to the variable 'papertype' (line 1327)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1327, 20), 'papertype', temp_papertype_248346)
        
        # Assigning a Subscript to a Tuple (line 1328):
        
        # Assigning a Subscript to a Name (line 1328):
        
        # Obtaining the type of the subscript
        int_248347 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1328, 20), 'int')
        
        # Obtaining the type of the subscript
        # Getting the type of 'temp_papertype' (line 1328)
        temp_papertype_248348 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1328, 56), 'temp_papertype')
        # Getting the type of 'papersize' (line 1328)
        papersize_248349 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1328, 46), 'papersize')
        # Obtaining the member '__getitem__' of a type (line 1328)
        getitem___248350 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1328, 46), papersize_248349, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1328)
        subscript_call_result_248351 = invoke(stypy.reporting.localization.Localization(__file__, 1328, 46), getitem___248350, temp_papertype_248348)
        
        # Obtaining the member '__getitem__' of a type (line 1328)
        getitem___248352 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1328, 20), subscript_call_result_248351, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1328)
        subscript_call_result_248353 = invoke(stypy.reporting.localization.Localization(__file__, 1328, 20), getitem___248352, int_248347)
        
        # Assigning a type to the variable 'tuple_var_assignment_243796' (line 1328)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1328, 20), 'tuple_var_assignment_243796', subscript_call_result_248353)
        
        # Assigning a Subscript to a Name (line 1328):
        
        # Obtaining the type of the subscript
        int_248354 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1328, 20), 'int')
        
        # Obtaining the type of the subscript
        # Getting the type of 'temp_papertype' (line 1328)
        temp_papertype_248355 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1328, 56), 'temp_papertype')
        # Getting the type of 'papersize' (line 1328)
        papersize_248356 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1328, 46), 'papersize')
        # Obtaining the member '__getitem__' of a type (line 1328)
        getitem___248357 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1328, 46), papersize_248356, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1328)
        subscript_call_result_248358 = invoke(stypy.reporting.localization.Localization(__file__, 1328, 46), getitem___248357, temp_papertype_248355)
        
        # Obtaining the member '__getitem__' of a type (line 1328)
        getitem___248359 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1328, 20), subscript_call_result_248358, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1328)
        subscript_call_result_248360 = invoke(stypy.reporting.localization.Localization(__file__, 1328, 20), getitem___248359, int_248354)
        
        # Assigning a type to the variable 'tuple_var_assignment_243797' (line 1328)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1328, 20), 'tuple_var_assignment_243797', subscript_call_result_248360)
        
        # Assigning a Name to a Name (line 1328):
        # Getting the type of 'tuple_var_assignment_243796' (line 1328)
        tuple_var_assignment_243796_248361 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1328, 20), 'tuple_var_assignment_243796')
        # Assigning a type to the variable 'paperWidth' (line 1328)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1328, 20), 'paperWidth', tuple_var_assignment_243796_248361)
        
        # Assigning a Name to a Name (line 1328):
        # Getting the type of 'tuple_var_assignment_243797' (line 1328)
        tuple_var_assignment_243797_248362 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1328, 20), 'tuple_var_assignment_243797')
        # Assigning a type to the variable 'paperHeight' (line 1328)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1328, 32), 'paperHeight', tuple_var_assignment_243797_248362)
        # SSA branch for the else part of an if statement (line 1326)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Subscript to a Tuple (line 1330):
        
        # Assigning a Subscript to a Name (line 1330):
        
        # Obtaining the type of the subscript
        int_248363 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1330, 20), 'int')
        
        # Obtaining the type of the subscript
        # Getting the type of 'papertype' (line 1330)
        papertype_248364 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1330, 56), 'papertype')
        # Getting the type of 'papersize' (line 1330)
        papersize_248365 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1330, 46), 'papersize')
        # Obtaining the member '__getitem__' of a type (line 1330)
        getitem___248366 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1330, 46), papersize_248365, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1330)
        subscript_call_result_248367 = invoke(stypy.reporting.localization.Localization(__file__, 1330, 46), getitem___248366, papertype_248364)
        
        # Obtaining the member '__getitem__' of a type (line 1330)
        getitem___248368 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1330, 20), subscript_call_result_248367, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1330)
        subscript_call_result_248369 = invoke(stypy.reporting.localization.Localization(__file__, 1330, 20), getitem___248368, int_248363)
        
        # Assigning a type to the variable 'tuple_var_assignment_243798' (line 1330)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1330, 20), 'tuple_var_assignment_243798', subscript_call_result_248369)
        
        # Assigning a Subscript to a Name (line 1330):
        
        # Obtaining the type of the subscript
        int_248370 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1330, 20), 'int')
        
        # Obtaining the type of the subscript
        # Getting the type of 'papertype' (line 1330)
        papertype_248371 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1330, 56), 'papertype')
        # Getting the type of 'papersize' (line 1330)
        papersize_248372 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1330, 46), 'papersize')
        # Obtaining the member '__getitem__' of a type (line 1330)
        getitem___248373 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1330, 46), papersize_248372, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1330)
        subscript_call_result_248374 = invoke(stypy.reporting.localization.Localization(__file__, 1330, 46), getitem___248373, papertype_248371)
        
        # Obtaining the member '__getitem__' of a type (line 1330)
        getitem___248375 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1330, 20), subscript_call_result_248374, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1330)
        subscript_call_result_248376 = invoke(stypy.reporting.localization.Localization(__file__, 1330, 20), getitem___248375, int_248370)
        
        # Assigning a type to the variable 'tuple_var_assignment_243799' (line 1330)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1330, 20), 'tuple_var_assignment_243799', subscript_call_result_248376)
        
        # Assigning a Name to a Name (line 1330):
        # Getting the type of 'tuple_var_assignment_243798' (line 1330)
        tuple_var_assignment_243798_248377 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1330, 20), 'tuple_var_assignment_243798')
        # Assigning a type to the variable 'paperWidth' (line 1330)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1330, 20), 'paperWidth', tuple_var_assignment_243798_248377)
        
        # Assigning a Name to a Name (line 1330):
        # Getting the type of 'tuple_var_assignment_243799' (line 1330)
        tuple_var_assignment_243799_248378 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1330, 20), 'tuple_var_assignment_243799')
        # Assigning a type to the variable 'paperHeight' (line 1330)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1330, 32), 'paperHeight', tuple_var_assignment_243799_248378)
        
        
        # Evaluating a boolean operation
        
        # Evaluating a boolean operation
        
        # Getting the type of 'width' (line 1331)
        width_248379 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1331, 24), 'width')
        # Getting the type of 'paperWidth' (line 1331)
        paperWidth_248380 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1331, 32), 'paperWidth')
        # Applying the binary operator '>' (line 1331)
        result_gt_248381 = python_operator(stypy.reporting.localization.Localization(__file__, 1331, 24), '>', width_248379, paperWidth_248380)
        
        
        # Getting the type of 'height' (line 1331)
        height_248382 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1331, 46), 'height')
        # Getting the type of 'paperHeight' (line 1331)
        paperHeight_248383 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1331, 55), 'paperHeight')
        # Applying the binary operator '>' (line 1331)
        result_gt_248384 = python_operator(stypy.reporting.localization.Localization(__file__, 1331, 46), '>', height_248382, paperHeight_248383)
        
        # Applying the binary operator 'or' (line 1331)
        result_or_keyword_248385 = python_operator(stypy.reporting.localization.Localization(__file__, 1331, 24), 'or', result_gt_248381, result_gt_248384)
        
        # Getting the type of 'isEPSF' (line 1331)
        isEPSF_248386 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1331, 72), 'isEPSF')
        # Applying the binary operator 'and' (line 1331)
        result_and_keyword_248387 = python_operator(stypy.reporting.localization.Localization(__file__, 1331, 23), 'and', result_or_keyword_248385, isEPSF_248386)
        
        # Testing the type of an if condition (line 1331)
        if_condition_248388 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1331, 20), result_and_keyword_248387)
        # Assigning a type to the variable 'if_condition_248388' (line 1331)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1331, 20), 'if_condition_248388', if_condition_248388)
        # SSA begins for if statement (line 1331)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Subscript to a Tuple (line 1332):
        
        # Assigning a Subscript to a Name (line 1332):
        
        # Obtaining the type of the subscript
        int_248389 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1332, 24), 'int')
        
        # Obtaining the type of the subscript
        # Getting the type of 'temp_papertype' (line 1332)
        temp_papertype_248390 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1332, 60), 'temp_papertype')
        # Getting the type of 'papersize' (line 1332)
        papersize_248391 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1332, 50), 'papersize')
        # Obtaining the member '__getitem__' of a type (line 1332)
        getitem___248392 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1332, 50), papersize_248391, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1332)
        subscript_call_result_248393 = invoke(stypy.reporting.localization.Localization(__file__, 1332, 50), getitem___248392, temp_papertype_248390)
        
        # Obtaining the member '__getitem__' of a type (line 1332)
        getitem___248394 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1332, 24), subscript_call_result_248393, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1332)
        subscript_call_result_248395 = invoke(stypy.reporting.localization.Localization(__file__, 1332, 24), getitem___248394, int_248389)
        
        # Assigning a type to the variable 'tuple_var_assignment_243800' (line 1332)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1332, 24), 'tuple_var_assignment_243800', subscript_call_result_248395)
        
        # Assigning a Subscript to a Name (line 1332):
        
        # Obtaining the type of the subscript
        int_248396 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1332, 24), 'int')
        
        # Obtaining the type of the subscript
        # Getting the type of 'temp_papertype' (line 1332)
        temp_papertype_248397 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1332, 60), 'temp_papertype')
        # Getting the type of 'papersize' (line 1332)
        papersize_248398 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1332, 50), 'papersize')
        # Obtaining the member '__getitem__' of a type (line 1332)
        getitem___248399 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1332, 50), papersize_248398, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1332)
        subscript_call_result_248400 = invoke(stypy.reporting.localization.Localization(__file__, 1332, 50), getitem___248399, temp_papertype_248397)
        
        # Obtaining the member '__getitem__' of a type (line 1332)
        getitem___248401 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1332, 24), subscript_call_result_248400, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1332)
        subscript_call_result_248402 = invoke(stypy.reporting.localization.Localization(__file__, 1332, 24), getitem___248401, int_248396)
        
        # Assigning a type to the variable 'tuple_var_assignment_243801' (line 1332)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1332, 24), 'tuple_var_assignment_243801', subscript_call_result_248402)
        
        # Assigning a Name to a Name (line 1332):
        # Getting the type of 'tuple_var_assignment_243800' (line 1332)
        tuple_var_assignment_243800_248403 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1332, 24), 'tuple_var_assignment_243800')
        # Assigning a type to the variable 'paperWidth' (line 1332)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1332, 24), 'paperWidth', tuple_var_assignment_243800_248403)
        
        # Assigning a Name to a Name (line 1332):
        # Getting the type of 'tuple_var_assignment_243801' (line 1332)
        tuple_var_assignment_243801_248404 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1332, 24), 'tuple_var_assignment_243801')
        # Assigning a type to the variable 'paperHeight' (line 1332)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1332, 36), 'paperHeight', tuple_var_assignment_243801_248404)
        
        # Call to report(...): (line 1333)
        # Processing the call arguments (line 1333)
        unicode_248407 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1334, 29), 'unicode', u'Your figure is too big to fit on %s paper. %s paper will be used to prevent clipping.')
        
        # Obtaining an instance of the builtin type 'tuple' (line 1336)
        tuple_248408 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1336, 34), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1336)
        # Adding element type (line 1336)
        # Getting the type of 'papertype' (line 1336)
        papertype_248409 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1336, 34), 'papertype', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1336, 34), tuple_248408, papertype_248409)
        # Adding element type (line 1336)
        # Getting the type of 'temp_papertype' (line 1336)
        temp_papertype_248410 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1336, 45), 'temp_papertype', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1336, 34), tuple_248408, temp_papertype_248410)
        
        # Applying the binary operator '%' (line 1334)
        result_mod_248411 = python_operator(stypy.reporting.localization.Localization(__file__, 1334, 28), '%', unicode_248407, tuple_248408)
        
        unicode_248412 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1336, 62), 'unicode', u'helpful')
        # Processing the call keyword arguments (line 1333)
        kwargs_248413 = {}
        # Getting the type of 'verbose' (line 1333)
        verbose_248405 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1333, 24), 'verbose', False)
        # Obtaining the member 'report' of a type (line 1333)
        report_248406 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1333, 24), verbose_248405, 'report')
        # Calling report(args, kwargs) (line 1333)
        report_call_result_248414 = invoke(stypy.reporting.localization.Localization(__file__, 1333, 24), report_248406, *[result_mod_248411, unicode_248412], **kwargs_248413)
        
        # SSA join for if statement (line 1331)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 1326)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 1320)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 1338):
        
        # Assigning a Call to a Name (line 1338):
        
        # Call to get_texmanager(...): (line 1338)
        # Processing the call keyword arguments (line 1338)
        kwargs_248417 = {}
        # Getting the type of 'ps_renderer' (line 1338)
        ps_renderer_248415 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1338, 25), 'ps_renderer', False)
        # Obtaining the member 'get_texmanager' of a type (line 1338)
        get_texmanager_248416 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1338, 25), ps_renderer_248415, 'get_texmanager')
        # Calling get_texmanager(args, kwargs) (line 1338)
        get_texmanager_call_result_248418 = invoke(stypy.reporting.localization.Localization(__file__, 1338, 25), get_texmanager_248416, *[], **kwargs_248417)
        
        # Assigning a type to the variable 'texmanager' (line 1338)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1338, 12), 'texmanager', get_texmanager_call_result_248418)
        
        # Assigning a Call to a Name (line 1339):
        
        # Assigning a Call to a Name (line 1339):
        
        # Call to get_font_preamble(...): (line 1339)
        # Processing the call keyword arguments (line 1339)
        kwargs_248421 = {}
        # Getting the type of 'texmanager' (line 1339)
        texmanager_248419 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1339, 28), 'texmanager', False)
        # Obtaining the member 'get_font_preamble' of a type (line 1339)
        get_font_preamble_248420 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1339, 28), texmanager_248419, 'get_font_preamble')
        # Calling get_font_preamble(args, kwargs) (line 1339)
        get_font_preamble_call_result_248422 = invoke(stypy.reporting.localization.Localization(__file__, 1339, 28), get_font_preamble_248420, *[], **kwargs_248421)
        
        # Assigning a type to the variable 'font_preamble' (line 1339)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1339, 12), 'font_preamble', get_font_preamble_call_result_248422)
        
        # Assigning a Call to a Name (line 1340):
        
        # Assigning a Call to a Name (line 1340):
        
        # Call to get_custom_preamble(...): (line 1340)
        # Processing the call keyword arguments (line 1340)
        kwargs_248425 = {}
        # Getting the type of 'texmanager' (line 1340)
        texmanager_248423 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1340, 30), 'texmanager', False)
        # Obtaining the member 'get_custom_preamble' of a type (line 1340)
        get_custom_preamble_248424 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1340, 30), texmanager_248423, 'get_custom_preamble')
        # Calling get_custom_preamble(args, kwargs) (line 1340)
        get_custom_preamble_call_result_248426 = invoke(stypy.reporting.localization.Localization(__file__, 1340, 30), get_custom_preamble_248424, *[], **kwargs_248425)
        
        # Assigning a type to the variable 'custom_preamble' (line 1340)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1340, 12), 'custom_preamble', get_custom_preamble_call_result_248426)
        
        # Assigning a Call to a Name (line 1342):
        
        # Assigning a Call to a Name (line 1342):
        
        # Call to convert_psfrags(...): (line 1342)
        # Processing the call arguments (line 1342)
        # Getting the type of 'tmpfile' (line 1342)
        tmpfile_248428 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1342, 45), 'tmpfile', False)
        # Getting the type of 'ps_renderer' (line 1342)
        ps_renderer_248429 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1342, 54), 'ps_renderer', False)
        # Obtaining the member 'psfrag' of a type (line 1342)
        psfrag_248430 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1342, 54), ps_renderer_248429, 'psfrag')
        # Getting the type of 'font_preamble' (line 1343)
        font_preamble_248431 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1343, 45), 'font_preamble', False)
        # Getting the type of 'custom_preamble' (line 1344)
        custom_preamble_248432 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1344, 45), 'custom_preamble', False)
        # Getting the type of 'paperWidth' (line 1344)
        paperWidth_248433 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1344, 62), 'paperWidth', False)
        # Getting the type of 'paperHeight' (line 1345)
        paperHeight_248434 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1345, 45), 'paperHeight', False)
        # Getting the type of 'orientation' (line 1346)
        orientation_248435 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1346, 45), 'orientation', False)
        # Processing the call keyword arguments (line 1342)
        kwargs_248436 = {}
        # Getting the type of 'convert_psfrags' (line 1342)
        convert_psfrags_248427 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1342, 29), 'convert_psfrags', False)
        # Calling convert_psfrags(args, kwargs) (line 1342)
        convert_psfrags_call_result_248437 = invoke(stypy.reporting.localization.Localization(__file__, 1342, 29), convert_psfrags_248427, *[tmpfile_248428, psfrag_248430, font_preamble_248431, custom_preamble_248432, paperWidth_248433, paperHeight_248434, orientation_248435], **kwargs_248436)
        
        # Assigning a type to the variable 'psfrag_rotated' (line 1342)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1342, 12), 'psfrag_rotated', convert_psfrags_call_result_248437)
        
        
        
        # Obtaining the type of the subscript
        unicode_248438 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1348, 24), 'unicode', u'ps.usedistiller')
        # Getting the type of 'rcParams' (line 1348)
        rcParams_248439 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1348, 15), 'rcParams')
        # Obtaining the member '__getitem__' of a type (line 1348)
        getitem___248440 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1348, 15), rcParams_248439, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1348)
        subscript_call_result_248441 = invoke(stypy.reporting.localization.Localization(__file__, 1348, 15), getitem___248440, unicode_248438)
        
        unicode_248442 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1348, 46), 'unicode', u'ghostscript')
        # Applying the binary operator '==' (line 1348)
        result_eq_248443 = python_operator(stypy.reporting.localization.Localization(__file__, 1348, 15), '==', subscript_call_result_248441, unicode_248442)
        
        # Testing the type of an if condition (line 1348)
        if_condition_248444 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1348, 12), result_eq_248443)
        # Assigning a type to the variable 'if_condition_248444' (line 1348)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1348, 12), 'if_condition_248444', if_condition_248444)
        # SSA begins for if statement (line 1348)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to gs_distill(...): (line 1349)
        # Processing the call arguments (line 1349)
        # Getting the type of 'tmpfile' (line 1349)
        tmpfile_248446 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1349, 27), 'tmpfile', False)
        # Getting the type of 'isEPSF' (line 1349)
        isEPSF_248447 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1349, 36), 'isEPSF', False)
        # Processing the call keyword arguments (line 1349)
        # Getting the type of 'papertype' (line 1349)
        papertype_248448 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1349, 50), 'papertype', False)
        keyword_248449 = papertype_248448
        # Getting the type of 'bbox' (line 1349)
        bbox_248450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1349, 66), 'bbox', False)
        keyword_248451 = bbox_248450
        # Getting the type of 'psfrag_rotated' (line 1350)
        psfrag_rotated_248452 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1350, 35), 'psfrag_rotated', False)
        keyword_248453 = psfrag_rotated_248452
        kwargs_248454 = {'rotated': keyword_248453, 'ptype': keyword_248449, 'bbox': keyword_248451}
        # Getting the type of 'gs_distill' (line 1349)
        gs_distill_248445 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1349, 16), 'gs_distill', False)
        # Calling gs_distill(args, kwargs) (line 1349)
        gs_distill_call_result_248455 = invoke(stypy.reporting.localization.Localization(__file__, 1349, 16), gs_distill_248445, *[tmpfile_248446, isEPSF_248447], **kwargs_248454)
        
        # SSA branch for the else part of an if statement (line 1348)
        module_type_store.open_ssa_branch('else')
        
        
        
        # Obtaining the type of the subscript
        unicode_248456 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1351, 26), 'unicode', u'ps.usedistiller')
        # Getting the type of 'rcParams' (line 1351)
        rcParams_248457 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1351, 17), 'rcParams')
        # Obtaining the member '__getitem__' of a type (line 1351)
        getitem___248458 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1351, 17), rcParams_248457, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1351)
        subscript_call_result_248459 = invoke(stypy.reporting.localization.Localization(__file__, 1351, 17), getitem___248458, unicode_248456)
        
        unicode_248460 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1351, 48), 'unicode', u'xpdf')
        # Applying the binary operator '==' (line 1351)
        result_eq_248461 = python_operator(stypy.reporting.localization.Localization(__file__, 1351, 17), '==', subscript_call_result_248459, unicode_248460)
        
        # Testing the type of an if condition (line 1351)
        if_condition_248462 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1351, 17), result_eq_248461)
        # Assigning a type to the variable 'if_condition_248462' (line 1351)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1351, 17), 'if_condition_248462', if_condition_248462)
        # SSA begins for if statement (line 1351)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to xpdf_distill(...): (line 1352)
        # Processing the call arguments (line 1352)
        # Getting the type of 'tmpfile' (line 1352)
        tmpfile_248464 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1352, 29), 'tmpfile', False)
        # Getting the type of 'isEPSF' (line 1352)
        isEPSF_248465 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1352, 38), 'isEPSF', False)
        # Processing the call keyword arguments (line 1352)
        # Getting the type of 'papertype' (line 1352)
        papertype_248466 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1352, 52), 'papertype', False)
        keyword_248467 = papertype_248466
        # Getting the type of 'bbox' (line 1352)
        bbox_248468 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1352, 68), 'bbox', False)
        keyword_248469 = bbox_248468
        # Getting the type of 'psfrag_rotated' (line 1353)
        psfrag_rotated_248470 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1353, 37), 'psfrag_rotated', False)
        keyword_248471 = psfrag_rotated_248470
        kwargs_248472 = {'rotated': keyword_248471, 'ptype': keyword_248467, 'bbox': keyword_248469}
        # Getting the type of 'xpdf_distill' (line 1352)
        xpdf_distill_248463 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1352, 16), 'xpdf_distill', False)
        # Calling xpdf_distill(args, kwargs) (line 1352)
        xpdf_distill_call_result_248473 = invoke(stypy.reporting.localization.Localization(__file__, 1352, 16), xpdf_distill_248463, *[tmpfile_248464, isEPSF_248465], **kwargs_248472)
        
        # SSA branch for the else part of an if statement (line 1351)
        module_type_store.open_ssa_branch('else')
        
        
        # Obtaining the type of the subscript
        unicode_248474 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1354, 26), 'unicode', u'text.usetex')
        # Getting the type of 'rcParams' (line 1354)
        rcParams_248475 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1354, 17), 'rcParams')
        # Obtaining the member '__getitem__' of a type (line 1354)
        getitem___248476 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1354, 17), rcParams_248475, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1354)
        subscript_call_result_248477 = invoke(stypy.reporting.localization.Localization(__file__, 1354, 17), getitem___248476, unicode_248474)
        
        # Testing the type of an if condition (line 1354)
        if_condition_248478 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1354, 17), subscript_call_result_248477)
        # Assigning a type to the variable 'if_condition_248478' (line 1354)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1354, 17), 'if_condition_248478', if_condition_248478)
        # SSA begins for if statement (line 1354)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'False' (line 1355)
        False_248479 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1355, 19), 'False')
        # Testing the type of an if condition (line 1355)
        if_condition_248480 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1355, 16), False_248479)
        # Assigning a type to the variable 'if_condition_248480' (line 1355)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1355, 16), 'if_condition_248480', if_condition_248480)
        # SSA begins for if statement (line 1355)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        pass
        # SSA branch for the else part of an if statement (line 1355)
        module_type_store.open_ssa_branch('else')
        
        # Call to gs_distill(...): (line 1358)
        # Processing the call arguments (line 1358)
        # Getting the type of 'tmpfile' (line 1358)
        tmpfile_248482 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1358, 31), 'tmpfile', False)
        # Getting the type of 'isEPSF' (line 1358)
        isEPSF_248483 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1358, 40), 'isEPSF', False)
        # Processing the call keyword arguments (line 1358)
        # Getting the type of 'papertype' (line 1358)
        papertype_248484 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1358, 54), 'papertype', False)
        keyword_248485 = papertype_248484
        # Getting the type of 'bbox' (line 1358)
        bbox_248486 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1358, 70), 'bbox', False)
        keyword_248487 = bbox_248486
        # Getting the type of 'psfrag_rotated' (line 1359)
        psfrag_rotated_248488 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1359, 39), 'psfrag_rotated', False)
        keyword_248489 = psfrag_rotated_248488
        kwargs_248490 = {'rotated': keyword_248489, 'ptype': keyword_248485, 'bbox': keyword_248487}
        # Getting the type of 'gs_distill' (line 1358)
        gs_distill_248481 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1358, 20), 'gs_distill', False)
        # Calling gs_distill(args, kwargs) (line 1358)
        gs_distill_call_result_248491 = invoke(stypy.reporting.localization.Localization(__file__, 1358, 20), gs_distill_248481, *[tmpfile_248482, isEPSF_248483], **kwargs_248490)
        
        # SSA join for if statement (line 1355)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 1354)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 1351)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 1348)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Call to is_writable_file_like(...): (line 1361)
        # Processing the call arguments (line 1361)
        # Getting the type of 'outfile' (line 1361)
        outfile_248493 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1361, 37), 'outfile', False)
        # Processing the call keyword arguments (line 1361)
        kwargs_248494 = {}
        # Getting the type of 'is_writable_file_like' (line 1361)
        is_writable_file_like_248492 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1361, 15), 'is_writable_file_like', False)
        # Calling is_writable_file_like(args, kwargs) (line 1361)
        is_writable_file_like_call_result_248495 = invoke(stypy.reporting.localization.Localization(__file__, 1361, 15), is_writable_file_like_248492, *[outfile_248493], **kwargs_248494)
        
        # Testing the type of an if condition (line 1361)
        if_condition_248496 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1361, 12), is_writable_file_like_call_result_248495)
        # Assigning a type to the variable 'if_condition_248496' (line 1361)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1361, 12), 'if_condition_248496', if_condition_248496)
        # SSA begins for if statement (line 1361)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        
        # Call to file_requires_unicode(...): (line 1362)
        # Processing the call arguments (line 1362)
        # Getting the type of 'outfile' (line 1362)
        outfile_248498 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1362, 41), 'outfile', False)
        # Processing the call keyword arguments (line 1362)
        kwargs_248499 = {}
        # Getting the type of 'file_requires_unicode' (line 1362)
        file_requires_unicode_248497 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1362, 19), 'file_requires_unicode', False)
        # Calling file_requires_unicode(args, kwargs) (line 1362)
        file_requires_unicode_call_result_248500 = invoke(stypy.reporting.localization.Localization(__file__, 1362, 19), file_requires_unicode_248497, *[outfile_248498], **kwargs_248499)
        
        # Testing the type of an if condition (line 1362)
        if_condition_248501 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1362, 16), file_requires_unicode_call_result_248500)
        # Assigning a type to the variable 'if_condition_248501' (line 1362)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1362, 16), 'if_condition_248501', if_condition_248501)
        # SSA begins for if statement (line 1362)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to open(...): (line 1363)
        # Processing the call arguments (line 1363)
        # Getting the type of 'tmpfile' (line 1363)
        tmpfile_248504 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1363, 33), 'tmpfile', False)
        unicode_248505 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1363, 42), 'unicode', u'rb')
        # Processing the call keyword arguments (line 1363)
        kwargs_248506 = {}
        # Getting the type of 'io' (line 1363)
        io_248502 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1363, 25), 'io', False)
        # Obtaining the member 'open' of a type (line 1363)
        open_248503 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1363, 25), io_248502, 'open')
        # Calling open(args, kwargs) (line 1363)
        open_call_result_248507 = invoke(stypy.reporting.localization.Localization(__file__, 1363, 25), open_248503, *[tmpfile_248504, unicode_248505], **kwargs_248506)
        
        with_248508 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 1363, 25), open_call_result_248507, 'with parameter', '__enter__', '__exit__')

        if with_248508:
            # Calling the __enter__ method to initiate a with section
            # Obtaining the member '__enter__' of a type (line 1363)
            enter___248509 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1363, 25), open_call_result_248507, '__enter__')
            with_enter_248510 = invoke(stypy.reporting.localization.Localization(__file__, 1363, 25), enter___248509)
            # Assigning a type to the variable 'fh' (line 1363)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1363, 25), 'fh', with_enter_248510)
            
            # Call to write(...): (line 1364)
            # Processing the call arguments (line 1364)
            
            # Call to decode(...): (line 1364)
            # Processing the call arguments (line 1364)
            unicode_248518 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1364, 55), 'unicode', u'latin-1')
            # Processing the call keyword arguments (line 1364)
            kwargs_248519 = {}
            
            # Call to read(...): (line 1364)
            # Processing the call keyword arguments (line 1364)
            kwargs_248515 = {}
            # Getting the type of 'fh' (line 1364)
            fh_248513 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1364, 38), 'fh', False)
            # Obtaining the member 'read' of a type (line 1364)
            read_248514 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1364, 38), fh_248513, 'read')
            # Calling read(args, kwargs) (line 1364)
            read_call_result_248516 = invoke(stypy.reporting.localization.Localization(__file__, 1364, 38), read_248514, *[], **kwargs_248515)
            
            # Obtaining the member 'decode' of a type (line 1364)
            decode_248517 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1364, 38), read_call_result_248516, 'decode')
            # Calling decode(args, kwargs) (line 1364)
            decode_call_result_248520 = invoke(stypy.reporting.localization.Localization(__file__, 1364, 38), decode_248517, *[unicode_248518], **kwargs_248519)
            
            # Processing the call keyword arguments (line 1364)
            kwargs_248521 = {}
            # Getting the type of 'outfile' (line 1364)
            outfile_248511 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1364, 24), 'outfile', False)
            # Obtaining the member 'write' of a type (line 1364)
            write_248512 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1364, 24), outfile_248511, 'write')
            # Calling write(args, kwargs) (line 1364)
            write_call_result_248522 = invoke(stypy.reporting.localization.Localization(__file__, 1364, 24), write_248512, *[decode_call_result_248520], **kwargs_248521)
            
            # Calling the __exit__ method to finish a with section
            # Obtaining the member '__exit__' of a type (line 1363)
            exit___248523 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1363, 25), open_call_result_248507, '__exit__')
            with_exit_248524 = invoke(stypy.reporting.localization.Localization(__file__, 1363, 25), exit___248523, None, None, None)

        # SSA branch for the else part of an if statement (line 1362)
        module_type_store.open_ssa_branch('else')
        
        # Call to open(...): (line 1366)
        # Processing the call arguments (line 1366)
        # Getting the type of 'tmpfile' (line 1366)
        tmpfile_248527 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1366, 33), 'tmpfile', False)
        unicode_248528 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1366, 42), 'unicode', u'rb')
        # Processing the call keyword arguments (line 1366)
        kwargs_248529 = {}
        # Getting the type of 'io' (line 1366)
        io_248525 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1366, 25), 'io', False)
        # Obtaining the member 'open' of a type (line 1366)
        open_248526 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1366, 25), io_248525, 'open')
        # Calling open(args, kwargs) (line 1366)
        open_call_result_248530 = invoke(stypy.reporting.localization.Localization(__file__, 1366, 25), open_248526, *[tmpfile_248527, unicode_248528], **kwargs_248529)
        
        with_248531 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 1366, 25), open_call_result_248530, 'with parameter', '__enter__', '__exit__')

        if with_248531:
            # Calling the __enter__ method to initiate a with section
            # Obtaining the member '__enter__' of a type (line 1366)
            enter___248532 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1366, 25), open_call_result_248530, '__enter__')
            with_enter_248533 = invoke(stypy.reporting.localization.Localization(__file__, 1366, 25), enter___248532)
            # Assigning a type to the variable 'fh' (line 1366)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1366, 25), 'fh', with_enter_248533)
            
            # Call to write(...): (line 1367)
            # Processing the call arguments (line 1367)
            
            # Call to read(...): (line 1367)
            # Processing the call keyword arguments (line 1367)
            kwargs_248538 = {}
            # Getting the type of 'fh' (line 1367)
            fh_248536 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1367, 38), 'fh', False)
            # Obtaining the member 'read' of a type (line 1367)
            read_248537 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1367, 38), fh_248536, 'read')
            # Calling read(args, kwargs) (line 1367)
            read_call_result_248539 = invoke(stypy.reporting.localization.Localization(__file__, 1367, 38), read_248537, *[], **kwargs_248538)
            
            # Processing the call keyword arguments (line 1367)
            kwargs_248540 = {}
            # Getting the type of 'outfile' (line 1367)
            outfile_248534 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1367, 24), 'outfile', False)
            # Obtaining the member 'write' of a type (line 1367)
            write_248535 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1367, 24), outfile_248534, 'write')
            # Calling write(args, kwargs) (line 1367)
            write_call_result_248541 = invoke(stypy.reporting.localization.Localization(__file__, 1367, 24), write_248535, *[read_call_result_248539], **kwargs_248540)
            
            # Calling the __exit__ method to finish a with section
            # Obtaining the member '__exit__' of a type (line 1366)
            exit___248542 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1366, 25), open_call_result_248530, '__exit__')
            with_exit_248543 = invoke(stypy.reporting.localization.Localization(__file__, 1366, 25), exit___248542, None, None, None)

        # SSA join for if statement (line 1362)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA branch for the else part of an if statement (line 1361)
        module_type_store.open_ssa_branch('else')
        
        # Call to open(...): (line 1369)
        # Processing the call arguments (line 1369)
        # Getting the type of 'outfile' (line 1369)
        outfile_248546 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1369, 29), 'outfile', False)
        unicode_248547 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1369, 38), 'unicode', u'wb')
        # Processing the call keyword arguments (line 1369)
        kwargs_248548 = {}
        # Getting the type of 'io' (line 1369)
        io_248544 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1369, 21), 'io', False)
        # Obtaining the member 'open' of a type (line 1369)
        open_248545 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1369, 21), io_248544, 'open')
        # Calling open(args, kwargs) (line 1369)
        open_call_result_248549 = invoke(stypy.reporting.localization.Localization(__file__, 1369, 21), open_248545, *[outfile_248546, unicode_248547], **kwargs_248548)
        
        with_248550 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 1369, 21), open_call_result_248549, 'with parameter', '__enter__', '__exit__')

        if with_248550:
            # Calling the __enter__ method to initiate a with section
            # Obtaining the member '__enter__' of a type (line 1369)
            enter___248551 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1369, 21), open_call_result_248549, '__enter__')
            with_enter_248552 = invoke(stypy.reporting.localization.Localization(__file__, 1369, 21), enter___248551)
            # Assigning a type to the variable 'fh' (line 1369)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1369, 21), 'fh', with_enter_248552)
            pass
            # Calling the __exit__ method to finish a with section
            # Obtaining the member '__exit__' of a type (line 1369)
            exit___248553 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1369, 21), open_call_result_248549, '__exit__')
            with_exit_248554 = invoke(stypy.reporting.localization.Localization(__file__, 1369, 21), exit___248553, None, None, None)

        
        # Assigning a Attribute to a Name (line 1371):
        
        # Assigning a Attribute to a Name (line 1371):
        
        # Call to stat(...): (line 1371)
        # Processing the call arguments (line 1371)
        # Getting the type of 'outfile' (line 1371)
        outfile_248557 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1371, 31), 'outfile', False)
        # Processing the call keyword arguments (line 1371)
        kwargs_248558 = {}
        # Getting the type of 'os' (line 1371)
        os_248555 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1371, 23), 'os', False)
        # Obtaining the member 'stat' of a type (line 1371)
        stat_248556 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1371, 23), os_248555, 'stat')
        # Calling stat(args, kwargs) (line 1371)
        stat_call_result_248559 = invoke(stypy.reporting.localization.Localization(__file__, 1371, 23), stat_248556, *[outfile_248557], **kwargs_248558)
        
        # Obtaining the member 'st_mode' of a type (line 1371)
        st_mode_248560 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1371, 23), stat_call_result_248559, 'st_mode')
        # Assigning a type to the variable 'mode' (line 1371)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1371, 16), 'mode', st_mode_248560)
        
        # Call to move(...): (line 1372)
        # Processing the call arguments (line 1372)
        # Getting the type of 'tmpfile' (line 1372)
        tmpfile_248563 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1372, 28), 'tmpfile', False)
        # Getting the type of 'outfile' (line 1372)
        outfile_248564 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1372, 37), 'outfile', False)
        # Processing the call keyword arguments (line 1372)
        kwargs_248565 = {}
        # Getting the type of 'shutil' (line 1372)
        shutil_248561 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1372, 16), 'shutil', False)
        # Obtaining the member 'move' of a type (line 1372)
        move_248562 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1372, 16), shutil_248561, 'move')
        # Calling move(args, kwargs) (line 1372)
        move_call_result_248566 = invoke(stypy.reporting.localization.Localization(__file__, 1372, 16), move_248562, *[tmpfile_248563, outfile_248564], **kwargs_248565)
        
        
        # Call to chmod(...): (line 1373)
        # Processing the call arguments (line 1373)
        # Getting the type of 'outfile' (line 1373)
        outfile_248569 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1373, 25), 'outfile', False)
        # Getting the type of 'mode' (line 1373)
        mode_248570 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1373, 34), 'mode', False)
        # Processing the call keyword arguments (line 1373)
        kwargs_248571 = {}
        # Getting the type of 'os' (line 1373)
        os_248567 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1373, 16), 'os', False)
        # Obtaining the member 'chmod' of a type (line 1373)
        chmod_248568 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1373, 16), os_248567, 'chmod')
        # Calling chmod(args, kwargs) (line 1373)
        chmod_call_result_248572 = invoke(stypy.reporting.localization.Localization(__file__, 1373, 16), chmod_248568, *[outfile_248569, mode_248570], **kwargs_248571)
        
        # SSA join for if statement (line 1361)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # finally branch of the try-finally block (line 1268)
        
        
        # Call to isfile(...): (line 1375)
        # Processing the call arguments (line 1375)
        # Getting the type of 'tmpfile' (line 1375)
        tmpfile_248576 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1375, 30), 'tmpfile', False)
        # Processing the call keyword arguments (line 1375)
        kwargs_248577 = {}
        # Getting the type of 'os' (line 1375)
        os_248573 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1375, 15), 'os', False)
        # Obtaining the member 'path' of a type (line 1375)
        path_248574 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1375, 15), os_248573, 'path')
        # Obtaining the member 'isfile' of a type (line 1375)
        isfile_248575 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1375, 15), path_248574, 'isfile')
        # Calling isfile(args, kwargs) (line 1375)
        isfile_call_result_248578 = invoke(stypy.reporting.localization.Localization(__file__, 1375, 15), isfile_248575, *[tmpfile_248576], **kwargs_248577)
        
        # Testing the type of an if condition (line 1375)
        if_condition_248579 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1375, 12), isfile_call_result_248578)
        # Assigning a type to the variable 'if_condition_248579' (line 1375)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1375, 12), 'if_condition_248579', if_condition_248579)
        # SSA begins for if statement (line 1375)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to unlink(...): (line 1376)
        # Processing the call arguments (line 1376)
        # Getting the type of 'tmpfile' (line 1376)
        tmpfile_248582 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1376, 26), 'tmpfile', False)
        # Processing the call keyword arguments (line 1376)
        kwargs_248583 = {}
        # Getting the type of 'os' (line 1376)
        os_248580 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1376, 16), 'os', False)
        # Obtaining the member 'unlink' of a type (line 1376)
        unlink_248581 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1376, 16), os_248580, 'unlink')
        # Calling unlink(args, kwargs) (line 1376)
        unlink_call_result_248584 = invoke(stypy.reporting.localization.Localization(__file__, 1376, 16), unlink_248581, *[tmpfile_248582], **kwargs_248583)
        
        # SSA join for if statement (line 1375)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # ################# End of '_print_figure_tex(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_print_figure_tex' in the type store
        # Getting the type of 'stypy_return_type' (line 1195)
        stypy_return_type_248585 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1195, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_248585)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_print_figure_tex'
        return stypy_return_type_248585


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 895, 0, False)
        # Assigning a type to the variable 'self' (line 896)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 896, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FigureCanvasPS.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'FigureCanvasPS' (line 895)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 895, 0), 'FigureCanvasPS', FigureCanvasPS)

# Assigning a Name to a Name (line 896):
# Getting the type of 'RendererPS' (line 896)
RendererPS_248586 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 896, 22), 'RendererPS')
# Getting the type of 'FigureCanvasPS'
FigureCanvasPS_248587 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'FigureCanvasPS')
# Setting the type of the member '_renderer_class' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), FigureCanvasPS_248587, '_renderer_class', RendererPS_248586)

# Assigning a Num to a Name (line 898):
int_248588 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 898, 16), 'int')
# Getting the type of 'FigureCanvasPS'
FigureCanvasPS_248589 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'FigureCanvasPS')
# Setting the type of the member 'fixed_dpi' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), FigureCanvasPS_248589, 'fixed_dpi', int_248588)

# Assigning a Dict to a Name (line 903):

# Obtaining an instance of the builtin type 'dict' (line 903)
dict_248590 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 903, 16), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 903)
# Adding element type (key, value) (line 903)
unicode_248591 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 903, 17), 'unicode', u'ps')
unicode_248592 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 903, 25), 'unicode', u'Postscript')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 903, 16), dict_248590, (unicode_248591, unicode_248592))
# Adding element type (key, value) (line 903)
unicode_248593 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 904, 17), 'unicode', u'eps')
unicode_248594 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 904, 25), 'unicode', u'Encapsulated Postscript')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 903, 16), dict_248590, (unicode_248593, unicode_248594))

# Getting the type of 'FigureCanvasPS'
FigureCanvasPS_248595 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'FigureCanvasPS')
# Setting the type of the member 'filetypes' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), FigureCanvasPS_248595, 'filetypes', dict_248590)

@norecursion
def convert_psfrags(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'convert_psfrags'
    module_type_store = module_type_store.open_function_context('convert_psfrags', 1379, 0, False)
    
    # Passed parameters checking function
    convert_psfrags.stypy_localization = localization
    convert_psfrags.stypy_type_of_self = None
    convert_psfrags.stypy_type_store = module_type_store
    convert_psfrags.stypy_function_name = 'convert_psfrags'
    convert_psfrags.stypy_param_names_list = ['tmpfile', 'psfrags', 'font_preamble', 'custom_preamble', 'paperWidth', 'paperHeight', 'orientation']
    convert_psfrags.stypy_varargs_param_name = None
    convert_psfrags.stypy_kwargs_param_name = None
    convert_psfrags.stypy_call_defaults = defaults
    convert_psfrags.stypy_call_varargs = varargs
    convert_psfrags.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'convert_psfrags', ['tmpfile', 'psfrags', 'font_preamble', 'custom_preamble', 'paperWidth', 'paperHeight', 'orientation'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'convert_psfrags', localization, ['tmpfile', 'psfrags', 'font_preamble', 'custom_preamble', 'paperWidth', 'paperHeight', 'orientation'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'convert_psfrags(...)' code ##################

    unicode_248596 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1387, (-1)), 'unicode', u'\n    When we want to use the LaTeX backend with postscript, we write PSFrag tags\n    to a temporary postscript file, each one marking a position for LaTeX to\n    render some text. convert_psfrags generates a LaTeX document containing the\n    commands to convert those tags to text. LaTeX/dvips produces the postscript\n    file that includes the actual text.\n    ')
    
    # Assigning a Subscript to a Name (line 1388):
    
    # Assigning a Subscript to a Name (line 1388):
    
    # Obtaining the type of the subscript
    int_248597 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1388, 36), 'int')
    
    # Call to split(...): (line 1388)
    # Processing the call arguments (line 1388)
    # Getting the type of 'tmpfile' (line 1388)
    tmpfile_248601 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1388, 27), 'tmpfile', False)
    # Processing the call keyword arguments (line 1388)
    kwargs_248602 = {}
    # Getting the type of 'os' (line 1388)
    os_248598 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1388, 13), 'os', False)
    # Obtaining the member 'path' of a type (line 1388)
    path_248599 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1388, 13), os_248598, 'path')
    # Obtaining the member 'split' of a type (line 1388)
    split_248600 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1388, 13), path_248599, 'split')
    # Calling split(args, kwargs) (line 1388)
    split_call_result_248603 = invoke(stypy.reporting.localization.Localization(__file__, 1388, 13), split_248600, *[tmpfile_248601], **kwargs_248602)
    
    # Obtaining the member '__getitem__' of a type (line 1388)
    getitem___248604 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1388, 13), split_call_result_248603, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1388)
    subscript_call_result_248605 = invoke(stypy.reporting.localization.Localization(__file__, 1388, 13), getitem___248604, int_248597)
    
    # Assigning a type to the variable 'tmpdir' (line 1388)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1388, 4), 'tmpdir', subscript_call_result_248605)
    
    # Assigning a BinOp to a Name (line 1389):
    
    # Assigning a BinOp to a Name (line 1389):
    # Getting the type of 'tmpfile' (line 1389)
    tmpfile_248606 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1389, 14), 'tmpfile')
    unicode_248607 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1389, 22), 'unicode', u'.eps')
    # Applying the binary operator '+' (line 1389)
    result_add_248608 = python_operator(stypy.reporting.localization.Localization(__file__, 1389, 14), '+', tmpfile_248606, unicode_248607)
    
    # Assigning a type to the variable 'epsfile' (line 1389)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1389, 4), 'epsfile', result_add_248608)
    
    # Call to move(...): (line 1390)
    # Processing the call arguments (line 1390)
    # Getting the type of 'tmpfile' (line 1390)
    tmpfile_248611 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1390, 16), 'tmpfile', False)
    # Getting the type of 'epsfile' (line 1390)
    epsfile_248612 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1390, 25), 'epsfile', False)
    # Processing the call keyword arguments (line 1390)
    kwargs_248613 = {}
    # Getting the type of 'shutil' (line 1390)
    shutil_248609 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1390, 4), 'shutil', False)
    # Obtaining the member 'move' of a type (line 1390)
    move_248610 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1390, 4), shutil_248609, 'move')
    # Calling move(args, kwargs) (line 1390)
    move_call_result_248614 = invoke(stypy.reporting.localization.Localization(__file__, 1390, 4), move_248610, *[tmpfile_248611, epsfile_248612], **kwargs_248613)
    
    
    # Assigning a BinOp to a Name (line 1391):
    
    # Assigning a BinOp to a Name (line 1391):
    # Getting the type of 'tmpfile' (line 1391)
    tmpfile_248615 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1391, 16), 'tmpfile')
    unicode_248616 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1391, 24), 'unicode', u'.tex')
    # Applying the binary operator '+' (line 1391)
    result_add_248617 = python_operator(stypy.reporting.localization.Localization(__file__, 1391, 16), '+', tmpfile_248615, unicode_248616)
    
    # Assigning a type to the variable 'latexfile' (line 1391)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1391, 4), 'latexfile', result_add_248617)
    
    # Assigning a BinOp to a Name (line 1392):
    
    # Assigning a BinOp to a Name (line 1392):
    # Getting the type of 'tmpfile' (line 1392)
    tmpfile_248618 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1392, 14), 'tmpfile')
    unicode_248619 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1392, 22), 'unicode', u'.dvi')
    # Applying the binary operator '+' (line 1392)
    result_add_248620 = python_operator(stypy.reporting.localization.Localization(__file__, 1392, 14), '+', tmpfile_248618, unicode_248619)
    
    # Assigning a type to the variable 'dvifile' (line 1392)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1392, 4), 'dvifile', result_add_248620)
    
    # Assigning a BinOp to a Name (line 1393):
    
    # Assigning a BinOp to a Name (line 1393):
    # Getting the type of 'tmpfile' (line 1393)
    tmpfile_248621 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1393, 13), 'tmpfile')
    unicode_248622 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1393, 21), 'unicode', u'.ps')
    # Applying the binary operator '+' (line 1393)
    result_add_248623 = python_operator(stypy.reporting.localization.Localization(__file__, 1393, 13), '+', tmpfile_248621, unicode_248622)
    
    # Assigning a type to the variable 'psfile' (line 1393)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1393, 4), 'psfile', result_add_248623)
    
    
    # Getting the type of 'orientation' (line 1395)
    orientation_248624 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1395, 7), 'orientation')
    unicode_248625 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1395, 22), 'unicode', u'landscape')
    # Applying the binary operator '==' (line 1395)
    result_eq_248626 = python_operator(stypy.reporting.localization.Localization(__file__, 1395, 7), '==', orientation_248624, unicode_248625)
    
    # Testing the type of an if condition (line 1395)
    if_condition_248627 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1395, 4), result_eq_248626)
    # Assigning a type to the variable 'if_condition_248627' (line 1395)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1395, 4), 'if_condition_248627', if_condition_248627)
    # SSA begins for if statement (line 1395)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Num to a Name (line 1396):
    
    # Assigning a Num to a Name (line 1396):
    int_248628 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1396, 16), 'int')
    # Assigning a type to the variable 'angle' (line 1396)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1396, 8), 'angle', int_248628)
    # SSA branch for the else part of an if statement (line 1395)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a Num to a Name (line 1398):
    
    # Assigning a Num to a Name (line 1398):
    int_248629 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1398, 16), 'int')
    # Assigning a type to the variable 'angle' (line 1398)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1398, 8), 'angle', int_248629)
    # SSA join for if statement (line 1395)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Obtaining the type of the subscript
    unicode_248630 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1400, 16), 'unicode', u'text.latex.unicode')
    # Getting the type of 'rcParams' (line 1400)
    rcParams_248631 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1400, 7), 'rcParams')
    # Obtaining the member '__getitem__' of a type (line 1400)
    getitem___248632 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1400, 7), rcParams_248631, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1400)
    subscript_call_result_248633 = invoke(stypy.reporting.localization.Localization(__file__, 1400, 7), getitem___248632, unicode_248630)
    
    # Testing the type of an if condition (line 1400)
    if_condition_248634 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1400, 4), subscript_call_result_248633)
    # Assigning a type to the variable 'if_condition_248634' (line 1400)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1400, 4), 'if_condition_248634', if_condition_248634)
    # SSA begins for if statement (line 1400)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Str to a Name (line 1401):
    
    # Assigning a Str to a Name (line 1401):
    unicode_248635 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1402, (-1)), 'unicode', u'\\usepackage{ucs}\n\\usepackage[utf8x]{inputenc}')
    # Assigning a type to the variable 'unicode_preamble' (line 1401)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1401, 8), 'unicode_preamble', unicode_248635)
    # SSA branch for the else part of an if statement (line 1400)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a Str to a Name (line 1404):
    
    # Assigning a Str to a Name (line 1404):
    unicode_248636 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1404, 27), 'unicode', u'')
    # Assigning a type to the variable 'unicode_preamble' (line 1404)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1404, 8), 'unicode_preamble', unicode_248636)
    # SSA join for if statement (line 1400)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a BinOp to a Name (line 1406):
    
    # Assigning a BinOp to a Name (line 1406):
    unicode_248637 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1423, (-1)), 'unicode', u'\\documentclass{article}\n%s\n%s\n%s\n\\usepackage[dvips, papersize={%sin,%sin}, body={%sin,%sin}, margin={0in,0in}]{geometry}\n\\usepackage{psfrag}\n\\usepackage[dvips]{graphicx}\n\\usepackage{color}\n\\pagestyle{empty}\n\\begin{document}\n\\begin{figure}\n\\centering\n\\leavevmode\n%s\n\\includegraphics*[angle=%s]{%s}\n\\end{figure}\n\\end{document}\n')
    
    # Obtaining an instance of the builtin type 'tuple' (line 1423)
    tuple_248638 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1423, 6), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1423)
    # Adding element type (line 1423)
    # Getting the type of 'font_preamble' (line 1423)
    font_preamble_248639 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1423, 6), 'font_preamble')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1423, 6), tuple_248638, font_preamble_248639)
    # Adding element type (line 1423)
    # Getting the type of 'unicode_preamble' (line 1423)
    unicode_preamble_248640 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1423, 21), 'unicode_preamble')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1423, 6), tuple_248638, unicode_preamble_248640)
    # Adding element type (line 1423)
    # Getting the type of 'custom_preamble' (line 1423)
    custom_preamble_248641 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1423, 39), 'custom_preamble')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1423, 6), tuple_248638, custom_preamble_248641)
    # Adding element type (line 1423)
    # Getting the type of 'paperWidth' (line 1423)
    paperWidth_248642 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1423, 56), 'paperWidth')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1423, 6), tuple_248638, paperWidth_248642)
    # Adding element type (line 1423)
    # Getting the type of 'paperHeight' (line 1423)
    paperHeight_248643 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1423, 68), 'paperHeight')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1423, 6), tuple_248638, paperHeight_248643)
    # Adding element type (line 1423)
    # Getting the type of 'paperWidth' (line 1424)
    paperWidth_248644 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1424, 6), 'paperWidth')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1423, 6), tuple_248638, paperWidth_248644)
    # Adding element type (line 1423)
    # Getting the type of 'paperHeight' (line 1424)
    paperHeight_248645 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1424, 18), 'paperHeight')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1423, 6), tuple_248638, paperHeight_248645)
    # Adding element type (line 1423)
    
    # Call to join(...): (line 1425)
    # Processing the call arguments (line 1425)
    # Getting the type of 'psfrags' (line 1425)
    psfrags_248648 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1425, 16), 'psfrags', False)
    # Processing the call keyword arguments (line 1425)
    kwargs_248649 = {}
    unicode_248646 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1425, 6), 'unicode', u'\n')
    # Obtaining the member 'join' of a type (line 1425)
    join_248647 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1425, 6), unicode_248646, 'join')
    # Calling join(args, kwargs) (line 1425)
    join_call_result_248650 = invoke(stypy.reporting.localization.Localization(__file__, 1425, 6), join_248647, *[psfrags_248648], **kwargs_248649)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1423, 6), tuple_248638, join_call_result_248650)
    # Adding element type (line 1423)
    # Getting the type of 'angle' (line 1425)
    angle_248651 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1425, 26), 'angle')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1423, 6), tuple_248638, angle_248651)
    # Adding element type (line 1423)
    
    # Obtaining the type of the subscript
    int_248652 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1425, 56), 'int')
    
    # Call to split(...): (line 1425)
    # Processing the call arguments (line 1425)
    # Getting the type of 'epsfile' (line 1425)
    epsfile_248656 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1425, 47), 'epsfile', False)
    # Processing the call keyword arguments (line 1425)
    kwargs_248657 = {}
    # Getting the type of 'os' (line 1425)
    os_248653 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1425, 33), 'os', False)
    # Obtaining the member 'path' of a type (line 1425)
    path_248654 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1425, 33), os_248653, 'path')
    # Obtaining the member 'split' of a type (line 1425)
    split_248655 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1425, 33), path_248654, 'split')
    # Calling split(args, kwargs) (line 1425)
    split_call_result_248658 = invoke(stypy.reporting.localization.Localization(__file__, 1425, 33), split_248655, *[epsfile_248656], **kwargs_248657)
    
    # Obtaining the member '__getitem__' of a type (line 1425)
    getitem___248659 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1425, 33), split_call_result_248658, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1425)
    subscript_call_result_248660 = invoke(stypy.reporting.localization.Localization(__file__, 1425, 33), getitem___248659, int_248652)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1423, 6), tuple_248638, subscript_call_result_248660)
    
    # Applying the binary operator '%' (line 1423)
    result_mod_248661 = python_operator(stypy.reporting.localization.Localization(__file__, 1423, (-1)), '%', unicode_248637, tuple_248638)
    
    # Assigning a type to the variable 's' (line 1406)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1406, 4), 's', result_mod_248661)
    
    # Call to open(...): (line 1427)
    # Processing the call arguments (line 1427)
    # Getting the type of 'latexfile' (line 1427)
    latexfile_248664 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1427, 17), 'latexfile', False)
    unicode_248665 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1427, 28), 'unicode', u'wb')
    # Processing the call keyword arguments (line 1427)
    kwargs_248666 = {}
    # Getting the type of 'io' (line 1427)
    io_248662 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1427, 9), 'io', False)
    # Obtaining the member 'open' of a type (line 1427)
    open_248663 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1427, 9), io_248662, 'open')
    # Calling open(args, kwargs) (line 1427)
    open_call_result_248667 = invoke(stypy.reporting.localization.Localization(__file__, 1427, 9), open_248663, *[latexfile_248664, unicode_248665], **kwargs_248666)
    
    with_248668 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 1427, 9), open_call_result_248667, 'with parameter', '__enter__', '__exit__')

    if with_248668:
        # Calling the __enter__ method to initiate a with section
        # Obtaining the member '__enter__' of a type (line 1427)
        enter___248669 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1427, 9), open_call_result_248667, '__enter__')
        with_enter_248670 = invoke(stypy.reporting.localization.Localization(__file__, 1427, 9), enter___248669)
        # Assigning a type to the variable 'latexh' (line 1427)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1427, 9), 'latexh', with_enter_248670)
        
        
        # Obtaining the type of the subscript
        unicode_248671 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1428, 20), 'unicode', u'text.latex.unicode')
        # Getting the type of 'rcParams' (line 1428)
        rcParams_248672 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1428, 11), 'rcParams')
        # Obtaining the member '__getitem__' of a type (line 1428)
        getitem___248673 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1428, 11), rcParams_248672, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1428)
        subscript_call_result_248674 = invoke(stypy.reporting.localization.Localization(__file__, 1428, 11), getitem___248673, unicode_248671)
        
        # Testing the type of an if condition (line 1428)
        if_condition_248675 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1428, 8), subscript_call_result_248674)
        # Assigning a type to the variable 'if_condition_248675' (line 1428)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1428, 8), 'if_condition_248675', if_condition_248675)
        # SSA begins for if statement (line 1428)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to write(...): (line 1429)
        # Processing the call arguments (line 1429)
        
        # Call to encode(...): (line 1429)
        # Processing the call arguments (line 1429)
        unicode_248680 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1429, 34), 'unicode', u'utf8')
        # Processing the call keyword arguments (line 1429)
        kwargs_248681 = {}
        # Getting the type of 's' (line 1429)
        s_248678 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1429, 25), 's', False)
        # Obtaining the member 'encode' of a type (line 1429)
        encode_248679 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1429, 25), s_248678, 'encode')
        # Calling encode(args, kwargs) (line 1429)
        encode_call_result_248682 = invoke(stypy.reporting.localization.Localization(__file__, 1429, 25), encode_248679, *[unicode_248680], **kwargs_248681)
        
        # Processing the call keyword arguments (line 1429)
        kwargs_248683 = {}
        # Getting the type of 'latexh' (line 1429)
        latexh_248676 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1429, 12), 'latexh', False)
        # Obtaining the member 'write' of a type (line 1429)
        write_248677 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1429, 12), latexh_248676, 'write')
        # Calling write(args, kwargs) (line 1429)
        write_call_result_248684 = invoke(stypy.reporting.localization.Localization(__file__, 1429, 12), write_248677, *[encode_call_result_248682], **kwargs_248683)
        
        # SSA branch for the else part of an if statement (line 1428)
        module_type_store.open_ssa_branch('else')
        
        
        # SSA begins for try-except statement (line 1431)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
        
        # Call to write(...): (line 1432)
        # Processing the call arguments (line 1432)
        
        # Call to encode(...): (line 1432)
        # Processing the call arguments (line 1432)
        unicode_248689 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1432, 38), 'unicode', u'ascii')
        # Processing the call keyword arguments (line 1432)
        kwargs_248690 = {}
        # Getting the type of 's' (line 1432)
        s_248687 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1432, 29), 's', False)
        # Obtaining the member 'encode' of a type (line 1432)
        encode_248688 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1432, 29), s_248687, 'encode')
        # Calling encode(args, kwargs) (line 1432)
        encode_call_result_248691 = invoke(stypy.reporting.localization.Localization(__file__, 1432, 29), encode_248688, *[unicode_248689], **kwargs_248690)
        
        # Processing the call keyword arguments (line 1432)
        kwargs_248692 = {}
        # Getting the type of 'latexh' (line 1432)
        latexh_248685 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1432, 16), 'latexh', False)
        # Obtaining the member 'write' of a type (line 1432)
        write_248686 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1432, 16), latexh_248685, 'write')
        # Calling write(args, kwargs) (line 1432)
        write_call_result_248693 = invoke(stypy.reporting.localization.Localization(__file__, 1432, 16), write_248686, *[encode_call_result_248691], **kwargs_248692)
        
        # SSA branch for the except part of a try statement (line 1431)
        # SSA branch for the except 'UnicodeEncodeError' branch of a try statement (line 1431)
        module_type_store.open_ssa_branch('except')
        
        # Call to report(...): (line 1434)
        # Processing the call arguments (line 1434)
        unicode_248696 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1434, 31), 'unicode', u"You are using unicode and latex, but have not enabled the matplotlib 'text.latex.unicode' rcParam.")
        unicode_248697 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1436, 43), 'unicode', u'helpful')
        # Processing the call keyword arguments (line 1434)
        kwargs_248698 = {}
        # Getting the type of 'verbose' (line 1434)
        verbose_248694 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1434, 16), 'verbose', False)
        # Obtaining the member 'report' of a type (line 1434)
        report_248695 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1434, 16), verbose_248694, 'report')
        # Calling report(args, kwargs) (line 1434)
        report_call_result_248699 = invoke(stypy.reporting.localization.Localization(__file__, 1434, 16), report_248695, *[unicode_248696, unicode_248697], **kwargs_248698)
        
        # SSA join for try-except statement (line 1431)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 1428)
        module_type_store = module_type_store.join_ssa_context()
        
        # Calling the __exit__ method to finish a with section
        # Obtaining the member '__exit__' of a type (line 1427)
        exit___248700 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1427, 9), open_call_result_248667, '__exit__')
        with_exit_248701 = invoke(stypy.reporting.localization.Localization(__file__, 1427, 9), exit___248700, None, None, None)

    
    # Assigning a Call to a Name (line 1440):
    
    # Assigning a Call to a Name (line 1440):
    
    # Call to replace(...): (line 1440)
    # Processing the call arguments (line 1440)
    unicode_248704 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1440, 34), 'unicode', u'\\')
    unicode_248705 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1440, 40), 'unicode', u'/')
    # Processing the call keyword arguments (line 1440)
    kwargs_248706 = {}
    # Getting the type of 'latexfile' (line 1440)
    latexfile_248702 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1440, 16), 'latexfile', False)
    # Obtaining the member 'replace' of a type (line 1440)
    replace_248703 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1440, 16), latexfile_248702, 'replace')
    # Calling replace(args, kwargs) (line 1440)
    replace_call_result_248707 = invoke(stypy.reporting.localization.Localization(__file__, 1440, 16), replace_248703, *[unicode_248704, unicode_248705], **kwargs_248706)
    
    # Assigning a type to the variable 'latexfile' (line 1440)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1440, 4), 'latexfile', replace_call_result_248707)
    
    # Assigning a Call to a Name (line 1442):
    
    # Assigning a Call to a Name (line 1442):
    
    # Call to replace(...): (line 1442)
    # Processing the call arguments (line 1442)
    unicode_248710 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1442, 34), 'unicode', u'~')
    unicode_248711 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1442, 39), 'unicode', u'\\string~')
    # Processing the call keyword arguments (line 1442)
    kwargs_248712 = {}
    # Getting the type of 'latexfile' (line 1442)
    latexfile_248708 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1442, 16), 'latexfile', False)
    # Obtaining the member 'replace' of a type (line 1442)
    replace_248709 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1442, 16), latexfile_248708, 'replace')
    # Calling replace(args, kwargs) (line 1442)
    replace_call_result_248713 = invoke(stypy.reporting.localization.Localization(__file__, 1442, 16), replace_248709, *[unicode_248710, unicode_248711], **kwargs_248712)
    
    # Assigning a type to the variable 'latexfile' (line 1442)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1442, 4), 'latexfile', replace_call_result_248713)
    
    # Assigning a List to a Name (line 1443):
    
    # Assigning a List to a Name (line 1443):
    
    # Obtaining an instance of the builtin type 'list' (line 1443)
    list_248714 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1443, 14), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1443)
    # Adding element type (line 1443)
    
    # Call to str(...): (line 1443)
    # Processing the call arguments (line 1443)
    unicode_248716 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1443, 19), 'unicode', u'latex')
    # Processing the call keyword arguments (line 1443)
    kwargs_248717 = {}
    # Getting the type of 'str' (line 1443)
    str_248715 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1443, 15), 'str', False)
    # Calling str(args, kwargs) (line 1443)
    str_call_result_248718 = invoke(stypy.reporting.localization.Localization(__file__, 1443, 15), str_248715, *[unicode_248716], **kwargs_248717)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1443, 14), list_248714, str_call_result_248718)
    # Adding element type (line 1443)
    unicode_248719 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1443, 29), 'unicode', u'-interaction=nonstopmode')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1443, 14), list_248714, unicode_248719)
    # Adding element type (line 1443)
    unicode_248720 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1444, 15), 'unicode', u'"%s"')
    # Getting the type of 'latexfile' (line 1444)
    latexfile_248721 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1444, 24), 'latexfile')
    # Applying the binary operator '%' (line 1444)
    result_mod_248722 = python_operator(stypy.reporting.localization.Localization(__file__, 1444, 15), '%', unicode_248720, latexfile_248721)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1443, 14), list_248714, result_mod_248722)
    
    # Assigning a type to the variable 'command' (line 1443)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1443, 4), 'command', list_248714)
    
    # Call to report(...): (line 1445)
    # Processing the call arguments (line 1445)
    # Getting the type of 'command' (line 1445)
    command_248725 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1445, 19), 'command', False)
    unicode_248726 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1445, 28), 'unicode', u'debug')
    # Processing the call keyword arguments (line 1445)
    kwargs_248727 = {}
    # Getting the type of 'verbose' (line 1445)
    verbose_248723 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1445, 4), 'verbose', False)
    # Obtaining the member 'report' of a type (line 1445)
    report_248724 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1445, 4), verbose_248723, 'report')
    # Calling report(args, kwargs) (line 1445)
    report_call_result_248728 = invoke(stypy.reporting.localization.Localization(__file__, 1445, 4), report_248724, *[command_248725, unicode_248726], **kwargs_248727)
    
    
    
    # SSA begins for try-except statement (line 1446)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
    
    # Assigning a Call to a Name (line 1447):
    
    # Assigning a Call to a Name (line 1447):
    
    # Call to check_output(...): (line 1447)
    # Processing the call arguments (line 1447)
    # Getting the type of 'command' (line 1447)
    command_248731 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1447, 41), 'command', False)
    # Processing the call keyword arguments (line 1447)
    # Getting the type of 'tmpdir' (line 1447)
    tmpdir_248732 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1447, 54), 'tmpdir', False)
    keyword_248733 = tmpdir_248732
    # Getting the type of 'subprocess' (line 1448)
    subprocess_248734 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1448, 48), 'subprocess', False)
    # Obtaining the member 'STDOUT' of a type (line 1448)
    STDOUT_248735 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1448, 48), subprocess_248734, 'STDOUT')
    keyword_248736 = STDOUT_248735
    kwargs_248737 = {'cwd': keyword_248733, 'stderr': keyword_248736}
    # Getting the type of 'subprocess' (line 1447)
    subprocess_248729 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1447, 17), 'subprocess', False)
    # Obtaining the member 'check_output' of a type (line 1447)
    check_output_248730 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1447, 17), subprocess_248729, 'check_output')
    # Calling check_output(args, kwargs) (line 1447)
    check_output_call_result_248738 = invoke(stypy.reporting.localization.Localization(__file__, 1447, 17), check_output_248730, *[command_248731], **kwargs_248737)
    
    # Assigning a type to the variable 'report' (line 1447)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1447, 8), 'report', check_output_call_result_248738)
    # SSA branch for the except part of a try statement (line 1446)
    # SSA branch for the except 'Attribute' branch of a try statement (line 1446)
    # Storing handler type
    module_type_store.open_ssa_branch('except')
    # Getting the type of 'subprocess' (line 1449)
    subprocess_248739 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1449, 11), 'subprocess')
    # Obtaining the member 'CalledProcessError' of a type (line 1449)
    CalledProcessError_248740 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1449, 11), subprocess_248739, 'CalledProcessError')
    # Assigning a type to the variable 'exc' (line 1449)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1449, 4), 'exc', CalledProcessError_248740)
    
    # Call to RuntimeError(...): (line 1450)
    # Processing the call arguments (line 1450)
    unicode_248742 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1451, 13), 'unicode', u'LaTeX was not able to process the following file:\n%s\n\nHere is the full report generated by LaTeX:\n%s \n\n')
    
    # Obtaining an instance of the builtin type 'tuple' (line 1454)
    tuple_248743 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1454, 23), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1454)
    # Adding element type (line 1454)
    # Getting the type of 'latexfile' (line 1454)
    latexfile_248744 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1454, 23), 'latexfile', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1454, 23), tuple_248743, latexfile_248744)
    # Adding element type (line 1454)
    
    # Call to decode(...): (line 1455)
    # Processing the call arguments (line 1455)
    unicode_248748 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1455, 41), 'unicode', u'utf-8')
    # Processing the call keyword arguments (line 1455)
    kwargs_248749 = {}
    # Getting the type of 'exc' (line 1455)
    exc_248745 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1455, 23), 'exc', False)
    # Obtaining the member 'output' of a type (line 1455)
    output_248746 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1455, 23), exc_248745, 'output')
    # Obtaining the member 'decode' of a type (line 1455)
    decode_248747 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1455, 23), output_248746, 'decode')
    # Calling decode(args, kwargs) (line 1455)
    decode_call_result_248750 = invoke(stypy.reporting.localization.Localization(__file__, 1455, 23), decode_248747, *[unicode_248748], **kwargs_248749)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1454, 23), tuple_248743, decode_call_result_248750)
    
    # Applying the binary operator '%' (line 1451)
    result_mod_248751 = python_operator(stypy.reporting.localization.Localization(__file__, 1451, 13), '%', unicode_248742, tuple_248743)
    
    # Processing the call keyword arguments (line 1450)
    kwargs_248752 = {}
    # Getting the type of 'RuntimeError' (line 1450)
    RuntimeError_248741 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1450, 14), 'RuntimeError', False)
    # Calling RuntimeError(args, kwargs) (line 1450)
    RuntimeError_call_result_248753 = invoke(stypy.reporting.localization.Localization(__file__, 1450, 14), RuntimeError_248741, *[result_mod_248751], **kwargs_248752)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1450, 8), RuntimeError_call_result_248753, 'raise parameter', BaseException)
    # SSA join for try-except statement (line 1446)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Call to report(...): (line 1456)
    # Processing the call arguments (line 1456)
    # Getting the type of 'report' (line 1456)
    report_248756 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1456, 19), 'report', False)
    unicode_248757 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1456, 27), 'unicode', u'debug')
    # Processing the call keyword arguments (line 1456)
    kwargs_248758 = {}
    # Getting the type of 'verbose' (line 1456)
    verbose_248754 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1456, 4), 'verbose', False)
    # Obtaining the member 'report' of a type (line 1456)
    report_248755 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1456, 4), verbose_248754, 'report')
    # Calling report(args, kwargs) (line 1456)
    report_call_result_248759 = invoke(stypy.reporting.localization.Localization(__file__, 1456, 4), report_248755, *[report_248756, unicode_248757], **kwargs_248758)
    
    
    # Assigning a List to a Name (line 1458):
    
    # Assigning a List to a Name (line 1458):
    
    # Obtaining an instance of the builtin type 'list' (line 1458)
    list_248760 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1458, 14), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1458)
    # Adding element type (line 1458)
    
    # Call to str(...): (line 1458)
    # Processing the call arguments (line 1458)
    unicode_248762 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1458, 19), 'unicode', u'dvips')
    # Processing the call keyword arguments (line 1458)
    kwargs_248763 = {}
    # Getting the type of 'str' (line 1458)
    str_248761 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1458, 15), 'str', False)
    # Calling str(args, kwargs) (line 1458)
    str_call_result_248764 = invoke(stypy.reporting.localization.Localization(__file__, 1458, 15), str_248761, *[unicode_248762], **kwargs_248763)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1458, 14), list_248760, str_call_result_248764)
    # Adding element type (line 1458)
    unicode_248765 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1458, 29), 'unicode', u'-q')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1458, 14), list_248760, unicode_248765)
    # Adding element type (line 1458)
    unicode_248766 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1458, 35), 'unicode', u'-R0')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1458, 14), list_248760, unicode_248766)
    # Adding element type (line 1458)
    unicode_248767 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1458, 42), 'unicode', u'-o')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1458, 14), list_248760, unicode_248767)
    # Adding element type (line 1458)
    
    # Call to basename(...): (line 1458)
    # Processing the call arguments (line 1458)
    # Getting the type of 'psfile' (line 1458)
    psfile_248771 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1458, 65), 'psfile', False)
    # Processing the call keyword arguments (line 1458)
    kwargs_248772 = {}
    # Getting the type of 'os' (line 1458)
    os_248768 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1458, 48), 'os', False)
    # Obtaining the member 'path' of a type (line 1458)
    path_248769 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1458, 48), os_248768, 'path')
    # Obtaining the member 'basename' of a type (line 1458)
    basename_248770 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1458, 48), path_248769, 'basename')
    # Calling basename(args, kwargs) (line 1458)
    basename_call_result_248773 = invoke(stypy.reporting.localization.Localization(__file__, 1458, 48), basename_248770, *[psfile_248771], **kwargs_248772)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1458, 14), list_248760, basename_call_result_248773)
    # Adding element type (line 1458)
    
    # Call to basename(...): (line 1459)
    # Processing the call arguments (line 1459)
    # Getting the type of 'dvifile' (line 1459)
    dvifile_248777 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1459, 32), 'dvifile', False)
    # Processing the call keyword arguments (line 1459)
    kwargs_248778 = {}
    # Getting the type of 'os' (line 1459)
    os_248774 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1459, 15), 'os', False)
    # Obtaining the member 'path' of a type (line 1459)
    path_248775 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1459, 15), os_248774, 'path')
    # Obtaining the member 'basename' of a type (line 1459)
    basename_248776 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1459, 15), path_248775, 'basename')
    # Calling basename(args, kwargs) (line 1459)
    basename_call_result_248779 = invoke(stypy.reporting.localization.Localization(__file__, 1459, 15), basename_248776, *[dvifile_248777], **kwargs_248778)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1458, 14), list_248760, basename_call_result_248779)
    
    # Assigning a type to the variable 'command' (line 1458)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1458, 4), 'command', list_248760)
    
    # Call to report(...): (line 1460)
    # Processing the call arguments (line 1460)
    # Getting the type of 'command' (line 1460)
    command_248782 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1460, 19), 'command', False)
    unicode_248783 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1460, 28), 'unicode', u'debug')
    # Processing the call keyword arguments (line 1460)
    kwargs_248784 = {}
    # Getting the type of 'verbose' (line 1460)
    verbose_248780 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1460, 4), 'verbose', False)
    # Obtaining the member 'report' of a type (line 1460)
    report_248781 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1460, 4), verbose_248780, 'report')
    # Calling report(args, kwargs) (line 1460)
    report_call_result_248785 = invoke(stypy.reporting.localization.Localization(__file__, 1460, 4), report_248781, *[command_248782, unicode_248783], **kwargs_248784)
    
    
    
    # SSA begins for try-except statement (line 1461)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
    
    # Assigning a Call to a Name (line 1462):
    
    # Assigning a Call to a Name (line 1462):
    
    # Call to check_output(...): (line 1462)
    # Processing the call arguments (line 1462)
    # Getting the type of 'command' (line 1462)
    command_248788 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1462, 41), 'command', False)
    # Processing the call keyword arguments (line 1462)
    # Getting the type of 'tmpdir' (line 1462)
    tmpdir_248789 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1462, 54), 'tmpdir', False)
    keyword_248790 = tmpdir_248789
    # Getting the type of 'subprocess' (line 1463)
    subprocess_248791 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1463, 48), 'subprocess', False)
    # Obtaining the member 'STDOUT' of a type (line 1463)
    STDOUT_248792 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1463, 48), subprocess_248791, 'STDOUT')
    keyword_248793 = STDOUT_248792
    kwargs_248794 = {'cwd': keyword_248790, 'stderr': keyword_248793}
    # Getting the type of 'subprocess' (line 1462)
    subprocess_248786 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1462, 17), 'subprocess', False)
    # Obtaining the member 'check_output' of a type (line 1462)
    check_output_248787 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1462, 17), subprocess_248786, 'check_output')
    # Calling check_output(args, kwargs) (line 1462)
    check_output_call_result_248795 = invoke(stypy.reporting.localization.Localization(__file__, 1462, 17), check_output_248787, *[command_248788], **kwargs_248794)
    
    # Assigning a type to the variable 'report' (line 1462)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1462, 8), 'report', check_output_call_result_248795)
    # SSA branch for the except part of a try statement (line 1461)
    # SSA branch for the except 'Attribute' branch of a try statement (line 1461)
    # Storing handler type
    module_type_store.open_ssa_branch('except')
    # Getting the type of 'subprocess' (line 1464)
    subprocess_248796 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1464, 11), 'subprocess')
    # Obtaining the member 'CalledProcessError' of a type (line 1464)
    CalledProcessError_248797 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1464, 11), subprocess_248796, 'CalledProcessError')
    # Assigning a type to the variable 'exc' (line 1464)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1464, 4), 'exc', CalledProcessError_248797)
    
    # Call to RuntimeError(...): (line 1465)
    # Processing the call arguments (line 1465)
    unicode_248799 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1466, 13), 'unicode', u'dvips was not able to process the following file:\n%s\n\nHere is the full report generated by dvips:\n%s \n\n')
    
    # Obtaining an instance of the builtin type 'tuple' (line 1469)
    tuple_248800 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1469, 23), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1469)
    # Adding element type (line 1469)
    # Getting the type of 'dvifile' (line 1469)
    dvifile_248801 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1469, 23), 'dvifile', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1469, 23), tuple_248800, dvifile_248801)
    # Adding element type (line 1469)
    
    # Call to decode(...): (line 1470)
    # Processing the call arguments (line 1470)
    unicode_248805 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1470, 41), 'unicode', u'utf-8')
    # Processing the call keyword arguments (line 1470)
    kwargs_248806 = {}
    # Getting the type of 'exc' (line 1470)
    exc_248802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1470, 23), 'exc', False)
    # Obtaining the member 'output' of a type (line 1470)
    output_248803 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1470, 23), exc_248802, 'output')
    # Obtaining the member 'decode' of a type (line 1470)
    decode_248804 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1470, 23), output_248803, 'decode')
    # Calling decode(args, kwargs) (line 1470)
    decode_call_result_248807 = invoke(stypy.reporting.localization.Localization(__file__, 1470, 23), decode_248804, *[unicode_248805], **kwargs_248806)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1469, 23), tuple_248800, decode_call_result_248807)
    
    # Applying the binary operator '%' (line 1466)
    result_mod_248808 = python_operator(stypy.reporting.localization.Localization(__file__, 1466, 13), '%', unicode_248799, tuple_248800)
    
    # Processing the call keyword arguments (line 1465)
    kwargs_248809 = {}
    # Getting the type of 'RuntimeError' (line 1465)
    RuntimeError_248798 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1465, 14), 'RuntimeError', False)
    # Calling RuntimeError(args, kwargs) (line 1465)
    RuntimeError_call_result_248810 = invoke(stypy.reporting.localization.Localization(__file__, 1465, 14), RuntimeError_248798, *[result_mod_248808], **kwargs_248809)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1465, 8), RuntimeError_call_result_248810, 'raise parameter', BaseException)
    # SSA join for try-except statement (line 1461)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Call to report(...): (line 1471)
    # Processing the call arguments (line 1471)
    # Getting the type of 'report' (line 1471)
    report_248813 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1471, 19), 'report', False)
    unicode_248814 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1471, 27), 'unicode', u'debug')
    # Processing the call keyword arguments (line 1471)
    kwargs_248815 = {}
    # Getting the type of 'verbose' (line 1471)
    verbose_248811 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1471, 4), 'verbose', False)
    # Obtaining the member 'report' of a type (line 1471)
    report_248812 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1471, 4), verbose_248811, 'report')
    # Calling report(args, kwargs) (line 1471)
    report_call_result_248816 = invoke(stypy.reporting.localization.Localization(__file__, 1471, 4), report_248812, *[report_248813, unicode_248814], **kwargs_248815)
    
    
    # Call to remove(...): (line 1472)
    # Processing the call arguments (line 1472)
    # Getting the type of 'epsfile' (line 1472)
    epsfile_248819 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1472, 14), 'epsfile', False)
    # Processing the call keyword arguments (line 1472)
    kwargs_248820 = {}
    # Getting the type of 'os' (line 1472)
    os_248817 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1472, 4), 'os', False)
    # Obtaining the member 'remove' of a type (line 1472)
    remove_248818 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1472, 4), os_248817, 'remove')
    # Calling remove(args, kwargs) (line 1472)
    remove_call_result_248821 = invoke(stypy.reporting.localization.Localization(__file__, 1472, 4), remove_248818, *[epsfile_248819], **kwargs_248820)
    
    
    # Call to move(...): (line 1473)
    # Processing the call arguments (line 1473)
    # Getting the type of 'psfile' (line 1473)
    psfile_248824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1473, 16), 'psfile', False)
    # Getting the type of 'tmpfile' (line 1473)
    tmpfile_248825 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1473, 24), 'tmpfile', False)
    # Processing the call keyword arguments (line 1473)
    kwargs_248826 = {}
    # Getting the type of 'shutil' (line 1473)
    shutil_248822 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1473, 4), 'shutil', False)
    # Obtaining the member 'move' of a type (line 1473)
    move_248823 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1473, 4), shutil_248822, 'move')
    # Calling move(args, kwargs) (line 1473)
    move_call_result_248827 = invoke(stypy.reporting.localization.Localization(__file__, 1473, 4), move_248823, *[psfile_248824, tmpfile_248825], **kwargs_248826)
    
    
    # Call to open(...): (line 1482)
    # Processing the call arguments (line 1482)
    # Getting the type of 'tmpfile' (line 1482)
    tmpfile_248830 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1482, 17), 'tmpfile', False)
    # Processing the call keyword arguments (line 1482)
    kwargs_248831 = {}
    # Getting the type of 'io' (line 1482)
    io_248828 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1482, 9), 'io', False)
    # Obtaining the member 'open' of a type (line 1482)
    open_248829 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1482, 9), io_248828, 'open')
    # Calling open(args, kwargs) (line 1482)
    open_call_result_248832 = invoke(stypy.reporting.localization.Localization(__file__, 1482, 9), open_248829, *[tmpfile_248830], **kwargs_248831)
    
    with_248833 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 1482, 9), open_call_result_248832, 'with parameter', '__enter__', '__exit__')

    if with_248833:
        # Calling the __enter__ method to initiate a with section
        # Obtaining the member '__enter__' of a type (line 1482)
        enter___248834 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1482, 9), open_call_result_248832, '__enter__')
        with_enter_248835 = invoke(stypy.reporting.localization.Localization(__file__, 1482, 9), enter___248834)
        # Assigning a type to the variable 'fh' (line 1482)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1482, 9), 'fh', with_enter_248835)
        
        
        unicode_248836 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1483, 11), 'unicode', u'Landscape')
        
        # Call to read(...): (line 1483)
        # Processing the call arguments (line 1483)
        int_248839 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1483, 34), 'int')
        # Processing the call keyword arguments (line 1483)
        kwargs_248840 = {}
        # Getting the type of 'fh' (line 1483)
        fh_248837 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1483, 26), 'fh', False)
        # Obtaining the member 'read' of a type (line 1483)
        read_248838 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1483, 26), fh_248837, 'read')
        # Calling read(args, kwargs) (line 1483)
        read_call_result_248841 = invoke(stypy.reporting.localization.Localization(__file__, 1483, 26), read_248838, *[int_248839], **kwargs_248840)
        
        # Applying the binary operator 'in' (line 1483)
        result_contains_248842 = python_operator(stypy.reporting.localization.Localization(__file__, 1483, 11), 'in', unicode_248836, read_call_result_248841)
        
        # Testing the type of an if condition (line 1483)
        if_condition_248843 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1483, 8), result_contains_248842)
        # Assigning a type to the variable 'if_condition_248843' (line 1483)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1483, 8), 'if_condition_248843', if_condition_248843)
        # SSA begins for if statement (line 1483)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Name to a Name (line 1484):
        
        # Assigning a Name to a Name (line 1484):
        # Getting the type of 'True' (line 1484)
        True_248844 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1484, 29), 'True')
        # Assigning a type to the variable 'psfrag_rotated' (line 1484)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1484, 12), 'psfrag_rotated', True_248844)
        # SSA branch for the else part of an if statement (line 1483)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Name to a Name (line 1486):
        
        # Assigning a Name to a Name (line 1486):
        # Getting the type of 'False' (line 1486)
        False_248845 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1486, 29), 'False')
        # Assigning a type to the variable 'psfrag_rotated' (line 1486)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1486, 12), 'psfrag_rotated', False_248845)
        # SSA join for if statement (line 1483)
        module_type_store = module_type_store.join_ssa_context()
        
        # Calling the __exit__ method to finish a with section
        # Obtaining the member '__exit__' of a type (line 1482)
        exit___248846 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1482, 9), open_call_result_248832, '__exit__')
        with_exit_248847 = invoke(stypy.reporting.localization.Localization(__file__, 1482, 9), exit___248846, None, None, None)

    
    
    # Getting the type of 'debugPS' (line 1488)
    debugPS_248848 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1488, 11), 'debugPS')
    # Applying the 'not' unary operator (line 1488)
    result_not__248849 = python_operator(stypy.reporting.localization.Localization(__file__, 1488, 7), 'not', debugPS_248848)
    
    # Testing the type of an if condition (line 1488)
    if_condition_248850 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1488, 4), result_not__248849)
    # Assigning a type to the variable 'if_condition_248850' (line 1488)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1488, 4), 'if_condition_248850', if_condition_248850)
    # SSA begins for if statement (line 1488)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Call to glob(...): (line 1489)
    # Processing the call arguments (line 1489)
    # Getting the type of 'tmpfile' (line 1489)
    tmpfile_248853 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1489, 31), 'tmpfile', False)
    unicode_248854 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1489, 39), 'unicode', u'.*')
    # Applying the binary operator '+' (line 1489)
    result_add_248855 = python_operator(stypy.reporting.localization.Localization(__file__, 1489, 31), '+', tmpfile_248853, unicode_248854)
    
    # Processing the call keyword arguments (line 1489)
    kwargs_248856 = {}
    # Getting the type of 'glob' (line 1489)
    glob_248851 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1489, 21), 'glob', False)
    # Obtaining the member 'glob' of a type (line 1489)
    glob_248852 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1489, 21), glob_248851, 'glob')
    # Calling glob(args, kwargs) (line 1489)
    glob_call_result_248857 = invoke(stypy.reporting.localization.Localization(__file__, 1489, 21), glob_248852, *[result_add_248855], **kwargs_248856)
    
    # Testing the type of a for loop iterable (line 1489)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1489, 8), glob_call_result_248857)
    # Getting the type of the for loop variable (line 1489)
    for_loop_var_248858 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1489, 8), glob_call_result_248857)
    # Assigning a type to the variable 'fname' (line 1489)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1489, 8), 'fname', for_loop_var_248858)
    # SSA begins for a for statement (line 1489)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Call to remove(...): (line 1490)
    # Processing the call arguments (line 1490)
    # Getting the type of 'fname' (line 1490)
    fname_248861 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1490, 22), 'fname', False)
    # Processing the call keyword arguments (line 1490)
    kwargs_248862 = {}
    # Getting the type of 'os' (line 1490)
    os_248859 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1490, 12), 'os', False)
    # Obtaining the member 'remove' of a type (line 1490)
    remove_248860 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1490, 12), os_248859, 'remove')
    # Calling remove(args, kwargs) (line 1490)
    remove_call_result_248863 = invoke(stypy.reporting.localization.Localization(__file__, 1490, 12), remove_248860, *[fname_248861], **kwargs_248862)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1488)
    module_type_store = module_type_store.join_ssa_context()
    
    # Getting the type of 'psfrag_rotated' (line 1492)
    psfrag_rotated_248864 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1492, 11), 'psfrag_rotated')
    # Assigning a type to the variable 'stypy_return_type' (line 1492)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1492, 4), 'stypy_return_type', psfrag_rotated_248864)
    
    # ################# End of 'convert_psfrags(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'convert_psfrags' in the type store
    # Getting the type of 'stypy_return_type' (line 1379)
    stypy_return_type_248865 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1379, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_248865)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'convert_psfrags'
    return stypy_return_type_248865

# Assigning a type to the variable 'convert_psfrags' (line 1379)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1379, 0), 'convert_psfrags', convert_psfrags)

@norecursion
def gs_distill(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    # Getting the type of 'False' (line 1494)
    False_248866 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1494, 28), 'False')
    unicode_248867 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1494, 41), 'unicode', u'letter')
    # Getting the type of 'None' (line 1494)
    None_248868 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1494, 56), 'None')
    # Getting the type of 'False' (line 1494)
    False_248869 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1494, 70), 'False')
    defaults = [False_248866, unicode_248867, None_248868, False_248869]
    # Create a new context for function 'gs_distill'
    module_type_store = module_type_store.open_function_context('gs_distill', 1494, 0, False)
    
    # Passed parameters checking function
    gs_distill.stypy_localization = localization
    gs_distill.stypy_type_of_self = None
    gs_distill.stypy_type_store = module_type_store
    gs_distill.stypy_function_name = 'gs_distill'
    gs_distill.stypy_param_names_list = ['tmpfile', 'eps', 'ptype', 'bbox', 'rotated']
    gs_distill.stypy_varargs_param_name = None
    gs_distill.stypy_kwargs_param_name = None
    gs_distill.stypy_call_defaults = defaults
    gs_distill.stypy_call_varargs = varargs
    gs_distill.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'gs_distill', ['tmpfile', 'eps', 'ptype', 'bbox', 'rotated'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'gs_distill', localization, ['tmpfile', 'eps', 'ptype', 'bbox', 'rotated'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'gs_distill(...)' code ##################

    unicode_248870 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1499, (-1)), 'unicode', u"\n    Use ghostscript's pswrite or epswrite device to distill a file.\n    This yields smaller files without illegal encapsulated postscript\n    operators. The output is low-level, converting text to outlines.\n    ")
    
    # Getting the type of 'eps' (line 1501)
    eps_248871 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1501, 7), 'eps')
    # Testing the type of an if condition (line 1501)
    if_condition_248872 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1501, 4), eps_248871)
    # Assigning a type to the variable 'if_condition_248872' (line 1501)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1501, 4), 'if_condition_248872', if_condition_248872)
    # SSA begins for if statement (line 1501)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Str to a Name (line 1502):
    
    # Assigning a Str to a Name (line 1502):
    unicode_248873 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1502, 23), 'unicode', u'-dEPSCrop')
    # Assigning a type to the variable 'paper_option' (line 1502)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1502, 8), 'paper_option', unicode_248873)
    # SSA branch for the else part of an if statement (line 1501)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a BinOp to a Name (line 1504):
    
    # Assigning a BinOp to a Name (line 1504):
    unicode_248874 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1504, 23), 'unicode', u'-sPAPERSIZE=%s')
    # Getting the type of 'ptype' (line 1504)
    ptype_248875 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1504, 42), 'ptype')
    # Applying the binary operator '%' (line 1504)
    result_mod_248876 = python_operator(stypy.reporting.localization.Localization(__file__, 1504, 23), '%', unicode_248874, ptype_248875)
    
    # Assigning a type to the variable 'paper_option' (line 1504)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1504, 8), 'paper_option', result_mod_248876)
    # SSA join for if statement (line 1501)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a BinOp to a Name (line 1506):
    
    # Assigning a BinOp to a Name (line 1506):
    # Getting the type of 'tmpfile' (line 1506)
    tmpfile_248877 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1506, 13), 'tmpfile')
    unicode_248878 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1506, 23), 'unicode', u'.ps')
    # Applying the binary operator '+' (line 1506)
    result_add_248879 = python_operator(stypy.reporting.localization.Localization(__file__, 1506, 13), '+', tmpfile_248877, unicode_248878)
    
    # Assigning a type to the variable 'psfile' (line 1506)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1506, 4), 'psfile', result_add_248879)
    
    # Assigning a Subscript to a Name (line 1507):
    
    # Assigning a Subscript to a Name (line 1507):
    
    # Obtaining the type of the subscript
    unicode_248880 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1507, 19), 'unicode', u'ps.distiller.res')
    # Getting the type of 'rcParams' (line 1507)
    rcParams_248881 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1507, 10), 'rcParams')
    # Obtaining the member '__getitem__' of a type (line 1507)
    getitem___248882 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1507, 10), rcParams_248881, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1507)
    subscript_call_result_248883 = invoke(stypy.reporting.localization.Localization(__file__, 1507, 10), getitem___248882, unicode_248880)
    
    # Assigning a type to the variable 'dpi' (line 1507)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1507, 4), 'dpi', subscript_call_result_248883)
    
    # Assigning a Attribute to a Name (line 1509):
    
    # Assigning a Attribute to a Name (line 1509):
    # Getting the type of 'ps_backend_helper' (line 1509)
    ps_backend_helper_248884 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1509, 13), 'ps_backend_helper')
    # Obtaining the member 'gs_exe' of a type (line 1509)
    gs_exe_248885 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1509, 13), ps_backend_helper_248884, 'gs_exe')
    # Assigning a type to the variable 'gs_exe' (line 1509)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1509, 4), 'gs_exe', gs_exe_248885)
    
    # Getting the type of 'ps_backend_helper' (line 1510)
    ps_backend_helper_248886 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1510, 7), 'ps_backend_helper')
    # Obtaining the member 'supports_ps2write' of a type (line 1510)
    supports_ps2write_248887 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1510, 7), ps_backend_helper_248886, 'supports_ps2write')
    # Testing the type of an if condition (line 1510)
    if_condition_248888 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1510, 4), supports_ps2write_248887)
    # Assigning a type to the variable 'if_condition_248888' (line 1510)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1510, 4), 'if_condition_248888', if_condition_248888)
    # SSA begins for if statement (line 1510)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Str to a Name (line 1511):
    
    # Assigning a Str to a Name (line 1511):
    unicode_248889 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1511, 22), 'unicode', u'ps2write')
    # Assigning a type to the variable 'device_name' (line 1511)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1511, 8), 'device_name', unicode_248889)
    # SSA branch for the else part of an if statement (line 1510)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a Str to a Name (line 1513):
    
    # Assigning a Str to a Name (line 1513):
    unicode_248890 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1513, 22), 'unicode', u'pswrite')
    # Assigning a type to the variable 'device_name' (line 1513)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1513, 8), 'device_name', unicode_248890)
    # SSA join for if statement (line 1510)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a List to a Name (line 1515):
    
    # Assigning a List to a Name (line 1515):
    
    # Obtaining an instance of the builtin type 'list' (line 1515)
    list_248891 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1515, 14), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1515)
    # Adding element type (line 1515)
    
    # Call to str(...): (line 1515)
    # Processing the call arguments (line 1515)
    # Getting the type of 'gs_exe' (line 1515)
    gs_exe_248893 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1515, 19), 'gs_exe', False)
    # Processing the call keyword arguments (line 1515)
    kwargs_248894 = {}
    # Getting the type of 'str' (line 1515)
    str_248892 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1515, 15), 'str', False)
    # Calling str(args, kwargs) (line 1515)
    str_call_result_248895 = invoke(stypy.reporting.localization.Localization(__file__, 1515, 15), str_248892, *[gs_exe_248893], **kwargs_248894)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1515, 14), list_248891, str_call_result_248895)
    # Adding element type (line 1515)
    unicode_248896 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1515, 28), 'unicode', u'-dBATCH')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1515, 14), list_248891, unicode_248896)
    # Adding element type (line 1515)
    unicode_248897 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1515, 39), 'unicode', u'-dNOPAUSE')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1515, 14), list_248891, unicode_248897)
    # Adding element type (line 1515)
    unicode_248898 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1515, 52), 'unicode', u'-r%d')
    # Getting the type of 'dpi' (line 1515)
    dpi_248899 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1515, 61), 'dpi')
    # Applying the binary operator '%' (line 1515)
    result_mod_248900 = python_operator(stypy.reporting.localization.Localization(__file__, 1515, 52), '%', unicode_248898, dpi_248899)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1515, 14), list_248891, result_mod_248900)
    # Adding element type (line 1515)
    unicode_248901 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1516, 15), 'unicode', u'-sDEVICE=%s')
    # Getting the type of 'device_name' (line 1516)
    device_name_248902 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1516, 31), 'device_name')
    # Applying the binary operator '%' (line 1516)
    result_mod_248903 = python_operator(stypy.reporting.localization.Localization(__file__, 1516, 15), '%', unicode_248901, device_name_248902)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1515, 14), list_248891, result_mod_248903)
    # Adding element type (line 1515)
    # Getting the type of 'paper_option' (line 1516)
    paper_option_248904 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1516, 44), 'paper_option')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1515, 14), list_248891, paper_option_248904)
    # Adding element type (line 1515)
    unicode_248905 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1517, 15), 'unicode', u'-sOutputFile=%s')
    # Getting the type of 'psfile' (line 1517)
    psfile_248906 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1517, 35), 'psfile')
    # Applying the binary operator '%' (line 1517)
    result_mod_248907 = python_operator(stypy.reporting.localization.Localization(__file__, 1517, 15), '%', unicode_248905, psfile_248906)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1515, 14), list_248891, result_mod_248907)
    # Adding element type (line 1515)
    # Getting the type of 'tmpfile' (line 1517)
    tmpfile_248908 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1517, 43), 'tmpfile')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1515, 14), list_248891, tmpfile_248908)
    
    # Assigning a type to the variable 'command' (line 1515)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1515, 4), 'command', list_248891)
    
    # Call to report(...): (line 1518)
    # Processing the call arguments (line 1518)
    # Getting the type of 'command' (line 1518)
    command_248911 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1518, 19), 'command', False)
    unicode_248912 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1518, 28), 'unicode', u'debug')
    # Processing the call keyword arguments (line 1518)
    kwargs_248913 = {}
    # Getting the type of 'verbose' (line 1518)
    verbose_248909 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1518, 4), 'verbose', False)
    # Obtaining the member 'report' of a type (line 1518)
    report_248910 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1518, 4), verbose_248909, 'report')
    # Calling report(args, kwargs) (line 1518)
    report_call_result_248914 = invoke(stypy.reporting.localization.Localization(__file__, 1518, 4), report_248910, *[command_248911, unicode_248912], **kwargs_248913)
    
    
    
    # SSA begins for try-except statement (line 1519)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
    
    # Assigning a Call to a Name (line 1520):
    
    # Assigning a Call to a Name (line 1520):
    
    # Call to check_output(...): (line 1520)
    # Processing the call arguments (line 1520)
    # Getting the type of 'command' (line 1520)
    command_248917 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1520, 41), 'command', False)
    # Processing the call keyword arguments (line 1520)
    # Getting the type of 'subprocess' (line 1520)
    subprocess_248918 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1520, 57), 'subprocess', False)
    # Obtaining the member 'STDOUT' of a type (line 1520)
    STDOUT_248919 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1520, 57), subprocess_248918, 'STDOUT')
    keyword_248920 = STDOUT_248919
    kwargs_248921 = {'stderr': keyword_248920}
    # Getting the type of 'subprocess' (line 1520)
    subprocess_248915 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1520, 17), 'subprocess', False)
    # Obtaining the member 'check_output' of a type (line 1520)
    check_output_248916 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1520, 17), subprocess_248915, 'check_output')
    # Calling check_output(args, kwargs) (line 1520)
    check_output_call_result_248922 = invoke(stypy.reporting.localization.Localization(__file__, 1520, 17), check_output_248916, *[command_248917], **kwargs_248921)
    
    # Assigning a type to the variable 'report' (line 1520)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1520, 8), 'report', check_output_call_result_248922)
    # SSA branch for the except part of a try statement (line 1519)
    # SSA branch for the except 'Attribute' branch of a try statement (line 1519)
    # Storing handler type
    module_type_store.open_ssa_branch('except')
    # Getting the type of 'subprocess' (line 1521)
    subprocess_248923 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1521, 11), 'subprocess')
    # Obtaining the member 'CalledProcessError' of a type (line 1521)
    CalledProcessError_248924 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1521, 11), subprocess_248923, 'CalledProcessError')
    # Assigning a type to the variable 'exc' (line 1521)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1521, 4), 'exc', CalledProcessError_248924)
    
    # Call to RuntimeError(...): (line 1522)
    # Processing the call arguments (line 1522)
    unicode_248926 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1523, 13), 'unicode', u'ghostscript was not able to process your image.\nHere is the full report generated by ghostscript:\n%s \n\n')
    
    # Call to decode(...): (line 1525)
    # Processing the call arguments (line 1525)
    unicode_248930 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1525, 40), 'unicode', u'utf-8')
    # Processing the call keyword arguments (line 1525)
    kwargs_248931 = {}
    # Getting the type of 'exc' (line 1525)
    exc_248927 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1525, 22), 'exc', False)
    # Obtaining the member 'output' of a type (line 1525)
    output_248928 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1525, 22), exc_248927, 'output')
    # Obtaining the member 'decode' of a type (line 1525)
    decode_248929 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1525, 22), output_248928, 'decode')
    # Calling decode(args, kwargs) (line 1525)
    decode_call_result_248932 = invoke(stypy.reporting.localization.Localization(__file__, 1525, 22), decode_248929, *[unicode_248930], **kwargs_248931)
    
    # Applying the binary operator '%' (line 1523)
    result_mod_248933 = python_operator(stypy.reporting.localization.Localization(__file__, 1523, 13), '%', unicode_248926, decode_call_result_248932)
    
    # Processing the call keyword arguments (line 1522)
    kwargs_248934 = {}
    # Getting the type of 'RuntimeError' (line 1522)
    RuntimeError_248925 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1522, 14), 'RuntimeError', False)
    # Calling RuntimeError(args, kwargs) (line 1522)
    RuntimeError_call_result_248935 = invoke(stypy.reporting.localization.Localization(__file__, 1522, 14), RuntimeError_248925, *[result_mod_248933], **kwargs_248934)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1522, 8), RuntimeError_call_result_248935, 'raise parameter', BaseException)
    # SSA join for try-except statement (line 1519)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Call to report(...): (line 1526)
    # Processing the call arguments (line 1526)
    # Getting the type of 'report' (line 1526)
    report_248938 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1526, 19), 'report', False)
    unicode_248939 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1526, 27), 'unicode', u'debug')
    # Processing the call keyword arguments (line 1526)
    kwargs_248940 = {}
    # Getting the type of 'verbose' (line 1526)
    verbose_248936 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1526, 4), 'verbose', False)
    # Obtaining the member 'report' of a type (line 1526)
    report_248937 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1526, 4), verbose_248936, 'report')
    # Calling report(args, kwargs) (line 1526)
    report_call_result_248941 = invoke(stypy.reporting.localization.Localization(__file__, 1526, 4), report_248937, *[report_248938, unicode_248939], **kwargs_248940)
    
    
    # Call to remove(...): (line 1527)
    # Processing the call arguments (line 1527)
    # Getting the type of 'tmpfile' (line 1527)
    tmpfile_248944 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1527, 14), 'tmpfile', False)
    # Processing the call keyword arguments (line 1527)
    kwargs_248945 = {}
    # Getting the type of 'os' (line 1527)
    os_248942 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1527, 4), 'os', False)
    # Obtaining the member 'remove' of a type (line 1527)
    remove_248943 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1527, 4), os_248942, 'remove')
    # Calling remove(args, kwargs) (line 1527)
    remove_call_result_248946 = invoke(stypy.reporting.localization.Localization(__file__, 1527, 4), remove_248943, *[tmpfile_248944], **kwargs_248945)
    
    
    # Call to move(...): (line 1528)
    # Processing the call arguments (line 1528)
    # Getting the type of 'psfile' (line 1528)
    psfile_248949 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1528, 16), 'psfile', False)
    # Getting the type of 'tmpfile' (line 1528)
    tmpfile_248950 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1528, 24), 'tmpfile', False)
    # Processing the call keyword arguments (line 1528)
    kwargs_248951 = {}
    # Getting the type of 'shutil' (line 1528)
    shutil_248947 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1528, 4), 'shutil', False)
    # Obtaining the member 'move' of a type (line 1528)
    move_248948 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1528, 4), shutil_248947, 'move')
    # Calling move(args, kwargs) (line 1528)
    move_call_result_248952 = invoke(stypy.reporting.localization.Localization(__file__, 1528, 4), move_248948, *[psfile_248949, tmpfile_248950], **kwargs_248951)
    
    
    # Getting the type of 'eps' (line 1535)
    eps_248953 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1535, 7), 'eps')
    # Testing the type of an if condition (line 1535)
    if_condition_248954 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1535, 4), eps_248953)
    # Assigning a type to the variable 'if_condition_248954' (line 1535)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1535, 4), 'if_condition_248954', if_condition_248954)
    # SSA begins for if statement (line 1535)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Getting the type of 'ps_backend_helper' (line 1539)
    ps_backend_helper_248955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1539, 11), 'ps_backend_helper')
    # Obtaining the member 'supports_ps2write' of a type (line 1539)
    supports_ps2write_248956 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1539, 11), ps_backend_helper_248955, 'supports_ps2write')
    # Testing the type of an if condition (line 1539)
    if_condition_248957 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1539, 8), supports_ps2write_248956)
    # Assigning a type to the variable 'if_condition_248957' (line 1539)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1539, 8), 'if_condition_248957', if_condition_248957)
    # SSA begins for if statement (line 1539)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to pstoeps(...): (line 1541)
    # Processing the call arguments (line 1541)
    # Getting the type of 'tmpfile' (line 1541)
    tmpfile_248959 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1541, 20), 'tmpfile', False)
    # Getting the type of 'bbox' (line 1541)
    bbox_248960 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1541, 29), 'bbox', False)
    # Processing the call keyword arguments (line 1541)
    # Getting the type of 'rotated' (line 1541)
    rotated_248961 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1541, 43), 'rotated', False)
    keyword_248962 = rotated_248961
    kwargs_248963 = {'rotated': keyword_248962}
    # Getting the type of 'pstoeps' (line 1541)
    pstoeps_248958 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1541, 12), 'pstoeps', False)
    # Calling pstoeps(args, kwargs) (line 1541)
    pstoeps_call_result_248964 = invoke(stypy.reporting.localization.Localization(__file__, 1541, 12), pstoeps_248958, *[tmpfile_248959, bbox_248960], **kwargs_248963)
    
    # SSA branch for the else part of an if statement (line 1539)
    module_type_store.open_ssa_branch('else')
    
    # Call to pstoeps(...): (line 1543)
    # Processing the call arguments (line 1543)
    # Getting the type of 'tmpfile' (line 1543)
    tmpfile_248966 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1543, 20), 'tmpfile', False)
    # Processing the call keyword arguments (line 1543)
    kwargs_248967 = {}
    # Getting the type of 'pstoeps' (line 1543)
    pstoeps_248965 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1543, 12), 'pstoeps', False)
    # Calling pstoeps(args, kwargs) (line 1543)
    pstoeps_call_result_248968 = invoke(stypy.reporting.localization.Localization(__file__, 1543, 12), pstoeps_248965, *[tmpfile_248966], **kwargs_248967)
    
    # SSA join for if statement (line 1539)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1535)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # ################# End of 'gs_distill(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'gs_distill' in the type store
    # Getting the type of 'stypy_return_type' (line 1494)
    stypy_return_type_248969 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1494, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_248969)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'gs_distill'
    return stypy_return_type_248969

# Assigning a type to the variable 'gs_distill' (line 1494)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1494, 0), 'gs_distill', gs_distill)

@norecursion
def xpdf_distill(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    # Getting the type of 'False' (line 1546)
    False_248970 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1546, 30), 'False')
    unicode_248971 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1546, 43), 'unicode', u'letter')
    # Getting the type of 'None' (line 1546)
    None_248972 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1546, 58), 'None')
    # Getting the type of 'False' (line 1546)
    False_248973 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1546, 72), 'False')
    defaults = [False_248970, unicode_248971, None_248972, False_248973]
    # Create a new context for function 'xpdf_distill'
    module_type_store = module_type_store.open_function_context('xpdf_distill', 1546, 0, False)
    
    # Passed parameters checking function
    xpdf_distill.stypy_localization = localization
    xpdf_distill.stypy_type_of_self = None
    xpdf_distill.stypy_type_store = module_type_store
    xpdf_distill.stypy_function_name = 'xpdf_distill'
    xpdf_distill.stypy_param_names_list = ['tmpfile', 'eps', 'ptype', 'bbox', 'rotated']
    xpdf_distill.stypy_varargs_param_name = None
    xpdf_distill.stypy_kwargs_param_name = None
    xpdf_distill.stypy_call_defaults = defaults
    xpdf_distill.stypy_call_varargs = varargs
    xpdf_distill.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'xpdf_distill', ['tmpfile', 'eps', 'ptype', 'bbox', 'rotated'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'xpdf_distill', localization, ['tmpfile', 'eps', 'ptype', 'bbox', 'rotated'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'xpdf_distill(...)' code ##################

    unicode_248974 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1552, (-1)), 'unicode', u"\n    Use ghostscript's ps2pdf and xpdf's/poppler's pdftops to distill a file.\n    This yields smaller files without illegal encapsulated postscript\n    operators. This distiller is preferred, generating high-level postscript\n    output that treats text as text.\n    ")
    
    # Assigning a BinOp to a Name (line 1553):
    
    # Assigning a BinOp to a Name (line 1553):
    # Getting the type of 'tmpfile' (line 1553)
    tmpfile_248975 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1553, 14), 'tmpfile')
    unicode_248976 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1553, 24), 'unicode', u'.pdf')
    # Applying the binary operator '+' (line 1553)
    result_add_248977 = python_operator(stypy.reporting.localization.Localization(__file__, 1553, 14), '+', tmpfile_248975, unicode_248976)
    
    # Assigning a type to the variable 'pdffile' (line 1553)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1553, 4), 'pdffile', result_add_248977)
    
    # Assigning a BinOp to a Name (line 1554):
    
    # Assigning a BinOp to a Name (line 1554):
    # Getting the type of 'tmpfile' (line 1554)
    tmpfile_248978 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1554, 13), 'tmpfile')
    unicode_248979 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1554, 23), 'unicode', u'.ps')
    # Applying the binary operator '+' (line 1554)
    result_add_248980 = python_operator(stypy.reporting.localization.Localization(__file__, 1554, 13), '+', tmpfile_248978, unicode_248979)
    
    # Assigning a type to the variable 'psfile' (line 1554)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1554, 4), 'psfile', result_add_248980)
    
    # Getting the type of 'eps' (line 1556)
    eps_248981 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1556, 7), 'eps')
    # Testing the type of an if condition (line 1556)
    if_condition_248982 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1556, 4), eps_248981)
    # Assigning a type to the variable 'if_condition_248982' (line 1556)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1556, 4), 'if_condition_248982', if_condition_248982)
    # SSA begins for if statement (line 1556)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Str to a Name (line 1557):
    
    # Assigning a Str to a Name (line 1557):
    unicode_248983 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1557, 23), 'unicode', u'-dEPSCrop')
    # Assigning a type to the variable 'paper_option' (line 1557)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1557, 8), 'paper_option', unicode_248983)
    # SSA branch for the else part of an if statement (line 1556)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'sys' (line 1559)
    sys_248984 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1559, 11), 'sys')
    # Obtaining the member 'platform' of a type (line 1559)
    platform_248985 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1559, 11), sys_248984, 'platform')
    unicode_248986 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1559, 27), 'unicode', u'win32')
    # Applying the binary operator '==' (line 1559)
    result_eq_248987 = python_operator(stypy.reporting.localization.Localization(__file__, 1559, 11), '==', platform_248985, unicode_248986)
    
    # Testing the type of an if condition (line 1559)
    if_condition_248988 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1559, 8), result_eq_248987)
    # Assigning a type to the variable 'if_condition_248988' (line 1559)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1559, 8), 'if_condition_248988', if_condition_248988)
    # SSA begins for if statement (line 1559)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 1560):
    
    # Assigning a BinOp to a Name (line 1560):
    unicode_248989 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1560, 27), 'unicode', u'-sPAPERSIZE#%s')
    # Getting the type of 'ptype' (line 1560)
    ptype_248990 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1560, 46), 'ptype')
    # Applying the binary operator '%' (line 1560)
    result_mod_248991 = python_operator(stypy.reporting.localization.Localization(__file__, 1560, 27), '%', unicode_248989, ptype_248990)
    
    # Assigning a type to the variable 'paper_option' (line 1560)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1560, 12), 'paper_option', result_mod_248991)
    # SSA branch for the else part of an if statement (line 1559)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a BinOp to a Name (line 1562):
    
    # Assigning a BinOp to a Name (line 1562):
    unicode_248992 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1562, 27), 'unicode', u'-sPAPERSIZE=%s')
    # Getting the type of 'ptype' (line 1562)
    ptype_248993 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1562, 46), 'ptype')
    # Applying the binary operator '%' (line 1562)
    result_mod_248994 = python_operator(stypy.reporting.localization.Localization(__file__, 1562, 27), '%', unicode_248992, ptype_248993)
    
    # Assigning a type to the variable 'paper_option' (line 1562)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1562, 12), 'paper_option', result_mod_248994)
    # SSA join for if statement (line 1559)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1556)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'sys' (line 1564)
    sys_248995 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1564, 7), 'sys')
    # Obtaining the member 'platform' of a type (line 1564)
    platform_248996 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1564, 7), sys_248995, 'platform')
    unicode_248997 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1564, 23), 'unicode', u'win32')
    # Applying the binary operator '==' (line 1564)
    result_eq_248998 = python_operator(stypy.reporting.localization.Localization(__file__, 1564, 7), '==', platform_248996, unicode_248997)
    
    # Testing the type of an if condition (line 1564)
    if_condition_248999 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1564, 4), result_eq_248998)
    # Assigning a type to the variable 'if_condition_248999' (line 1564)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1564, 4), 'if_condition_248999', if_condition_248999)
    # SSA begins for if statement (line 1564)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a List to a Name (line 1565):
    
    # Assigning a List to a Name (line 1565):
    
    # Obtaining an instance of the builtin type 'list' (line 1565)
    list_249000 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1565, 18), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1565)
    # Adding element type (line 1565)
    
    # Call to str(...): (line 1565)
    # Processing the call arguments (line 1565)
    unicode_249002 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1565, 23), 'unicode', u'ps2pdf')
    # Processing the call keyword arguments (line 1565)
    kwargs_249003 = {}
    # Getting the type of 'str' (line 1565)
    str_249001 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1565, 19), 'str', False)
    # Calling str(args, kwargs) (line 1565)
    str_call_result_249004 = invoke(stypy.reporting.localization.Localization(__file__, 1565, 19), str_249001, *[unicode_249002], **kwargs_249003)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1565, 18), list_249000, str_call_result_249004)
    # Adding element type (line 1565)
    unicode_249005 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1565, 34), 'unicode', u'-dAutoFilterColorImages#false')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1565, 18), list_249000, unicode_249005)
    # Adding element type (line 1565)
    unicode_249006 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1566, 19), 'unicode', u'-dAutoFilterGrayImages#false')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1565, 18), list_249000, unicode_249006)
    # Adding element type (line 1565)
    unicode_249007 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1567, 19), 'unicode', u'-sGrayImageFilter#FlateEncode')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1565, 18), list_249000, unicode_249007)
    # Adding element type (line 1565)
    unicode_249008 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1568, 19), 'unicode', u'-sColorImageFilter#FlateEncode')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1565, 18), list_249000, unicode_249008)
    # Adding element type (line 1565)
    # Getting the type of 'paper_option' (line 1568)
    paper_option_249009 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1568, 53), 'paper_option')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1565, 18), list_249000, paper_option_249009)
    # Adding element type (line 1565)
    # Getting the type of 'tmpfile' (line 1568)
    tmpfile_249010 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1568, 67), 'tmpfile')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1565, 18), list_249000, tmpfile_249010)
    # Adding element type (line 1565)
    # Getting the type of 'pdffile' (line 1569)
    pdffile_249011 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1569, 19), 'pdffile')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1565, 18), list_249000, pdffile_249011)
    
    # Assigning a type to the variable 'command' (line 1565)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1565, 8), 'command', list_249000)
    # SSA branch for the else part of an if statement (line 1564)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a List to a Name (line 1571):
    
    # Assigning a List to a Name (line 1571):
    
    # Obtaining an instance of the builtin type 'list' (line 1571)
    list_249012 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1571, 18), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1571)
    # Adding element type (line 1571)
    
    # Call to str(...): (line 1571)
    # Processing the call arguments (line 1571)
    unicode_249014 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1571, 23), 'unicode', u'ps2pdf')
    # Processing the call keyword arguments (line 1571)
    kwargs_249015 = {}
    # Getting the type of 'str' (line 1571)
    str_249013 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1571, 19), 'str', False)
    # Calling str(args, kwargs) (line 1571)
    str_call_result_249016 = invoke(stypy.reporting.localization.Localization(__file__, 1571, 19), str_249013, *[unicode_249014], **kwargs_249015)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1571, 18), list_249012, str_call_result_249016)
    # Adding element type (line 1571)
    unicode_249017 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1571, 34), 'unicode', u'-dAutoFilterColorImages=false')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1571, 18), list_249012, unicode_249017)
    # Adding element type (line 1571)
    unicode_249018 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1572, 19), 'unicode', u'-dAutoFilterGrayImages=false')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1571, 18), list_249012, unicode_249018)
    # Adding element type (line 1571)
    unicode_249019 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1573, 19), 'unicode', u'-sGrayImageFilter=FlateEncode')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1571, 18), list_249012, unicode_249019)
    # Adding element type (line 1571)
    unicode_249020 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1574, 19), 'unicode', u'-sColorImageFilter=FlateEncode')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1571, 18), list_249012, unicode_249020)
    # Adding element type (line 1571)
    # Getting the type of 'paper_option' (line 1574)
    paper_option_249021 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1574, 53), 'paper_option')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1571, 18), list_249012, paper_option_249021)
    # Adding element type (line 1571)
    # Getting the type of 'tmpfile' (line 1574)
    tmpfile_249022 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1574, 67), 'tmpfile')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1571, 18), list_249012, tmpfile_249022)
    # Adding element type (line 1571)
    # Getting the type of 'pdffile' (line 1575)
    pdffile_249023 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1575, 19), 'pdffile')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1571, 18), list_249012, pdffile_249023)
    
    # Assigning a type to the variable 'command' (line 1571)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1571, 8), 'command', list_249012)
    # SSA join for if statement (line 1564)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Call to report(...): (line 1576)
    # Processing the call arguments (line 1576)
    # Getting the type of 'command' (line 1576)
    command_249026 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1576, 19), 'command', False)
    unicode_249027 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1576, 28), 'unicode', u'debug')
    # Processing the call keyword arguments (line 1576)
    kwargs_249028 = {}
    # Getting the type of 'verbose' (line 1576)
    verbose_249024 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1576, 4), 'verbose', False)
    # Obtaining the member 'report' of a type (line 1576)
    report_249025 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1576, 4), verbose_249024, 'report')
    # Calling report(args, kwargs) (line 1576)
    report_call_result_249029 = invoke(stypy.reporting.localization.Localization(__file__, 1576, 4), report_249025, *[command_249026, unicode_249027], **kwargs_249028)
    
    
    
    # SSA begins for try-except statement (line 1578)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
    
    # Assigning a Call to a Name (line 1579):
    
    # Assigning a Call to a Name (line 1579):
    
    # Call to check_output(...): (line 1579)
    # Processing the call arguments (line 1579)
    # Getting the type of 'command' (line 1579)
    command_249032 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1579, 41), 'command', False)
    # Processing the call keyword arguments (line 1579)
    # Getting the type of 'subprocess' (line 1579)
    subprocess_249033 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1579, 57), 'subprocess', False)
    # Obtaining the member 'STDOUT' of a type (line 1579)
    STDOUT_249034 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1579, 57), subprocess_249033, 'STDOUT')
    keyword_249035 = STDOUT_249034
    kwargs_249036 = {'stderr': keyword_249035}
    # Getting the type of 'subprocess' (line 1579)
    subprocess_249030 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1579, 17), 'subprocess', False)
    # Obtaining the member 'check_output' of a type (line 1579)
    check_output_249031 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1579, 17), subprocess_249030, 'check_output')
    # Calling check_output(args, kwargs) (line 1579)
    check_output_call_result_249037 = invoke(stypy.reporting.localization.Localization(__file__, 1579, 17), check_output_249031, *[command_249032], **kwargs_249036)
    
    # Assigning a type to the variable 'report' (line 1579)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1579, 8), 'report', check_output_call_result_249037)
    # SSA branch for the except part of a try statement (line 1578)
    # SSA branch for the except 'Attribute' branch of a try statement (line 1578)
    # Storing handler type
    module_type_store.open_ssa_branch('except')
    # Getting the type of 'subprocess' (line 1580)
    subprocess_249038 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1580, 11), 'subprocess')
    # Obtaining the member 'CalledProcessError' of a type (line 1580)
    CalledProcessError_249039 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1580, 11), subprocess_249038, 'CalledProcessError')
    # Assigning a type to the variable 'exc' (line 1580)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1580, 4), 'exc', CalledProcessError_249039)
    
    # Call to RuntimeError(...): (line 1581)
    # Processing the call arguments (line 1581)
    unicode_249041 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1582, 13), 'unicode', u'ps2pdf was not able to process your image.\nHere is the full report generated by ps2pdf:\n%s \n\n')
    
    # Call to decode(...): (line 1584)
    # Processing the call arguments (line 1584)
    unicode_249045 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1584, 40), 'unicode', u'utf-8')
    # Processing the call keyword arguments (line 1584)
    kwargs_249046 = {}
    # Getting the type of 'exc' (line 1584)
    exc_249042 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1584, 22), 'exc', False)
    # Obtaining the member 'output' of a type (line 1584)
    output_249043 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1584, 22), exc_249042, 'output')
    # Obtaining the member 'decode' of a type (line 1584)
    decode_249044 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1584, 22), output_249043, 'decode')
    # Calling decode(args, kwargs) (line 1584)
    decode_call_result_249047 = invoke(stypy.reporting.localization.Localization(__file__, 1584, 22), decode_249044, *[unicode_249045], **kwargs_249046)
    
    # Applying the binary operator '%' (line 1582)
    result_mod_249048 = python_operator(stypy.reporting.localization.Localization(__file__, 1582, 13), '%', unicode_249041, decode_call_result_249047)
    
    # Processing the call keyword arguments (line 1581)
    kwargs_249049 = {}
    # Getting the type of 'RuntimeError' (line 1581)
    RuntimeError_249040 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1581, 14), 'RuntimeError', False)
    # Calling RuntimeError(args, kwargs) (line 1581)
    RuntimeError_call_result_249050 = invoke(stypy.reporting.localization.Localization(__file__, 1581, 14), RuntimeError_249040, *[result_mod_249048], **kwargs_249049)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1581, 8), RuntimeError_call_result_249050, 'raise parameter', BaseException)
    # SSA join for try-except statement (line 1578)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Call to report(...): (line 1585)
    # Processing the call arguments (line 1585)
    # Getting the type of 'report' (line 1585)
    report_249053 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1585, 19), 'report', False)
    unicode_249054 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1585, 27), 'unicode', u'debug')
    # Processing the call keyword arguments (line 1585)
    kwargs_249055 = {}
    # Getting the type of 'verbose' (line 1585)
    verbose_249051 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1585, 4), 'verbose', False)
    # Obtaining the member 'report' of a type (line 1585)
    report_249052 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1585, 4), verbose_249051, 'report')
    # Calling report(args, kwargs) (line 1585)
    report_call_result_249056 = invoke(stypy.reporting.localization.Localization(__file__, 1585, 4), report_249052, *[report_249053, unicode_249054], **kwargs_249055)
    
    
    # Assigning a List to a Name (line 1587):
    
    # Assigning a List to a Name (line 1587):
    
    # Obtaining an instance of the builtin type 'list' (line 1587)
    list_249057 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1587, 14), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1587)
    # Adding element type (line 1587)
    
    # Call to str(...): (line 1587)
    # Processing the call arguments (line 1587)
    unicode_249059 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1587, 19), 'unicode', u'pdftops')
    # Processing the call keyword arguments (line 1587)
    kwargs_249060 = {}
    # Getting the type of 'str' (line 1587)
    str_249058 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1587, 15), 'str', False)
    # Calling str(args, kwargs) (line 1587)
    str_call_result_249061 = invoke(stypy.reporting.localization.Localization(__file__, 1587, 15), str_249058, *[unicode_249059], **kwargs_249060)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1587, 14), list_249057, str_call_result_249061)
    # Adding element type (line 1587)
    unicode_249062 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1587, 31), 'unicode', u'-paper')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1587, 14), list_249057, unicode_249062)
    # Adding element type (line 1587)
    unicode_249063 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1587, 41), 'unicode', u'match')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1587, 14), list_249057, unicode_249063)
    # Adding element type (line 1587)
    unicode_249064 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1587, 50), 'unicode', u'-level2')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1587, 14), list_249057, unicode_249064)
    # Adding element type (line 1587)
    # Getting the type of 'pdffile' (line 1587)
    pdffile_249065 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1587, 61), 'pdffile')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1587, 14), list_249057, pdffile_249065)
    # Adding element type (line 1587)
    # Getting the type of 'psfile' (line 1587)
    psfile_249066 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1587, 70), 'psfile')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1587, 14), list_249057, psfile_249066)
    
    # Assigning a type to the variable 'command' (line 1587)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1587, 4), 'command', list_249057)
    
    # Call to report(...): (line 1588)
    # Processing the call arguments (line 1588)
    # Getting the type of 'command' (line 1588)
    command_249069 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1588, 19), 'command', False)
    unicode_249070 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1588, 28), 'unicode', u'debug')
    # Processing the call keyword arguments (line 1588)
    kwargs_249071 = {}
    # Getting the type of 'verbose' (line 1588)
    verbose_249067 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1588, 4), 'verbose', False)
    # Obtaining the member 'report' of a type (line 1588)
    report_249068 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1588, 4), verbose_249067, 'report')
    # Calling report(args, kwargs) (line 1588)
    report_call_result_249072 = invoke(stypy.reporting.localization.Localization(__file__, 1588, 4), report_249068, *[command_249069, unicode_249070], **kwargs_249071)
    
    
    
    # SSA begins for try-except statement (line 1589)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
    
    # Assigning a Call to a Name (line 1590):
    
    # Assigning a Call to a Name (line 1590):
    
    # Call to check_output(...): (line 1590)
    # Processing the call arguments (line 1590)
    # Getting the type of 'command' (line 1590)
    command_249075 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1590, 41), 'command', False)
    # Processing the call keyword arguments (line 1590)
    # Getting the type of 'subprocess' (line 1590)
    subprocess_249076 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1590, 57), 'subprocess', False)
    # Obtaining the member 'STDOUT' of a type (line 1590)
    STDOUT_249077 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1590, 57), subprocess_249076, 'STDOUT')
    keyword_249078 = STDOUT_249077
    kwargs_249079 = {'stderr': keyword_249078}
    # Getting the type of 'subprocess' (line 1590)
    subprocess_249073 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1590, 17), 'subprocess', False)
    # Obtaining the member 'check_output' of a type (line 1590)
    check_output_249074 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1590, 17), subprocess_249073, 'check_output')
    # Calling check_output(args, kwargs) (line 1590)
    check_output_call_result_249080 = invoke(stypy.reporting.localization.Localization(__file__, 1590, 17), check_output_249074, *[command_249075], **kwargs_249079)
    
    # Assigning a type to the variable 'report' (line 1590)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1590, 8), 'report', check_output_call_result_249080)
    # SSA branch for the except part of a try statement (line 1589)
    # SSA branch for the except 'Attribute' branch of a try statement (line 1589)
    # Storing handler type
    module_type_store.open_ssa_branch('except')
    # Getting the type of 'subprocess' (line 1591)
    subprocess_249081 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1591, 11), 'subprocess')
    # Obtaining the member 'CalledProcessError' of a type (line 1591)
    CalledProcessError_249082 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1591, 11), subprocess_249081, 'CalledProcessError')
    # Assigning a type to the variable 'exc' (line 1591)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1591, 4), 'exc', CalledProcessError_249082)
    
    # Call to RuntimeError(...): (line 1592)
    # Processing the call arguments (line 1592)
    unicode_249084 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1593, 13), 'unicode', u'pdftops was not able to process your image.\nHere is the full report generated by pdftops:\n%s \n\n')
    
    # Call to decode(...): (line 1595)
    # Processing the call arguments (line 1595)
    unicode_249088 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1595, 40), 'unicode', u'utf-8')
    # Processing the call keyword arguments (line 1595)
    kwargs_249089 = {}
    # Getting the type of 'exc' (line 1595)
    exc_249085 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1595, 22), 'exc', False)
    # Obtaining the member 'output' of a type (line 1595)
    output_249086 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1595, 22), exc_249085, 'output')
    # Obtaining the member 'decode' of a type (line 1595)
    decode_249087 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1595, 22), output_249086, 'decode')
    # Calling decode(args, kwargs) (line 1595)
    decode_call_result_249090 = invoke(stypy.reporting.localization.Localization(__file__, 1595, 22), decode_249087, *[unicode_249088], **kwargs_249089)
    
    # Applying the binary operator '%' (line 1593)
    result_mod_249091 = python_operator(stypy.reporting.localization.Localization(__file__, 1593, 13), '%', unicode_249084, decode_call_result_249090)
    
    # Processing the call keyword arguments (line 1592)
    kwargs_249092 = {}
    # Getting the type of 'RuntimeError' (line 1592)
    RuntimeError_249083 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1592, 14), 'RuntimeError', False)
    # Calling RuntimeError(args, kwargs) (line 1592)
    RuntimeError_call_result_249093 = invoke(stypy.reporting.localization.Localization(__file__, 1592, 14), RuntimeError_249083, *[result_mod_249091], **kwargs_249092)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1592, 8), RuntimeError_call_result_249093, 'raise parameter', BaseException)
    # SSA join for try-except statement (line 1589)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Call to report(...): (line 1596)
    # Processing the call arguments (line 1596)
    # Getting the type of 'report' (line 1596)
    report_249096 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1596, 19), 'report', False)
    unicode_249097 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1596, 27), 'unicode', u'debug')
    # Processing the call keyword arguments (line 1596)
    kwargs_249098 = {}
    # Getting the type of 'verbose' (line 1596)
    verbose_249094 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1596, 4), 'verbose', False)
    # Obtaining the member 'report' of a type (line 1596)
    report_249095 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1596, 4), verbose_249094, 'report')
    # Calling report(args, kwargs) (line 1596)
    report_call_result_249099 = invoke(stypy.reporting.localization.Localization(__file__, 1596, 4), report_249095, *[report_249096, unicode_249097], **kwargs_249098)
    
    
    # Call to remove(...): (line 1597)
    # Processing the call arguments (line 1597)
    # Getting the type of 'tmpfile' (line 1597)
    tmpfile_249102 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1597, 14), 'tmpfile', False)
    # Processing the call keyword arguments (line 1597)
    kwargs_249103 = {}
    # Getting the type of 'os' (line 1597)
    os_249100 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1597, 4), 'os', False)
    # Obtaining the member 'remove' of a type (line 1597)
    remove_249101 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1597, 4), os_249100, 'remove')
    # Calling remove(args, kwargs) (line 1597)
    remove_call_result_249104 = invoke(stypy.reporting.localization.Localization(__file__, 1597, 4), remove_249101, *[tmpfile_249102], **kwargs_249103)
    
    
    # Call to move(...): (line 1598)
    # Processing the call arguments (line 1598)
    # Getting the type of 'psfile' (line 1598)
    psfile_249107 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1598, 16), 'psfile', False)
    # Getting the type of 'tmpfile' (line 1598)
    tmpfile_249108 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1598, 24), 'tmpfile', False)
    # Processing the call keyword arguments (line 1598)
    kwargs_249109 = {}
    # Getting the type of 'shutil' (line 1598)
    shutil_249105 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1598, 4), 'shutil', False)
    # Obtaining the member 'move' of a type (line 1598)
    move_249106 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1598, 4), shutil_249105, 'move')
    # Calling move(args, kwargs) (line 1598)
    move_call_result_249110 = invoke(stypy.reporting.localization.Localization(__file__, 1598, 4), move_249106, *[psfile_249107, tmpfile_249108], **kwargs_249109)
    
    
    # Getting the type of 'eps' (line 1600)
    eps_249111 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1600, 7), 'eps')
    # Testing the type of an if condition (line 1600)
    if_condition_249112 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1600, 4), eps_249111)
    # Assigning a type to the variable 'if_condition_249112' (line 1600)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1600, 4), 'if_condition_249112', if_condition_249112)
    # SSA begins for if statement (line 1600)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to pstoeps(...): (line 1601)
    # Processing the call arguments (line 1601)
    # Getting the type of 'tmpfile' (line 1601)
    tmpfile_249114 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1601, 16), 'tmpfile', False)
    # Processing the call keyword arguments (line 1601)
    kwargs_249115 = {}
    # Getting the type of 'pstoeps' (line 1601)
    pstoeps_249113 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1601, 8), 'pstoeps', False)
    # Calling pstoeps(args, kwargs) (line 1601)
    pstoeps_call_result_249116 = invoke(stypy.reporting.localization.Localization(__file__, 1601, 8), pstoeps_249113, *[tmpfile_249114], **kwargs_249115)
    
    # SSA join for if statement (line 1600)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Call to glob(...): (line 1603)
    # Processing the call arguments (line 1603)
    # Getting the type of 'tmpfile' (line 1603)
    tmpfile_249119 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1603, 27), 'tmpfile', False)
    unicode_249120 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1603, 35), 'unicode', u'.*')
    # Applying the binary operator '+' (line 1603)
    result_add_249121 = python_operator(stypy.reporting.localization.Localization(__file__, 1603, 27), '+', tmpfile_249119, unicode_249120)
    
    # Processing the call keyword arguments (line 1603)
    kwargs_249122 = {}
    # Getting the type of 'glob' (line 1603)
    glob_249117 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1603, 17), 'glob', False)
    # Obtaining the member 'glob' of a type (line 1603)
    glob_249118 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1603, 17), glob_249117, 'glob')
    # Calling glob(args, kwargs) (line 1603)
    glob_call_result_249123 = invoke(stypy.reporting.localization.Localization(__file__, 1603, 17), glob_249118, *[result_add_249121], **kwargs_249122)
    
    # Testing the type of a for loop iterable (line 1603)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1603, 4), glob_call_result_249123)
    # Getting the type of the for loop variable (line 1603)
    for_loop_var_249124 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1603, 4), glob_call_result_249123)
    # Assigning a type to the variable 'fname' (line 1603)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1603, 4), 'fname', for_loop_var_249124)
    # SSA begins for a for statement (line 1603)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Call to remove(...): (line 1604)
    # Processing the call arguments (line 1604)
    # Getting the type of 'fname' (line 1604)
    fname_249127 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1604, 18), 'fname', False)
    # Processing the call keyword arguments (line 1604)
    kwargs_249128 = {}
    # Getting the type of 'os' (line 1604)
    os_249125 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1604, 8), 'os', False)
    # Obtaining the member 'remove' of a type (line 1604)
    remove_249126 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1604, 8), os_249125, 'remove')
    # Calling remove(args, kwargs) (line 1604)
    remove_call_result_249129 = invoke(stypy.reporting.localization.Localization(__file__, 1604, 8), remove_249126, *[fname_249127], **kwargs_249128)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # ################# End of 'xpdf_distill(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'xpdf_distill' in the type store
    # Getting the type of 'stypy_return_type' (line 1546)
    stypy_return_type_249130 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1546, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_249130)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'xpdf_distill'
    return stypy_return_type_249130

# Assigning a type to the variable 'xpdf_distill' (line 1546)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1546, 0), 'xpdf_distill', xpdf_distill)

@norecursion
def get_bbox_header(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    # Getting the type of 'False' (line 1607)
    False_249131 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1607, 34), 'False')
    defaults = [False_249131]
    # Create a new context for function 'get_bbox_header'
    module_type_store = module_type_store.open_function_context('get_bbox_header', 1607, 0, False)
    
    # Passed parameters checking function
    get_bbox_header.stypy_localization = localization
    get_bbox_header.stypy_type_of_self = None
    get_bbox_header.stypy_type_store = module_type_store
    get_bbox_header.stypy_function_name = 'get_bbox_header'
    get_bbox_header.stypy_param_names_list = ['lbrt', 'rotated']
    get_bbox_header.stypy_varargs_param_name = None
    get_bbox_header.stypy_kwargs_param_name = None
    get_bbox_header.stypy_call_defaults = defaults
    get_bbox_header.stypy_call_varargs = varargs
    get_bbox_header.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'get_bbox_header', ['lbrt', 'rotated'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'get_bbox_header', localization, ['lbrt', 'rotated'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'get_bbox_header(...)' code ##################

    unicode_249132 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1611, (-1)), 'unicode', u'\n    return a postscript header stringfor the given bbox lbrt=(l, b, r, t).\n    Optionally, return rotate command.\n    ')
    
    # Assigning a Name to a Tuple (line 1613):
    
    # Assigning a Subscript to a Name (line 1613):
    
    # Obtaining the type of the subscript
    int_249133 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1613, 4), 'int')
    # Getting the type of 'lbrt' (line 1613)
    lbrt_249134 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1613, 17), 'lbrt')
    # Obtaining the member '__getitem__' of a type (line 1613)
    getitem___249135 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1613, 4), lbrt_249134, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1613)
    subscript_call_result_249136 = invoke(stypy.reporting.localization.Localization(__file__, 1613, 4), getitem___249135, int_249133)
    
    # Assigning a type to the variable 'tuple_var_assignment_243802' (line 1613)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1613, 4), 'tuple_var_assignment_243802', subscript_call_result_249136)
    
    # Assigning a Subscript to a Name (line 1613):
    
    # Obtaining the type of the subscript
    int_249137 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1613, 4), 'int')
    # Getting the type of 'lbrt' (line 1613)
    lbrt_249138 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1613, 17), 'lbrt')
    # Obtaining the member '__getitem__' of a type (line 1613)
    getitem___249139 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1613, 4), lbrt_249138, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1613)
    subscript_call_result_249140 = invoke(stypy.reporting.localization.Localization(__file__, 1613, 4), getitem___249139, int_249137)
    
    # Assigning a type to the variable 'tuple_var_assignment_243803' (line 1613)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1613, 4), 'tuple_var_assignment_243803', subscript_call_result_249140)
    
    # Assigning a Subscript to a Name (line 1613):
    
    # Obtaining the type of the subscript
    int_249141 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1613, 4), 'int')
    # Getting the type of 'lbrt' (line 1613)
    lbrt_249142 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1613, 17), 'lbrt')
    # Obtaining the member '__getitem__' of a type (line 1613)
    getitem___249143 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1613, 4), lbrt_249142, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1613)
    subscript_call_result_249144 = invoke(stypy.reporting.localization.Localization(__file__, 1613, 4), getitem___249143, int_249141)
    
    # Assigning a type to the variable 'tuple_var_assignment_243804' (line 1613)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1613, 4), 'tuple_var_assignment_243804', subscript_call_result_249144)
    
    # Assigning a Subscript to a Name (line 1613):
    
    # Obtaining the type of the subscript
    int_249145 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1613, 4), 'int')
    # Getting the type of 'lbrt' (line 1613)
    lbrt_249146 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1613, 17), 'lbrt')
    # Obtaining the member '__getitem__' of a type (line 1613)
    getitem___249147 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1613, 4), lbrt_249146, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1613)
    subscript_call_result_249148 = invoke(stypy.reporting.localization.Localization(__file__, 1613, 4), getitem___249147, int_249145)
    
    # Assigning a type to the variable 'tuple_var_assignment_243805' (line 1613)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1613, 4), 'tuple_var_assignment_243805', subscript_call_result_249148)
    
    # Assigning a Name to a Name (line 1613):
    # Getting the type of 'tuple_var_assignment_243802' (line 1613)
    tuple_var_assignment_243802_249149 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1613, 4), 'tuple_var_assignment_243802')
    # Assigning a type to the variable 'l' (line 1613)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1613, 4), 'l', tuple_var_assignment_243802_249149)
    
    # Assigning a Name to a Name (line 1613):
    # Getting the type of 'tuple_var_assignment_243803' (line 1613)
    tuple_var_assignment_243803_249150 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1613, 4), 'tuple_var_assignment_243803')
    # Assigning a type to the variable 'b' (line 1613)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1613, 7), 'b', tuple_var_assignment_243803_249150)
    
    # Assigning a Name to a Name (line 1613):
    # Getting the type of 'tuple_var_assignment_243804' (line 1613)
    tuple_var_assignment_243804_249151 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1613, 4), 'tuple_var_assignment_243804')
    # Assigning a type to the variable 'r' (line 1613)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1613, 10), 'r', tuple_var_assignment_243804_249151)
    
    # Assigning a Name to a Name (line 1613):
    # Getting the type of 'tuple_var_assignment_243805' (line 1613)
    tuple_var_assignment_243805_249152 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1613, 4), 'tuple_var_assignment_243805')
    # Assigning a type to the variable 't' (line 1613)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1613, 13), 't', tuple_var_assignment_243805_249152)
    
    # Getting the type of 'rotated' (line 1614)
    rotated_249153 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1614, 7), 'rotated')
    # Testing the type of an if condition (line 1614)
    if_condition_249154 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1614, 4), rotated_249153)
    # Assigning a type to the variable 'if_condition_249154' (line 1614)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1614, 4), 'if_condition_249154', if_condition_249154)
    # SSA begins for if statement (line 1614)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 1615):
    
    # Assigning a BinOp to a Name (line 1615):
    unicode_249155 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1615, 17), 'unicode', u'%.2f %.2f  translate\n90 rotate')
    
    # Obtaining an instance of the builtin type 'tuple' (line 1615)
    tuple_249156 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1615, 54), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1615)
    # Adding element type (line 1615)
    # Getting the type of 'l' (line 1615)
    l_249157 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1615, 54), 'l')
    # Getting the type of 'r' (line 1615)
    r_249158 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1615, 56), 'r')
    # Applying the binary operator '+' (line 1615)
    result_add_249159 = python_operator(stypy.reporting.localization.Localization(__file__, 1615, 54), '+', l_249157, r_249158)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1615, 54), tuple_249156, result_add_249159)
    # Adding element type (line 1615)
    int_249160 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1615, 59), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1615, 54), tuple_249156, int_249160)
    
    # Applying the binary operator '%' (line 1615)
    result_mod_249161 = python_operator(stypy.reporting.localization.Localization(__file__, 1615, 17), '%', unicode_249155, tuple_249156)
    
    # Assigning a type to the variable 'rotate' (line 1615)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1615, 8), 'rotate', result_mod_249161)
    # SSA branch for the else part of an if statement (line 1614)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a Str to a Name (line 1617):
    
    # Assigning a Str to a Name (line 1617):
    unicode_249162 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1617, 17), 'unicode', u'')
    # Assigning a type to the variable 'rotate' (line 1617)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1617, 8), 'rotate', unicode_249162)
    # SSA join for if statement (line 1614)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a BinOp to a Name (line 1618):
    
    # Assigning a BinOp to a Name (line 1618):
    unicode_249163 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1618, 16), 'unicode', u'%%%%BoundingBox: %d %d %d %d')
    
    # Obtaining an instance of the builtin type 'tuple' (line 1618)
    tuple_249164 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1618, 50), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1618)
    # Adding element type (line 1618)
    # Getting the type of 'l' (line 1618)
    l_249165 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1618, 50), 'l')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1618, 50), tuple_249164, l_249165)
    # Adding element type (line 1618)
    # Getting the type of 'b' (line 1618)
    b_249166 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1618, 53), 'b')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1618, 50), tuple_249164, b_249166)
    # Adding element type (line 1618)
    
    # Call to ceil(...): (line 1618)
    # Processing the call arguments (line 1618)
    # Getting the type of 'r' (line 1618)
    r_249169 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1618, 64), 'r', False)
    # Processing the call keyword arguments (line 1618)
    kwargs_249170 = {}
    # Getting the type of 'np' (line 1618)
    np_249167 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1618, 56), 'np', False)
    # Obtaining the member 'ceil' of a type (line 1618)
    ceil_249168 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1618, 56), np_249167, 'ceil')
    # Calling ceil(args, kwargs) (line 1618)
    ceil_call_result_249171 = invoke(stypy.reporting.localization.Localization(__file__, 1618, 56), ceil_249168, *[r_249169], **kwargs_249170)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1618, 50), tuple_249164, ceil_call_result_249171)
    # Adding element type (line 1618)
    
    # Call to ceil(...): (line 1618)
    # Processing the call arguments (line 1618)
    # Getting the type of 't' (line 1618)
    t_249174 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1618, 76), 't', False)
    # Processing the call keyword arguments (line 1618)
    kwargs_249175 = {}
    # Getting the type of 'np' (line 1618)
    np_249172 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1618, 68), 'np', False)
    # Obtaining the member 'ceil' of a type (line 1618)
    ceil_249173 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1618, 68), np_249172, 'ceil')
    # Calling ceil(args, kwargs) (line 1618)
    ceil_call_result_249176 = invoke(stypy.reporting.localization.Localization(__file__, 1618, 68), ceil_249173, *[t_249174], **kwargs_249175)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1618, 50), tuple_249164, ceil_call_result_249176)
    
    # Applying the binary operator '%' (line 1618)
    result_mod_249177 = python_operator(stypy.reporting.localization.Localization(__file__, 1618, 16), '%', unicode_249163, tuple_249164)
    
    # Assigning a type to the variable 'bbox_info' (line 1618)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1618, 4), 'bbox_info', result_mod_249177)
    
    # Assigning a BinOp to a Name (line 1619):
    
    # Assigning a BinOp to a Name (line 1619):
    unicode_249178 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1619, 22), 'unicode', u'%%%%HiResBoundingBox: %.6f %.6f %.6f %.6f')
    
    # Obtaining an instance of the builtin type 'tuple' (line 1619)
    tuple_249179 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1619, 69), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1619)
    # Adding element type (line 1619)
    # Getting the type of 'l' (line 1619)
    l_249180 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1619, 69), 'l')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1619, 69), tuple_249179, l_249180)
    # Adding element type (line 1619)
    # Getting the type of 'b' (line 1619)
    b_249181 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1619, 72), 'b')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1619, 69), tuple_249179, b_249181)
    # Adding element type (line 1619)
    # Getting the type of 'r' (line 1619)
    r_249182 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1619, 75), 'r')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1619, 69), tuple_249179, r_249182)
    # Adding element type (line 1619)
    # Getting the type of 't' (line 1619)
    t_249183 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1619, 78), 't')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1619, 69), tuple_249179, t_249183)
    
    # Applying the binary operator '%' (line 1619)
    result_mod_249184 = python_operator(stypy.reporting.localization.Localization(__file__, 1619, 22), '%', unicode_249178, tuple_249179)
    
    # Assigning a type to the variable 'hires_bbox_info' (line 1619)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1619, 4), 'hires_bbox_info', result_mod_249184)
    
    # Obtaining an instance of the builtin type 'tuple' (line 1621)
    tuple_249185 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1621, 11), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1621)
    # Adding element type (line 1621)
    
    # Call to join(...): (line 1621)
    # Processing the call arguments (line 1621)
    
    # Obtaining an instance of the builtin type 'list' (line 1621)
    list_249188 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1621, 21), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1621)
    # Adding element type (line 1621)
    # Getting the type of 'bbox_info' (line 1621)
    bbox_info_249189 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1621, 22), 'bbox_info', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1621, 21), list_249188, bbox_info_249189)
    # Adding element type (line 1621)
    # Getting the type of 'hires_bbox_info' (line 1621)
    hires_bbox_info_249190 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1621, 33), 'hires_bbox_info', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1621, 21), list_249188, hires_bbox_info_249190)
    
    # Processing the call keyword arguments (line 1621)
    kwargs_249191 = {}
    unicode_249186 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1621, 11), 'unicode', u'\n')
    # Obtaining the member 'join' of a type (line 1621)
    join_249187 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1621, 11), unicode_249186, 'join')
    # Calling join(args, kwargs) (line 1621)
    join_call_result_249192 = invoke(stypy.reporting.localization.Localization(__file__, 1621, 11), join_249187, *[list_249188], **kwargs_249191)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1621, 11), tuple_249185, join_call_result_249192)
    # Adding element type (line 1621)
    # Getting the type of 'rotate' (line 1621)
    rotate_249193 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1621, 52), 'rotate')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1621, 11), tuple_249185, rotate_249193)
    
    # Assigning a type to the variable 'stypy_return_type' (line 1621)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1621, 4), 'stypy_return_type', tuple_249185)
    
    # ################# End of 'get_bbox_header(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'get_bbox_header' in the type store
    # Getting the type of 'stypy_return_type' (line 1607)
    stypy_return_type_249194 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1607, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_249194)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'get_bbox_header'
    return stypy_return_type_249194

# Assigning a type to the variable 'get_bbox_header' (line 1607)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1607, 0), 'get_bbox_header', get_bbox_header)

@norecursion
def get_bbox(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'get_bbox'
    module_type_store = module_type_store.open_function_context('get_bbox', 1626, 0, False)
    
    # Passed parameters checking function
    get_bbox.stypy_localization = localization
    get_bbox.stypy_type_of_self = None
    get_bbox.stypy_type_store = module_type_store
    get_bbox.stypy_function_name = 'get_bbox'
    get_bbox.stypy_param_names_list = ['tmpfile', 'bbox']
    get_bbox.stypy_varargs_param_name = None
    get_bbox.stypy_kwargs_param_name = None
    get_bbox.stypy_call_defaults = defaults
    get_bbox.stypy_call_varargs = varargs
    get_bbox.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'get_bbox', ['tmpfile', 'bbox'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'get_bbox', localization, ['tmpfile', 'bbox'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'get_bbox(...)' code ##################

    unicode_249195 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1631, (-1)), 'unicode', u"\n    Use ghostscript's bbox device to find the center of the bounding box.\n    Return an appropriately sized bbox centered around that point. A bit of a\n    hack.\n    ")
    
    # Assigning a Attribute to a Name (line 1633):
    
    # Assigning a Attribute to a Name (line 1633):
    # Getting the type of 'ps_backend_helper' (line 1633)
    ps_backend_helper_249196 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1633, 13), 'ps_backend_helper')
    # Obtaining the member 'gs_exe' of a type (line 1633)
    gs_exe_249197 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1633, 13), ps_backend_helper_249196, 'gs_exe')
    # Assigning a type to the variable 'gs_exe' (line 1633)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1633, 4), 'gs_exe', gs_exe_249197)
    
    # Assigning a List to a Name (line 1634):
    
    # Assigning a List to a Name (line 1634):
    
    # Obtaining an instance of the builtin type 'list' (line 1634)
    list_249198 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1634, 14), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1634)
    # Adding element type (line 1634)
    # Getting the type of 'gs_exe' (line 1634)
    gs_exe_249199 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1634, 15), 'gs_exe')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1634, 14), list_249198, gs_exe_249199)
    # Adding element type (line 1634)
    unicode_249200 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1634, 23), 'unicode', u'-dBATCH')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1634, 14), list_249198, unicode_249200)
    # Adding element type (line 1634)
    unicode_249201 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1634, 34), 'unicode', u'-dNOPAUSE')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1634, 14), list_249198, unicode_249201)
    # Adding element type (line 1634)
    unicode_249202 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1634, 47), 'unicode', u'-sDEVICE=bbox%s')
    # Getting the type of 'tmpfile' (line 1634)
    tmpfile_249203 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1634, 70), 'tmpfile')
    # Applying the binary operator '%' (line 1634)
    result_mod_249204 = python_operator(stypy.reporting.localization.Localization(__file__, 1634, 47), '%', unicode_249202, tmpfile_249203)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1634, 14), list_249198, result_mod_249204)
    
    # Assigning a type to the variable 'command' (line 1634)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1634, 4), 'command', list_249198)
    
    # Call to report(...): (line 1635)
    # Processing the call arguments (line 1635)
    # Getting the type of 'command' (line 1635)
    command_249207 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1635, 19), 'command', False)
    unicode_249208 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1635, 28), 'unicode', u'debug')
    # Processing the call keyword arguments (line 1635)
    kwargs_249209 = {}
    # Getting the type of 'verbose' (line 1635)
    verbose_249205 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1635, 4), 'verbose', False)
    # Obtaining the member 'report' of a type (line 1635)
    report_249206 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1635, 4), verbose_249205, 'report')
    # Calling report(args, kwargs) (line 1635)
    report_call_result_249210 = invoke(stypy.reporting.localization.Localization(__file__, 1635, 4), report_249206, *[command_249207, unicode_249208], **kwargs_249209)
    
    
    # Assigning a Call to a Name (line 1636):
    
    # Assigning a Call to a Name (line 1636):
    
    # Call to Popen(...): (line 1636)
    # Processing the call arguments (line 1636)
    # Getting the type of 'command' (line 1636)
    command_249213 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1636, 25), 'command', False)
    # Processing the call keyword arguments (line 1636)
    # Getting the type of 'subprocess' (line 1636)
    subprocess_249214 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1636, 40), 'subprocess', False)
    # Obtaining the member 'PIPE' of a type (line 1636)
    PIPE_249215 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1636, 40), subprocess_249214, 'PIPE')
    keyword_249216 = PIPE_249215
    # Getting the type of 'subprocess' (line 1637)
    subprocess_249217 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1637, 32), 'subprocess', False)
    # Obtaining the member 'PIPE' of a type (line 1637)
    PIPE_249218 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1637, 32), subprocess_249217, 'PIPE')
    keyword_249219 = PIPE_249218
    # Getting the type of 'subprocess' (line 1637)
    subprocess_249220 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1637, 56), 'subprocess', False)
    # Obtaining the member 'PIPE' of a type (line 1637)
    PIPE_249221 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1637, 56), subprocess_249220, 'PIPE')
    keyword_249222 = PIPE_249221
    # Getting the type of 'True' (line 1638)
    True_249223 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1638, 35), 'True', False)
    keyword_249224 = True_249223
    kwargs_249225 = {'close_fds': keyword_249224, 'stdin': keyword_249216, 'stderr': keyword_249222, 'stdout': keyword_249219}
    # Getting the type of 'subprocess' (line 1636)
    subprocess_249211 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1636, 8), 'subprocess', False)
    # Obtaining the member 'Popen' of a type (line 1636)
    Popen_249212 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1636, 8), subprocess_249211, 'Popen')
    # Calling Popen(args, kwargs) (line 1636)
    Popen_call_result_249226 = invoke(stypy.reporting.localization.Localization(__file__, 1636, 8), Popen_249212, *[command_249213], **kwargs_249225)
    
    # Assigning a type to the variable 'p' (line 1636)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1636, 4), 'p', Popen_call_result_249226)
    
    # Assigning a Tuple to a Tuple (line 1639):
    
    # Assigning a Attribute to a Name (line 1639):
    # Getting the type of 'p' (line 1639)
    p_249227 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1639, 24), 'p')
    # Obtaining the member 'stdout' of a type (line 1639)
    stdout_249228 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1639, 24), p_249227, 'stdout')
    # Assigning a type to the variable 'tuple_assignment_243806' (line 1639)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1639, 4), 'tuple_assignment_243806', stdout_249228)
    
    # Assigning a Attribute to a Name (line 1639):
    # Getting the type of 'p' (line 1639)
    p_249229 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1639, 34), 'p')
    # Obtaining the member 'stderr' of a type (line 1639)
    stderr_249230 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1639, 34), p_249229, 'stderr')
    # Assigning a type to the variable 'tuple_assignment_243807' (line 1639)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1639, 4), 'tuple_assignment_243807', stderr_249230)
    
    # Assigning a Name to a Name (line 1639):
    # Getting the type of 'tuple_assignment_243806' (line 1639)
    tuple_assignment_243806_249231 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1639, 4), 'tuple_assignment_243806')
    # Assigning a type to the variable 'stdout' (line 1639)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1639, 5), 'stdout', tuple_assignment_243806_249231)
    
    # Assigning a Name to a Name (line 1639):
    # Getting the type of 'tuple_assignment_243807' (line 1639)
    tuple_assignment_243807_249232 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1639, 4), 'tuple_assignment_243807')
    # Assigning a type to the variable 'stderr' (line 1639)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1639, 13), 'stderr', tuple_assignment_243807_249232)
    
    # Call to report(...): (line 1640)
    # Processing the call arguments (line 1640)
    
    # Call to read(...): (line 1640)
    # Processing the call keyword arguments (line 1640)
    kwargs_249237 = {}
    # Getting the type of 'stdout' (line 1640)
    stdout_249235 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1640, 19), 'stdout', False)
    # Obtaining the member 'read' of a type (line 1640)
    read_249236 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1640, 19), stdout_249235, 'read')
    # Calling read(args, kwargs) (line 1640)
    read_call_result_249238 = invoke(stypy.reporting.localization.Localization(__file__, 1640, 19), read_249236, *[], **kwargs_249237)
    
    unicode_249239 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1640, 34), 'unicode', u'debug-annoying')
    # Processing the call keyword arguments (line 1640)
    kwargs_249240 = {}
    # Getting the type of 'verbose' (line 1640)
    verbose_249233 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1640, 4), 'verbose', False)
    # Obtaining the member 'report' of a type (line 1640)
    report_249234 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1640, 4), verbose_249233, 'report')
    # Calling report(args, kwargs) (line 1640)
    report_call_result_249241 = invoke(stypy.reporting.localization.Localization(__file__, 1640, 4), report_249234, *[read_call_result_249238, unicode_249239], **kwargs_249240)
    
    
    # Assigning a Call to a Name (line 1641):
    
    # Assigning a Call to a Name (line 1641):
    
    # Call to read(...): (line 1641)
    # Processing the call keyword arguments (line 1641)
    kwargs_249244 = {}
    # Getting the type of 'stderr' (line 1641)
    stderr_249242 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1641, 16), 'stderr', False)
    # Obtaining the member 'read' of a type (line 1641)
    read_249243 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1641, 16), stderr_249242, 'read')
    # Calling read(args, kwargs) (line 1641)
    read_call_result_249245 = invoke(stypy.reporting.localization.Localization(__file__, 1641, 16), read_249243, *[], **kwargs_249244)
    
    # Assigning a type to the variable 'bbox_info' (line 1641)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1641, 4), 'bbox_info', read_call_result_249245)
    
    # Call to report(...): (line 1642)
    # Processing the call arguments (line 1642)
    # Getting the type of 'bbox_info' (line 1642)
    bbox_info_249248 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1642, 19), 'bbox_info', False)
    unicode_249249 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1642, 30), 'unicode', u'helpful')
    # Processing the call keyword arguments (line 1642)
    kwargs_249250 = {}
    # Getting the type of 'verbose' (line 1642)
    verbose_249246 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1642, 4), 'verbose', False)
    # Obtaining the member 'report' of a type (line 1642)
    report_249247 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1642, 4), verbose_249246, 'report')
    # Calling report(args, kwargs) (line 1642)
    report_call_result_249251 = invoke(stypy.reporting.localization.Localization(__file__, 1642, 4), report_249247, *[bbox_info_249248, unicode_249249], **kwargs_249250)
    
    
    # Assigning a Call to a Name (line 1643):
    
    # Assigning a Call to a Name (line 1643):
    
    # Call to search(...): (line 1643)
    # Processing the call arguments (line 1643)
    unicode_249254 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1643, 27), 'unicode', u'%%HiResBoundingBox: .*')
    # Getting the type of 'bbox_info' (line 1643)
    bbox_info_249255 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1643, 53), 'bbox_info', False)
    # Processing the call keyword arguments (line 1643)
    kwargs_249256 = {}
    # Getting the type of 're' (line 1643)
    re_249252 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1643, 17), 're', False)
    # Obtaining the member 'search' of a type (line 1643)
    search_249253 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1643, 17), re_249252, 'search')
    # Calling search(args, kwargs) (line 1643)
    search_call_result_249257 = invoke(stypy.reporting.localization.Localization(__file__, 1643, 17), search_249253, *[unicode_249254, bbox_info_249255], **kwargs_249256)
    
    # Assigning a type to the variable 'bbox_found' (line 1643)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1643, 4), 'bbox_found', search_call_result_249257)
    
    # Getting the type of 'bbox_found' (line 1644)
    bbox_found_249258 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1644, 7), 'bbox_found')
    # Testing the type of an if condition (line 1644)
    if_condition_249259 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1644, 4), bbox_found_249258)
    # Assigning a type to the variable 'if_condition_249259' (line 1644)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1644, 4), 'if_condition_249259', if_condition_249259)
    # SSA begins for if statement (line 1644)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 1645):
    
    # Assigning a Call to a Name (line 1645):
    
    # Call to group(...): (line 1645)
    # Processing the call keyword arguments (line 1645)
    kwargs_249262 = {}
    # Getting the type of 'bbox_found' (line 1645)
    bbox_found_249260 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1645, 20), 'bbox_found', False)
    # Obtaining the member 'group' of a type (line 1645)
    group_249261 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1645, 20), bbox_found_249260, 'group')
    # Calling group(args, kwargs) (line 1645)
    group_call_result_249263 = invoke(stypy.reporting.localization.Localization(__file__, 1645, 20), group_249261, *[], **kwargs_249262)
    
    # Assigning a type to the variable 'bbox_info' (line 1645)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1645, 8), 'bbox_info', group_call_result_249263)
    # SSA branch for the else part of an if statement (line 1644)
    module_type_store.open_ssa_branch('else')
    
    # Call to RuntimeError(...): (line 1647)
    # Processing the call arguments (line 1647)
    unicode_249265 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1648, (-1)), 'unicode', u'Ghostscript was not able to extract a bounding box.Here is the Ghostscript output:\n\n%s')
    # Getting the type of 'bbox_info' (line 1648)
    bbox_info_249266 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1648, 41), 'bbox_info', False)
    # Applying the binary operator '%' (line 1648)
    result_mod_249267 = python_operator(stypy.reporting.localization.Localization(__file__, 1648, (-1)), '%', unicode_249265, bbox_info_249266)
    
    # Processing the call keyword arguments (line 1647)
    kwargs_249268 = {}
    # Getting the type of 'RuntimeError' (line 1647)
    RuntimeError_249264 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1647, 14), 'RuntimeError', False)
    # Calling RuntimeError(args, kwargs) (line 1647)
    RuntimeError_call_result_249269 = invoke(stypy.reporting.localization.Localization(__file__, 1647, 14), RuntimeError_249264, *[result_mod_249267], **kwargs_249268)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1647, 8), RuntimeError_call_result_249269, 'raise parameter', BaseException)
    # SSA join for if statement (line 1644)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a ListComp to a Tuple (line 1649):
    
    # Assigning a Subscript to a Name (line 1649):
    
    # Obtaining the type of the subscript
    int_249270 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1649, 4), 'int')
    # Calculating list comprehension
    # Calculating comprehension expression
    
    # Obtaining the type of the subscript
    int_249275 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1649, 54), 'int')
    slice_249276 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1649, 36), int_249275, None, None)
    
    # Call to split(...): (line 1649)
    # Processing the call keyword arguments (line 1649)
    kwargs_249279 = {}
    # Getting the type of 'bbox_info' (line 1649)
    bbox_info_249277 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1649, 36), 'bbox_info', False)
    # Obtaining the member 'split' of a type (line 1649)
    split_249278 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1649, 36), bbox_info_249277, 'split')
    # Calling split(args, kwargs) (line 1649)
    split_call_result_249280 = invoke(stypy.reporting.localization.Localization(__file__, 1649, 36), split_249278, *[], **kwargs_249279)
    
    # Obtaining the member '__getitem__' of a type (line 1649)
    getitem___249281 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1649, 36), split_call_result_249280, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1649)
    subscript_call_result_249282 = invoke(stypy.reporting.localization.Localization(__file__, 1649, 36), getitem___249281, slice_249276)
    
    comprehension_249283 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1649, 18), subscript_call_result_249282)
    # Assigning a type to the variable 'i' (line 1649)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1649, 18), 'i', comprehension_249283)
    
    # Call to float(...): (line 1649)
    # Processing the call arguments (line 1649)
    # Getting the type of 'i' (line 1649)
    i_249272 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1649, 24), 'i', False)
    # Processing the call keyword arguments (line 1649)
    kwargs_249273 = {}
    # Getting the type of 'float' (line 1649)
    float_249271 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1649, 18), 'float', False)
    # Calling float(args, kwargs) (line 1649)
    float_call_result_249274 = invoke(stypy.reporting.localization.Localization(__file__, 1649, 18), float_249271, *[i_249272], **kwargs_249273)
    
    list_249284 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1649, 18), 'list')
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1649, 18), list_249284, float_call_result_249274)
    # Obtaining the member '__getitem__' of a type (line 1649)
    getitem___249285 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1649, 4), list_249284, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1649)
    subscript_call_result_249286 = invoke(stypy.reporting.localization.Localization(__file__, 1649, 4), getitem___249285, int_249270)
    
    # Assigning a type to the variable 'tuple_var_assignment_243808' (line 1649)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1649, 4), 'tuple_var_assignment_243808', subscript_call_result_249286)
    
    # Assigning a Subscript to a Name (line 1649):
    
    # Obtaining the type of the subscript
    int_249287 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1649, 4), 'int')
    # Calculating list comprehension
    # Calculating comprehension expression
    
    # Obtaining the type of the subscript
    int_249292 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1649, 54), 'int')
    slice_249293 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1649, 36), int_249292, None, None)
    
    # Call to split(...): (line 1649)
    # Processing the call keyword arguments (line 1649)
    kwargs_249296 = {}
    # Getting the type of 'bbox_info' (line 1649)
    bbox_info_249294 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1649, 36), 'bbox_info', False)
    # Obtaining the member 'split' of a type (line 1649)
    split_249295 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1649, 36), bbox_info_249294, 'split')
    # Calling split(args, kwargs) (line 1649)
    split_call_result_249297 = invoke(stypy.reporting.localization.Localization(__file__, 1649, 36), split_249295, *[], **kwargs_249296)
    
    # Obtaining the member '__getitem__' of a type (line 1649)
    getitem___249298 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1649, 36), split_call_result_249297, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1649)
    subscript_call_result_249299 = invoke(stypy.reporting.localization.Localization(__file__, 1649, 36), getitem___249298, slice_249293)
    
    comprehension_249300 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1649, 18), subscript_call_result_249299)
    # Assigning a type to the variable 'i' (line 1649)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1649, 18), 'i', comprehension_249300)
    
    # Call to float(...): (line 1649)
    # Processing the call arguments (line 1649)
    # Getting the type of 'i' (line 1649)
    i_249289 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1649, 24), 'i', False)
    # Processing the call keyword arguments (line 1649)
    kwargs_249290 = {}
    # Getting the type of 'float' (line 1649)
    float_249288 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1649, 18), 'float', False)
    # Calling float(args, kwargs) (line 1649)
    float_call_result_249291 = invoke(stypy.reporting.localization.Localization(__file__, 1649, 18), float_249288, *[i_249289], **kwargs_249290)
    
    list_249301 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1649, 18), 'list')
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1649, 18), list_249301, float_call_result_249291)
    # Obtaining the member '__getitem__' of a type (line 1649)
    getitem___249302 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1649, 4), list_249301, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1649)
    subscript_call_result_249303 = invoke(stypy.reporting.localization.Localization(__file__, 1649, 4), getitem___249302, int_249287)
    
    # Assigning a type to the variable 'tuple_var_assignment_243809' (line 1649)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1649, 4), 'tuple_var_assignment_243809', subscript_call_result_249303)
    
    # Assigning a Subscript to a Name (line 1649):
    
    # Obtaining the type of the subscript
    int_249304 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1649, 4), 'int')
    # Calculating list comprehension
    # Calculating comprehension expression
    
    # Obtaining the type of the subscript
    int_249309 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1649, 54), 'int')
    slice_249310 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1649, 36), int_249309, None, None)
    
    # Call to split(...): (line 1649)
    # Processing the call keyword arguments (line 1649)
    kwargs_249313 = {}
    # Getting the type of 'bbox_info' (line 1649)
    bbox_info_249311 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1649, 36), 'bbox_info', False)
    # Obtaining the member 'split' of a type (line 1649)
    split_249312 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1649, 36), bbox_info_249311, 'split')
    # Calling split(args, kwargs) (line 1649)
    split_call_result_249314 = invoke(stypy.reporting.localization.Localization(__file__, 1649, 36), split_249312, *[], **kwargs_249313)
    
    # Obtaining the member '__getitem__' of a type (line 1649)
    getitem___249315 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1649, 36), split_call_result_249314, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1649)
    subscript_call_result_249316 = invoke(stypy.reporting.localization.Localization(__file__, 1649, 36), getitem___249315, slice_249310)
    
    comprehension_249317 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1649, 18), subscript_call_result_249316)
    # Assigning a type to the variable 'i' (line 1649)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1649, 18), 'i', comprehension_249317)
    
    # Call to float(...): (line 1649)
    # Processing the call arguments (line 1649)
    # Getting the type of 'i' (line 1649)
    i_249306 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1649, 24), 'i', False)
    # Processing the call keyword arguments (line 1649)
    kwargs_249307 = {}
    # Getting the type of 'float' (line 1649)
    float_249305 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1649, 18), 'float', False)
    # Calling float(args, kwargs) (line 1649)
    float_call_result_249308 = invoke(stypy.reporting.localization.Localization(__file__, 1649, 18), float_249305, *[i_249306], **kwargs_249307)
    
    list_249318 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1649, 18), 'list')
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1649, 18), list_249318, float_call_result_249308)
    # Obtaining the member '__getitem__' of a type (line 1649)
    getitem___249319 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1649, 4), list_249318, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1649)
    subscript_call_result_249320 = invoke(stypy.reporting.localization.Localization(__file__, 1649, 4), getitem___249319, int_249304)
    
    # Assigning a type to the variable 'tuple_var_assignment_243810' (line 1649)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1649, 4), 'tuple_var_assignment_243810', subscript_call_result_249320)
    
    # Assigning a Subscript to a Name (line 1649):
    
    # Obtaining the type of the subscript
    int_249321 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1649, 4), 'int')
    # Calculating list comprehension
    # Calculating comprehension expression
    
    # Obtaining the type of the subscript
    int_249326 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1649, 54), 'int')
    slice_249327 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1649, 36), int_249326, None, None)
    
    # Call to split(...): (line 1649)
    # Processing the call keyword arguments (line 1649)
    kwargs_249330 = {}
    # Getting the type of 'bbox_info' (line 1649)
    bbox_info_249328 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1649, 36), 'bbox_info', False)
    # Obtaining the member 'split' of a type (line 1649)
    split_249329 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1649, 36), bbox_info_249328, 'split')
    # Calling split(args, kwargs) (line 1649)
    split_call_result_249331 = invoke(stypy.reporting.localization.Localization(__file__, 1649, 36), split_249329, *[], **kwargs_249330)
    
    # Obtaining the member '__getitem__' of a type (line 1649)
    getitem___249332 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1649, 36), split_call_result_249331, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1649)
    subscript_call_result_249333 = invoke(stypy.reporting.localization.Localization(__file__, 1649, 36), getitem___249332, slice_249327)
    
    comprehension_249334 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1649, 18), subscript_call_result_249333)
    # Assigning a type to the variable 'i' (line 1649)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1649, 18), 'i', comprehension_249334)
    
    # Call to float(...): (line 1649)
    # Processing the call arguments (line 1649)
    # Getting the type of 'i' (line 1649)
    i_249323 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1649, 24), 'i', False)
    # Processing the call keyword arguments (line 1649)
    kwargs_249324 = {}
    # Getting the type of 'float' (line 1649)
    float_249322 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1649, 18), 'float', False)
    # Calling float(args, kwargs) (line 1649)
    float_call_result_249325 = invoke(stypy.reporting.localization.Localization(__file__, 1649, 18), float_249322, *[i_249323], **kwargs_249324)
    
    list_249335 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1649, 18), 'list')
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1649, 18), list_249335, float_call_result_249325)
    # Obtaining the member '__getitem__' of a type (line 1649)
    getitem___249336 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1649, 4), list_249335, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1649)
    subscript_call_result_249337 = invoke(stypy.reporting.localization.Localization(__file__, 1649, 4), getitem___249336, int_249321)
    
    # Assigning a type to the variable 'tuple_var_assignment_243811' (line 1649)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1649, 4), 'tuple_var_assignment_243811', subscript_call_result_249337)
    
    # Assigning a Name to a Name (line 1649):
    # Getting the type of 'tuple_var_assignment_243808' (line 1649)
    tuple_var_assignment_243808_249338 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1649, 4), 'tuple_var_assignment_243808')
    # Assigning a type to the variable 'l' (line 1649)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1649, 4), 'l', tuple_var_assignment_243808_249338)
    
    # Assigning a Name to a Name (line 1649):
    # Getting the type of 'tuple_var_assignment_243809' (line 1649)
    tuple_var_assignment_243809_249339 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1649, 4), 'tuple_var_assignment_243809')
    # Assigning a type to the variable 'b' (line 1649)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1649, 7), 'b', tuple_var_assignment_243809_249339)
    
    # Assigning a Name to a Name (line 1649):
    # Getting the type of 'tuple_var_assignment_243810' (line 1649)
    tuple_var_assignment_243810_249340 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1649, 4), 'tuple_var_assignment_243810')
    # Assigning a type to the variable 'r' (line 1649)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1649, 10), 'r', tuple_var_assignment_243810_249340)
    
    # Assigning a Name to a Name (line 1649):
    # Getting the type of 'tuple_var_assignment_243811' (line 1649)
    tuple_var_assignment_243811_249341 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1649, 4), 'tuple_var_assignment_243811')
    # Assigning a type to the variable 't' (line 1649)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1649, 13), 't', tuple_var_assignment_243811_249341)
    
    # Type idiom detected: calculating its left and rigth part (line 1655)
    # Getting the type of 'bbox' (line 1655)
    bbox_249342 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1655, 7), 'bbox')
    # Getting the type of 'None' (line 1655)
    None_249343 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1655, 15), 'None')
    
    (may_be_249344, more_types_in_union_249345) = may_be_none(bbox_249342, None_249343)

    if may_be_249344:

        if more_types_in_union_249345:
            # Runtime conditional SSA (line 1655)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        
        # Assigning a Tuple to a Tuple (line 1656):
        
        # Assigning a BinOp to a Name (line 1656):
        # Getting the type of 'l' (line 1656)
        l_249346 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1656, 22), 'l')
        int_249347 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1656, 24), 'int')
        # Applying the binary operator '-' (line 1656)
        result_sub_249348 = python_operator(stypy.reporting.localization.Localization(__file__, 1656, 22), '-', l_249346, int_249347)
        
        # Assigning a type to the variable 'tuple_assignment_243812' (line 1656)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1656, 8), 'tuple_assignment_243812', result_sub_249348)
        
        # Assigning a BinOp to a Name (line 1656):
        # Getting the type of 'b' (line 1656)
        b_249349 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1656, 27), 'b')
        int_249350 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1656, 29), 'int')
        # Applying the binary operator '-' (line 1656)
        result_sub_249351 = python_operator(stypy.reporting.localization.Localization(__file__, 1656, 27), '-', b_249349, int_249350)
        
        # Assigning a type to the variable 'tuple_assignment_243813' (line 1656)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1656, 8), 'tuple_assignment_243813', result_sub_249351)
        
        # Assigning a BinOp to a Name (line 1656):
        # Getting the type of 'r' (line 1656)
        r_249352 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1656, 32), 'r')
        int_249353 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1656, 34), 'int')
        # Applying the binary operator '+' (line 1656)
        result_add_249354 = python_operator(stypy.reporting.localization.Localization(__file__, 1656, 32), '+', r_249352, int_249353)
        
        # Assigning a type to the variable 'tuple_assignment_243814' (line 1656)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1656, 8), 'tuple_assignment_243814', result_add_249354)
        
        # Assigning a BinOp to a Name (line 1656):
        # Getting the type of 't' (line 1656)
        t_249355 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1656, 37), 't')
        int_249356 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1656, 39), 'int')
        # Applying the binary operator '+' (line 1656)
        result_add_249357 = python_operator(stypy.reporting.localization.Localization(__file__, 1656, 37), '+', t_249355, int_249356)
        
        # Assigning a type to the variable 'tuple_assignment_243815' (line 1656)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1656, 8), 'tuple_assignment_243815', result_add_249357)
        
        # Assigning a Name to a Name (line 1656):
        # Getting the type of 'tuple_assignment_243812' (line 1656)
        tuple_assignment_243812_249358 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1656, 8), 'tuple_assignment_243812')
        # Assigning a type to the variable 'l' (line 1656)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1656, 8), 'l', tuple_assignment_243812_249358)
        
        # Assigning a Name to a Name (line 1656):
        # Getting the type of 'tuple_assignment_243813' (line 1656)
        tuple_assignment_243813_249359 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1656, 8), 'tuple_assignment_243813')
        # Assigning a type to the variable 'b' (line 1656)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1656, 11), 'b', tuple_assignment_243813_249359)
        
        # Assigning a Name to a Name (line 1656):
        # Getting the type of 'tuple_assignment_243814' (line 1656)
        tuple_assignment_243814_249360 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1656, 8), 'tuple_assignment_243814')
        # Assigning a type to the variable 'r' (line 1656)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1656, 14), 'r', tuple_assignment_243814_249360)
        
        # Assigning a Name to a Name (line 1656):
        # Getting the type of 'tuple_assignment_243815' (line 1656)
        tuple_assignment_243815_249361 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1656, 8), 'tuple_assignment_243815')
        # Assigning a type to the variable 't' (line 1656)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1656, 17), 't', tuple_assignment_243815_249361)

        if more_types_in_union_249345:
            # Runtime conditional SSA for else branch (line 1655)
            module_type_store.open_ssa_branch('idiom else')



    if ((not may_be_249344) or more_types_in_union_249345):
        
        # Assigning a BinOp to a Name (line 1658):
        
        # Assigning a BinOp to a Name (line 1658):
        # Getting the type of 'l' (line 1658)
        l_249362 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1658, 13), 'l')
        # Getting the type of 'r' (line 1658)
        r_249363 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1658, 15), 'r')
        # Applying the binary operator '+' (line 1658)
        result_add_249364 = python_operator(stypy.reporting.localization.Localization(__file__, 1658, 13), '+', l_249362, r_249363)
        
        int_249365 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1658, 18), 'int')
        # Applying the binary operator 'div' (line 1658)
        result_div_249366 = python_operator(stypy.reporting.localization.Localization(__file__, 1658, 12), 'div', result_add_249364, int_249365)
        
        # Assigning a type to the variable 'x' (line 1658)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1658, 8), 'x', result_div_249366)
        
        # Assigning a BinOp to a Name (line 1659):
        
        # Assigning a BinOp to a Name (line 1659):
        # Getting the type of 'b' (line 1659)
        b_249367 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1659, 13), 'b')
        # Getting the type of 't' (line 1659)
        t_249368 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1659, 15), 't')
        # Applying the binary operator '+' (line 1659)
        result_add_249369 = python_operator(stypy.reporting.localization.Localization(__file__, 1659, 13), '+', b_249367, t_249368)
        
        int_249370 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1659, 18), 'int')
        # Applying the binary operator 'div' (line 1659)
        result_div_249371 = python_operator(stypy.reporting.localization.Localization(__file__, 1659, 12), 'div', result_add_249369, int_249370)
        
        # Assigning a type to the variable 'y' (line 1659)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1659, 8), 'y', result_div_249371)
        
        # Assigning a BinOp to a Name (line 1660):
        
        # Assigning a BinOp to a Name (line 1660):
        
        # Obtaining the type of the subscript
        int_249372 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1660, 19), 'int')
        # Getting the type of 'bbox' (line 1660)
        bbox_249373 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1660, 14), 'bbox')
        # Obtaining the member '__getitem__' of a type (line 1660)
        getitem___249374 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1660, 14), bbox_249373, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1660)
        subscript_call_result_249375 = invoke(stypy.reporting.localization.Localization(__file__, 1660, 14), getitem___249374, int_249372)
        
        
        # Obtaining the type of the subscript
        int_249376 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1660, 27), 'int')
        # Getting the type of 'bbox' (line 1660)
        bbox_249377 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1660, 22), 'bbox')
        # Obtaining the member '__getitem__' of a type (line 1660)
        getitem___249378 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1660, 22), bbox_249377, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1660)
        subscript_call_result_249379 = invoke(stypy.reporting.localization.Localization(__file__, 1660, 22), getitem___249378, int_249376)
        
        # Applying the binary operator '-' (line 1660)
        result_sub_249380 = python_operator(stypy.reporting.localization.Localization(__file__, 1660, 14), '-', subscript_call_result_249375, subscript_call_result_249379)
        
        int_249381 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1660, 31), 'int')
        # Applying the binary operator 'div' (line 1660)
        result_div_249382 = python_operator(stypy.reporting.localization.Localization(__file__, 1660, 13), 'div', result_sub_249380, int_249381)
        
        # Assigning a type to the variable 'dx' (line 1660)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1660, 8), 'dx', result_div_249382)
        
        # Assigning a BinOp to a Name (line 1661):
        
        # Assigning a BinOp to a Name (line 1661):
        
        # Obtaining the type of the subscript
        int_249383 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1661, 19), 'int')
        # Getting the type of 'bbox' (line 1661)
        bbox_249384 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1661, 14), 'bbox')
        # Obtaining the member '__getitem__' of a type (line 1661)
        getitem___249385 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1661, 14), bbox_249384, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1661)
        subscript_call_result_249386 = invoke(stypy.reporting.localization.Localization(__file__, 1661, 14), getitem___249385, int_249383)
        
        
        # Obtaining the type of the subscript
        int_249387 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1661, 27), 'int')
        # Getting the type of 'bbox' (line 1661)
        bbox_249388 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1661, 22), 'bbox')
        # Obtaining the member '__getitem__' of a type (line 1661)
        getitem___249389 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1661, 22), bbox_249388, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1661)
        subscript_call_result_249390 = invoke(stypy.reporting.localization.Localization(__file__, 1661, 22), getitem___249389, int_249387)
        
        # Applying the binary operator '-' (line 1661)
        result_sub_249391 = python_operator(stypy.reporting.localization.Localization(__file__, 1661, 14), '-', subscript_call_result_249386, subscript_call_result_249390)
        
        int_249392 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1661, 31), 'int')
        # Applying the binary operator 'div' (line 1661)
        result_div_249393 = python_operator(stypy.reporting.localization.Localization(__file__, 1661, 13), 'div', result_sub_249391, int_249392)
        
        # Assigning a type to the variable 'dy' (line 1661)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1661, 8), 'dy', result_div_249393)
        
        # Assigning a Tuple to a Tuple (line 1662):
        
        # Assigning a BinOp to a Name (line 1662):
        # Getting the type of 'x' (line 1662)
        x_249394 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1662, 19), 'x')
        # Getting the type of 'dx' (line 1662)
        dx_249395 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1662, 21), 'dx')
        # Applying the binary operator '-' (line 1662)
        result_sub_249396 = python_operator(stypy.reporting.localization.Localization(__file__, 1662, 19), '-', x_249394, dx_249395)
        
        # Assigning a type to the variable 'tuple_assignment_243816' (line 1662)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1662, 8), 'tuple_assignment_243816', result_sub_249396)
        
        # Assigning a BinOp to a Name (line 1662):
        # Getting the type of 'y' (line 1662)
        y_249397 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1662, 25), 'y')
        # Getting the type of 'dy' (line 1662)
        dy_249398 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1662, 27), 'dy')
        # Applying the binary operator '-' (line 1662)
        result_sub_249399 = python_operator(stypy.reporting.localization.Localization(__file__, 1662, 25), '-', y_249397, dy_249398)
        
        # Assigning a type to the variable 'tuple_assignment_243817' (line 1662)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1662, 8), 'tuple_assignment_243817', result_sub_249399)
        
        # Assigning a BinOp to a Name (line 1662):
        # Getting the type of 'x' (line 1662)
        x_249400 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1662, 31), 'x')
        # Getting the type of 'dx' (line 1662)
        dx_249401 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1662, 33), 'dx')
        # Applying the binary operator '+' (line 1662)
        result_add_249402 = python_operator(stypy.reporting.localization.Localization(__file__, 1662, 31), '+', x_249400, dx_249401)
        
        # Assigning a type to the variable 'tuple_assignment_243818' (line 1662)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1662, 8), 'tuple_assignment_243818', result_add_249402)
        
        # Assigning a BinOp to a Name (line 1662):
        # Getting the type of 'y' (line 1662)
        y_249403 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1662, 37), 'y')
        # Getting the type of 'dy' (line 1662)
        dy_249404 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1662, 39), 'dy')
        # Applying the binary operator '+' (line 1662)
        result_add_249405 = python_operator(stypy.reporting.localization.Localization(__file__, 1662, 37), '+', y_249403, dy_249404)
        
        # Assigning a type to the variable 'tuple_assignment_243819' (line 1662)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1662, 8), 'tuple_assignment_243819', result_add_249405)
        
        # Assigning a Name to a Name (line 1662):
        # Getting the type of 'tuple_assignment_243816' (line 1662)
        tuple_assignment_243816_249406 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1662, 8), 'tuple_assignment_243816')
        # Assigning a type to the variable 'l' (line 1662)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1662, 8), 'l', tuple_assignment_243816_249406)
        
        # Assigning a Name to a Name (line 1662):
        # Getting the type of 'tuple_assignment_243817' (line 1662)
        tuple_assignment_243817_249407 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1662, 8), 'tuple_assignment_243817')
        # Assigning a type to the variable 'b' (line 1662)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1662, 10), 'b', tuple_assignment_243817_249407)
        
        # Assigning a Name to a Name (line 1662):
        # Getting the type of 'tuple_assignment_243818' (line 1662)
        tuple_assignment_243818_249408 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1662, 8), 'tuple_assignment_243818')
        # Assigning a type to the variable 'r' (line 1662)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1662, 12), 'r', tuple_assignment_243818_249408)
        
        # Assigning a Name to a Name (line 1662):
        # Getting the type of 'tuple_assignment_243819' (line 1662)
        tuple_assignment_243819_249409 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1662, 8), 'tuple_assignment_243819')
        # Assigning a type to the variable 't' (line 1662)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1662, 14), 't', tuple_assignment_243819_249409)

        if (may_be_249344 and more_types_in_union_249345):
            # SSA join for if statement (line 1655)
            module_type_store = module_type_store.join_ssa_context()


    
    
    # Assigning a BinOp to a Name (line 1664):
    
    # Assigning a BinOp to a Name (line 1664):
    unicode_249410 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1664, 16), 'unicode', u'%%%%BoundingBox: %d %d %d %d')
    
    # Obtaining an instance of the builtin type 'tuple' (line 1664)
    tuple_249411 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1664, 50), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1664)
    # Adding element type (line 1664)
    # Getting the type of 'l' (line 1664)
    l_249412 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1664, 50), 'l')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1664, 50), tuple_249411, l_249412)
    # Adding element type (line 1664)
    # Getting the type of 'b' (line 1664)
    b_249413 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1664, 53), 'b')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1664, 50), tuple_249411, b_249413)
    # Adding element type (line 1664)
    
    # Call to ceil(...): (line 1664)
    # Processing the call arguments (line 1664)
    # Getting the type of 'r' (line 1664)
    r_249416 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1664, 64), 'r', False)
    # Processing the call keyword arguments (line 1664)
    kwargs_249417 = {}
    # Getting the type of 'np' (line 1664)
    np_249414 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1664, 56), 'np', False)
    # Obtaining the member 'ceil' of a type (line 1664)
    ceil_249415 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1664, 56), np_249414, 'ceil')
    # Calling ceil(args, kwargs) (line 1664)
    ceil_call_result_249418 = invoke(stypy.reporting.localization.Localization(__file__, 1664, 56), ceil_249415, *[r_249416], **kwargs_249417)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1664, 50), tuple_249411, ceil_call_result_249418)
    # Adding element type (line 1664)
    
    # Call to ceil(...): (line 1664)
    # Processing the call arguments (line 1664)
    # Getting the type of 't' (line 1664)
    t_249421 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1664, 76), 't', False)
    # Processing the call keyword arguments (line 1664)
    kwargs_249422 = {}
    # Getting the type of 'np' (line 1664)
    np_249419 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1664, 68), 'np', False)
    # Obtaining the member 'ceil' of a type (line 1664)
    ceil_249420 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1664, 68), np_249419, 'ceil')
    # Calling ceil(args, kwargs) (line 1664)
    ceil_call_result_249423 = invoke(stypy.reporting.localization.Localization(__file__, 1664, 68), ceil_249420, *[t_249421], **kwargs_249422)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1664, 50), tuple_249411, ceil_call_result_249423)
    
    # Applying the binary operator '%' (line 1664)
    result_mod_249424 = python_operator(stypy.reporting.localization.Localization(__file__, 1664, 16), '%', unicode_249410, tuple_249411)
    
    # Assigning a type to the variable 'bbox_info' (line 1664)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1664, 4), 'bbox_info', result_mod_249424)
    
    # Assigning a BinOp to a Name (line 1665):
    
    # Assigning a BinOp to a Name (line 1665):
    unicode_249425 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1665, 22), 'unicode', u'%%%%HiResBoundingBox: %.6f %.6f %.6f %.6f')
    
    # Obtaining an instance of the builtin type 'tuple' (line 1665)
    tuple_249426 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1665, 69), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1665)
    # Adding element type (line 1665)
    # Getting the type of 'l' (line 1665)
    l_249427 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1665, 69), 'l')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1665, 69), tuple_249426, l_249427)
    # Adding element type (line 1665)
    # Getting the type of 'b' (line 1665)
    b_249428 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1665, 72), 'b')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1665, 69), tuple_249426, b_249428)
    # Adding element type (line 1665)
    # Getting the type of 'r' (line 1665)
    r_249429 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1665, 75), 'r')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1665, 69), tuple_249426, r_249429)
    # Adding element type (line 1665)
    # Getting the type of 't' (line 1665)
    t_249430 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1665, 78), 't')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1665, 69), tuple_249426, t_249430)
    
    # Applying the binary operator '%' (line 1665)
    result_mod_249431 = python_operator(stypy.reporting.localization.Localization(__file__, 1665, 22), '%', unicode_249425, tuple_249426)
    
    # Assigning a type to the variable 'hires_bbox_info' (line 1665)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1665, 4), 'hires_bbox_info', result_mod_249431)
    
    # Call to join(...): (line 1667)
    # Processing the call arguments (line 1667)
    
    # Obtaining an instance of the builtin type 'list' (line 1667)
    list_249434 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1667, 21), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1667)
    # Adding element type (line 1667)
    # Getting the type of 'bbox_info' (line 1667)
    bbox_info_249435 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1667, 22), 'bbox_info', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1667, 21), list_249434, bbox_info_249435)
    # Adding element type (line 1667)
    # Getting the type of 'hires_bbox_info' (line 1667)
    hires_bbox_info_249436 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1667, 33), 'hires_bbox_info', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1667, 21), list_249434, hires_bbox_info_249436)
    
    # Processing the call keyword arguments (line 1667)
    kwargs_249437 = {}
    unicode_249432 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1667, 11), 'unicode', u'\n')
    # Obtaining the member 'join' of a type (line 1667)
    join_249433 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1667, 11), unicode_249432, 'join')
    # Calling join(args, kwargs) (line 1667)
    join_call_result_249438 = invoke(stypy.reporting.localization.Localization(__file__, 1667, 11), join_249433, *[list_249434], **kwargs_249437)
    
    # Assigning a type to the variable 'stypy_return_type' (line 1667)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1667, 4), 'stypy_return_type', join_call_result_249438)
    
    # ################# End of 'get_bbox(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'get_bbox' in the type store
    # Getting the type of 'stypy_return_type' (line 1626)
    stypy_return_type_249439 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1626, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_249439)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'get_bbox'
    return stypy_return_type_249439

# Assigning a type to the variable 'get_bbox' (line 1626)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1626, 0), 'get_bbox', get_bbox)

@norecursion
def pstoeps(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    # Getting the type of 'None' (line 1670)
    None_249440 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1670, 26), 'None')
    # Getting the type of 'False' (line 1670)
    False_249441 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1670, 40), 'False')
    defaults = [None_249440, False_249441]
    # Create a new context for function 'pstoeps'
    module_type_store = module_type_store.open_function_context('pstoeps', 1670, 0, False)
    
    # Passed parameters checking function
    pstoeps.stypy_localization = localization
    pstoeps.stypy_type_of_self = None
    pstoeps.stypy_type_store = module_type_store
    pstoeps.stypy_function_name = 'pstoeps'
    pstoeps.stypy_param_names_list = ['tmpfile', 'bbox', 'rotated']
    pstoeps.stypy_varargs_param_name = None
    pstoeps.stypy_kwargs_param_name = None
    pstoeps.stypy_call_defaults = defaults
    pstoeps.stypy_call_varargs = varargs
    pstoeps.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'pstoeps', ['tmpfile', 'bbox', 'rotated'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'pstoeps', localization, ['tmpfile', 'bbox', 'rotated'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'pstoeps(...)' code ##################

    unicode_249442 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1675, (-1)), 'unicode', u'\n    Convert the postscript to encapsulated postscript.  The bbox of\n    the eps file will be replaced with the given *bbox* argument. If\n    None, original bbox will be used.\n    ')
    
    # Getting the type of 'bbox' (line 1678)
    bbox_249443 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1678, 7), 'bbox')
    # Testing the type of an if condition (line 1678)
    if_condition_249444 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1678, 4), bbox_249443)
    # Assigning a type to the variable 'if_condition_249444' (line 1678)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1678, 4), 'if_condition_249444', if_condition_249444)
    # SSA begins for if statement (line 1678)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Tuple (line 1679):
    
    # Assigning a Call to a Name:
    
    # Call to get_bbox_header(...): (line 1679)
    # Processing the call arguments (line 1679)
    # Getting the type of 'bbox' (line 1679)
    bbox_249446 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1679, 44), 'bbox', False)
    # Processing the call keyword arguments (line 1679)
    # Getting the type of 'rotated' (line 1679)
    rotated_249447 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1679, 58), 'rotated', False)
    keyword_249448 = rotated_249447
    kwargs_249449 = {'rotated': keyword_249448}
    # Getting the type of 'get_bbox_header' (line 1679)
    get_bbox_header_249445 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1679, 28), 'get_bbox_header', False)
    # Calling get_bbox_header(args, kwargs) (line 1679)
    get_bbox_header_call_result_249450 = invoke(stypy.reporting.localization.Localization(__file__, 1679, 28), get_bbox_header_249445, *[bbox_249446], **kwargs_249449)
    
    # Assigning a type to the variable 'call_assignment_243820' (line 1679)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1679, 8), 'call_assignment_243820', get_bbox_header_call_result_249450)
    
    # Assigning a Call to a Name (line 1679):
    
    # Call to __getitem__(...):
    # Processing the call arguments
    int_249453 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1679, 8), 'int')
    # Processing the call keyword arguments
    kwargs_249454 = {}
    # Getting the type of 'call_assignment_243820' (line 1679)
    call_assignment_243820_249451 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1679, 8), 'call_assignment_243820', False)
    # Obtaining the member '__getitem__' of a type (line 1679)
    getitem___249452 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1679, 8), call_assignment_243820_249451, '__getitem__')
    # Calling __getitem__(args, kwargs)
    getitem___call_result_249455 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___249452, *[int_249453], **kwargs_249454)
    
    # Assigning a type to the variable 'call_assignment_243821' (line 1679)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1679, 8), 'call_assignment_243821', getitem___call_result_249455)
    
    # Assigning a Name to a Name (line 1679):
    # Getting the type of 'call_assignment_243821' (line 1679)
    call_assignment_243821_249456 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1679, 8), 'call_assignment_243821')
    # Assigning a type to the variable 'bbox_info' (line 1679)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1679, 8), 'bbox_info', call_assignment_243821_249456)
    
    # Assigning a Call to a Name (line 1679):
    
    # Call to __getitem__(...):
    # Processing the call arguments
    int_249459 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1679, 8), 'int')
    # Processing the call keyword arguments
    kwargs_249460 = {}
    # Getting the type of 'call_assignment_243820' (line 1679)
    call_assignment_243820_249457 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1679, 8), 'call_assignment_243820', False)
    # Obtaining the member '__getitem__' of a type (line 1679)
    getitem___249458 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1679, 8), call_assignment_243820_249457, '__getitem__')
    # Calling __getitem__(args, kwargs)
    getitem___call_result_249461 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___249458, *[int_249459], **kwargs_249460)
    
    # Assigning a type to the variable 'call_assignment_243822' (line 1679)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1679, 8), 'call_assignment_243822', getitem___call_result_249461)
    
    # Assigning a Name to a Name (line 1679):
    # Getting the type of 'call_assignment_243822' (line 1679)
    call_assignment_243822_249462 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1679, 8), 'call_assignment_243822')
    # Assigning a type to the variable 'rotate' (line 1679)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1679, 19), 'rotate', call_assignment_243822_249462)
    # SSA branch for the else part of an if statement (line 1678)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a Tuple to a Tuple (line 1681):
    
    # Assigning a Name to a Name (line 1681):
    # Getting the type of 'None' (line 1681)
    None_249463 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1681, 28), 'None')
    # Assigning a type to the variable 'tuple_assignment_243823' (line 1681)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1681, 8), 'tuple_assignment_243823', None_249463)
    
    # Assigning a Name to a Name (line 1681):
    # Getting the type of 'None' (line 1681)
    None_249464 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1681, 34), 'None')
    # Assigning a type to the variable 'tuple_assignment_243824' (line 1681)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1681, 8), 'tuple_assignment_243824', None_249464)
    
    # Assigning a Name to a Name (line 1681):
    # Getting the type of 'tuple_assignment_243823' (line 1681)
    tuple_assignment_243823_249465 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1681, 8), 'tuple_assignment_243823')
    # Assigning a type to the variable 'bbox_info' (line 1681)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1681, 8), 'bbox_info', tuple_assignment_243823_249465)
    
    # Assigning a Name to a Name (line 1681):
    # Getting the type of 'tuple_assignment_243824' (line 1681)
    tuple_assignment_243824_249466 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1681, 8), 'tuple_assignment_243824')
    # Assigning a type to the variable 'rotate' (line 1681)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1681, 19), 'rotate', tuple_assignment_243824_249466)
    # SSA join for if statement (line 1678)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a BinOp to a Name (line 1683):
    
    # Assigning a BinOp to a Name (line 1683):
    # Getting the type of 'tmpfile' (line 1683)
    tmpfile_249467 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1683, 14), 'tmpfile')
    unicode_249468 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1683, 24), 'unicode', u'.eps')
    # Applying the binary operator '+' (line 1683)
    result_add_249469 = python_operator(stypy.reporting.localization.Localization(__file__, 1683, 14), '+', tmpfile_249467, unicode_249468)
    
    # Assigning a type to the variable 'epsfile' (line 1683)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1683, 4), 'epsfile', result_add_249469)
    
    # Call to open(...): (line 1684)
    # Processing the call arguments (line 1684)
    # Getting the type of 'epsfile' (line 1684)
    epsfile_249472 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1684, 17), 'epsfile', False)
    unicode_249473 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1684, 26), 'unicode', u'wb')
    # Processing the call keyword arguments (line 1684)
    kwargs_249474 = {}
    # Getting the type of 'io' (line 1684)
    io_249470 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1684, 9), 'io', False)
    # Obtaining the member 'open' of a type (line 1684)
    open_249471 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1684, 9), io_249470, 'open')
    # Calling open(args, kwargs) (line 1684)
    open_call_result_249475 = invoke(stypy.reporting.localization.Localization(__file__, 1684, 9), open_249471, *[epsfile_249472, unicode_249473], **kwargs_249474)
    
    with_249476 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 1684, 9), open_call_result_249475, 'with parameter', '__enter__', '__exit__')

    if with_249476:
        # Calling the __enter__ method to initiate a with section
        # Obtaining the member '__enter__' of a type (line 1684)
        enter___249477 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1684, 9), open_call_result_249475, '__enter__')
        with_enter_249478 = invoke(stypy.reporting.localization.Localization(__file__, 1684, 9), enter___249477)
        # Assigning a type to the variable 'epsh' (line 1684)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1684, 9), 'epsh', with_enter_249478)
        
        # Call to open(...): (line 1684)
        # Processing the call arguments (line 1684)
        # Getting the type of 'tmpfile' (line 1684)
        tmpfile_249481 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1684, 49), 'tmpfile', False)
        unicode_249482 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1684, 58), 'unicode', u'rb')
        # Processing the call keyword arguments (line 1684)
        kwargs_249483 = {}
        # Getting the type of 'io' (line 1684)
        io_249479 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1684, 41), 'io', False)
        # Obtaining the member 'open' of a type (line 1684)
        open_249480 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1684, 41), io_249479, 'open')
        # Calling open(args, kwargs) (line 1684)
        open_call_result_249484 = invoke(stypy.reporting.localization.Localization(__file__, 1684, 41), open_249480, *[tmpfile_249481, unicode_249482], **kwargs_249483)
        
        with_249485 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 1684, 41), open_call_result_249484, 'with parameter', '__enter__', '__exit__')

        if with_249485:
            # Calling the __enter__ method to initiate a with section
            # Obtaining the member '__enter__' of a type (line 1684)
            enter___249486 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1684, 41), open_call_result_249484, '__enter__')
            with_enter_249487 = invoke(stypy.reporting.localization.Localization(__file__, 1684, 41), enter___249486)
            # Assigning a type to the variable 'tmph' (line 1684)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1684, 41), 'tmph', with_enter_249487)
            
            # Assigning a Attribute to a Name (line 1685):
            
            # Assigning a Attribute to a Name (line 1685):
            # Getting the type of 'epsh' (line 1685)
            epsh_249488 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1685, 16), 'epsh')
            # Obtaining the member 'write' of a type (line 1685)
            write_249489 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1685, 16), epsh_249488, 'write')
            # Assigning a type to the variable 'write' (line 1685)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1685, 8), 'write', write_249489)
            
            # Getting the type of 'tmph' (line 1687)
            tmph_249490 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1687, 20), 'tmph')
            # Testing the type of a for loop iterable (line 1687)
            is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1687, 8), tmph_249490)
            # Getting the type of the for loop variable (line 1687)
            for_loop_var_249491 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1687, 8), tmph_249490)
            # Assigning a type to the variable 'line' (line 1687)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1687, 8), 'line', for_loop_var_249491)
            # SSA begins for a for statement (line 1687)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
            
            
            # Call to startswith(...): (line 1688)
            # Processing the call arguments (line 1688)
            str_249494 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1688, 31), 'str', '%!PS')
            # Processing the call keyword arguments (line 1688)
            kwargs_249495 = {}
            # Getting the type of 'line' (line 1688)
            line_249492 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1688, 15), 'line', False)
            # Obtaining the member 'startswith' of a type (line 1688)
            startswith_249493 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1688, 15), line_249492, 'startswith')
            # Calling startswith(args, kwargs) (line 1688)
            startswith_call_result_249496 = invoke(stypy.reporting.localization.Localization(__file__, 1688, 15), startswith_249493, *[str_249494], **kwargs_249495)
            
            # Testing the type of an if condition (line 1688)
            if_condition_249497 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1688, 12), startswith_call_result_249496)
            # Assigning a type to the variable 'if_condition_249497' (line 1688)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1688, 12), 'if_condition_249497', if_condition_249497)
            # SSA begins for if statement (line 1688)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Call to write(...): (line 1689)
            # Processing the call arguments (line 1689)
            str_249499 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1689, 22), 'str', '%!PS-Adobe-3.0 EPSF-3.0\n')
            # Processing the call keyword arguments (line 1689)
            kwargs_249500 = {}
            # Getting the type of 'write' (line 1689)
            write_249498 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1689, 16), 'write', False)
            # Calling write(args, kwargs) (line 1689)
            write_call_result_249501 = invoke(stypy.reporting.localization.Localization(__file__, 1689, 16), write_249498, *[str_249499], **kwargs_249500)
            
            
            # Getting the type of 'bbox' (line 1690)
            bbox_249502 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1690, 19), 'bbox')
            # Testing the type of an if condition (line 1690)
            if_condition_249503 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1690, 16), bbox_249502)
            # Assigning a type to the variable 'if_condition_249503' (line 1690)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1690, 16), 'if_condition_249503', if_condition_249503)
            # SSA begins for if statement (line 1690)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Call to write(...): (line 1691)
            # Processing the call arguments (line 1691)
            
            # Call to encode(...): (line 1691)
            # Processing the call arguments (line 1691)
            unicode_249507 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1691, 43), 'unicode', u'ascii')
            # Processing the call keyword arguments (line 1691)
            kwargs_249508 = {}
            # Getting the type of 'bbox_info' (line 1691)
            bbox_info_249505 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1691, 26), 'bbox_info', False)
            # Obtaining the member 'encode' of a type (line 1691)
            encode_249506 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1691, 26), bbox_info_249505, 'encode')
            # Calling encode(args, kwargs) (line 1691)
            encode_call_result_249509 = invoke(stypy.reporting.localization.Localization(__file__, 1691, 26), encode_249506, *[unicode_249507], **kwargs_249508)
            
            str_249510 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1691, 54), 'str', '\n')
            # Applying the binary operator '+' (line 1691)
            result_add_249511 = python_operator(stypy.reporting.localization.Localization(__file__, 1691, 26), '+', encode_call_result_249509, str_249510)
            
            # Processing the call keyword arguments (line 1691)
            kwargs_249512 = {}
            # Getting the type of 'write' (line 1691)
            write_249504 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1691, 20), 'write', False)
            # Calling write(args, kwargs) (line 1691)
            write_call_result_249513 = invoke(stypy.reporting.localization.Localization(__file__, 1691, 20), write_249504, *[result_add_249511], **kwargs_249512)
            
            # SSA join for if statement (line 1690)
            module_type_store = module_type_store.join_ssa_context()
            
            # SSA branch for the else part of an if statement (line 1688)
            module_type_store.open_ssa_branch('else')
            
            
            # Call to startswith(...): (line 1692)
            # Processing the call arguments (line 1692)
            str_249516 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1692, 33), 'str', '%%EndComments')
            # Processing the call keyword arguments (line 1692)
            kwargs_249517 = {}
            # Getting the type of 'line' (line 1692)
            line_249514 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1692, 17), 'line', False)
            # Obtaining the member 'startswith' of a type (line 1692)
            startswith_249515 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1692, 17), line_249514, 'startswith')
            # Calling startswith(args, kwargs) (line 1692)
            startswith_call_result_249518 = invoke(stypy.reporting.localization.Localization(__file__, 1692, 17), startswith_249515, *[str_249516], **kwargs_249517)
            
            # Testing the type of an if condition (line 1692)
            if_condition_249519 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1692, 17), startswith_call_result_249518)
            # Assigning a type to the variable 'if_condition_249519' (line 1692)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1692, 17), 'if_condition_249519', if_condition_249519)
            # SSA begins for if statement (line 1692)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Call to write(...): (line 1693)
            # Processing the call arguments (line 1693)
            # Getting the type of 'line' (line 1693)
            line_249521 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1693, 22), 'line', False)
            # Processing the call keyword arguments (line 1693)
            kwargs_249522 = {}
            # Getting the type of 'write' (line 1693)
            write_249520 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1693, 16), 'write', False)
            # Calling write(args, kwargs) (line 1693)
            write_call_result_249523 = invoke(stypy.reporting.localization.Localization(__file__, 1693, 16), write_249520, *[line_249521], **kwargs_249522)
            
            
            # Call to write(...): (line 1694)
            # Processing the call arguments (line 1694)
            str_249525 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1694, 22), 'str', '%%BeginProlog\nsave\ncountdictstack\nmark\nnewpath\n/showpage {} def\n/setpagedevice {pop} def\n%%EndProlog\n%%Page 1 1\n')
            # Processing the call keyword arguments (line 1694)
            kwargs_249526 = {}
            # Getting the type of 'write' (line 1694)
            write_249524 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1694, 16), 'write', False)
            # Calling write(args, kwargs) (line 1694)
            write_call_result_249527 = invoke(stypy.reporting.localization.Localization(__file__, 1694, 16), write_249524, *[str_249525], **kwargs_249526)
            
            
            # Getting the type of 'rotate' (line 1703)
            rotate_249528 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1703, 19), 'rotate')
            # Testing the type of an if condition (line 1703)
            if_condition_249529 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1703, 16), rotate_249528)
            # Assigning a type to the variable 'if_condition_249529' (line 1703)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1703, 16), 'if_condition_249529', if_condition_249529)
            # SSA begins for if statement (line 1703)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Call to write(...): (line 1704)
            # Processing the call arguments (line 1704)
            
            # Call to encode(...): (line 1704)
            # Processing the call arguments (line 1704)
            unicode_249533 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1704, 40), 'unicode', u'ascii')
            # Processing the call keyword arguments (line 1704)
            kwargs_249534 = {}
            # Getting the type of 'rotate' (line 1704)
            rotate_249531 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1704, 26), 'rotate', False)
            # Obtaining the member 'encode' of a type (line 1704)
            encode_249532 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1704, 26), rotate_249531, 'encode')
            # Calling encode(args, kwargs) (line 1704)
            encode_call_result_249535 = invoke(stypy.reporting.localization.Localization(__file__, 1704, 26), encode_249532, *[unicode_249533], **kwargs_249534)
            
            str_249536 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1704, 51), 'str', '\n')
            # Applying the binary operator '+' (line 1704)
            result_add_249537 = python_operator(stypy.reporting.localization.Localization(__file__, 1704, 26), '+', encode_call_result_249535, str_249536)
            
            # Processing the call keyword arguments (line 1704)
            kwargs_249538 = {}
            # Getting the type of 'write' (line 1704)
            write_249530 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1704, 20), 'write', False)
            # Calling write(args, kwargs) (line 1704)
            write_call_result_249539 = invoke(stypy.reporting.localization.Localization(__file__, 1704, 20), write_249530, *[result_add_249537], **kwargs_249538)
            
            # SSA join for if statement (line 1703)
            module_type_store = module_type_store.join_ssa_context()
            
            # SSA branch for the else part of an if statement (line 1692)
            module_type_store.open_ssa_branch('else')
            
            
            # Evaluating a boolean operation
            # Getting the type of 'bbox' (line 1706)
            bbox_249540 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1706, 17), 'bbox')
            
            # Call to startswith(...): (line 1706)
            # Processing the call arguments (line 1706)
            
            # Obtaining an instance of the builtin type 'tuple' (line 1706)
            tuple_249543 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1706, 43), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 1706)
            # Adding element type (line 1706)
            str_249544 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1706, 43), 'str', '%%Bound')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1706, 43), tuple_249543, str_249544)
            # Adding element type (line 1706)
            str_249545 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1706, 55), 'str', '%%HiResBound')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1706, 43), tuple_249543, str_249545)
            # Adding element type (line 1706)
            str_249546 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1707, 43), 'str', '%%DocumentMedia')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1706, 43), tuple_249543, str_249546)
            # Adding element type (line 1706)
            str_249547 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1707, 63), 'str', '%%Pages')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1706, 43), tuple_249543, str_249547)
            
            # Processing the call keyword arguments (line 1706)
            kwargs_249548 = {}
            # Getting the type of 'line' (line 1706)
            line_249541 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1706, 26), 'line', False)
            # Obtaining the member 'startswith' of a type (line 1706)
            startswith_249542 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1706, 26), line_249541, 'startswith')
            # Calling startswith(args, kwargs) (line 1706)
            startswith_call_result_249549 = invoke(stypy.reporting.localization.Localization(__file__, 1706, 26), startswith_249542, *[tuple_249543], **kwargs_249548)
            
            # Applying the binary operator 'and' (line 1706)
            result_and_keyword_249550 = python_operator(stypy.reporting.localization.Localization(__file__, 1706, 17), 'and', bbox_249540, startswith_call_result_249549)
            
            # Testing the type of an if condition (line 1706)
            if_condition_249551 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1706, 17), result_and_keyword_249550)
            # Assigning a type to the variable 'if_condition_249551' (line 1706)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1706, 17), 'if_condition_249551', if_condition_249551)
            # SSA begins for if statement (line 1706)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            pass
            # SSA branch for the else part of an if statement (line 1706)
            module_type_store.open_ssa_branch('else')
            
            # Call to write(...): (line 1710)
            # Processing the call arguments (line 1710)
            # Getting the type of 'line' (line 1710)
            line_249553 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1710, 22), 'line', False)
            # Processing the call keyword arguments (line 1710)
            kwargs_249554 = {}
            # Getting the type of 'write' (line 1710)
            write_249552 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1710, 16), 'write', False)
            # Calling write(args, kwargs) (line 1710)
            write_call_result_249555 = invoke(stypy.reporting.localization.Localization(__file__, 1710, 16), write_249552, *[line_249553], **kwargs_249554)
            
            # SSA join for if statement (line 1706)
            module_type_store = module_type_store.join_ssa_context()
            
            # SSA join for if statement (line 1692)
            module_type_store = module_type_store.join_ssa_context()
            
            # SSA join for if statement (line 1688)
            module_type_store = module_type_store.join_ssa_context()
            
            # SSA join for a for statement
            module_type_store = module_type_store.join_ssa_context()
            
            
            # Getting the type of 'tmph' (line 1714)
            tmph_249556 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1714, 20), 'tmph')
            # Testing the type of a for loop iterable (line 1714)
            is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1714, 8), tmph_249556)
            # Getting the type of the for loop variable (line 1714)
            for_loop_var_249557 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1714, 8), tmph_249556)
            # Assigning a type to the variable 'line' (line 1714)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1714, 8), 'line', for_loop_var_249557)
            # SSA begins for a for statement (line 1714)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
            
            
            # Call to startswith(...): (line 1715)
            # Processing the call arguments (line 1715)
            str_249560 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1715, 31), 'str', '%%EOF')
            # Processing the call keyword arguments (line 1715)
            kwargs_249561 = {}
            # Getting the type of 'line' (line 1715)
            line_249558 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1715, 15), 'line', False)
            # Obtaining the member 'startswith' of a type (line 1715)
            startswith_249559 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1715, 15), line_249558, 'startswith')
            # Calling startswith(args, kwargs) (line 1715)
            startswith_call_result_249562 = invoke(stypy.reporting.localization.Localization(__file__, 1715, 15), startswith_249559, *[str_249560], **kwargs_249561)
            
            # Testing the type of an if condition (line 1715)
            if_condition_249563 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1715, 12), startswith_call_result_249562)
            # Assigning a type to the variable 'if_condition_249563' (line 1715)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1715, 12), 'if_condition_249563', if_condition_249563)
            # SSA begins for if statement (line 1715)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Call to write(...): (line 1716)
            # Processing the call arguments (line 1716)
            str_249565 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1716, 22), 'str', 'cleartomark\ncountdictstack\nexch sub { end } repeat\nrestore\nshowpage\n%%EOF\n')
            # Processing the call keyword arguments (line 1716)
            kwargs_249566 = {}
            # Getting the type of 'write' (line 1716)
            write_249564 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1716, 16), 'write', False)
            # Calling write(args, kwargs) (line 1716)
            write_call_result_249567 = invoke(stypy.reporting.localization.Localization(__file__, 1716, 16), write_249564, *[str_249565], **kwargs_249566)
            
            # SSA branch for the else part of an if statement (line 1715)
            module_type_store.open_ssa_branch('else')
            
            
            # Call to startswith(...): (line 1722)
            # Processing the call arguments (line 1722)
            str_249570 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1722, 33), 'str', '%%PageBoundingBox')
            # Processing the call keyword arguments (line 1722)
            kwargs_249571 = {}
            # Getting the type of 'line' (line 1722)
            line_249568 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1722, 17), 'line', False)
            # Obtaining the member 'startswith' of a type (line 1722)
            startswith_249569 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1722, 17), line_249568, 'startswith')
            # Calling startswith(args, kwargs) (line 1722)
            startswith_call_result_249572 = invoke(stypy.reporting.localization.Localization(__file__, 1722, 17), startswith_249569, *[str_249570], **kwargs_249571)
            
            # Testing the type of an if condition (line 1722)
            if_condition_249573 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1722, 17), startswith_call_result_249572)
            # Assigning a type to the variable 'if_condition_249573' (line 1722)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1722, 17), 'if_condition_249573', if_condition_249573)
            # SSA begins for if statement (line 1722)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            pass
            # SSA branch for the else part of an if statement (line 1722)
            module_type_store.open_ssa_branch('else')
            
            # Call to write(...): (line 1725)
            # Processing the call arguments (line 1725)
            # Getting the type of 'line' (line 1725)
            line_249575 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1725, 22), 'line', False)
            # Processing the call keyword arguments (line 1725)
            kwargs_249576 = {}
            # Getting the type of 'write' (line 1725)
            write_249574 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1725, 16), 'write', False)
            # Calling write(args, kwargs) (line 1725)
            write_call_result_249577 = invoke(stypy.reporting.localization.Localization(__file__, 1725, 16), write_249574, *[line_249575], **kwargs_249576)
            
            # SSA join for if statement (line 1722)
            module_type_store = module_type_store.join_ssa_context()
            
            # SSA join for if statement (line 1715)
            module_type_store = module_type_store.join_ssa_context()
            
            # SSA join for a for statement
            module_type_store = module_type_store.join_ssa_context()
            
            # Calling the __exit__ method to finish a with section
            # Obtaining the member '__exit__' of a type (line 1684)
            exit___249578 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1684, 41), open_call_result_249484, '__exit__')
            with_exit_249579 = invoke(stypy.reporting.localization.Localization(__file__, 1684, 41), exit___249578, None, None, None)

        # Calling the __exit__ method to finish a with section
        # Obtaining the member '__exit__' of a type (line 1684)
        exit___249580 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1684, 9), open_call_result_249475, '__exit__')
        with_exit_249581 = invoke(stypy.reporting.localization.Localization(__file__, 1684, 9), exit___249580, None, None, None)

    
    # Call to remove(...): (line 1727)
    # Processing the call arguments (line 1727)
    # Getting the type of 'tmpfile' (line 1727)
    tmpfile_249584 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1727, 14), 'tmpfile', False)
    # Processing the call keyword arguments (line 1727)
    kwargs_249585 = {}
    # Getting the type of 'os' (line 1727)
    os_249582 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1727, 4), 'os', False)
    # Obtaining the member 'remove' of a type (line 1727)
    remove_249583 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1727, 4), os_249582, 'remove')
    # Calling remove(args, kwargs) (line 1727)
    remove_call_result_249586 = invoke(stypy.reporting.localization.Localization(__file__, 1727, 4), remove_249583, *[tmpfile_249584], **kwargs_249585)
    
    
    # Call to move(...): (line 1728)
    # Processing the call arguments (line 1728)
    # Getting the type of 'epsfile' (line 1728)
    epsfile_249589 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1728, 16), 'epsfile', False)
    # Getting the type of 'tmpfile' (line 1728)
    tmpfile_249590 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1728, 25), 'tmpfile', False)
    # Processing the call keyword arguments (line 1728)
    kwargs_249591 = {}
    # Getting the type of 'shutil' (line 1728)
    shutil_249587 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1728, 4), 'shutil', False)
    # Obtaining the member 'move' of a type (line 1728)
    move_249588 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1728, 4), shutil_249587, 'move')
    # Calling move(args, kwargs) (line 1728)
    move_call_result_249592 = invoke(stypy.reporting.localization.Localization(__file__, 1728, 4), move_249588, *[epsfile_249589, tmpfile_249590], **kwargs_249591)
    
    
    # ################# End of 'pstoeps(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'pstoeps' in the type store
    # Getting the type of 'stypy_return_type' (line 1670)
    stypy_return_type_249593 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1670, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_249593)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'pstoeps'
    return stypy_return_type_249593

# Assigning a type to the variable 'pstoeps' (line 1670)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1670, 0), 'pstoeps', pstoeps)
# Declaration of the 'FigureManagerPS' class
# Getting the type of 'FigureManagerBase' (line 1731)
FigureManagerBase_249594 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1731, 22), 'FigureManagerBase')

class FigureManagerPS(FigureManagerBase_249594, ):
    pass

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 1731, 0, False)
        # Assigning a type to the variable 'self' (line 1732)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1732, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FigureManagerPS.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'FigureManagerPS' (line 1731)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1731, 0), 'FigureManagerPS', FigureManagerPS)

# Assigning a List to a Name (line 1747):

# Assigning a List to a Name (line 1747):

# Obtaining an instance of the builtin type 'list' (line 1747)
list_249595 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1747, 9), 'list')
# Adding type elements to the builtin type 'list' instance (line 1747)
# Adding element type (line 1747)
unicode_249596 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1749, 4), 'unicode', u'/m { moveto } bind def')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1747, 9), list_249595, unicode_249596)
# Adding element type (line 1747)
unicode_249597 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1751, 4), 'unicode', u'/l { lineto } bind def')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1747, 9), list_249595, unicode_249597)
# Adding element type (line 1747)
unicode_249598 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1753, 4), 'unicode', u'/r { rlineto } bind def')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1747, 9), list_249595, unicode_249598)
# Adding element type (line 1747)
unicode_249599 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1755, 4), 'unicode', u'/c { curveto } bind def')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1747, 9), list_249595, unicode_249599)
# Adding element type (line 1747)
unicode_249600 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1757, 4), 'unicode', u'/cl { closepath } bind def')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1747, 9), list_249595, unicode_249600)
# Adding element type (line 1747)
unicode_249601 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1765, (-1)), 'unicode', u'/box {\n      m\n      1 index 0 r\n      0 exch r\n      neg 0 r\n      cl\n    } bind def')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1747, 9), list_249595, unicode_249601)
# Adding element type (line 1747)
unicode_249602 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1771, (-1)), 'unicode', u'/clipbox {\n      box\n      clip\n      newpath\n    } bind def')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1747, 9), list_249595, unicode_249602)

# Assigning a type to the variable 'psDefs' (line 1747)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1747, 0), 'psDefs', list_249595)
# Declaration of the '_BackendPS' class
# Getting the type of '_Backend' (line 1776)
_Backend_249603 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1776, 17), '_Backend')

class _BackendPS(_Backend_249603, ):
    
    # Assigning a Name to a Name (line 1777):
    
    # Assigning a Name to a Name (line 1778):
    pass

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 1775, 0, False)
        # Assigning a type to the variable 'self' (line 1776)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1776, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, '_BackendPS.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable '_BackendPS' (line 1775)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1775, 0), '_BackendPS', _BackendPS)

# Assigning a Name to a Name (line 1777):
# Getting the type of 'FigureCanvasPS' (line 1777)
FigureCanvasPS_249604 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1777, 19), 'FigureCanvasPS')
# Getting the type of '_BackendPS'
_BackendPS_249605 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), '_BackendPS')
# Setting the type of the member 'FigureCanvas' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), _BackendPS_249605, 'FigureCanvas', FigureCanvasPS_249604)

# Assigning a Name to a Name (line 1778):
# Getting the type of 'FigureManagerPS' (line 1778)
FigureManagerPS_249606 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1778, 20), 'FigureManagerPS')
# Getting the type of '_BackendPS'
_BackendPS_249607 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), '_BackendPS')
# Setting the type of the member 'FigureManager' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), _BackendPS_249607, 'FigureManager', FigureManagerPS_249606)

# ################# End of the type inference program ##################

module_errors = stypy.errors.type_error.StypyTypeError.get_error_msgs()
module_warnings = stypy.errors.type_warning.TypeWarning.get_warning_msgs()
