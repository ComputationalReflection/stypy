
# -*- coding: utf-8 -*-

"""
ORIGINAL PROGRAM SOURCE CODE:
1: from __future__ import (absolute_import, division, print_function,
2:                         unicode_literals)
3: 
4: from collections import OrderedDict
5: 
6: import six
7: from six import unichr
8: from six.moves import xrange
9: 
10: import os, base64, tempfile, gzip, io, sys, codecs, re
11: 
12: import numpy as np
13: 
14: from hashlib import md5
15: import uuid
16: 
17: from matplotlib import verbose, __version__, rcParams
18: from matplotlib.backend_bases import (
19:      _Backend, FigureCanvasBase, FigureManagerBase, GraphicsContextBase,
20:     RendererBase)
21: from matplotlib.backends.backend_mixed import MixedModeRenderer
22: from matplotlib.cbook import is_writable_file_like, maxdict
23: from matplotlib.colors import rgb2hex
24: from matplotlib.figure import Figure
25: from matplotlib.font_manager import findfont, FontProperties, get_font
26: from matplotlib.ft2font import KERNING_DEFAULT, LOAD_NO_HINTING
27: from matplotlib.mathtext import MathTextParser
28: from matplotlib.path import Path
29: from matplotlib import _path
30: from matplotlib.transforms import Affine2D, Affine2DBase
31: from matplotlib import _png
32: 
33: from xml.sax.saxutils import escape as escape_xml_text
34: 
35: backend_version = __version__
36: 
37: # ----------------------------------------------------------------------
38: # SimpleXMLWriter class
39: #
40: # Based on an original by Fredrik Lundh, but modified here to:
41: #   1. Support modern Python idioms
42: #   2. Remove encoding support (it's handled by the file writer instead)
43: #   3. Support proper indentation
44: #   4. Minify things a little bit
45: 
46: # --------------------------------------------------------------------
47: # The SimpleXMLWriter module is
48: #
49: # Copyright (c) 2001-2004 by Fredrik Lundh
50: #
51: # By obtaining, using, and/or copying this software and/or its
52: # associated documentation, you agree that you have read, understood,
53: # and will comply with the following terms and conditions:
54: #
55: # Permission to use, copy, modify, and distribute this software and
56: # its associated documentation for any purpose and without fee is
57: # hereby granted, provided that the above copyright notice appears in
58: # all copies, and that both that copyright notice and this permission
59: # notice appear in supporting documentation, and that the name of
60: # Secret Labs AB or the author not be used in advertising or publicity
61: # pertaining to distribution of the software without specific, written
62: # prior permission.
63: #
64: # SECRET LABS AB AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD
65: # TO THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANT-
66: # ABILITY AND FITNESS.  IN NO EVENT SHALL SECRET LABS AB OR THE AUTHOR
67: # BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY
68: # DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
69: # WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS
70: # ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE
71: # OF THIS SOFTWARE.
72: # --------------------------------------------------------------------
73: 
74: def escape_cdata(s):
75:     s = s.replace("&", "&amp;")
76:     s = s.replace("<", "&lt;")
77:     s = s.replace(">", "&gt;")
78:     return s
79: 
80: _escape_xml_comment = re.compile(r'-(?=-)')
81: def escape_comment(s):
82:     s = escape_cdata(s)
83:     return _escape_xml_comment.sub('- ', s)
84: 
85: def escape_attrib(s):
86:     s = s.replace("&", "&amp;")
87:     s = s.replace("'", "&apos;")
88:     s = s.replace("\"", "&quot;")
89:     s = s.replace("<", "&lt;")
90:     s = s.replace(">", "&gt;")
91:     return s
92: 
93: def short_float_fmt(x):
94:     '''
95:     Create a short string representation of a float, which is %f
96:     formatting with trailing zeros and the decimal point removed.
97:     '''
98:     return '{0:f}'.format(x).rstrip('0').rstrip('.')
99: 
100: ##
101: # XML writer class.
102: #
103: # @param file A file or file-like object.  This object must implement
104: #    a <b>write</b> method that takes an 8-bit string.
105: 
106: class XMLWriter(object):
107:     def __init__(self, file):
108:         self.__write = file.write
109:         if hasattr(file, "flush"):
110:             self.flush = file.flush
111:         self.__open = 0 # true if start tag is open
112:         self.__tags = []
113:         self.__data = []
114:         self.__indentation = " " * 64
115: 
116:     def __flush(self, indent=True):
117:         # flush internal buffers
118:         if self.__open:
119:             if indent:
120:                 self.__write(">\n")
121:             else:
122:                 self.__write(">")
123:             self.__open = 0
124:         if self.__data:
125:             data = ''.join(self.__data)
126:             self.__write(escape_cdata(data))
127:             self.__data = []
128: 
129:     ## Opens a new element.  Attributes can be given as keyword
130:     # arguments, or as a string/string dictionary. The method returns
131:     # an opaque identifier that can be passed to the <b>close</b>
132:     # method, to close all open elements up to and including this one.
133:     #
134:     # @param tag Element tag.
135:     # @param attrib Attribute dictionary.  Alternatively, attributes
136:     #    can be given as keyword arguments.
137:     # @return An element identifier.
138: 
139:     def start(self, tag, attrib={}, **extra):
140:         self.__flush()
141:         tag = escape_cdata(tag)
142:         self.__data = []
143:         self.__tags.append(tag)
144:         self.__write(self.__indentation[:len(self.__tags) - 1])
145:         self.__write("<%s" % tag)
146:         if attrib or extra:
147:             attrib = attrib.copy()
148:             attrib.update(extra)
149:             attrib = sorted(six.iteritems(attrib))
150:             for k, v in attrib:
151:                 if not v == '':
152:                     k = escape_cdata(k)
153:                     v = escape_attrib(v)
154:                     self.__write(" %s=\"%s\"" % (k, v))
155:         self.__open = 1
156:         return len(self.__tags)-1
157: 
158:     ##
159:     # Adds a comment to the output stream.
160:     #
161:     # @param comment Comment text, as a Unicode string.
162: 
163:     def comment(self, comment):
164:         self.__flush()
165:         self.__write(self.__indentation[:len(self.__tags)])
166:         self.__write("<!-- %s -->\n" % escape_comment(comment))
167: 
168:     ##
169:     # Adds character data to the output stream.
170:     #
171:     # @param text Character data, as a Unicode string.
172: 
173:     def data(self, text):
174:         self.__data.append(text)
175: 
176:     ##
177:     # Closes the current element (opened by the most recent call to
178:     # <b>start</b>).
179:     #
180:     # @param tag Element tag.  If given, the tag must match the start
181:     #    tag.  If omitted, the current element is closed.
182: 
183:     def end(self, tag=None, indent=True):
184:         if tag:
185:             assert self.__tags, "unbalanced end(%s)" % tag
186:             assert escape_cdata(tag) == self.__tags[-1],\
187:                    "expected end(%s), got %s" % (self.__tags[-1], tag)
188:         else:
189:             assert self.__tags, "unbalanced end()"
190:         tag = self.__tags.pop()
191:         if self.__data:
192:             self.__flush(indent)
193:         elif self.__open:
194:             self.__open = 0
195:             self.__write("/>\n")
196:             return
197:         if indent:
198:             self.__write(self.__indentation[:len(self.__tags)])
199:         self.__write("</%s>\n" % tag)
200: 
201:     ##
202:     # Closes open elements, up to (and including) the element identified
203:     # by the given identifier.
204:     #
205:     # @param id Element identifier, as returned by the <b>start</b> method.
206: 
207:     def close(self, id):
208:         while len(self.__tags) > id:
209:             self.end()
210: 
211:     ##
212:     # Adds an entire element.  This is the same as calling <b>start</b>,
213:     # <b>data</b>, and <b>end</b> in sequence. The <b>text</b> argument
214:     # can be omitted.
215: 
216:     def element(self, tag, text=None, attrib={}, **extra):
217:         self.start(*(tag, attrib), **extra)
218:         if text:
219:             self.data(text)
220:         self.end(indent=False)
221: 
222:     ##
223:     # Flushes the output stream.
224: 
225:     def flush(self):
226:         pass # replaced by the constructor
227: 
228: # ----------------------------------------------------------------------
229: 
230: def generate_transform(transform_list=[]):
231:     if len(transform_list):
232:         output = io.StringIO()
233:         for type, value in transform_list:
234:             if type == 'scale' and (value == (1.0,) or value == (1.0, 1.0)):
235:                 continue
236:             if type == 'translate' and value == (0.0, 0.0):
237:                 continue
238:             if type == 'rotate' and value == (0.0,):
239:                 continue
240:             if type == 'matrix' and isinstance(value, Affine2DBase):
241:                 value = value.to_values()
242: 
243:             output.write('%s(%s)' % (
244:                 type, ' '.join(short_float_fmt(x) for x in value)))
245:         return output.getvalue()
246:     return ''
247: 
248: def generate_css(attrib={}):
249:     if attrib:
250:         output = io.StringIO()
251:         attrib = sorted(six.iteritems(attrib))
252:         for k, v in attrib:
253:             k = escape_attrib(k)
254:             v = escape_attrib(v)
255:             output.write("%s:%s;" % (k, v))
256:         return output.getvalue()
257:     return ''
258: 
259: _capstyle_d = {'projecting' : 'square', 'butt' : 'butt', 'round': 'round',}
260: class RendererSVG(RendererBase):
261:     FONT_SCALE = 100.0
262:     fontd = maxdict(50)
263: 
264:     def __init__(self, width, height, svgwriter, basename=None, image_dpi=72):
265:         self.width = width
266:         self.height = height
267:         self.writer = XMLWriter(svgwriter)
268:         self.image_dpi = image_dpi  # the actual dpi we want to rasterize stuff with
269: 
270:         self._groupd = {}
271:         if not rcParams['svg.image_inline']:
272:             assert basename is not None
273:             self.basename = basename
274:             self._imaged = {}
275:         self._clipd = OrderedDict()
276:         self._char_defs = {}
277:         self._markers = {}
278:         self._path_collection_id = 0
279:         self._imaged = {}
280:         self._hatchd = OrderedDict()
281:         self._has_gouraud = False
282:         self._n_gradients = 0
283:         self._fonts = OrderedDict()
284:         self.mathtext_parser = MathTextParser('SVG')
285: 
286:         RendererBase.__init__(self)
287:         self._glyph_map = dict()
288: 
289:         svgwriter.write(svgProlog)
290:         self._start_id = self.writer.start(
291:             'svg',
292:             width='%ipt' % width, height='%ipt' % height,
293:             viewBox='0 0 %i %i' % (width, height),
294:             xmlns="http://www.w3.org/2000/svg",
295:             version="1.1",
296:             attrib={'xmlns:xlink': "http://www.w3.org/1999/xlink"})
297:         self._write_default_style()
298: 
299:     def finalize(self):
300:         self._write_clips()
301:         self._write_hatches()
302:         self._write_svgfonts()
303:         self.writer.close(self._start_id)
304:         self.writer.flush()
305: 
306:     def _write_default_style(self):
307:         writer = self.writer
308:         default_style = generate_css({
309:             'stroke-linejoin': 'round',
310:             'stroke-linecap': 'butt'})
311:         writer.start('defs')
312:         writer.start('style', type='text/css')
313:         writer.data('*{%s}\n' % default_style)
314:         writer.end('style')
315:         writer.end('defs')
316: 
317:     def _make_id(self, type, content):
318:         content = str(content)
319:         if rcParams['svg.hashsalt'] is None:
320:             salt = str(uuid.uuid4())
321:         else:
322:             salt = rcParams['svg.hashsalt']
323:         if six.PY3:
324:             content = content.encode('utf8')
325:             salt = salt.encode('utf8')
326:         m = md5()
327:         m.update(salt)
328:         m.update(content)
329:         return '%s%s' % (type, m.hexdigest()[:10])
330: 
331:     def _make_flip_transform(self, transform):
332:         return (transform +
333:                 Affine2D()
334:                 .scale(1.0, -1.0)
335:                 .translate(0.0, self.height))
336: 
337:     def _get_font(self, prop):
338:         fname = findfont(prop)
339:         font = get_font(fname)
340:         font.clear()
341:         size = prop.get_size_in_points()
342:         font.set_size(size, 72.0)
343:         return font
344: 
345:     def _get_hatch(self, gc, rgbFace):
346:         '''
347:         Create a new hatch pattern
348:         '''
349:         if rgbFace is not None:
350:             rgbFace = tuple(rgbFace)
351:         edge = gc.get_hatch_color()
352:         if edge is not None:
353:             edge = tuple(edge)
354:         dictkey = (gc.get_hatch(), rgbFace, edge)
355:         oid = self._hatchd.get(dictkey)
356:         if oid is None:
357:             oid = self._make_id('h', dictkey)
358:             self._hatchd[dictkey] = ((gc.get_hatch_path(), rgbFace, edge), oid)
359:         else:
360:             _, oid = oid
361:         return oid
362: 
363:     def _write_hatches(self):
364:         if not len(self._hatchd):
365:             return
366:         HATCH_SIZE = 72
367:         writer = self.writer
368:         writer.start('defs')
369:         for ((path, face, stroke), oid) in six.itervalues(self._hatchd):
370:             writer.start(
371:                 'pattern',
372:                 id=oid,
373:                 patternUnits="userSpaceOnUse",
374:                 x="0", y="0", width=six.text_type(HATCH_SIZE),
375:                 height=six.text_type(HATCH_SIZE))
376:             path_data = self._convert_path(
377:                 path,
378:                 Affine2D().scale(HATCH_SIZE).scale(1.0, -1.0).translate(0, HATCH_SIZE),
379:                 simplify=False)
380:             if face is None:
381:                 fill = 'none'
382:             else:
383:                 fill = rgb2hex(face)
384:             writer.element(
385:                 'rect',
386:                 x="0", y="0", width=six.text_type(HATCH_SIZE+1),
387:                 height=six.text_type(HATCH_SIZE+1),
388:                 fill=fill)
389:             writer.element(
390:                 'path',
391:                 d=path_data,
392:                 style=generate_css({
393:                     'fill': rgb2hex(stroke),
394:                     'stroke': rgb2hex(stroke),
395:                     'stroke-width': six.text_type(rcParams['hatch.linewidth']),
396:                     'stroke-linecap': 'butt',
397:                     'stroke-linejoin': 'miter'
398:                     })
399:                 )
400:             writer.end('pattern')
401:         writer.end('defs')
402: 
403:     def _get_style_dict(self, gc, rgbFace):
404:         '''
405:         return the style string.  style is generated from the
406:         GraphicsContext and rgbFace
407:         '''
408:         attrib = {}
409: 
410:         forced_alpha = gc.get_forced_alpha()
411: 
412:         if gc.get_hatch() is not None:
413:             attrib['fill'] = "url(#%s)" % self._get_hatch(gc, rgbFace)
414:             if rgbFace is not None and len(rgbFace) == 4 and rgbFace[3] != 1.0 and not forced_alpha:
415:                 attrib['fill-opacity'] = short_float_fmt(rgbFace[3])
416:         else:
417:             if rgbFace is None:
418:                 attrib['fill'] = 'none'
419:             else:
420:                 if tuple(rgbFace[:3]) != (0, 0, 0):
421:                     attrib['fill'] = rgb2hex(rgbFace)
422:                 if len(rgbFace) == 4 and rgbFace[3] != 1.0 and not forced_alpha:
423:                     attrib['fill-opacity'] = short_float_fmt(rgbFace[3])
424: 
425:         if forced_alpha and gc.get_alpha() != 1.0:
426:             attrib['opacity'] = short_float_fmt(gc.get_alpha())
427: 
428:         offset, seq = gc.get_dashes()
429:         if seq is not None:
430:             attrib['stroke-dasharray'] = ','.join([short_float_fmt(val) for val in seq])
431:             attrib['stroke-dashoffset'] = short_float_fmt(float(offset))
432: 
433:         linewidth = gc.get_linewidth()
434:         if linewidth:
435:             rgb = gc.get_rgb()
436:             attrib['stroke'] = rgb2hex(rgb)
437:             if not forced_alpha and rgb[3] != 1.0:
438:                 attrib['stroke-opacity'] = short_float_fmt(rgb[3])
439:             if linewidth != 1.0:
440:                 attrib['stroke-width'] = short_float_fmt(linewidth)
441:             if gc.get_joinstyle() != 'round':
442:                 attrib['stroke-linejoin'] = gc.get_joinstyle()
443:             if gc.get_capstyle() != 'butt':
444:                 attrib['stroke-linecap'] = _capstyle_d[gc.get_capstyle()]
445: 
446:         return attrib
447: 
448:     def _get_style(self, gc, rgbFace):
449:         return generate_css(self._get_style_dict(gc, rgbFace))
450: 
451:     def _get_clip(self, gc):
452:         cliprect = gc.get_clip_rectangle()
453:         clippath, clippath_trans = gc.get_clip_path()
454:         if clippath is not None:
455:             clippath_trans = self._make_flip_transform(clippath_trans)
456:             dictkey = (id(clippath), str(clippath_trans))
457:         elif cliprect is not None:
458:             x, y, w, h = cliprect.bounds
459:             y = self.height-(y+h)
460:             dictkey = (x, y, w, h)
461:         else:
462:             return None
463: 
464:         clip = self._clipd.get(dictkey)
465:         if clip is None:
466:             oid = self._make_id('p', dictkey)
467:             if clippath is not None:
468:                 self._clipd[dictkey] = ((clippath, clippath_trans), oid)
469:             else:
470:                 self._clipd[dictkey] = (dictkey, oid)
471:         else:
472:             clip, oid = clip
473:         return oid
474: 
475:     def _write_clips(self):
476:         if not len(self._clipd):
477:             return
478:         writer = self.writer
479:         writer.start('defs')
480:         for clip, oid in six.itervalues(self._clipd):
481:             writer.start('clipPath', id=oid)
482:             if len(clip) == 2:
483:                 clippath, clippath_trans = clip
484:                 path_data = self._convert_path(clippath, clippath_trans, simplify=False)
485:                 writer.element('path', d=path_data)
486:             else:
487:                 x, y, w, h = clip
488:                 writer.element(
489:                     'rect',
490:                     x=short_float_fmt(x),
491:                     y=short_float_fmt(y),
492:                     width=short_float_fmt(w),
493:                     height=short_float_fmt(h))
494:             writer.end('clipPath')
495:         writer.end('defs')
496: 
497:     def _write_svgfonts(self):
498:         if not rcParams['svg.fonttype'] == 'svgfont':
499:             return
500: 
501:         writer = self.writer
502:         writer.start('defs')
503:         for font_fname, chars in six.iteritems(self._fonts):
504:             font = get_font(font_fname)
505:             font.set_size(72, 72)
506:             sfnt = font.get_sfnt()
507:             writer.start('font', id=sfnt[(1, 0, 0, 4)])
508:             writer.element(
509:                 'font-face',
510:                 attrib={
511:                     'font-family': font.family_name,
512:                     'font-style': font.style_name.lower(),
513:                     'units-per-em': '72',
514:                     'bbox': ' '.join(
515:                         short_float_fmt(x / 64.0) for x in font.bbox)})
516:             for char in chars:
517:                 glyph = font.load_char(char, flags=LOAD_NO_HINTING)
518:                 verts, codes = font.get_path()
519:                 path = Path(verts, codes)
520:                 path_data = self._convert_path(path)
521:                 # name = font.get_glyph_name(char)
522:                 writer.element(
523:                     'glyph',
524:                     d=path_data,
525:                     attrib={
526:                         # 'glyph-name': name,
527:                         'unicode': unichr(char),
528:                         'horiz-adv-x':
529:                         short_float_fmt(glyph.linearHoriAdvance / 65536.0)})
530:             writer.end('font')
531:         writer.end('defs')
532: 
533:     def open_group(self, s, gid=None):
534:         '''
535:         Open a grouping element with label *s*. If *gid* is given, use
536:         *gid* as the id of the group.
537:         '''
538:         if gid:
539:             self.writer.start('g', id=gid)
540:         else:
541:             self._groupd[s] = self._groupd.get(s, 0) + 1
542:             self.writer.start('g', id="%s_%d" % (s, self._groupd[s]))
543: 
544:     def close_group(self, s):
545:         self.writer.end('g')
546: 
547:     def option_image_nocomposite(self):
548:         '''
549:         return whether to generate a composite image from multiple images on
550:         a set of axes
551:         '''
552:         return not rcParams['image.composite_image']
553: 
554:     def _convert_path(self, path, transform=None, clip=None, simplify=None,
555:                       sketch=None):
556:         if clip:
557:             clip = (0.0, 0.0, self.width, self.height)
558:         else:
559:             clip = None
560:         return _path.convert_to_string(
561:             path, transform, clip, simplify, sketch, 6,
562:             [b'M', b'L', b'Q', b'C', b'z'], False).decode('ascii')
563: 
564:     def draw_path(self, gc, path, transform, rgbFace=None):
565:         trans_and_flip = self._make_flip_transform(transform)
566:         clip = (rgbFace is None and gc.get_hatch_path() is None)
567:         simplify = path.should_simplify and clip
568:         path_data = self._convert_path(
569:             path, trans_and_flip, clip=clip, simplify=simplify,
570:             sketch=gc.get_sketch_params())
571: 
572:         attrib = {}
573:         attrib['style'] = self._get_style(gc, rgbFace)
574: 
575:         clipid = self._get_clip(gc)
576:         if clipid is not None:
577:             attrib['clip-path'] = 'url(#%s)' % clipid
578: 
579:         if gc.get_url() is not None:
580:             self.writer.start('a', {'xlink:href': gc.get_url()})
581:         self.writer.element('path', d=path_data, attrib=attrib)
582:         if gc.get_url() is not None:
583:             self.writer.end('a')
584: 
585:     def draw_markers(self, gc, marker_path, marker_trans, path, trans, rgbFace=None):
586:         if not len(path.vertices):
587:             return
588: 
589:         writer = self.writer
590:         path_data = self._convert_path(
591:             marker_path,
592:             marker_trans + Affine2D().scale(1.0, -1.0),
593:             simplify=False)
594:         style = self._get_style_dict(gc, rgbFace)
595:         dictkey = (path_data, generate_css(style))
596:         oid = self._markers.get(dictkey)
597:         style = generate_css({k: v for k, v in six.iteritems(style)
598:                               if k.startswith('stroke')})
599: 
600:         if oid is None:
601:             oid = self._make_id('m', dictkey)
602:             writer.start('defs')
603:             writer.element('path', id=oid, d=path_data, style=style)
604:             writer.end('defs')
605:             self._markers[dictkey] = oid
606: 
607:         attrib = {}
608:         clipid = self._get_clip(gc)
609:         if clipid is not None:
610:             attrib['clip-path'] = 'url(#%s)' % clipid
611:         writer.start('g', attrib=attrib)
612: 
613:         trans_and_flip = self._make_flip_transform(trans)
614:         attrib = {'xlink:href': '#%s' % oid}
615:         clip = (0, 0, self.width*72, self.height*72)
616:         for vertices, code in path.iter_segments(
617:                 trans_and_flip, clip=clip, simplify=False):
618:             if len(vertices):
619:                 x, y = vertices[-2:]
620:                 attrib['x'] = short_float_fmt(x)
621:                 attrib['y'] = short_float_fmt(y)
622:                 attrib['style'] = self._get_style(gc, rgbFace)
623:                 writer.element('use', attrib=attrib)
624:         writer.end('g')
625: 
626:     def draw_path_collection(self, gc, master_transform, paths, all_transforms,
627:                              offsets, offsetTrans, facecolors, edgecolors,
628:                              linewidths, linestyles, antialiaseds, urls,
629:                              offset_position):
630:         # Is the optimization worth it? Rough calculation:
631:         # cost of emitting a path in-line is
632:         #    (len_path + 5) * uses_per_path
633:         # cost of definition+use is
634:         #    (len_path + 3) + 9 * uses_per_path
635:         len_path = len(paths[0].vertices) if len(paths) > 0 else 0
636:         uses_per_path = self._iter_collection_uses_per_path(
637:             paths, all_transforms, offsets, facecolors, edgecolors)
638:         should_do_optimization = \
639:             len_path + 9 * uses_per_path + 3 < (len_path + 5) * uses_per_path
640:         if not should_do_optimization:
641:             return RendererBase.draw_path_collection(
642:                 self, gc, master_transform, paths, all_transforms,
643:                 offsets, offsetTrans, facecolors, edgecolors,
644:                 linewidths, linestyles, antialiaseds, urls,
645:                 offset_position)
646: 
647:         writer = self.writer
648:         path_codes = []
649:         writer.start('defs')
650:         for i, (path, transform) in enumerate(self._iter_collection_raw_paths(
651:             master_transform, paths, all_transforms)):
652:             transform = Affine2D(transform.get_matrix()).scale(1.0, -1.0)
653:             d = self._convert_path(path, transform, simplify=False)
654:             oid = 'C%x_%x_%s' % (self._path_collection_id, i,
655:                                   self._make_id('', d))
656:             writer.element('path', id=oid, d=d)
657:             path_codes.append(oid)
658:         writer.end('defs')
659: 
660:         for xo, yo, path_id, gc0, rgbFace in self._iter_collection(
661:             gc, master_transform, all_transforms, path_codes, offsets,
662:             offsetTrans, facecolors, edgecolors, linewidths, linestyles,
663:             antialiaseds, urls, offset_position):
664:             clipid = self._get_clip(gc0)
665:             url = gc0.get_url()
666:             if url is not None:
667:                 writer.start('a', attrib={'xlink:href': url})
668:             if clipid is not None:
669:                 writer.start('g', attrib={'clip-path': 'url(#%s)' % clipid})
670:             attrib = {
671:                 'xlink:href': '#%s' % path_id,
672:                 'x': short_float_fmt(xo),
673:                 'y': short_float_fmt(self.height - yo),
674:                 'style': self._get_style(gc0, rgbFace)
675:                 }
676:             writer.element('use', attrib=attrib)
677:             if clipid is not None:
678:                 writer.end('g')
679:             if url is not None:
680:                 writer.end('a')
681: 
682:         self._path_collection_id += 1
683: 
684:     def draw_gouraud_triangle(self, gc, points, colors, trans):
685:         # This uses a method described here:
686:         #
687:         #   http://www.svgopen.org/2005/papers/Converting3DFaceToSVG/index.html
688:         #
689:         # that uses three overlapping linear gradients to simulate a
690:         # Gouraud triangle.  Each gradient goes from fully opaque in
691:         # one corner to fully transparent along the opposite edge.
692:         # The line between the stop points is perpendicular to the
693:         # opposite edge.  Underlying these three gradients is a solid
694:         # triangle whose color is the average of all three points.
695: 
696:         writer = self.writer
697:         if not self._has_gouraud:
698:             self._has_gouraud = True
699:             writer.start(
700:                 'filter',
701:                 id='colorAdd')
702:             writer.element(
703:                 'feComposite',
704:                 attrib={'in': 'SourceGraphic'},
705:                 in2='BackgroundImage',
706:                 operator='arithmetic',
707:                 k2="1", k3="1")
708:             writer.end('filter')
709: 
710:         avg_color = np.sum(colors[:, :], axis=0) / 3.0
711:         # Just skip fully-transparent triangles
712:         if avg_color[-1] == 0.0:
713:             return
714: 
715:         trans_and_flip = self._make_flip_transform(trans)
716:         tpoints = trans_and_flip.transform(points)
717: 
718:         writer.start('defs')
719:         for i in range(3):
720:             x1, y1 = tpoints[i]
721:             x2, y2 = tpoints[(i + 1) % 3]
722:             x3, y3 = tpoints[(i + 2) % 3]
723:             c = colors[i][:]
724: 
725:             if x2 == x3:
726:                 xb = x2
727:                 yb = y1
728:             elif y2 == y3:
729:                 xb = x1
730:                 yb = y2
731:             else:
732:                 m1 = (y2 - y3) / (x2 - x3)
733:                 b1 = y2 - (m1 * x2)
734:                 m2 = -(1.0 / m1)
735:                 b2 = y1 - (m2 * x1)
736:                 xb = (-b1 + b2) / (m1 - m2)
737:                 yb = m2 * xb + b2
738: 
739:             writer.start(
740:                 'linearGradient',
741:                 id="GR%x_%d" % (self._n_gradients, i),
742:                 x1=short_float_fmt(x1), y1=short_float_fmt(y1),
743:                 x2=short_float_fmt(xb), y2=short_float_fmt(yb))
744:             writer.element(
745:                 'stop',
746:                 offset='0',
747:                 style=generate_css({'stop-color': rgb2hex(c),
748:                                     'stop-opacity': short_float_fmt(c[-1])}))
749:             writer.element(
750:                 'stop',
751:                 offset='1',
752:                 style=generate_css({'stop-color': rgb2hex(c),
753:                                     'stop-opacity': "0"}))
754:             writer.end('linearGradient')
755: 
756:         writer.element(
757:             'polygon',
758:             id='GT%x' % self._n_gradients,
759:             points=" ".join([short_float_fmt(x)
760:                              for x in (x1, y1, x2, y2, x3, y3)]))
761:         writer.end('defs')
762: 
763:         avg_color = np.sum(colors[:, :], axis=0) / 3.0
764:         href = '#GT%x' % self._n_gradients
765:         writer.element(
766:             'use',
767:             attrib={'xlink:href': href,
768:                     'fill': rgb2hex(avg_color),
769:                     'fill-opacity': short_float_fmt(avg_color[-1])})
770:         for i in range(3):
771:             writer.element(
772:                 'use',
773:                 attrib={'xlink:href': href,
774:                         'fill': 'url(#GR%x_%d)' % (self._n_gradients, i),
775:                         'fill-opacity': '1',
776:                         'filter': 'url(#colorAdd)'})
777: 
778:         self._n_gradients += 1
779: 
780:     def draw_gouraud_triangles(self, gc, triangles_array, colors_array,
781:                                transform):
782:         attrib = {}
783:         clipid = self._get_clip(gc)
784:         if clipid is not None:
785:             attrib['clip-path'] = 'url(#%s)' % clipid
786: 
787:         self.writer.start('g', attrib=attrib)
788: 
789:         transform = transform.frozen()
790:         for tri, col in zip(triangles_array, colors_array):
791:             self.draw_gouraud_triangle(gc, tri, col, transform)
792: 
793:         self.writer.end('g')
794: 
795:     def option_scale_image(self):
796:         return True
797: 
798:     def get_image_magnification(self):
799:         return self.image_dpi / 72.0
800: 
801:     def draw_image(self, gc, x, y, im, transform=None):
802:         h, w = im.shape[:2]
803: 
804:         if w == 0 or h == 0:
805:             return
806: 
807:         attrib = {}
808:         clipid = self._get_clip(gc)
809:         if clipid is not None:
810:             # Can't apply clip-path directly to the image because the
811:             # image has a transformation, which would also be applied
812:             # to the clip-path
813:             self.writer.start('g', attrib={'clip-path': 'url(#%s)' % clipid})
814: 
815:         oid = gc.get_gid()
816:         url = gc.get_url()
817:         if url is not None:
818:             self.writer.start('a', attrib={'xlink:href': url})
819:         if rcParams['svg.image_inline']:
820:             bytesio = io.BytesIO()
821:             _png.write_png(im, bytesio)
822:             oid = oid or self._make_id('image', bytesio.getvalue())
823:             attrib['xlink:href'] = (
824:                 "data:image/png;base64,\n" +
825:                 base64.b64encode(bytesio.getvalue()).decode('ascii'))
826:         else:
827:             self._imaged[self.basename] = self._imaged.get(self.basename, 0) + 1
828:             filename = '%s.image%d.png'%(self.basename, self._imaged[self.basename])
829:             verbose.report('Writing image file for inclusion: %s' % filename)
830:             _png.write_png(im, filename)
831:             oid = oid or 'Im_' + self._make_id('image', filename)
832:             attrib['xlink:href'] = filename
833: 
834:         attrib['id'] = oid
835: 
836:         if transform is None:
837:             w = 72.0 * w / self.image_dpi
838:             h = 72.0 * h / self.image_dpi
839: 
840:             self.writer.element(
841:                 'image',
842:                 transform=generate_transform([
843:                     ('scale', (1, -1)), ('translate', (0, -h))]),
844:                 x=short_float_fmt(x),
845:                 y=short_float_fmt(-(self.height - y - h)),
846:                 width=short_float_fmt(w), height=short_float_fmt(h),
847:                 attrib=attrib)
848:         else:
849:             alpha = gc.get_alpha()
850:             if alpha != 1.0:
851:                 attrib['opacity'] = short_float_fmt(alpha)
852: 
853:             flipped = (
854:                 Affine2D().scale(1.0 / w, 1.0 / h) +
855:                 transform +
856:                 Affine2D()
857:                 .translate(x, y)
858:                 .scale(1.0, -1.0)
859:                 .translate(0.0, self.height))
860: 
861:             attrib['transform'] = generate_transform(
862:                 [('matrix', flipped.frozen())])
863:             self.writer.element(
864:                 'image',
865:                 width=short_float_fmt(w), height=short_float_fmt(h),
866:                 attrib=attrib)
867: 
868:         if url is not None:
869:             self.writer.end('a')
870:         if clipid is not None:
871:             self.writer.end('g')
872: 
873:     def _adjust_char_id(self, char_id):
874:         return char_id.replace("%20", "_")
875: 
876:     def _draw_text_as_path(self, gc, x, y, s, prop, angle, ismath, mtext=None):
877:         '''
878:         draw the text by converting them to paths using textpath module.
879: 
880:         Parameters
881:         ----------
882:         prop : `matplotlib.font_manager.FontProperties`
883:           font property
884: 
885:         s : str
886:           text to be converted
887: 
888:         usetex : bool
889:           If True, use matplotlib usetex mode.
890: 
891:         ismath : bool
892:           If True, use mathtext parser. If "TeX", use *usetex* mode.
893: 
894:         '''
895:         writer = self.writer
896: 
897:         writer.comment(s)
898: 
899:         glyph_map=self._glyph_map
900: 
901:         text2path = self._text2path
902:         color = rgb2hex(gc.get_rgb())
903:         fontsize = prop.get_size_in_points()
904: 
905:         style = {}
906:         if color != '#000000':
907:             style['fill'] = color
908:         if gc.get_alpha() != 1.0:
909:             style['opacity'] = short_float_fmt(gc.get_alpha())
910: 
911:         if not ismath:
912:             font = text2path._get_font(prop)
913:             _glyphs = text2path.get_glyphs_with_font(
914:                 font, s, glyph_map=glyph_map, return_new_glyphs_only=True)
915:             glyph_info, glyph_map_new, rects = _glyphs
916: 
917:             if glyph_map_new:
918:                 writer.start('defs')
919:                 for char_id, glyph_path in six.iteritems(glyph_map_new):
920:                     path = Path(*glyph_path)
921:                     path_data = self._convert_path(path, simplify=False)
922:                     writer.element('path', id=char_id, d=path_data)
923:                 writer.end('defs')
924: 
925:                 glyph_map.update(glyph_map_new)
926: 
927:             attrib = {}
928:             attrib['style'] = generate_css(style)
929:             font_scale = fontsize / text2path.FONT_SCALE
930:             attrib['transform'] = generate_transform([
931:                 ('translate', (x, y)),
932:                 ('rotate', (-angle,)),
933:                 ('scale', (font_scale, -font_scale))])
934: 
935:             writer.start('g', attrib=attrib)
936:             for glyph_id, xposition, yposition, scale in glyph_info:
937:                 attrib={'xlink:href': '#%s' % glyph_id}
938:                 if xposition != 0.0:
939:                     attrib['x'] = short_float_fmt(xposition)
940:                 if yposition != 0.0:
941:                     attrib['y'] = short_float_fmt(yposition)
942:                 writer.element(
943:                     'use',
944:                     attrib=attrib)
945: 
946:             writer.end('g')
947:         else:
948:             if ismath == "TeX":
949:                 _glyphs = text2path.get_glyphs_tex(prop, s, glyph_map=glyph_map,
950:                                                    return_new_glyphs_only=True)
951:             else:
952:                 _glyphs = text2path.get_glyphs_mathtext(prop, s, glyph_map=glyph_map,
953:                                                         return_new_glyphs_only=True)
954: 
955:             glyph_info, glyph_map_new, rects = _glyphs
956: 
957:             # we store the character glyphs w/o flipping. Instead, the
958:             # coordinate will be flipped when this characters are
959:             # used.
960:             if glyph_map_new:
961:                 writer.start('defs')
962:                 for char_id, glyph_path in six.iteritems(glyph_map_new):
963:                     char_id = self._adjust_char_id(char_id)
964:                     # Some characters are blank
965:                     if not len(glyph_path[0]):
966:                         path_data = ""
967:                     else:
968:                         path = Path(*glyph_path)
969:                         path_data = self._convert_path(path, simplify=False)
970:                     writer.element('path', id=char_id, d=path_data)
971:                 writer.end('defs')
972: 
973:                 glyph_map.update(glyph_map_new)
974: 
975:             attrib = {}
976:             font_scale = fontsize / text2path.FONT_SCALE
977:             attrib['style'] = generate_css(style)
978:             attrib['transform'] = generate_transform([
979:                 ('translate', (x, y)),
980:                 ('rotate', (-angle,)),
981:                 ('scale', (font_scale, -font_scale))])
982: 
983:             writer.start('g', attrib=attrib)
984:             for char_id, xposition, yposition, scale in glyph_info:
985:                 char_id = self._adjust_char_id(char_id)
986: 
987:                 writer.element(
988:                     'use',
989:                     transform=generate_transform([
990:                         ('translate', (xposition, yposition)),
991:                         ('scale', (scale,)),
992:                         ]),
993:                     attrib={'xlink:href': '#%s' % char_id})
994: 
995:             for verts, codes in rects:
996:                 path = Path(verts, codes)
997:                 path_data = self._convert_path(path, simplify=False)
998:                 writer.element('path', d=path_data)
999: 
1000:             writer.end('g')
1001: 
1002:     def _draw_text_as_text(self, gc, x, y, s, prop, angle, ismath, mtext=None):
1003:         writer = self.writer
1004: 
1005:         color = rgb2hex(gc.get_rgb())
1006:         style = {}
1007:         if color != '#000000':
1008:             style['fill'] = color
1009:         if gc.get_alpha() != 1.0:
1010:             style['opacity'] = short_float_fmt(gc.get_alpha())
1011: 
1012:         if not ismath:
1013:             font = self._get_font(prop)
1014:             font.set_text(s, 0.0, flags=LOAD_NO_HINTING)
1015: 
1016:             fontsize = prop.get_size_in_points()
1017: 
1018:             fontfamily = font.family_name
1019:             fontstyle = prop.get_style()
1020: 
1021:             attrib = {}
1022:             # Must add "px" to workaround a Firefox bug
1023:             style['font-size'] = short_float_fmt(fontsize) + 'px'
1024:             style['font-family'] = six.text_type(fontfamily)
1025:             style['font-style'] = prop.get_style().lower()
1026:             style['font-weight'] = six.text_type(prop.get_weight()).lower()
1027:             attrib['style'] = generate_css(style)
1028: 
1029:             if mtext and (angle == 0 or mtext.get_rotation_mode() == "anchor"):
1030:                 # If text anchoring can be supported, get the original
1031:                 # coordinates and add alignment information.
1032: 
1033:                 # Get anchor coordinates.
1034:                 transform = mtext.get_transform()
1035:                 ax, ay = transform.transform_point(mtext.get_position())
1036:                 ay = self.height - ay
1037: 
1038:                 # Don't do vertical anchor alignment. Most applications do not
1039:                 # support 'alignment-baseline' yet. Apply the vertical layout
1040:                 # to the anchor point manually for now.
1041:                 angle_rad = np.deg2rad(angle)
1042:                 dir_vert = np.array([np.sin(angle_rad), np.cos(angle_rad)])
1043:                 v_offset = np.dot(dir_vert, [(x - ax), (y - ay)])
1044:                 ax = ax + v_offset * dir_vert[0]
1045:                 ay = ay + v_offset * dir_vert[1]
1046: 
1047:                 ha_mpl_to_svg = {'left': 'start', 'right': 'end',
1048:                                  'center': 'middle'}
1049:                 style['text-anchor'] = ha_mpl_to_svg[mtext.get_ha()]
1050: 
1051:                 attrib['x'] = short_float_fmt(ax)
1052:                 attrib['y'] = short_float_fmt(ay)
1053:                 attrib['style'] = generate_css(style)
1054:                 attrib['transform'] = "rotate(%s, %s, %s)" % (
1055:                     short_float_fmt(-angle),
1056:                     short_float_fmt(ax),
1057:                     short_float_fmt(ay))
1058:                 writer.element('text', s, attrib=attrib)
1059:             else:
1060:                 attrib['transform'] = generate_transform([
1061:                     ('translate', (x, y)),
1062:                     ('rotate', (-angle,))])
1063: 
1064:                 writer.element('text', s, attrib=attrib)
1065: 
1066:             if rcParams['svg.fonttype'] == 'svgfont':
1067:                 fontset = self._fonts.setdefault(font.fname, set())
1068:                 for c in s:
1069:                     fontset.add(ord(c))
1070:         else:
1071:             writer.comment(s)
1072: 
1073:             width, height, descent, svg_elements, used_characters = \
1074:                    self.mathtext_parser.parse(s, 72, prop)
1075:             svg_glyphs = svg_elements.svg_glyphs
1076:             svg_rects = svg_elements.svg_rects
1077: 
1078:             attrib = {}
1079:             attrib['style'] = generate_css(style)
1080:             attrib['transform'] = generate_transform([
1081:                 ('translate', (x, y)),
1082:                 ('rotate', (-angle,))])
1083: 
1084:             # Apply attributes to 'g', not 'text', because we likely
1085:             # have some rectangles as well with the same style and
1086:             # transformation
1087:             writer.start('g', attrib=attrib)
1088: 
1089:             writer.start('text')
1090: 
1091:             # Sort the characters by font, and output one tspan for
1092:             # each
1093:             spans = OrderedDict()
1094:             for font, fontsize, thetext, new_x, new_y, metrics in svg_glyphs:
1095:                 style = generate_css({
1096:                     'font-size': short_float_fmt(fontsize) + 'px',
1097:                     'font-family': font.family_name,
1098:                     'font-style': font.style_name.lower(),
1099:                     'font-weight': font.style_name.lower()})
1100:                 if thetext == 32:
1101:                     thetext = 0xa0 # non-breaking space
1102:                 spans.setdefault(style, []).append((new_x, -new_y, thetext))
1103: 
1104:             if rcParams['svg.fonttype'] == 'svgfont':
1105:                 for font, fontsize, thetext, new_x, new_y, metrics in svg_glyphs:
1106:                     fontset = self._fonts.setdefault(font.fname, set())
1107:                     fontset.add(thetext)
1108: 
1109:             for style, chars in six.iteritems(spans):
1110:                 chars.sort()
1111: 
1112:                 same_y = True
1113:                 if len(chars) > 1:
1114:                     last_y = chars[0][1]
1115:                     for i in xrange(1, len(chars)):
1116:                         if chars[i][1] != last_y:
1117:                             same_y = False
1118:                             break
1119:                 if same_y:
1120:                     ys = six.text_type(chars[0][1])
1121:                 else:
1122:                     ys = ' '.join(six.text_type(c[1]) for c in chars)
1123: 
1124:                 attrib = {
1125:                     'style': style,
1126:                     'x': ' '.join(short_float_fmt(c[0]) for c in chars),
1127:                     'y': ys
1128:                     }
1129: 
1130:                 writer.element(
1131:                     'tspan',
1132:                     ''.join(unichr(c[2]) for c in chars),
1133:                     attrib=attrib)
1134: 
1135:             writer.end('text')
1136: 
1137:             if len(svg_rects):
1138:                 for x, y, width, height in svg_rects:
1139:                     writer.element(
1140:                         'rect',
1141:                         x=short_float_fmt(x),
1142:                         y=short_float_fmt(-y + height),
1143:                         width=short_float_fmt(width),
1144:                         height=short_float_fmt(height)
1145:                         )
1146: 
1147:             writer.end('g')
1148: 
1149:     def draw_tex(self, gc, x, y, s, prop, angle, ismath='TeX!', mtext=None):
1150:         self._draw_text_as_path(gc, x, y, s, prop, angle, ismath="TeX")
1151: 
1152:     def draw_text(self, gc, x, y, s, prop, angle, ismath=False, mtext=None):
1153:         clipid = self._get_clip(gc)
1154:         if clipid is not None:
1155:             # Cannot apply clip-path directly to the text, because
1156:             # is has a transformation
1157:             self.writer.start(
1158:                 'g', attrib={'clip-path': 'url(#%s)' % clipid})
1159: 
1160:         if gc.get_url() is not None:
1161:             self.writer.start('a', {'xlink:href': gc.get_url()})
1162: 
1163:         if rcParams['svg.fonttype'] == 'path':
1164:             self._draw_text_as_path(gc, x, y, s, prop, angle, ismath, mtext)
1165:         else:
1166:             self._draw_text_as_text(gc, x, y, s, prop, angle, ismath, mtext)
1167: 
1168:         if gc.get_url() is not None:
1169:             self.writer.end('a')
1170: 
1171:         if clipid is not None:
1172:             self.writer.end('g')
1173: 
1174:     def flipy(self):
1175:         return True
1176: 
1177:     def get_canvas_width_height(self):
1178:         return self.width, self.height
1179: 
1180:     def get_text_width_height_descent(self, s, prop, ismath):
1181:         return self._text2path.get_text_width_height_descent(s, prop, ismath)
1182: 
1183: 
1184: class FigureCanvasSVG(FigureCanvasBase):
1185:     filetypes = {'svg': 'Scalable Vector Graphics',
1186:                  'svgz': 'Scalable Vector Graphics'}
1187: 
1188:     fixed_dpi = 72
1189: 
1190:     def print_svg(self, filename, *args, **kwargs):
1191:         if isinstance(filename, six.string_types):
1192:             with io.open(filename, 'w', encoding='utf-8') as svgwriter:
1193:                 return self._print_svg(filename, svgwriter, **kwargs)
1194: 
1195:         if not is_writable_file_like(filename):
1196:             raise ValueError("filename must be a path or a file-like object")
1197: 
1198:         svgwriter = filename
1199:         filename = getattr(svgwriter, 'name', '')
1200:         if not isinstance(filename, six.string_types):
1201:             filename = ''
1202: 
1203:         if not isinstance(svgwriter, io.TextIOBase):
1204:             if six.PY3:
1205:                 svgwriter = io.TextIOWrapper(svgwriter, 'utf-8')
1206:             else:
1207:                 svgwriter = codecs.getwriter('utf-8')(svgwriter)
1208:             detach = True
1209:         else:
1210:             detach = False
1211: 
1212:         result = self._print_svg(filename, svgwriter, **kwargs)
1213: 
1214:         # Detach underlying stream from wrapper so that it remains open in the
1215:         # caller.
1216:         if detach:
1217:             if six.PY3:
1218:                 svgwriter.detach()
1219:             else:
1220:                 svgwriter.reset()
1221:                 svgwriter.stream = io.BytesIO()
1222: 
1223:         return result
1224: 
1225:     def print_svgz(self, filename, *args, **kwargs):
1226:         if isinstance(filename, six.string_types):
1227:             options = dict(filename=filename)
1228:         elif is_writable_file_like(filename):
1229:             options = dict(fileobj=filename)
1230:         else:
1231:             raise ValueError("filename must be a path or a file-like object")
1232: 
1233:         with gzip.GzipFile(mode='w', **options) as gzipwriter:
1234:             return self.print_svg(gzipwriter)
1235: 
1236:     def _print_svg(self, filename, svgwriter, **kwargs):
1237:         image_dpi = kwargs.pop("dpi", 72)
1238:         self.figure.set_dpi(72.0)
1239:         width, height = self.figure.get_size_inches()
1240:         w, h = width*72, height*72
1241: 
1242:         _bbox_inches_restore = kwargs.pop("bbox_inches_restore", None)
1243:         renderer = MixedModeRenderer(
1244:             self.figure,
1245:             width, height, image_dpi, RendererSVG(w, h, svgwriter, filename, image_dpi),
1246:             bbox_inches_restore=_bbox_inches_restore)
1247: 
1248:         self.figure.draw(renderer)
1249:         renderer.finalize()
1250: 
1251:     def get_default_filetype(self):
1252:         return 'svg'
1253: 
1254: class FigureManagerSVG(FigureManagerBase):
1255:     pass
1256: 
1257: 
1258: svgProlog = '''\
1259: <?xml version="1.0" encoding="utf-8" standalone="no"?>
1260: <!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
1261:   "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
1262: <!-- Created with matplotlib (http://matplotlib.org/) -->
1263: '''
1264: 
1265: 
1266: @_Backend.export
1267: class _BackendSVG(_Backend):
1268:     FigureCanvas = FigureCanvasSVG
1269:     FigureManager = FigureManagerSVG
1270: 

"""

# Import the stypy library necessary elements
from stypy.type_inference_programs.type_inference_programs_imports import *

# Create the module type store
module_type_store = Context(None, __file__)

# ################# Begin of the type inference program ##################

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 4, 0))

# 'from collections import OrderedDict' statement (line 4)
try:
    from collections import OrderedDict

except:
    OrderedDict = UndefinedType
import_from_module(stypy.reporting.localization.Localization(__file__, 4, 0), 'collections', None, module_type_store, ['OrderedDict'], [OrderedDict])

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 6, 0))

# 'import six' statement (line 6)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_252842 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 6, 0), 'six')

if (type(import_252842) is not StypyTypeError):

    if (import_252842 != 'pyd_module'):
        __import__(import_252842)
        sys_modules_252843 = sys.modules[import_252842]
        import_module(stypy.reporting.localization.Localization(__file__, 6, 0), 'six', sys_modules_252843.module_type_store, module_type_store)
    else:
        import six

        import_module(stypy.reporting.localization.Localization(__file__, 6, 0), 'six', six, module_type_store)

else:
    # Assigning a type to the variable 'six' (line 6)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 6, 0), 'six', import_252842)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 7, 0))

# 'from six import unichr' statement (line 7)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_252844 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 7, 0), 'six')

if (type(import_252844) is not StypyTypeError):

    if (import_252844 != 'pyd_module'):
        __import__(import_252844)
        sys_modules_252845 = sys.modules[import_252844]
        import_from_module(stypy.reporting.localization.Localization(__file__, 7, 0), 'six', sys_modules_252845.module_type_store, module_type_store, ['unichr'])
        nest_module(stypy.reporting.localization.Localization(__file__, 7, 0), __file__, sys_modules_252845, sys_modules_252845.module_type_store, module_type_store)
    else:
        from six import unichr

        import_from_module(stypy.reporting.localization.Localization(__file__, 7, 0), 'six', None, module_type_store, ['unichr'], [unichr])

else:
    # Assigning a type to the variable 'six' (line 7)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 7, 0), 'six', import_252844)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 8, 0))

# 'from six.moves import xrange' statement (line 8)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_252846 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 8, 0), 'six.moves')

if (type(import_252846) is not StypyTypeError):

    if (import_252846 != 'pyd_module'):
        __import__(import_252846)
        sys_modules_252847 = sys.modules[import_252846]
        import_from_module(stypy.reporting.localization.Localization(__file__, 8, 0), 'six.moves', sys_modules_252847.module_type_store, module_type_store, ['xrange'])
        nest_module(stypy.reporting.localization.Localization(__file__, 8, 0), __file__, sys_modules_252847, sys_modules_252847.module_type_store, module_type_store)
    else:
        from six.moves import xrange

        import_from_module(stypy.reporting.localization.Localization(__file__, 8, 0), 'six.moves', None, module_type_store, ['xrange'], [xrange])

else:
    # Assigning a type to the variable 'six.moves' (line 8)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 8, 0), 'six.moves', import_252846)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 10, 0))

# Multiple import statement. import os (1/8) (line 10)
import os

import_module(stypy.reporting.localization.Localization(__file__, 10, 0), 'os', os, module_type_store)
# Multiple import statement. import base64 (2/8) (line 10)
import base64

import_module(stypy.reporting.localization.Localization(__file__, 10, 0), 'base64', base64, module_type_store)
# Multiple import statement. import tempfile (3/8) (line 10)
import tempfile

import_module(stypy.reporting.localization.Localization(__file__, 10, 0), 'tempfile', tempfile, module_type_store)
# Multiple import statement. import gzip (4/8) (line 10)
import gzip

import_module(stypy.reporting.localization.Localization(__file__, 10, 0), 'gzip', gzip, module_type_store)
# Multiple import statement. import io (5/8) (line 10)
import io

import_module(stypy.reporting.localization.Localization(__file__, 10, 0), 'io', io, module_type_store)
# Multiple import statement. import sys (6/8) (line 10)
import sys

import_module(stypy.reporting.localization.Localization(__file__, 10, 0), 'sys', sys, module_type_store)
# Multiple import statement. import codecs (7/8) (line 10)
import codecs

import_module(stypy.reporting.localization.Localization(__file__, 10, 0), 'codecs', codecs, module_type_store)
# Multiple import statement. import re (8/8) (line 10)
import re

import_module(stypy.reporting.localization.Localization(__file__, 10, 0), 're', re, module_type_store)

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 12, 0))

# 'import numpy' statement (line 12)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_252848 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 12, 0), 'numpy')

if (type(import_252848) is not StypyTypeError):

    if (import_252848 != 'pyd_module'):
        __import__(import_252848)
        sys_modules_252849 = sys.modules[import_252848]
        import_module(stypy.reporting.localization.Localization(__file__, 12, 0), 'np', sys_modules_252849.module_type_store, module_type_store)
    else:
        import numpy as np

        import_module(stypy.reporting.localization.Localization(__file__, 12, 0), 'np', numpy, module_type_store)

else:
    # Assigning a type to the variable 'numpy' (line 12)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 12, 0), 'numpy', import_252848)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 14, 0))

# 'from hashlib import md5' statement (line 14)
try:
    from hashlib import md5

except:
    md5 = UndefinedType
import_from_module(stypy.reporting.localization.Localization(__file__, 14, 0), 'hashlib', None, module_type_store, ['md5'], [md5])

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 15, 0))

# 'import uuid' statement (line 15)
import uuid

import_module(stypy.reporting.localization.Localization(__file__, 15, 0), 'uuid', uuid, module_type_store)

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 17, 0))

# 'from matplotlib import verbose, __version__, rcParams' statement (line 17)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_252850 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 17, 0), 'matplotlib')

if (type(import_252850) is not StypyTypeError):

    if (import_252850 != 'pyd_module'):
        __import__(import_252850)
        sys_modules_252851 = sys.modules[import_252850]
        import_from_module(stypy.reporting.localization.Localization(__file__, 17, 0), 'matplotlib', sys_modules_252851.module_type_store, module_type_store, ['verbose', '__version__', 'rcParams'])
        nest_module(stypy.reporting.localization.Localization(__file__, 17, 0), __file__, sys_modules_252851, sys_modules_252851.module_type_store, module_type_store)
    else:
        from matplotlib import verbose, __version__, rcParams

        import_from_module(stypy.reporting.localization.Localization(__file__, 17, 0), 'matplotlib', None, module_type_store, ['verbose', '__version__', 'rcParams'], [verbose, __version__, rcParams])

else:
    # Assigning a type to the variable 'matplotlib' (line 17)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 17, 0), 'matplotlib', import_252850)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 18, 0))

# 'from matplotlib.backend_bases import _Backend, FigureCanvasBase, FigureManagerBase, GraphicsContextBase, RendererBase' statement (line 18)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_252852 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 18, 0), 'matplotlib.backend_bases')

if (type(import_252852) is not StypyTypeError):

    if (import_252852 != 'pyd_module'):
        __import__(import_252852)
        sys_modules_252853 = sys.modules[import_252852]
        import_from_module(stypy.reporting.localization.Localization(__file__, 18, 0), 'matplotlib.backend_bases', sys_modules_252853.module_type_store, module_type_store, ['_Backend', 'FigureCanvasBase', 'FigureManagerBase', 'GraphicsContextBase', 'RendererBase'])
        nest_module(stypy.reporting.localization.Localization(__file__, 18, 0), __file__, sys_modules_252853, sys_modules_252853.module_type_store, module_type_store)
    else:
        from matplotlib.backend_bases import _Backend, FigureCanvasBase, FigureManagerBase, GraphicsContextBase, RendererBase

        import_from_module(stypy.reporting.localization.Localization(__file__, 18, 0), 'matplotlib.backend_bases', None, module_type_store, ['_Backend', 'FigureCanvasBase', 'FigureManagerBase', 'GraphicsContextBase', 'RendererBase'], [_Backend, FigureCanvasBase, FigureManagerBase, GraphicsContextBase, RendererBase])

else:
    # Assigning a type to the variable 'matplotlib.backend_bases' (line 18)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 18, 0), 'matplotlib.backend_bases', import_252852)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 21, 0))

# 'from matplotlib.backends.backend_mixed import MixedModeRenderer' statement (line 21)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_252854 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 21, 0), 'matplotlib.backends.backend_mixed')

if (type(import_252854) is not StypyTypeError):

    if (import_252854 != 'pyd_module'):
        __import__(import_252854)
        sys_modules_252855 = sys.modules[import_252854]
        import_from_module(stypy.reporting.localization.Localization(__file__, 21, 0), 'matplotlib.backends.backend_mixed', sys_modules_252855.module_type_store, module_type_store, ['MixedModeRenderer'])
        nest_module(stypy.reporting.localization.Localization(__file__, 21, 0), __file__, sys_modules_252855, sys_modules_252855.module_type_store, module_type_store)
    else:
        from matplotlib.backends.backend_mixed import MixedModeRenderer

        import_from_module(stypy.reporting.localization.Localization(__file__, 21, 0), 'matplotlib.backends.backend_mixed', None, module_type_store, ['MixedModeRenderer'], [MixedModeRenderer])

else:
    # Assigning a type to the variable 'matplotlib.backends.backend_mixed' (line 21)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 21, 0), 'matplotlib.backends.backend_mixed', import_252854)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 22, 0))

# 'from matplotlib.cbook import is_writable_file_like, maxdict' statement (line 22)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_252856 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 22, 0), 'matplotlib.cbook')

if (type(import_252856) is not StypyTypeError):

    if (import_252856 != 'pyd_module'):
        __import__(import_252856)
        sys_modules_252857 = sys.modules[import_252856]
        import_from_module(stypy.reporting.localization.Localization(__file__, 22, 0), 'matplotlib.cbook', sys_modules_252857.module_type_store, module_type_store, ['is_writable_file_like', 'maxdict'])
        nest_module(stypy.reporting.localization.Localization(__file__, 22, 0), __file__, sys_modules_252857, sys_modules_252857.module_type_store, module_type_store)
    else:
        from matplotlib.cbook import is_writable_file_like, maxdict

        import_from_module(stypy.reporting.localization.Localization(__file__, 22, 0), 'matplotlib.cbook', None, module_type_store, ['is_writable_file_like', 'maxdict'], [is_writable_file_like, maxdict])

else:
    # Assigning a type to the variable 'matplotlib.cbook' (line 22)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 22, 0), 'matplotlib.cbook', import_252856)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 23, 0))

# 'from matplotlib.colors import rgb2hex' statement (line 23)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_252858 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 23, 0), 'matplotlib.colors')

if (type(import_252858) is not StypyTypeError):

    if (import_252858 != 'pyd_module'):
        __import__(import_252858)
        sys_modules_252859 = sys.modules[import_252858]
        import_from_module(stypy.reporting.localization.Localization(__file__, 23, 0), 'matplotlib.colors', sys_modules_252859.module_type_store, module_type_store, ['rgb2hex'])
        nest_module(stypy.reporting.localization.Localization(__file__, 23, 0), __file__, sys_modules_252859, sys_modules_252859.module_type_store, module_type_store)
    else:
        from matplotlib.colors import rgb2hex

        import_from_module(stypy.reporting.localization.Localization(__file__, 23, 0), 'matplotlib.colors', None, module_type_store, ['rgb2hex'], [rgb2hex])

else:
    # Assigning a type to the variable 'matplotlib.colors' (line 23)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 23, 0), 'matplotlib.colors', import_252858)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 24, 0))

# 'from matplotlib.figure import Figure' statement (line 24)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_252860 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 24, 0), 'matplotlib.figure')

if (type(import_252860) is not StypyTypeError):

    if (import_252860 != 'pyd_module'):
        __import__(import_252860)
        sys_modules_252861 = sys.modules[import_252860]
        import_from_module(stypy.reporting.localization.Localization(__file__, 24, 0), 'matplotlib.figure', sys_modules_252861.module_type_store, module_type_store, ['Figure'])
        nest_module(stypy.reporting.localization.Localization(__file__, 24, 0), __file__, sys_modules_252861, sys_modules_252861.module_type_store, module_type_store)
    else:
        from matplotlib.figure import Figure

        import_from_module(stypy.reporting.localization.Localization(__file__, 24, 0), 'matplotlib.figure', None, module_type_store, ['Figure'], [Figure])

else:
    # Assigning a type to the variable 'matplotlib.figure' (line 24)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 24, 0), 'matplotlib.figure', import_252860)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 25, 0))

# 'from matplotlib.font_manager import findfont, FontProperties, get_font' statement (line 25)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_252862 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 25, 0), 'matplotlib.font_manager')

if (type(import_252862) is not StypyTypeError):

    if (import_252862 != 'pyd_module'):
        __import__(import_252862)
        sys_modules_252863 = sys.modules[import_252862]
        import_from_module(stypy.reporting.localization.Localization(__file__, 25, 0), 'matplotlib.font_manager', sys_modules_252863.module_type_store, module_type_store, ['findfont', 'FontProperties', 'get_font'])
        nest_module(stypy.reporting.localization.Localization(__file__, 25, 0), __file__, sys_modules_252863, sys_modules_252863.module_type_store, module_type_store)
    else:
        from matplotlib.font_manager import findfont, FontProperties, get_font

        import_from_module(stypy.reporting.localization.Localization(__file__, 25, 0), 'matplotlib.font_manager', None, module_type_store, ['findfont', 'FontProperties', 'get_font'], [findfont, FontProperties, get_font])

else:
    # Assigning a type to the variable 'matplotlib.font_manager' (line 25)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 25, 0), 'matplotlib.font_manager', import_252862)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 26, 0))

# 'from matplotlib.ft2font import KERNING_DEFAULT, LOAD_NO_HINTING' statement (line 26)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_252864 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 26, 0), 'matplotlib.ft2font')

if (type(import_252864) is not StypyTypeError):

    if (import_252864 != 'pyd_module'):
        __import__(import_252864)
        sys_modules_252865 = sys.modules[import_252864]
        import_from_module(stypy.reporting.localization.Localization(__file__, 26, 0), 'matplotlib.ft2font', sys_modules_252865.module_type_store, module_type_store, ['KERNING_DEFAULT', 'LOAD_NO_HINTING'])
        nest_module(stypy.reporting.localization.Localization(__file__, 26, 0), __file__, sys_modules_252865, sys_modules_252865.module_type_store, module_type_store)
    else:
        from matplotlib.ft2font import KERNING_DEFAULT, LOAD_NO_HINTING

        import_from_module(stypy.reporting.localization.Localization(__file__, 26, 0), 'matplotlib.ft2font', None, module_type_store, ['KERNING_DEFAULT', 'LOAD_NO_HINTING'], [KERNING_DEFAULT, LOAD_NO_HINTING])

else:
    # Assigning a type to the variable 'matplotlib.ft2font' (line 26)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 26, 0), 'matplotlib.ft2font', import_252864)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 27, 0))

# 'from matplotlib.mathtext import MathTextParser' statement (line 27)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_252866 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 27, 0), 'matplotlib.mathtext')

if (type(import_252866) is not StypyTypeError):

    if (import_252866 != 'pyd_module'):
        __import__(import_252866)
        sys_modules_252867 = sys.modules[import_252866]
        import_from_module(stypy.reporting.localization.Localization(__file__, 27, 0), 'matplotlib.mathtext', sys_modules_252867.module_type_store, module_type_store, ['MathTextParser'])
        nest_module(stypy.reporting.localization.Localization(__file__, 27, 0), __file__, sys_modules_252867, sys_modules_252867.module_type_store, module_type_store)
    else:
        from matplotlib.mathtext import MathTextParser

        import_from_module(stypy.reporting.localization.Localization(__file__, 27, 0), 'matplotlib.mathtext', None, module_type_store, ['MathTextParser'], [MathTextParser])

else:
    # Assigning a type to the variable 'matplotlib.mathtext' (line 27)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 27, 0), 'matplotlib.mathtext', import_252866)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 28, 0))

# 'from matplotlib.path import Path' statement (line 28)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_252868 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 28, 0), 'matplotlib.path')

if (type(import_252868) is not StypyTypeError):

    if (import_252868 != 'pyd_module'):
        __import__(import_252868)
        sys_modules_252869 = sys.modules[import_252868]
        import_from_module(stypy.reporting.localization.Localization(__file__, 28, 0), 'matplotlib.path', sys_modules_252869.module_type_store, module_type_store, ['Path'])
        nest_module(stypy.reporting.localization.Localization(__file__, 28, 0), __file__, sys_modules_252869, sys_modules_252869.module_type_store, module_type_store)
    else:
        from matplotlib.path import Path

        import_from_module(stypy.reporting.localization.Localization(__file__, 28, 0), 'matplotlib.path', None, module_type_store, ['Path'], [Path])

else:
    # Assigning a type to the variable 'matplotlib.path' (line 28)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 28, 0), 'matplotlib.path', import_252868)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 29, 0))

# 'from matplotlib import _path' statement (line 29)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_252870 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 29, 0), 'matplotlib')

if (type(import_252870) is not StypyTypeError):

    if (import_252870 != 'pyd_module'):
        __import__(import_252870)
        sys_modules_252871 = sys.modules[import_252870]
        import_from_module(stypy.reporting.localization.Localization(__file__, 29, 0), 'matplotlib', sys_modules_252871.module_type_store, module_type_store, ['_path'])
        nest_module(stypy.reporting.localization.Localization(__file__, 29, 0), __file__, sys_modules_252871, sys_modules_252871.module_type_store, module_type_store)
    else:
        from matplotlib import _path

        import_from_module(stypy.reporting.localization.Localization(__file__, 29, 0), 'matplotlib', None, module_type_store, ['_path'], [_path])

else:
    # Assigning a type to the variable 'matplotlib' (line 29)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 29, 0), 'matplotlib', import_252870)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 30, 0))

# 'from matplotlib.transforms import Affine2D, Affine2DBase' statement (line 30)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_252872 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 30, 0), 'matplotlib.transforms')

if (type(import_252872) is not StypyTypeError):

    if (import_252872 != 'pyd_module'):
        __import__(import_252872)
        sys_modules_252873 = sys.modules[import_252872]
        import_from_module(stypy.reporting.localization.Localization(__file__, 30, 0), 'matplotlib.transforms', sys_modules_252873.module_type_store, module_type_store, ['Affine2D', 'Affine2DBase'])
        nest_module(stypy.reporting.localization.Localization(__file__, 30, 0), __file__, sys_modules_252873, sys_modules_252873.module_type_store, module_type_store)
    else:
        from matplotlib.transforms import Affine2D, Affine2DBase

        import_from_module(stypy.reporting.localization.Localization(__file__, 30, 0), 'matplotlib.transforms', None, module_type_store, ['Affine2D', 'Affine2DBase'], [Affine2D, Affine2DBase])

else:
    # Assigning a type to the variable 'matplotlib.transforms' (line 30)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 30, 0), 'matplotlib.transforms', import_252872)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 31, 0))

# 'from matplotlib import _png' statement (line 31)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_252874 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 31, 0), 'matplotlib')

if (type(import_252874) is not StypyTypeError):

    if (import_252874 != 'pyd_module'):
        __import__(import_252874)
        sys_modules_252875 = sys.modules[import_252874]
        import_from_module(stypy.reporting.localization.Localization(__file__, 31, 0), 'matplotlib', sys_modules_252875.module_type_store, module_type_store, ['_png'])
        nest_module(stypy.reporting.localization.Localization(__file__, 31, 0), __file__, sys_modules_252875, sys_modules_252875.module_type_store, module_type_store)
    else:
        from matplotlib import _png

        import_from_module(stypy.reporting.localization.Localization(__file__, 31, 0), 'matplotlib', None, module_type_store, ['_png'], [_png])

else:
    # Assigning a type to the variable 'matplotlib' (line 31)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 31, 0), 'matplotlib', import_252874)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 33, 0))

# 'from xml.sax.saxutils import escape_xml_text' statement (line 33)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/backends/')
import_252876 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 33, 0), 'xml.sax.saxutils')

if (type(import_252876) is not StypyTypeError):

    if (import_252876 != 'pyd_module'):
        __import__(import_252876)
        sys_modules_252877 = sys.modules[import_252876]
        import_from_module(stypy.reporting.localization.Localization(__file__, 33, 0), 'xml.sax.saxutils', sys_modules_252877.module_type_store, module_type_store, ['escape'])
        nest_module(stypy.reporting.localization.Localization(__file__, 33, 0), __file__, sys_modules_252877, sys_modules_252877.module_type_store, module_type_store)
    else:
        from xml.sax.saxutils import escape as escape_xml_text

        import_from_module(stypy.reporting.localization.Localization(__file__, 33, 0), 'xml.sax.saxutils', None, module_type_store, ['escape'], [escape_xml_text])

else:
    # Assigning a type to the variable 'xml.sax.saxutils' (line 33)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 33, 0), 'xml.sax.saxutils', import_252876)

# Adding an alias
module_type_store.add_alias('escape_xml_text', 'escape')
remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/backends/')


# Assigning a Name to a Name (line 35):

# Assigning a Name to a Name (line 35):
# Getting the type of '__version__' (line 35)
version___252878 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 35, 18), '__version__')
# Assigning a type to the variable 'backend_version' (line 35)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 35, 0), 'backend_version', version___252878)

@norecursion
def escape_cdata(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'escape_cdata'
    module_type_store = module_type_store.open_function_context('escape_cdata', 74, 0, False)
    
    # Passed parameters checking function
    escape_cdata.stypy_localization = localization
    escape_cdata.stypy_type_of_self = None
    escape_cdata.stypy_type_store = module_type_store
    escape_cdata.stypy_function_name = 'escape_cdata'
    escape_cdata.stypy_param_names_list = ['s']
    escape_cdata.stypy_varargs_param_name = None
    escape_cdata.stypy_kwargs_param_name = None
    escape_cdata.stypy_call_defaults = defaults
    escape_cdata.stypy_call_varargs = varargs
    escape_cdata.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'escape_cdata', ['s'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'escape_cdata', localization, ['s'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'escape_cdata(...)' code ##################

    
    # Assigning a Call to a Name (line 75):
    
    # Assigning a Call to a Name (line 75):
    
    # Call to replace(...): (line 75)
    # Processing the call arguments (line 75)
    unicode_252881 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 75, 18), 'unicode', u'&')
    unicode_252882 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 75, 23), 'unicode', u'&amp;')
    # Processing the call keyword arguments (line 75)
    kwargs_252883 = {}
    # Getting the type of 's' (line 75)
    s_252879 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 75, 8), 's', False)
    # Obtaining the member 'replace' of a type (line 75)
    replace_252880 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 75, 8), s_252879, 'replace')
    # Calling replace(args, kwargs) (line 75)
    replace_call_result_252884 = invoke(stypy.reporting.localization.Localization(__file__, 75, 8), replace_252880, *[unicode_252881, unicode_252882], **kwargs_252883)
    
    # Assigning a type to the variable 's' (line 75)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 75, 4), 's', replace_call_result_252884)
    
    # Assigning a Call to a Name (line 76):
    
    # Assigning a Call to a Name (line 76):
    
    # Call to replace(...): (line 76)
    # Processing the call arguments (line 76)
    unicode_252887 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 76, 18), 'unicode', u'<')
    unicode_252888 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 76, 23), 'unicode', u'&lt;')
    # Processing the call keyword arguments (line 76)
    kwargs_252889 = {}
    # Getting the type of 's' (line 76)
    s_252885 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 76, 8), 's', False)
    # Obtaining the member 'replace' of a type (line 76)
    replace_252886 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 76, 8), s_252885, 'replace')
    # Calling replace(args, kwargs) (line 76)
    replace_call_result_252890 = invoke(stypy.reporting.localization.Localization(__file__, 76, 8), replace_252886, *[unicode_252887, unicode_252888], **kwargs_252889)
    
    # Assigning a type to the variable 's' (line 76)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 76, 4), 's', replace_call_result_252890)
    
    # Assigning a Call to a Name (line 77):
    
    # Assigning a Call to a Name (line 77):
    
    # Call to replace(...): (line 77)
    # Processing the call arguments (line 77)
    unicode_252893 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 77, 18), 'unicode', u'>')
    unicode_252894 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 77, 23), 'unicode', u'&gt;')
    # Processing the call keyword arguments (line 77)
    kwargs_252895 = {}
    # Getting the type of 's' (line 77)
    s_252891 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 77, 8), 's', False)
    # Obtaining the member 'replace' of a type (line 77)
    replace_252892 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 77, 8), s_252891, 'replace')
    # Calling replace(args, kwargs) (line 77)
    replace_call_result_252896 = invoke(stypy.reporting.localization.Localization(__file__, 77, 8), replace_252892, *[unicode_252893, unicode_252894], **kwargs_252895)
    
    # Assigning a type to the variable 's' (line 77)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 77, 4), 's', replace_call_result_252896)
    # Getting the type of 's' (line 78)
    s_252897 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 78, 11), 's')
    # Assigning a type to the variable 'stypy_return_type' (line 78)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 78, 4), 'stypy_return_type', s_252897)
    
    # ################# End of 'escape_cdata(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'escape_cdata' in the type store
    # Getting the type of 'stypy_return_type' (line 74)
    stypy_return_type_252898 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 74, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_252898)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'escape_cdata'
    return stypy_return_type_252898

# Assigning a type to the variable 'escape_cdata' (line 74)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 74, 0), 'escape_cdata', escape_cdata)

# Assigning a Call to a Name (line 80):

# Assigning a Call to a Name (line 80):

# Call to compile(...): (line 80)
# Processing the call arguments (line 80)
unicode_252901 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 80, 33), 'unicode', u'-(?=-)')
# Processing the call keyword arguments (line 80)
kwargs_252902 = {}
# Getting the type of 're' (line 80)
re_252899 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 80, 22), 're', False)
# Obtaining the member 'compile' of a type (line 80)
compile_252900 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 80, 22), re_252899, 'compile')
# Calling compile(args, kwargs) (line 80)
compile_call_result_252903 = invoke(stypy.reporting.localization.Localization(__file__, 80, 22), compile_252900, *[unicode_252901], **kwargs_252902)

# Assigning a type to the variable '_escape_xml_comment' (line 80)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 80, 0), '_escape_xml_comment', compile_call_result_252903)

@norecursion
def escape_comment(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'escape_comment'
    module_type_store = module_type_store.open_function_context('escape_comment', 81, 0, False)
    
    # Passed parameters checking function
    escape_comment.stypy_localization = localization
    escape_comment.stypy_type_of_self = None
    escape_comment.stypy_type_store = module_type_store
    escape_comment.stypy_function_name = 'escape_comment'
    escape_comment.stypy_param_names_list = ['s']
    escape_comment.stypy_varargs_param_name = None
    escape_comment.stypy_kwargs_param_name = None
    escape_comment.stypy_call_defaults = defaults
    escape_comment.stypy_call_varargs = varargs
    escape_comment.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'escape_comment', ['s'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'escape_comment', localization, ['s'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'escape_comment(...)' code ##################

    
    # Assigning a Call to a Name (line 82):
    
    # Assigning a Call to a Name (line 82):
    
    # Call to escape_cdata(...): (line 82)
    # Processing the call arguments (line 82)
    # Getting the type of 's' (line 82)
    s_252905 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 82, 21), 's', False)
    # Processing the call keyword arguments (line 82)
    kwargs_252906 = {}
    # Getting the type of 'escape_cdata' (line 82)
    escape_cdata_252904 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 82, 8), 'escape_cdata', False)
    # Calling escape_cdata(args, kwargs) (line 82)
    escape_cdata_call_result_252907 = invoke(stypy.reporting.localization.Localization(__file__, 82, 8), escape_cdata_252904, *[s_252905], **kwargs_252906)
    
    # Assigning a type to the variable 's' (line 82)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 82, 4), 's', escape_cdata_call_result_252907)
    
    # Call to sub(...): (line 83)
    # Processing the call arguments (line 83)
    unicode_252910 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 83, 35), 'unicode', u'- ')
    # Getting the type of 's' (line 83)
    s_252911 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 83, 41), 's', False)
    # Processing the call keyword arguments (line 83)
    kwargs_252912 = {}
    # Getting the type of '_escape_xml_comment' (line 83)
    _escape_xml_comment_252908 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 83, 11), '_escape_xml_comment', False)
    # Obtaining the member 'sub' of a type (line 83)
    sub_252909 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 83, 11), _escape_xml_comment_252908, 'sub')
    # Calling sub(args, kwargs) (line 83)
    sub_call_result_252913 = invoke(stypy.reporting.localization.Localization(__file__, 83, 11), sub_252909, *[unicode_252910, s_252911], **kwargs_252912)
    
    # Assigning a type to the variable 'stypy_return_type' (line 83)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 83, 4), 'stypy_return_type', sub_call_result_252913)
    
    # ################# End of 'escape_comment(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'escape_comment' in the type store
    # Getting the type of 'stypy_return_type' (line 81)
    stypy_return_type_252914 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 81, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_252914)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'escape_comment'
    return stypy_return_type_252914

# Assigning a type to the variable 'escape_comment' (line 81)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 81, 0), 'escape_comment', escape_comment)

@norecursion
def escape_attrib(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'escape_attrib'
    module_type_store = module_type_store.open_function_context('escape_attrib', 85, 0, False)
    
    # Passed parameters checking function
    escape_attrib.stypy_localization = localization
    escape_attrib.stypy_type_of_self = None
    escape_attrib.stypy_type_store = module_type_store
    escape_attrib.stypy_function_name = 'escape_attrib'
    escape_attrib.stypy_param_names_list = ['s']
    escape_attrib.stypy_varargs_param_name = None
    escape_attrib.stypy_kwargs_param_name = None
    escape_attrib.stypy_call_defaults = defaults
    escape_attrib.stypy_call_varargs = varargs
    escape_attrib.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'escape_attrib', ['s'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'escape_attrib', localization, ['s'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'escape_attrib(...)' code ##################

    
    # Assigning a Call to a Name (line 86):
    
    # Assigning a Call to a Name (line 86):
    
    # Call to replace(...): (line 86)
    # Processing the call arguments (line 86)
    unicode_252917 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 86, 18), 'unicode', u'&')
    unicode_252918 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 86, 23), 'unicode', u'&amp;')
    # Processing the call keyword arguments (line 86)
    kwargs_252919 = {}
    # Getting the type of 's' (line 86)
    s_252915 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 8), 's', False)
    # Obtaining the member 'replace' of a type (line 86)
    replace_252916 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 86, 8), s_252915, 'replace')
    # Calling replace(args, kwargs) (line 86)
    replace_call_result_252920 = invoke(stypy.reporting.localization.Localization(__file__, 86, 8), replace_252916, *[unicode_252917, unicode_252918], **kwargs_252919)
    
    # Assigning a type to the variable 's' (line 86)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 86, 4), 's', replace_call_result_252920)
    
    # Assigning a Call to a Name (line 87):
    
    # Assigning a Call to a Name (line 87):
    
    # Call to replace(...): (line 87)
    # Processing the call arguments (line 87)
    unicode_252923 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 87, 18), 'unicode', u"'")
    unicode_252924 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 87, 23), 'unicode', u'&apos;')
    # Processing the call keyword arguments (line 87)
    kwargs_252925 = {}
    # Getting the type of 's' (line 87)
    s_252921 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 87, 8), 's', False)
    # Obtaining the member 'replace' of a type (line 87)
    replace_252922 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 87, 8), s_252921, 'replace')
    # Calling replace(args, kwargs) (line 87)
    replace_call_result_252926 = invoke(stypy.reporting.localization.Localization(__file__, 87, 8), replace_252922, *[unicode_252923, unicode_252924], **kwargs_252925)
    
    # Assigning a type to the variable 's' (line 87)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 87, 4), 's', replace_call_result_252926)
    
    # Assigning a Call to a Name (line 88):
    
    # Assigning a Call to a Name (line 88):
    
    # Call to replace(...): (line 88)
    # Processing the call arguments (line 88)
    unicode_252929 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 88, 18), 'unicode', u'"')
    unicode_252930 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 88, 24), 'unicode', u'&quot;')
    # Processing the call keyword arguments (line 88)
    kwargs_252931 = {}
    # Getting the type of 's' (line 88)
    s_252927 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 88, 8), 's', False)
    # Obtaining the member 'replace' of a type (line 88)
    replace_252928 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 88, 8), s_252927, 'replace')
    # Calling replace(args, kwargs) (line 88)
    replace_call_result_252932 = invoke(stypy.reporting.localization.Localization(__file__, 88, 8), replace_252928, *[unicode_252929, unicode_252930], **kwargs_252931)
    
    # Assigning a type to the variable 's' (line 88)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 88, 4), 's', replace_call_result_252932)
    
    # Assigning a Call to a Name (line 89):
    
    # Assigning a Call to a Name (line 89):
    
    # Call to replace(...): (line 89)
    # Processing the call arguments (line 89)
    unicode_252935 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 89, 18), 'unicode', u'<')
    unicode_252936 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 89, 23), 'unicode', u'&lt;')
    # Processing the call keyword arguments (line 89)
    kwargs_252937 = {}
    # Getting the type of 's' (line 89)
    s_252933 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 89, 8), 's', False)
    # Obtaining the member 'replace' of a type (line 89)
    replace_252934 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 89, 8), s_252933, 'replace')
    # Calling replace(args, kwargs) (line 89)
    replace_call_result_252938 = invoke(stypy.reporting.localization.Localization(__file__, 89, 8), replace_252934, *[unicode_252935, unicode_252936], **kwargs_252937)
    
    # Assigning a type to the variable 's' (line 89)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 89, 4), 's', replace_call_result_252938)
    
    # Assigning a Call to a Name (line 90):
    
    # Assigning a Call to a Name (line 90):
    
    # Call to replace(...): (line 90)
    # Processing the call arguments (line 90)
    unicode_252941 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 90, 18), 'unicode', u'>')
    unicode_252942 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 90, 23), 'unicode', u'&gt;')
    # Processing the call keyword arguments (line 90)
    kwargs_252943 = {}
    # Getting the type of 's' (line 90)
    s_252939 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 90, 8), 's', False)
    # Obtaining the member 'replace' of a type (line 90)
    replace_252940 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 90, 8), s_252939, 'replace')
    # Calling replace(args, kwargs) (line 90)
    replace_call_result_252944 = invoke(stypy.reporting.localization.Localization(__file__, 90, 8), replace_252940, *[unicode_252941, unicode_252942], **kwargs_252943)
    
    # Assigning a type to the variable 's' (line 90)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 90, 4), 's', replace_call_result_252944)
    # Getting the type of 's' (line 91)
    s_252945 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 91, 11), 's')
    # Assigning a type to the variable 'stypy_return_type' (line 91)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 91, 4), 'stypy_return_type', s_252945)
    
    # ################# End of 'escape_attrib(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'escape_attrib' in the type store
    # Getting the type of 'stypy_return_type' (line 85)
    stypy_return_type_252946 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 85, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_252946)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'escape_attrib'
    return stypy_return_type_252946

# Assigning a type to the variable 'escape_attrib' (line 85)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 85, 0), 'escape_attrib', escape_attrib)

@norecursion
def short_float_fmt(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'short_float_fmt'
    module_type_store = module_type_store.open_function_context('short_float_fmt', 93, 0, False)
    
    # Passed parameters checking function
    short_float_fmt.stypy_localization = localization
    short_float_fmt.stypy_type_of_self = None
    short_float_fmt.stypy_type_store = module_type_store
    short_float_fmt.stypy_function_name = 'short_float_fmt'
    short_float_fmt.stypy_param_names_list = ['x']
    short_float_fmt.stypy_varargs_param_name = None
    short_float_fmt.stypy_kwargs_param_name = None
    short_float_fmt.stypy_call_defaults = defaults
    short_float_fmt.stypy_call_varargs = varargs
    short_float_fmt.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'short_float_fmt', ['x'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'short_float_fmt', localization, ['x'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'short_float_fmt(...)' code ##################

    unicode_252947 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 97, (-1)), 'unicode', u'\n    Create a short string representation of a float, which is %f\n    formatting with trailing zeros and the decimal point removed.\n    ')
    
    # Call to rstrip(...): (line 98)
    # Processing the call arguments (line 98)
    unicode_252958 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 98, 48), 'unicode', u'.')
    # Processing the call keyword arguments (line 98)
    kwargs_252959 = {}
    
    # Call to rstrip(...): (line 98)
    # Processing the call arguments (line 98)
    unicode_252954 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 98, 36), 'unicode', u'0')
    # Processing the call keyword arguments (line 98)
    kwargs_252955 = {}
    
    # Call to format(...): (line 98)
    # Processing the call arguments (line 98)
    # Getting the type of 'x' (line 98)
    x_252950 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 98, 26), 'x', False)
    # Processing the call keyword arguments (line 98)
    kwargs_252951 = {}
    unicode_252948 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 98, 11), 'unicode', u'{0:f}')
    # Obtaining the member 'format' of a type (line 98)
    format_252949 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 98, 11), unicode_252948, 'format')
    # Calling format(args, kwargs) (line 98)
    format_call_result_252952 = invoke(stypy.reporting.localization.Localization(__file__, 98, 11), format_252949, *[x_252950], **kwargs_252951)
    
    # Obtaining the member 'rstrip' of a type (line 98)
    rstrip_252953 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 98, 11), format_call_result_252952, 'rstrip')
    # Calling rstrip(args, kwargs) (line 98)
    rstrip_call_result_252956 = invoke(stypy.reporting.localization.Localization(__file__, 98, 11), rstrip_252953, *[unicode_252954], **kwargs_252955)
    
    # Obtaining the member 'rstrip' of a type (line 98)
    rstrip_252957 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 98, 11), rstrip_call_result_252956, 'rstrip')
    # Calling rstrip(args, kwargs) (line 98)
    rstrip_call_result_252960 = invoke(stypy.reporting.localization.Localization(__file__, 98, 11), rstrip_252957, *[unicode_252958], **kwargs_252959)
    
    # Assigning a type to the variable 'stypy_return_type' (line 98)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 98, 4), 'stypy_return_type', rstrip_call_result_252960)
    
    # ################# End of 'short_float_fmt(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'short_float_fmt' in the type store
    # Getting the type of 'stypy_return_type' (line 93)
    stypy_return_type_252961 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 93, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_252961)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'short_float_fmt'
    return stypy_return_type_252961

# Assigning a type to the variable 'short_float_fmt' (line 93)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 93, 0), 'short_float_fmt', short_float_fmt)
# Declaration of the 'XMLWriter' class

class XMLWriter(object, ):

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 107, 4, False)
        # Assigning a type to the variable 'self' (line 108)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 108, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'XMLWriter.__init__', ['file'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['file'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Assigning a Attribute to a Attribute (line 108):
        
        # Assigning a Attribute to a Attribute (line 108):
        # Getting the type of 'file' (line 108)
        file_252962 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 108, 23), 'file')
        # Obtaining the member 'write' of a type (line 108)
        write_252963 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 108, 23), file_252962, 'write')
        # Getting the type of 'self' (line 108)
        self_252964 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 108, 8), 'self')
        # Setting the type of the member '__write' of a type (line 108)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 108, 8), self_252964, '__write', write_252963)
        
        # Type idiom detected: calculating its left and rigth part (line 109)
        unicode_252965 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 109, 25), 'unicode', u'flush')
        # Getting the type of 'file' (line 109)
        file_252966 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 109, 19), 'file')
        
        (may_be_252967, more_types_in_union_252968) = may_provide_member(unicode_252965, file_252966)

        if may_be_252967:

            if more_types_in_union_252968:
                # Runtime conditional SSA (line 109)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            # Assigning a type to the variable 'file' (line 109)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 109, 8), 'file', remove_not_member_provider_from_union(file_252966, u'flush'))
            
            # Assigning a Attribute to a Attribute (line 110):
            
            # Assigning a Attribute to a Attribute (line 110):
            # Getting the type of 'file' (line 110)
            file_252969 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 110, 25), 'file')
            # Obtaining the member 'flush' of a type (line 110)
            flush_252970 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 110, 25), file_252969, 'flush')
            # Getting the type of 'self' (line 110)
            self_252971 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 110, 12), 'self')
            # Setting the type of the member 'flush' of a type (line 110)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 110, 12), self_252971, 'flush', flush_252970)

            if more_types_in_union_252968:
                # SSA join for if statement (line 109)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Num to a Attribute (line 111):
        
        # Assigning a Num to a Attribute (line 111):
        int_252972 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 111, 22), 'int')
        # Getting the type of 'self' (line 111)
        self_252973 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 111, 8), 'self')
        # Setting the type of the member '__open' of a type (line 111)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 111, 8), self_252973, '__open', int_252972)
        
        # Assigning a List to a Attribute (line 112):
        
        # Assigning a List to a Attribute (line 112):
        
        # Obtaining an instance of the builtin type 'list' (line 112)
        list_252974 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 112, 22), 'list')
        # Adding type elements to the builtin type 'list' instance (line 112)
        
        # Getting the type of 'self' (line 112)
        self_252975 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 112, 8), 'self')
        # Setting the type of the member '__tags' of a type (line 112)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 112, 8), self_252975, '__tags', list_252974)
        
        # Assigning a List to a Attribute (line 113):
        
        # Assigning a List to a Attribute (line 113):
        
        # Obtaining an instance of the builtin type 'list' (line 113)
        list_252976 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 113, 22), 'list')
        # Adding type elements to the builtin type 'list' instance (line 113)
        
        # Getting the type of 'self' (line 113)
        self_252977 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 113, 8), 'self')
        # Setting the type of the member '__data' of a type (line 113)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 113, 8), self_252977, '__data', list_252976)
        
        # Assigning a BinOp to a Attribute (line 114):
        
        # Assigning a BinOp to a Attribute (line 114):
        unicode_252978 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 114, 29), 'unicode', u' ')
        int_252979 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 114, 35), 'int')
        # Applying the binary operator '*' (line 114)
        result_mul_252980 = python_operator(stypy.reporting.localization.Localization(__file__, 114, 29), '*', unicode_252978, int_252979)
        
        # Getting the type of 'self' (line 114)
        self_252981 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 114, 8), 'self')
        # Setting the type of the member '__indentation' of a type (line 114)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 114, 8), self_252981, '__indentation', result_mul_252980)
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def __flush(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'True' (line 116)
        True_252982 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 116, 29), 'True')
        defaults = [True_252982]
        # Create a new context for function '__flush'
        module_type_store = module_type_store.open_function_context('__flush', 116, 4, False)
        # Assigning a type to the variable 'self' (line 117)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 117, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        XMLWriter.__flush.__dict__.__setitem__('stypy_localization', localization)
        XMLWriter.__flush.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        XMLWriter.__flush.__dict__.__setitem__('stypy_type_store', module_type_store)
        XMLWriter.__flush.__dict__.__setitem__('stypy_function_name', 'XMLWriter.__flush')
        XMLWriter.__flush.__dict__.__setitem__('stypy_param_names_list', ['indent'])
        XMLWriter.__flush.__dict__.__setitem__('stypy_varargs_param_name', None)
        XMLWriter.__flush.__dict__.__setitem__('stypy_kwargs_param_name', None)
        XMLWriter.__flush.__dict__.__setitem__('stypy_call_defaults', defaults)
        XMLWriter.__flush.__dict__.__setitem__('stypy_call_varargs', varargs)
        XMLWriter.__flush.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        XMLWriter.__flush.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'XMLWriter.__flush', ['indent'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '__flush', localization, ['indent'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__flush(...)' code ##################

        
        # Getting the type of 'self' (line 118)
        self_252983 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 118, 11), 'self')
        # Obtaining the member '__open' of a type (line 118)
        open_252984 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 118, 11), self_252983, '__open')
        # Testing the type of an if condition (line 118)
        if_condition_252985 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 118, 8), open_252984)
        # Assigning a type to the variable 'if_condition_252985' (line 118)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 118, 8), 'if_condition_252985', if_condition_252985)
        # SSA begins for if statement (line 118)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'indent' (line 119)
        indent_252986 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 119, 15), 'indent')
        # Testing the type of an if condition (line 119)
        if_condition_252987 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 119, 12), indent_252986)
        # Assigning a type to the variable 'if_condition_252987' (line 119)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 119, 12), 'if_condition_252987', if_condition_252987)
        # SSA begins for if statement (line 119)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to __write(...): (line 120)
        # Processing the call arguments (line 120)
        unicode_252990 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 120, 29), 'unicode', u'>\n')
        # Processing the call keyword arguments (line 120)
        kwargs_252991 = {}
        # Getting the type of 'self' (line 120)
        self_252988 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 120, 16), 'self', False)
        # Obtaining the member '__write' of a type (line 120)
        write_252989 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 120, 16), self_252988, '__write')
        # Calling __write(args, kwargs) (line 120)
        write_call_result_252992 = invoke(stypy.reporting.localization.Localization(__file__, 120, 16), write_252989, *[unicode_252990], **kwargs_252991)
        
        # SSA branch for the else part of an if statement (line 119)
        module_type_store.open_ssa_branch('else')
        
        # Call to __write(...): (line 122)
        # Processing the call arguments (line 122)
        unicode_252995 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 122, 29), 'unicode', u'>')
        # Processing the call keyword arguments (line 122)
        kwargs_252996 = {}
        # Getting the type of 'self' (line 122)
        self_252993 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 122, 16), 'self', False)
        # Obtaining the member '__write' of a type (line 122)
        write_252994 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 122, 16), self_252993, '__write')
        # Calling __write(args, kwargs) (line 122)
        write_call_result_252997 = invoke(stypy.reporting.localization.Localization(__file__, 122, 16), write_252994, *[unicode_252995], **kwargs_252996)
        
        # SSA join for if statement (line 119)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Num to a Attribute (line 123):
        
        # Assigning a Num to a Attribute (line 123):
        int_252998 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 123, 26), 'int')
        # Getting the type of 'self' (line 123)
        self_252999 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 123, 12), 'self')
        # Setting the type of the member '__open' of a type (line 123)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 123, 12), self_252999, '__open', int_252998)
        # SSA join for if statement (line 118)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'self' (line 124)
        self_253000 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 124, 11), 'self')
        # Obtaining the member '__data' of a type (line 124)
        data_253001 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 124, 11), self_253000, '__data')
        # Testing the type of an if condition (line 124)
        if_condition_253002 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 124, 8), data_253001)
        # Assigning a type to the variable 'if_condition_253002' (line 124)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 124, 8), 'if_condition_253002', if_condition_253002)
        # SSA begins for if statement (line 124)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 125):
        
        # Assigning a Call to a Name (line 125):
        
        # Call to join(...): (line 125)
        # Processing the call arguments (line 125)
        # Getting the type of 'self' (line 125)
        self_253005 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 125, 27), 'self', False)
        # Obtaining the member '__data' of a type (line 125)
        data_253006 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 125, 27), self_253005, '__data')
        # Processing the call keyword arguments (line 125)
        kwargs_253007 = {}
        unicode_253003 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 125, 19), 'unicode', u'')
        # Obtaining the member 'join' of a type (line 125)
        join_253004 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 125, 19), unicode_253003, 'join')
        # Calling join(args, kwargs) (line 125)
        join_call_result_253008 = invoke(stypy.reporting.localization.Localization(__file__, 125, 19), join_253004, *[data_253006], **kwargs_253007)
        
        # Assigning a type to the variable 'data' (line 125)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 125, 12), 'data', join_call_result_253008)
        
        # Call to __write(...): (line 126)
        # Processing the call arguments (line 126)
        
        # Call to escape_cdata(...): (line 126)
        # Processing the call arguments (line 126)
        # Getting the type of 'data' (line 126)
        data_253012 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 126, 38), 'data', False)
        # Processing the call keyword arguments (line 126)
        kwargs_253013 = {}
        # Getting the type of 'escape_cdata' (line 126)
        escape_cdata_253011 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 126, 25), 'escape_cdata', False)
        # Calling escape_cdata(args, kwargs) (line 126)
        escape_cdata_call_result_253014 = invoke(stypy.reporting.localization.Localization(__file__, 126, 25), escape_cdata_253011, *[data_253012], **kwargs_253013)
        
        # Processing the call keyword arguments (line 126)
        kwargs_253015 = {}
        # Getting the type of 'self' (line 126)
        self_253009 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 126, 12), 'self', False)
        # Obtaining the member '__write' of a type (line 126)
        write_253010 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 126, 12), self_253009, '__write')
        # Calling __write(args, kwargs) (line 126)
        write_call_result_253016 = invoke(stypy.reporting.localization.Localization(__file__, 126, 12), write_253010, *[escape_cdata_call_result_253014], **kwargs_253015)
        
        
        # Assigning a List to a Attribute (line 127):
        
        # Assigning a List to a Attribute (line 127):
        
        # Obtaining an instance of the builtin type 'list' (line 127)
        list_253017 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 127, 26), 'list')
        # Adding type elements to the builtin type 'list' instance (line 127)
        
        # Getting the type of 'self' (line 127)
        self_253018 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 127, 12), 'self')
        # Setting the type of the member '__data' of a type (line 127)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 127, 12), self_253018, '__data', list_253017)
        # SSA join for if statement (line 124)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of '__flush(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '__flush' in the type store
        # Getting the type of 'stypy_return_type' (line 116)
        stypy_return_type_253019 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 116, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_253019)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '__flush'
        return stypy_return_type_253019


    @norecursion
    def start(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        
        # Obtaining an instance of the builtin type 'dict' (line 139)
        dict_253020 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 139, 32), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 139)
        
        defaults = [dict_253020]
        # Create a new context for function 'start'
        module_type_store = module_type_store.open_function_context('start', 139, 4, False)
        # Assigning a type to the variable 'self' (line 140)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 140, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        XMLWriter.start.__dict__.__setitem__('stypy_localization', localization)
        XMLWriter.start.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        XMLWriter.start.__dict__.__setitem__('stypy_type_store', module_type_store)
        XMLWriter.start.__dict__.__setitem__('stypy_function_name', 'XMLWriter.start')
        XMLWriter.start.__dict__.__setitem__('stypy_param_names_list', ['tag', 'attrib'])
        XMLWriter.start.__dict__.__setitem__('stypy_varargs_param_name', None)
        XMLWriter.start.__dict__.__setitem__('stypy_kwargs_param_name', 'extra')
        XMLWriter.start.__dict__.__setitem__('stypy_call_defaults', defaults)
        XMLWriter.start.__dict__.__setitem__('stypy_call_varargs', varargs)
        XMLWriter.start.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        XMLWriter.start.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'XMLWriter.start', ['tag', 'attrib'], None, 'extra', defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'start', localization, ['tag', 'attrib'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'start(...)' code ##################

        
        # Call to __flush(...): (line 140)
        # Processing the call keyword arguments (line 140)
        kwargs_253023 = {}
        # Getting the type of 'self' (line 140)
        self_253021 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 140, 8), 'self', False)
        # Obtaining the member '__flush' of a type (line 140)
        flush_253022 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 140, 8), self_253021, '__flush')
        # Calling __flush(args, kwargs) (line 140)
        flush_call_result_253024 = invoke(stypy.reporting.localization.Localization(__file__, 140, 8), flush_253022, *[], **kwargs_253023)
        
        
        # Assigning a Call to a Name (line 141):
        
        # Assigning a Call to a Name (line 141):
        
        # Call to escape_cdata(...): (line 141)
        # Processing the call arguments (line 141)
        # Getting the type of 'tag' (line 141)
        tag_253026 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 141, 27), 'tag', False)
        # Processing the call keyword arguments (line 141)
        kwargs_253027 = {}
        # Getting the type of 'escape_cdata' (line 141)
        escape_cdata_253025 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 141, 14), 'escape_cdata', False)
        # Calling escape_cdata(args, kwargs) (line 141)
        escape_cdata_call_result_253028 = invoke(stypy.reporting.localization.Localization(__file__, 141, 14), escape_cdata_253025, *[tag_253026], **kwargs_253027)
        
        # Assigning a type to the variable 'tag' (line 141)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 141, 8), 'tag', escape_cdata_call_result_253028)
        
        # Assigning a List to a Attribute (line 142):
        
        # Assigning a List to a Attribute (line 142):
        
        # Obtaining an instance of the builtin type 'list' (line 142)
        list_253029 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 142, 22), 'list')
        # Adding type elements to the builtin type 'list' instance (line 142)
        
        # Getting the type of 'self' (line 142)
        self_253030 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 142, 8), 'self')
        # Setting the type of the member '__data' of a type (line 142)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 142, 8), self_253030, '__data', list_253029)
        
        # Call to append(...): (line 143)
        # Processing the call arguments (line 143)
        # Getting the type of 'tag' (line 143)
        tag_253034 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 143, 27), 'tag', False)
        # Processing the call keyword arguments (line 143)
        kwargs_253035 = {}
        # Getting the type of 'self' (line 143)
        self_253031 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 143, 8), 'self', False)
        # Obtaining the member '__tags' of a type (line 143)
        tags_253032 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 143, 8), self_253031, '__tags')
        # Obtaining the member 'append' of a type (line 143)
        append_253033 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 143, 8), tags_253032, 'append')
        # Calling append(args, kwargs) (line 143)
        append_call_result_253036 = invoke(stypy.reporting.localization.Localization(__file__, 143, 8), append_253033, *[tag_253034], **kwargs_253035)
        
        
        # Call to __write(...): (line 144)
        # Processing the call arguments (line 144)
        
        # Obtaining the type of the subscript
        
        # Call to len(...): (line 144)
        # Processing the call arguments (line 144)
        # Getting the type of 'self' (line 144)
        self_253040 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 144, 45), 'self', False)
        # Obtaining the member '__tags' of a type (line 144)
        tags_253041 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 144, 45), self_253040, '__tags')
        # Processing the call keyword arguments (line 144)
        kwargs_253042 = {}
        # Getting the type of 'len' (line 144)
        len_253039 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 144, 41), 'len', False)
        # Calling len(args, kwargs) (line 144)
        len_call_result_253043 = invoke(stypy.reporting.localization.Localization(__file__, 144, 41), len_253039, *[tags_253041], **kwargs_253042)
        
        int_253044 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 144, 60), 'int')
        # Applying the binary operator '-' (line 144)
        result_sub_253045 = python_operator(stypy.reporting.localization.Localization(__file__, 144, 41), '-', len_call_result_253043, int_253044)
        
        slice_253046 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 144, 21), None, result_sub_253045, None)
        # Getting the type of 'self' (line 144)
        self_253047 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 144, 21), 'self', False)
        # Obtaining the member '__indentation' of a type (line 144)
        indentation_253048 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 144, 21), self_253047, '__indentation')
        # Obtaining the member '__getitem__' of a type (line 144)
        getitem___253049 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 144, 21), indentation_253048, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 144)
        subscript_call_result_253050 = invoke(stypy.reporting.localization.Localization(__file__, 144, 21), getitem___253049, slice_253046)
        
        # Processing the call keyword arguments (line 144)
        kwargs_253051 = {}
        # Getting the type of 'self' (line 144)
        self_253037 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 144, 8), 'self', False)
        # Obtaining the member '__write' of a type (line 144)
        write_253038 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 144, 8), self_253037, '__write')
        # Calling __write(args, kwargs) (line 144)
        write_call_result_253052 = invoke(stypy.reporting.localization.Localization(__file__, 144, 8), write_253038, *[subscript_call_result_253050], **kwargs_253051)
        
        
        # Call to __write(...): (line 145)
        # Processing the call arguments (line 145)
        unicode_253055 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 145, 21), 'unicode', u'<%s')
        # Getting the type of 'tag' (line 145)
        tag_253056 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 145, 29), 'tag', False)
        # Applying the binary operator '%' (line 145)
        result_mod_253057 = python_operator(stypy.reporting.localization.Localization(__file__, 145, 21), '%', unicode_253055, tag_253056)
        
        # Processing the call keyword arguments (line 145)
        kwargs_253058 = {}
        # Getting the type of 'self' (line 145)
        self_253053 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 145, 8), 'self', False)
        # Obtaining the member '__write' of a type (line 145)
        write_253054 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 145, 8), self_253053, '__write')
        # Calling __write(args, kwargs) (line 145)
        write_call_result_253059 = invoke(stypy.reporting.localization.Localization(__file__, 145, 8), write_253054, *[result_mod_253057], **kwargs_253058)
        
        
        
        # Evaluating a boolean operation
        # Getting the type of 'attrib' (line 146)
        attrib_253060 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 146, 11), 'attrib')
        # Getting the type of 'extra' (line 146)
        extra_253061 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 146, 21), 'extra')
        # Applying the binary operator 'or' (line 146)
        result_or_keyword_253062 = python_operator(stypy.reporting.localization.Localization(__file__, 146, 11), 'or', attrib_253060, extra_253061)
        
        # Testing the type of an if condition (line 146)
        if_condition_253063 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 146, 8), result_or_keyword_253062)
        # Assigning a type to the variable 'if_condition_253063' (line 146)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 146, 8), 'if_condition_253063', if_condition_253063)
        # SSA begins for if statement (line 146)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 147):
        
        # Assigning a Call to a Name (line 147):
        
        # Call to copy(...): (line 147)
        # Processing the call keyword arguments (line 147)
        kwargs_253066 = {}
        # Getting the type of 'attrib' (line 147)
        attrib_253064 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 147, 21), 'attrib', False)
        # Obtaining the member 'copy' of a type (line 147)
        copy_253065 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 147, 21), attrib_253064, 'copy')
        # Calling copy(args, kwargs) (line 147)
        copy_call_result_253067 = invoke(stypy.reporting.localization.Localization(__file__, 147, 21), copy_253065, *[], **kwargs_253066)
        
        # Assigning a type to the variable 'attrib' (line 147)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 147, 12), 'attrib', copy_call_result_253067)
        
        # Call to update(...): (line 148)
        # Processing the call arguments (line 148)
        # Getting the type of 'extra' (line 148)
        extra_253070 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 148, 26), 'extra', False)
        # Processing the call keyword arguments (line 148)
        kwargs_253071 = {}
        # Getting the type of 'attrib' (line 148)
        attrib_253068 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 148, 12), 'attrib', False)
        # Obtaining the member 'update' of a type (line 148)
        update_253069 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 148, 12), attrib_253068, 'update')
        # Calling update(args, kwargs) (line 148)
        update_call_result_253072 = invoke(stypy.reporting.localization.Localization(__file__, 148, 12), update_253069, *[extra_253070], **kwargs_253071)
        
        
        # Assigning a Call to a Name (line 149):
        
        # Assigning a Call to a Name (line 149):
        
        # Call to sorted(...): (line 149)
        # Processing the call arguments (line 149)
        
        # Call to iteritems(...): (line 149)
        # Processing the call arguments (line 149)
        # Getting the type of 'attrib' (line 149)
        attrib_253076 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 149, 42), 'attrib', False)
        # Processing the call keyword arguments (line 149)
        kwargs_253077 = {}
        # Getting the type of 'six' (line 149)
        six_253074 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 149, 28), 'six', False)
        # Obtaining the member 'iteritems' of a type (line 149)
        iteritems_253075 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 149, 28), six_253074, 'iteritems')
        # Calling iteritems(args, kwargs) (line 149)
        iteritems_call_result_253078 = invoke(stypy.reporting.localization.Localization(__file__, 149, 28), iteritems_253075, *[attrib_253076], **kwargs_253077)
        
        # Processing the call keyword arguments (line 149)
        kwargs_253079 = {}
        # Getting the type of 'sorted' (line 149)
        sorted_253073 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 149, 21), 'sorted', False)
        # Calling sorted(args, kwargs) (line 149)
        sorted_call_result_253080 = invoke(stypy.reporting.localization.Localization(__file__, 149, 21), sorted_253073, *[iteritems_call_result_253078], **kwargs_253079)
        
        # Assigning a type to the variable 'attrib' (line 149)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 149, 12), 'attrib', sorted_call_result_253080)
        
        # Getting the type of 'attrib' (line 150)
        attrib_253081 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 150, 24), 'attrib')
        # Testing the type of a for loop iterable (line 150)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 150, 12), attrib_253081)
        # Getting the type of the for loop variable (line 150)
        for_loop_var_253082 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 150, 12), attrib_253081)
        # Assigning a type to the variable 'k' (line 150)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 150, 12), 'k', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 150, 12), for_loop_var_253082))
        # Assigning a type to the variable 'v' (line 150)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 150, 12), 'v', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 150, 12), for_loop_var_253082))
        # SSA begins for a for statement (line 150)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        
        
        # Getting the type of 'v' (line 151)
        v_253083 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 151, 23), 'v')
        unicode_253084 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 151, 28), 'unicode', u'')
        # Applying the binary operator '==' (line 151)
        result_eq_253085 = python_operator(stypy.reporting.localization.Localization(__file__, 151, 23), '==', v_253083, unicode_253084)
        
        # Applying the 'not' unary operator (line 151)
        result_not__253086 = python_operator(stypy.reporting.localization.Localization(__file__, 151, 19), 'not', result_eq_253085)
        
        # Testing the type of an if condition (line 151)
        if_condition_253087 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 151, 16), result_not__253086)
        # Assigning a type to the variable 'if_condition_253087' (line 151)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 151, 16), 'if_condition_253087', if_condition_253087)
        # SSA begins for if statement (line 151)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 152):
        
        # Assigning a Call to a Name (line 152):
        
        # Call to escape_cdata(...): (line 152)
        # Processing the call arguments (line 152)
        # Getting the type of 'k' (line 152)
        k_253089 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 152, 37), 'k', False)
        # Processing the call keyword arguments (line 152)
        kwargs_253090 = {}
        # Getting the type of 'escape_cdata' (line 152)
        escape_cdata_253088 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 152, 24), 'escape_cdata', False)
        # Calling escape_cdata(args, kwargs) (line 152)
        escape_cdata_call_result_253091 = invoke(stypy.reporting.localization.Localization(__file__, 152, 24), escape_cdata_253088, *[k_253089], **kwargs_253090)
        
        # Assigning a type to the variable 'k' (line 152)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 152, 20), 'k', escape_cdata_call_result_253091)
        
        # Assigning a Call to a Name (line 153):
        
        # Assigning a Call to a Name (line 153):
        
        # Call to escape_attrib(...): (line 153)
        # Processing the call arguments (line 153)
        # Getting the type of 'v' (line 153)
        v_253093 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 153, 38), 'v', False)
        # Processing the call keyword arguments (line 153)
        kwargs_253094 = {}
        # Getting the type of 'escape_attrib' (line 153)
        escape_attrib_253092 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 153, 24), 'escape_attrib', False)
        # Calling escape_attrib(args, kwargs) (line 153)
        escape_attrib_call_result_253095 = invoke(stypy.reporting.localization.Localization(__file__, 153, 24), escape_attrib_253092, *[v_253093], **kwargs_253094)
        
        # Assigning a type to the variable 'v' (line 153)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 153, 20), 'v', escape_attrib_call_result_253095)
        
        # Call to __write(...): (line 154)
        # Processing the call arguments (line 154)
        unicode_253098 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 154, 33), 'unicode', u' %s="%s"')
        
        # Obtaining an instance of the builtin type 'tuple' (line 154)
        tuple_253099 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 154, 49), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 154)
        # Adding element type (line 154)
        # Getting the type of 'k' (line 154)
        k_253100 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 154, 49), 'k', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 154, 49), tuple_253099, k_253100)
        # Adding element type (line 154)
        # Getting the type of 'v' (line 154)
        v_253101 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 154, 52), 'v', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 154, 49), tuple_253099, v_253101)
        
        # Applying the binary operator '%' (line 154)
        result_mod_253102 = python_operator(stypy.reporting.localization.Localization(__file__, 154, 33), '%', unicode_253098, tuple_253099)
        
        # Processing the call keyword arguments (line 154)
        kwargs_253103 = {}
        # Getting the type of 'self' (line 154)
        self_253096 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 154, 20), 'self', False)
        # Obtaining the member '__write' of a type (line 154)
        write_253097 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 154, 20), self_253096, '__write')
        # Calling __write(args, kwargs) (line 154)
        write_call_result_253104 = invoke(stypy.reporting.localization.Localization(__file__, 154, 20), write_253097, *[result_mod_253102], **kwargs_253103)
        
        # SSA join for if statement (line 151)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 146)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Num to a Attribute (line 155):
        
        # Assigning a Num to a Attribute (line 155):
        int_253105 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 155, 22), 'int')
        # Getting the type of 'self' (line 155)
        self_253106 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 155, 8), 'self')
        # Setting the type of the member '__open' of a type (line 155)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 155, 8), self_253106, '__open', int_253105)
        
        # Call to len(...): (line 156)
        # Processing the call arguments (line 156)
        # Getting the type of 'self' (line 156)
        self_253108 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 156, 19), 'self', False)
        # Obtaining the member '__tags' of a type (line 156)
        tags_253109 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 156, 19), self_253108, '__tags')
        # Processing the call keyword arguments (line 156)
        kwargs_253110 = {}
        # Getting the type of 'len' (line 156)
        len_253107 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 156, 15), 'len', False)
        # Calling len(args, kwargs) (line 156)
        len_call_result_253111 = invoke(stypy.reporting.localization.Localization(__file__, 156, 15), len_253107, *[tags_253109], **kwargs_253110)
        
        int_253112 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 156, 32), 'int')
        # Applying the binary operator '-' (line 156)
        result_sub_253113 = python_operator(stypy.reporting.localization.Localization(__file__, 156, 15), '-', len_call_result_253111, int_253112)
        
        # Assigning a type to the variable 'stypy_return_type' (line 156)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 156, 8), 'stypy_return_type', result_sub_253113)
        
        # ################# End of 'start(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'start' in the type store
        # Getting the type of 'stypy_return_type' (line 139)
        stypy_return_type_253114 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 139, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_253114)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'start'
        return stypy_return_type_253114


    @norecursion
    def comment(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'comment'
        module_type_store = module_type_store.open_function_context('comment', 163, 4, False)
        # Assigning a type to the variable 'self' (line 164)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 164, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        XMLWriter.comment.__dict__.__setitem__('stypy_localization', localization)
        XMLWriter.comment.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        XMLWriter.comment.__dict__.__setitem__('stypy_type_store', module_type_store)
        XMLWriter.comment.__dict__.__setitem__('stypy_function_name', 'XMLWriter.comment')
        XMLWriter.comment.__dict__.__setitem__('stypy_param_names_list', ['comment'])
        XMLWriter.comment.__dict__.__setitem__('stypy_varargs_param_name', None)
        XMLWriter.comment.__dict__.__setitem__('stypy_kwargs_param_name', None)
        XMLWriter.comment.__dict__.__setitem__('stypy_call_defaults', defaults)
        XMLWriter.comment.__dict__.__setitem__('stypy_call_varargs', varargs)
        XMLWriter.comment.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        XMLWriter.comment.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'XMLWriter.comment', ['comment'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'comment', localization, ['comment'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'comment(...)' code ##################

        
        # Call to __flush(...): (line 164)
        # Processing the call keyword arguments (line 164)
        kwargs_253117 = {}
        # Getting the type of 'self' (line 164)
        self_253115 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 164, 8), 'self', False)
        # Obtaining the member '__flush' of a type (line 164)
        flush_253116 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 164, 8), self_253115, '__flush')
        # Calling __flush(args, kwargs) (line 164)
        flush_call_result_253118 = invoke(stypy.reporting.localization.Localization(__file__, 164, 8), flush_253116, *[], **kwargs_253117)
        
        
        # Call to __write(...): (line 165)
        # Processing the call arguments (line 165)
        
        # Obtaining the type of the subscript
        
        # Call to len(...): (line 165)
        # Processing the call arguments (line 165)
        # Getting the type of 'self' (line 165)
        self_253122 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 165, 45), 'self', False)
        # Obtaining the member '__tags' of a type (line 165)
        tags_253123 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 165, 45), self_253122, '__tags')
        # Processing the call keyword arguments (line 165)
        kwargs_253124 = {}
        # Getting the type of 'len' (line 165)
        len_253121 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 165, 41), 'len', False)
        # Calling len(args, kwargs) (line 165)
        len_call_result_253125 = invoke(stypy.reporting.localization.Localization(__file__, 165, 41), len_253121, *[tags_253123], **kwargs_253124)
        
        slice_253126 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 165, 21), None, len_call_result_253125, None)
        # Getting the type of 'self' (line 165)
        self_253127 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 165, 21), 'self', False)
        # Obtaining the member '__indentation' of a type (line 165)
        indentation_253128 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 165, 21), self_253127, '__indentation')
        # Obtaining the member '__getitem__' of a type (line 165)
        getitem___253129 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 165, 21), indentation_253128, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 165)
        subscript_call_result_253130 = invoke(stypy.reporting.localization.Localization(__file__, 165, 21), getitem___253129, slice_253126)
        
        # Processing the call keyword arguments (line 165)
        kwargs_253131 = {}
        # Getting the type of 'self' (line 165)
        self_253119 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 165, 8), 'self', False)
        # Obtaining the member '__write' of a type (line 165)
        write_253120 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 165, 8), self_253119, '__write')
        # Calling __write(args, kwargs) (line 165)
        write_call_result_253132 = invoke(stypy.reporting.localization.Localization(__file__, 165, 8), write_253120, *[subscript_call_result_253130], **kwargs_253131)
        
        
        # Call to __write(...): (line 166)
        # Processing the call arguments (line 166)
        unicode_253135 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 166, 21), 'unicode', u'<!-- %s -->\n')
        
        # Call to escape_comment(...): (line 166)
        # Processing the call arguments (line 166)
        # Getting the type of 'comment' (line 166)
        comment_253137 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 166, 54), 'comment', False)
        # Processing the call keyword arguments (line 166)
        kwargs_253138 = {}
        # Getting the type of 'escape_comment' (line 166)
        escape_comment_253136 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 166, 39), 'escape_comment', False)
        # Calling escape_comment(args, kwargs) (line 166)
        escape_comment_call_result_253139 = invoke(stypy.reporting.localization.Localization(__file__, 166, 39), escape_comment_253136, *[comment_253137], **kwargs_253138)
        
        # Applying the binary operator '%' (line 166)
        result_mod_253140 = python_operator(stypy.reporting.localization.Localization(__file__, 166, 21), '%', unicode_253135, escape_comment_call_result_253139)
        
        # Processing the call keyword arguments (line 166)
        kwargs_253141 = {}
        # Getting the type of 'self' (line 166)
        self_253133 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 166, 8), 'self', False)
        # Obtaining the member '__write' of a type (line 166)
        write_253134 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 166, 8), self_253133, '__write')
        # Calling __write(args, kwargs) (line 166)
        write_call_result_253142 = invoke(stypy.reporting.localization.Localization(__file__, 166, 8), write_253134, *[result_mod_253140], **kwargs_253141)
        
        
        # ################# End of 'comment(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'comment' in the type store
        # Getting the type of 'stypy_return_type' (line 163)
        stypy_return_type_253143 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 163, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_253143)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'comment'
        return stypy_return_type_253143


    @norecursion
    def data(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'data'
        module_type_store = module_type_store.open_function_context('data', 173, 4, False)
        # Assigning a type to the variable 'self' (line 174)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 174, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        XMLWriter.data.__dict__.__setitem__('stypy_localization', localization)
        XMLWriter.data.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        XMLWriter.data.__dict__.__setitem__('stypy_type_store', module_type_store)
        XMLWriter.data.__dict__.__setitem__('stypy_function_name', 'XMLWriter.data')
        XMLWriter.data.__dict__.__setitem__('stypy_param_names_list', ['text'])
        XMLWriter.data.__dict__.__setitem__('stypy_varargs_param_name', None)
        XMLWriter.data.__dict__.__setitem__('stypy_kwargs_param_name', None)
        XMLWriter.data.__dict__.__setitem__('stypy_call_defaults', defaults)
        XMLWriter.data.__dict__.__setitem__('stypy_call_varargs', varargs)
        XMLWriter.data.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        XMLWriter.data.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'XMLWriter.data', ['text'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'data', localization, ['text'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'data(...)' code ##################

        
        # Call to append(...): (line 174)
        # Processing the call arguments (line 174)
        # Getting the type of 'text' (line 174)
        text_253147 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 174, 27), 'text', False)
        # Processing the call keyword arguments (line 174)
        kwargs_253148 = {}
        # Getting the type of 'self' (line 174)
        self_253144 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 174, 8), 'self', False)
        # Obtaining the member '__data' of a type (line 174)
        data_253145 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 174, 8), self_253144, '__data')
        # Obtaining the member 'append' of a type (line 174)
        append_253146 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 174, 8), data_253145, 'append')
        # Calling append(args, kwargs) (line 174)
        append_call_result_253149 = invoke(stypy.reporting.localization.Localization(__file__, 174, 8), append_253146, *[text_253147], **kwargs_253148)
        
        
        # ################# End of 'data(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'data' in the type store
        # Getting the type of 'stypy_return_type' (line 173)
        stypy_return_type_253150 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 173, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_253150)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'data'
        return stypy_return_type_253150


    @norecursion
    def end(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'None' (line 183)
        None_253151 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 183, 22), 'None')
        # Getting the type of 'True' (line 183)
        True_253152 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 183, 35), 'True')
        defaults = [None_253151, True_253152]
        # Create a new context for function 'end'
        module_type_store = module_type_store.open_function_context('end', 183, 4, False)
        # Assigning a type to the variable 'self' (line 184)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 184, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        XMLWriter.end.__dict__.__setitem__('stypy_localization', localization)
        XMLWriter.end.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        XMLWriter.end.__dict__.__setitem__('stypy_type_store', module_type_store)
        XMLWriter.end.__dict__.__setitem__('stypy_function_name', 'XMLWriter.end')
        XMLWriter.end.__dict__.__setitem__('stypy_param_names_list', ['tag', 'indent'])
        XMLWriter.end.__dict__.__setitem__('stypy_varargs_param_name', None)
        XMLWriter.end.__dict__.__setitem__('stypy_kwargs_param_name', None)
        XMLWriter.end.__dict__.__setitem__('stypy_call_defaults', defaults)
        XMLWriter.end.__dict__.__setitem__('stypy_call_varargs', varargs)
        XMLWriter.end.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        XMLWriter.end.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'XMLWriter.end', ['tag', 'indent'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'end', localization, ['tag', 'indent'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'end(...)' code ##################

        
        # Getting the type of 'tag' (line 184)
        tag_253153 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 184, 11), 'tag')
        # Testing the type of an if condition (line 184)
        if_condition_253154 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 184, 8), tag_253153)
        # Assigning a type to the variable 'if_condition_253154' (line 184)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 184, 8), 'if_condition_253154', if_condition_253154)
        # SSA begins for if statement (line 184)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        # Evaluating assert statement condition
        # Getting the type of 'self' (line 185)
        self_253155 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 185, 19), 'self')
        # Obtaining the member '__tags' of a type (line 185)
        tags_253156 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 185, 19), self_253155, '__tags')
        # Evaluating assert statement condition
        
        
        # Call to escape_cdata(...): (line 186)
        # Processing the call arguments (line 186)
        # Getting the type of 'tag' (line 186)
        tag_253158 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 186, 32), 'tag', False)
        # Processing the call keyword arguments (line 186)
        kwargs_253159 = {}
        # Getting the type of 'escape_cdata' (line 186)
        escape_cdata_253157 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 186, 19), 'escape_cdata', False)
        # Calling escape_cdata(args, kwargs) (line 186)
        escape_cdata_call_result_253160 = invoke(stypy.reporting.localization.Localization(__file__, 186, 19), escape_cdata_253157, *[tag_253158], **kwargs_253159)
        
        
        # Obtaining the type of the subscript
        int_253161 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 186, 52), 'int')
        # Getting the type of 'self' (line 186)
        self_253162 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 186, 40), 'self')
        # Obtaining the member '__tags' of a type (line 186)
        tags_253163 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 186, 40), self_253162, '__tags')
        # Obtaining the member '__getitem__' of a type (line 186)
        getitem___253164 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 186, 40), tags_253163, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 186)
        subscript_call_result_253165 = invoke(stypy.reporting.localization.Localization(__file__, 186, 40), getitem___253164, int_253161)
        
        # Applying the binary operator '==' (line 186)
        result_eq_253166 = python_operator(stypy.reporting.localization.Localization(__file__, 186, 19), '==', escape_cdata_call_result_253160, subscript_call_result_253165)
        
        # SSA branch for the else part of an if statement (line 184)
        module_type_store.open_ssa_branch('else')
        # Evaluating assert statement condition
        # Getting the type of 'self' (line 189)
        self_253167 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 189, 19), 'self')
        # Obtaining the member '__tags' of a type (line 189)
        tags_253168 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 189, 19), self_253167, '__tags')
        # SSA join for if statement (line 184)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 190):
        
        # Assigning a Call to a Name (line 190):
        
        # Call to pop(...): (line 190)
        # Processing the call keyword arguments (line 190)
        kwargs_253172 = {}
        # Getting the type of 'self' (line 190)
        self_253169 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 190, 14), 'self', False)
        # Obtaining the member '__tags' of a type (line 190)
        tags_253170 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 190, 14), self_253169, '__tags')
        # Obtaining the member 'pop' of a type (line 190)
        pop_253171 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 190, 14), tags_253170, 'pop')
        # Calling pop(args, kwargs) (line 190)
        pop_call_result_253173 = invoke(stypy.reporting.localization.Localization(__file__, 190, 14), pop_253171, *[], **kwargs_253172)
        
        # Assigning a type to the variable 'tag' (line 190)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 190, 8), 'tag', pop_call_result_253173)
        
        # Getting the type of 'self' (line 191)
        self_253174 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 191, 11), 'self')
        # Obtaining the member '__data' of a type (line 191)
        data_253175 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 191, 11), self_253174, '__data')
        # Testing the type of an if condition (line 191)
        if_condition_253176 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 191, 8), data_253175)
        # Assigning a type to the variable 'if_condition_253176' (line 191)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 191, 8), 'if_condition_253176', if_condition_253176)
        # SSA begins for if statement (line 191)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to __flush(...): (line 192)
        # Processing the call arguments (line 192)
        # Getting the type of 'indent' (line 192)
        indent_253179 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 192, 25), 'indent', False)
        # Processing the call keyword arguments (line 192)
        kwargs_253180 = {}
        # Getting the type of 'self' (line 192)
        self_253177 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 192, 12), 'self', False)
        # Obtaining the member '__flush' of a type (line 192)
        flush_253178 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 192, 12), self_253177, '__flush')
        # Calling __flush(args, kwargs) (line 192)
        flush_call_result_253181 = invoke(stypy.reporting.localization.Localization(__file__, 192, 12), flush_253178, *[indent_253179], **kwargs_253180)
        
        # SSA branch for the else part of an if statement (line 191)
        module_type_store.open_ssa_branch('else')
        
        # Getting the type of 'self' (line 193)
        self_253182 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 193, 13), 'self')
        # Obtaining the member '__open' of a type (line 193)
        open_253183 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 193, 13), self_253182, '__open')
        # Testing the type of an if condition (line 193)
        if_condition_253184 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 193, 13), open_253183)
        # Assigning a type to the variable 'if_condition_253184' (line 193)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 193, 13), 'if_condition_253184', if_condition_253184)
        # SSA begins for if statement (line 193)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Num to a Attribute (line 194):
        
        # Assigning a Num to a Attribute (line 194):
        int_253185 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 194, 26), 'int')
        # Getting the type of 'self' (line 194)
        self_253186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 194, 12), 'self')
        # Setting the type of the member '__open' of a type (line 194)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 194, 12), self_253186, '__open', int_253185)
        
        # Call to __write(...): (line 195)
        # Processing the call arguments (line 195)
        unicode_253189 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 195, 25), 'unicode', u'/>\n')
        # Processing the call keyword arguments (line 195)
        kwargs_253190 = {}
        # Getting the type of 'self' (line 195)
        self_253187 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 195, 12), 'self', False)
        # Obtaining the member '__write' of a type (line 195)
        write_253188 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 195, 12), self_253187, '__write')
        # Calling __write(args, kwargs) (line 195)
        write_call_result_253191 = invoke(stypy.reporting.localization.Localization(__file__, 195, 12), write_253188, *[unicode_253189], **kwargs_253190)
        
        # Assigning a type to the variable 'stypy_return_type' (line 196)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 196, 12), 'stypy_return_type', types.NoneType)
        # SSA join for if statement (line 193)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 191)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'indent' (line 197)
        indent_253192 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 197, 11), 'indent')
        # Testing the type of an if condition (line 197)
        if_condition_253193 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 197, 8), indent_253192)
        # Assigning a type to the variable 'if_condition_253193' (line 197)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 197, 8), 'if_condition_253193', if_condition_253193)
        # SSA begins for if statement (line 197)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to __write(...): (line 198)
        # Processing the call arguments (line 198)
        
        # Obtaining the type of the subscript
        
        # Call to len(...): (line 198)
        # Processing the call arguments (line 198)
        # Getting the type of 'self' (line 198)
        self_253197 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 198, 49), 'self', False)
        # Obtaining the member '__tags' of a type (line 198)
        tags_253198 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 198, 49), self_253197, '__tags')
        # Processing the call keyword arguments (line 198)
        kwargs_253199 = {}
        # Getting the type of 'len' (line 198)
        len_253196 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 198, 45), 'len', False)
        # Calling len(args, kwargs) (line 198)
        len_call_result_253200 = invoke(stypy.reporting.localization.Localization(__file__, 198, 45), len_253196, *[tags_253198], **kwargs_253199)
        
        slice_253201 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 198, 25), None, len_call_result_253200, None)
        # Getting the type of 'self' (line 198)
        self_253202 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 198, 25), 'self', False)
        # Obtaining the member '__indentation' of a type (line 198)
        indentation_253203 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 198, 25), self_253202, '__indentation')
        # Obtaining the member '__getitem__' of a type (line 198)
        getitem___253204 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 198, 25), indentation_253203, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 198)
        subscript_call_result_253205 = invoke(stypy.reporting.localization.Localization(__file__, 198, 25), getitem___253204, slice_253201)
        
        # Processing the call keyword arguments (line 198)
        kwargs_253206 = {}
        # Getting the type of 'self' (line 198)
        self_253194 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 198, 12), 'self', False)
        # Obtaining the member '__write' of a type (line 198)
        write_253195 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 198, 12), self_253194, '__write')
        # Calling __write(args, kwargs) (line 198)
        write_call_result_253207 = invoke(stypy.reporting.localization.Localization(__file__, 198, 12), write_253195, *[subscript_call_result_253205], **kwargs_253206)
        
        # SSA join for if statement (line 197)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to __write(...): (line 199)
        # Processing the call arguments (line 199)
        unicode_253210 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 199, 21), 'unicode', u'</%s>\n')
        # Getting the type of 'tag' (line 199)
        tag_253211 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 199, 33), 'tag', False)
        # Applying the binary operator '%' (line 199)
        result_mod_253212 = python_operator(stypy.reporting.localization.Localization(__file__, 199, 21), '%', unicode_253210, tag_253211)
        
        # Processing the call keyword arguments (line 199)
        kwargs_253213 = {}
        # Getting the type of 'self' (line 199)
        self_253208 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 199, 8), 'self', False)
        # Obtaining the member '__write' of a type (line 199)
        write_253209 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 199, 8), self_253208, '__write')
        # Calling __write(args, kwargs) (line 199)
        write_call_result_253214 = invoke(stypy.reporting.localization.Localization(__file__, 199, 8), write_253209, *[result_mod_253212], **kwargs_253213)
        
        
        # ################# End of 'end(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'end' in the type store
        # Getting the type of 'stypy_return_type' (line 183)
        stypy_return_type_253215 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 183, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_253215)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'end'
        return stypy_return_type_253215


    @norecursion
    def close(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'close'
        module_type_store = module_type_store.open_function_context('close', 207, 4, False)
        # Assigning a type to the variable 'self' (line 208)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 208, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        XMLWriter.close.__dict__.__setitem__('stypy_localization', localization)
        XMLWriter.close.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        XMLWriter.close.__dict__.__setitem__('stypy_type_store', module_type_store)
        XMLWriter.close.__dict__.__setitem__('stypy_function_name', 'XMLWriter.close')
        XMLWriter.close.__dict__.__setitem__('stypy_param_names_list', ['id'])
        XMLWriter.close.__dict__.__setitem__('stypy_varargs_param_name', None)
        XMLWriter.close.__dict__.__setitem__('stypy_kwargs_param_name', None)
        XMLWriter.close.__dict__.__setitem__('stypy_call_defaults', defaults)
        XMLWriter.close.__dict__.__setitem__('stypy_call_varargs', varargs)
        XMLWriter.close.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        XMLWriter.close.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'XMLWriter.close', ['id'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'close', localization, ['id'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'close(...)' code ##################

        
        
        
        # Call to len(...): (line 208)
        # Processing the call arguments (line 208)
        # Getting the type of 'self' (line 208)
        self_253217 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 208, 18), 'self', False)
        # Obtaining the member '__tags' of a type (line 208)
        tags_253218 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 208, 18), self_253217, '__tags')
        # Processing the call keyword arguments (line 208)
        kwargs_253219 = {}
        # Getting the type of 'len' (line 208)
        len_253216 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 208, 14), 'len', False)
        # Calling len(args, kwargs) (line 208)
        len_call_result_253220 = invoke(stypy.reporting.localization.Localization(__file__, 208, 14), len_253216, *[tags_253218], **kwargs_253219)
        
        # Getting the type of 'id' (line 208)
        id_253221 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 208, 33), 'id')
        # Applying the binary operator '>' (line 208)
        result_gt_253222 = python_operator(stypy.reporting.localization.Localization(__file__, 208, 14), '>', len_call_result_253220, id_253221)
        
        # Testing the type of an if condition (line 208)
        is_suitable_condition(stypy.reporting.localization.Localization(__file__, 208, 8), result_gt_253222)
        # SSA begins for while statement (line 208)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'while loop')
        
        # Call to end(...): (line 209)
        # Processing the call keyword arguments (line 209)
        kwargs_253225 = {}
        # Getting the type of 'self' (line 209)
        self_253223 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 209, 12), 'self', False)
        # Obtaining the member 'end' of a type (line 209)
        end_253224 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 209, 12), self_253223, 'end')
        # Calling end(args, kwargs) (line 209)
        end_call_result_253226 = invoke(stypy.reporting.localization.Localization(__file__, 209, 12), end_253224, *[], **kwargs_253225)
        
        # SSA join for while statement (line 208)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'close(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'close' in the type store
        # Getting the type of 'stypy_return_type' (line 207)
        stypy_return_type_253227 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 207, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_253227)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'close'
        return stypy_return_type_253227


    @norecursion
    def element(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'None' (line 216)
        None_253228 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 216, 32), 'None')
        
        # Obtaining an instance of the builtin type 'dict' (line 216)
        dict_253229 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 216, 45), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 216)
        
        defaults = [None_253228, dict_253229]
        # Create a new context for function 'element'
        module_type_store = module_type_store.open_function_context('element', 216, 4, False)
        # Assigning a type to the variable 'self' (line 217)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 217, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        XMLWriter.element.__dict__.__setitem__('stypy_localization', localization)
        XMLWriter.element.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        XMLWriter.element.__dict__.__setitem__('stypy_type_store', module_type_store)
        XMLWriter.element.__dict__.__setitem__('stypy_function_name', 'XMLWriter.element')
        XMLWriter.element.__dict__.__setitem__('stypy_param_names_list', ['tag', 'text', 'attrib'])
        XMLWriter.element.__dict__.__setitem__('stypy_varargs_param_name', None)
        XMLWriter.element.__dict__.__setitem__('stypy_kwargs_param_name', 'extra')
        XMLWriter.element.__dict__.__setitem__('stypy_call_defaults', defaults)
        XMLWriter.element.__dict__.__setitem__('stypy_call_varargs', varargs)
        XMLWriter.element.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        XMLWriter.element.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'XMLWriter.element', ['tag', 'text', 'attrib'], None, 'extra', defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'element', localization, ['tag', 'text', 'attrib'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'element(...)' code ##################

        
        # Call to start(...): (line 217)
        
        # Obtaining an instance of the builtin type 'tuple' (line 217)
        tuple_253232 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 217, 21), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 217)
        # Adding element type (line 217)
        # Getting the type of 'tag' (line 217)
        tag_253233 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 217, 21), 'tag', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 217, 21), tuple_253232, tag_253233)
        # Adding element type (line 217)
        # Getting the type of 'attrib' (line 217)
        attrib_253234 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 217, 26), 'attrib', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 217, 21), tuple_253232, attrib_253234)
        
        # Processing the call keyword arguments (line 217)
        # Getting the type of 'extra' (line 217)
        extra_253235 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 217, 37), 'extra', False)
        kwargs_253236 = {'extra_253235': extra_253235}
        # Getting the type of 'self' (line 217)
        self_253230 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 217, 8), 'self', False)
        # Obtaining the member 'start' of a type (line 217)
        start_253231 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 217, 8), self_253230, 'start')
        # Calling start(args, kwargs) (line 217)
        start_call_result_253237 = invoke(stypy.reporting.localization.Localization(__file__, 217, 8), start_253231, *[tuple_253232], **kwargs_253236)
        
        
        # Getting the type of 'text' (line 218)
        text_253238 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 218, 11), 'text')
        # Testing the type of an if condition (line 218)
        if_condition_253239 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 218, 8), text_253238)
        # Assigning a type to the variable 'if_condition_253239' (line 218)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 218, 8), 'if_condition_253239', if_condition_253239)
        # SSA begins for if statement (line 218)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to data(...): (line 219)
        # Processing the call arguments (line 219)
        # Getting the type of 'text' (line 219)
        text_253242 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 219, 22), 'text', False)
        # Processing the call keyword arguments (line 219)
        kwargs_253243 = {}
        # Getting the type of 'self' (line 219)
        self_253240 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 219, 12), 'self', False)
        # Obtaining the member 'data' of a type (line 219)
        data_253241 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 219, 12), self_253240, 'data')
        # Calling data(args, kwargs) (line 219)
        data_call_result_253244 = invoke(stypy.reporting.localization.Localization(__file__, 219, 12), data_253241, *[text_253242], **kwargs_253243)
        
        # SSA join for if statement (line 218)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to end(...): (line 220)
        # Processing the call keyword arguments (line 220)
        # Getting the type of 'False' (line 220)
        False_253247 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 220, 24), 'False', False)
        keyword_253248 = False_253247
        kwargs_253249 = {'indent': keyword_253248}
        # Getting the type of 'self' (line 220)
        self_253245 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 220, 8), 'self', False)
        # Obtaining the member 'end' of a type (line 220)
        end_253246 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 220, 8), self_253245, 'end')
        # Calling end(args, kwargs) (line 220)
        end_call_result_253250 = invoke(stypy.reporting.localization.Localization(__file__, 220, 8), end_253246, *[], **kwargs_253249)
        
        
        # ################# End of 'element(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'element' in the type store
        # Getting the type of 'stypy_return_type' (line 216)
        stypy_return_type_253251 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 216, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_253251)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'element'
        return stypy_return_type_253251


    @norecursion
    def flush(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'flush'
        module_type_store = module_type_store.open_function_context('flush', 225, 4, False)
        # Assigning a type to the variable 'self' (line 226)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 226, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        XMLWriter.flush.__dict__.__setitem__('stypy_localization', localization)
        XMLWriter.flush.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        XMLWriter.flush.__dict__.__setitem__('stypy_type_store', module_type_store)
        XMLWriter.flush.__dict__.__setitem__('stypy_function_name', 'XMLWriter.flush')
        XMLWriter.flush.__dict__.__setitem__('stypy_param_names_list', [])
        XMLWriter.flush.__dict__.__setitem__('stypy_varargs_param_name', None)
        XMLWriter.flush.__dict__.__setitem__('stypy_kwargs_param_name', None)
        XMLWriter.flush.__dict__.__setitem__('stypy_call_defaults', defaults)
        XMLWriter.flush.__dict__.__setitem__('stypy_call_varargs', varargs)
        XMLWriter.flush.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        XMLWriter.flush.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'XMLWriter.flush', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'flush', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'flush(...)' code ##################

        pass
        
        # ################# End of 'flush(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'flush' in the type store
        # Getting the type of 'stypy_return_type' (line 225)
        stypy_return_type_253252 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 225, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_253252)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'flush'
        return stypy_return_type_253252


# Assigning a type to the variable 'XMLWriter' (line 106)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 106, 0), 'XMLWriter', XMLWriter)

@norecursion
def generate_transform(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    
    # Obtaining an instance of the builtin type 'list' (line 230)
    list_253253 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 230, 38), 'list')
    # Adding type elements to the builtin type 'list' instance (line 230)
    
    defaults = [list_253253]
    # Create a new context for function 'generate_transform'
    module_type_store = module_type_store.open_function_context('generate_transform', 230, 0, False)
    
    # Passed parameters checking function
    generate_transform.stypy_localization = localization
    generate_transform.stypy_type_of_self = None
    generate_transform.stypy_type_store = module_type_store
    generate_transform.stypy_function_name = 'generate_transform'
    generate_transform.stypy_param_names_list = ['transform_list']
    generate_transform.stypy_varargs_param_name = None
    generate_transform.stypy_kwargs_param_name = None
    generate_transform.stypy_call_defaults = defaults
    generate_transform.stypy_call_varargs = varargs
    generate_transform.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'generate_transform', ['transform_list'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'generate_transform', localization, ['transform_list'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'generate_transform(...)' code ##################

    
    
    # Call to len(...): (line 231)
    # Processing the call arguments (line 231)
    # Getting the type of 'transform_list' (line 231)
    transform_list_253255 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 231, 11), 'transform_list', False)
    # Processing the call keyword arguments (line 231)
    kwargs_253256 = {}
    # Getting the type of 'len' (line 231)
    len_253254 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 231, 7), 'len', False)
    # Calling len(args, kwargs) (line 231)
    len_call_result_253257 = invoke(stypy.reporting.localization.Localization(__file__, 231, 7), len_253254, *[transform_list_253255], **kwargs_253256)
    
    # Testing the type of an if condition (line 231)
    if_condition_253258 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 231, 4), len_call_result_253257)
    # Assigning a type to the variable 'if_condition_253258' (line 231)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 231, 4), 'if_condition_253258', if_condition_253258)
    # SSA begins for if statement (line 231)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 232):
    
    # Assigning a Call to a Name (line 232):
    
    # Call to StringIO(...): (line 232)
    # Processing the call keyword arguments (line 232)
    kwargs_253261 = {}
    # Getting the type of 'io' (line 232)
    io_253259 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 232, 17), 'io', False)
    # Obtaining the member 'StringIO' of a type (line 232)
    StringIO_253260 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 232, 17), io_253259, 'StringIO')
    # Calling StringIO(args, kwargs) (line 232)
    StringIO_call_result_253262 = invoke(stypy.reporting.localization.Localization(__file__, 232, 17), StringIO_253260, *[], **kwargs_253261)
    
    # Assigning a type to the variable 'output' (line 232)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 232, 8), 'output', StringIO_call_result_253262)
    
    # Getting the type of 'transform_list' (line 233)
    transform_list_253263 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 233, 27), 'transform_list')
    # Testing the type of a for loop iterable (line 233)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 233, 8), transform_list_253263)
    # Getting the type of the for loop variable (line 233)
    for_loop_var_253264 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 233, 8), transform_list_253263)
    # Assigning a type to the variable 'type' (line 233)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 233, 8), 'type', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 233, 8), for_loop_var_253264))
    # Assigning a type to the variable 'value' (line 233)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 233, 8), 'value', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 233, 8), for_loop_var_253264))
    # SSA begins for a for statement (line 233)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'type' (line 234)
    type_253265 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 234, 15), 'type')
    unicode_253266 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 234, 23), 'unicode', u'scale')
    # Applying the binary operator '==' (line 234)
    result_eq_253267 = python_operator(stypy.reporting.localization.Localization(__file__, 234, 15), '==', type_253265, unicode_253266)
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'value' (line 234)
    value_253268 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 234, 36), 'value')
    
    # Obtaining an instance of the builtin type 'tuple' (line 234)
    tuple_253269 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 234, 46), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 234)
    # Adding element type (line 234)
    float_253270 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 234, 46), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 234, 46), tuple_253269, float_253270)
    
    # Applying the binary operator '==' (line 234)
    result_eq_253271 = python_operator(stypy.reporting.localization.Localization(__file__, 234, 36), '==', value_253268, tuple_253269)
    
    
    # Getting the type of 'value' (line 234)
    value_253272 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 234, 55), 'value')
    
    # Obtaining an instance of the builtin type 'tuple' (line 234)
    tuple_253273 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 234, 65), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 234)
    # Adding element type (line 234)
    float_253274 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 234, 65), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 234, 65), tuple_253273, float_253274)
    # Adding element type (line 234)
    float_253275 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 234, 70), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 234, 65), tuple_253273, float_253275)
    
    # Applying the binary operator '==' (line 234)
    result_eq_253276 = python_operator(stypy.reporting.localization.Localization(__file__, 234, 55), '==', value_253272, tuple_253273)
    
    # Applying the binary operator 'or' (line 234)
    result_or_keyword_253277 = python_operator(stypy.reporting.localization.Localization(__file__, 234, 36), 'or', result_eq_253271, result_eq_253276)
    
    # Applying the binary operator 'and' (line 234)
    result_and_keyword_253278 = python_operator(stypy.reporting.localization.Localization(__file__, 234, 15), 'and', result_eq_253267, result_or_keyword_253277)
    
    # Testing the type of an if condition (line 234)
    if_condition_253279 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 234, 12), result_and_keyword_253278)
    # Assigning a type to the variable 'if_condition_253279' (line 234)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 234, 12), 'if_condition_253279', if_condition_253279)
    # SSA begins for if statement (line 234)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # SSA join for if statement (line 234)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'type' (line 236)
    type_253280 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 236, 15), 'type')
    unicode_253281 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 236, 23), 'unicode', u'translate')
    # Applying the binary operator '==' (line 236)
    result_eq_253282 = python_operator(stypy.reporting.localization.Localization(__file__, 236, 15), '==', type_253280, unicode_253281)
    
    
    # Getting the type of 'value' (line 236)
    value_253283 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 236, 39), 'value')
    
    # Obtaining an instance of the builtin type 'tuple' (line 236)
    tuple_253284 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 236, 49), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 236)
    # Adding element type (line 236)
    float_253285 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 236, 49), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 236, 49), tuple_253284, float_253285)
    # Adding element type (line 236)
    float_253286 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 236, 54), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 236, 49), tuple_253284, float_253286)
    
    # Applying the binary operator '==' (line 236)
    result_eq_253287 = python_operator(stypy.reporting.localization.Localization(__file__, 236, 39), '==', value_253283, tuple_253284)
    
    # Applying the binary operator 'and' (line 236)
    result_and_keyword_253288 = python_operator(stypy.reporting.localization.Localization(__file__, 236, 15), 'and', result_eq_253282, result_eq_253287)
    
    # Testing the type of an if condition (line 236)
    if_condition_253289 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 236, 12), result_and_keyword_253288)
    # Assigning a type to the variable 'if_condition_253289' (line 236)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 236, 12), 'if_condition_253289', if_condition_253289)
    # SSA begins for if statement (line 236)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # SSA join for if statement (line 236)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'type' (line 238)
    type_253290 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 238, 15), 'type')
    unicode_253291 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 238, 23), 'unicode', u'rotate')
    # Applying the binary operator '==' (line 238)
    result_eq_253292 = python_operator(stypy.reporting.localization.Localization(__file__, 238, 15), '==', type_253290, unicode_253291)
    
    
    # Getting the type of 'value' (line 238)
    value_253293 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 238, 36), 'value')
    
    # Obtaining an instance of the builtin type 'tuple' (line 238)
    tuple_253294 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 238, 46), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 238)
    # Adding element type (line 238)
    float_253295 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 238, 46), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 238, 46), tuple_253294, float_253295)
    
    # Applying the binary operator '==' (line 238)
    result_eq_253296 = python_operator(stypy.reporting.localization.Localization(__file__, 238, 36), '==', value_253293, tuple_253294)
    
    # Applying the binary operator 'and' (line 238)
    result_and_keyword_253297 = python_operator(stypy.reporting.localization.Localization(__file__, 238, 15), 'and', result_eq_253292, result_eq_253296)
    
    # Testing the type of an if condition (line 238)
    if_condition_253298 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 238, 12), result_and_keyword_253297)
    # Assigning a type to the variable 'if_condition_253298' (line 238)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 238, 12), 'if_condition_253298', if_condition_253298)
    # SSA begins for if statement (line 238)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # SSA join for if statement (line 238)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'type' (line 240)
    type_253299 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 240, 15), 'type')
    unicode_253300 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 240, 23), 'unicode', u'matrix')
    # Applying the binary operator '==' (line 240)
    result_eq_253301 = python_operator(stypy.reporting.localization.Localization(__file__, 240, 15), '==', type_253299, unicode_253300)
    
    
    # Call to isinstance(...): (line 240)
    # Processing the call arguments (line 240)
    # Getting the type of 'value' (line 240)
    value_253303 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 240, 47), 'value', False)
    # Getting the type of 'Affine2DBase' (line 240)
    Affine2DBase_253304 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 240, 54), 'Affine2DBase', False)
    # Processing the call keyword arguments (line 240)
    kwargs_253305 = {}
    # Getting the type of 'isinstance' (line 240)
    isinstance_253302 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 240, 36), 'isinstance', False)
    # Calling isinstance(args, kwargs) (line 240)
    isinstance_call_result_253306 = invoke(stypy.reporting.localization.Localization(__file__, 240, 36), isinstance_253302, *[value_253303, Affine2DBase_253304], **kwargs_253305)
    
    # Applying the binary operator 'and' (line 240)
    result_and_keyword_253307 = python_operator(stypy.reporting.localization.Localization(__file__, 240, 15), 'and', result_eq_253301, isinstance_call_result_253306)
    
    # Testing the type of an if condition (line 240)
    if_condition_253308 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 240, 12), result_and_keyword_253307)
    # Assigning a type to the variable 'if_condition_253308' (line 240)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 240, 12), 'if_condition_253308', if_condition_253308)
    # SSA begins for if statement (line 240)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 241):
    
    # Assigning a Call to a Name (line 241):
    
    # Call to to_values(...): (line 241)
    # Processing the call keyword arguments (line 241)
    kwargs_253311 = {}
    # Getting the type of 'value' (line 241)
    value_253309 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 241, 24), 'value', False)
    # Obtaining the member 'to_values' of a type (line 241)
    to_values_253310 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 241, 24), value_253309, 'to_values')
    # Calling to_values(args, kwargs) (line 241)
    to_values_call_result_253312 = invoke(stypy.reporting.localization.Localization(__file__, 241, 24), to_values_253310, *[], **kwargs_253311)
    
    # Assigning a type to the variable 'value' (line 241)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 241, 16), 'value', to_values_call_result_253312)
    # SSA join for if statement (line 240)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Call to write(...): (line 243)
    # Processing the call arguments (line 243)
    unicode_253315 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 243, 25), 'unicode', u'%s(%s)')
    
    # Obtaining an instance of the builtin type 'tuple' (line 244)
    tuple_253316 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 244, 16), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 244)
    # Adding element type (line 244)
    # Getting the type of 'type' (line 244)
    type_253317 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 244, 16), 'type', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 244, 16), tuple_253316, type_253317)
    # Adding element type (line 244)
    
    # Call to join(...): (line 244)
    # Processing the call arguments (line 244)
    # Calculating generator expression
    module_type_store = module_type_store.open_function_context('list comprehension expression', 244, 31, True)
    # Calculating comprehension expression
    # Getting the type of 'value' (line 244)
    value_253324 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 244, 59), 'value', False)
    comprehension_253325 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 244, 31), value_253324)
    # Assigning a type to the variable 'x' (line 244)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 244, 31), 'x', comprehension_253325)
    
    # Call to short_float_fmt(...): (line 244)
    # Processing the call arguments (line 244)
    # Getting the type of 'x' (line 244)
    x_253321 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 244, 47), 'x', False)
    # Processing the call keyword arguments (line 244)
    kwargs_253322 = {}
    # Getting the type of 'short_float_fmt' (line 244)
    short_float_fmt_253320 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 244, 31), 'short_float_fmt', False)
    # Calling short_float_fmt(args, kwargs) (line 244)
    short_float_fmt_call_result_253323 = invoke(stypy.reporting.localization.Localization(__file__, 244, 31), short_float_fmt_253320, *[x_253321], **kwargs_253322)
    
    list_253326 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 244, 31), 'list')
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 244, 31), list_253326, short_float_fmt_call_result_253323)
    # Processing the call keyword arguments (line 244)
    kwargs_253327 = {}
    unicode_253318 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 244, 22), 'unicode', u' ')
    # Obtaining the member 'join' of a type (line 244)
    join_253319 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 244, 22), unicode_253318, 'join')
    # Calling join(args, kwargs) (line 244)
    join_call_result_253328 = invoke(stypy.reporting.localization.Localization(__file__, 244, 22), join_253319, *[list_253326], **kwargs_253327)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 244, 16), tuple_253316, join_call_result_253328)
    
    # Applying the binary operator '%' (line 243)
    result_mod_253329 = python_operator(stypy.reporting.localization.Localization(__file__, 243, 25), '%', unicode_253315, tuple_253316)
    
    # Processing the call keyword arguments (line 243)
    kwargs_253330 = {}
    # Getting the type of 'output' (line 243)
    output_253313 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 243, 12), 'output', False)
    # Obtaining the member 'write' of a type (line 243)
    write_253314 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 243, 12), output_253313, 'write')
    # Calling write(args, kwargs) (line 243)
    write_call_result_253331 = invoke(stypy.reporting.localization.Localization(__file__, 243, 12), write_253314, *[result_mod_253329], **kwargs_253330)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Call to getvalue(...): (line 245)
    # Processing the call keyword arguments (line 245)
    kwargs_253334 = {}
    # Getting the type of 'output' (line 245)
    output_253332 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 245, 15), 'output', False)
    # Obtaining the member 'getvalue' of a type (line 245)
    getvalue_253333 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 245, 15), output_253332, 'getvalue')
    # Calling getvalue(args, kwargs) (line 245)
    getvalue_call_result_253335 = invoke(stypy.reporting.localization.Localization(__file__, 245, 15), getvalue_253333, *[], **kwargs_253334)
    
    # Assigning a type to the variable 'stypy_return_type' (line 245)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 245, 8), 'stypy_return_type', getvalue_call_result_253335)
    # SSA join for if statement (line 231)
    module_type_store = module_type_store.join_ssa_context()
    
    unicode_253336 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 246, 11), 'unicode', u'')
    # Assigning a type to the variable 'stypy_return_type' (line 246)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 246, 4), 'stypy_return_type', unicode_253336)
    
    # ################# End of 'generate_transform(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'generate_transform' in the type store
    # Getting the type of 'stypy_return_type' (line 230)
    stypy_return_type_253337 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 230, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_253337)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'generate_transform'
    return stypy_return_type_253337

# Assigning a type to the variable 'generate_transform' (line 230)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 230, 0), 'generate_transform', generate_transform)

@norecursion
def generate_css(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    
    # Obtaining an instance of the builtin type 'dict' (line 248)
    dict_253338 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 248, 24), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 248)
    
    defaults = [dict_253338]
    # Create a new context for function 'generate_css'
    module_type_store = module_type_store.open_function_context('generate_css', 248, 0, False)
    
    # Passed parameters checking function
    generate_css.stypy_localization = localization
    generate_css.stypy_type_of_self = None
    generate_css.stypy_type_store = module_type_store
    generate_css.stypy_function_name = 'generate_css'
    generate_css.stypy_param_names_list = ['attrib']
    generate_css.stypy_varargs_param_name = None
    generate_css.stypy_kwargs_param_name = None
    generate_css.stypy_call_defaults = defaults
    generate_css.stypy_call_varargs = varargs
    generate_css.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'generate_css', ['attrib'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'generate_css', localization, ['attrib'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'generate_css(...)' code ##################

    
    # Getting the type of 'attrib' (line 249)
    attrib_253339 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 249, 7), 'attrib')
    # Testing the type of an if condition (line 249)
    if_condition_253340 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 249, 4), attrib_253339)
    # Assigning a type to the variable 'if_condition_253340' (line 249)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 249, 4), 'if_condition_253340', if_condition_253340)
    # SSA begins for if statement (line 249)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 250):
    
    # Assigning a Call to a Name (line 250):
    
    # Call to StringIO(...): (line 250)
    # Processing the call keyword arguments (line 250)
    kwargs_253343 = {}
    # Getting the type of 'io' (line 250)
    io_253341 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 250, 17), 'io', False)
    # Obtaining the member 'StringIO' of a type (line 250)
    StringIO_253342 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 250, 17), io_253341, 'StringIO')
    # Calling StringIO(args, kwargs) (line 250)
    StringIO_call_result_253344 = invoke(stypy.reporting.localization.Localization(__file__, 250, 17), StringIO_253342, *[], **kwargs_253343)
    
    # Assigning a type to the variable 'output' (line 250)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 250, 8), 'output', StringIO_call_result_253344)
    
    # Assigning a Call to a Name (line 251):
    
    # Assigning a Call to a Name (line 251):
    
    # Call to sorted(...): (line 251)
    # Processing the call arguments (line 251)
    
    # Call to iteritems(...): (line 251)
    # Processing the call arguments (line 251)
    # Getting the type of 'attrib' (line 251)
    attrib_253348 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 251, 38), 'attrib', False)
    # Processing the call keyword arguments (line 251)
    kwargs_253349 = {}
    # Getting the type of 'six' (line 251)
    six_253346 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 251, 24), 'six', False)
    # Obtaining the member 'iteritems' of a type (line 251)
    iteritems_253347 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 251, 24), six_253346, 'iteritems')
    # Calling iteritems(args, kwargs) (line 251)
    iteritems_call_result_253350 = invoke(stypy.reporting.localization.Localization(__file__, 251, 24), iteritems_253347, *[attrib_253348], **kwargs_253349)
    
    # Processing the call keyword arguments (line 251)
    kwargs_253351 = {}
    # Getting the type of 'sorted' (line 251)
    sorted_253345 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 251, 17), 'sorted', False)
    # Calling sorted(args, kwargs) (line 251)
    sorted_call_result_253352 = invoke(stypy.reporting.localization.Localization(__file__, 251, 17), sorted_253345, *[iteritems_call_result_253350], **kwargs_253351)
    
    # Assigning a type to the variable 'attrib' (line 251)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 251, 8), 'attrib', sorted_call_result_253352)
    
    # Getting the type of 'attrib' (line 252)
    attrib_253353 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 252, 20), 'attrib')
    # Testing the type of a for loop iterable (line 252)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 252, 8), attrib_253353)
    # Getting the type of the for loop variable (line 252)
    for_loop_var_253354 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 252, 8), attrib_253353)
    # Assigning a type to the variable 'k' (line 252)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 252, 8), 'k', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 8), for_loop_var_253354))
    # Assigning a type to the variable 'v' (line 252)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 252, 8), 'v', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 8), for_loop_var_253354))
    # SSA begins for a for statement (line 252)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Call to a Name (line 253):
    
    # Assigning a Call to a Name (line 253):
    
    # Call to escape_attrib(...): (line 253)
    # Processing the call arguments (line 253)
    # Getting the type of 'k' (line 253)
    k_253356 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 253, 30), 'k', False)
    # Processing the call keyword arguments (line 253)
    kwargs_253357 = {}
    # Getting the type of 'escape_attrib' (line 253)
    escape_attrib_253355 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 253, 16), 'escape_attrib', False)
    # Calling escape_attrib(args, kwargs) (line 253)
    escape_attrib_call_result_253358 = invoke(stypy.reporting.localization.Localization(__file__, 253, 16), escape_attrib_253355, *[k_253356], **kwargs_253357)
    
    # Assigning a type to the variable 'k' (line 253)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 253, 12), 'k', escape_attrib_call_result_253358)
    
    # Assigning a Call to a Name (line 254):
    
    # Assigning a Call to a Name (line 254):
    
    # Call to escape_attrib(...): (line 254)
    # Processing the call arguments (line 254)
    # Getting the type of 'v' (line 254)
    v_253360 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 254, 30), 'v', False)
    # Processing the call keyword arguments (line 254)
    kwargs_253361 = {}
    # Getting the type of 'escape_attrib' (line 254)
    escape_attrib_253359 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 254, 16), 'escape_attrib', False)
    # Calling escape_attrib(args, kwargs) (line 254)
    escape_attrib_call_result_253362 = invoke(stypy.reporting.localization.Localization(__file__, 254, 16), escape_attrib_253359, *[v_253360], **kwargs_253361)
    
    # Assigning a type to the variable 'v' (line 254)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 254, 12), 'v', escape_attrib_call_result_253362)
    
    # Call to write(...): (line 255)
    # Processing the call arguments (line 255)
    unicode_253365 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 255, 25), 'unicode', u'%s:%s;')
    
    # Obtaining an instance of the builtin type 'tuple' (line 255)
    tuple_253366 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 255, 37), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 255)
    # Adding element type (line 255)
    # Getting the type of 'k' (line 255)
    k_253367 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 255, 37), 'k', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 255, 37), tuple_253366, k_253367)
    # Adding element type (line 255)
    # Getting the type of 'v' (line 255)
    v_253368 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 255, 40), 'v', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 255, 37), tuple_253366, v_253368)
    
    # Applying the binary operator '%' (line 255)
    result_mod_253369 = python_operator(stypy.reporting.localization.Localization(__file__, 255, 25), '%', unicode_253365, tuple_253366)
    
    # Processing the call keyword arguments (line 255)
    kwargs_253370 = {}
    # Getting the type of 'output' (line 255)
    output_253363 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 255, 12), 'output', False)
    # Obtaining the member 'write' of a type (line 255)
    write_253364 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 255, 12), output_253363, 'write')
    # Calling write(args, kwargs) (line 255)
    write_call_result_253371 = invoke(stypy.reporting.localization.Localization(__file__, 255, 12), write_253364, *[result_mod_253369], **kwargs_253370)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Call to getvalue(...): (line 256)
    # Processing the call keyword arguments (line 256)
    kwargs_253374 = {}
    # Getting the type of 'output' (line 256)
    output_253372 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 256, 15), 'output', False)
    # Obtaining the member 'getvalue' of a type (line 256)
    getvalue_253373 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 256, 15), output_253372, 'getvalue')
    # Calling getvalue(args, kwargs) (line 256)
    getvalue_call_result_253375 = invoke(stypy.reporting.localization.Localization(__file__, 256, 15), getvalue_253373, *[], **kwargs_253374)
    
    # Assigning a type to the variable 'stypy_return_type' (line 256)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 256, 8), 'stypy_return_type', getvalue_call_result_253375)
    # SSA join for if statement (line 249)
    module_type_store = module_type_store.join_ssa_context()
    
    unicode_253376 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 257, 11), 'unicode', u'')
    # Assigning a type to the variable 'stypy_return_type' (line 257)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 257, 4), 'stypy_return_type', unicode_253376)
    
    # ################# End of 'generate_css(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'generate_css' in the type store
    # Getting the type of 'stypy_return_type' (line 248)
    stypy_return_type_253377 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 248, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_253377)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'generate_css'
    return stypy_return_type_253377

# Assigning a type to the variable 'generate_css' (line 248)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 248, 0), 'generate_css', generate_css)

# Assigning a Dict to a Name (line 259):

# Assigning a Dict to a Name (line 259):

# Obtaining an instance of the builtin type 'dict' (line 259)
dict_253378 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 259, 14), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 259)
# Adding element type (key, value) (line 259)
unicode_253379 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 259, 15), 'unicode', u'projecting')
unicode_253380 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 259, 30), 'unicode', u'square')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 259, 14), dict_253378, (unicode_253379, unicode_253380))
# Adding element type (key, value) (line 259)
unicode_253381 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 259, 40), 'unicode', u'butt')
unicode_253382 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 259, 49), 'unicode', u'butt')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 259, 14), dict_253378, (unicode_253381, unicode_253382))
# Adding element type (key, value) (line 259)
unicode_253383 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 259, 57), 'unicode', u'round')
unicode_253384 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 259, 66), 'unicode', u'round')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 259, 14), dict_253378, (unicode_253383, unicode_253384))

# Assigning a type to the variable '_capstyle_d' (line 259)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 259, 0), '_capstyle_d', dict_253378)
# Declaration of the 'RendererSVG' class
# Getting the type of 'RendererBase' (line 260)
RendererBase_253385 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 260, 18), 'RendererBase')

class RendererSVG(RendererBase_253385, ):
    
    # Assigning a Num to a Name (line 261):
    
    # Assigning a Call to a Name (line 262):

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'None' (line 264)
        None_253386 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 264, 58), 'None')
        int_253387 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 264, 74), 'int')
        defaults = [None_253386, int_253387]
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 264, 4, False)
        # Assigning a type to the variable 'self' (line 265)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 265, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererSVG.__init__', ['width', 'height', 'svgwriter', 'basename', 'image_dpi'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['width', 'height', 'svgwriter', 'basename', 'image_dpi'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Assigning a Name to a Attribute (line 265):
        
        # Assigning a Name to a Attribute (line 265):
        # Getting the type of 'width' (line 265)
        width_253388 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 265, 21), 'width')
        # Getting the type of 'self' (line 265)
        self_253389 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 265, 8), 'self')
        # Setting the type of the member 'width' of a type (line 265)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 265, 8), self_253389, 'width', width_253388)
        
        # Assigning a Name to a Attribute (line 266):
        
        # Assigning a Name to a Attribute (line 266):
        # Getting the type of 'height' (line 266)
        height_253390 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 266, 22), 'height')
        # Getting the type of 'self' (line 266)
        self_253391 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 266, 8), 'self')
        # Setting the type of the member 'height' of a type (line 266)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 266, 8), self_253391, 'height', height_253390)
        
        # Assigning a Call to a Attribute (line 267):
        
        # Assigning a Call to a Attribute (line 267):
        
        # Call to XMLWriter(...): (line 267)
        # Processing the call arguments (line 267)
        # Getting the type of 'svgwriter' (line 267)
        svgwriter_253393 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 267, 32), 'svgwriter', False)
        # Processing the call keyword arguments (line 267)
        kwargs_253394 = {}
        # Getting the type of 'XMLWriter' (line 267)
        XMLWriter_253392 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 267, 22), 'XMLWriter', False)
        # Calling XMLWriter(args, kwargs) (line 267)
        XMLWriter_call_result_253395 = invoke(stypy.reporting.localization.Localization(__file__, 267, 22), XMLWriter_253392, *[svgwriter_253393], **kwargs_253394)
        
        # Getting the type of 'self' (line 267)
        self_253396 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 267, 8), 'self')
        # Setting the type of the member 'writer' of a type (line 267)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 267, 8), self_253396, 'writer', XMLWriter_call_result_253395)
        
        # Assigning a Name to a Attribute (line 268):
        
        # Assigning a Name to a Attribute (line 268):
        # Getting the type of 'image_dpi' (line 268)
        image_dpi_253397 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 268, 25), 'image_dpi')
        # Getting the type of 'self' (line 268)
        self_253398 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 268, 8), 'self')
        # Setting the type of the member 'image_dpi' of a type (line 268)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 268, 8), self_253398, 'image_dpi', image_dpi_253397)
        
        # Assigning a Dict to a Attribute (line 270):
        
        # Assigning a Dict to a Attribute (line 270):
        
        # Obtaining an instance of the builtin type 'dict' (line 270)
        dict_253399 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 270, 23), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 270)
        
        # Getting the type of 'self' (line 270)
        self_253400 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 270, 8), 'self')
        # Setting the type of the member '_groupd' of a type (line 270)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 270, 8), self_253400, '_groupd', dict_253399)
        
        
        
        # Obtaining the type of the subscript
        unicode_253401 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 24), 'unicode', u'svg.image_inline')
        # Getting the type of 'rcParams' (line 271)
        rcParams_253402 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 15), 'rcParams')
        # Obtaining the member '__getitem__' of a type (line 271)
        getitem___253403 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 271, 15), rcParams_253402, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 271)
        subscript_call_result_253404 = invoke(stypy.reporting.localization.Localization(__file__, 271, 15), getitem___253403, unicode_253401)
        
        # Applying the 'not' unary operator (line 271)
        result_not__253405 = python_operator(stypy.reporting.localization.Localization(__file__, 271, 11), 'not', subscript_call_result_253404)
        
        # Testing the type of an if condition (line 271)
        if_condition_253406 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 271, 8), result_not__253405)
        # Assigning a type to the variable 'if_condition_253406' (line 271)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 271, 8), 'if_condition_253406', if_condition_253406)
        # SSA begins for if statement (line 271)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        # Evaluating assert statement condition
        
        # Getting the type of 'basename' (line 272)
        basename_253407 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 272, 19), 'basename')
        # Getting the type of 'None' (line 272)
        None_253408 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 272, 35), 'None')
        # Applying the binary operator 'isnot' (line 272)
        result_is_not_253409 = python_operator(stypy.reporting.localization.Localization(__file__, 272, 19), 'isnot', basename_253407, None_253408)
        
        
        # Assigning a Name to a Attribute (line 273):
        
        # Assigning a Name to a Attribute (line 273):
        # Getting the type of 'basename' (line 273)
        basename_253410 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 273, 28), 'basename')
        # Getting the type of 'self' (line 273)
        self_253411 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 273, 12), 'self')
        # Setting the type of the member 'basename' of a type (line 273)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 273, 12), self_253411, 'basename', basename_253410)
        
        # Assigning a Dict to a Attribute (line 274):
        
        # Assigning a Dict to a Attribute (line 274):
        
        # Obtaining an instance of the builtin type 'dict' (line 274)
        dict_253412 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 274, 27), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 274)
        
        # Getting the type of 'self' (line 274)
        self_253413 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 274, 12), 'self')
        # Setting the type of the member '_imaged' of a type (line 274)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 274, 12), self_253413, '_imaged', dict_253412)
        # SSA join for if statement (line 271)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Attribute (line 275):
        
        # Assigning a Call to a Attribute (line 275):
        
        # Call to OrderedDict(...): (line 275)
        # Processing the call keyword arguments (line 275)
        kwargs_253415 = {}
        # Getting the type of 'OrderedDict' (line 275)
        OrderedDict_253414 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 22), 'OrderedDict', False)
        # Calling OrderedDict(args, kwargs) (line 275)
        OrderedDict_call_result_253416 = invoke(stypy.reporting.localization.Localization(__file__, 275, 22), OrderedDict_253414, *[], **kwargs_253415)
        
        # Getting the type of 'self' (line 275)
        self_253417 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 8), 'self')
        # Setting the type of the member '_clipd' of a type (line 275)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 275, 8), self_253417, '_clipd', OrderedDict_call_result_253416)
        
        # Assigning a Dict to a Attribute (line 276):
        
        # Assigning a Dict to a Attribute (line 276):
        
        # Obtaining an instance of the builtin type 'dict' (line 276)
        dict_253418 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 276, 26), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 276)
        
        # Getting the type of 'self' (line 276)
        self_253419 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 8), 'self')
        # Setting the type of the member '_char_defs' of a type (line 276)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 8), self_253419, '_char_defs', dict_253418)
        
        # Assigning a Dict to a Attribute (line 277):
        
        # Assigning a Dict to a Attribute (line 277):
        
        # Obtaining an instance of the builtin type 'dict' (line 277)
        dict_253420 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 277, 24), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 277)
        
        # Getting the type of 'self' (line 277)
        self_253421 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 8), 'self')
        # Setting the type of the member '_markers' of a type (line 277)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 8), self_253421, '_markers', dict_253420)
        
        # Assigning a Num to a Attribute (line 278):
        
        # Assigning a Num to a Attribute (line 278):
        int_253422 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 278, 35), 'int')
        # Getting the type of 'self' (line 278)
        self_253423 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 278, 8), 'self')
        # Setting the type of the member '_path_collection_id' of a type (line 278)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 278, 8), self_253423, '_path_collection_id', int_253422)
        
        # Assigning a Dict to a Attribute (line 279):
        
        # Assigning a Dict to a Attribute (line 279):
        
        # Obtaining an instance of the builtin type 'dict' (line 279)
        dict_253424 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 279, 23), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 279)
        
        # Getting the type of 'self' (line 279)
        self_253425 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 279, 8), 'self')
        # Setting the type of the member '_imaged' of a type (line 279)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 279, 8), self_253425, '_imaged', dict_253424)
        
        # Assigning a Call to a Attribute (line 280):
        
        # Assigning a Call to a Attribute (line 280):
        
        # Call to OrderedDict(...): (line 280)
        # Processing the call keyword arguments (line 280)
        kwargs_253427 = {}
        # Getting the type of 'OrderedDict' (line 280)
        OrderedDict_253426 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 280, 23), 'OrderedDict', False)
        # Calling OrderedDict(args, kwargs) (line 280)
        OrderedDict_call_result_253428 = invoke(stypy.reporting.localization.Localization(__file__, 280, 23), OrderedDict_253426, *[], **kwargs_253427)
        
        # Getting the type of 'self' (line 280)
        self_253429 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 280, 8), 'self')
        # Setting the type of the member '_hatchd' of a type (line 280)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 280, 8), self_253429, '_hatchd', OrderedDict_call_result_253428)
        
        # Assigning a Name to a Attribute (line 281):
        
        # Assigning a Name to a Attribute (line 281):
        # Getting the type of 'False' (line 281)
        False_253430 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 281, 28), 'False')
        # Getting the type of 'self' (line 281)
        self_253431 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 281, 8), 'self')
        # Setting the type of the member '_has_gouraud' of a type (line 281)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 281, 8), self_253431, '_has_gouraud', False_253430)
        
        # Assigning a Num to a Attribute (line 282):
        
        # Assigning a Num to a Attribute (line 282):
        int_253432 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 282, 28), 'int')
        # Getting the type of 'self' (line 282)
        self_253433 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 282, 8), 'self')
        # Setting the type of the member '_n_gradients' of a type (line 282)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 282, 8), self_253433, '_n_gradients', int_253432)
        
        # Assigning a Call to a Attribute (line 283):
        
        # Assigning a Call to a Attribute (line 283):
        
        # Call to OrderedDict(...): (line 283)
        # Processing the call keyword arguments (line 283)
        kwargs_253435 = {}
        # Getting the type of 'OrderedDict' (line 283)
        OrderedDict_253434 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 283, 22), 'OrderedDict', False)
        # Calling OrderedDict(args, kwargs) (line 283)
        OrderedDict_call_result_253436 = invoke(stypy.reporting.localization.Localization(__file__, 283, 22), OrderedDict_253434, *[], **kwargs_253435)
        
        # Getting the type of 'self' (line 283)
        self_253437 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 283, 8), 'self')
        # Setting the type of the member '_fonts' of a type (line 283)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 283, 8), self_253437, '_fonts', OrderedDict_call_result_253436)
        
        # Assigning a Call to a Attribute (line 284):
        
        # Assigning a Call to a Attribute (line 284):
        
        # Call to MathTextParser(...): (line 284)
        # Processing the call arguments (line 284)
        unicode_253439 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 284, 46), 'unicode', u'SVG')
        # Processing the call keyword arguments (line 284)
        kwargs_253440 = {}
        # Getting the type of 'MathTextParser' (line 284)
        MathTextParser_253438 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 284, 31), 'MathTextParser', False)
        # Calling MathTextParser(args, kwargs) (line 284)
        MathTextParser_call_result_253441 = invoke(stypy.reporting.localization.Localization(__file__, 284, 31), MathTextParser_253438, *[unicode_253439], **kwargs_253440)
        
        # Getting the type of 'self' (line 284)
        self_253442 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 284, 8), 'self')
        # Setting the type of the member 'mathtext_parser' of a type (line 284)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 284, 8), self_253442, 'mathtext_parser', MathTextParser_call_result_253441)
        
        # Call to __init__(...): (line 286)
        # Processing the call arguments (line 286)
        # Getting the type of 'self' (line 286)
        self_253445 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 286, 30), 'self', False)
        # Processing the call keyword arguments (line 286)
        kwargs_253446 = {}
        # Getting the type of 'RendererBase' (line 286)
        RendererBase_253443 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 286, 8), 'RendererBase', False)
        # Obtaining the member '__init__' of a type (line 286)
        init___253444 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 286, 8), RendererBase_253443, '__init__')
        # Calling __init__(args, kwargs) (line 286)
        init___call_result_253447 = invoke(stypy.reporting.localization.Localization(__file__, 286, 8), init___253444, *[self_253445], **kwargs_253446)
        
        
        # Assigning a Call to a Attribute (line 287):
        
        # Assigning a Call to a Attribute (line 287):
        
        # Call to dict(...): (line 287)
        # Processing the call keyword arguments (line 287)
        kwargs_253449 = {}
        # Getting the type of 'dict' (line 287)
        dict_253448 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 287, 26), 'dict', False)
        # Calling dict(args, kwargs) (line 287)
        dict_call_result_253450 = invoke(stypy.reporting.localization.Localization(__file__, 287, 26), dict_253448, *[], **kwargs_253449)
        
        # Getting the type of 'self' (line 287)
        self_253451 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 287, 8), 'self')
        # Setting the type of the member '_glyph_map' of a type (line 287)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 287, 8), self_253451, '_glyph_map', dict_call_result_253450)
        
        # Call to write(...): (line 289)
        # Processing the call arguments (line 289)
        # Getting the type of 'svgProlog' (line 289)
        svgProlog_253454 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 289, 24), 'svgProlog', False)
        # Processing the call keyword arguments (line 289)
        kwargs_253455 = {}
        # Getting the type of 'svgwriter' (line 289)
        svgwriter_253452 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 289, 8), 'svgwriter', False)
        # Obtaining the member 'write' of a type (line 289)
        write_253453 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 289, 8), svgwriter_253452, 'write')
        # Calling write(args, kwargs) (line 289)
        write_call_result_253456 = invoke(stypy.reporting.localization.Localization(__file__, 289, 8), write_253453, *[svgProlog_253454], **kwargs_253455)
        
        
        # Assigning a Call to a Attribute (line 290):
        
        # Assigning a Call to a Attribute (line 290):
        
        # Call to start(...): (line 290)
        # Processing the call arguments (line 290)
        unicode_253460 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 291, 12), 'unicode', u'svg')
        # Processing the call keyword arguments (line 290)
        unicode_253461 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 292, 18), 'unicode', u'%ipt')
        # Getting the type of 'width' (line 292)
        width_253462 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 292, 27), 'width', False)
        # Applying the binary operator '%' (line 292)
        result_mod_253463 = python_operator(stypy.reporting.localization.Localization(__file__, 292, 18), '%', unicode_253461, width_253462)
        
        keyword_253464 = result_mod_253463
        unicode_253465 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 292, 41), 'unicode', u'%ipt')
        # Getting the type of 'height' (line 292)
        height_253466 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 292, 50), 'height', False)
        # Applying the binary operator '%' (line 292)
        result_mod_253467 = python_operator(stypy.reporting.localization.Localization(__file__, 292, 41), '%', unicode_253465, height_253466)
        
        keyword_253468 = result_mod_253467
        unicode_253469 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 293, 20), 'unicode', u'0 0 %i %i')
        
        # Obtaining an instance of the builtin type 'tuple' (line 293)
        tuple_253470 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 293, 35), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 293)
        # Adding element type (line 293)
        # Getting the type of 'width' (line 293)
        width_253471 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 293, 35), 'width', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 293, 35), tuple_253470, width_253471)
        # Adding element type (line 293)
        # Getting the type of 'height' (line 293)
        height_253472 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 293, 42), 'height', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 293, 35), tuple_253470, height_253472)
        
        # Applying the binary operator '%' (line 293)
        result_mod_253473 = python_operator(stypy.reporting.localization.Localization(__file__, 293, 20), '%', unicode_253469, tuple_253470)
        
        keyword_253474 = result_mod_253473
        unicode_253475 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 294, 18), 'unicode', u'http://www.w3.org/2000/svg')
        keyword_253476 = unicode_253475
        unicode_253477 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 295, 20), 'unicode', u'1.1')
        keyword_253478 = unicode_253477
        
        # Obtaining an instance of the builtin type 'dict' (line 296)
        dict_253479 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 296, 19), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 296)
        # Adding element type (key, value) (line 296)
        unicode_253480 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 296, 20), 'unicode', u'xmlns:xlink')
        unicode_253481 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 296, 35), 'unicode', u'http://www.w3.org/1999/xlink')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 296, 19), dict_253479, (unicode_253480, unicode_253481))
        
        keyword_253482 = dict_253479
        kwargs_253483 = {'xmlns': keyword_253476, 'height': keyword_253468, 'width': keyword_253464, 'version': keyword_253478, 'attrib': keyword_253482, 'viewBox': keyword_253474}
        # Getting the type of 'self' (line 290)
        self_253457 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 290, 25), 'self', False)
        # Obtaining the member 'writer' of a type (line 290)
        writer_253458 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 290, 25), self_253457, 'writer')
        # Obtaining the member 'start' of a type (line 290)
        start_253459 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 290, 25), writer_253458, 'start')
        # Calling start(args, kwargs) (line 290)
        start_call_result_253484 = invoke(stypy.reporting.localization.Localization(__file__, 290, 25), start_253459, *[unicode_253460], **kwargs_253483)
        
        # Getting the type of 'self' (line 290)
        self_253485 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 290, 8), 'self')
        # Setting the type of the member '_start_id' of a type (line 290)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 290, 8), self_253485, '_start_id', start_call_result_253484)
        
        # Call to _write_default_style(...): (line 297)
        # Processing the call keyword arguments (line 297)
        kwargs_253488 = {}
        # Getting the type of 'self' (line 297)
        self_253486 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 297, 8), 'self', False)
        # Obtaining the member '_write_default_style' of a type (line 297)
        _write_default_style_253487 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 297, 8), self_253486, '_write_default_style')
        # Calling _write_default_style(args, kwargs) (line 297)
        _write_default_style_call_result_253489 = invoke(stypy.reporting.localization.Localization(__file__, 297, 8), _write_default_style_253487, *[], **kwargs_253488)
        
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def finalize(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'finalize'
        module_type_store = module_type_store.open_function_context('finalize', 299, 4, False)
        # Assigning a type to the variable 'self' (line 300)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 300, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererSVG.finalize.__dict__.__setitem__('stypy_localization', localization)
        RendererSVG.finalize.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererSVG.finalize.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererSVG.finalize.__dict__.__setitem__('stypy_function_name', 'RendererSVG.finalize')
        RendererSVG.finalize.__dict__.__setitem__('stypy_param_names_list', [])
        RendererSVG.finalize.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererSVG.finalize.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererSVG.finalize.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererSVG.finalize.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererSVG.finalize.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererSVG.finalize.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererSVG.finalize', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'finalize', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'finalize(...)' code ##################

        
        # Call to _write_clips(...): (line 300)
        # Processing the call keyword arguments (line 300)
        kwargs_253492 = {}
        # Getting the type of 'self' (line 300)
        self_253490 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 300, 8), 'self', False)
        # Obtaining the member '_write_clips' of a type (line 300)
        _write_clips_253491 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 300, 8), self_253490, '_write_clips')
        # Calling _write_clips(args, kwargs) (line 300)
        _write_clips_call_result_253493 = invoke(stypy.reporting.localization.Localization(__file__, 300, 8), _write_clips_253491, *[], **kwargs_253492)
        
        
        # Call to _write_hatches(...): (line 301)
        # Processing the call keyword arguments (line 301)
        kwargs_253496 = {}
        # Getting the type of 'self' (line 301)
        self_253494 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 301, 8), 'self', False)
        # Obtaining the member '_write_hatches' of a type (line 301)
        _write_hatches_253495 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 301, 8), self_253494, '_write_hatches')
        # Calling _write_hatches(args, kwargs) (line 301)
        _write_hatches_call_result_253497 = invoke(stypy.reporting.localization.Localization(__file__, 301, 8), _write_hatches_253495, *[], **kwargs_253496)
        
        
        # Call to _write_svgfonts(...): (line 302)
        # Processing the call keyword arguments (line 302)
        kwargs_253500 = {}
        # Getting the type of 'self' (line 302)
        self_253498 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 302, 8), 'self', False)
        # Obtaining the member '_write_svgfonts' of a type (line 302)
        _write_svgfonts_253499 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 302, 8), self_253498, '_write_svgfonts')
        # Calling _write_svgfonts(args, kwargs) (line 302)
        _write_svgfonts_call_result_253501 = invoke(stypy.reporting.localization.Localization(__file__, 302, 8), _write_svgfonts_253499, *[], **kwargs_253500)
        
        
        # Call to close(...): (line 303)
        # Processing the call arguments (line 303)
        # Getting the type of 'self' (line 303)
        self_253505 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 303, 26), 'self', False)
        # Obtaining the member '_start_id' of a type (line 303)
        _start_id_253506 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 303, 26), self_253505, '_start_id')
        # Processing the call keyword arguments (line 303)
        kwargs_253507 = {}
        # Getting the type of 'self' (line 303)
        self_253502 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 303, 8), 'self', False)
        # Obtaining the member 'writer' of a type (line 303)
        writer_253503 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 303, 8), self_253502, 'writer')
        # Obtaining the member 'close' of a type (line 303)
        close_253504 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 303, 8), writer_253503, 'close')
        # Calling close(args, kwargs) (line 303)
        close_call_result_253508 = invoke(stypy.reporting.localization.Localization(__file__, 303, 8), close_253504, *[_start_id_253506], **kwargs_253507)
        
        
        # Call to flush(...): (line 304)
        # Processing the call keyword arguments (line 304)
        kwargs_253512 = {}
        # Getting the type of 'self' (line 304)
        self_253509 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 304, 8), 'self', False)
        # Obtaining the member 'writer' of a type (line 304)
        writer_253510 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 304, 8), self_253509, 'writer')
        # Obtaining the member 'flush' of a type (line 304)
        flush_253511 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 304, 8), writer_253510, 'flush')
        # Calling flush(args, kwargs) (line 304)
        flush_call_result_253513 = invoke(stypy.reporting.localization.Localization(__file__, 304, 8), flush_253511, *[], **kwargs_253512)
        
        
        # ################# End of 'finalize(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'finalize' in the type store
        # Getting the type of 'stypy_return_type' (line 299)
        stypy_return_type_253514 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 299, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_253514)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'finalize'
        return stypy_return_type_253514


    @norecursion
    def _write_default_style(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_write_default_style'
        module_type_store = module_type_store.open_function_context('_write_default_style', 306, 4, False)
        # Assigning a type to the variable 'self' (line 307)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 307, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererSVG._write_default_style.__dict__.__setitem__('stypy_localization', localization)
        RendererSVG._write_default_style.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererSVG._write_default_style.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererSVG._write_default_style.__dict__.__setitem__('stypy_function_name', 'RendererSVG._write_default_style')
        RendererSVG._write_default_style.__dict__.__setitem__('stypy_param_names_list', [])
        RendererSVG._write_default_style.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererSVG._write_default_style.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererSVG._write_default_style.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererSVG._write_default_style.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererSVG._write_default_style.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererSVG._write_default_style.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererSVG._write_default_style', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_write_default_style', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_write_default_style(...)' code ##################

        
        # Assigning a Attribute to a Name (line 307):
        
        # Assigning a Attribute to a Name (line 307):
        # Getting the type of 'self' (line 307)
        self_253515 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 307, 17), 'self')
        # Obtaining the member 'writer' of a type (line 307)
        writer_253516 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 307, 17), self_253515, 'writer')
        # Assigning a type to the variable 'writer' (line 307)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 307, 8), 'writer', writer_253516)
        
        # Assigning a Call to a Name (line 308):
        
        # Assigning a Call to a Name (line 308):
        
        # Call to generate_css(...): (line 308)
        # Processing the call arguments (line 308)
        
        # Obtaining an instance of the builtin type 'dict' (line 308)
        dict_253518 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 308, 37), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 308)
        # Adding element type (key, value) (line 308)
        unicode_253519 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 309, 12), 'unicode', u'stroke-linejoin')
        unicode_253520 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 309, 31), 'unicode', u'round')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 308, 37), dict_253518, (unicode_253519, unicode_253520))
        # Adding element type (key, value) (line 308)
        unicode_253521 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 310, 12), 'unicode', u'stroke-linecap')
        unicode_253522 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 310, 30), 'unicode', u'butt')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 308, 37), dict_253518, (unicode_253521, unicode_253522))
        
        # Processing the call keyword arguments (line 308)
        kwargs_253523 = {}
        # Getting the type of 'generate_css' (line 308)
        generate_css_253517 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 308, 24), 'generate_css', False)
        # Calling generate_css(args, kwargs) (line 308)
        generate_css_call_result_253524 = invoke(stypy.reporting.localization.Localization(__file__, 308, 24), generate_css_253517, *[dict_253518], **kwargs_253523)
        
        # Assigning a type to the variable 'default_style' (line 308)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 308, 8), 'default_style', generate_css_call_result_253524)
        
        # Call to start(...): (line 311)
        # Processing the call arguments (line 311)
        unicode_253527 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 311, 21), 'unicode', u'defs')
        # Processing the call keyword arguments (line 311)
        kwargs_253528 = {}
        # Getting the type of 'writer' (line 311)
        writer_253525 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 311, 8), 'writer', False)
        # Obtaining the member 'start' of a type (line 311)
        start_253526 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 311, 8), writer_253525, 'start')
        # Calling start(args, kwargs) (line 311)
        start_call_result_253529 = invoke(stypy.reporting.localization.Localization(__file__, 311, 8), start_253526, *[unicode_253527], **kwargs_253528)
        
        
        # Call to start(...): (line 312)
        # Processing the call arguments (line 312)
        unicode_253532 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 312, 21), 'unicode', u'style')
        # Processing the call keyword arguments (line 312)
        unicode_253533 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 312, 35), 'unicode', u'text/css')
        keyword_253534 = unicode_253533
        kwargs_253535 = {'type': keyword_253534}
        # Getting the type of 'writer' (line 312)
        writer_253530 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 312, 8), 'writer', False)
        # Obtaining the member 'start' of a type (line 312)
        start_253531 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 312, 8), writer_253530, 'start')
        # Calling start(args, kwargs) (line 312)
        start_call_result_253536 = invoke(stypy.reporting.localization.Localization(__file__, 312, 8), start_253531, *[unicode_253532], **kwargs_253535)
        
        
        # Call to data(...): (line 313)
        # Processing the call arguments (line 313)
        unicode_253539 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 313, 20), 'unicode', u'*{%s}\n')
        # Getting the type of 'default_style' (line 313)
        default_style_253540 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 313, 32), 'default_style', False)
        # Applying the binary operator '%' (line 313)
        result_mod_253541 = python_operator(stypy.reporting.localization.Localization(__file__, 313, 20), '%', unicode_253539, default_style_253540)
        
        # Processing the call keyword arguments (line 313)
        kwargs_253542 = {}
        # Getting the type of 'writer' (line 313)
        writer_253537 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 313, 8), 'writer', False)
        # Obtaining the member 'data' of a type (line 313)
        data_253538 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 313, 8), writer_253537, 'data')
        # Calling data(args, kwargs) (line 313)
        data_call_result_253543 = invoke(stypy.reporting.localization.Localization(__file__, 313, 8), data_253538, *[result_mod_253541], **kwargs_253542)
        
        
        # Call to end(...): (line 314)
        # Processing the call arguments (line 314)
        unicode_253546 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 314, 19), 'unicode', u'style')
        # Processing the call keyword arguments (line 314)
        kwargs_253547 = {}
        # Getting the type of 'writer' (line 314)
        writer_253544 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 314, 8), 'writer', False)
        # Obtaining the member 'end' of a type (line 314)
        end_253545 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 314, 8), writer_253544, 'end')
        # Calling end(args, kwargs) (line 314)
        end_call_result_253548 = invoke(stypy.reporting.localization.Localization(__file__, 314, 8), end_253545, *[unicode_253546], **kwargs_253547)
        
        
        # Call to end(...): (line 315)
        # Processing the call arguments (line 315)
        unicode_253551 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 315, 19), 'unicode', u'defs')
        # Processing the call keyword arguments (line 315)
        kwargs_253552 = {}
        # Getting the type of 'writer' (line 315)
        writer_253549 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 315, 8), 'writer', False)
        # Obtaining the member 'end' of a type (line 315)
        end_253550 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 315, 8), writer_253549, 'end')
        # Calling end(args, kwargs) (line 315)
        end_call_result_253553 = invoke(stypy.reporting.localization.Localization(__file__, 315, 8), end_253550, *[unicode_253551], **kwargs_253552)
        
        
        # ################# End of '_write_default_style(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_write_default_style' in the type store
        # Getting the type of 'stypy_return_type' (line 306)
        stypy_return_type_253554 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 306, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_253554)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_write_default_style'
        return stypy_return_type_253554


    @norecursion
    def _make_id(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_make_id'
        module_type_store = module_type_store.open_function_context('_make_id', 317, 4, False)
        # Assigning a type to the variable 'self' (line 318)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 318, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererSVG._make_id.__dict__.__setitem__('stypy_localization', localization)
        RendererSVG._make_id.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererSVG._make_id.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererSVG._make_id.__dict__.__setitem__('stypy_function_name', 'RendererSVG._make_id')
        RendererSVG._make_id.__dict__.__setitem__('stypy_param_names_list', ['type', 'content'])
        RendererSVG._make_id.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererSVG._make_id.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererSVG._make_id.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererSVG._make_id.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererSVG._make_id.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererSVG._make_id.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererSVG._make_id', ['type', 'content'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_make_id', localization, ['type', 'content'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_make_id(...)' code ##################

        
        # Assigning a Call to a Name (line 318):
        
        # Assigning a Call to a Name (line 318):
        
        # Call to str(...): (line 318)
        # Processing the call arguments (line 318)
        # Getting the type of 'content' (line 318)
        content_253556 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 318, 22), 'content', False)
        # Processing the call keyword arguments (line 318)
        kwargs_253557 = {}
        # Getting the type of 'str' (line 318)
        str_253555 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 318, 18), 'str', False)
        # Calling str(args, kwargs) (line 318)
        str_call_result_253558 = invoke(stypy.reporting.localization.Localization(__file__, 318, 18), str_253555, *[content_253556], **kwargs_253557)
        
        # Assigning a type to the variable 'content' (line 318)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 318, 8), 'content', str_call_result_253558)
        
        # Type idiom detected: calculating its left and rigth part (line 319)
        
        # Obtaining the type of the subscript
        unicode_253559 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 319, 20), 'unicode', u'svg.hashsalt')
        # Getting the type of 'rcParams' (line 319)
        rcParams_253560 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 319, 11), 'rcParams')
        # Obtaining the member '__getitem__' of a type (line 319)
        getitem___253561 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 319, 11), rcParams_253560, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 319)
        subscript_call_result_253562 = invoke(stypy.reporting.localization.Localization(__file__, 319, 11), getitem___253561, unicode_253559)
        
        # Getting the type of 'None' (line 319)
        None_253563 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 319, 39), 'None')
        
        (may_be_253564, more_types_in_union_253565) = may_be_none(subscript_call_result_253562, None_253563)

        if may_be_253564:

            if more_types_in_union_253565:
                # Runtime conditional SSA (line 319)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Call to a Name (line 320):
            
            # Assigning a Call to a Name (line 320):
            
            # Call to str(...): (line 320)
            # Processing the call arguments (line 320)
            
            # Call to uuid4(...): (line 320)
            # Processing the call keyword arguments (line 320)
            kwargs_253569 = {}
            # Getting the type of 'uuid' (line 320)
            uuid_253567 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 320, 23), 'uuid', False)
            # Obtaining the member 'uuid4' of a type (line 320)
            uuid4_253568 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 320, 23), uuid_253567, 'uuid4')
            # Calling uuid4(args, kwargs) (line 320)
            uuid4_call_result_253570 = invoke(stypy.reporting.localization.Localization(__file__, 320, 23), uuid4_253568, *[], **kwargs_253569)
            
            # Processing the call keyword arguments (line 320)
            kwargs_253571 = {}
            # Getting the type of 'str' (line 320)
            str_253566 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 320, 19), 'str', False)
            # Calling str(args, kwargs) (line 320)
            str_call_result_253572 = invoke(stypy.reporting.localization.Localization(__file__, 320, 19), str_253566, *[uuid4_call_result_253570], **kwargs_253571)
            
            # Assigning a type to the variable 'salt' (line 320)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 320, 12), 'salt', str_call_result_253572)

            if more_types_in_union_253565:
                # Runtime conditional SSA for else branch (line 319)
                module_type_store.open_ssa_branch('idiom else')



        if ((not may_be_253564) or more_types_in_union_253565):
            
            # Assigning a Subscript to a Name (line 322):
            
            # Assigning a Subscript to a Name (line 322):
            
            # Obtaining the type of the subscript
            unicode_253573 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 322, 28), 'unicode', u'svg.hashsalt')
            # Getting the type of 'rcParams' (line 322)
            rcParams_253574 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 322, 19), 'rcParams')
            # Obtaining the member '__getitem__' of a type (line 322)
            getitem___253575 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 322, 19), rcParams_253574, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 322)
            subscript_call_result_253576 = invoke(stypy.reporting.localization.Localization(__file__, 322, 19), getitem___253575, unicode_253573)
            
            # Assigning a type to the variable 'salt' (line 322)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 322, 12), 'salt', subscript_call_result_253576)

            if (may_be_253564 and more_types_in_union_253565):
                # SSA join for if statement (line 319)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Getting the type of 'six' (line 323)
        six_253577 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 323, 11), 'six')
        # Obtaining the member 'PY3' of a type (line 323)
        PY3_253578 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 323, 11), six_253577, 'PY3')
        # Testing the type of an if condition (line 323)
        if_condition_253579 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 323, 8), PY3_253578)
        # Assigning a type to the variable 'if_condition_253579' (line 323)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 323, 8), 'if_condition_253579', if_condition_253579)
        # SSA begins for if statement (line 323)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 324):
        
        # Assigning a Call to a Name (line 324):
        
        # Call to encode(...): (line 324)
        # Processing the call arguments (line 324)
        unicode_253582 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 324, 37), 'unicode', u'utf8')
        # Processing the call keyword arguments (line 324)
        kwargs_253583 = {}
        # Getting the type of 'content' (line 324)
        content_253580 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 22), 'content', False)
        # Obtaining the member 'encode' of a type (line 324)
        encode_253581 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 324, 22), content_253580, 'encode')
        # Calling encode(args, kwargs) (line 324)
        encode_call_result_253584 = invoke(stypy.reporting.localization.Localization(__file__, 324, 22), encode_253581, *[unicode_253582], **kwargs_253583)
        
        # Assigning a type to the variable 'content' (line 324)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 324, 12), 'content', encode_call_result_253584)
        
        # Assigning a Call to a Name (line 325):
        
        # Assigning a Call to a Name (line 325):
        
        # Call to encode(...): (line 325)
        # Processing the call arguments (line 325)
        unicode_253587 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 325, 31), 'unicode', u'utf8')
        # Processing the call keyword arguments (line 325)
        kwargs_253588 = {}
        # Getting the type of 'salt' (line 325)
        salt_253585 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 325, 19), 'salt', False)
        # Obtaining the member 'encode' of a type (line 325)
        encode_253586 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 325, 19), salt_253585, 'encode')
        # Calling encode(args, kwargs) (line 325)
        encode_call_result_253589 = invoke(stypy.reporting.localization.Localization(__file__, 325, 19), encode_253586, *[unicode_253587], **kwargs_253588)
        
        # Assigning a type to the variable 'salt' (line 325)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 325, 12), 'salt', encode_call_result_253589)
        # SSA join for if statement (line 323)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 326):
        
        # Assigning a Call to a Name (line 326):
        
        # Call to md5(...): (line 326)
        # Processing the call keyword arguments (line 326)
        kwargs_253591 = {}
        # Getting the type of 'md5' (line 326)
        md5_253590 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 326, 12), 'md5', False)
        # Calling md5(args, kwargs) (line 326)
        md5_call_result_253592 = invoke(stypy.reporting.localization.Localization(__file__, 326, 12), md5_253590, *[], **kwargs_253591)
        
        # Assigning a type to the variable 'm' (line 326)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 326, 8), 'm', md5_call_result_253592)
        
        # Call to update(...): (line 327)
        # Processing the call arguments (line 327)
        # Getting the type of 'salt' (line 327)
        salt_253595 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 327, 17), 'salt', False)
        # Processing the call keyword arguments (line 327)
        kwargs_253596 = {}
        # Getting the type of 'm' (line 327)
        m_253593 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 327, 8), 'm', False)
        # Obtaining the member 'update' of a type (line 327)
        update_253594 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 327, 8), m_253593, 'update')
        # Calling update(args, kwargs) (line 327)
        update_call_result_253597 = invoke(stypy.reporting.localization.Localization(__file__, 327, 8), update_253594, *[salt_253595], **kwargs_253596)
        
        
        # Call to update(...): (line 328)
        # Processing the call arguments (line 328)
        # Getting the type of 'content' (line 328)
        content_253600 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 328, 17), 'content', False)
        # Processing the call keyword arguments (line 328)
        kwargs_253601 = {}
        # Getting the type of 'm' (line 328)
        m_253598 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 328, 8), 'm', False)
        # Obtaining the member 'update' of a type (line 328)
        update_253599 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 328, 8), m_253598, 'update')
        # Calling update(args, kwargs) (line 328)
        update_call_result_253602 = invoke(stypy.reporting.localization.Localization(__file__, 328, 8), update_253599, *[content_253600], **kwargs_253601)
        
        unicode_253603 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 329, 15), 'unicode', u'%s%s')
        
        # Obtaining an instance of the builtin type 'tuple' (line 329)
        tuple_253604 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 329, 25), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 329)
        # Adding element type (line 329)
        # Getting the type of 'type' (line 329)
        type_253605 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 329, 25), 'type')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 329, 25), tuple_253604, type_253605)
        # Adding element type (line 329)
        
        # Obtaining the type of the subscript
        int_253606 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 329, 46), 'int')
        slice_253607 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 329, 31), None, int_253606, None)
        
        # Call to hexdigest(...): (line 329)
        # Processing the call keyword arguments (line 329)
        kwargs_253610 = {}
        # Getting the type of 'm' (line 329)
        m_253608 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 329, 31), 'm', False)
        # Obtaining the member 'hexdigest' of a type (line 329)
        hexdigest_253609 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 329, 31), m_253608, 'hexdigest')
        # Calling hexdigest(args, kwargs) (line 329)
        hexdigest_call_result_253611 = invoke(stypy.reporting.localization.Localization(__file__, 329, 31), hexdigest_253609, *[], **kwargs_253610)
        
        # Obtaining the member '__getitem__' of a type (line 329)
        getitem___253612 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 329, 31), hexdigest_call_result_253611, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 329)
        subscript_call_result_253613 = invoke(stypy.reporting.localization.Localization(__file__, 329, 31), getitem___253612, slice_253607)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 329, 25), tuple_253604, subscript_call_result_253613)
        
        # Applying the binary operator '%' (line 329)
        result_mod_253614 = python_operator(stypy.reporting.localization.Localization(__file__, 329, 15), '%', unicode_253603, tuple_253604)
        
        # Assigning a type to the variable 'stypy_return_type' (line 329)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 329, 8), 'stypy_return_type', result_mod_253614)
        
        # ################# End of '_make_id(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_make_id' in the type store
        # Getting the type of 'stypy_return_type' (line 317)
        stypy_return_type_253615 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 317, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_253615)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_make_id'
        return stypy_return_type_253615


    @norecursion
    def _make_flip_transform(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_make_flip_transform'
        module_type_store = module_type_store.open_function_context('_make_flip_transform', 331, 4, False)
        # Assigning a type to the variable 'self' (line 332)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 332, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererSVG._make_flip_transform.__dict__.__setitem__('stypy_localization', localization)
        RendererSVG._make_flip_transform.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererSVG._make_flip_transform.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererSVG._make_flip_transform.__dict__.__setitem__('stypy_function_name', 'RendererSVG._make_flip_transform')
        RendererSVG._make_flip_transform.__dict__.__setitem__('stypy_param_names_list', ['transform'])
        RendererSVG._make_flip_transform.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererSVG._make_flip_transform.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererSVG._make_flip_transform.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererSVG._make_flip_transform.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererSVG._make_flip_transform.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererSVG._make_flip_transform.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererSVG._make_flip_transform', ['transform'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_make_flip_transform', localization, ['transform'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_make_flip_transform(...)' code ##################

        # Getting the type of 'transform' (line 332)
        transform_253616 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 332, 16), 'transform')
        
        # Call to translate(...): (line 333)
        # Processing the call arguments (line 333)
        float_253626 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 335, 27), 'float')
        # Getting the type of 'self' (line 335)
        self_253627 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 335, 32), 'self', False)
        # Obtaining the member 'height' of a type (line 335)
        height_253628 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 335, 32), self_253627, 'height')
        # Processing the call keyword arguments (line 333)
        kwargs_253629 = {}
        
        # Call to scale(...): (line 333)
        # Processing the call arguments (line 333)
        float_253621 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 334, 23), 'float')
        float_253622 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 334, 28), 'float')
        # Processing the call keyword arguments (line 333)
        kwargs_253623 = {}
        
        # Call to Affine2D(...): (line 333)
        # Processing the call keyword arguments (line 333)
        kwargs_253618 = {}
        # Getting the type of 'Affine2D' (line 333)
        Affine2D_253617 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 333, 16), 'Affine2D', False)
        # Calling Affine2D(args, kwargs) (line 333)
        Affine2D_call_result_253619 = invoke(stypy.reporting.localization.Localization(__file__, 333, 16), Affine2D_253617, *[], **kwargs_253618)
        
        # Obtaining the member 'scale' of a type (line 333)
        scale_253620 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 333, 16), Affine2D_call_result_253619, 'scale')
        # Calling scale(args, kwargs) (line 333)
        scale_call_result_253624 = invoke(stypy.reporting.localization.Localization(__file__, 333, 16), scale_253620, *[float_253621, float_253622], **kwargs_253623)
        
        # Obtaining the member 'translate' of a type (line 333)
        translate_253625 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 333, 16), scale_call_result_253624, 'translate')
        # Calling translate(args, kwargs) (line 333)
        translate_call_result_253630 = invoke(stypy.reporting.localization.Localization(__file__, 333, 16), translate_253625, *[float_253626, height_253628], **kwargs_253629)
        
        # Applying the binary operator '+' (line 332)
        result_add_253631 = python_operator(stypy.reporting.localization.Localization(__file__, 332, 16), '+', transform_253616, translate_call_result_253630)
        
        # Assigning a type to the variable 'stypy_return_type' (line 332)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 332, 8), 'stypy_return_type', result_add_253631)
        
        # ################# End of '_make_flip_transform(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_make_flip_transform' in the type store
        # Getting the type of 'stypy_return_type' (line 331)
        stypy_return_type_253632 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 331, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_253632)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_make_flip_transform'
        return stypy_return_type_253632


    @norecursion
    def _get_font(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_get_font'
        module_type_store = module_type_store.open_function_context('_get_font', 337, 4, False)
        # Assigning a type to the variable 'self' (line 338)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 338, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererSVG._get_font.__dict__.__setitem__('stypy_localization', localization)
        RendererSVG._get_font.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererSVG._get_font.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererSVG._get_font.__dict__.__setitem__('stypy_function_name', 'RendererSVG._get_font')
        RendererSVG._get_font.__dict__.__setitem__('stypy_param_names_list', ['prop'])
        RendererSVG._get_font.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererSVG._get_font.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererSVG._get_font.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererSVG._get_font.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererSVG._get_font.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererSVG._get_font.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererSVG._get_font', ['prop'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_get_font', localization, ['prop'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_get_font(...)' code ##################

        
        # Assigning a Call to a Name (line 338):
        
        # Assigning a Call to a Name (line 338):
        
        # Call to findfont(...): (line 338)
        # Processing the call arguments (line 338)
        # Getting the type of 'prop' (line 338)
        prop_253634 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 338, 25), 'prop', False)
        # Processing the call keyword arguments (line 338)
        kwargs_253635 = {}
        # Getting the type of 'findfont' (line 338)
        findfont_253633 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 338, 16), 'findfont', False)
        # Calling findfont(args, kwargs) (line 338)
        findfont_call_result_253636 = invoke(stypy.reporting.localization.Localization(__file__, 338, 16), findfont_253633, *[prop_253634], **kwargs_253635)
        
        # Assigning a type to the variable 'fname' (line 338)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 338, 8), 'fname', findfont_call_result_253636)
        
        # Assigning a Call to a Name (line 339):
        
        # Assigning a Call to a Name (line 339):
        
        # Call to get_font(...): (line 339)
        # Processing the call arguments (line 339)
        # Getting the type of 'fname' (line 339)
        fname_253638 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 339, 24), 'fname', False)
        # Processing the call keyword arguments (line 339)
        kwargs_253639 = {}
        # Getting the type of 'get_font' (line 339)
        get_font_253637 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 339, 15), 'get_font', False)
        # Calling get_font(args, kwargs) (line 339)
        get_font_call_result_253640 = invoke(stypy.reporting.localization.Localization(__file__, 339, 15), get_font_253637, *[fname_253638], **kwargs_253639)
        
        # Assigning a type to the variable 'font' (line 339)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 339, 8), 'font', get_font_call_result_253640)
        
        # Call to clear(...): (line 340)
        # Processing the call keyword arguments (line 340)
        kwargs_253643 = {}
        # Getting the type of 'font' (line 340)
        font_253641 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 340, 8), 'font', False)
        # Obtaining the member 'clear' of a type (line 340)
        clear_253642 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 340, 8), font_253641, 'clear')
        # Calling clear(args, kwargs) (line 340)
        clear_call_result_253644 = invoke(stypy.reporting.localization.Localization(__file__, 340, 8), clear_253642, *[], **kwargs_253643)
        
        
        # Assigning a Call to a Name (line 341):
        
        # Assigning a Call to a Name (line 341):
        
        # Call to get_size_in_points(...): (line 341)
        # Processing the call keyword arguments (line 341)
        kwargs_253647 = {}
        # Getting the type of 'prop' (line 341)
        prop_253645 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 341, 15), 'prop', False)
        # Obtaining the member 'get_size_in_points' of a type (line 341)
        get_size_in_points_253646 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 341, 15), prop_253645, 'get_size_in_points')
        # Calling get_size_in_points(args, kwargs) (line 341)
        get_size_in_points_call_result_253648 = invoke(stypy.reporting.localization.Localization(__file__, 341, 15), get_size_in_points_253646, *[], **kwargs_253647)
        
        # Assigning a type to the variable 'size' (line 341)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 341, 8), 'size', get_size_in_points_call_result_253648)
        
        # Call to set_size(...): (line 342)
        # Processing the call arguments (line 342)
        # Getting the type of 'size' (line 342)
        size_253651 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 342, 22), 'size', False)
        float_253652 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 342, 28), 'float')
        # Processing the call keyword arguments (line 342)
        kwargs_253653 = {}
        # Getting the type of 'font' (line 342)
        font_253649 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 342, 8), 'font', False)
        # Obtaining the member 'set_size' of a type (line 342)
        set_size_253650 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 342, 8), font_253649, 'set_size')
        # Calling set_size(args, kwargs) (line 342)
        set_size_call_result_253654 = invoke(stypy.reporting.localization.Localization(__file__, 342, 8), set_size_253650, *[size_253651, float_253652], **kwargs_253653)
        
        # Getting the type of 'font' (line 343)
        font_253655 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 343, 15), 'font')
        # Assigning a type to the variable 'stypy_return_type' (line 343)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 343, 8), 'stypy_return_type', font_253655)
        
        # ################# End of '_get_font(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_get_font' in the type store
        # Getting the type of 'stypy_return_type' (line 337)
        stypy_return_type_253656 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 337, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_253656)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_get_font'
        return stypy_return_type_253656


    @norecursion
    def _get_hatch(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_get_hatch'
        module_type_store = module_type_store.open_function_context('_get_hatch', 345, 4, False)
        # Assigning a type to the variable 'self' (line 346)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 346, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererSVG._get_hatch.__dict__.__setitem__('stypy_localization', localization)
        RendererSVG._get_hatch.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererSVG._get_hatch.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererSVG._get_hatch.__dict__.__setitem__('stypy_function_name', 'RendererSVG._get_hatch')
        RendererSVG._get_hatch.__dict__.__setitem__('stypy_param_names_list', ['gc', 'rgbFace'])
        RendererSVG._get_hatch.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererSVG._get_hatch.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererSVG._get_hatch.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererSVG._get_hatch.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererSVG._get_hatch.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererSVG._get_hatch.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererSVG._get_hatch', ['gc', 'rgbFace'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_get_hatch', localization, ['gc', 'rgbFace'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_get_hatch(...)' code ##################

        unicode_253657 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 348, (-1)), 'unicode', u'\n        Create a new hatch pattern\n        ')
        
        # Type idiom detected: calculating its left and rigth part (line 349)
        # Getting the type of 'rgbFace' (line 349)
        rgbFace_253658 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 349, 8), 'rgbFace')
        # Getting the type of 'None' (line 349)
        None_253659 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 349, 26), 'None')
        
        (may_be_253660, more_types_in_union_253661) = may_not_be_none(rgbFace_253658, None_253659)

        if may_be_253660:

            if more_types_in_union_253661:
                # Runtime conditional SSA (line 349)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Call to a Name (line 350):
            
            # Assigning a Call to a Name (line 350):
            
            # Call to tuple(...): (line 350)
            # Processing the call arguments (line 350)
            # Getting the type of 'rgbFace' (line 350)
            rgbFace_253663 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 350, 28), 'rgbFace', False)
            # Processing the call keyword arguments (line 350)
            kwargs_253664 = {}
            # Getting the type of 'tuple' (line 350)
            tuple_253662 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 350, 22), 'tuple', False)
            # Calling tuple(args, kwargs) (line 350)
            tuple_call_result_253665 = invoke(stypy.reporting.localization.Localization(__file__, 350, 22), tuple_253662, *[rgbFace_253663], **kwargs_253664)
            
            # Assigning a type to the variable 'rgbFace' (line 350)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 350, 12), 'rgbFace', tuple_call_result_253665)

            if more_types_in_union_253661:
                # SSA join for if statement (line 349)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Call to a Name (line 351):
        
        # Assigning a Call to a Name (line 351):
        
        # Call to get_hatch_color(...): (line 351)
        # Processing the call keyword arguments (line 351)
        kwargs_253668 = {}
        # Getting the type of 'gc' (line 351)
        gc_253666 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 351, 15), 'gc', False)
        # Obtaining the member 'get_hatch_color' of a type (line 351)
        get_hatch_color_253667 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 351, 15), gc_253666, 'get_hatch_color')
        # Calling get_hatch_color(args, kwargs) (line 351)
        get_hatch_color_call_result_253669 = invoke(stypy.reporting.localization.Localization(__file__, 351, 15), get_hatch_color_253667, *[], **kwargs_253668)
        
        # Assigning a type to the variable 'edge' (line 351)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 351, 8), 'edge', get_hatch_color_call_result_253669)
        
        # Type idiom detected: calculating its left and rigth part (line 352)
        # Getting the type of 'edge' (line 352)
        edge_253670 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 352, 8), 'edge')
        # Getting the type of 'None' (line 352)
        None_253671 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 352, 23), 'None')
        
        (may_be_253672, more_types_in_union_253673) = may_not_be_none(edge_253670, None_253671)

        if may_be_253672:

            if more_types_in_union_253673:
                # Runtime conditional SSA (line 352)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Call to a Name (line 353):
            
            # Assigning a Call to a Name (line 353):
            
            # Call to tuple(...): (line 353)
            # Processing the call arguments (line 353)
            # Getting the type of 'edge' (line 353)
            edge_253675 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 353, 25), 'edge', False)
            # Processing the call keyword arguments (line 353)
            kwargs_253676 = {}
            # Getting the type of 'tuple' (line 353)
            tuple_253674 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 353, 19), 'tuple', False)
            # Calling tuple(args, kwargs) (line 353)
            tuple_call_result_253677 = invoke(stypy.reporting.localization.Localization(__file__, 353, 19), tuple_253674, *[edge_253675], **kwargs_253676)
            
            # Assigning a type to the variable 'edge' (line 353)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 353, 12), 'edge', tuple_call_result_253677)

            if more_types_in_union_253673:
                # SSA join for if statement (line 352)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Tuple to a Name (line 354):
        
        # Assigning a Tuple to a Name (line 354):
        
        # Obtaining an instance of the builtin type 'tuple' (line 354)
        tuple_253678 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 354, 19), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 354)
        # Adding element type (line 354)
        
        # Call to get_hatch(...): (line 354)
        # Processing the call keyword arguments (line 354)
        kwargs_253681 = {}
        # Getting the type of 'gc' (line 354)
        gc_253679 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 19), 'gc', False)
        # Obtaining the member 'get_hatch' of a type (line 354)
        get_hatch_253680 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 19), gc_253679, 'get_hatch')
        # Calling get_hatch(args, kwargs) (line 354)
        get_hatch_call_result_253682 = invoke(stypy.reporting.localization.Localization(__file__, 354, 19), get_hatch_253680, *[], **kwargs_253681)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 354, 19), tuple_253678, get_hatch_call_result_253682)
        # Adding element type (line 354)
        # Getting the type of 'rgbFace' (line 354)
        rgbFace_253683 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 35), 'rgbFace')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 354, 19), tuple_253678, rgbFace_253683)
        # Adding element type (line 354)
        # Getting the type of 'edge' (line 354)
        edge_253684 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 44), 'edge')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 354, 19), tuple_253678, edge_253684)
        
        # Assigning a type to the variable 'dictkey' (line 354)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 354, 8), 'dictkey', tuple_253678)
        
        # Assigning a Call to a Name (line 355):
        
        # Assigning a Call to a Name (line 355):
        
        # Call to get(...): (line 355)
        # Processing the call arguments (line 355)
        # Getting the type of 'dictkey' (line 355)
        dictkey_253688 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 355, 31), 'dictkey', False)
        # Processing the call keyword arguments (line 355)
        kwargs_253689 = {}
        # Getting the type of 'self' (line 355)
        self_253685 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 355, 14), 'self', False)
        # Obtaining the member '_hatchd' of a type (line 355)
        _hatchd_253686 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 355, 14), self_253685, '_hatchd')
        # Obtaining the member 'get' of a type (line 355)
        get_253687 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 355, 14), _hatchd_253686, 'get')
        # Calling get(args, kwargs) (line 355)
        get_call_result_253690 = invoke(stypy.reporting.localization.Localization(__file__, 355, 14), get_253687, *[dictkey_253688], **kwargs_253689)
        
        # Assigning a type to the variable 'oid' (line 355)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 355, 8), 'oid', get_call_result_253690)
        
        # Type idiom detected: calculating its left and rigth part (line 356)
        # Getting the type of 'oid' (line 356)
        oid_253691 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 356, 11), 'oid')
        # Getting the type of 'None' (line 356)
        None_253692 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 356, 18), 'None')
        
        (may_be_253693, more_types_in_union_253694) = may_be_none(oid_253691, None_253692)

        if may_be_253693:

            if more_types_in_union_253694:
                # Runtime conditional SSA (line 356)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Call to a Name (line 357):
            
            # Assigning a Call to a Name (line 357):
            
            # Call to _make_id(...): (line 357)
            # Processing the call arguments (line 357)
            unicode_253697 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 357, 32), 'unicode', u'h')
            # Getting the type of 'dictkey' (line 357)
            dictkey_253698 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 37), 'dictkey', False)
            # Processing the call keyword arguments (line 357)
            kwargs_253699 = {}
            # Getting the type of 'self' (line 357)
            self_253695 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 18), 'self', False)
            # Obtaining the member '_make_id' of a type (line 357)
            _make_id_253696 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 18), self_253695, '_make_id')
            # Calling _make_id(args, kwargs) (line 357)
            _make_id_call_result_253700 = invoke(stypy.reporting.localization.Localization(__file__, 357, 18), _make_id_253696, *[unicode_253697, dictkey_253698], **kwargs_253699)
            
            # Assigning a type to the variable 'oid' (line 357)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 357, 12), 'oid', _make_id_call_result_253700)
            
            # Assigning a Tuple to a Subscript (line 358):
            
            # Assigning a Tuple to a Subscript (line 358):
            
            # Obtaining an instance of the builtin type 'tuple' (line 358)
            tuple_253701 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 358, 37), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 358)
            # Adding element type (line 358)
            
            # Obtaining an instance of the builtin type 'tuple' (line 358)
            tuple_253702 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 358, 38), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 358)
            # Adding element type (line 358)
            
            # Call to get_hatch_path(...): (line 358)
            # Processing the call keyword arguments (line 358)
            kwargs_253705 = {}
            # Getting the type of 'gc' (line 358)
            gc_253703 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 358, 38), 'gc', False)
            # Obtaining the member 'get_hatch_path' of a type (line 358)
            get_hatch_path_253704 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 358, 38), gc_253703, 'get_hatch_path')
            # Calling get_hatch_path(args, kwargs) (line 358)
            get_hatch_path_call_result_253706 = invoke(stypy.reporting.localization.Localization(__file__, 358, 38), get_hatch_path_253704, *[], **kwargs_253705)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 358, 38), tuple_253702, get_hatch_path_call_result_253706)
            # Adding element type (line 358)
            # Getting the type of 'rgbFace' (line 358)
            rgbFace_253707 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 358, 59), 'rgbFace')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 358, 38), tuple_253702, rgbFace_253707)
            # Adding element type (line 358)
            # Getting the type of 'edge' (line 358)
            edge_253708 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 358, 68), 'edge')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 358, 38), tuple_253702, edge_253708)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 358, 37), tuple_253701, tuple_253702)
            # Adding element type (line 358)
            # Getting the type of 'oid' (line 358)
            oid_253709 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 358, 75), 'oid')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 358, 37), tuple_253701, oid_253709)
            
            # Getting the type of 'self' (line 358)
            self_253710 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 358, 12), 'self')
            # Obtaining the member '_hatchd' of a type (line 358)
            _hatchd_253711 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 358, 12), self_253710, '_hatchd')
            # Getting the type of 'dictkey' (line 358)
            dictkey_253712 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 358, 25), 'dictkey')
            # Storing an element on a container (line 358)
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 358, 12), _hatchd_253711, (dictkey_253712, tuple_253701))

            if more_types_in_union_253694:
                # Runtime conditional SSA for else branch (line 356)
                module_type_store.open_ssa_branch('idiom else')



        if ((not may_be_253693) or more_types_in_union_253694):
            
            # Assigning a Name to a Tuple (line 360):
            
            # Assigning a Subscript to a Name (line 360):
            
            # Obtaining the type of the subscript
            int_253713 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 360, 12), 'int')
            # Getting the type of 'oid' (line 360)
            oid_253714 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 360, 21), 'oid')
            # Obtaining the member '__getitem__' of a type (line 360)
            getitem___253715 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 360, 12), oid_253714, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 360)
            subscript_call_result_253716 = invoke(stypy.reporting.localization.Localization(__file__, 360, 12), getitem___253715, int_253713)
            
            # Assigning a type to the variable 'tuple_var_assignment_252789' (line 360)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 360, 12), 'tuple_var_assignment_252789', subscript_call_result_253716)
            
            # Assigning a Subscript to a Name (line 360):
            
            # Obtaining the type of the subscript
            int_253717 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 360, 12), 'int')
            # Getting the type of 'oid' (line 360)
            oid_253718 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 360, 21), 'oid')
            # Obtaining the member '__getitem__' of a type (line 360)
            getitem___253719 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 360, 12), oid_253718, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 360)
            subscript_call_result_253720 = invoke(stypy.reporting.localization.Localization(__file__, 360, 12), getitem___253719, int_253717)
            
            # Assigning a type to the variable 'tuple_var_assignment_252790' (line 360)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 360, 12), 'tuple_var_assignment_252790', subscript_call_result_253720)
            
            # Assigning a Name to a Name (line 360):
            # Getting the type of 'tuple_var_assignment_252789' (line 360)
            tuple_var_assignment_252789_253721 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 360, 12), 'tuple_var_assignment_252789')
            # Assigning a type to the variable '_' (line 360)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 360, 12), '_', tuple_var_assignment_252789_253721)
            
            # Assigning a Name to a Name (line 360):
            # Getting the type of 'tuple_var_assignment_252790' (line 360)
            tuple_var_assignment_252790_253722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 360, 12), 'tuple_var_assignment_252790')
            # Assigning a type to the variable 'oid' (line 360)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 360, 15), 'oid', tuple_var_assignment_252790_253722)

            if (may_be_253693 and more_types_in_union_253694):
                # SSA join for if statement (line 356)
                module_type_store = module_type_store.join_ssa_context()


        
        # Getting the type of 'oid' (line 361)
        oid_253723 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 361, 15), 'oid')
        # Assigning a type to the variable 'stypy_return_type' (line 361)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 361, 8), 'stypy_return_type', oid_253723)
        
        # ################# End of '_get_hatch(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_get_hatch' in the type store
        # Getting the type of 'stypy_return_type' (line 345)
        stypy_return_type_253724 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 345, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_253724)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_get_hatch'
        return stypy_return_type_253724


    @norecursion
    def _write_hatches(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_write_hatches'
        module_type_store = module_type_store.open_function_context('_write_hatches', 363, 4, False)
        # Assigning a type to the variable 'self' (line 364)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 364, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererSVG._write_hatches.__dict__.__setitem__('stypy_localization', localization)
        RendererSVG._write_hatches.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererSVG._write_hatches.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererSVG._write_hatches.__dict__.__setitem__('stypy_function_name', 'RendererSVG._write_hatches')
        RendererSVG._write_hatches.__dict__.__setitem__('stypy_param_names_list', [])
        RendererSVG._write_hatches.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererSVG._write_hatches.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererSVG._write_hatches.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererSVG._write_hatches.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererSVG._write_hatches.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererSVG._write_hatches.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererSVG._write_hatches', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_write_hatches', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_write_hatches(...)' code ##################

        
        
        
        # Call to len(...): (line 364)
        # Processing the call arguments (line 364)
        # Getting the type of 'self' (line 364)
        self_253726 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 364, 19), 'self', False)
        # Obtaining the member '_hatchd' of a type (line 364)
        _hatchd_253727 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 364, 19), self_253726, '_hatchd')
        # Processing the call keyword arguments (line 364)
        kwargs_253728 = {}
        # Getting the type of 'len' (line 364)
        len_253725 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 364, 15), 'len', False)
        # Calling len(args, kwargs) (line 364)
        len_call_result_253729 = invoke(stypy.reporting.localization.Localization(__file__, 364, 15), len_253725, *[_hatchd_253727], **kwargs_253728)
        
        # Applying the 'not' unary operator (line 364)
        result_not__253730 = python_operator(stypy.reporting.localization.Localization(__file__, 364, 11), 'not', len_call_result_253729)
        
        # Testing the type of an if condition (line 364)
        if_condition_253731 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 364, 8), result_not__253730)
        # Assigning a type to the variable 'if_condition_253731' (line 364)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 364, 8), 'if_condition_253731', if_condition_253731)
        # SSA begins for if statement (line 364)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        # Assigning a type to the variable 'stypy_return_type' (line 365)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 365, 12), 'stypy_return_type', types.NoneType)
        # SSA join for if statement (line 364)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Num to a Name (line 366):
        
        # Assigning a Num to a Name (line 366):
        int_253732 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 366, 21), 'int')
        # Assigning a type to the variable 'HATCH_SIZE' (line 366)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 366, 8), 'HATCH_SIZE', int_253732)
        
        # Assigning a Attribute to a Name (line 367):
        
        # Assigning a Attribute to a Name (line 367):
        # Getting the type of 'self' (line 367)
        self_253733 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 367, 17), 'self')
        # Obtaining the member 'writer' of a type (line 367)
        writer_253734 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 367, 17), self_253733, 'writer')
        # Assigning a type to the variable 'writer' (line 367)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 367, 8), 'writer', writer_253734)
        
        # Call to start(...): (line 368)
        # Processing the call arguments (line 368)
        unicode_253737 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 368, 21), 'unicode', u'defs')
        # Processing the call keyword arguments (line 368)
        kwargs_253738 = {}
        # Getting the type of 'writer' (line 368)
        writer_253735 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 368, 8), 'writer', False)
        # Obtaining the member 'start' of a type (line 368)
        start_253736 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 368, 8), writer_253735, 'start')
        # Calling start(args, kwargs) (line 368)
        start_call_result_253739 = invoke(stypy.reporting.localization.Localization(__file__, 368, 8), start_253736, *[unicode_253737], **kwargs_253738)
        
        
        
        # Call to itervalues(...): (line 369)
        # Processing the call arguments (line 369)
        # Getting the type of 'self' (line 369)
        self_253742 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 369, 58), 'self', False)
        # Obtaining the member '_hatchd' of a type (line 369)
        _hatchd_253743 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 369, 58), self_253742, '_hatchd')
        # Processing the call keyword arguments (line 369)
        kwargs_253744 = {}
        # Getting the type of 'six' (line 369)
        six_253740 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 369, 43), 'six', False)
        # Obtaining the member 'itervalues' of a type (line 369)
        itervalues_253741 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 369, 43), six_253740, 'itervalues')
        # Calling itervalues(args, kwargs) (line 369)
        itervalues_call_result_253745 = invoke(stypy.reporting.localization.Localization(__file__, 369, 43), itervalues_253741, *[_hatchd_253743], **kwargs_253744)
        
        # Testing the type of a for loop iterable (line 369)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 369, 8), itervalues_call_result_253745)
        # Getting the type of the for loop variable (line 369)
        for_loop_var_253746 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 369, 8), itervalues_call_result_253745)
        # Assigning a type to the variable 'path' (line 369)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 369, 8), 'path', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 369, 8), for_loop_var_253746))
        # Assigning a type to the variable 'face' (line 369)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 369, 8), 'face', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 369, 8), for_loop_var_253746))
        # Assigning a type to the variable 'stroke' (line 369)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 369, 8), 'stroke', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 369, 8), for_loop_var_253746))
        # Assigning a type to the variable 'oid' (line 369)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 369, 8), 'oid', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 369, 8), for_loop_var_253746))
        # SSA begins for a for statement (line 369)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to start(...): (line 370)
        # Processing the call arguments (line 370)
        unicode_253749 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 371, 16), 'unicode', u'pattern')
        # Processing the call keyword arguments (line 370)
        # Getting the type of 'oid' (line 372)
        oid_253750 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 372, 19), 'oid', False)
        keyword_253751 = oid_253750
        unicode_253752 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 373, 29), 'unicode', u'userSpaceOnUse')
        keyword_253753 = unicode_253752
        unicode_253754 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 374, 18), 'unicode', u'0')
        keyword_253755 = unicode_253754
        unicode_253756 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 374, 25), 'unicode', u'0')
        keyword_253757 = unicode_253756
        
        # Call to text_type(...): (line 374)
        # Processing the call arguments (line 374)
        # Getting the type of 'HATCH_SIZE' (line 374)
        HATCH_SIZE_253760 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 374, 50), 'HATCH_SIZE', False)
        # Processing the call keyword arguments (line 374)
        kwargs_253761 = {}
        # Getting the type of 'six' (line 374)
        six_253758 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 374, 36), 'six', False)
        # Obtaining the member 'text_type' of a type (line 374)
        text_type_253759 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 374, 36), six_253758, 'text_type')
        # Calling text_type(args, kwargs) (line 374)
        text_type_call_result_253762 = invoke(stypy.reporting.localization.Localization(__file__, 374, 36), text_type_253759, *[HATCH_SIZE_253760], **kwargs_253761)
        
        keyword_253763 = text_type_call_result_253762
        
        # Call to text_type(...): (line 375)
        # Processing the call arguments (line 375)
        # Getting the type of 'HATCH_SIZE' (line 375)
        HATCH_SIZE_253766 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 375, 37), 'HATCH_SIZE', False)
        # Processing the call keyword arguments (line 375)
        kwargs_253767 = {}
        # Getting the type of 'six' (line 375)
        six_253764 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 375, 23), 'six', False)
        # Obtaining the member 'text_type' of a type (line 375)
        text_type_253765 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 375, 23), six_253764, 'text_type')
        # Calling text_type(args, kwargs) (line 375)
        text_type_call_result_253768 = invoke(stypy.reporting.localization.Localization(__file__, 375, 23), text_type_253765, *[HATCH_SIZE_253766], **kwargs_253767)
        
        keyword_253769 = text_type_call_result_253768
        kwargs_253770 = {'height': keyword_253769, 'width': keyword_253763, 'patternUnits': keyword_253753, 'y': keyword_253757, 'x': keyword_253755, 'id': keyword_253751}
        # Getting the type of 'writer' (line 370)
        writer_253747 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 370, 12), 'writer', False)
        # Obtaining the member 'start' of a type (line 370)
        start_253748 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 370, 12), writer_253747, 'start')
        # Calling start(args, kwargs) (line 370)
        start_call_result_253771 = invoke(stypy.reporting.localization.Localization(__file__, 370, 12), start_253748, *[unicode_253749], **kwargs_253770)
        
        
        # Assigning a Call to a Name (line 376):
        
        # Assigning a Call to a Name (line 376):
        
        # Call to _convert_path(...): (line 376)
        # Processing the call arguments (line 376)
        # Getting the type of 'path' (line 377)
        path_253774 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 377, 16), 'path', False)
        
        # Call to translate(...): (line 378)
        # Processing the call arguments (line 378)
        int_253788 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 378, 72), 'int')
        # Getting the type of 'HATCH_SIZE' (line 378)
        HATCH_SIZE_253789 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 378, 75), 'HATCH_SIZE', False)
        # Processing the call keyword arguments (line 378)
        kwargs_253790 = {}
        
        # Call to scale(...): (line 378)
        # Processing the call arguments (line 378)
        float_253783 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 378, 51), 'float')
        float_253784 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 378, 56), 'float')
        # Processing the call keyword arguments (line 378)
        kwargs_253785 = {}
        
        # Call to scale(...): (line 378)
        # Processing the call arguments (line 378)
        # Getting the type of 'HATCH_SIZE' (line 378)
        HATCH_SIZE_253779 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 378, 33), 'HATCH_SIZE', False)
        # Processing the call keyword arguments (line 378)
        kwargs_253780 = {}
        
        # Call to Affine2D(...): (line 378)
        # Processing the call keyword arguments (line 378)
        kwargs_253776 = {}
        # Getting the type of 'Affine2D' (line 378)
        Affine2D_253775 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 378, 16), 'Affine2D', False)
        # Calling Affine2D(args, kwargs) (line 378)
        Affine2D_call_result_253777 = invoke(stypy.reporting.localization.Localization(__file__, 378, 16), Affine2D_253775, *[], **kwargs_253776)
        
        # Obtaining the member 'scale' of a type (line 378)
        scale_253778 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 378, 16), Affine2D_call_result_253777, 'scale')
        # Calling scale(args, kwargs) (line 378)
        scale_call_result_253781 = invoke(stypy.reporting.localization.Localization(__file__, 378, 16), scale_253778, *[HATCH_SIZE_253779], **kwargs_253780)
        
        # Obtaining the member 'scale' of a type (line 378)
        scale_253782 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 378, 16), scale_call_result_253781, 'scale')
        # Calling scale(args, kwargs) (line 378)
        scale_call_result_253786 = invoke(stypy.reporting.localization.Localization(__file__, 378, 16), scale_253782, *[float_253783, float_253784], **kwargs_253785)
        
        # Obtaining the member 'translate' of a type (line 378)
        translate_253787 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 378, 16), scale_call_result_253786, 'translate')
        # Calling translate(args, kwargs) (line 378)
        translate_call_result_253791 = invoke(stypy.reporting.localization.Localization(__file__, 378, 16), translate_253787, *[int_253788, HATCH_SIZE_253789], **kwargs_253790)
        
        # Processing the call keyword arguments (line 376)
        # Getting the type of 'False' (line 379)
        False_253792 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 25), 'False', False)
        keyword_253793 = False_253792
        kwargs_253794 = {'simplify': keyword_253793}
        # Getting the type of 'self' (line 376)
        self_253772 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 376, 24), 'self', False)
        # Obtaining the member '_convert_path' of a type (line 376)
        _convert_path_253773 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 376, 24), self_253772, '_convert_path')
        # Calling _convert_path(args, kwargs) (line 376)
        _convert_path_call_result_253795 = invoke(stypy.reporting.localization.Localization(__file__, 376, 24), _convert_path_253773, *[path_253774, translate_call_result_253791], **kwargs_253794)
        
        # Assigning a type to the variable 'path_data' (line 376)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 376, 12), 'path_data', _convert_path_call_result_253795)
        
        # Type idiom detected: calculating its left and rigth part (line 380)
        # Getting the type of 'face' (line 380)
        face_253796 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 380, 15), 'face')
        # Getting the type of 'None' (line 380)
        None_253797 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 380, 23), 'None')
        
        (may_be_253798, more_types_in_union_253799) = may_be_none(face_253796, None_253797)

        if may_be_253798:

            if more_types_in_union_253799:
                # Runtime conditional SSA (line 380)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Str to a Name (line 381):
            
            # Assigning a Str to a Name (line 381):
            unicode_253800 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 381, 23), 'unicode', u'none')
            # Assigning a type to the variable 'fill' (line 381)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 381, 16), 'fill', unicode_253800)

            if more_types_in_union_253799:
                # Runtime conditional SSA for else branch (line 380)
                module_type_store.open_ssa_branch('idiom else')



        if ((not may_be_253798) or more_types_in_union_253799):
            
            # Assigning a Call to a Name (line 383):
            
            # Assigning a Call to a Name (line 383):
            
            # Call to rgb2hex(...): (line 383)
            # Processing the call arguments (line 383)
            # Getting the type of 'face' (line 383)
            face_253802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 383, 31), 'face', False)
            # Processing the call keyword arguments (line 383)
            kwargs_253803 = {}
            # Getting the type of 'rgb2hex' (line 383)
            rgb2hex_253801 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 383, 23), 'rgb2hex', False)
            # Calling rgb2hex(args, kwargs) (line 383)
            rgb2hex_call_result_253804 = invoke(stypy.reporting.localization.Localization(__file__, 383, 23), rgb2hex_253801, *[face_253802], **kwargs_253803)
            
            # Assigning a type to the variable 'fill' (line 383)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 383, 16), 'fill', rgb2hex_call_result_253804)

            if (may_be_253798 and more_types_in_union_253799):
                # SSA join for if statement (line 380)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Call to element(...): (line 384)
        # Processing the call arguments (line 384)
        unicode_253807 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 385, 16), 'unicode', u'rect')
        # Processing the call keyword arguments (line 384)
        unicode_253808 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 386, 18), 'unicode', u'0')
        keyword_253809 = unicode_253808
        unicode_253810 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 386, 25), 'unicode', u'0')
        keyword_253811 = unicode_253810
        
        # Call to text_type(...): (line 386)
        # Processing the call arguments (line 386)
        # Getting the type of 'HATCH_SIZE' (line 386)
        HATCH_SIZE_253814 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 386, 50), 'HATCH_SIZE', False)
        int_253815 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 386, 61), 'int')
        # Applying the binary operator '+' (line 386)
        result_add_253816 = python_operator(stypy.reporting.localization.Localization(__file__, 386, 50), '+', HATCH_SIZE_253814, int_253815)
        
        # Processing the call keyword arguments (line 386)
        kwargs_253817 = {}
        # Getting the type of 'six' (line 386)
        six_253812 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 386, 36), 'six', False)
        # Obtaining the member 'text_type' of a type (line 386)
        text_type_253813 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 386, 36), six_253812, 'text_type')
        # Calling text_type(args, kwargs) (line 386)
        text_type_call_result_253818 = invoke(stypy.reporting.localization.Localization(__file__, 386, 36), text_type_253813, *[result_add_253816], **kwargs_253817)
        
        keyword_253819 = text_type_call_result_253818
        
        # Call to text_type(...): (line 387)
        # Processing the call arguments (line 387)
        # Getting the type of 'HATCH_SIZE' (line 387)
        HATCH_SIZE_253822 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 387, 37), 'HATCH_SIZE', False)
        int_253823 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 387, 48), 'int')
        # Applying the binary operator '+' (line 387)
        result_add_253824 = python_operator(stypy.reporting.localization.Localization(__file__, 387, 37), '+', HATCH_SIZE_253822, int_253823)
        
        # Processing the call keyword arguments (line 387)
        kwargs_253825 = {}
        # Getting the type of 'six' (line 387)
        six_253820 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 387, 23), 'six', False)
        # Obtaining the member 'text_type' of a type (line 387)
        text_type_253821 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 387, 23), six_253820, 'text_type')
        # Calling text_type(args, kwargs) (line 387)
        text_type_call_result_253826 = invoke(stypy.reporting.localization.Localization(__file__, 387, 23), text_type_253821, *[result_add_253824], **kwargs_253825)
        
        keyword_253827 = text_type_call_result_253826
        # Getting the type of 'fill' (line 388)
        fill_253828 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 388, 21), 'fill', False)
        keyword_253829 = fill_253828
        kwargs_253830 = {'y': keyword_253811, 'x': keyword_253809, 'height': keyword_253827, 'fill': keyword_253829, 'width': keyword_253819}
        # Getting the type of 'writer' (line 384)
        writer_253805 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 384, 12), 'writer', False)
        # Obtaining the member 'element' of a type (line 384)
        element_253806 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 384, 12), writer_253805, 'element')
        # Calling element(args, kwargs) (line 384)
        element_call_result_253831 = invoke(stypy.reporting.localization.Localization(__file__, 384, 12), element_253806, *[unicode_253807], **kwargs_253830)
        
        
        # Call to element(...): (line 389)
        # Processing the call arguments (line 389)
        unicode_253834 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 390, 16), 'unicode', u'path')
        # Processing the call keyword arguments (line 389)
        # Getting the type of 'path_data' (line 391)
        path_data_253835 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 391, 18), 'path_data', False)
        keyword_253836 = path_data_253835
        
        # Call to generate_css(...): (line 392)
        # Processing the call arguments (line 392)
        
        # Obtaining an instance of the builtin type 'dict' (line 392)
        dict_253838 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 392, 35), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 392)
        # Adding element type (key, value) (line 392)
        unicode_253839 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 393, 20), 'unicode', u'fill')
        
        # Call to rgb2hex(...): (line 393)
        # Processing the call arguments (line 393)
        # Getting the type of 'stroke' (line 393)
        stroke_253841 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 393, 36), 'stroke', False)
        # Processing the call keyword arguments (line 393)
        kwargs_253842 = {}
        # Getting the type of 'rgb2hex' (line 393)
        rgb2hex_253840 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 393, 28), 'rgb2hex', False)
        # Calling rgb2hex(args, kwargs) (line 393)
        rgb2hex_call_result_253843 = invoke(stypy.reporting.localization.Localization(__file__, 393, 28), rgb2hex_253840, *[stroke_253841], **kwargs_253842)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 392, 35), dict_253838, (unicode_253839, rgb2hex_call_result_253843))
        # Adding element type (key, value) (line 392)
        unicode_253844 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 394, 20), 'unicode', u'stroke')
        
        # Call to rgb2hex(...): (line 394)
        # Processing the call arguments (line 394)
        # Getting the type of 'stroke' (line 394)
        stroke_253846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 394, 38), 'stroke', False)
        # Processing the call keyword arguments (line 394)
        kwargs_253847 = {}
        # Getting the type of 'rgb2hex' (line 394)
        rgb2hex_253845 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 394, 30), 'rgb2hex', False)
        # Calling rgb2hex(args, kwargs) (line 394)
        rgb2hex_call_result_253848 = invoke(stypy.reporting.localization.Localization(__file__, 394, 30), rgb2hex_253845, *[stroke_253846], **kwargs_253847)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 392, 35), dict_253838, (unicode_253844, rgb2hex_call_result_253848))
        # Adding element type (key, value) (line 392)
        unicode_253849 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 395, 20), 'unicode', u'stroke-width')
        
        # Call to text_type(...): (line 395)
        # Processing the call arguments (line 395)
        
        # Obtaining the type of the subscript
        unicode_253852 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 395, 59), 'unicode', u'hatch.linewidth')
        # Getting the type of 'rcParams' (line 395)
        rcParams_253853 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 395, 50), 'rcParams', False)
        # Obtaining the member '__getitem__' of a type (line 395)
        getitem___253854 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 395, 50), rcParams_253853, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 395)
        subscript_call_result_253855 = invoke(stypy.reporting.localization.Localization(__file__, 395, 50), getitem___253854, unicode_253852)
        
        # Processing the call keyword arguments (line 395)
        kwargs_253856 = {}
        # Getting the type of 'six' (line 395)
        six_253850 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 395, 36), 'six', False)
        # Obtaining the member 'text_type' of a type (line 395)
        text_type_253851 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 395, 36), six_253850, 'text_type')
        # Calling text_type(args, kwargs) (line 395)
        text_type_call_result_253857 = invoke(stypy.reporting.localization.Localization(__file__, 395, 36), text_type_253851, *[subscript_call_result_253855], **kwargs_253856)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 392, 35), dict_253838, (unicode_253849, text_type_call_result_253857))
        # Adding element type (key, value) (line 392)
        unicode_253858 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 396, 20), 'unicode', u'stroke-linecap')
        unicode_253859 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 396, 38), 'unicode', u'butt')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 392, 35), dict_253838, (unicode_253858, unicode_253859))
        # Adding element type (key, value) (line 392)
        unicode_253860 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 397, 20), 'unicode', u'stroke-linejoin')
        unicode_253861 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 397, 39), 'unicode', u'miter')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 392, 35), dict_253838, (unicode_253860, unicode_253861))
        
        # Processing the call keyword arguments (line 392)
        kwargs_253862 = {}
        # Getting the type of 'generate_css' (line 392)
        generate_css_253837 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 22), 'generate_css', False)
        # Calling generate_css(args, kwargs) (line 392)
        generate_css_call_result_253863 = invoke(stypy.reporting.localization.Localization(__file__, 392, 22), generate_css_253837, *[dict_253838], **kwargs_253862)
        
        keyword_253864 = generate_css_call_result_253863
        kwargs_253865 = {'style': keyword_253864, 'd': keyword_253836}
        # Getting the type of 'writer' (line 389)
        writer_253832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 389, 12), 'writer', False)
        # Obtaining the member 'element' of a type (line 389)
        element_253833 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 389, 12), writer_253832, 'element')
        # Calling element(args, kwargs) (line 389)
        element_call_result_253866 = invoke(stypy.reporting.localization.Localization(__file__, 389, 12), element_253833, *[unicode_253834], **kwargs_253865)
        
        
        # Call to end(...): (line 400)
        # Processing the call arguments (line 400)
        unicode_253869 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 400, 23), 'unicode', u'pattern')
        # Processing the call keyword arguments (line 400)
        kwargs_253870 = {}
        # Getting the type of 'writer' (line 400)
        writer_253867 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 400, 12), 'writer', False)
        # Obtaining the member 'end' of a type (line 400)
        end_253868 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 400, 12), writer_253867, 'end')
        # Calling end(args, kwargs) (line 400)
        end_call_result_253871 = invoke(stypy.reporting.localization.Localization(__file__, 400, 12), end_253868, *[unicode_253869], **kwargs_253870)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to end(...): (line 401)
        # Processing the call arguments (line 401)
        unicode_253874 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 401, 19), 'unicode', u'defs')
        # Processing the call keyword arguments (line 401)
        kwargs_253875 = {}
        # Getting the type of 'writer' (line 401)
        writer_253872 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 401, 8), 'writer', False)
        # Obtaining the member 'end' of a type (line 401)
        end_253873 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 401, 8), writer_253872, 'end')
        # Calling end(args, kwargs) (line 401)
        end_call_result_253876 = invoke(stypy.reporting.localization.Localization(__file__, 401, 8), end_253873, *[unicode_253874], **kwargs_253875)
        
        
        # ################# End of '_write_hatches(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_write_hatches' in the type store
        # Getting the type of 'stypy_return_type' (line 363)
        stypy_return_type_253877 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 363, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_253877)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_write_hatches'
        return stypy_return_type_253877


    @norecursion
    def _get_style_dict(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_get_style_dict'
        module_type_store = module_type_store.open_function_context('_get_style_dict', 403, 4, False)
        # Assigning a type to the variable 'self' (line 404)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 404, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererSVG._get_style_dict.__dict__.__setitem__('stypy_localization', localization)
        RendererSVG._get_style_dict.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererSVG._get_style_dict.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererSVG._get_style_dict.__dict__.__setitem__('stypy_function_name', 'RendererSVG._get_style_dict')
        RendererSVG._get_style_dict.__dict__.__setitem__('stypy_param_names_list', ['gc', 'rgbFace'])
        RendererSVG._get_style_dict.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererSVG._get_style_dict.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererSVG._get_style_dict.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererSVG._get_style_dict.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererSVG._get_style_dict.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererSVG._get_style_dict.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererSVG._get_style_dict', ['gc', 'rgbFace'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_get_style_dict', localization, ['gc', 'rgbFace'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_get_style_dict(...)' code ##################

        unicode_253878 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 407, (-1)), 'unicode', u'\n        return the style string.  style is generated from the\n        GraphicsContext and rgbFace\n        ')
        
        # Assigning a Dict to a Name (line 408):
        
        # Assigning a Dict to a Name (line 408):
        
        # Obtaining an instance of the builtin type 'dict' (line 408)
        dict_253879 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 408, 17), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 408)
        
        # Assigning a type to the variable 'attrib' (line 408)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 408, 8), 'attrib', dict_253879)
        
        # Assigning a Call to a Name (line 410):
        
        # Assigning a Call to a Name (line 410):
        
        # Call to get_forced_alpha(...): (line 410)
        # Processing the call keyword arguments (line 410)
        kwargs_253882 = {}
        # Getting the type of 'gc' (line 410)
        gc_253880 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 410, 23), 'gc', False)
        # Obtaining the member 'get_forced_alpha' of a type (line 410)
        get_forced_alpha_253881 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 410, 23), gc_253880, 'get_forced_alpha')
        # Calling get_forced_alpha(args, kwargs) (line 410)
        get_forced_alpha_call_result_253883 = invoke(stypy.reporting.localization.Localization(__file__, 410, 23), get_forced_alpha_253881, *[], **kwargs_253882)
        
        # Assigning a type to the variable 'forced_alpha' (line 410)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 410, 8), 'forced_alpha', get_forced_alpha_call_result_253883)
        
        
        
        # Call to get_hatch(...): (line 412)
        # Processing the call keyword arguments (line 412)
        kwargs_253886 = {}
        # Getting the type of 'gc' (line 412)
        gc_253884 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 412, 11), 'gc', False)
        # Obtaining the member 'get_hatch' of a type (line 412)
        get_hatch_253885 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 412, 11), gc_253884, 'get_hatch')
        # Calling get_hatch(args, kwargs) (line 412)
        get_hatch_call_result_253887 = invoke(stypy.reporting.localization.Localization(__file__, 412, 11), get_hatch_253885, *[], **kwargs_253886)
        
        # Getting the type of 'None' (line 412)
        None_253888 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 412, 33), 'None')
        # Applying the binary operator 'isnot' (line 412)
        result_is_not_253889 = python_operator(stypy.reporting.localization.Localization(__file__, 412, 11), 'isnot', get_hatch_call_result_253887, None_253888)
        
        # Testing the type of an if condition (line 412)
        if_condition_253890 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 412, 8), result_is_not_253889)
        # Assigning a type to the variable 'if_condition_253890' (line 412)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 412, 8), 'if_condition_253890', if_condition_253890)
        # SSA begins for if statement (line 412)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a BinOp to a Subscript (line 413):
        
        # Assigning a BinOp to a Subscript (line 413):
        unicode_253891 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 413, 29), 'unicode', u'url(#%s)')
        
        # Call to _get_hatch(...): (line 413)
        # Processing the call arguments (line 413)
        # Getting the type of 'gc' (line 413)
        gc_253894 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 413, 58), 'gc', False)
        # Getting the type of 'rgbFace' (line 413)
        rgbFace_253895 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 413, 62), 'rgbFace', False)
        # Processing the call keyword arguments (line 413)
        kwargs_253896 = {}
        # Getting the type of 'self' (line 413)
        self_253892 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 413, 42), 'self', False)
        # Obtaining the member '_get_hatch' of a type (line 413)
        _get_hatch_253893 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 413, 42), self_253892, '_get_hatch')
        # Calling _get_hatch(args, kwargs) (line 413)
        _get_hatch_call_result_253897 = invoke(stypy.reporting.localization.Localization(__file__, 413, 42), _get_hatch_253893, *[gc_253894, rgbFace_253895], **kwargs_253896)
        
        # Applying the binary operator '%' (line 413)
        result_mod_253898 = python_operator(stypy.reporting.localization.Localization(__file__, 413, 29), '%', unicode_253891, _get_hatch_call_result_253897)
        
        # Getting the type of 'attrib' (line 413)
        attrib_253899 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 413, 12), 'attrib')
        unicode_253900 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 413, 19), 'unicode', u'fill')
        # Storing an element on a container (line 413)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 413, 12), attrib_253899, (unicode_253900, result_mod_253898))
        
        
        # Evaluating a boolean operation
        
        # Getting the type of 'rgbFace' (line 414)
        rgbFace_253901 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 414, 15), 'rgbFace')
        # Getting the type of 'None' (line 414)
        None_253902 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 414, 30), 'None')
        # Applying the binary operator 'isnot' (line 414)
        result_is_not_253903 = python_operator(stypy.reporting.localization.Localization(__file__, 414, 15), 'isnot', rgbFace_253901, None_253902)
        
        
        
        # Call to len(...): (line 414)
        # Processing the call arguments (line 414)
        # Getting the type of 'rgbFace' (line 414)
        rgbFace_253905 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 414, 43), 'rgbFace', False)
        # Processing the call keyword arguments (line 414)
        kwargs_253906 = {}
        # Getting the type of 'len' (line 414)
        len_253904 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 414, 39), 'len', False)
        # Calling len(args, kwargs) (line 414)
        len_call_result_253907 = invoke(stypy.reporting.localization.Localization(__file__, 414, 39), len_253904, *[rgbFace_253905], **kwargs_253906)
        
        int_253908 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 414, 55), 'int')
        # Applying the binary operator '==' (line 414)
        result_eq_253909 = python_operator(stypy.reporting.localization.Localization(__file__, 414, 39), '==', len_call_result_253907, int_253908)
        
        # Applying the binary operator 'and' (line 414)
        result_and_keyword_253910 = python_operator(stypy.reporting.localization.Localization(__file__, 414, 15), 'and', result_is_not_253903, result_eq_253909)
        
        
        # Obtaining the type of the subscript
        int_253911 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 414, 69), 'int')
        # Getting the type of 'rgbFace' (line 414)
        rgbFace_253912 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 414, 61), 'rgbFace')
        # Obtaining the member '__getitem__' of a type (line 414)
        getitem___253913 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 414, 61), rgbFace_253912, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 414)
        subscript_call_result_253914 = invoke(stypy.reporting.localization.Localization(__file__, 414, 61), getitem___253913, int_253911)
        
        float_253915 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 414, 75), 'float')
        # Applying the binary operator '!=' (line 414)
        result_ne_253916 = python_operator(stypy.reporting.localization.Localization(__file__, 414, 61), '!=', subscript_call_result_253914, float_253915)
        
        # Applying the binary operator 'and' (line 414)
        result_and_keyword_253917 = python_operator(stypy.reporting.localization.Localization(__file__, 414, 15), 'and', result_and_keyword_253910, result_ne_253916)
        
        # Getting the type of 'forced_alpha' (line 414)
        forced_alpha_253918 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 414, 87), 'forced_alpha')
        # Applying the 'not' unary operator (line 414)
        result_not__253919 = python_operator(stypy.reporting.localization.Localization(__file__, 414, 83), 'not', forced_alpha_253918)
        
        # Applying the binary operator 'and' (line 414)
        result_and_keyword_253920 = python_operator(stypy.reporting.localization.Localization(__file__, 414, 15), 'and', result_and_keyword_253917, result_not__253919)
        
        # Testing the type of an if condition (line 414)
        if_condition_253921 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 414, 12), result_and_keyword_253920)
        # Assigning a type to the variable 'if_condition_253921' (line 414)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 414, 12), 'if_condition_253921', if_condition_253921)
        # SSA begins for if statement (line 414)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Subscript (line 415):
        
        # Assigning a Call to a Subscript (line 415):
        
        # Call to short_float_fmt(...): (line 415)
        # Processing the call arguments (line 415)
        
        # Obtaining the type of the subscript
        int_253923 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 415, 65), 'int')
        # Getting the type of 'rgbFace' (line 415)
        rgbFace_253924 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 415, 57), 'rgbFace', False)
        # Obtaining the member '__getitem__' of a type (line 415)
        getitem___253925 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 415, 57), rgbFace_253924, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 415)
        subscript_call_result_253926 = invoke(stypy.reporting.localization.Localization(__file__, 415, 57), getitem___253925, int_253923)
        
        # Processing the call keyword arguments (line 415)
        kwargs_253927 = {}
        # Getting the type of 'short_float_fmt' (line 415)
        short_float_fmt_253922 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 415, 41), 'short_float_fmt', False)
        # Calling short_float_fmt(args, kwargs) (line 415)
        short_float_fmt_call_result_253928 = invoke(stypy.reporting.localization.Localization(__file__, 415, 41), short_float_fmt_253922, *[subscript_call_result_253926], **kwargs_253927)
        
        # Getting the type of 'attrib' (line 415)
        attrib_253929 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 415, 16), 'attrib')
        unicode_253930 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 415, 23), 'unicode', u'fill-opacity')
        # Storing an element on a container (line 415)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 415, 16), attrib_253929, (unicode_253930, short_float_fmt_call_result_253928))
        # SSA join for if statement (line 414)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA branch for the else part of an if statement (line 412)
        module_type_store.open_ssa_branch('else')
        
        # Type idiom detected: calculating its left and rigth part (line 417)
        # Getting the type of 'rgbFace' (line 417)
        rgbFace_253931 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 417, 15), 'rgbFace')
        # Getting the type of 'None' (line 417)
        None_253932 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 417, 26), 'None')
        
        (may_be_253933, more_types_in_union_253934) = may_be_none(rgbFace_253931, None_253932)

        if may_be_253933:

            if more_types_in_union_253934:
                # Runtime conditional SSA (line 417)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Str to a Subscript (line 418):
            
            # Assigning a Str to a Subscript (line 418):
            unicode_253935 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 418, 33), 'unicode', u'none')
            # Getting the type of 'attrib' (line 418)
            attrib_253936 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 418, 16), 'attrib')
            unicode_253937 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 418, 23), 'unicode', u'fill')
            # Storing an element on a container (line 418)
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 418, 16), attrib_253936, (unicode_253937, unicode_253935))

            if more_types_in_union_253934:
                # Runtime conditional SSA for else branch (line 417)
                module_type_store.open_ssa_branch('idiom else')



        if ((not may_be_253933) or more_types_in_union_253934):
            
            
            
            # Call to tuple(...): (line 420)
            # Processing the call arguments (line 420)
            
            # Obtaining the type of the subscript
            int_253939 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 420, 34), 'int')
            slice_253940 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 420, 25), None, int_253939, None)
            # Getting the type of 'rgbFace' (line 420)
            rgbFace_253941 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 420, 25), 'rgbFace', False)
            # Obtaining the member '__getitem__' of a type (line 420)
            getitem___253942 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 420, 25), rgbFace_253941, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 420)
            subscript_call_result_253943 = invoke(stypy.reporting.localization.Localization(__file__, 420, 25), getitem___253942, slice_253940)
            
            # Processing the call keyword arguments (line 420)
            kwargs_253944 = {}
            # Getting the type of 'tuple' (line 420)
            tuple_253938 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 420, 19), 'tuple', False)
            # Calling tuple(args, kwargs) (line 420)
            tuple_call_result_253945 = invoke(stypy.reporting.localization.Localization(__file__, 420, 19), tuple_253938, *[subscript_call_result_253943], **kwargs_253944)
            
            
            # Obtaining an instance of the builtin type 'tuple' (line 420)
            tuple_253946 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 420, 42), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 420)
            # Adding element type (line 420)
            int_253947 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 420, 42), 'int')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 420, 42), tuple_253946, int_253947)
            # Adding element type (line 420)
            int_253948 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 420, 45), 'int')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 420, 42), tuple_253946, int_253948)
            # Adding element type (line 420)
            int_253949 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 420, 48), 'int')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 420, 42), tuple_253946, int_253949)
            
            # Applying the binary operator '!=' (line 420)
            result_ne_253950 = python_operator(stypy.reporting.localization.Localization(__file__, 420, 19), '!=', tuple_call_result_253945, tuple_253946)
            
            # Testing the type of an if condition (line 420)
            if_condition_253951 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 420, 16), result_ne_253950)
            # Assigning a type to the variable 'if_condition_253951' (line 420)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 420, 16), 'if_condition_253951', if_condition_253951)
            # SSA begins for if statement (line 420)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Call to a Subscript (line 421):
            
            # Assigning a Call to a Subscript (line 421):
            
            # Call to rgb2hex(...): (line 421)
            # Processing the call arguments (line 421)
            # Getting the type of 'rgbFace' (line 421)
            rgbFace_253953 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 421, 45), 'rgbFace', False)
            # Processing the call keyword arguments (line 421)
            kwargs_253954 = {}
            # Getting the type of 'rgb2hex' (line 421)
            rgb2hex_253952 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 421, 37), 'rgb2hex', False)
            # Calling rgb2hex(args, kwargs) (line 421)
            rgb2hex_call_result_253955 = invoke(stypy.reporting.localization.Localization(__file__, 421, 37), rgb2hex_253952, *[rgbFace_253953], **kwargs_253954)
            
            # Getting the type of 'attrib' (line 421)
            attrib_253956 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 421, 20), 'attrib')
            unicode_253957 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 421, 27), 'unicode', u'fill')
            # Storing an element on a container (line 421)
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 421, 20), attrib_253956, (unicode_253957, rgb2hex_call_result_253955))
            # SSA join for if statement (line 420)
            module_type_store = module_type_store.join_ssa_context()
            
            
            
            # Evaluating a boolean operation
            
            
            # Call to len(...): (line 422)
            # Processing the call arguments (line 422)
            # Getting the type of 'rgbFace' (line 422)
            rgbFace_253959 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 422, 23), 'rgbFace', False)
            # Processing the call keyword arguments (line 422)
            kwargs_253960 = {}
            # Getting the type of 'len' (line 422)
            len_253958 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 422, 19), 'len', False)
            # Calling len(args, kwargs) (line 422)
            len_call_result_253961 = invoke(stypy.reporting.localization.Localization(__file__, 422, 19), len_253958, *[rgbFace_253959], **kwargs_253960)
            
            int_253962 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 422, 35), 'int')
            # Applying the binary operator '==' (line 422)
            result_eq_253963 = python_operator(stypy.reporting.localization.Localization(__file__, 422, 19), '==', len_call_result_253961, int_253962)
            
            
            
            # Obtaining the type of the subscript
            int_253964 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 422, 49), 'int')
            # Getting the type of 'rgbFace' (line 422)
            rgbFace_253965 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 422, 41), 'rgbFace')
            # Obtaining the member '__getitem__' of a type (line 422)
            getitem___253966 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 422, 41), rgbFace_253965, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 422)
            subscript_call_result_253967 = invoke(stypy.reporting.localization.Localization(__file__, 422, 41), getitem___253966, int_253964)
            
            float_253968 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 422, 55), 'float')
            # Applying the binary operator '!=' (line 422)
            result_ne_253969 = python_operator(stypy.reporting.localization.Localization(__file__, 422, 41), '!=', subscript_call_result_253967, float_253968)
            
            # Applying the binary operator 'and' (line 422)
            result_and_keyword_253970 = python_operator(stypy.reporting.localization.Localization(__file__, 422, 19), 'and', result_eq_253963, result_ne_253969)
            
            # Getting the type of 'forced_alpha' (line 422)
            forced_alpha_253971 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 422, 67), 'forced_alpha')
            # Applying the 'not' unary operator (line 422)
            result_not__253972 = python_operator(stypy.reporting.localization.Localization(__file__, 422, 63), 'not', forced_alpha_253971)
            
            # Applying the binary operator 'and' (line 422)
            result_and_keyword_253973 = python_operator(stypy.reporting.localization.Localization(__file__, 422, 19), 'and', result_and_keyword_253970, result_not__253972)
            
            # Testing the type of an if condition (line 422)
            if_condition_253974 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 422, 16), result_and_keyword_253973)
            # Assigning a type to the variable 'if_condition_253974' (line 422)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 422, 16), 'if_condition_253974', if_condition_253974)
            # SSA begins for if statement (line 422)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Call to a Subscript (line 423):
            
            # Assigning a Call to a Subscript (line 423):
            
            # Call to short_float_fmt(...): (line 423)
            # Processing the call arguments (line 423)
            
            # Obtaining the type of the subscript
            int_253976 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 423, 69), 'int')
            # Getting the type of 'rgbFace' (line 423)
            rgbFace_253977 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 423, 61), 'rgbFace', False)
            # Obtaining the member '__getitem__' of a type (line 423)
            getitem___253978 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 423, 61), rgbFace_253977, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 423)
            subscript_call_result_253979 = invoke(stypy.reporting.localization.Localization(__file__, 423, 61), getitem___253978, int_253976)
            
            # Processing the call keyword arguments (line 423)
            kwargs_253980 = {}
            # Getting the type of 'short_float_fmt' (line 423)
            short_float_fmt_253975 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 423, 45), 'short_float_fmt', False)
            # Calling short_float_fmt(args, kwargs) (line 423)
            short_float_fmt_call_result_253981 = invoke(stypy.reporting.localization.Localization(__file__, 423, 45), short_float_fmt_253975, *[subscript_call_result_253979], **kwargs_253980)
            
            # Getting the type of 'attrib' (line 423)
            attrib_253982 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 423, 20), 'attrib')
            unicode_253983 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 423, 27), 'unicode', u'fill-opacity')
            # Storing an element on a container (line 423)
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 423, 20), attrib_253982, (unicode_253983, short_float_fmt_call_result_253981))
            # SSA join for if statement (line 422)
            module_type_store = module_type_store.join_ssa_context()
            

            if (may_be_253933 and more_types_in_union_253934):
                # SSA join for if statement (line 417)
                module_type_store = module_type_store.join_ssa_context()


        
        # SSA join for if statement (line 412)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Evaluating a boolean operation
        # Getting the type of 'forced_alpha' (line 425)
        forced_alpha_253984 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 425, 11), 'forced_alpha')
        
        
        # Call to get_alpha(...): (line 425)
        # Processing the call keyword arguments (line 425)
        kwargs_253987 = {}
        # Getting the type of 'gc' (line 425)
        gc_253985 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 425, 28), 'gc', False)
        # Obtaining the member 'get_alpha' of a type (line 425)
        get_alpha_253986 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 425, 28), gc_253985, 'get_alpha')
        # Calling get_alpha(args, kwargs) (line 425)
        get_alpha_call_result_253988 = invoke(stypy.reporting.localization.Localization(__file__, 425, 28), get_alpha_253986, *[], **kwargs_253987)
        
        float_253989 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 425, 46), 'float')
        # Applying the binary operator '!=' (line 425)
        result_ne_253990 = python_operator(stypy.reporting.localization.Localization(__file__, 425, 28), '!=', get_alpha_call_result_253988, float_253989)
        
        # Applying the binary operator 'and' (line 425)
        result_and_keyword_253991 = python_operator(stypy.reporting.localization.Localization(__file__, 425, 11), 'and', forced_alpha_253984, result_ne_253990)
        
        # Testing the type of an if condition (line 425)
        if_condition_253992 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 425, 8), result_and_keyword_253991)
        # Assigning a type to the variable 'if_condition_253992' (line 425)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 425, 8), 'if_condition_253992', if_condition_253992)
        # SSA begins for if statement (line 425)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Subscript (line 426):
        
        # Assigning a Call to a Subscript (line 426):
        
        # Call to short_float_fmt(...): (line 426)
        # Processing the call arguments (line 426)
        
        # Call to get_alpha(...): (line 426)
        # Processing the call keyword arguments (line 426)
        kwargs_253996 = {}
        # Getting the type of 'gc' (line 426)
        gc_253994 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 426, 48), 'gc', False)
        # Obtaining the member 'get_alpha' of a type (line 426)
        get_alpha_253995 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 426, 48), gc_253994, 'get_alpha')
        # Calling get_alpha(args, kwargs) (line 426)
        get_alpha_call_result_253997 = invoke(stypy.reporting.localization.Localization(__file__, 426, 48), get_alpha_253995, *[], **kwargs_253996)
        
        # Processing the call keyword arguments (line 426)
        kwargs_253998 = {}
        # Getting the type of 'short_float_fmt' (line 426)
        short_float_fmt_253993 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 426, 32), 'short_float_fmt', False)
        # Calling short_float_fmt(args, kwargs) (line 426)
        short_float_fmt_call_result_253999 = invoke(stypy.reporting.localization.Localization(__file__, 426, 32), short_float_fmt_253993, *[get_alpha_call_result_253997], **kwargs_253998)
        
        # Getting the type of 'attrib' (line 426)
        attrib_254000 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 426, 12), 'attrib')
        unicode_254001 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 426, 19), 'unicode', u'opacity')
        # Storing an element on a container (line 426)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 426, 12), attrib_254000, (unicode_254001, short_float_fmt_call_result_253999))
        # SSA join for if statement (line 425)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Tuple (line 428):
        
        # Assigning a Call to a Name:
        
        # Call to get_dashes(...): (line 428)
        # Processing the call keyword arguments (line 428)
        kwargs_254004 = {}
        # Getting the type of 'gc' (line 428)
        gc_254002 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 428, 22), 'gc', False)
        # Obtaining the member 'get_dashes' of a type (line 428)
        get_dashes_254003 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 428, 22), gc_254002, 'get_dashes')
        # Calling get_dashes(args, kwargs) (line 428)
        get_dashes_call_result_254005 = invoke(stypy.reporting.localization.Localization(__file__, 428, 22), get_dashes_254003, *[], **kwargs_254004)
        
        # Assigning a type to the variable 'call_assignment_252791' (line 428)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 428, 8), 'call_assignment_252791', get_dashes_call_result_254005)
        
        # Assigning a Call to a Name (line 428):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_254008 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 428, 8), 'int')
        # Processing the call keyword arguments
        kwargs_254009 = {}
        # Getting the type of 'call_assignment_252791' (line 428)
        call_assignment_252791_254006 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 428, 8), 'call_assignment_252791', False)
        # Obtaining the member '__getitem__' of a type (line 428)
        getitem___254007 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 428, 8), call_assignment_252791_254006, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_254010 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___254007, *[int_254008], **kwargs_254009)
        
        # Assigning a type to the variable 'call_assignment_252792' (line 428)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 428, 8), 'call_assignment_252792', getitem___call_result_254010)
        
        # Assigning a Name to a Name (line 428):
        # Getting the type of 'call_assignment_252792' (line 428)
        call_assignment_252792_254011 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 428, 8), 'call_assignment_252792')
        # Assigning a type to the variable 'offset' (line 428)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 428, 8), 'offset', call_assignment_252792_254011)
        
        # Assigning a Call to a Name (line 428):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_254014 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 428, 8), 'int')
        # Processing the call keyword arguments
        kwargs_254015 = {}
        # Getting the type of 'call_assignment_252791' (line 428)
        call_assignment_252791_254012 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 428, 8), 'call_assignment_252791', False)
        # Obtaining the member '__getitem__' of a type (line 428)
        getitem___254013 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 428, 8), call_assignment_252791_254012, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_254016 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___254013, *[int_254014], **kwargs_254015)
        
        # Assigning a type to the variable 'call_assignment_252793' (line 428)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 428, 8), 'call_assignment_252793', getitem___call_result_254016)
        
        # Assigning a Name to a Name (line 428):
        # Getting the type of 'call_assignment_252793' (line 428)
        call_assignment_252793_254017 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 428, 8), 'call_assignment_252793')
        # Assigning a type to the variable 'seq' (line 428)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 428, 16), 'seq', call_assignment_252793_254017)
        
        # Type idiom detected: calculating its left and rigth part (line 429)
        # Getting the type of 'seq' (line 429)
        seq_254018 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 429, 8), 'seq')
        # Getting the type of 'None' (line 429)
        None_254019 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 429, 22), 'None')
        
        (may_be_254020, more_types_in_union_254021) = may_not_be_none(seq_254018, None_254019)

        if may_be_254020:

            if more_types_in_union_254021:
                # Runtime conditional SSA (line 429)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Call to a Subscript (line 430):
            
            # Assigning a Call to a Subscript (line 430):
            
            # Call to join(...): (line 430)
            # Processing the call arguments (line 430)
            # Calculating list comprehension
            # Calculating comprehension expression
            # Getting the type of 'seq' (line 430)
            seq_254028 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 430, 83), 'seq', False)
            comprehension_254029 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 430, 51), seq_254028)
            # Assigning a type to the variable 'val' (line 430)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 430, 51), 'val', comprehension_254029)
            
            # Call to short_float_fmt(...): (line 430)
            # Processing the call arguments (line 430)
            # Getting the type of 'val' (line 430)
            val_254025 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 430, 67), 'val', False)
            # Processing the call keyword arguments (line 430)
            kwargs_254026 = {}
            # Getting the type of 'short_float_fmt' (line 430)
            short_float_fmt_254024 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 430, 51), 'short_float_fmt', False)
            # Calling short_float_fmt(args, kwargs) (line 430)
            short_float_fmt_call_result_254027 = invoke(stypy.reporting.localization.Localization(__file__, 430, 51), short_float_fmt_254024, *[val_254025], **kwargs_254026)
            
            list_254030 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 430, 51), 'list')
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 430, 51), list_254030, short_float_fmt_call_result_254027)
            # Processing the call keyword arguments (line 430)
            kwargs_254031 = {}
            unicode_254022 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 430, 41), 'unicode', u',')
            # Obtaining the member 'join' of a type (line 430)
            join_254023 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 430, 41), unicode_254022, 'join')
            # Calling join(args, kwargs) (line 430)
            join_call_result_254032 = invoke(stypy.reporting.localization.Localization(__file__, 430, 41), join_254023, *[list_254030], **kwargs_254031)
            
            # Getting the type of 'attrib' (line 430)
            attrib_254033 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 430, 12), 'attrib')
            unicode_254034 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 430, 19), 'unicode', u'stroke-dasharray')
            # Storing an element on a container (line 430)
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 430, 12), attrib_254033, (unicode_254034, join_call_result_254032))
            
            # Assigning a Call to a Subscript (line 431):
            
            # Assigning a Call to a Subscript (line 431):
            
            # Call to short_float_fmt(...): (line 431)
            # Processing the call arguments (line 431)
            
            # Call to float(...): (line 431)
            # Processing the call arguments (line 431)
            # Getting the type of 'offset' (line 431)
            offset_254037 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 431, 64), 'offset', False)
            # Processing the call keyword arguments (line 431)
            kwargs_254038 = {}
            # Getting the type of 'float' (line 431)
            float_254036 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 431, 58), 'float', False)
            # Calling float(args, kwargs) (line 431)
            float_call_result_254039 = invoke(stypy.reporting.localization.Localization(__file__, 431, 58), float_254036, *[offset_254037], **kwargs_254038)
            
            # Processing the call keyword arguments (line 431)
            kwargs_254040 = {}
            # Getting the type of 'short_float_fmt' (line 431)
            short_float_fmt_254035 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 431, 42), 'short_float_fmt', False)
            # Calling short_float_fmt(args, kwargs) (line 431)
            short_float_fmt_call_result_254041 = invoke(stypy.reporting.localization.Localization(__file__, 431, 42), short_float_fmt_254035, *[float_call_result_254039], **kwargs_254040)
            
            # Getting the type of 'attrib' (line 431)
            attrib_254042 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 431, 12), 'attrib')
            unicode_254043 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 431, 19), 'unicode', u'stroke-dashoffset')
            # Storing an element on a container (line 431)
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 431, 12), attrib_254042, (unicode_254043, short_float_fmt_call_result_254041))

            if more_types_in_union_254021:
                # SSA join for if statement (line 429)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Call to a Name (line 433):
        
        # Assigning a Call to a Name (line 433):
        
        # Call to get_linewidth(...): (line 433)
        # Processing the call keyword arguments (line 433)
        kwargs_254046 = {}
        # Getting the type of 'gc' (line 433)
        gc_254044 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 433, 20), 'gc', False)
        # Obtaining the member 'get_linewidth' of a type (line 433)
        get_linewidth_254045 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 433, 20), gc_254044, 'get_linewidth')
        # Calling get_linewidth(args, kwargs) (line 433)
        get_linewidth_call_result_254047 = invoke(stypy.reporting.localization.Localization(__file__, 433, 20), get_linewidth_254045, *[], **kwargs_254046)
        
        # Assigning a type to the variable 'linewidth' (line 433)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 433, 8), 'linewidth', get_linewidth_call_result_254047)
        
        # Getting the type of 'linewidth' (line 434)
        linewidth_254048 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 434, 11), 'linewidth')
        # Testing the type of an if condition (line 434)
        if_condition_254049 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 434, 8), linewidth_254048)
        # Assigning a type to the variable 'if_condition_254049' (line 434)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 434, 8), 'if_condition_254049', if_condition_254049)
        # SSA begins for if statement (line 434)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 435):
        
        # Assigning a Call to a Name (line 435):
        
        # Call to get_rgb(...): (line 435)
        # Processing the call keyword arguments (line 435)
        kwargs_254052 = {}
        # Getting the type of 'gc' (line 435)
        gc_254050 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 435, 18), 'gc', False)
        # Obtaining the member 'get_rgb' of a type (line 435)
        get_rgb_254051 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 435, 18), gc_254050, 'get_rgb')
        # Calling get_rgb(args, kwargs) (line 435)
        get_rgb_call_result_254053 = invoke(stypy.reporting.localization.Localization(__file__, 435, 18), get_rgb_254051, *[], **kwargs_254052)
        
        # Assigning a type to the variable 'rgb' (line 435)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 435, 12), 'rgb', get_rgb_call_result_254053)
        
        # Assigning a Call to a Subscript (line 436):
        
        # Assigning a Call to a Subscript (line 436):
        
        # Call to rgb2hex(...): (line 436)
        # Processing the call arguments (line 436)
        # Getting the type of 'rgb' (line 436)
        rgb_254055 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 436, 39), 'rgb', False)
        # Processing the call keyword arguments (line 436)
        kwargs_254056 = {}
        # Getting the type of 'rgb2hex' (line 436)
        rgb2hex_254054 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 436, 31), 'rgb2hex', False)
        # Calling rgb2hex(args, kwargs) (line 436)
        rgb2hex_call_result_254057 = invoke(stypy.reporting.localization.Localization(__file__, 436, 31), rgb2hex_254054, *[rgb_254055], **kwargs_254056)
        
        # Getting the type of 'attrib' (line 436)
        attrib_254058 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 436, 12), 'attrib')
        unicode_254059 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 436, 19), 'unicode', u'stroke')
        # Storing an element on a container (line 436)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 436, 12), attrib_254058, (unicode_254059, rgb2hex_call_result_254057))
        
        
        # Evaluating a boolean operation
        
        # Getting the type of 'forced_alpha' (line 437)
        forced_alpha_254060 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 437, 19), 'forced_alpha')
        # Applying the 'not' unary operator (line 437)
        result_not__254061 = python_operator(stypy.reporting.localization.Localization(__file__, 437, 15), 'not', forced_alpha_254060)
        
        
        
        # Obtaining the type of the subscript
        int_254062 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 437, 40), 'int')
        # Getting the type of 'rgb' (line 437)
        rgb_254063 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 437, 36), 'rgb')
        # Obtaining the member '__getitem__' of a type (line 437)
        getitem___254064 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 437, 36), rgb_254063, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 437)
        subscript_call_result_254065 = invoke(stypy.reporting.localization.Localization(__file__, 437, 36), getitem___254064, int_254062)
        
        float_254066 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 437, 46), 'float')
        # Applying the binary operator '!=' (line 437)
        result_ne_254067 = python_operator(stypy.reporting.localization.Localization(__file__, 437, 36), '!=', subscript_call_result_254065, float_254066)
        
        # Applying the binary operator 'and' (line 437)
        result_and_keyword_254068 = python_operator(stypy.reporting.localization.Localization(__file__, 437, 15), 'and', result_not__254061, result_ne_254067)
        
        # Testing the type of an if condition (line 437)
        if_condition_254069 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 437, 12), result_and_keyword_254068)
        # Assigning a type to the variable 'if_condition_254069' (line 437)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 437, 12), 'if_condition_254069', if_condition_254069)
        # SSA begins for if statement (line 437)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Subscript (line 438):
        
        # Assigning a Call to a Subscript (line 438):
        
        # Call to short_float_fmt(...): (line 438)
        # Processing the call arguments (line 438)
        
        # Obtaining the type of the subscript
        int_254071 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 438, 63), 'int')
        # Getting the type of 'rgb' (line 438)
        rgb_254072 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 438, 59), 'rgb', False)
        # Obtaining the member '__getitem__' of a type (line 438)
        getitem___254073 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 438, 59), rgb_254072, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 438)
        subscript_call_result_254074 = invoke(stypy.reporting.localization.Localization(__file__, 438, 59), getitem___254073, int_254071)
        
        # Processing the call keyword arguments (line 438)
        kwargs_254075 = {}
        # Getting the type of 'short_float_fmt' (line 438)
        short_float_fmt_254070 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 438, 43), 'short_float_fmt', False)
        # Calling short_float_fmt(args, kwargs) (line 438)
        short_float_fmt_call_result_254076 = invoke(stypy.reporting.localization.Localization(__file__, 438, 43), short_float_fmt_254070, *[subscript_call_result_254074], **kwargs_254075)
        
        # Getting the type of 'attrib' (line 438)
        attrib_254077 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 438, 16), 'attrib')
        unicode_254078 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 438, 23), 'unicode', u'stroke-opacity')
        # Storing an element on a container (line 438)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 438, 16), attrib_254077, (unicode_254078, short_float_fmt_call_result_254076))
        # SSA join for if statement (line 437)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'linewidth' (line 439)
        linewidth_254079 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 439, 15), 'linewidth')
        float_254080 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 439, 28), 'float')
        # Applying the binary operator '!=' (line 439)
        result_ne_254081 = python_operator(stypy.reporting.localization.Localization(__file__, 439, 15), '!=', linewidth_254079, float_254080)
        
        # Testing the type of an if condition (line 439)
        if_condition_254082 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 439, 12), result_ne_254081)
        # Assigning a type to the variable 'if_condition_254082' (line 439)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 439, 12), 'if_condition_254082', if_condition_254082)
        # SSA begins for if statement (line 439)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Subscript (line 440):
        
        # Assigning a Call to a Subscript (line 440):
        
        # Call to short_float_fmt(...): (line 440)
        # Processing the call arguments (line 440)
        # Getting the type of 'linewidth' (line 440)
        linewidth_254084 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 440, 57), 'linewidth', False)
        # Processing the call keyword arguments (line 440)
        kwargs_254085 = {}
        # Getting the type of 'short_float_fmt' (line 440)
        short_float_fmt_254083 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 440, 41), 'short_float_fmt', False)
        # Calling short_float_fmt(args, kwargs) (line 440)
        short_float_fmt_call_result_254086 = invoke(stypy.reporting.localization.Localization(__file__, 440, 41), short_float_fmt_254083, *[linewidth_254084], **kwargs_254085)
        
        # Getting the type of 'attrib' (line 440)
        attrib_254087 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 440, 16), 'attrib')
        unicode_254088 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 440, 23), 'unicode', u'stroke-width')
        # Storing an element on a container (line 440)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 440, 16), attrib_254087, (unicode_254088, short_float_fmt_call_result_254086))
        # SSA join for if statement (line 439)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        
        # Call to get_joinstyle(...): (line 441)
        # Processing the call keyword arguments (line 441)
        kwargs_254091 = {}
        # Getting the type of 'gc' (line 441)
        gc_254089 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 441, 15), 'gc', False)
        # Obtaining the member 'get_joinstyle' of a type (line 441)
        get_joinstyle_254090 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 441, 15), gc_254089, 'get_joinstyle')
        # Calling get_joinstyle(args, kwargs) (line 441)
        get_joinstyle_call_result_254092 = invoke(stypy.reporting.localization.Localization(__file__, 441, 15), get_joinstyle_254090, *[], **kwargs_254091)
        
        unicode_254093 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 441, 37), 'unicode', u'round')
        # Applying the binary operator '!=' (line 441)
        result_ne_254094 = python_operator(stypy.reporting.localization.Localization(__file__, 441, 15), '!=', get_joinstyle_call_result_254092, unicode_254093)
        
        # Testing the type of an if condition (line 441)
        if_condition_254095 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 441, 12), result_ne_254094)
        # Assigning a type to the variable 'if_condition_254095' (line 441)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 441, 12), 'if_condition_254095', if_condition_254095)
        # SSA begins for if statement (line 441)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Subscript (line 442):
        
        # Assigning a Call to a Subscript (line 442):
        
        # Call to get_joinstyle(...): (line 442)
        # Processing the call keyword arguments (line 442)
        kwargs_254098 = {}
        # Getting the type of 'gc' (line 442)
        gc_254096 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 442, 44), 'gc', False)
        # Obtaining the member 'get_joinstyle' of a type (line 442)
        get_joinstyle_254097 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 442, 44), gc_254096, 'get_joinstyle')
        # Calling get_joinstyle(args, kwargs) (line 442)
        get_joinstyle_call_result_254099 = invoke(stypy.reporting.localization.Localization(__file__, 442, 44), get_joinstyle_254097, *[], **kwargs_254098)
        
        # Getting the type of 'attrib' (line 442)
        attrib_254100 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 442, 16), 'attrib')
        unicode_254101 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 442, 23), 'unicode', u'stroke-linejoin')
        # Storing an element on a container (line 442)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 442, 16), attrib_254100, (unicode_254101, get_joinstyle_call_result_254099))
        # SSA join for if statement (line 441)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        
        # Call to get_capstyle(...): (line 443)
        # Processing the call keyword arguments (line 443)
        kwargs_254104 = {}
        # Getting the type of 'gc' (line 443)
        gc_254102 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 443, 15), 'gc', False)
        # Obtaining the member 'get_capstyle' of a type (line 443)
        get_capstyle_254103 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 443, 15), gc_254102, 'get_capstyle')
        # Calling get_capstyle(args, kwargs) (line 443)
        get_capstyle_call_result_254105 = invoke(stypy.reporting.localization.Localization(__file__, 443, 15), get_capstyle_254103, *[], **kwargs_254104)
        
        unicode_254106 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 443, 36), 'unicode', u'butt')
        # Applying the binary operator '!=' (line 443)
        result_ne_254107 = python_operator(stypy.reporting.localization.Localization(__file__, 443, 15), '!=', get_capstyle_call_result_254105, unicode_254106)
        
        # Testing the type of an if condition (line 443)
        if_condition_254108 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 443, 12), result_ne_254107)
        # Assigning a type to the variable 'if_condition_254108' (line 443)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 443, 12), 'if_condition_254108', if_condition_254108)
        # SSA begins for if statement (line 443)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Subscript to a Subscript (line 444):
        
        # Assigning a Subscript to a Subscript (line 444):
        
        # Obtaining the type of the subscript
        
        # Call to get_capstyle(...): (line 444)
        # Processing the call keyword arguments (line 444)
        kwargs_254111 = {}
        # Getting the type of 'gc' (line 444)
        gc_254109 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 444, 55), 'gc', False)
        # Obtaining the member 'get_capstyle' of a type (line 444)
        get_capstyle_254110 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 444, 55), gc_254109, 'get_capstyle')
        # Calling get_capstyle(args, kwargs) (line 444)
        get_capstyle_call_result_254112 = invoke(stypy.reporting.localization.Localization(__file__, 444, 55), get_capstyle_254110, *[], **kwargs_254111)
        
        # Getting the type of '_capstyle_d' (line 444)
        _capstyle_d_254113 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 444, 43), '_capstyle_d')
        # Obtaining the member '__getitem__' of a type (line 444)
        getitem___254114 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 444, 43), _capstyle_d_254113, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 444)
        subscript_call_result_254115 = invoke(stypy.reporting.localization.Localization(__file__, 444, 43), getitem___254114, get_capstyle_call_result_254112)
        
        # Getting the type of 'attrib' (line 444)
        attrib_254116 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 444, 16), 'attrib')
        unicode_254117 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 444, 23), 'unicode', u'stroke-linecap')
        # Storing an element on a container (line 444)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 444, 16), attrib_254116, (unicode_254117, subscript_call_result_254115))
        # SSA join for if statement (line 443)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 434)
        module_type_store = module_type_store.join_ssa_context()
        
        # Getting the type of 'attrib' (line 446)
        attrib_254118 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 446, 15), 'attrib')
        # Assigning a type to the variable 'stypy_return_type' (line 446)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 446, 8), 'stypy_return_type', attrib_254118)
        
        # ################# End of '_get_style_dict(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_get_style_dict' in the type store
        # Getting the type of 'stypy_return_type' (line 403)
        stypy_return_type_254119 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 403, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_254119)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_get_style_dict'
        return stypy_return_type_254119


    @norecursion
    def _get_style(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_get_style'
        module_type_store = module_type_store.open_function_context('_get_style', 448, 4, False)
        # Assigning a type to the variable 'self' (line 449)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 449, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererSVG._get_style.__dict__.__setitem__('stypy_localization', localization)
        RendererSVG._get_style.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererSVG._get_style.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererSVG._get_style.__dict__.__setitem__('stypy_function_name', 'RendererSVG._get_style')
        RendererSVG._get_style.__dict__.__setitem__('stypy_param_names_list', ['gc', 'rgbFace'])
        RendererSVG._get_style.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererSVG._get_style.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererSVG._get_style.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererSVG._get_style.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererSVG._get_style.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererSVG._get_style.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererSVG._get_style', ['gc', 'rgbFace'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_get_style', localization, ['gc', 'rgbFace'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_get_style(...)' code ##################

        
        # Call to generate_css(...): (line 449)
        # Processing the call arguments (line 449)
        
        # Call to _get_style_dict(...): (line 449)
        # Processing the call arguments (line 449)
        # Getting the type of 'gc' (line 449)
        gc_254123 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 449, 49), 'gc', False)
        # Getting the type of 'rgbFace' (line 449)
        rgbFace_254124 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 449, 53), 'rgbFace', False)
        # Processing the call keyword arguments (line 449)
        kwargs_254125 = {}
        # Getting the type of 'self' (line 449)
        self_254121 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 449, 28), 'self', False)
        # Obtaining the member '_get_style_dict' of a type (line 449)
        _get_style_dict_254122 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 449, 28), self_254121, '_get_style_dict')
        # Calling _get_style_dict(args, kwargs) (line 449)
        _get_style_dict_call_result_254126 = invoke(stypy.reporting.localization.Localization(__file__, 449, 28), _get_style_dict_254122, *[gc_254123, rgbFace_254124], **kwargs_254125)
        
        # Processing the call keyword arguments (line 449)
        kwargs_254127 = {}
        # Getting the type of 'generate_css' (line 449)
        generate_css_254120 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 449, 15), 'generate_css', False)
        # Calling generate_css(args, kwargs) (line 449)
        generate_css_call_result_254128 = invoke(stypy.reporting.localization.Localization(__file__, 449, 15), generate_css_254120, *[_get_style_dict_call_result_254126], **kwargs_254127)
        
        # Assigning a type to the variable 'stypy_return_type' (line 449)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 449, 8), 'stypy_return_type', generate_css_call_result_254128)
        
        # ################# End of '_get_style(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_get_style' in the type store
        # Getting the type of 'stypy_return_type' (line 448)
        stypy_return_type_254129 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_254129)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_get_style'
        return stypy_return_type_254129


    @norecursion
    def _get_clip(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_get_clip'
        module_type_store = module_type_store.open_function_context('_get_clip', 451, 4, False)
        # Assigning a type to the variable 'self' (line 452)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 452, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererSVG._get_clip.__dict__.__setitem__('stypy_localization', localization)
        RendererSVG._get_clip.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererSVG._get_clip.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererSVG._get_clip.__dict__.__setitem__('stypy_function_name', 'RendererSVG._get_clip')
        RendererSVG._get_clip.__dict__.__setitem__('stypy_param_names_list', ['gc'])
        RendererSVG._get_clip.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererSVG._get_clip.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererSVG._get_clip.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererSVG._get_clip.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererSVG._get_clip.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererSVG._get_clip.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererSVG._get_clip', ['gc'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_get_clip', localization, ['gc'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_get_clip(...)' code ##################

        
        # Assigning a Call to a Name (line 452):
        
        # Assigning a Call to a Name (line 452):
        
        # Call to get_clip_rectangle(...): (line 452)
        # Processing the call keyword arguments (line 452)
        kwargs_254132 = {}
        # Getting the type of 'gc' (line 452)
        gc_254130 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 452, 19), 'gc', False)
        # Obtaining the member 'get_clip_rectangle' of a type (line 452)
        get_clip_rectangle_254131 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 452, 19), gc_254130, 'get_clip_rectangle')
        # Calling get_clip_rectangle(args, kwargs) (line 452)
        get_clip_rectangle_call_result_254133 = invoke(stypy.reporting.localization.Localization(__file__, 452, 19), get_clip_rectangle_254131, *[], **kwargs_254132)
        
        # Assigning a type to the variable 'cliprect' (line 452)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 452, 8), 'cliprect', get_clip_rectangle_call_result_254133)
        
        # Assigning a Call to a Tuple (line 453):
        
        # Assigning a Call to a Name:
        
        # Call to get_clip_path(...): (line 453)
        # Processing the call keyword arguments (line 453)
        kwargs_254136 = {}
        # Getting the type of 'gc' (line 453)
        gc_254134 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 453, 35), 'gc', False)
        # Obtaining the member 'get_clip_path' of a type (line 453)
        get_clip_path_254135 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 453, 35), gc_254134, 'get_clip_path')
        # Calling get_clip_path(args, kwargs) (line 453)
        get_clip_path_call_result_254137 = invoke(stypy.reporting.localization.Localization(__file__, 453, 35), get_clip_path_254135, *[], **kwargs_254136)
        
        # Assigning a type to the variable 'call_assignment_252794' (line 453)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 453, 8), 'call_assignment_252794', get_clip_path_call_result_254137)
        
        # Assigning a Call to a Name (line 453):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_254140 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 453, 8), 'int')
        # Processing the call keyword arguments
        kwargs_254141 = {}
        # Getting the type of 'call_assignment_252794' (line 453)
        call_assignment_252794_254138 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 453, 8), 'call_assignment_252794', False)
        # Obtaining the member '__getitem__' of a type (line 453)
        getitem___254139 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 453, 8), call_assignment_252794_254138, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_254142 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___254139, *[int_254140], **kwargs_254141)
        
        # Assigning a type to the variable 'call_assignment_252795' (line 453)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 453, 8), 'call_assignment_252795', getitem___call_result_254142)
        
        # Assigning a Name to a Name (line 453):
        # Getting the type of 'call_assignment_252795' (line 453)
        call_assignment_252795_254143 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 453, 8), 'call_assignment_252795')
        # Assigning a type to the variable 'clippath' (line 453)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 453, 8), 'clippath', call_assignment_252795_254143)
        
        # Assigning a Call to a Name (line 453):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_254146 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 453, 8), 'int')
        # Processing the call keyword arguments
        kwargs_254147 = {}
        # Getting the type of 'call_assignment_252794' (line 453)
        call_assignment_252794_254144 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 453, 8), 'call_assignment_252794', False)
        # Obtaining the member '__getitem__' of a type (line 453)
        getitem___254145 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 453, 8), call_assignment_252794_254144, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_254148 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___254145, *[int_254146], **kwargs_254147)
        
        # Assigning a type to the variable 'call_assignment_252796' (line 453)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 453, 8), 'call_assignment_252796', getitem___call_result_254148)
        
        # Assigning a Name to a Name (line 453):
        # Getting the type of 'call_assignment_252796' (line 453)
        call_assignment_252796_254149 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 453, 8), 'call_assignment_252796')
        # Assigning a type to the variable 'clippath_trans' (line 453)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 453, 18), 'clippath_trans', call_assignment_252796_254149)
        
        # Type idiom detected: calculating its left and rigth part (line 454)
        # Getting the type of 'clippath' (line 454)
        clippath_254150 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 454, 8), 'clippath')
        # Getting the type of 'None' (line 454)
        None_254151 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 454, 27), 'None')
        
        (may_be_254152, more_types_in_union_254153) = may_not_be_none(clippath_254150, None_254151)

        if may_be_254152:

            if more_types_in_union_254153:
                # Runtime conditional SSA (line 454)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Call to a Name (line 455):
            
            # Assigning a Call to a Name (line 455):
            
            # Call to _make_flip_transform(...): (line 455)
            # Processing the call arguments (line 455)
            # Getting the type of 'clippath_trans' (line 455)
            clippath_trans_254156 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 455, 55), 'clippath_trans', False)
            # Processing the call keyword arguments (line 455)
            kwargs_254157 = {}
            # Getting the type of 'self' (line 455)
            self_254154 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 455, 29), 'self', False)
            # Obtaining the member '_make_flip_transform' of a type (line 455)
            _make_flip_transform_254155 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 455, 29), self_254154, '_make_flip_transform')
            # Calling _make_flip_transform(args, kwargs) (line 455)
            _make_flip_transform_call_result_254158 = invoke(stypy.reporting.localization.Localization(__file__, 455, 29), _make_flip_transform_254155, *[clippath_trans_254156], **kwargs_254157)
            
            # Assigning a type to the variable 'clippath_trans' (line 455)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 455, 12), 'clippath_trans', _make_flip_transform_call_result_254158)
            
            # Assigning a Tuple to a Name (line 456):
            
            # Assigning a Tuple to a Name (line 456):
            
            # Obtaining an instance of the builtin type 'tuple' (line 456)
            tuple_254159 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 456, 23), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 456)
            # Adding element type (line 456)
            
            # Call to id(...): (line 456)
            # Processing the call arguments (line 456)
            # Getting the type of 'clippath' (line 456)
            clippath_254161 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 456, 26), 'clippath', False)
            # Processing the call keyword arguments (line 456)
            kwargs_254162 = {}
            # Getting the type of 'id' (line 456)
            id_254160 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 456, 23), 'id', False)
            # Calling id(args, kwargs) (line 456)
            id_call_result_254163 = invoke(stypy.reporting.localization.Localization(__file__, 456, 23), id_254160, *[clippath_254161], **kwargs_254162)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 456, 23), tuple_254159, id_call_result_254163)
            # Adding element type (line 456)
            
            # Call to str(...): (line 456)
            # Processing the call arguments (line 456)
            # Getting the type of 'clippath_trans' (line 456)
            clippath_trans_254165 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 456, 41), 'clippath_trans', False)
            # Processing the call keyword arguments (line 456)
            kwargs_254166 = {}
            # Getting the type of 'str' (line 456)
            str_254164 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 456, 37), 'str', False)
            # Calling str(args, kwargs) (line 456)
            str_call_result_254167 = invoke(stypy.reporting.localization.Localization(__file__, 456, 37), str_254164, *[clippath_trans_254165], **kwargs_254166)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 456, 23), tuple_254159, str_call_result_254167)
            
            # Assigning a type to the variable 'dictkey' (line 456)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 456, 12), 'dictkey', tuple_254159)

            if more_types_in_union_254153:
                # Runtime conditional SSA for else branch (line 454)
                module_type_store.open_ssa_branch('idiom else')



        if ((not may_be_254152) or more_types_in_union_254153):
            
            # Type idiom detected: calculating its left and rigth part (line 457)
            # Getting the type of 'cliprect' (line 457)
            cliprect_254168 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 457, 13), 'cliprect')
            # Getting the type of 'None' (line 457)
            None_254169 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 457, 29), 'None')
            
            (may_be_254170, more_types_in_union_254171) = may_not_be_none(cliprect_254168, None_254169)

            if may_be_254170:

                if more_types_in_union_254171:
                    # Runtime conditional SSA (line 457)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
                else:
                    module_type_store = module_type_store

                
                # Assigning a Attribute to a Tuple (line 458):
                
                # Assigning a Subscript to a Name (line 458):
                
                # Obtaining the type of the subscript
                int_254172 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 458, 12), 'int')
                # Getting the type of 'cliprect' (line 458)
                cliprect_254173 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 458, 25), 'cliprect')
                # Obtaining the member 'bounds' of a type (line 458)
                bounds_254174 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 458, 25), cliprect_254173, 'bounds')
                # Obtaining the member '__getitem__' of a type (line 458)
                getitem___254175 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 458, 12), bounds_254174, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 458)
                subscript_call_result_254176 = invoke(stypy.reporting.localization.Localization(__file__, 458, 12), getitem___254175, int_254172)
                
                # Assigning a type to the variable 'tuple_var_assignment_252797' (line 458)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 458, 12), 'tuple_var_assignment_252797', subscript_call_result_254176)
                
                # Assigning a Subscript to a Name (line 458):
                
                # Obtaining the type of the subscript
                int_254177 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 458, 12), 'int')
                # Getting the type of 'cliprect' (line 458)
                cliprect_254178 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 458, 25), 'cliprect')
                # Obtaining the member 'bounds' of a type (line 458)
                bounds_254179 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 458, 25), cliprect_254178, 'bounds')
                # Obtaining the member '__getitem__' of a type (line 458)
                getitem___254180 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 458, 12), bounds_254179, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 458)
                subscript_call_result_254181 = invoke(stypy.reporting.localization.Localization(__file__, 458, 12), getitem___254180, int_254177)
                
                # Assigning a type to the variable 'tuple_var_assignment_252798' (line 458)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 458, 12), 'tuple_var_assignment_252798', subscript_call_result_254181)
                
                # Assigning a Subscript to a Name (line 458):
                
                # Obtaining the type of the subscript
                int_254182 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 458, 12), 'int')
                # Getting the type of 'cliprect' (line 458)
                cliprect_254183 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 458, 25), 'cliprect')
                # Obtaining the member 'bounds' of a type (line 458)
                bounds_254184 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 458, 25), cliprect_254183, 'bounds')
                # Obtaining the member '__getitem__' of a type (line 458)
                getitem___254185 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 458, 12), bounds_254184, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 458)
                subscript_call_result_254186 = invoke(stypy.reporting.localization.Localization(__file__, 458, 12), getitem___254185, int_254182)
                
                # Assigning a type to the variable 'tuple_var_assignment_252799' (line 458)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 458, 12), 'tuple_var_assignment_252799', subscript_call_result_254186)
                
                # Assigning a Subscript to a Name (line 458):
                
                # Obtaining the type of the subscript
                int_254187 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 458, 12), 'int')
                # Getting the type of 'cliprect' (line 458)
                cliprect_254188 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 458, 25), 'cliprect')
                # Obtaining the member 'bounds' of a type (line 458)
                bounds_254189 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 458, 25), cliprect_254188, 'bounds')
                # Obtaining the member '__getitem__' of a type (line 458)
                getitem___254190 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 458, 12), bounds_254189, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 458)
                subscript_call_result_254191 = invoke(stypy.reporting.localization.Localization(__file__, 458, 12), getitem___254190, int_254187)
                
                # Assigning a type to the variable 'tuple_var_assignment_252800' (line 458)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 458, 12), 'tuple_var_assignment_252800', subscript_call_result_254191)
                
                # Assigning a Name to a Name (line 458):
                # Getting the type of 'tuple_var_assignment_252797' (line 458)
                tuple_var_assignment_252797_254192 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 458, 12), 'tuple_var_assignment_252797')
                # Assigning a type to the variable 'x' (line 458)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 458, 12), 'x', tuple_var_assignment_252797_254192)
                
                # Assigning a Name to a Name (line 458):
                # Getting the type of 'tuple_var_assignment_252798' (line 458)
                tuple_var_assignment_252798_254193 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 458, 12), 'tuple_var_assignment_252798')
                # Assigning a type to the variable 'y' (line 458)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 458, 15), 'y', tuple_var_assignment_252798_254193)
                
                # Assigning a Name to a Name (line 458):
                # Getting the type of 'tuple_var_assignment_252799' (line 458)
                tuple_var_assignment_252799_254194 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 458, 12), 'tuple_var_assignment_252799')
                # Assigning a type to the variable 'w' (line 458)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 458, 18), 'w', tuple_var_assignment_252799_254194)
                
                # Assigning a Name to a Name (line 458):
                # Getting the type of 'tuple_var_assignment_252800' (line 458)
                tuple_var_assignment_252800_254195 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 458, 12), 'tuple_var_assignment_252800')
                # Assigning a type to the variable 'h' (line 458)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 458, 21), 'h', tuple_var_assignment_252800_254195)
                
                # Assigning a BinOp to a Name (line 459):
                
                # Assigning a BinOp to a Name (line 459):
                # Getting the type of 'self' (line 459)
                self_254196 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 459, 16), 'self')
                # Obtaining the member 'height' of a type (line 459)
                height_254197 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 459, 16), self_254196, 'height')
                # Getting the type of 'y' (line 459)
                y_254198 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 459, 29), 'y')
                # Getting the type of 'h' (line 459)
                h_254199 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 459, 31), 'h')
                # Applying the binary operator '+' (line 459)
                result_add_254200 = python_operator(stypy.reporting.localization.Localization(__file__, 459, 29), '+', y_254198, h_254199)
                
                # Applying the binary operator '-' (line 459)
                result_sub_254201 = python_operator(stypy.reporting.localization.Localization(__file__, 459, 16), '-', height_254197, result_add_254200)
                
                # Assigning a type to the variable 'y' (line 459)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 459, 12), 'y', result_sub_254201)
                
                # Assigning a Tuple to a Name (line 460):
                
                # Assigning a Tuple to a Name (line 460):
                
                # Obtaining an instance of the builtin type 'tuple' (line 460)
                tuple_254202 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 460, 23), 'tuple')
                # Adding type elements to the builtin type 'tuple' instance (line 460)
                # Adding element type (line 460)
                # Getting the type of 'x' (line 460)
                x_254203 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 460, 23), 'x')
                add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 460, 23), tuple_254202, x_254203)
                # Adding element type (line 460)
                # Getting the type of 'y' (line 460)
                y_254204 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 460, 26), 'y')
                add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 460, 23), tuple_254202, y_254204)
                # Adding element type (line 460)
                # Getting the type of 'w' (line 460)
                w_254205 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 460, 29), 'w')
                add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 460, 23), tuple_254202, w_254205)
                # Adding element type (line 460)
                # Getting the type of 'h' (line 460)
                h_254206 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 460, 32), 'h')
                add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 460, 23), tuple_254202, h_254206)
                
                # Assigning a type to the variable 'dictkey' (line 460)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 460, 12), 'dictkey', tuple_254202)

                if more_types_in_union_254171:
                    # Runtime conditional SSA for else branch (line 457)
                    module_type_store.open_ssa_branch('idiom else')



            if ((not may_be_254170) or more_types_in_union_254171):
                # Getting the type of 'None' (line 462)
                None_254207 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 462, 19), 'None')
                # Assigning a type to the variable 'stypy_return_type' (line 462)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 462, 12), 'stypy_return_type', None_254207)

                if (may_be_254170 and more_types_in_union_254171):
                    # SSA join for if statement (line 457)
                    module_type_store = module_type_store.join_ssa_context()


            

            if (may_be_254152 and more_types_in_union_254153):
                # SSA join for if statement (line 454)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Call to a Name (line 464):
        
        # Assigning a Call to a Name (line 464):
        
        # Call to get(...): (line 464)
        # Processing the call arguments (line 464)
        # Getting the type of 'dictkey' (line 464)
        dictkey_254211 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 464, 31), 'dictkey', False)
        # Processing the call keyword arguments (line 464)
        kwargs_254212 = {}
        # Getting the type of 'self' (line 464)
        self_254208 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 464, 15), 'self', False)
        # Obtaining the member '_clipd' of a type (line 464)
        _clipd_254209 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 464, 15), self_254208, '_clipd')
        # Obtaining the member 'get' of a type (line 464)
        get_254210 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 464, 15), _clipd_254209, 'get')
        # Calling get(args, kwargs) (line 464)
        get_call_result_254213 = invoke(stypy.reporting.localization.Localization(__file__, 464, 15), get_254210, *[dictkey_254211], **kwargs_254212)
        
        # Assigning a type to the variable 'clip' (line 464)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 464, 8), 'clip', get_call_result_254213)
        
        # Type idiom detected: calculating its left and rigth part (line 465)
        # Getting the type of 'clip' (line 465)
        clip_254214 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 465, 11), 'clip')
        # Getting the type of 'None' (line 465)
        None_254215 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 465, 19), 'None')
        
        (may_be_254216, more_types_in_union_254217) = may_be_none(clip_254214, None_254215)

        if may_be_254216:

            if more_types_in_union_254217:
                # Runtime conditional SSA (line 465)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Call to a Name (line 466):
            
            # Assigning a Call to a Name (line 466):
            
            # Call to _make_id(...): (line 466)
            # Processing the call arguments (line 466)
            unicode_254220 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 466, 32), 'unicode', u'p')
            # Getting the type of 'dictkey' (line 466)
            dictkey_254221 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 466, 37), 'dictkey', False)
            # Processing the call keyword arguments (line 466)
            kwargs_254222 = {}
            # Getting the type of 'self' (line 466)
            self_254218 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 466, 18), 'self', False)
            # Obtaining the member '_make_id' of a type (line 466)
            _make_id_254219 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 466, 18), self_254218, '_make_id')
            # Calling _make_id(args, kwargs) (line 466)
            _make_id_call_result_254223 = invoke(stypy.reporting.localization.Localization(__file__, 466, 18), _make_id_254219, *[unicode_254220, dictkey_254221], **kwargs_254222)
            
            # Assigning a type to the variable 'oid' (line 466)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 466, 12), 'oid', _make_id_call_result_254223)
            
            # Type idiom detected: calculating its left and rigth part (line 467)
            # Getting the type of 'clippath' (line 467)
            clippath_254224 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 467, 12), 'clippath')
            # Getting the type of 'None' (line 467)
            None_254225 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 467, 31), 'None')
            
            (may_be_254226, more_types_in_union_254227) = may_not_be_none(clippath_254224, None_254225)

            if may_be_254226:

                if more_types_in_union_254227:
                    # Runtime conditional SSA (line 467)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
                else:
                    module_type_store = module_type_store

                
                # Assigning a Tuple to a Subscript (line 468):
                
                # Assigning a Tuple to a Subscript (line 468):
                
                # Obtaining an instance of the builtin type 'tuple' (line 468)
                tuple_254228 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 468, 40), 'tuple')
                # Adding type elements to the builtin type 'tuple' instance (line 468)
                # Adding element type (line 468)
                
                # Obtaining an instance of the builtin type 'tuple' (line 468)
                tuple_254229 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 468, 41), 'tuple')
                # Adding type elements to the builtin type 'tuple' instance (line 468)
                # Adding element type (line 468)
                # Getting the type of 'clippath' (line 468)
                clippath_254230 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 468, 41), 'clippath')
                add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 468, 41), tuple_254229, clippath_254230)
                # Adding element type (line 468)
                # Getting the type of 'clippath_trans' (line 468)
                clippath_trans_254231 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 468, 51), 'clippath_trans')
                add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 468, 41), tuple_254229, clippath_trans_254231)
                
                add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 468, 40), tuple_254228, tuple_254229)
                # Adding element type (line 468)
                # Getting the type of 'oid' (line 468)
                oid_254232 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 468, 68), 'oid')
                add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 468, 40), tuple_254228, oid_254232)
                
                # Getting the type of 'self' (line 468)
                self_254233 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 468, 16), 'self')
                # Obtaining the member '_clipd' of a type (line 468)
                _clipd_254234 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 468, 16), self_254233, '_clipd')
                # Getting the type of 'dictkey' (line 468)
                dictkey_254235 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 468, 28), 'dictkey')
                # Storing an element on a container (line 468)
                set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 468, 16), _clipd_254234, (dictkey_254235, tuple_254228))

                if more_types_in_union_254227:
                    # Runtime conditional SSA for else branch (line 467)
                    module_type_store.open_ssa_branch('idiom else')



            if ((not may_be_254226) or more_types_in_union_254227):
                
                # Assigning a Tuple to a Subscript (line 470):
                
                # Assigning a Tuple to a Subscript (line 470):
                
                # Obtaining an instance of the builtin type 'tuple' (line 470)
                tuple_254236 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 470, 40), 'tuple')
                # Adding type elements to the builtin type 'tuple' instance (line 470)
                # Adding element type (line 470)
                # Getting the type of 'dictkey' (line 470)
                dictkey_254237 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 470, 40), 'dictkey')
                add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 470, 40), tuple_254236, dictkey_254237)
                # Adding element type (line 470)
                # Getting the type of 'oid' (line 470)
                oid_254238 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 470, 49), 'oid')
                add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 470, 40), tuple_254236, oid_254238)
                
                # Getting the type of 'self' (line 470)
                self_254239 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 470, 16), 'self')
                # Obtaining the member '_clipd' of a type (line 470)
                _clipd_254240 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 470, 16), self_254239, '_clipd')
                # Getting the type of 'dictkey' (line 470)
                dictkey_254241 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 470, 28), 'dictkey')
                # Storing an element on a container (line 470)
                set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 470, 16), _clipd_254240, (dictkey_254241, tuple_254236))

                if (may_be_254226 and more_types_in_union_254227):
                    # SSA join for if statement (line 467)
                    module_type_store = module_type_store.join_ssa_context()


            

            if more_types_in_union_254217:
                # Runtime conditional SSA for else branch (line 465)
                module_type_store.open_ssa_branch('idiom else')



        if ((not may_be_254216) or more_types_in_union_254217):
            
            # Assigning a Name to a Tuple (line 472):
            
            # Assigning a Subscript to a Name (line 472):
            
            # Obtaining the type of the subscript
            int_254242 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 472, 12), 'int')
            # Getting the type of 'clip' (line 472)
            clip_254243 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 472, 24), 'clip')
            # Obtaining the member '__getitem__' of a type (line 472)
            getitem___254244 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 472, 12), clip_254243, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 472)
            subscript_call_result_254245 = invoke(stypy.reporting.localization.Localization(__file__, 472, 12), getitem___254244, int_254242)
            
            # Assigning a type to the variable 'tuple_var_assignment_252801' (line 472)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 472, 12), 'tuple_var_assignment_252801', subscript_call_result_254245)
            
            # Assigning a Subscript to a Name (line 472):
            
            # Obtaining the type of the subscript
            int_254246 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 472, 12), 'int')
            # Getting the type of 'clip' (line 472)
            clip_254247 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 472, 24), 'clip')
            # Obtaining the member '__getitem__' of a type (line 472)
            getitem___254248 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 472, 12), clip_254247, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 472)
            subscript_call_result_254249 = invoke(stypy.reporting.localization.Localization(__file__, 472, 12), getitem___254248, int_254246)
            
            # Assigning a type to the variable 'tuple_var_assignment_252802' (line 472)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 472, 12), 'tuple_var_assignment_252802', subscript_call_result_254249)
            
            # Assigning a Name to a Name (line 472):
            # Getting the type of 'tuple_var_assignment_252801' (line 472)
            tuple_var_assignment_252801_254250 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 472, 12), 'tuple_var_assignment_252801')
            # Assigning a type to the variable 'clip' (line 472)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 472, 12), 'clip', tuple_var_assignment_252801_254250)
            
            # Assigning a Name to a Name (line 472):
            # Getting the type of 'tuple_var_assignment_252802' (line 472)
            tuple_var_assignment_252802_254251 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 472, 12), 'tuple_var_assignment_252802')
            # Assigning a type to the variable 'oid' (line 472)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 472, 18), 'oid', tuple_var_assignment_252802_254251)

            if (may_be_254216 and more_types_in_union_254217):
                # SSA join for if statement (line 465)
                module_type_store = module_type_store.join_ssa_context()


        
        # Getting the type of 'oid' (line 473)
        oid_254252 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 473, 15), 'oid')
        # Assigning a type to the variable 'stypy_return_type' (line 473)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 473, 8), 'stypy_return_type', oid_254252)
        
        # ################# End of '_get_clip(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_get_clip' in the type store
        # Getting the type of 'stypy_return_type' (line 451)
        stypy_return_type_254253 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 451, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_254253)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_get_clip'
        return stypy_return_type_254253


    @norecursion
    def _write_clips(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_write_clips'
        module_type_store = module_type_store.open_function_context('_write_clips', 475, 4, False)
        # Assigning a type to the variable 'self' (line 476)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 476, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererSVG._write_clips.__dict__.__setitem__('stypy_localization', localization)
        RendererSVG._write_clips.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererSVG._write_clips.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererSVG._write_clips.__dict__.__setitem__('stypy_function_name', 'RendererSVG._write_clips')
        RendererSVG._write_clips.__dict__.__setitem__('stypy_param_names_list', [])
        RendererSVG._write_clips.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererSVG._write_clips.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererSVG._write_clips.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererSVG._write_clips.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererSVG._write_clips.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererSVG._write_clips.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererSVG._write_clips', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_write_clips', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_write_clips(...)' code ##################

        
        
        
        # Call to len(...): (line 476)
        # Processing the call arguments (line 476)
        # Getting the type of 'self' (line 476)
        self_254255 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 476, 19), 'self', False)
        # Obtaining the member '_clipd' of a type (line 476)
        _clipd_254256 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 476, 19), self_254255, '_clipd')
        # Processing the call keyword arguments (line 476)
        kwargs_254257 = {}
        # Getting the type of 'len' (line 476)
        len_254254 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 476, 15), 'len', False)
        # Calling len(args, kwargs) (line 476)
        len_call_result_254258 = invoke(stypy.reporting.localization.Localization(__file__, 476, 15), len_254254, *[_clipd_254256], **kwargs_254257)
        
        # Applying the 'not' unary operator (line 476)
        result_not__254259 = python_operator(stypy.reporting.localization.Localization(__file__, 476, 11), 'not', len_call_result_254258)
        
        # Testing the type of an if condition (line 476)
        if_condition_254260 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 476, 8), result_not__254259)
        # Assigning a type to the variable 'if_condition_254260' (line 476)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 476, 8), 'if_condition_254260', if_condition_254260)
        # SSA begins for if statement (line 476)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        # Assigning a type to the variable 'stypy_return_type' (line 477)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 477, 12), 'stypy_return_type', types.NoneType)
        # SSA join for if statement (line 476)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Attribute to a Name (line 478):
        
        # Assigning a Attribute to a Name (line 478):
        # Getting the type of 'self' (line 478)
        self_254261 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 478, 17), 'self')
        # Obtaining the member 'writer' of a type (line 478)
        writer_254262 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 478, 17), self_254261, 'writer')
        # Assigning a type to the variable 'writer' (line 478)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 478, 8), 'writer', writer_254262)
        
        # Call to start(...): (line 479)
        # Processing the call arguments (line 479)
        unicode_254265 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 479, 21), 'unicode', u'defs')
        # Processing the call keyword arguments (line 479)
        kwargs_254266 = {}
        # Getting the type of 'writer' (line 479)
        writer_254263 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 479, 8), 'writer', False)
        # Obtaining the member 'start' of a type (line 479)
        start_254264 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 479, 8), writer_254263, 'start')
        # Calling start(args, kwargs) (line 479)
        start_call_result_254267 = invoke(stypy.reporting.localization.Localization(__file__, 479, 8), start_254264, *[unicode_254265], **kwargs_254266)
        
        
        
        # Call to itervalues(...): (line 480)
        # Processing the call arguments (line 480)
        # Getting the type of 'self' (line 480)
        self_254270 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 480, 40), 'self', False)
        # Obtaining the member '_clipd' of a type (line 480)
        _clipd_254271 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 480, 40), self_254270, '_clipd')
        # Processing the call keyword arguments (line 480)
        kwargs_254272 = {}
        # Getting the type of 'six' (line 480)
        six_254268 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 480, 25), 'six', False)
        # Obtaining the member 'itervalues' of a type (line 480)
        itervalues_254269 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 480, 25), six_254268, 'itervalues')
        # Calling itervalues(args, kwargs) (line 480)
        itervalues_call_result_254273 = invoke(stypy.reporting.localization.Localization(__file__, 480, 25), itervalues_254269, *[_clipd_254271], **kwargs_254272)
        
        # Testing the type of a for loop iterable (line 480)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 480, 8), itervalues_call_result_254273)
        # Getting the type of the for loop variable (line 480)
        for_loop_var_254274 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 480, 8), itervalues_call_result_254273)
        # Assigning a type to the variable 'clip' (line 480)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 480, 8), 'clip', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 480, 8), for_loop_var_254274))
        # Assigning a type to the variable 'oid' (line 480)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 480, 8), 'oid', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 480, 8), for_loop_var_254274))
        # SSA begins for a for statement (line 480)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to start(...): (line 481)
        # Processing the call arguments (line 481)
        unicode_254277 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 481, 25), 'unicode', u'clipPath')
        # Processing the call keyword arguments (line 481)
        # Getting the type of 'oid' (line 481)
        oid_254278 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 481, 40), 'oid', False)
        keyword_254279 = oid_254278
        kwargs_254280 = {'id': keyword_254279}
        # Getting the type of 'writer' (line 481)
        writer_254275 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 481, 12), 'writer', False)
        # Obtaining the member 'start' of a type (line 481)
        start_254276 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 481, 12), writer_254275, 'start')
        # Calling start(args, kwargs) (line 481)
        start_call_result_254281 = invoke(stypy.reporting.localization.Localization(__file__, 481, 12), start_254276, *[unicode_254277], **kwargs_254280)
        
        
        
        
        # Call to len(...): (line 482)
        # Processing the call arguments (line 482)
        # Getting the type of 'clip' (line 482)
        clip_254283 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 482, 19), 'clip', False)
        # Processing the call keyword arguments (line 482)
        kwargs_254284 = {}
        # Getting the type of 'len' (line 482)
        len_254282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 482, 15), 'len', False)
        # Calling len(args, kwargs) (line 482)
        len_call_result_254285 = invoke(stypy.reporting.localization.Localization(__file__, 482, 15), len_254282, *[clip_254283], **kwargs_254284)
        
        int_254286 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 482, 28), 'int')
        # Applying the binary operator '==' (line 482)
        result_eq_254287 = python_operator(stypy.reporting.localization.Localization(__file__, 482, 15), '==', len_call_result_254285, int_254286)
        
        # Testing the type of an if condition (line 482)
        if_condition_254288 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 482, 12), result_eq_254287)
        # Assigning a type to the variable 'if_condition_254288' (line 482)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 482, 12), 'if_condition_254288', if_condition_254288)
        # SSA begins for if statement (line 482)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Name to a Tuple (line 483):
        
        # Assigning a Subscript to a Name (line 483):
        
        # Obtaining the type of the subscript
        int_254289 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 483, 16), 'int')
        # Getting the type of 'clip' (line 483)
        clip_254290 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 483, 43), 'clip')
        # Obtaining the member '__getitem__' of a type (line 483)
        getitem___254291 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 483, 16), clip_254290, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 483)
        subscript_call_result_254292 = invoke(stypy.reporting.localization.Localization(__file__, 483, 16), getitem___254291, int_254289)
        
        # Assigning a type to the variable 'tuple_var_assignment_252803' (line 483)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 483, 16), 'tuple_var_assignment_252803', subscript_call_result_254292)
        
        # Assigning a Subscript to a Name (line 483):
        
        # Obtaining the type of the subscript
        int_254293 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 483, 16), 'int')
        # Getting the type of 'clip' (line 483)
        clip_254294 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 483, 43), 'clip')
        # Obtaining the member '__getitem__' of a type (line 483)
        getitem___254295 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 483, 16), clip_254294, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 483)
        subscript_call_result_254296 = invoke(stypy.reporting.localization.Localization(__file__, 483, 16), getitem___254295, int_254293)
        
        # Assigning a type to the variable 'tuple_var_assignment_252804' (line 483)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 483, 16), 'tuple_var_assignment_252804', subscript_call_result_254296)
        
        # Assigning a Name to a Name (line 483):
        # Getting the type of 'tuple_var_assignment_252803' (line 483)
        tuple_var_assignment_252803_254297 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 483, 16), 'tuple_var_assignment_252803')
        # Assigning a type to the variable 'clippath' (line 483)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 483, 16), 'clippath', tuple_var_assignment_252803_254297)
        
        # Assigning a Name to a Name (line 483):
        # Getting the type of 'tuple_var_assignment_252804' (line 483)
        tuple_var_assignment_252804_254298 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 483, 16), 'tuple_var_assignment_252804')
        # Assigning a type to the variable 'clippath_trans' (line 483)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 483, 26), 'clippath_trans', tuple_var_assignment_252804_254298)
        
        # Assigning a Call to a Name (line 484):
        
        # Assigning a Call to a Name (line 484):
        
        # Call to _convert_path(...): (line 484)
        # Processing the call arguments (line 484)
        # Getting the type of 'clippath' (line 484)
        clippath_254301 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 484, 47), 'clippath', False)
        # Getting the type of 'clippath_trans' (line 484)
        clippath_trans_254302 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 484, 57), 'clippath_trans', False)
        # Processing the call keyword arguments (line 484)
        # Getting the type of 'False' (line 484)
        False_254303 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 484, 82), 'False', False)
        keyword_254304 = False_254303
        kwargs_254305 = {'simplify': keyword_254304}
        # Getting the type of 'self' (line 484)
        self_254299 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 484, 28), 'self', False)
        # Obtaining the member '_convert_path' of a type (line 484)
        _convert_path_254300 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 484, 28), self_254299, '_convert_path')
        # Calling _convert_path(args, kwargs) (line 484)
        _convert_path_call_result_254306 = invoke(stypy.reporting.localization.Localization(__file__, 484, 28), _convert_path_254300, *[clippath_254301, clippath_trans_254302], **kwargs_254305)
        
        # Assigning a type to the variable 'path_data' (line 484)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 484, 16), 'path_data', _convert_path_call_result_254306)
        
        # Call to element(...): (line 485)
        # Processing the call arguments (line 485)
        unicode_254309 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 485, 31), 'unicode', u'path')
        # Processing the call keyword arguments (line 485)
        # Getting the type of 'path_data' (line 485)
        path_data_254310 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 485, 41), 'path_data', False)
        keyword_254311 = path_data_254310
        kwargs_254312 = {'d': keyword_254311}
        # Getting the type of 'writer' (line 485)
        writer_254307 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 485, 16), 'writer', False)
        # Obtaining the member 'element' of a type (line 485)
        element_254308 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 485, 16), writer_254307, 'element')
        # Calling element(args, kwargs) (line 485)
        element_call_result_254313 = invoke(stypy.reporting.localization.Localization(__file__, 485, 16), element_254308, *[unicode_254309], **kwargs_254312)
        
        # SSA branch for the else part of an if statement (line 482)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Name to a Tuple (line 487):
        
        # Assigning a Subscript to a Name (line 487):
        
        # Obtaining the type of the subscript
        int_254314 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 487, 16), 'int')
        # Getting the type of 'clip' (line 487)
        clip_254315 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 487, 29), 'clip')
        # Obtaining the member '__getitem__' of a type (line 487)
        getitem___254316 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 487, 16), clip_254315, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 487)
        subscript_call_result_254317 = invoke(stypy.reporting.localization.Localization(__file__, 487, 16), getitem___254316, int_254314)
        
        # Assigning a type to the variable 'tuple_var_assignment_252805' (line 487)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 487, 16), 'tuple_var_assignment_252805', subscript_call_result_254317)
        
        # Assigning a Subscript to a Name (line 487):
        
        # Obtaining the type of the subscript
        int_254318 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 487, 16), 'int')
        # Getting the type of 'clip' (line 487)
        clip_254319 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 487, 29), 'clip')
        # Obtaining the member '__getitem__' of a type (line 487)
        getitem___254320 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 487, 16), clip_254319, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 487)
        subscript_call_result_254321 = invoke(stypy.reporting.localization.Localization(__file__, 487, 16), getitem___254320, int_254318)
        
        # Assigning a type to the variable 'tuple_var_assignment_252806' (line 487)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 487, 16), 'tuple_var_assignment_252806', subscript_call_result_254321)
        
        # Assigning a Subscript to a Name (line 487):
        
        # Obtaining the type of the subscript
        int_254322 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 487, 16), 'int')
        # Getting the type of 'clip' (line 487)
        clip_254323 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 487, 29), 'clip')
        # Obtaining the member '__getitem__' of a type (line 487)
        getitem___254324 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 487, 16), clip_254323, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 487)
        subscript_call_result_254325 = invoke(stypy.reporting.localization.Localization(__file__, 487, 16), getitem___254324, int_254322)
        
        # Assigning a type to the variable 'tuple_var_assignment_252807' (line 487)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 487, 16), 'tuple_var_assignment_252807', subscript_call_result_254325)
        
        # Assigning a Subscript to a Name (line 487):
        
        # Obtaining the type of the subscript
        int_254326 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 487, 16), 'int')
        # Getting the type of 'clip' (line 487)
        clip_254327 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 487, 29), 'clip')
        # Obtaining the member '__getitem__' of a type (line 487)
        getitem___254328 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 487, 16), clip_254327, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 487)
        subscript_call_result_254329 = invoke(stypy.reporting.localization.Localization(__file__, 487, 16), getitem___254328, int_254326)
        
        # Assigning a type to the variable 'tuple_var_assignment_252808' (line 487)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 487, 16), 'tuple_var_assignment_252808', subscript_call_result_254329)
        
        # Assigning a Name to a Name (line 487):
        # Getting the type of 'tuple_var_assignment_252805' (line 487)
        tuple_var_assignment_252805_254330 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 487, 16), 'tuple_var_assignment_252805')
        # Assigning a type to the variable 'x' (line 487)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 487, 16), 'x', tuple_var_assignment_252805_254330)
        
        # Assigning a Name to a Name (line 487):
        # Getting the type of 'tuple_var_assignment_252806' (line 487)
        tuple_var_assignment_252806_254331 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 487, 16), 'tuple_var_assignment_252806')
        # Assigning a type to the variable 'y' (line 487)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 487, 19), 'y', tuple_var_assignment_252806_254331)
        
        # Assigning a Name to a Name (line 487):
        # Getting the type of 'tuple_var_assignment_252807' (line 487)
        tuple_var_assignment_252807_254332 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 487, 16), 'tuple_var_assignment_252807')
        # Assigning a type to the variable 'w' (line 487)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 487, 22), 'w', tuple_var_assignment_252807_254332)
        
        # Assigning a Name to a Name (line 487):
        # Getting the type of 'tuple_var_assignment_252808' (line 487)
        tuple_var_assignment_252808_254333 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 487, 16), 'tuple_var_assignment_252808')
        # Assigning a type to the variable 'h' (line 487)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 487, 25), 'h', tuple_var_assignment_252808_254333)
        
        # Call to element(...): (line 488)
        # Processing the call arguments (line 488)
        unicode_254336 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 489, 20), 'unicode', u'rect')
        # Processing the call keyword arguments (line 488)
        
        # Call to short_float_fmt(...): (line 490)
        # Processing the call arguments (line 490)
        # Getting the type of 'x' (line 490)
        x_254338 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 490, 38), 'x', False)
        # Processing the call keyword arguments (line 490)
        kwargs_254339 = {}
        # Getting the type of 'short_float_fmt' (line 490)
        short_float_fmt_254337 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 490, 22), 'short_float_fmt', False)
        # Calling short_float_fmt(args, kwargs) (line 490)
        short_float_fmt_call_result_254340 = invoke(stypy.reporting.localization.Localization(__file__, 490, 22), short_float_fmt_254337, *[x_254338], **kwargs_254339)
        
        keyword_254341 = short_float_fmt_call_result_254340
        
        # Call to short_float_fmt(...): (line 491)
        # Processing the call arguments (line 491)
        # Getting the type of 'y' (line 491)
        y_254343 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 491, 38), 'y', False)
        # Processing the call keyword arguments (line 491)
        kwargs_254344 = {}
        # Getting the type of 'short_float_fmt' (line 491)
        short_float_fmt_254342 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 491, 22), 'short_float_fmt', False)
        # Calling short_float_fmt(args, kwargs) (line 491)
        short_float_fmt_call_result_254345 = invoke(stypy.reporting.localization.Localization(__file__, 491, 22), short_float_fmt_254342, *[y_254343], **kwargs_254344)
        
        keyword_254346 = short_float_fmt_call_result_254345
        
        # Call to short_float_fmt(...): (line 492)
        # Processing the call arguments (line 492)
        # Getting the type of 'w' (line 492)
        w_254348 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 492, 42), 'w', False)
        # Processing the call keyword arguments (line 492)
        kwargs_254349 = {}
        # Getting the type of 'short_float_fmt' (line 492)
        short_float_fmt_254347 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 492, 26), 'short_float_fmt', False)
        # Calling short_float_fmt(args, kwargs) (line 492)
        short_float_fmt_call_result_254350 = invoke(stypy.reporting.localization.Localization(__file__, 492, 26), short_float_fmt_254347, *[w_254348], **kwargs_254349)
        
        keyword_254351 = short_float_fmt_call_result_254350
        
        # Call to short_float_fmt(...): (line 493)
        # Processing the call arguments (line 493)
        # Getting the type of 'h' (line 493)
        h_254353 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 493, 43), 'h', False)
        # Processing the call keyword arguments (line 493)
        kwargs_254354 = {}
        # Getting the type of 'short_float_fmt' (line 493)
        short_float_fmt_254352 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 493, 27), 'short_float_fmt', False)
        # Calling short_float_fmt(args, kwargs) (line 493)
        short_float_fmt_call_result_254355 = invoke(stypy.reporting.localization.Localization(__file__, 493, 27), short_float_fmt_254352, *[h_254353], **kwargs_254354)
        
        keyword_254356 = short_float_fmt_call_result_254355
        kwargs_254357 = {'y': keyword_254346, 'x': keyword_254341, 'height': keyword_254356, 'width': keyword_254351}
        # Getting the type of 'writer' (line 488)
        writer_254334 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 488, 16), 'writer', False)
        # Obtaining the member 'element' of a type (line 488)
        element_254335 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 488, 16), writer_254334, 'element')
        # Calling element(args, kwargs) (line 488)
        element_call_result_254358 = invoke(stypy.reporting.localization.Localization(__file__, 488, 16), element_254335, *[unicode_254336], **kwargs_254357)
        
        # SSA join for if statement (line 482)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to end(...): (line 494)
        # Processing the call arguments (line 494)
        unicode_254361 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 494, 23), 'unicode', u'clipPath')
        # Processing the call keyword arguments (line 494)
        kwargs_254362 = {}
        # Getting the type of 'writer' (line 494)
        writer_254359 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 494, 12), 'writer', False)
        # Obtaining the member 'end' of a type (line 494)
        end_254360 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 494, 12), writer_254359, 'end')
        # Calling end(args, kwargs) (line 494)
        end_call_result_254363 = invoke(stypy.reporting.localization.Localization(__file__, 494, 12), end_254360, *[unicode_254361], **kwargs_254362)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to end(...): (line 495)
        # Processing the call arguments (line 495)
        unicode_254366 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 495, 19), 'unicode', u'defs')
        # Processing the call keyword arguments (line 495)
        kwargs_254367 = {}
        # Getting the type of 'writer' (line 495)
        writer_254364 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 495, 8), 'writer', False)
        # Obtaining the member 'end' of a type (line 495)
        end_254365 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 495, 8), writer_254364, 'end')
        # Calling end(args, kwargs) (line 495)
        end_call_result_254368 = invoke(stypy.reporting.localization.Localization(__file__, 495, 8), end_254365, *[unicode_254366], **kwargs_254367)
        
        
        # ################# End of '_write_clips(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_write_clips' in the type store
        # Getting the type of 'stypy_return_type' (line 475)
        stypy_return_type_254369 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 475, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_254369)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_write_clips'
        return stypy_return_type_254369


    @norecursion
    def _write_svgfonts(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_write_svgfonts'
        module_type_store = module_type_store.open_function_context('_write_svgfonts', 497, 4, False)
        # Assigning a type to the variable 'self' (line 498)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 498, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererSVG._write_svgfonts.__dict__.__setitem__('stypy_localization', localization)
        RendererSVG._write_svgfonts.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererSVG._write_svgfonts.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererSVG._write_svgfonts.__dict__.__setitem__('stypy_function_name', 'RendererSVG._write_svgfonts')
        RendererSVG._write_svgfonts.__dict__.__setitem__('stypy_param_names_list', [])
        RendererSVG._write_svgfonts.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererSVG._write_svgfonts.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererSVG._write_svgfonts.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererSVG._write_svgfonts.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererSVG._write_svgfonts.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererSVG._write_svgfonts.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererSVG._write_svgfonts', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_write_svgfonts', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_write_svgfonts(...)' code ##################

        
        
        
        
        # Obtaining the type of the subscript
        unicode_254370 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 498, 24), 'unicode', u'svg.fonttype')
        # Getting the type of 'rcParams' (line 498)
        rcParams_254371 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 498, 15), 'rcParams')
        # Obtaining the member '__getitem__' of a type (line 498)
        getitem___254372 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 498, 15), rcParams_254371, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 498)
        subscript_call_result_254373 = invoke(stypy.reporting.localization.Localization(__file__, 498, 15), getitem___254372, unicode_254370)
        
        unicode_254374 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 498, 43), 'unicode', u'svgfont')
        # Applying the binary operator '==' (line 498)
        result_eq_254375 = python_operator(stypy.reporting.localization.Localization(__file__, 498, 15), '==', subscript_call_result_254373, unicode_254374)
        
        # Applying the 'not' unary operator (line 498)
        result_not__254376 = python_operator(stypy.reporting.localization.Localization(__file__, 498, 11), 'not', result_eq_254375)
        
        # Testing the type of an if condition (line 498)
        if_condition_254377 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 498, 8), result_not__254376)
        # Assigning a type to the variable 'if_condition_254377' (line 498)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 498, 8), 'if_condition_254377', if_condition_254377)
        # SSA begins for if statement (line 498)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        # Assigning a type to the variable 'stypy_return_type' (line 499)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 499, 12), 'stypy_return_type', types.NoneType)
        # SSA join for if statement (line 498)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Attribute to a Name (line 501):
        
        # Assigning a Attribute to a Name (line 501):
        # Getting the type of 'self' (line 501)
        self_254378 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 501, 17), 'self')
        # Obtaining the member 'writer' of a type (line 501)
        writer_254379 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 501, 17), self_254378, 'writer')
        # Assigning a type to the variable 'writer' (line 501)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 501, 8), 'writer', writer_254379)
        
        # Call to start(...): (line 502)
        # Processing the call arguments (line 502)
        unicode_254382 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 502, 21), 'unicode', u'defs')
        # Processing the call keyword arguments (line 502)
        kwargs_254383 = {}
        # Getting the type of 'writer' (line 502)
        writer_254380 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 502, 8), 'writer', False)
        # Obtaining the member 'start' of a type (line 502)
        start_254381 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 502, 8), writer_254380, 'start')
        # Calling start(args, kwargs) (line 502)
        start_call_result_254384 = invoke(stypy.reporting.localization.Localization(__file__, 502, 8), start_254381, *[unicode_254382], **kwargs_254383)
        
        
        
        # Call to iteritems(...): (line 503)
        # Processing the call arguments (line 503)
        # Getting the type of 'self' (line 503)
        self_254387 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 503, 47), 'self', False)
        # Obtaining the member '_fonts' of a type (line 503)
        _fonts_254388 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 503, 47), self_254387, '_fonts')
        # Processing the call keyword arguments (line 503)
        kwargs_254389 = {}
        # Getting the type of 'six' (line 503)
        six_254385 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 503, 33), 'six', False)
        # Obtaining the member 'iteritems' of a type (line 503)
        iteritems_254386 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 503, 33), six_254385, 'iteritems')
        # Calling iteritems(args, kwargs) (line 503)
        iteritems_call_result_254390 = invoke(stypy.reporting.localization.Localization(__file__, 503, 33), iteritems_254386, *[_fonts_254388], **kwargs_254389)
        
        # Testing the type of a for loop iterable (line 503)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 503, 8), iteritems_call_result_254390)
        # Getting the type of the for loop variable (line 503)
        for_loop_var_254391 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 503, 8), iteritems_call_result_254390)
        # Assigning a type to the variable 'font_fname' (line 503)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 503, 8), 'font_fname', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 503, 8), for_loop_var_254391))
        # Assigning a type to the variable 'chars' (line 503)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 503, 8), 'chars', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 503, 8), for_loop_var_254391))
        # SSA begins for a for statement (line 503)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 504):
        
        # Assigning a Call to a Name (line 504):
        
        # Call to get_font(...): (line 504)
        # Processing the call arguments (line 504)
        # Getting the type of 'font_fname' (line 504)
        font_fname_254393 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 504, 28), 'font_fname', False)
        # Processing the call keyword arguments (line 504)
        kwargs_254394 = {}
        # Getting the type of 'get_font' (line 504)
        get_font_254392 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 504, 19), 'get_font', False)
        # Calling get_font(args, kwargs) (line 504)
        get_font_call_result_254395 = invoke(stypy.reporting.localization.Localization(__file__, 504, 19), get_font_254392, *[font_fname_254393], **kwargs_254394)
        
        # Assigning a type to the variable 'font' (line 504)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 504, 12), 'font', get_font_call_result_254395)
        
        # Call to set_size(...): (line 505)
        # Processing the call arguments (line 505)
        int_254398 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 505, 26), 'int')
        int_254399 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 505, 30), 'int')
        # Processing the call keyword arguments (line 505)
        kwargs_254400 = {}
        # Getting the type of 'font' (line 505)
        font_254396 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 505, 12), 'font', False)
        # Obtaining the member 'set_size' of a type (line 505)
        set_size_254397 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 505, 12), font_254396, 'set_size')
        # Calling set_size(args, kwargs) (line 505)
        set_size_call_result_254401 = invoke(stypy.reporting.localization.Localization(__file__, 505, 12), set_size_254397, *[int_254398, int_254399], **kwargs_254400)
        
        
        # Assigning a Call to a Name (line 506):
        
        # Assigning a Call to a Name (line 506):
        
        # Call to get_sfnt(...): (line 506)
        # Processing the call keyword arguments (line 506)
        kwargs_254404 = {}
        # Getting the type of 'font' (line 506)
        font_254402 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 506, 19), 'font', False)
        # Obtaining the member 'get_sfnt' of a type (line 506)
        get_sfnt_254403 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 506, 19), font_254402, 'get_sfnt')
        # Calling get_sfnt(args, kwargs) (line 506)
        get_sfnt_call_result_254405 = invoke(stypy.reporting.localization.Localization(__file__, 506, 19), get_sfnt_254403, *[], **kwargs_254404)
        
        # Assigning a type to the variable 'sfnt' (line 506)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 506, 12), 'sfnt', get_sfnt_call_result_254405)
        
        # Call to start(...): (line 507)
        # Processing the call arguments (line 507)
        unicode_254408 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 507, 25), 'unicode', u'font')
        # Processing the call keyword arguments (line 507)
        
        # Obtaining the type of the subscript
        
        # Obtaining an instance of the builtin type 'tuple' (line 507)
        tuple_254409 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 507, 42), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 507)
        # Adding element type (line 507)
        int_254410 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 507, 42), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 507, 42), tuple_254409, int_254410)
        # Adding element type (line 507)
        int_254411 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 507, 45), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 507, 42), tuple_254409, int_254411)
        # Adding element type (line 507)
        int_254412 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 507, 48), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 507, 42), tuple_254409, int_254412)
        # Adding element type (line 507)
        int_254413 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 507, 51), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 507, 42), tuple_254409, int_254413)
        
        # Getting the type of 'sfnt' (line 507)
        sfnt_254414 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 507, 36), 'sfnt', False)
        # Obtaining the member '__getitem__' of a type (line 507)
        getitem___254415 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 507, 36), sfnt_254414, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 507)
        subscript_call_result_254416 = invoke(stypy.reporting.localization.Localization(__file__, 507, 36), getitem___254415, tuple_254409)
        
        keyword_254417 = subscript_call_result_254416
        kwargs_254418 = {'id': keyword_254417}
        # Getting the type of 'writer' (line 507)
        writer_254406 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 507, 12), 'writer', False)
        # Obtaining the member 'start' of a type (line 507)
        start_254407 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 507, 12), writer_254406, 'start')
        # Calling start(args, kwargs) (line 507)
        start_call_result_254419 = invoke(stypy.reporting.localization.Localization(__file__, 507, 12), start_254407, *[unicode_254408], **kwargs_254418)
        
        
        # Call to element(...): (line 508)
        # Processing the call arguments (line 508)
        unicode_254422 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 509, 16), 'unicode', u'font-face')
        # Processing the call keyword arguments (line 508)
        
        # Obtaining an instance of the builtin type 'dict' (line 510)
        dict_254423 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 510, 23), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 510)
        # Adding element type (key, value) (line 510)
        unicode_254424 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 511, 20), 'unicode', u'font-family')
        # Getting the type of 'font' (line 511)
        font_254425 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 511, 35), 'font', False)
        # Obtaining the member 'family_name' of a type (line 511)
        family_name_254426 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 511, 35), font_254425, 'family_name')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 510, 23), dict_254423, (unicode_254424, family_name_254426))
        # Adding element type (key, value) (line 510)
        unicode_254427 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 512, 20), 'unicode', u'font-style')
        
        # Call to lower(...): (line 512)
        # Processing the call keyword arguments (line 512)
        kwargs_254431 = {}
        # Getting the type of 'font' (line 512)
        font_254428 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 512, 34), 'font', False)
        # Obtaining the member 'style_name' of a type (line 512)
        style_name_254429 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 512, 34), font_254428, 'style_name')
        # Obtaining the member 'lower' of a type (line 512)
        lower_254430 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 512, 34), style_name_254429, 'lower')
        # Calling lower(args, kwargs) (line 512)
        lower_call_result_254432 = invoke(stypy.reporting.localization.Localization(__file__, 512, 34), lower_254430, *[], **kwargs_254431)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 510, 23), dict_254423, (unicode_254427, lower_call_result_254432))
        # Adding element type (key, value) (line 510)
        unicode_254433 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 513, 20), 'unicode', u'units-per-em')
        unicode_254434 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 513, 36), 'unicode', u'72')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 510, 23), dict_254423, (unicode_254433, unicode_254434))
        # Adding element type (key, value) (line 510)
        unicode_254435 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 514, 20), 'unicode', u'bbox')
        
        # Call to join(...): (line 514)
        # Processing the call arguments (line 514)
        # Calculating generator expression
        module_type_store = module_type_store.open_function_context('list comprehension expression', 515, 24, True)
        # Calculating comprehension expression
        # Getting the type of 'font' (line 515)
        font_254444 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 515, 59), 'font', False)
        # Obtaining the member 'bbox' of a type (line 515)
        bbox_254445 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 515, 59), font_254444, 'bbox')
        comprehension_254446 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 515, 24), bbox_254445)
        # Assigning a type to the variable 'x' (line 515)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 515, 24), 'x', comprehension_254446)
        
        # Call to short_float_fmt(...): (line 515)
        # Processing the call arguments (line 515)
        # Getting the type of 'x' (line 515)
        x_254439 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 515, 40), 'x', False)
        float_254440 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 515, 44), 'float')
        # Applying the binary operator 'div' (line 515)
        result_div_254441 = python_operator(stypy.reporting.localization.Localization(__file__, 515, 40), 'div', x_254439, float_254440)
        
        # Processing the call keyword arguments (line 515)
        kwargs_254442 = {}
        # Getting the type of 'short_float_fmt' (line 515)
        short_float_fmt_254438 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 515, 24), 'short_float_fmt', False)
        # Calling short_float_fmt(args, kwargs) (line 515)
        short_float_fmt_call_result_254443 = invoke(stypy.reporting.localization.Localization(__file__, 515, 24), short_float_fmt_254438, *[result_div_254441], **kwargs_254442)
        
        list_254447 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 515, 24), 'list')
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 515, 24), list_254447, short_float_fmt_call_result_254443)
        # Processing the call keyword arguments (line 514)
        kwargs_254448 = {}
        unicode_254436 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 514, 28), 'unicode', u' ')
        # Obtaining the member 'join' of a type (line 514)
        join_254437 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 514, 28), unicode_254436, 'join')
        # Calling join(args, kwargs) (line 514)
        join_call_result_254449 = invoke(stypy.reporting.localization.Localization(__file__, 514, 28), join_254437, *[list_254447], **kwargs_254448)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 510, 23), dict_254423, (unicode_254435, join_call_result_254449))
        
        keyword_254450 = dict_254423
        kwargs_254451 = {'attrib': keyword_254450}
        # Getting the type of 'writer' (line 508)
        writer_254420 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 508, 12), 'writer', False)
        # Obtaining the member 'element' of a type (line 508)
        element_254421 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 508, 12), writer_254420, 'element')
        # Calling element(args, kwargs) (line 508)
        element_call_result_254452 = invoke(stypy.reporting.localization.Localization(__file__, 508, 12), element_254421, *[unicode_254422], **kwargs_254451)
        
        
        # Getting the type of 'chars' (line 516)
        chars_254453 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 516, 24), 'chars')
        # Testing the type of a for loop iterable (line 516)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 516, 12), chars_254453)
        # Getting the type of the for loop variable (line 516)
        for_loop_var_254454 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 516, 12), chars_254453)
        # Assigning a type to the variable 'char' (line 516)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 516, 12), 'char', for_loop_var_254454)
        # SSA begins for a for statement (line 516)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 517):
        
        # Assigning a Call to a Name (line 517):
        
        # Call to load_char(...): (line 517)
        # Processing the call arguments (line 517)
        # Getting the type of 'char' (line 517)
        char_254457 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 517, 39), 'char', False)
        # Processing the call keyword arguments (line 517)
        # Getting the type of 'LOAD_NO_HINTING' (line 517)
        LOAD_NO_HINTING_254458 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 517, 51), 'LOAD_NO_HINTING', False)
        keyword_254459 = LOAD_NO_HINTING_254458
        kwargs_254460 = {'flags': keyword_254459}
        # Getting the type of 'font' (line 517)
        font_254455 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 517, 24), 'font', False)
        # Obtaining the member 'load_char' of a type (line 517)
        load_char_254456 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 517, 24), font_254455, 'load_char')
        # Calling load_char(args, kwargs) (line 517)
        load_char_call_result_254461 = invoke(stypy.reporting.localization.Localization(__file__, 517, 24), load_char_254456, *[char_254457], **kwargs_254460)
        
        # Assigning a type to the variable 'glyph' (line 517)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 517, 16), 'glyph', load_char_call_result_254461)
        
        # Assigning a Call to a Tuple (line 518):
        
        # Assigning a Call to a Name:
        
        # Call to get_path(...): (line 518)
        # Processing the call keyword arguments (line 518)
        kwargs_254464 = {}
        # Getting the type of 'font' (line 518)
        font_254462 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 518, 31), 'font', False)
        # Obtaining the member 'get_path' of a type (line 518)
        get_path_254463 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 518, 31), font_254462, 'get_path')
        # Calling get_path(args, kwargs) (line 518)
        get_path_call_result_254465 = invoke(stypy.reporting.localization.Localization(__file__, 518, 31), get_path_254463, *[], **kwargs_254464)
        
        # Assigning a type to the variable 'call_assignment_252809' (line 518)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 518, 16), 'call_assignment_252809', get_path_call_result_254465)
        
        # Assigning a Call to a Name (line 518):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_254468 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 518, 16), 'int')
        # Processing the call keyword arguments
        kwargs_254469 = {}
        # Getting the type of 'call_assignment_252809' (line 518)
        call_assignment_252809_254466 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 518, 16), 'call_assignment_252809', False)
        # Obtaining the member '__getitem__' of a type (line 518)
        getitem___254467 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 518, 16), call_assignment_252809_254466, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_254470 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___254467, *[int_254468], **kwargs_254469)
        
        # Assigning a type to the variable 'call_assignment_252810' (line 518)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 518, 16), 'call_assignment_252810', getitem___call_result_254470)
        
        # Assigning a Name to a Name (line 518):
        # Getting the type of 'call_assignment_252810' (line 518)
        call_assignment_252810_254471 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 518, 16), 'call_assignment_252810')
        # Assigning a type to the variable 'verts' (line 518)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 518, 16), 'verts', call_assignment_252810_254471)
        
        # Assigning a Call to a Name (line 518):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_254474 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 518, 16), 'int')
        # Processing the call keyword arguments
        kwargs_254475 = {}
        # Getting the type of 'call_assignment_252809' (line 518)
        call_assignment_252809_254472 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 518, 16), 'call_assignment_252809', False)
        # Obtaining the member '__getitem__' of a type (line 518)
        getitem___254473 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 518, 16), call_assignment_252809_254472, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_254476 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___254473, *[int_254474], **kwargs_254475)
        
        # Assigning a type to the variable 'call_assignment_252811' (line 518)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 518, 16), 'call_assignment_252811', getitem___call_result_254476)
        
        # Assigning a Name to a Name (line 518):
        # Getting the type of 'call_assignment_252811' (line 518)
        call_assignment_252811_254477 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 518, 16), 'call_assignment_252811')
        # Assigning a type to the variable 'codes' (line 518)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 518, 23), 'codes', call_assignment_252811_254477)
        
        # Assigning a Call to a Name (line 519):
        
        # Assigning a Call to a Name (line 519):
        
        # Call to Path(...): (line 519)
        # Processing the call arguments (line 519)
        # Getting the type of 'verts' (line 519)
        verts_254479 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 519, 28), 'verts', False)
        # Getting the type of 'codes' (line 519)
        codes_254480 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 519, 35), 'codes', False)
        # Processing the call keyword arguments (line 519)
        kwargs_254481 = {}
        # Getting the type of 'Path' (line 519)
        Path_254478 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 519, 23), 'Path', False)
        # Calling Path(args, kwargs) (line 519)
        Path_call_result_254482 = invoke(stypy.reporting.localization.Localization(__file__, 519, 23), Path_254478, *[verts_254479, codes_254480], **kwargs_254481)
        
        # Assigning a type to the variable 'path' (line 519)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 519, 16), 'path', Path_call_result_254482)
        
        # Assigning a Call to a Name (line 520):
        
        # Assigning a Call to a Name (line 520):
        
        # Call to _convert_path(...): (line 520)
        # Processing the call arguments (line 520)
        # Getting the type of 'path' (line 520)
        path_254485 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 520, 47), 'path', False)
        # Processing the call keyword arguments (line 520)
        kwargs_254486 = {}
        # Getting the type of 'self' (line 520)
        self_254483 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 520, 28), 'self', False)
        # Obtaining the member '_convert_path' of a type (line 520)
        _convert_path_254484 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 520, 28), self_254483, '_convert_path')
        # Calling _convert_path(args, kwargs) (line 520)
        _convert_path_call_result_254487 = invoke(stypy.reporting.localization.Localization(__file__, 520, 28), _convert_path_254484, *[path_254485], **kwargs_254486)
        
        # Assigning a type to the variable 'path_data' (line 520)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 520, 16), 'path_data', _convert_path_call_result_254487)
        
        # Call to element(...): (line 522)
        # Processing the call arguments (line 522)
        unicode_254490 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 523, 20), 'unicode', u'glyph')
        # Processing the call keyword arguments (line 522)
        # Getting the type of 'path_data' (line 524)
        path_data_254491 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 524, 22), 'path_data', False)
        keyword_254492 = path_data_254491
        
        # Obtaining an instance of the builtin type 'dict' (line 525)
        dict_254493 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 525, 27), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 525)
        # Adding element type (key, value) (line 525)
        unicode_254494 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 527, 24), 'unicode', u'unicode')
        
        # Call to unichr(...): (line 527)
        # Processing the call arguments (line 527)
        # Getting the type of 'char' (line 527)
        char_254496 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 527, 42), 'char', False)
        # Processing the call keyword arguments (line 527)
        kwargs_254497 = {}
        # Getting the type of 'unichr' (line 527)
        unichr_254495 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 527, 35), 'unichr', False)
        # Calling unichr(args, kwargs) (line 527)
        unichr_call_result_254498 = invoke(stypy.reporting.localization.Localization(__file__, 527, 35), unichr_254495, *[char_254496], **kwargs_254497)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 525, 27), dict_254493, (unicode_254494, unichr_call_result_254498))
        # Adding element type (key, value) (line 525)
        unicode_254499 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 528, 24), 'unicode', u'horiz-adv-x')
        
        # Call to short_float_fmt(...): (line 529)
        # Processing the call arguments (line 529)
        # Getting the type of 'glyph' (line 529)
        glyph_254501 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 529, 40), 'glyph', False)
        # Obtaining the member 'linearHoriAdvance' of a type (line 529)
        linearHoriAdvance_254502 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 529, 40), glyph_254501, 'linearHoriAdvance')
        float_254503 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 529, 66), 'float')
        # Applying the binary operator 'div' (line 529)
        result_div_254504 = python_operator(stypy.reporting.localization.Localization(__file__, 529, 40), 'div', linearHoriAdvance_254502, float_254503)
        
        # Processing the call keyword arguments (line 529)
        kwargs_254505 = {}
        # Getting the type of 'short_float_fmt' (line 529)
        short_float_fmt_254500 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 529, 24), 'short_float_fmt', False)
        # Calling short_float_fmt(args, kwargs) (line 529)
        short_float_fmt_call_result_254506 = invoke(stypy.reporting.localization.Localization(__file__, 529, 24), short_float_fmt_254500, *[result_div_254504], **kwargs_254505)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 525, 27), dict_254493, (unicode_254499, short_float_fmt_call_result_254506))
        
        keyword_254507 = dict_254493
        kwargs_254508 = {'attrib': keyword_254507, 'd': keyword_254492}
        # Getting the type of 'writer' (line 522)
        writer_254488 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 522, 16), 'writer', False)
        # Obtaining the member 'element' of a type (line 522)
        element_254489 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 522, 16), writer_254488, 'element')
        # Calling element(args, kwargs) (line 522)
        element_call_result_254509 = invoke(stypy.reporting.localization.Localization(__file__, 522, 16), element_254489, *[unicode_254490], **kwargs_254508)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to end(...): (line 530)
        # Processing the call arguments (line 530)
        unicode_254512 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 530, 23), 'unicode', u'font')
        # Processing the call keyword arguments (line 530)
        kwargs_254513 = {}
        # Getting the type of 'writer' (line 530)
        writer_254510 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 530, 12), 'writer', False)
        # Obtaining the member 'end' of a type (line 530)
        end_254511 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 530, 12), writer_254510, 'end')
        # Calling end(args, kwargs) (line 530)
        end_call_result_254514 = invoke(stypy.reporting.localization.Localization(__file__, 530, 12), end_254511, *[unicode_254512], **kwargs_254513)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to end(...): (line 531)
        # Processing the call arguments (line 531)
        unicode_254517 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 531, 19), 'unicode', u'defs')
        # Processing the call keyword arguments (line 531)
        kwargs_254518 = {}
        # Getting the type of 'writer' (line 531)
        writer_254515 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 531, 8), 'writer', False)
        # Obtaining the member 'end' of a type (line 531)
        end_254516 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 531, 8), writer_254515, 'end')
        # Calling end(args, kwargs) (line 531)
        end_call_result_254519 = invoke(stypy.reporting.localization.Localization(__file__, 531, 8), end_254516, *[unicode_254517], **kwargs_254518)
        
        
        # ################# End of '_write_svgfonts(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_write_svgfonts' in the type store
        # Getting the type of 'stypy_return_type' (line 497)
        stypy_return_type_254520 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 497, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_254520)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_write_svgfonts'
        return stypy_return_type_254520


    @norecursion
    def open_group(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'None' (line 533)
        None_254521 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 533, 32), 'None')
        defaults = [None_254521]
        # Create a new context for function 'open_group'
        module_type_store = module_type_store.open_function_context('open_group', 533, 4, False)
        # Assigning a type to the variable 'self' (line 534)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 534, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererSVG.open_group.__dict__.__setitem__('stypy_localization', localization)
        RendererSVG.open_group.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererSVG.open_group.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererSVG.open_group.__dict__.__setitem__('stypy_function_name', 'RendererSVG.open_group')
        RendererSVG.open_group.__dict__.__setitem__('stypy_param_names_list', ['s', 'gid'])
        RendererSVG.open_group.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererSVG.open_group.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererSVG.open_group.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererSVG.open_group.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererSVG.open_group.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererSVG.open_group.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererSVG.open_group', ['s', 'gid'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'open_group', localization, ['s', 'gid'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'open_group(...)' code ##################

        unicode_254522 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 537, (-1)), 'unicode', u'\n        Open a grouping element with label *s*. If *gid* is given, use\n        *gid* as the id of the group.\n        ')
        
        # Getting the type of 'gid' (line 538)
        gid_254523 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 538, 11), 'gid')
        # Testing the type of an if condition (line 538)
        if_condition_254524 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 538, 8), gid_254523)
        # Assigning a type to the variable 'if_condition_254524' (line 538)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 538, 8), 'if_condition_254524', if_condition_254524)
        # SSA begins for if statement (line 538)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to start(...): (line 539)
        # Processing the call arguments (line 539)
        unicode_254528 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 539, 30), 'unicode', u'g')
        # Processing the call keyword arguments (line 539)
        # Getting the type of 'gid' (line 539)
        gid_254529 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 539, 38), 'gid', False)
        keyword_254530 = gid_254529
        kwargs_254531 = {'id': keyword_254530}
        # Getting the type of 'self' (line 539)
        self_254525 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 539, 12), 'self', False)
        # Obtaining the member 'writer' of a type (line 539)
        writer_254526 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 539, 12), self_254525, 'writer')
        # Obtaining the member 'start' of a type (line 539)
        start_254527 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 539, 12), writer_254526, 'start')
        # Calling start(args, kwargs) (line 539)
        start_call_result_254532 = invoke(stypy.reporting.localization.Localization(__file__, 539, 12), start_254527, *[unicode_254528], **kwargs_254531)
        
        # SSA branch for the else part of an if statement (line 538)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a BinOp to a Subscript (line 541):
        
        # Assigning a BinOp to a Subscript (line 541):
        
        # Call to get(...): (line 541)
        # Processing the call arguments (line 541)
        # Getting the type of 's' (line 541)
        s_254536 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 541, 47), 's', False)
        int_254537 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 541, 50), 'int')
        # Processing the call keyword arguments (line 541)
        kwargs_254538 = {}
        # Getting the type of 'self' (line 541)
        self_254533 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 541, 30), 'self', False)
        # Obtaining the member '_groupd' of a type (line 541)
        _groupd_254534 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 541, 30), self_254533, '_groupd')
        # Obtaining the member 'get' of a type (line 541)
        get_254535 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 541, 30), _groupd_254534, 'get')
        # Calling get(args, kwargs) (line 541)
        get_call_result_254539 = invoke(stypy.reporting.localization.Localization(__file__, 541, 30), get_254535, *[s_254536, int_254537], **kwargs_254538)
        
        int_254540 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 541, 55), 'int')
        # Applying the binary operator '+' (line 541)
        result_add_254541 = python_operator(stypy.reporting.localization.Localization(__file__, 541, 30), '+', get_call_result_254539, int_254540)
        
        # Getting the type of 'self' (line 541)
        self_254542 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 541, 12), 'self')
        # Obtaining the member '_groupd' of a type (line 541)
        _groupd_254543 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 541, 12), self_254542, '_groupd')
        # Getting the type of 's' (line 541)
        s_254544 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 541, 25), 's')
        # Storing an element on a container (line 541)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 541, 12), _groupd_254543, (s_254544, result_add_254541))
        
        # Call to start(...): (line 542)
        # Processing the call arguments (line 542)
        unicode_254548 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 542, 30), 'unicode', u'g')
        # Processing the call keyword arguments (line 542)
        unicode_254549 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 542, 38), 'unicode', u'%s_%d')
        
        # Obtaining an instance of the builtin type 'tuple' (line 542)
        tuple_254550 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 542, 49), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 542)
        # Adding element type (line 542)
        # Getting the type of 's' (line 542)
        s_254551 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 542, 49), 's', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 542, 49), tuple_254550, s_254551)
        # Adding element type (line 542)
        
        # Obtaining the type of the subscript
        # Getting the type of 's' (line 542)
        s_254552 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 542, 65), 's', False)
        # Getting the type of 'self' (line 542)
        self_254553 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 542, 52), 'self', False)
        # Obtaining the member '_groupd' of a type (line 542)
        _groupd_254554 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 542, 52), self_254553, '_groupd')
        # Obtaining the member '__getitem__' of a type (line 542)
        getitem___254555 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 542, 52), _groupd_254554, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 542)
        subscript_call_result_254556 = invoke(stypy.reporting.localization.Localization(__file__, 542, 52), getitem___254555, s_254552)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 542, 49), tuple_254550, subscript_call_result_254556)
        
        # Applying the binary operator '%' (line 542)
        result_mod_254557 = python_operator(stypy.reporting.localization.Localization(__file__, 542, 38), '%', unicode_254549, tuple_254550)
        
        keyword_254558 = result_mod_254557
        kwargs_254559 = {'id': keyword_254558}
        # Getting the type of 'self' (line 542)
        self_254545 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 542, 12), 'self', False)
        # Obtaining the member 'writer' of a type (line 542)
        writer_254546 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 542, 12), self_254545, 'writer')
        # Obtaining the member 'start' of a type (line 542)
        start_254547 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 542, 12), writer_254546, 'start')
        # Calling start(args, kwargs) (line 542)
        start_call_result_254560 = invoke(stypy.reporting.localization.Localization(__file__, 542, 12), start_254547, *[unicode_254548], **kwargs_254559)
        
        # SSA join for if statement (line 538)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'open_group(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'open_group' in the type store
        # Getting the type of 'stypy_return_type' (line 533)
        stypy_return_type_254561 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 533, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_254561)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'open_group'
        return stypy_return_type_254561


    @norecursion
    def close_group(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'close_group'
        module_type_store = module_type_store.open_function_context('close_group', 544, 4, False)
        # Assigning a type to the variable 'self' (line 545)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 545, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererSVG.close_group.__dict__.__setitem__('stypy_localization', localization)
        RendererSVG.close_group.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererSVG.close_group.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererSVG.close_group.__dict__.__setitem__('stypy_function_name', 'RendererSVG.close_group')
        RendererSVG.close_group.__dict__.__setitem__('stypy_param_names_list', ['s'])
        RendererSVG.close_group.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererSVG.close_group.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererSVG.close_group.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererSVG.close_group.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererSVG.close_group.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererSVG.close_group.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererSVG.close_group', ['s'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'close_group', localization, ['s'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'close_group(...)' code ##################

        
        # Call to end(...): (line 545)
        # Processing the call arguments (line 545)
        unicode_254565 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 545, 24), 'unicode', u'g')
        # Processing the call keyword arguments (line 545)
        kwargs_254566 = {}
        # Getting the type of 'self' (line 545)
        self_254562 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 545, 8), 'self', False)
        # Obtaining the member 'writer' of a type (line 545)
        writer_254563 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 545, 8), self_254562, 'writer')
        # Obtaining the member 'end' of a type (line 545)
        end_254564 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 545, 8), writer_254563, 'end')
        # Calling end(args, kwargs) (line 545)
        end_call_result_254567 = invoke(stypy.reporting.localization.Localization(__file__, 545, 8), end_254564, *[unicode_254565], **kwargs_254566)
        
        
        # ################# End of 'close_group(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'close_group' in the type store
        # Getting the type of 'stypy_return_type' (line 544)
        stypy_return_type_254568 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 544, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_254568)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'close_group'
        return stypy_return_type_254568


    @norecursion
    def option_image_nocomposite(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'option_image_nocomposite'
        module_type_store = module_type_store.open_function_context('option_image_nocomposite', 547, 4, False)
        # Assigning a type to the variable 'self' (line 548)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 548, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererSVG.option_image_nocomposite.__dict__.__setitem__('stypy_localization', localization)
        RendererSVG.option_image_nocomposite.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererSVG.option_image_nocomposite.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererSVG.option_image_nocomposite.__dict__.__setitem__('stypy_function_name', 'RendererSVG.option_image_nocomposite')
        RendererSVG.option_image_nocomposite.__dict__.__setitem__('stypy_param_names_list', [])
        RendererSVG.option_image_nocomposite.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererSVG.option_image_nocomposite.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererSVG.option_image_nocomposite.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererSVG.option_image_nocomposite.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererSVG.option_image_nocomposite.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererSVG.option_image_nocomposite.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererSVG.option_image_nocomposite', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'option_image_nocomposite', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'option_image_nocomposite(...)' code ##################

        unicode_254569 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 551, (-1)), 'unicode', u'\n        return whether to generate a composite image from multiple images on\n        a set of axes\n        ')
        
        
        # Obtaining the type of the subscript
        unicode_254570 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 552, 28), 'unicode', u'image.composite_image')
        # Getting the type of 'rcParams' (line 552)
        rcParams_254571 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 552, 19), 'rcParams')
        # Obtaining the member '__getitem__' of a type (line 552)
        getitem___254572 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 552, 19), rcParams_254571, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 552)
        subscript_call_result_254573 = invoke(stypy.reporting.localization.Localization(__file__, 552, 19), getitem___254572, unicode_254570)
        
        # Applying the 'not' unary operator (line 552)
        result_not__254574 = python_operator(stypy.reporting.localization.Localization(__file__, 552, 15), 'not', subscript_call_result_254573)
        
        # Assigning a type to the variable 'stypy_return_type' (line 552)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 552, 8), 'stypy_return_type', result_not__254574)
        
        # ################# End of 'option_image_nocomposite(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'option_image_nocomposite' in the type store
        # Getting the type of 'stypy_return_type' (line 547)
        stypy_return_type_254575 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 547, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_254575)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'option_image_nocomposite'
        return stypy_return_type_254575


    @norecursion
    def _convert_path(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'None' (line 554)
        None_254576 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 554, 44), 'None')
        # Getting the type of 'None' (line 554)
        None_254577 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 554, 55), 'None')
        # Getting the type of 'None' (line 554)
        None_254578 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 554, 70), 'None')
        # Getting the type of 'None' (line 555)
        None_254579 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 555, 29), 'None')
        defaults = [None_254576, None_254577, None_254578, None_254579]
        # Create a new context for function '_convert_path'
        module_type_store = module_type_store.open_function_context('_convert_path', 554, 4, False)
        # Assigning a type to the variable 'self' (line 555)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 555, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererSVG._convert_path.__dict__.__setitem__('stypy_localization', localization)
        RendererSVG._convert_path.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererSVG._convert_path.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererSVG._convert_path.__dict__.__setitem__('stypy_function_name', 'RendererSVG._convert_path')
        RendererSVG._convert_path.__dict__.__setitem__('stypy_param_names_list', ['path', 'transform', 'clip', 'simplify', 'sketch'])
        RendererSVG._convert_path.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererSVG._convert_path.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererSVG._convert_path.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererSVG._convert_path.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererSVG._convert_path.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererSVG._convert_path.__dict__.__setitem__('stypy_declared_arg_number', 6)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererSVG._convert_path', ['path', 'transform', 'clip', 'simplify', 'sketch'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_convert_path', localization, ['path', 'transform', 'clip', 'simplify', 'sketch'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_convert_path(...)' code ##################

        
        # Getting the type of 'clip' (line 556)
        clip_254580 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 556, 11), 'clip')
        # Testing the type of an if condition (line 556)
        if_condition_254581 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 556, 8), clip_254580)
        # Assigning a type to the variable 'if_condition_254581' (line 556)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 556, 8), 'if_condition_254581', if_condition_254581)
        # SSA begins for if statement (line 556)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Tuple to a Name (line 557):
        
        # Assigning a Tuple to a Name (line 557):
        
        # Obtaining an instance of the builtin type 'tuple' (line 557)
        tuple_254582 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 557, 20), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 557)
        # Adding element type (line 557)
        float_254583 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 557, 20), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 557, 20), tuple_254582, float_254583)
        # Adding element type (line 557)
        float_254584 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 557, 25), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 557, 20), tuple_254582, float_254584)
        # Adding element type (line 557)
        # Getting the type of 'self' (line 557)
        self_254585 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 557, 30), 'self')
        # Obtaining the member 'width' of a type (line 557)
        width_254586 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 557, 30), self_254585, 'width')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 557, 20), tuple_254582, width_254586)
        # Adding element type (line 557)
        # Getting the type of 'self' (line 557)
        self_254587 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 557, 42), 'self')
        # Obtaining the member 'height' of a type (line 557)
        height_254588 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 557, 42), self_254587, 'height')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 557, 20), tuple_254582, height_254588)
        
        # Assigning a type to the variable 'clip' (line 557)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 557, 12), 'clip', tuple_254582)
        # SSA branch for the else part of an if statement (line 556)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Name to a Name (line 559):
        
        # Assigning a Name to a Name (line 559):
        # Getting the type of 'None' (line 559)
        None_254589 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 559, 19), 'None')
        # Assigning a type to the variable 'clip' (line 559)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 559, 12), 'clip', None_254589)
        # SSA join for if statement (line 556)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to decode(...): (line 560)
        # Processing the call arguments (line 560)
        unicode_254608 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 562, 58), 'unicode', u'ascii')
        # Processing the call keyword arguments (line 560)
        kwargs_254609 = {}
        
        # Call to convert_to_string(...): (line 560)
        # Processing the call arguments (line 560)
        # Getting the type of 'path' (line 561)
        path_254592 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 561, 12), 'path', False)
        # Getting the type of 'transform' (line 561)
        transform_254593 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 561, 18), 'transform', False)
        # Getting the type of 'clip' (line 561)
        clip_254594 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 561, 29), 'clip', False)
        # Getting the type of 'simplify' (line 561)
        simplify_254595 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 561, 35), 'simplify', False)
        # Getting the type of 'sketch' (line 561)
        sketch_254596 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 561, 45), 'sketch', False)
        int_254597 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 561, 53), 'int')
        
        # Obtaining an instance of the builtin type 'list' (line 562)
        list_254598 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 562, 12), 'list')
        # Adding type elements to the builtin type 'list' instance (line 562)
        # Adding element type (line 562)
        str_254599 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 562, 13), 'str', 'M')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 562, 12), list_254598, str_254599)
        # Adding element type (line 562)
        str_254600 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 562, 19), 'str', 'L')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 562, 12), list_254598, str_254600)
        # Adding element type (line 562)
        str_254601 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 562, 25), 'str', 'Q')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 562, 12), list_254598, str_254601)
        # Adding element type (line 562)
        str_254602 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 562, 31), 'str', 'C')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 562, 12), list_254598, str_254602)
        # Adding element type (line 562)
        str_254603 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 562, 37), 'str', 'z')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 562, 12), list_254598, str_254603)
        
        # Getting the type of 'False' (line 562)
        False_254604 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 562, 44), 'False', False)
        # Processing the call keyword arguments (line 560)
        kwargs_254605 = {}
        # Getting the type of '_path' (line 560)
        _path_254590 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 560, 15), '_path', False)
        # Obtaining the member 'convert_to_string' of a type (line 560)
        convert_to_string_254591 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 560, 15), _path_254590, 'convert_to_string')
        # Calling convert_to_string(args, kwargs) (line 560)
        convert_to_string_call_result_254606 = invoke(stypy.reporting.localization.Localization(__file__, 560, 15), convert_to_string_254591, *[path_254592, transform_254593, clip_254594, simplify_254595, sketch_254596, int_254597, list_254598, False_254604], **kwargs_254605)
        
        # Obtaining the member 'decode' of a type (line 560)
        decode_254607 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 560, 15), convert_to_string_call_result_254606, 'decode')
        # Calling decode(args, kwargs) (line 560)
        decode_call_result_254610 = invoke(stypy.reporting.localization.Localization(__file__, 560, 15), decode_254607, *[unicode_254608], **kwargs_254609)
        
        # Assigning a type to the variable 'stypy_return_type' (line 560)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 560, 8), 'stypy_return_type', decode_call_result_254610)
        
        # ################# End of '_convert_path(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_convert_path' in the type store
        # Getting the type of 'stypy_return_type' (line 554)
        stypy_return_type_254611 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 554, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_254611)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_convert_path'
        return stypy_return_type_254611


    @norecursion
    def draw_path(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'None' (line 564)
        None_254612 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 564, 53), 'None')
        defaults = [None_254612]
        # Create a new context for function 'draw_path'
        module_type_store = module_type_store.open_function_context('draw_path', 564, 4, False)
        # Assigning a type to the variable 'self' (line 565)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 565, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererSVG.draw_path.__dict__.__setitem__('stypy_localization', localization)
        RendererSVG.draw_path.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererSVG.draw_path.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererSVG.draw_path.__dict__.__setitem__('stypy_function_name', 'RendererSVG.draw_path')
        RendererSVG.draw_path.__dict__.__setitem__('stypy_param_names_list', ['gc', 'path', 'transform', 'rgbFace'])
        RendererSVG.draw_path.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererSVG.draw_path.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererSVG.draw_path.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererSVG.draw_path.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererSVG.draw_path.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererSVG.draw_path.__dict__.__setitem__('stypy_declared_arg_number', 5)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererSVG.draw_path', ['gc', 'path', 'transform', 'rgbFace'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'draw_path', localization, ['gc', 'path', 'transform', 'rgbFace'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'draw_path(...)' code ##################

        
        # Assigning a Call to a Name (line 565):
        
        # Assigning a Call to a Name (line 565):
        
        # Call to _make_flip_transform(...): (line 565)
        # Processing the call arguments (line 565)
        # Getting the type of 'transform' (line 565)
        transform_254615 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 565, 51), 'transform', False)
        # Processing the call keyword arguments (line 565)
        kwargs_254616 = {}
        # Getting the type of 'self' (line 565)
        self_254613 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 565, 25), 'self', False)
        # Obtaining the member '_make_flip_transform' of a type (line 565)
        _make_flip_transform_254614 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 565, 25), self_254613, '_make_flip_transform')
        # Calling _make_flip_transform(args, kwargs) (line 565)
        _make_flip_transform_call_result_254617 = invoke(stypy.reporting.localization.Localization(__file__, 565, 25), _make_flip_transform_254614, *[transform_254615], **kwargs_254616)
        
        # Assigning a type to the variable 'trans_and_flip' (line 565)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 565, 8), 'trans_and_flip', _make_flip_transform_call_result_254617)
        
        # Assigning a BoolOp to a Name (line 566):
        
        # Assigning a BoolOp to a Name (line 566):
        
        # Evaluating a boolean operation
        
        # Getting the type of 'rgbFace' (line 566)
        rgbFace_254618 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 566, 16), 'rgbFace')
        # Getting the type of 'None' (line 566)
        None_254619 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 566, 27), 'None')
        # Applying the binary operator 'is' (line 566)
        result_is__254620 = python_operator(stypy.reporting.localization.Localization(__file__, 566, 16), 'is', rgbFace_254618, None_254619)
        
        
        
        # Call to get_hatch_path(...): (line 566)
        # Processing the call keyword arguments (line 566)
        kwargs_254623 = {}
        # Getting the type of 'gc' (line 566)
        gc_254621 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 566, 36), 'gc', False)
        # Obtaining the member 'get_hatch_path' of a type (line 566)
        get_hatch_path_254622 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 566, 36), gc_254621, 'get_hatch_path')
        # Calling get_hatch_path(args, kwargs) (line 566)
        get_hatch_path_call_result_254624 = invoke(stypy.reporting.localization.Localization(__file__, 566, 36), get_hatch_path_254622, *[], **kwargs_254623)
        
        # Getting the type of 'None' (line 566)
        None_254625 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 566, 59), 'None')
        # Applying the binary operator 'is' (line 566)
        result_is__254626 = python_operator(stypy.reporting.localization.Localization(__file__, 566, 36), 'is', get_hatch_path_call_result_254624, None_254625)
        
        # Applying the binary operator 'and' (line 566)
        result_and_keyword_254627 = python_operator(stypy.reporting.localization.Localization(__file__, 566, 16), 'and', result_is__254620, result_is__254626)
        
        # Assigning a type to the variable 'clip' (line 566)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 566, 8), 'clip', result_and_keyword_254627)
        
        # Assigning a BoolOp to a Name (line 567):
        
        # Assigning a BoolOp to a Name (line 567):
        
        # Evaluating a boolean operation
        # Getting the type of 'path' (line 567)
        path_254628 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 567, 19), 'path')
        # Obtaining the member 'should_simplify' of a type (line 567)
        should_simplify_254629 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 567, 19), path_254628, 'should_simplify')
        # Getting the type of 'clip' (line 567)
        clip_254630 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 567, 44), 'clip')
        # Applying the binary operator 'and' (line 567)
        result_and_keyword_254631 = python_operator(stypy.reporting.localization.Localization(__file__, 567, 19), 'and', should_simplify_254629, clip_254630)
        
        # Assigning a type to the variable 'simplify' (line 567)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 567, 8), 'simplify', result_and_keyword_254631)
        
        # Assigning a Call to a Name (line 568):
        
        # Assigning a Call to a Name (line 568):
        
        # Call to _convert_path(...): (line 568)
        # Processing the call arguments (line 568)
        # Getting the type of 'path' (line 569)
        path_254634 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 569, 12), 'path', False)
        # Getting the type of 'trans_and_flip' (line 569)
        trans_and_flip_254635 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 569, 18), 'trans_and_flip', False)
        # Processing the call keyword arguments (line 568)
        # Getting the type of 'clip' (line 569)
        clip_254636 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 569, 39), 'clip', False)
        keyword_254637 = clip_254636
        # Getting the type of 'simplify' (line 569)
        simplify_254638 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 569, 54), 'simplify', False)
        keyword_254639 = simplify_254638
        
        # Call to get_sketch_params(...): (line 570)
        # Processing the call keyword arguments (line 570)
        kwargs_254642 = {}
        # Getting the type of 'gc' (line 570)
        gc_254640 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 570, 19), 'gc', False)
        # Obtaining the member 'get_sketch_params' of a type (line 570)
        get_sketch_params_254641 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 570, 19), gc_254640, 'get_sketch_params')
        # Calling get_sketch_params(args, kwargs) (line 570)
        get_sketch_params_call_result_254643 = invoke(stypy.reporting.localization.Localization(__file__, 570, 19), get_sketch_params_254641, *[], **kwargs_254642)
        
        keyword_254644 = get_sketch_params_call_result_254643
        kwargs_254645 = {'simplify': keyword_254639, 'sketch': keyword_254644, 'clip': keyword_254637}
        # Getting the type of 'self' (line 568)
        self_254632 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 568, 20), 'self', False)
        # Obtaining the member '_convert_path' of a type (line 568)
        _convert_path_254633 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 568, 20), self_254632, '_convert_path')
        # Calling _convert_path(args, kwargs) (line 568)
        _convert_path_call_result_254646 = invoke(stypy.reporting.localization.Localization(__file__, 568, 20), _convert_path_254633, *[path_254634, trans_and_flip_254635], **kwargs_254645)
        
        # Assigning a type to the variable 'path_data' (line 568)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 568, 8), 'path_data', _convert_path_call_result_254646)
        
        # Assigning a Dict to a Name (line 572):
        
        # Assigning a Dict to a Name (line 572):
        
        # Obtaining an instance of the builtin type 'dict' (line 572)
        dict_254647 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 572, 17), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 572)
        
        # Assigning a type to the variable 'attrib' (line 572)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 572, 8), 'attrib', dict_254647)
        
        # Assigning a Call to a Subscript (line 573):
        
        # Assigning a Call to a Subscript (line 573):
        
        # Call to _get_style(...): (line 573)
        # Processing the call arguments (line 573)
        # Getting the type of 'gc' (line 573)
        gc_254650 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 573, 42), 'gc', False)
        # Getting the type of 'rgbFace' (line 573)
        rgbFace_254651 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 573, 46), 'rgbFace', False)
        # Processing the call keyword arguments (line 573)
        kwargs_254652 = {}
        # Getting the type of 'self' (line 573)
        self_254648 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 573, 26), 'self', False)
        # Obtaining the member '_get_style' of a type (line 573)
        _get_style_254649 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 573, 26), self_254648, '_get_style')
        # Calling _get_style(args, kwargs) (line 573)
        _get_style_call_result_254653 = invoke(stypy.reporting.localization.Localization(__file__, 573, 26), _get_style_254649, *[gc_254650, rgbFace_254651], **kwargs_254652)
        
        # Getting the type of 'attrib' (line 573)
        attrib_254654 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 573, 8), 'attrib')
        unicode_254655 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 573, 15), 'unicode', u'style')
        # Storing an element on a container (line 573)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 573, 8), attrib_254654, (unicode_254655, _get_style_call_result_254653))
        
        # Assigning a Call to a Name (line 575):
        
        # Assigning a Call to a Name (line 575):
        
        # Call to _get_clip(...): (line 575)
        # Processing the call arguments (line 575)
        # Getting the type of 'gc' (line 575)
        gc_254658 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 575, 32), 'gc', False)
        # Processing the call keyword arguments (line 575)
        kwargs_254659 = {}
        # Getting the type of 'self' (line 575)
        self_254656 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 575, 17), 'self', False)
        # Obtaining the member '_get_clip' of a type (line 575)
        _get_clip_254657 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 575, 17), self_254656, '_get_clip')
        # Calling _get_clip(args, kwargs) (line 575)
        _get_clip_call_result_254660 = invoke(stypy.reporting.localization.Localization(__file__, 575, 17), _get_clip_254657, *[gc_254658], **kwargs_254659)
        
        # Assigning a type to the variable 'clipid' (line 575)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 575, 8), 'clipid', _get_clip_call_result_254660)
        
        # Type idiom detected: calculating its left and rigth part (line 576)
        # Getting the type of 'clipid' (line 576)
        clipid_254661 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 576, 8), 'clipid')
        # Getting the type of 'None' (line 576)
        None_254662 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 576, 25), 'None')
        
        (may_be_254663, more_types_in_union_254664) = may_not_be_none(clipid_254661, None_254662)

        if may_be_254663:

            if more_types_in_union_254664:
                # Runtime conditional SSA (line 576)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a BinOp to a Subscript (line 577):
            
            # Assigning a BinOp to a Subscript (line 577):
            unicode_254665 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 577, 34), 'unicode', u'url(#%s)')
            # Getting the type of 'clipid' (line 577)
            clipid_254666 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 577, 47), 'clipid')
            # Applying the binary operator '%' (line 577)
            result_mod_254667 = python_operator(stypy.reporting.localization.Localization(__file__, 577, 34), '%', unicode_254665, clipid_254666)
            
            # Getting the type of 'attrib' (line 577)
            attrib_254668 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 577, 12), 'attrib')
            unicode_254669 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 577, 19), 'unicode', u'clip-path')
            # Storing an element on a container (line 577)
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 577, 12), attrib_254668, (unicode_254669, result_mod_254667))

            if more_types_in_union_254664:
                # SSA join for if statement (line 576)
                module_type_store = module_type_store.join_ssa_context()


        
        
        
        
        # Call to get_url(...): (line 579)
        # Processing the call keyword arguments (line 579)
        kwargs_254672 = {}
        # Getting the type of 'gc' (line 579)
        gc_254670 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 579, 11), 'gc', False)
        # Obtaining the member 'get_url' of a type (line 579)
        get_url_254671 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 579, 11), gc_254670, 'get_url')
        # Calling get_url(args, kwargs) (line 579)
        get_url_call_result_254673 = invoke(stypy.reporting.localization.Localization(__file__, 579, 11), get_url_254671, *[], **kwargs_254672)
        
        # Getting the type of 'None' (line 579)
        None_254674 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 579, 31), 'None')
        # Applying the binary operator 'isnot' (line 579)
        result_is_not_254675 = python_operator(stypy.reporting.localization.Localization(__file__, 579, 11), 'isnot', get_url_call_result_254673, None_254674)
        
        # Testing the type of an if condition (line 579)
        if_condition_254676 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 579, 8), result_is_not_254675)
        # Assigning a type to the variable 'if_condition_254676' (line 579)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 579, 8), 'if_condition_254676', if_condition_254676)
        # SSA begins for if statement (line 579)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to start(...): (line 580)
        # Processing the call arguments (line 580)
        unicode_254680 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 580, 30), 'unicode', u'a')
        
        # Obtaining an instance of the builtin type 'dict' (line 580)
        dict_254681 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 580, 35), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 580)
        # Adding element type (key, value) (line 580)
        unicode_254682 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 580, 36), 'unicode', u'xlink:href')
        
        # Call to get_url(...): (line 580)
        # Processing the call keyword arguments (line 580)
        kwargs_254685 = {}
        # Getting the type of 'gc' (line 580)
        gc_254683 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 580, 50), 'gc', False)
        # Obtaining the member 'get_url' of a type (line 580)
        get_url_254684 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 580, 50), gc_254683, 'get_url')
        # Calling get_url(args, kwargs) (line 580)
        get_url_call_result_254686 = invoke(stypy.reporting.localization.Localization(__file__, 580, 50), get_url_254684, *[], **kwargs_254685)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 580, 35), dict_254681, (unicode_254682, get_url_call_result_254686))
        
        # Processing the call keyword arguments (line 580)
        kwargs_254687 = {}
        # Getting the type of 'self' (line 580)
        self_254677 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 580, 12), 'self', False)
        # Obtaining the member 'writer' of a type (line 580)
        writer_254678 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 580, 12), self_254677, 'writer')
        # Obtaining the member 'start' of a type (line 580)
        start_254679 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 580, 12), writer_254678, 'start')
        # Calling start(args, kwargs) (line 580)
        start_call_result_254688 = invoke(stypy.reporting.localization.Localization(__file__, 580, 12), start_254679, *[unicode_254680, dict_254681], **kwargs_254687)
        
        # SSA join for if statement (line 579)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to element(...): (line 581)
        # Processing the call arguments (line 581)
        unicode_254692 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 581, 28), 'unicode', u'path')
        # Processing the call keyword arguments (line 581)
        # Getting the type of 'path_data' (line 581)
        path_data_254693 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 581, 38), 'path_data', False)
        keyword_254694 = path_data_254693
        # Getting the type of 'attrib' (line 581)
        attrib_254695 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 581, 56), 'attrib', False)
        keyword_254696 = attrib_254695
        kwargs_254697 = {'attrib': keyword_254696, 'd': keyword_254694}
        # Getting the type of 'self' (line 581)
        self_254689 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 581, 8), 'self', False)
        # Obtaining the member 'writer' of a type (line 581)
        writer_254690 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 581, 8), self_254689, 'writer')
        # Obtaining the member 'element' of a type (line 581)
        element_254691 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 581, 8), writer_254690, 'element')
        # Calling element(args, kwargs) (line 581)
        element_call_result_254698 = invoke(stypy.reporting.localization.Localization(__file__, 581, 8), element_254691, *[unicode_254692], **kwargs_254697)
        
        
        
        
        # Call to get_url(...): (line 582)
        # Processing the call keyword arguments (line 582)
        kwargs_254701 = {}
        # Getting the type of 'gc' (line 582)
        gc_254699 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 582, 11), 'gc', False)
        # Obtaining the member 'get_url' of a type (line 582)
        get_url_254700 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 582, 11), gc_254699, 'get_url')
        # Calling get_url(args, kwargs) (line 582)
        get_url_call_result_254702 = invoke(stypy.reporting.localization.Localization(__file__, 582, 11), get_url_254700, *[], **kwargs_254701)
        
        # Getting the type of 'None' (line 582)
        None_254703 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 582, 31), 'None')
        # Applying the binary operator 'isnot' (line 582)
        result_is_not_254704 = python_operator(stypy.reporting.localization.Localization(__file__, 582, 11), 'isnot', get_url_call_result_254702, None_254703)
        
        # Testing the type of an if condition (line 582)
        if_condition_254705 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 582, 8), result_is_not_254704)
        # Assigning a type to the variable 'if_condition_254705' (line 582)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 582, 8), 'if_condition_254705', if_condition_254705)
        # SSA begins for if statement (line 582)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to end(...): (line 583)
        # Processing the call arguments (line 583)
        unicode_254709 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 583, 28), 'unicode', u'a')
        # Processing the call keyword arguments (line 583)
        kwargs_254710 = {}
        # Getting the type of 'self' (line 583)
        self_254706 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 583, 12), 'self', False)
        # Obtaining the member 'writer' of a type (line 583)
        writer_254707 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 583, 12), self_254706, 'writer')
        # Obtaining the member 'end' of a type (line 583)
        end_254708 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 583, 12), writer_254707, 'end')
        # Calling end(args, kwargs) (line 583)
        end_call_result_254711 = invoke(stypy.reporting.localization.Localization(__file__, 583, 12), end_254708, *[unicode_254709], **kwargs_254710)
        
        # SSA join for if statement (line 582)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'draw_path(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'draw_path' in the type store
        # Getting the type of 'stypy_return_type' (line 564)
        stypy_return_type_254712 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 564, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_254712)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'draw_path'
        return stypy_return_type_254712


    @norecursion
    def draw_markers(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'None' (line 585)
        None_254713 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 585, 79), 'None')
        defaults = [None_254713]
        # Create a new context for function 'draw_markers'
        module_type_store = module_type_store.open_function_context('draw_markers', 585, 4, False)
        # Assigning a type to the variable 'self' (line 586)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 586, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererSVG.draw_markers.__dict__.__setitem__('stypy_localization', localization)
        RendererSVG.draw_markers.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererSVG.draw_markers.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererSVG.draw_markers.__dict__.__setitem__('stypy_function_name', 'RendererSVG.draw_markers')
        RendererSVG.draw_markers.__dict__.__setitem__('stypy_param_names_list', ['gc', 'marker_path', 'marker_trans', 'path', 'trans', 'rgbFace'])
        RendererSVG.draw_markers.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererSVG.draw_markers.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererSVG.draw_markers.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererSVG.draw_markers.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererSVG.draw_markers.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererSVG.draw_markers.__dict__.__setitem__('stypy_declared_arg_number', 7)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererSVG.draw_markers', ['gc', 'marker_path', 'marker_trans', 'path', 'trans', 'rgbFace'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'draw_markers', localization, ['gc', 'marker_path', 'marker_trans', 'path', 'trans', 'rgbFace'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'draw_markers(...)' code ##################

        
        
        
        # Call to len(...): (line 586)
        # Processing the call arguments (line 586)
        # Getting the type of 'path' (line 586)
        path_254715 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 586, 19), 'path', False)
        # Obtaining the member 'vertices' of a type (line 586)
        vertices_254716 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 586, 19), path_254715, 'vertices')
        # Processing the call keyword arguments (line 586)
        kwargs_254717 = {}
        # Getting the type of 'len' (line 586)
        len_254714 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 586, 15), 'len', False)
        # Calling len(args, kwargs) (line 586)
        len_call_result_254718 = invoke(stypy.reporting.localization.Localization(__file__, 586, 15), len_254714, *[vertices_254716], **kwargs_254717)
        
        # Applying the 'not' unary operator (line 586)
        result_not__254719 = python_operator(stypy.reporting.localization.Localization(__file__, 586, 11), 'not', len_call_result_254718)
        
        # Testing the type of an if condition (line 586)
        if_condition_254720 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 586, 8), result_not__254719)
        # Assigning a type to the variable 'if_condition_254720' (line 586)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 586, 8), 'if_condition_254720', if_condition_254720)
        # SSA begins for if statement (line 586)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        # Assigning a type to the variable 'stypy_return_type' (line 587)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 587, 12), 'stypy_return_type', types.NoneType)
        # SSA join for if statement (line 586)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Attribute to a Name (line 589):
        
        # Assigning a Attribute to a Name (line 589):
        # Getting the type of 'self' (line 589)
        self_254721 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 589, 17), 'self')
        # Obtaining the member 'writer' of a type (line 589)
        writer_254722 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 589, 17), self_254721, 'writer')
        # Assigning a type to the variable 'writer' (line 589)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 589, 8), 'writer', writer_254722)
        
        # Assigning a Call to a Name (line 590):
        
        # Assigning a Call to a Name (line 590):
        
        # Call to _convert_path(...): (line 590)
        # Processing the call arguments (line 590)
        # Getting the type of 'marker_path' (line 591)
        marker_path_254725 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 591, 12), 'marker_path', False)
        # Getting the type of 'marker_trans' (line 592)
        marker_trans_254726 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 592, 12), 'marker_trans', False)
        
        # Call to scale(...): (line 592)
        # Processing the call arguments (line 592)
        float_254731 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 592, 44), 'float')
        float_254732 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 592, 49), 'float')
        # Processing the call keyword arguments (line 592)
        kwargs_254733 = {}
        
        # Call to Affine2D(...): (line 592)
        # Processing the call keyword arguments (line 592)
        kwargs_254728 = {}
        # Getting the type of 'Affine2D' (line 592)
        Affine2D_254727 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 592, 27), 'Affine2D', False)
        # Calling Affine2D(args, kwargs) (line 592)
        Affine2D_call_result_254729 = invoke(stypy.reporting.localization.Localization(__file__, 592, 27), Affine2D_254727, *[], **kwargs_254728)
        
        # Obtaining the member 'scale' of a type (line 592)
        scale_254730 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 592, 27), Affine2D_call_result_254729, 'scale')
        # Calling scale(args, kwargs) (line 592)
        scale_call_result_254734 = invoke(stypy.reporting.localization.Localization(__file__, 592, 27), scale_254730, *[float_254731, float_254732], **kwargs_254733)
        
        # Applying the binary operator '+' (line 592)
        result_add_254735 = python_operator(stypy.reporting.localization.Localization(__file__, 592, 12), '+', marker_trans_254726, scale_call_result_254734)
        
        # Processing the call keyword arguments (line 590)
        # Getting the type of 'False' (line 593)
        False_254736 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 593, 21), 'False', False)
        keyword_254737 = False_254736
        kwargs_254738 = {'simplify': keyword_254737}
        # Getting the type of 'self' (line 590)
        self_254723 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 590, 20), 'self', False)
        # Obtaining the member '_convert_path' of a type (line 590)
        _convert_path_254724 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 590, 20), self_254723, '_convert_path')
        # Calling _convert_path(args, kwargs) (line 590)
        _convert_path_call_result_254739 = invoke(stypy.reporting.localization.Localization(__file__, 590, 20), _convert_path_254724, *[marker_path_254725, result_add_254735], **kwargs_254738)
        
        # Assigning a type to the variable 'path_data' (line 590)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 590, 8), 'path_data', _convert_path_call_result_254739)
        
        # Assigning a Call to a Name (line 594):
        
        # Assigning a Call to a Name (line 594):
        
        # Call to _get_style_dict(...): (line 594)
        # Processing the call arguments (line 594)
        # Getting the type of 'gc' (line 594)
        gc_254742 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 594, 37), 'gc', False)
        # Getting the type of 'rgbFace' (line 594)
        rgbFace_254743 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 594, 41), 'rgbFace', False)
        # Processing the call keyword arguments (line 594)
        kwargs_254744 = {}
        # Getting the type of 'self' (line 594)
        self_254740 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 594, 16), 'self', False)
        # Obtaining the member '_get_style_dict' of a type (line 594)
        _get_style_dict_254741 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 594, 16), self_254740, '_get_style_dict')
        # Calling _get_style_dict(args, kwargs) (line 594)
        _get_style_dict_call_result_254745 = invoke(stypy.reporting.localization.Localization(__file__, 594, 16), _get_style_dict_254741, *[gc_254742, rgbFace_254743], **kwargs_254744)
        
        # Assigning a type to the variable 'style' (line 594)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 594, 8), 'style', _get_style_dict_call_result_254745)
        
        # Assigning a Tuple to a Name (line 595):
        
        # Assigning a Tuple to a Name (line 595):
        
        # Obtaining an instance of the builtin type 'tuple' (line 595)
        tuple_254746 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 595, 19), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 595)
        # Adding element type (line 595)
        # Getting the type of 'path_data' (line 595)
        path_data_254747 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 595, 19), 'path_data')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 595, 19), tuple_254746, path_data_254747)
        # Adding element type (line 595)
        
        # Call to generate_css(...): (line 595)
        # Processing the call arguments (line 595)
        # Getting the type of 'style' (line 595)
        style_254749 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 595, 43), 'style', False)
        # Processing the call keyword arguments (line 595)
        kwargs_254750 = {}
        # Getting the type of 'generate_css' (line 595)
        generate_css_254748 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 595, 30), 'generate_css', False)
        # Calling generate_css(args, kwargs) (line 595)
        generate_css_call_result_254751 = invoke(stypy.reporting.localization.Localization(__file__, 595, 30), generate_css_254748, *[style_254749], **kwargs_254750)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 595, 19), tuple_254746, generate_css_call_result_254751)
        
        # Assigning a type to the variable 'dictkey' (line 595)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 595, 8), 'dictkey', tuple_254746)
        
        # Assigning a Call to a Name (line 596):
        
        # Assigning a Call to a Name (line 596):
        
        # Call to get(...): (line 596)
        # Processing the call arguments (line 596)
        # Getting the type of 'dictkey' (line 596)
        dictkey_254755 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 596, 32), 'dictkey', False)
        # Processing the call keyword arguments (line 596)
        kwargs_254756 = {}
        # Getting the type of 'self' (line 596)
        self_254752 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 596, 14), 'self', False)
        # Obtaining the member '_markers' of a type (line 596)
        _markers_254753 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 596, 14), self_254752, '_markers')
        # Obtaining the member 'get' of a type (line 596)
        get_254754 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 596, 14), _markers_254753, 'get')
        # Calling get(args, kwargs) (line 596)
        get_call_result_254757 = invoke(stypy.reporting.localization.Localization(__file__, 596, 14), get_254754, *[dictkey_254755], **kwargs_254756)
        
        # Assigning a type to the variable 'oid' (line 596)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 596, 8), 'oid', get_call_result_254757)
        
        # Assigning a Call to a Name (line 597):
        
        # Assigning a Call to a Name (line 597):
        
        # Call to generate_css(...): (line 597)
        # Processing the call arguments (line 597)
        # Calculating dict comprehension
        module_type_store = module_type_store.open_function_context('dict comprehension expression', 597, 30, True)
        # Calculating comprehension expression
        
        # Call to iteritems(...): (line 597)
        # Processing the call arguments (line 597)
        # Getting the type of 'style' (line 597)
        style_254768 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 597, 61), 'style', False)
        # Processing the call keyword arguments (line 597)
        kwargs_254769 = {}
        # Getting the type of 'six' (line 597)
        six_254766 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 597, 47), 'six', False)
        # Obtaining the member 'iteritems' of a type (line 597)
        iteritems_254767 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 597, 47), six_254766, 'iteritems')
        # Calling iteritems(args, kwargs) (line 597)
        iteritems_call_result_254770 = invoke(stypy.reporting.localization.Localization(__file__, 597, 47), iteritems_254767, *[style_254768], **kwargs_254769)
        
        comprehension_254771 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 597, 30), iteritems_call_result_254770)
        # Assigning a type to the variable 'k' (line 597)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 597, 30), 'k', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 597, 30), comprehension_254771))
        # Assigning a type to the variable 'v' (line 597)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 597, 30), 'v', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 597, 30), comprehension_254771))
        
        # Call to startswith(...): (line 598)
        # Processing the call arguments (line 598)
        unicode_254763 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 598, 46), 'unicode', u'stroke')
        # Processing the call keyword arguments (line 598)
        kwargs_254764 = {}
        # Getting the type of 'k' (line 598)
        k_254761 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 598, 33), 'k', False)
        # Obtaining the member 'startswith' of a type (line 598)
        startswith_254762 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 598, 33), k_254761, 'startswith')
        # Calling startswith(args, kwargs) (line 598)
        startswith_call_result_254765 = invoke(stypy.reporting.localization.Localization(__file__, 598, 33), startswith_254762, *[unicode_254763], **kwargs_254764)
        
        # Getting the type of 'k' (line 597)
        k_254759 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 597, 30), 'k', False)
        # Getting the type of 'v' (line 597)
        v_254760 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 597, 33), 'v', False)
        dict_254772 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 597, 30), 'dict')
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 597, 30), dict_254772, (k_254759, v_254760))
        # Processing the call keyword arguments (line 597)
        kwargs_254773 = {}
        # Getting the type of 'generate_css' (line 597)
        generate_css_254758 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 597, 16), 'generate_css', False)
        # Calling generate_css(args, kwargs) (line 597)
        generate_css_call_result_254774 = invoke(stypy.reporting.localization.Localization(__file__, 597, 16), generate_css_254758, *[dict_254772], **kwargs_254773)
        
        # Assigning a type to the variable 'style' (line 597)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 597, 8), 'style', generate_css_call_result_254774)
        
        # Type idiom detected: calculating its left and rigth part (line 600)
        # Getting the type of 'oid' (line 600)
        oid_254775 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 600, 11), 'oid')
        # Getting the type of 'None' (line 600)
        None_254776 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 600, 18), 'None')
        
        (may_be_254777, more_types_in_union_254778) = may_be_none(oid_254775, None_254776)

        if may_be_254777:

            if more_types_in_union_254778:
                # Runtime conditional SSA (line 600)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Call to a Name (line 601):
            
            # Assigning a Call to a Name (line 601):
            
            # Call to _make_id(...): (line 601)
            # Processing the call arguments (line 601)
            unicode_254781 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 601, 32), 'unicode', u'm')
            # Getting the type of 'dictkey' (line 601)
            dictkey_254782 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 601, 37), 'dictkey', False)
            # Processing the call keyword arguments (line 601)
            kwargs_254783 = {}
            # Getting the type of 'self' (line 601)
            self_254779 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 601, 18), 'self', False)
            # Obtaining the member '_make_id' of a type (line 601)
            _make_id_254780 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 601, 18), self_254779, '_make_id')
            # Calling _make_id(args, kwargs) (line 601)
            _make_id_call_result_254784 = invoke(stypy.reporting.localization.Localization(__file__, 601, 18), _make_id_254780, *[unicode_254781, dictkey_254782], **kwargs_254783)
            
            # Assigning a type to the variable 'oid' (line 601)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 601, 12), 'oid', _make_id_call_result_254784)
            
            # Call to start(...): (line 602)
            # Processing the call arguments (line 602)
            unicode_254787 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 602, 25), 'unicode', u'defs')
            # Processing the call keyword arguments (line 602)
            kwargs_254788 = {}
            # Getting the type of 'writer' (line 602)
            writer_254785 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 602, 12), 'writer', False)
            # Obtaining the member 'start' of a type (line 602)
            start_254786 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 602, 12), writer_254785, 'start')
            # Calling start(args, kwargs) (line 602)
            start_call_result_254789 = invoke(stypy.reporting.localization.Localization(__file__, 602, 12), start_254786, *[unicode_254787], **kwargs_254788)
            
            
            # Call to element(...): (line 603)
            # Processing the call arguments (line 603)
            unicode_254792 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 603, 27), 'unicode', u'path')
            # Processing the call keyword arguments (line 603)
            # Getting the type of 'oid' (line 603)
            oid_254793 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 603, 38), 'oid', False)
            keyword_254794 = oid_254793
            # Getting the type of 'path_data' (line 603)
            path_data_254795 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 603, 45), 'path_data', False)
            keyword_254796 = path_data_254795
            # Getting the type of 'style' (line 603)
            style_254797 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 603, 62), 'style', False)
            keyword_254798 = style_254797
            kwargs_254799 = {'style': keyword_254798, 'id': keyword_254794, 'd': keyword_254796}
            # Getting the type of 'writer' (line 603)
            writer_254790 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 603, 12), 'writer', False)
            # Obtaining the member 'element' of a type (line 603)
            element_254791 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 603, 12), writer_254790, 'element')
            # Calling element(args, kwargs) (line 603)
            element_call_result_254800 = invoke(stypy.reporting.localization.Localization(__file__, 603, 12), element_254791, *[unicode_254792], **kwargs_254799)
            
            
            # Call to end(...): (line 604)
            # Processing the call arguments (line 604)
            unicode_254803 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 604, 23), 'unicode', u'defs')
            # Processing the call keyword arguments (line 604)
            kwargs_254804 = {}
            # Getting the type of 'writer' (line 604)
            writer_254801 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 604, 12), 'writer', False)
            # Obtaining the member 'end' of a type (line 604)
            end_254802 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 604, 12), writer_254801, 'end')
            # Calling end(args, kwargs) (line 604)
            end_call_result_254805 = invoke(stypy.reporting.localization.Localization(__file__, 604, 12), end_254802, *[unicode_254803], **kwargs_254804)
            
            
            # Assigning a Name to a Subscript (line 605):
            
            # Assigning a Name to a Subscript (line 605):
            # Getting the type of 'oid' (line 605)
            oid_254806 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 605, 37), 'oid')
            # Getting the type of 'self' (line 605)
            self_254807 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 605, 12), 'self')
            # Obtaining the member '_markers' of a type (line 605)
            _markers_254808 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 605, 12), self_254807, '_markers')
            # Getting the type of 'dictkey' (line 605)
            dictkey_254809 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 605, 26), 'dictkey')
            # Storing an element on a container (line 605)
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 605, 12), _markers_254808, (dictkey_254809, oid_254806))

            if more_types_in_union_254778:
                # SSA join for if statement (line 600)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Dict to a Name (line 607):
        
        # Assigning a Dict to a Name (line 607):
        
        # Obtaining an instance of the builtin type 'dict' (line 607)
        dict_254810 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 607, 17), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 607)
        
        # Assigning a type to the variable 'attrib' (line 607)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 607, 8), 'attrib', dict_254810)
        
        # Assigning a Call to a Name (line 608):
        
        # Assigning a Call to a Name (line 608):
        
        # Call to _get_clip(...): (line 608)
        # Processing the call arguments (line 608)
        # Getting the type of 'gc' (line 608)
        gc_254813 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 608, 32), 'gc', False)
        # Processing the call keyword arguments (line 608)
        kwargs_254814 = {}
        # Getting the type of 'self' (line 608)
        self_254811 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 608, 17), 'self', False)
        # Obtaining the member '_get_clip' of a type (line 608)
        _get_clip_254812 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 608, 17), self_254811, '_get_clip')
        # Calling _get_clip(args, kwargs) (line 608)
        _get_clip_call_result_254815 = invoke(stypy.reporting.localization.Localization(__file__, 608, 17), _get_clip_254812, *[gc_254813], **kwargs_254814)
        
        # Assigning a type to the variable 'clipid' (line 608)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 608, 8), 'clipid', _get_clip_call_result_254815)
        
        # Type idiom detected: calculating its left and rigth part (line 609)
        # Getting the type of 'clipid' (line 609)
        clipid_254816 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 609, 8), 'clipid')
        # Getting the type of 'None' (line 609)
        None_254817 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 609, 25), 'None')
        
        (may_be_254818, more_types_in_union_254819) = may_not_be_none(clipid_254816, None_254817)

        if may_be_254818:

            if more_types_in_union_254819:
                # Runtime conditional SSA (line 609)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a BinOp to a Subscript (line 610):
            
            # Assigning a BinOp to a Subscript (line 610):
            unicode_254820 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 610, 34), 'unicode', u'url(#%s)')
            # Getting the type of 'clipid' (line 610)
            clipid_254821 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 610, 47), 'clipid')
            # Applying the binary operator '%' (line 610)
            result_mod_254822 = python_operator(stypy.reporting.localization.Localization(__file__, 610, 34), '%', unicode_254820, clipid_254821)
            
            # Getting the type of 'attrib' (line 610)
            attrib_254823 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 610, 12), 'attrib')
            unicode_254824 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 610, 19), 'unicode', u'clip-path')
            # Storing an element on a container (line 610)
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 610, 12), attrib_254823, (unicode_254824, result_mod_254822))

            if more_types_in_union_254819:
                # SSA join for if statement (line 609)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Call to start(...): (line 611)
        # Processing the call arguments (line 611)
        unicode_254827 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 611, 21), 'unicode', u'g')
        # Processing the call keyword arguments (line 611)
        # Getting the type of 'attrib' (line 611)
        attrib_254828 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 611, 33), 'attrib', False)
        keyword_254829 = attrib_254828
        kwargs_254830 = {'attrib': keyword_254829}
        # Getting the type of 'writer' (line 611)
        writer_254825 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 611, 8), 'writer', False)
        # Obtaining the member 'start' of a type (line 611)
        start_254826 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 611, 8), writer_254825, 'start')
        # Calling start(args, kwargs) (line 611)
        start_call_result_254831 = invoke(stypy.reporting.localization.Localization(__file__, 611, 8), start_254826, *[unicode_254827], **kwargs_254830)
        
        
        # Assigning a Call to a Name (line 613):
        
        # Assigning a Call to a Name (line 613):
        
        # Call to _make_flip_transform(...): (line 613)
        # Processing the call arguments (line 613)
        # Getting the type of 'trans' (line 613)
        trans_254834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 613, 51), 'trans', False)
        # Processing the call keyword arguments (line 613)
        kwargs_254835 = {}
        # Getting the type of 'self' (line 613)
        self_254832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 613, 25), 'self', False)
        # Obtaining the member '_make_flip_transform' of a type (line 613)
        _make_flip_transform_254833 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 613, 25), self_254832, '_make_flip_transform')
        # Calling _make_flip_transform(args, kwargs) (line 613)
        _make_flip_transform_call_result_254836 = invoke(stypy.reporting.localization.Localization(__file__, 613, 25), _make_flip_transform_254833, *[trans_254834], **kwargs_254835)
        
        # Assigning a type to the variable 'trans_and_flip' (line 613)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 613, 8), 'trans_and_flip', _make_flip_transform_call_result_254836)
        
        # Assigning a Dict to a Name (line 614):
        
        # Assigning a Dict to a Name (line 614):
        
        # Obtaining an instance of the builtin type 'dict' (line 614)
        dict_254837 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 614, 17), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 614)
        # Adding element type (key, value) (line 614)
        unicode_254838 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 614, 18), 'unicode', u'xlink:href')
        unicode_254839 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 614, 32), 'unicode', u'#%s')
        # Getting the type of 'oid' (line 614)
        oid_254840 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 614, 40), 'oid')
        # Applying the binary operator '%' (line 614)
        result_mod_254841 = python_operator(stypy.reporting.localization.Localization(__file__, 614, 32), '%', unicode_254839, oid_254840)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 614, 17), dict_254837, (unicode_254838, result_mod_254841))
        
        # Assigning a type to the variable 'attrib' (line 614)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 614, 8), 'attrib', dict_254837)
        
        # Assigning a Tuple to a Name (line 615):
        
        # Assigning a Tuple to a Name (line 615):
        
        # Obtaining an instance of the builtin type 'tuple' (line 615)
        tuple_254842 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 615, 16), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 615)
        # Adding element type (line 615)
        int_254843 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 615, 16), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 615, 16), tuple_254842, int_254843)
        # Adding element type (line 615)
        int_254844 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 615, 19), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 615, 16), tuple_254842, int_254844)
        # Adding element type (line 615)
        # Getting the type of 'self' (line 615)
        self_254845 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 615, 22), 'self')
        # Obtaining the member 'width' of a type (line 615)
        width_254846 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 615, 22), self_254845, 'width')
        int_254847 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 615, 33), 'int')
        # Applying the binary operator '*' (line 615)
        result_mul_254848 = python_operator(stypy.reporting.localization.Localization(__file__, 615, 22), '*', width_254846, int_254847)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 615, 16), tuple_254842, result_mul_254848)
        # Adding element type (line 615)
        # Getting the type of 'self' (line 615)
        self_254849 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 615, 37), 'self')
        # Obtaining the member 'height' of a type (line 615)
        height_254850 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 615, 37), self_254849, 'height')
        int_254851 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 615, 49), 'int')
        # Applying the binary operator '*' (line 615)
        result_mul_254852 = python_operator(stypy.reporting.localization.Localization(__file__, 615, 37), '*', height_254850, int_254851)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 615, 16), tuple_254842, result_mul_254852)
        
        # Assigning a type to the variable 'clip' (line 615)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 615, 8), 'clip', tuple_254842)
        
        
        # Call to iter_segments(...): (line 616)
        # Processing the call arguments (line 616)
        # Getting the type of 'trans_and_flip' (line 617)
        trans_and_flip_254855 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 617, 16), 'trans_and_flip', False)
        # Processing the call keyword arguments (line 616)
        # Getting the type of 'clip' (line 617)
        clip_254856 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 617, 37), 'clip', False)
        keyword_254857 = clip_254856
        # Getting the type of 'False' (line 617)
        False_254858 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 617, 52), 'False', False)
        keyword_254859 = False_254858
        kwargs_254860 = {'simplify': keyword_254859, 'clip': keyword_254857}
        # Getting the type of 'path' (line 616)
        path_254853 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 616, 30), 'path', False)
        # Obtaining the member 'iter_segments' of a type (line 616)
        iter_segments_254854 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 616, 30), path_254853, 'iter_segments')
        # Calling iter_segments(args, kwargs) (line 616)
        iter_segments_call_result_254861 = invoke(stypy.reporting.localization.Localization(__file__, 616, 30), iter_segments_254854, *[trans_and_flip_254855], **kwargs_254860)
        
        # Testing the type of a for loop iterable (line 616)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 616, 8), iter_segments_call_result_254861)
        # Getting the type of the for loop variable (line 616)
        for_loop_var_254862 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 616, 8), iter_segments_call_result_254861)
        # Assigning a type to the variable 'vertices' (line 616)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 616, 8), 'vertices', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 616, 8), for_loop_var_254862))
        # Assigning a type to the variable 'code' (line 616)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 616, 8), 'code', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 616, 8), for_loop_var_254862))
        # SSA begins for a for statement (line 616)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        
        # Call to len(...): (line 618)
        # Processing the call arguments (line 618)
        # Getting the type of 'vertices' (line 618)
        vertices_254864 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 618, 19), 'vertices', False)
        # Processing the call keyword arguments (line 618)
        kwargs_254865 = {}
        # Getting the type of 'len' (line 618)
        len_254863 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 618, 15), 'len', False)
        # Calling len(args, kwargs) (line 618)
        len_call_result_254866 = invoke(stypy.reporting.localization.Localization(__file__, 618, 15), len_254863, *[vertices_254864], **kwargs_254865)
        
        # Testing the type of an if condition (line 618)
        if_condition_254867 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 618, 12), len_call_result_254866)
        # Assigning a type to the variable 'if_condition_254867' (line 618)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 618, 12), 'if_condition_254867', if_condition_254867)
        # SSA begins for if statement (line 618)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Subscript to a Tuple (line 619):
        
        # Assigning a Subscript to a Name (line 619):
        
        # Obtaining the type of the subscript
        int_254868 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 619, 16), 'int')
        
        # Obtaining the type of the subscript
        int_254869 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 619, 32), 'int')
        slice_254870 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 619, 23), int_254869, None, None)
        # Getting the type of 'vertices' (line 619)
        vertices_254871 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 619, 23), 'vertices')
        # Obtaining the member '__getitem__' of a type (line 619)
        getitem___254872 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 619, 23), vertices_254871, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 619)
        subscript_call_result_254873 = invoke(stypy.reporting.localization.Localization(__file__, 619, 23), getitem___254872, slice_254870)
        
        # Obtaining the member '__getitem__' of a type (line 619)
        getitem___254874 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 619, 16), subscript_call_result_254873, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 619)
        subscript_call_result_254875 = invoke(stypy.reporting.localization.Localization(__file__, 619, 16), getitem___254874, int_254868)
        
        # Assigning a type to the variable 'tuple_var_assignment_252812' (line 619)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 619, 16), 'tuple_var_assignment_252812', subscript_call_result_254875)
        
        # Assigning a Subscript to a Name (line 619):
        
        # Obtaining the type of the subscript
        int_254876 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 619, 16), 'int')
        
        # Obtaining the type of the subscript
        int_254877 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 619, 32), 'int')
        slice_254878 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 619, 23), int_254877, None, None)
        # Getting the type of 'vertices' (line 619)
        vertices_254879 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 619, 23), 'vertices')
        # Obtaining the member '__getitem__' of a type (line 619)
        getitem___254880 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 619, 23), vertices_254879, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 619)
        subscript_call_result_254881 = invoke(stypy.reporting.localization.Localization(__file__, 619, 23), getitem___254880, slice_254878)
        
        # Obtaining the member '__getitem__' of a type (line 619)
        getitem___254882 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 619, 16), subscript_call_result_254881, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 619)
        subscript_call_result_254883 = invoke(stypy.reporting.localization.Localization(__file__, 619, 16), getitem___254882, int_254876)
        
        # Assigning a type to the variable 'tuple_var_assignment_252813' (line 619)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 619, 16), 'tuple_var_assignment_252813', subscript_call_result_254883)
        
        # Assigning a Name to a Name (line 619):
        # Getting the type of 'tuple_var_assignment_252812' (line 619)
        tuple_var_assignment_252812_254884 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 619, 16), 'tuple_var_assignment_252812')
        # Assigning a type to the variable 'x' (line 619)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 619, 16), 'x', tuple_var_assignment_252812_254884)
        
        # Assigning a Name to a Name (line 619):
        # Getting the type of 'tuple_var_assignment_252813' (line 619)
        tuple_var_assignment_252813_254885 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 619, 16), 'tuple_var_assignment_252813')
        # Assigning a type to the variable 'y' (line 619)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 619, 19), 'y', tuple_var_assignment_252813_254885)
        
        # Assigning a Call to a Subscript (line 620):
        
        # Assigning a Call to a Subscript (line 620):
        
        # Call to short_float_fmt(...): (line 620)
        # Processing the call arguments (line 620)
        # Getting the type of 'x' (line 620)
        x_254887 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 620, 46), 'x', False)
        # Processing the call keyword arguments (line 620)
        kwargs_254888 = {}
        # Getting the type of 'short_float_fmt' (line 620)
        short_float_fmt_254886 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 620, 30), 'short_float_fmt', False)
        # Calling short_float_fmt(args, kwargs) (line 620)
        short_float_fmt_call_result_254889 = invoke(stypy.reporting.localization.Localization(__file__, 620, 30), short_float_fmt_254886, *[x_254887], **kwargs_254888)
        
        # Getting the type of 'attrib' (line 620)
        attrib_254890 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 620, 16), 'attrib')
        unicode_254891 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 620, 23), 'unicode', u'x')
        # Storing an element on a container (line 620)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 620, 16), attrib_254890, (unicode_254891, short_float_fmt_call_result_254889))
        
        # Assigning a Call to a Subscript (line 621):
        
        # Assigning a Call to a Subscript (line 621):
        
        # Call to short_float_fmt(...): (line 621)
        # Processing the call arguments (line 621)
        # Getting the type of 'y' (line 621)
        y_254893 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 621, 46), 'y', False)
        # Processing the call keyword arguments (line 621)
        kwargs_254894 = {}
        # Getting the type of 'short_float_fmt' (line 621)
        short_float_fmt_254892 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 621, 30), 'short_float_fmt', False)
        # Calling short_float_fmt(args, kwargs) (line 621)
        short_float_fmt_call_result_254895 = invoke(stypy.reporting.localization.Localization(__file__, 621, 30), short_float_fmt_254892, *[y_254893], **kwargs_254894)
        
        # Getting the type of 'attrib' (line 621)
        attrib_254896 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 621, 16), 'attrib')
        unicode_254897 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 621, 23), 'unicode', u'y')
        # Storing an element on a container (line 621)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 621, 16), attrib_254896, (unicode_254897, short_float_fmt_call_result_254895))
        
        # Assigning a Call to a Subscript (line 622):
        
        # Assigning a Call to a Subscript (line 622):
        
        # Call to _get_style(...): (line 622)
        # Processing the call arguments (line 622)
        # Getting the type of 'gc' (line 622)
        gc_254900 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 622, 50), 'gc', False)
        # Getting the type of 'rgbFace' (line 622)
        rgbFace_254901 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 622, 54), 'rgbFace', False)
        # Processing the call keyword arguments (line 622)
        kwargs_254902 = {}
        # Getting the type of 'self' (line 622)
        self_254898 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 622, 34), 'self', False)
        # Obtaining the member '_get_style' of a type (line 622)
        _get_style_254899 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 622, 34), self_254898, '_get_style')
        # Calling _get_style(args, kwargs) (line 622)
        _get_style_call_result_254903 = invoke(stypy.reporting.localization.Localization(__file__, 622, 34), _get_style_254899, *[gc_254900, rgbFace_254901], **kwargs_254902)
        
        # Getting the type of 'attrib' (line 622)
        attrib_254904 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 622, 16), 'attrib')
        unicode_254905 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 622, 23), 'unicode', u'style')
        # Storing an element on a container (line 622)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 622, 16), attrib_254904, (unicode_254905, _get_style_call_result_254903))
        
        # Call to element(...): (line 623)
        # Processing the call arguments (line 623)
        unicode_254908 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 623, 31), 'unicode', u'use')
        # Processing the call keyword arguments (line 623)
        # Getting the type of 'attrib' (line 623)
        attrib_254909 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 623, 45), 'attrib', False)
        keyword_254910 = attrib_254909
        kwargs_254911 = {'attrib': keyword_254910}
        # Getting the type of 'writer' (line 623)
        writer_254906 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 623, 16), 'writer', False)
        # Obtaining the member 'element' of a type (line 623)
        element_254907 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 623, 16), writer_254906, 'element')
        # Calling element(args, kwargs) (line 623)
        element_call_result_254912 = invoke(stypy.reporting.localization.Localization(__file__, 623, 16), element_254907, *[unicode_254908], **kwargs_254911)
        
        # SSA join for if statement (line 618)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to end(...): (line 624)
        # Processing the call arguments (line 624)
        unicode_254915 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 624, 19), 'unicode', u'g')
        # Processing the call keyword arguments (line 624)
        kwargs_254916 = {}
        # Getting the type of 'writer' (line 624)
        writer_254913 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 624, 8), 'writer', False)
        # Obtaining the member 'end' of a type (line 624)
        end_254914 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 624, 8), writer_254913, 'end')
        # Calling end(args, kwargs) (line 624)
        end_call_result_254917 = invoke(stypy.reporting.localization.Localization(__file__, 624, 8), end_254914, *[unicode_254915], **kwargs_254916)
        
        
        # ################# End of 'draw_markers(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'draw_markers' in the type store
        # Getting the type of 'stypy_return_type' (line 585)
        stypy_return_type_254918 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 585, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_254918)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'draw_markers'
        return stypy_return_type_254918


    @norecursion
    def draw_path_collection(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'draw_path_collection'
        module_type_store = module_type_store.open_function_context('draw_path_collection', 626, 4, False)
        # Assigning a type to the variable 'self' (line 627)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 627, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererSVG.draw_path_collection.__dict__.__setitem__('stypy_localization', localization)
        RendererSVG.draw_path_collection.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererSVG.draw_path_collection.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererSVG.draw_path_collection.__dict__.__setitem__('stypy_function_name', 'RendererSVG.draw_path_collection')
        RendererSVG.draw_path_collection.__dict__.__setitem__('stypy_param_names_list', ['gc', 'master_transform', 'paths', 'all_transforms', 'offsets', 'offsetTrans', 'facecolors', 'edgecolors', 'linewidths', 'linestyles', 'antialiaseds', 'urls', 'offset_position'])
        RendererSVG.draw_path_collection.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererSVG.draw_path_collection.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererSVG.draw_path_collection.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererSVG.draw_path_collection.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererSVG.draw_path_collection.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererSVG.draw_path_collection.__dict__.__setitem__('stypy_declared_arg_number', 14)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererSVG.draw_path_collection', ['gc', 'master_transform', 'paths', 'all_transforms', 'offsets', 'offsetTrans', 'facecolors', 'edgecolors', 'linewidths', 'linestyles', 'antialiaseds', 'urls', 'offset_position'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'draw_path_collection', localization, ['gc', 'master_transform', 'paths', 'all_transforms', 'offsets', 'offsetTrans', 'facecolors', 'edgecolors', 'linewidths', 'linestyles', 'antialiaseds', 'urls', 'offset_position'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'draw_path_collection(...)' code ##################

        
        # Assigning a IfExp to a Name (line 635):
        
        # Assigning a IfExp to a Name (line 635):
        
        
        
        # Call to len(...): (line 635)
        # Processing the call arguments (line 635)
        # Getting the type of 'paths' (line 635)
        paths_254920 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 635, 49), 'paths', False)
        # Processing the call keyword arguments (line 635)
        kwargs_254921 = {}
        # Getting the type of 'len' (line 635)
        len_254919 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 635, 45), 'len', False)
        # Calling len(args, kwargs) (line 635)
        len_call_result_254922 = invoke(stypy.reporting.localization.Localization(__file__, 635, 45), len_254919, *[paths_254920], **kwargs_254921)
        
        int_254923 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 635, 58), 'int')
        # Applying the binary operator '>' (line 635)
        result_gt_254924 = python_operator(stypy.reporting.localization.Localization(__file__, 635, 45), '>', len_call_result_254922, int_254923)
        
        # Testing the type of an if expression (line 635)
        is_suitable_condition(stypy.reporting.localization.Localization(__file__, 635, 19), result_gt_254924)
        # SSA begins for if expression (line 635)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if expression')
        
        # Call to len(...): (line 635)
        # Processing the call arguments (line 635)
        
        # Obtaining the type of the subscript
        int_254926 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 635, 29), 'int')
        # Getting the type of 'paths' (line 635)
        paths_254927 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 635, 23), 'paths', False)
        # Obtaining the member '__getitem__' of a type (line 635)
        getitem___254928 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 635, 23), paths_254927, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 635)
        subscript_call_result_254929 = invoke(stypy.reporting.localization.Localization(__file__, 635, 23), getitem___254928, int_254926)
        
        # Obtaining the member 'vertices' of a type (line 635)
        vertices_254930 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 635, 23), subscript_call_result_254929, 'vertices')
        # Processing the call keyword arguments (line 635)
        kwargs_254931 = {}
        # Getting the type of 'len' (line 635)
        len_254925 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 635, 19), 'len', False)
        # Calling len(args, kwargs) (line 635)
        len_call_result_254932 = invoke(stypy.reporting.localization.Localization(__file__, 635, 19), len_254925, *[vertices_254930], **kwargs_254931)
        
        # SSA branch for the else part of an if expression (line 635)
        module_type_store.open_ssa_branch('if expression else')
        int_254933 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 635, 65), 'int')
        # SSA join for if expression (line 635)
        module_type_store = module_type_store.join_ssa_context()
        if_exp_254934 = union_type.UnionType.add(len_call_result_254932, int_254933)
        
        # Assigning a type to the variable 'len_path' (line 635)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 635, 8), 'len_path', if_exp_254934)
        
        # Assigning a Call to a Name (line 636):
        
        # Assigning a Call to a Name (line 636):
        
        # Call to _iter_collection_uses_per_path(...): (line 636)
        # Processing the call arguments (line 636)
        # Getting the type of 'paths' (line 637)
        paths_254937 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 637, 12), 'paths', False)
        # Getting the type of 'all_transforms' (line 637)
        all_transforms_254938 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 637, 19), 'all_transforms', False)
        # Getting the type of 'offsets' (line 637)
        offsets_254939 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 637, 35), 'offsets', False)
        # Getting the type of 'facecolors' (line 637)
        facecolors_254940 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 637, 44), 'facecolors', False)
        # Getting the type of 'edgecolors' (line 637)
        edgecolors_254941 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 637, 56), 'edgecolors', False)
        # Processing the call keyword arguments (line 636)
        kwargs_254942 = {}
        # Getting the type of 'self' (line 636)
        self_254935 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 636, 24), 'self', False)
        # Obtaining the member '_iter_collection_uses_per_path' of a type (line 636)
        _iter_collection_uses_per_path_254936 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 636, 24), self_254935, '_iter_collection_uses_per_path')
        # Calling _iter_collection_uses_per_path(args, kwargs) (line 636)
        _iter_collection_uses_per_path_call_result_254943 = invoke(stypy.reporting.localization.Localization(__file__, 636, 24), _iter_collection_uses_per_path_254936, *[paths_254937, all_transforms_254938, offsets_254939, facecolors_254940, edgecolors_254941], **kwargs_254942)
        
        # Assigning a type to the variable 'uses_per_path' (line 636)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 636, 8), 'uses_per_path', _iter_collection_uses_per_path_call_result_254943)
        
        # Assigning a Compare to a Name (line 638):
        
        # Assigning a Compare to a Name (line 638):
        
        # Getting the type of 'len_path' (line 639)
        len_path_254944 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 639, 12), 'len_path')
        int_254945 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 639, 23), 'int')
        # Getting the type of 'uses_per_path' (line 639)
        uses_per_path_254946 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 639, 27), 'uses_per_path')
        # Applying the binary operator '*' (line 639)
        result_mul_254947 = python_operator(stypy.reporting.localization.Localization(__file__, 639, 23), '*', int_254945, uses_per_path_254946)
        
        # Applying the binary operator '+' (line 639)
        result_add_254948 = python_operator(stypy.reporting.localization.Localization(__file__, 639, 12), '+', len_path_254944, result_mul_254947)
        
        int_254949 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 639, 43), 'int')
        # Applying the binary operator '+' (line 639)
        result_add_254950 = python_operator(stypy.reporting.localization.Localization(__file__, 639, 41), '+', result_add_254948, int_254949)
        
        # Getting the type of 'len_path' (line 639)
        len_path_254951 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 639, 48), 'len_path')
        int_254952 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 639, 59), 'int')
        # Applying the binary operator '+' (line 639)
        result_add_254953 = python_operator(stypy.reporting.localization.Localization(__file__, 639, 48), '+', len_path_254951, int_254952)
        
        # Getting the type of 'uses_per_path' (line 639)
        uses_per_path_254954 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 639, 64), 'uses_per_path')
        # Applying the binary operator '*' (line 639)
        result_mul_254955 = python_operator(stypy.reporting.localization.Localization(__file__, 639, 47), '*', result_add_254953, uses_per_path_254954)
        
        # Applying the binary operator '<' (line 639)
        result_lt_254956 = python_operator(stypy.reporting.localization.Localization(__file__, 639, 12), '<', result_add_254950, result_mul_254955)
        
        # Assigning a type to the variable 'should_do_optimization' (line 638)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 638, 8), 'should_do_optimization', result_lt_254956)
        
        
        # Getting the type of 'should_do_optimization' (line 640)
        should_do_optimization_254957 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 640, 15), 'should_do_optimization')
        # Applying the 'not' unary operator (line 640)
        result_not__254958 = python_operator(stypy.reporting.localization.Localization(__file__, 640, 11), 'not', should_do_optimization_254957)
        
        # Testing the type of an if condition (line 640)
        if_condition_254959 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 640, 8), result_not__254958)
        # Assigning a type to the variable 'if_condition_254959' (line 640)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 640, 8), 'if_condition_254959', if_condition_254959)
        # SSA begins for if statement (line 640)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to draw_path_collection(...): (line 641)
        # Processing the call arguments (line 641)
        # Getting the type of 'self' (line 642)
        self_254962 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 642, 16), 'self', False)
        # Getting the type of 'gc' (line 642)
        gc_254963 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 642, 22), 'gc', False)
        # Getting the type of 'master_transform' (line 642)
        master_transform_254964 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 642, 26), 'master_transform', False)
        # Getting the type of 'paths' (line 642)
        paths_254965 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 642, 44), 'paths', False)
        # Getting the type of 'all_transforms' (line 642)
        all_transforms_254966 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 642, 51), 'all_transforms', False)
        # Getting the type of 'offsets' (line 643)
        offsets_254967 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 643, 16), 'offsets', False)
        # Getting the type of 'offsetTrans' (line 643)
        offsetTrans_254968 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 643, 25), 'offsetTrans', False)
        # Getting the type of 'facecolors' (line 643)
        facecolors_254969 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 643, 38), 'facecolors', False)
        # Getting the type of 'edgecolors' (line 643)
        edgecolors_254970 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 643, 50), 'edgecolors', False)
        # Getting the type of 'linewidths' (line 644)
        linewidths_254971 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 644, 16), 'linewidths', False)
        # Getting the type of 'linestyles' (line 644)
        linestyles_254972 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 644, 28), 'linestyles', False)
        # Getting the type of 'antialiaseds' (line 644)
        antialiaseds_254973 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 644, 40), 'antialiaseds', False)
        # Getting the type of 'urls' (line 644)
        urls_254974 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 644, 54), 'urls', False)
        # Getting the type of 'offset_position' (line 645)
        offset_position_254975 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 645, 16), 'offset_position', False)
        # Processing the call keyword arguments (line 641)
        kwargs_254976 = {}
        # Getting the type of 'RendererBase' (line 641)
        RendererBase_254960 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 641, 19), 'RendererBase', False)
        # Obtaining the member 'draw_path_collection' of a type (line 641)
        draw_path_collection_254961 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 641, 19), RendererBase_254960, 'draw_path_collection')
        # Calling draw_path_collection(args, kwargs) (line 641)
        draw_path_collection_call_result_254977 = invoke(stypy.reporting.localization.Localization(__file__, 641, 19), draw_path_collection_254961, *[self_254962, gc_254963, master_transform_254964, paths_254965, all_transforms_254966, offsets_254967, offsetTrans_254968, facecolors_254969, edgecolors_254970, linewidths_254971, linestyles_254972, antialiaseds_254973, urls_254974, offset_position_254975], **kwargs_254976)
        
        # Assigning a type to the variable 'stypy_return_type' (line 641)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 641, 12), 'stypy_return_type', draw_path_collection_call_result_254977)
        # SSA join for if statement (line 640)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Attribute to a Name (line 647):
        
        # Assigning a Attribute to a Name (line 647):
        # Getting the type of 'self' (line 647)
        self_254978 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 647, 17), 'self')
        # Obtaining the member 'writer' of a type (line 647)
        writer_254979 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 647, 17), self_254978, 'writer')
        # Assigning a type to the variable 'writer' (line 647)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 647, 8), 'writer', writer_254979)
        
        # Assigning a List to a Name (line 648):
        
        # Assigning a List to a Name (line 648):
        
        # Obtaining an instance of the builtin type 'list' (line 648)
        list_254980 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 648, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 648)
        
        # Assigning a type to the variable 'path_codes' (line 648)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 648, 8), 'path_codes', list_254980)
        
        # Call to start(...): (line 649)
        # Processing the call arguments (line 649)
        unicode_254983 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 649, 21), 'unicode', u'defs')
        # Processing the call keyword arguments (line 649)
        kwargs_254984 = {}
        # Getting the type of 'writer' (line 649)
        writer_254981 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 649, 8), 'writer', False)
        # Obtaining the member 'start' of a type (line 649)
        start_254982 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 649, 8), writer_254981, 'start')
        # Calling start(args, kwargs) (line 649)
        start_call_result_254985 = invoke(stypy.reporting.localization.Localization(__file__, 649, 8), start_254982, *[unicode_254983], **kwargs_254984)
        
        
        
        # Call to enumerate(...): (line 650)
        # Processing the call arguments (line 650)
        
        # Call to _iter_collection_raw_paths(...): (line 650)
        # Processing the call arguments (line 650)
        # Getting the type of 'master_transform' (line 651)
        master_transform_254989 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 651, 12), 'master_transform', False)
        # Getting the type of 'paths' (line 651)
        paths_254990 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 651, 30), 'paths', False)
        # Getting the type of 'all_transforms' (line 651)
        all_transforms_254991 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 651, 37), 'all_transforms', False)
        # Processing the call keyword arguments (line 650)
        kwargs_254992 = {}
        # Getting the type of 'self' (line 650)
        self_254987 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 650, 46), 'self', False)
        # Obtaining the member '_iter_collection_raw_paths' of a type (line 650)
        _iter_collection_raw_paths_254988 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 650, 46), self_254987, '_iter_collection_raw_paths')
        # Calling _iter_collection_raw_paths(args, kwargs) (line 650)
        _iter_collection_raw_paths_call_result_254993 = invoke(stypy.reporting.localization.Localization(__file__, 650, 46), _iter_collection_raw_paths_254988, *[master_transform_254989, paths_254990, all_transforms_254991], **kwargs_254992)
        
        # Processing the call keyword arguments (line 650)
        kwargs_254994 = {}
        # Getting the type of 'enumerate' (line 650)
        enumerate_254986 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 650, 36), 'enumerate', False)
        # Calling enumerate(args, kwargs) (line 650)
        enumerate_call_result_254995 = invoke(stypy.reporting.localization.Localization(__file__, 650, 36), enumerate_254986, *[_iter_collection_raw_paths_call_result_254993], **kwargs_254994)
        
        # Testing the type of a for loop iterable (line 650)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 650, 8), enumerate_call_result_254995)
        # Getting the type of the for loop variable (line 650)
        for_loop_var_254996 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 650, 8), enumerate_call_result_254995)
        # Assigning a type to the variable 'i' (line 650)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 650, 8), 'i', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 650, 8), for_loop_var_254996))
        # Assigning a type to the variable 'path' (line 650)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 650, 8), 'path', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 650, 8), for_loop_var_254996))
        # Assigning a type to the variable 'transform' (line 650)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 650, 8), 'transform', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 650, 8), for_loop_var_254996))
        # SSA begins for a for statement (line 650)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 652):
        
        # Assigning a Call to a Name (line 652):
        
        # Call to scale(...): (line 652)
        # Processing the call arguments (line 652)
        float_255005 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 652, 63), 'float')
        float_255006 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 652, 68), 'float')
        # Processing the call keyword arguments (line 652)
        kwargs_255007 = {}
        
        # Call to Affine2D(...): (line 652)
        # Processing the call arguments (line 652)
        
        # Call to get_matrix(...): (line 652)
        # Processing the call keyword arguments (line 652)
        kwargs_255000 = {}
        # Getting the type of 'transform' (line 652)
        transform_254998 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 652, 33), 'transform', False)
        # Obtaining the member 'get_matrix' of a type (line 652)
        get_matrix_254999 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 652, 33), transform_254998, 'get_matrix')
        # Calling get_matrix(args, kwargs) (line 652)
        get_matrix_call_result_255001 = invoke(stypy.reporting.localization.Localization(__file__, 652, 33), get_matrix_254999, *[], **kwargs_255000)
        
        # Processing the call keyword arguments (line 652)
        kwargs_255002 = {}
        # Getting the type of 'Affine2D' (line 652)
        Affine2D_254997 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 652, 24), 'Affine2D', False)
        # Calling Affine2D(args, kwargs) (line 652)
        Affine2D_call_result_255003 = invoke(stypy.reporting.localization.Localization(__file__, 652, 24), Affine2D_254997, *[get_matrix_call_result_255001], **kwargs_255002)
        
        # Obtaining the member 'scale' of a type (line 652)
        scale_255004 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 652, 24), Affine2D_call_result_255003, 'scale')
        # Calling scale(args, kwargs) (line 652)
        scale_call_result_255008 = invoke(stypy.reporting.localization.Localization(__file__, 652, 24), scale_255004, *[float_255005, float_255006], **kwargs_255007)
        
        # Assigning a type to the variable 'transform' (line 652)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 652, 12), 'transform', scale_call_result_255008)
        
        # Assigning a Call to a Name (line 653):
        
        # Assigning a Call to a Name (line 653):
        
        # Call to _convert_path(...): (line 653)
        # Processing the call arguments (line 653)
        # Getting the type of 'path' (line 653)
        path_255011 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 653, 35), 'path', False)
        # Getting the type of 'transform' (line 653)
        transform_255012 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 653, 41), 'transform', False)
        # Processing the call keyword arguments (line 653)
        # Getting the type of 'False' (line 653)
        False_255013 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 653, 61), 'False', False)
        keyword_255014 = False_255013
        kwargs_255015 = {'simplify': keyword_255014}
        # Getting the type of 'self' (line 653)
        self_255009 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 653, 16), 'self', False)
        # Obtaining the member '_convert_path' of a type (line 653)
        _convert_path_255010 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 653, 16), self_255009, '_convert_path')
        # Calling _convert_path(args, kwargs) (line 653)
        _convert_path_call_result_255016 = invoke(stypy.reporting.localization.Localization(__file__, 653, 16), _convert_path_255010, *[path_255011, transform_255012], **kwargs_255015)
        
        # Assigning a type to the variable 'd' (line 653)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 653, 12), 'd', _convert_path_call_result_255016)
        
        # Assigning a BinOp to a Name (line 654):
        
        # Assigning a BinOp to a Name (line 654):
        unicode_255017 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 654, 18), 'unicode', u'C%x_%x_%s')
        
        # Obtaining an instance of the builtin type 'tuple' (line 654)
        tuple_255018 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 654, 33), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 654)
        # Adding element type (line 654)
        # Getting the type of 'self' (line 654)
        self_255019 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 654, 33), 'self')
        # Obtaining the member '_path_collection_id' of a type (line 654)
        _path_collection_id_255020 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 654, 33), self_255019, '_path_collection_id')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 654, 33), tuple_255018, _path_collection_id_255020)
        # Adding element type (line 654)
        # Getting the type of 'i' (line 654)
        i_255021 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 654, 59), 'i')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 654, 33), tuple_255018, i_255021)
        # Adding element type (line 654)
        
        # Call to _make_id(...): (line 655)
        # Processing the call arguments (line 655)
        unicode_255024 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 655, 48), 'unicode', u'')
        # Getting the type of 'd' (line 655)
        d_255025 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 655, 52), 'd', False)
        # Processing the call keyword arguments (line 655)
        kwargs_255026 = {}
        # Getting the type of 'self' (line 655)
        self_255022 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 655, 34), 'self', False)
        # Obtaining the member '_make_id' of a type (line 655)
        _make_id_255023 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 655, 34), self_255022, '_make_id')
        # Calling _make_id(args, kwargs) (line 655)
        _make_id_call_result_255027 = invoke(stypy.reporting.localization.Localization(__file__, 655, 34), _make_id_255023, *[unicode_255024, d_255025], **kwargs_255026)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 654, 33), tuple_255018, _make_id_call_result_255027)
        
        # Applying the binary operator '%' (line 654)
        result_mod_255028 = python_operator(stypy.reporting.localization.Localization(__file__, 654, 18), '%', unicode_255017, tuple_255018)
        
        # Assigning a type to the variable 'oid' (line 654)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 654, 12), 'oid', result_mod_255028)
        
        # Call to element(...): (line 656)
        # Processing the call arguments (line 656)
        unicode_255031 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 656, 27), 'unicode', u'path')
        # Processing the call keyword arguments (line 656)
        # Getting the type of 'oid' (line 656)
        oid_255032 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 656, 38), 'oid', False)
        keyword_255033 = oid_255032
        # Getting the type of 'd' (line 656)
        d_255034 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 656, 45), 'd', False)
        keyword_255035 = d_255034
        kwargs_255036 = {'id': keyword_255033, 'd': keyword_255035}
        # Getting the type of 'writer' (line 656)
        writer_255029 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 656, 12), 'writer', False)
        # Obtaining the member 'element' of a type (line 656)
        element_255030 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 656, 12), writer_255029, 'element')
        # Calling element(args, kwargs) (line 656)
        element_call_result_255037 = invoke(stypy.reporting.localization.Localization(__file__, 656, 12), element_255030, *[unicode_255031], **kwargs_255036)
        
        
        # Call to append(...): (line 657)
        # Processing the call arguments (line 657)
        # Getting the type of 'oid' (line 657)
        oid_255040 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 657, 30), 'oid', False)
        # Processing the call keyword arguments (line 657)
        kwargs_255041 = {}
        # Getting the type of 'path_codes' (line 657)
        path_codes_255038 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 657, 12), 'path_codes', False)
        # Obtaining the member 'append' of a type (line 657)
        append_255039 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 657, 12), path_codes_255038, 'append')
        # Calling append(args, kwargs) (line 657)
        append_call_result_255042 = invoke(stypy.reporting.localization.Localization(__file__, 657, 12), append_255039, *[oid_255040], **kwargs_255041)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to end(...): (line 658)
        # Processing the call arguments (line 658)
        unicode_255045 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 658, 19), 'unicode', u'defs')
        # Processing the call keyword arguments (line 658)
        kwargs_255046 = {}
        # Getting the type of 'writer' (line 658)
        writer_255043 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 658, 8), 'writer', False)
        # Obtaining the member 'end' of a type (line 658)
        end_255044 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 658, 8), writer_255043, 'end')
        # Calling end(args, kwargs) (line 658)
        end_call_result_255047 = invoke(stypy.reporting.localization.Localization(__file__, 658, 8), end_255044, *[unicode_255045], **kwargs_255046)
        
        
        
        # Call to _iter_collection(...): (line 660)
        # Processing the call arguments (line 660)
        # Getting the type of 'gc' (line 661)
        gc_255050 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 661, 12), 'gc', False)
        # Getting the type of 'master_transform' (line 661)
        master_transform_255051 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 661, 16), 'master_transform', False)
        # Getting the type of 'all_transforms' (line 661)
        all_transforms_255052 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 661, 34), 'all_transforms', False)
        # Getting the type of 'path_codes' (line 661)
        path_codes_255053 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 661, 50), 'path_codes', False)
        # Getting the type of 'offsets' (line 661)
        offsets_255054 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 661, 62), 'offsets', False)
        # Getting the type of 'offsetTrans' (line 662)
        offsetTrans_255055 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 662, 12), 'offsetTrans', False)
        # Getting the type of 'facecolors' (line 662)
        facecolors_255056 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 662, 25), 'facecolors', False)
        # Getting the type of 'edgecolors' (line 662)
        edgecolors_255057 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 662, 37), 'edgecolors', False)
        # Getting the type of 'linewidths' (line 662)
        linewidths_255058 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 662, 49), 'linewidths', False)
        # Getting the type of 'linestyles' (line 662)
        linestyles_255059 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 662, 61), 'linestyles', False)
        # Getting the type of 'antialiaseds' (line 663)
        antialiaseds_255060 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 663, 12), 'antialiaseds', False)
        # Getting the type of 'urls' (line 663)
        urls_255061 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 663, 26), 'urls', False)
        # Getting the type of 'offset_position' (line 663)
        offset_position_255062 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 663, 32), 'offset_position', False)
        # Processing the call keyword arguments (line 660)
        kwargs_255063 = {}
        # Getting the type of 'self' (line 660)
        self_255048 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 660, 45), 'self', False)
        # Obtaining the member '_iter_collection' of a type (line 660)
        _iter_collection_255049 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 660, 45), self_255048, '_iter_collection')
        # Calling _iter_collection(args, kwargs) (line 660)
        _iter_collection_call_result_255064 = invoke(stypy.reporting.localization.Localization(__file__, 660, 45), _iter_collection_255049, *[gc_255050, master_transform_255051, all_transforms_255052, path_codes_255053, offsets_255054, offsetTrans_255055, facecolors_255056, edgecolors_255057, linewidths_255058, linestyles_255059, antialiaseds_255060, urls_255061, offset_position_255062], **kwargs_255063)
        
        # Testing the type of a for loop iterable (line 660)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 660, 8), _iter_collection_call_result_255064)
        # Getting the type of the for loop variable (line 660)
        for_loop_var_255065 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 660, 8), _iter_collection_call_result_255064)
        # Assigning a type to the variable 'xo' (line 660)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 660, 8), 'xo', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 660, 8), for_loop_var_255065))
        # Assigning a type to the variable 'yo' (line 660)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 660, 8), 'yo', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 660, 8), for_loop_var_255065))
        # Assigning a type to the variable 'path_id' (line 660)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 660, 8), 'path_id', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 660, 8), for_loop_var_255065))
        # Assigning a type to the variable 'gc0' (line 660)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 660, 8), 'gc0', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 660, 8), for_loop_var_255065))
        # Assigning a type to the variable 'rgbFace' (line 660)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 660, 8), 'rgbFace', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 660, 8), for_loop_var_255065))
        # SSA begins for a for statement (line 660)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 664):
        
        # Assigning a Call to a Name (line 664):
        
        # Call to _get_clip(...): (line 664)
        # Processing the call arguments (line 664)
        # Getting the type of 'gc0' (line 664)
        gc0_255068 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 664, 36), 'gc0', False)
        # Processing the call keyword arguments (line 664)
        kwargs_255069 = {}
        # Getting the type of 'self' (line 664)
        self_255066 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 664, 21), 'self', False)
        # Obtaining the member '_get_clip' of a type (line 664)
        _get_clip_255067 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 664, 21), self_255066, '_get_clip')
        # Calling _get_clip(args, kwargs) (line 664)
        _get_clip_call_result_255070 = invoke(stypy.reporting.localization.Localization(__file__, 664, 21), _get_clip_255067, *[gc0_255068], **kwargs_255069)
        
        # Assigning a type to the variable 'clipid' (line 664)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 664, 12), 'clipid', _get_clip_call_result_255070)
        
        # Assigning a Call to a Name (line 665):
        
        # Assigning a Call to a Name (line 665):
        
        # Call to get_url(...): (line 665)
        # Processing the call keyword arguments (line 665)
        kwargs_255073 = {}
        # Getting the type of 'gc0' (line 665)
        gc0_255071 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 665, 18), 'gc0', False)
        # Obtaining the member 'get_url' of a type (line 665)
        get_url_255072 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 665, 18), gc0_255071, 'get_url')
        # Calling get_url(args, kwargs) (line 665)
        get_url_call_result_255074 = invoke(stypy.reporting.localization.Localization(__file__, 665, 18), get_url_255072, *[], **kwargs_255073)
        
        # Assigning a type to the variable 'url' (line 665)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 665, 12), 'url', get_url_call_result_255074)
        
        # Type idiom detected: calculating its left and rigth part (line 666)
        # Getting the type of 'url' (line 666)
        url_255075 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 666, 12), 'url')
        # Getting the type of 'None' (line 666)
        None_255076 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 666, 26), 'None')
        
        (may_be_255077, more_types_in_union_255078) = may_not_be_none(url_255075, None_255076)

        if may_be_255077:

            if more_types_in_union_255078:
                # Runtime conditional SSA (line 666)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Call to start(...): (line 667)
            # Processing the call arguments (line 667)
            unicode_255081 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 667, 29), 'unicode', u'a')
            # Processing the call keyword arguments (line 667)
            
            # Obtaining an instance of the builtin type 'dict' (line 667)
            dict_255082 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 667, 41), 'dict')
            # Adding type elements to the builtin type 'dict' instance (line 667)
            # Adding element type (key, value) (line 667)
            unicode_255083 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 667, 42), 'unicode', u'xlink:href')
            # Getting the type of 'url' (line 667)
            url_255084 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 667, 56), 'url', False)
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 667, 41), dict_255082, (unicode_255083, url_255084))
            
            keyword_255085 = dict_255082
            kwargs_255086 = {'attrib': keyword_255085}
            # Getting the type of 'writer' (line 667)
            writer_255079 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 667, 16), 'writer', False)
            # Obtaining the member 'start' of a type (line 667)
            start_255080 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 667, 16), writer_255079, 'start')
            # Calling start(args, kwargs) (line 667)
            start_call_result_255087 = invoke(stypy.reporting.localization.Localization(__file__, 667, 16), start_255080, *[unicode_255081], **kwargs_255086)
            

            if more_types_in_union_255078:
                # SSA join for if statement (line 666)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Type idiom detected: calculating its left and rigth part (line 668)
        # Getting the type of 'clipid' (line 668)
        clipid_255088 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 668, 12), 'clipid')
        # Getting the type of 'None' (line 668)
        None_255089 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 668, 29), 'None')
        
        (may_be_255090, more_types_in_union_255091) = may_not_be_none(clipid_255088, None_255089)

        if may_be_255090:

            if more_types_in_union_255091:
                # Runtime conditional SSA (line 668)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Call to start(...): (line 669)
            # Processing the call arguments (line 669)
            unicode_255094 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 669, 29), 'unicode', u'g')
            # Processing the call keyword arguments (line 669)
            
            # Obtaining an instance of the builtin type 'dict' (line 669)
            dict_255095 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 669, 41), 'dict')
            # Adding type elements to the builtin type 'dict' instance (line 669)
            # Adding element type (key, value) (line 669)
            unicode_255096 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 669, 42), 'unicode', u'clip-path')
            unicode_255097 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 669, 55), 'unicode', u'url(#%s)')
            # Getting the type of 'clipid' (line 669)
            clipid_255098 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 669, 68), 'clipid', False)
            # Applying the binary operator '%' (line 669)
            result_mod_255099 = python_operator(stypy.reporting.localization.Localization(__file__, 669, 55), '%', unicode_255097, clipid_255098)
            
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 669, 41), dict_255095, (unicode_255096, result_mod_255099))
            
            keyword_255100 = dict_255095
            kwargs_255101 = {'attrib': keyword_255100}
            # Getting the type of 'writer' (line 669)
            writer_255092 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 669, 16), 'writer', False)
            # Obtaining the member 'start' of a type (line 669)
            start_255093 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 669, 16), writer_255092, 'start')
            # Calling start(args, kwargs) (line 669)
            start_call_result_255102 = invoke(stypy.reporting.localization.Localization(__file__, 669, 16), start_255093, *[unicode_255094], **kwargs_255101)
            

            if more_types_in_union_255091:
                # SSA join for if statement (line 668)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Dict to a Name (line 670):
        
        # Assigning a Dict to a Name (line 670):
        
        # Obtaining an instance of the builtin type 'dict' (line 670)
        dict_255103 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 670, 21), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 670)
        # Adding element type (key, value) (line 670)
        unicode_255104 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 671, 16), 'unicode', u'xlink:href')
        unicode_255105 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 671, 30), 'unicode', u'#%s')
        # Getting the type of 'path_id' (line 671)
        path_id_255106 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 671, 38), 'path_id')
        # Applying the binary operator '%' (line 671)
        result_mod_255107 = python_operator(stypy.reporting.localization.Localization(__file__, 671, 30), '%', unicode_255105, path_id_255106)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 670, 21), dict_255103, (unicode_255104, result_mod_255107))
        # Adding element type (key, value) (line 670)
        unicode_255108 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 672, 16), 'unicode', u'x')
        
        # Call to short_float_fmt(...): (line 672)
        # Processing the call arguments (line 672)
        # Getting the type of 'xo' (line 672)
        xo_255110 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 672, 37), 'xo', False)
        # Processing the call keyword arguments (line 672)
        kwargs_255111 = {}
        # Getting the type of 'short_float_fmt' (line 672)
        short_float_fmt_255109 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 672, 21), 'short_float_fmt', False)
        # Calling short_float_fmt(args, kwargs) (line 672)
        short_float_fmt_call_result_255112 = invoke(stypy.reporting.localization.Localization(__file__, 672, 21), short_float_fmt_255109, *[xo_255110], **kwargs_255111)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 670, 21), dict_255103, (unicode_255108, short_float_fmt_call_result_255112))
        # Adding element type (key, value) (line 670)
        unicode_255113 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 673, 16), 'unicode', u'y')
        
        # Call to short_float_fmt(...): (line 673)
        # Processing the call arguments (line 673)
        # Getting the type of 'self' (line 673)
        self_255115 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 673, 37), 'self', False)
        # Obtaining the member 'height' of a type (line 673)
        height_255116 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 673, 37), self_255115, 'height')
        # Getting the type of 'yo' (line 673)
        yo_255117 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 673, 51), 'yo', False)
        # Applying the binary operator '-' (line 673)
        result_sub_255118 = python_operator(stypy.reporting.localization.Localization(__file__, 673, 37), '-', height_255116, yo_255117)
        
        # Processing the call keyword arguments (line 673)
        kwargs_255119 = {}
        # Getting the type of 'short_float_fmt' (line 673)
        short_float_fmt_255114 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 673, 21), 'short_float_fmt', False)
        # Calling short_float_fmt(args, kwargs) (line 673)
        short_float_fmt_call_result_255120 = invoke(stypy.reporting.localization.Localization(__file__, 673, 21), short_float_fmt_255114, *[result_sub_255118], **kwargs_255119)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 670, 21), dict_255103, (unicode_255113, short_float_fmt_call_result_255120))
        # Adding element type (key, value) (line 670)
        unicode_255121 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 674, 16), 'unicode', u'style')
        
        # Call to _get_style(...): (line 674)
        # Processing the call arguments (line 674)
        # Getting the type of 'gc0' (line 674)
        gc0_255124 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 674, 41), 'gc0', False)
        # Getting the type of 'rgbFace' (line 674)
        rgbFace_255125 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 674, 46), 'rgbFace', False)
        # Processing the call keyword arguments (line 674)
        kwargs_255126 = {}
        # Getting the type of 'self' (line 674)
        self_255122 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 674, 25), 'self', False)
        # Obtaining the member '_get_style' of a type (line 674)
        _get_style_255123 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 674, 25), self_255122, '_get_style')
        # Calling _get_style(args, kwargs) (line 674)
        _get_style_call_result_255127 = invoke(stypy.reporting.localization.Localization(__file__, 674, 25), _get_style_255123, *[gc0_255124, rgbFace_255125], **kwargs_255126)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 670, 21), dict_255103, (unicode_255121, _get_style_call_result_255127))
        
        # Assigning a type to the variable 'attrib' (line 670)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 670, 12), 'attrib', dict_255103)
        
        # Call to element(...): (line 676)
        # Processing the call arguments (line 676)
        unicode_255130 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 676, 27), 'unicode', u'use')
        # Processing the call keyword arguments (line 676)
        # Getting the type of 'attrib' (line 676)
        attrib_255131 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 676, 41), 'attrib', False)
        keyword_255132 = attrib_255131
        kwargs_255133 = {'attrib': keyword_255132}
        # Getting the type of 'writer' (line 676)
        writer_255128 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 676, 12), 'writer', False)
        # Obtaining the member 'element' of a type (line 676)
        element_255129 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 676, 12), writer_255128, 'element')
        # Calling element(args, kwargs) (line 676)
        element_call_result_255134 = invoke(stypy.reporting.localization.Localization(__file__, 676, 12), element_255129, *[unicode_255130], **kwargs_255133)
        
        
        # Type idiom detected: calculating its left and rigth part (line 677)
        # Getting the type of 'clipid' (line 677)
        clipid_255135 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 677, 12), 'clipid')
        # Getting the type of 'None' (line 677)
        None_255136 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 677, 29), 'None')
        
        (may_be_255137, more_types_in_union_255138) = may_not_be_none(clipid_255135, None_255136)

        if may_be_255137:

            if more_types_in_union_255138:
                # Runtime conditional SSA (line 677)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Call to end(...): (line 678)
            # Processing the call arguments (line 678)
            unicode_255141 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 678, 27), 'unicode', u'g')
            # Processing the call keyword arguments (line 678)
            kwargs_255142 = {}
            # Getting the type of 'writer' (line 678)
            writer_255139 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 678, 16), 'writer', False)
            # Obtaining the member 'end' of a type (line 678)
            end_255140 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 678, 16), writer_255139, 'end')
            # Calling end(args, kwargs) (line 678)
            end_call_result_255143 = invoke(stypy.reporting.localization.Localization(__file__, 678, 16), end_255140, *[unicode_255141], **kwargs_255142)
            

            if more_types_in_union_255138:
                # SSA join for if statement (line 677)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Type idiom detected: calculating its left and rigth part (line 679)
        # Getting the type of 'url' (line 679)
        url_255144 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 679, 12), 'url')
        # Getting the type of 'None' (line 679)
        None_255145 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 679, 26), 'None')
        
        (may_be_255146, more_types_in_union_255147) = may_not_be_none(url_255144, None_255145)

        if may_be_255146:

            if more_types_in_union_255147:
                # Runtime conditional SSA (line 679)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Call to end(...): (line 680)
            # Processing the call arguments (line 680)
            unicode_255150 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 680, 27), 'unicode', u'a')
            # Processing the call keyword arguments (line 680)
            kwargs_255151 = {}
            # Getting the type of 'writer' (line 680)
            writer_255148 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 680, 16), 'writer', False)
            # Obtaining the member 'end' of a type (line 680)
            end_255149 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 680, 16), writer_255148, 'end')
            # Calling end(args, kwargs) (line 680)
            end_call_result_255152 = invoke(stypy.reporting.localization.Localization(__file__, 680, 16), end_255149, *[unicode_255150], **kwargs_255151)
            

            if more_types_in_union_255147:
                # SSA join for if statement (line 679)
                module_type_store = module_type_store.join_ssa_context()


        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'self' (line 682)
        self_255153 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 682, 8), 'self')
        # Obtaining the member '_path_collection_id' of a type (line 682)
        _path_collection_id_255154 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 682, 8), self_255153, '_path_collection_id')
        int_255155 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 682, 36), 'int')
        # Applying the binary operator '+=' (line 682)
        result_iadd_255156 = python_operator(stypy.reporting.localization.Localization(__file__, 682, 8), '+=', _path_collection_id_255154, int_255155)
        # Getting the type of 'self' (line 682)
        self_255157 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 682, 8), 'self')
        # Setting the type of the member '_path_collection_id' of a type (line 682)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 682, 8), self_255157, '_path_collection_id', result_iadd_255156)
        
        
        # ################# End of 'draw_path_collection(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'draw_path_collection' in the type store
        # Getting the type of 'stypy_return_type' (line 626)
        stypy_return_type_255158 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 626, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_255158)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'draw_path_collection'
        return stypy_return_type_255158


    @norecursion
    def draw_gouraud_triangle(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'draw_gouraud_triangle'
        module_type_store = module_type_store.open_function_context('draw_gouraud_triangle', 684, 4, False)
        # Assigning a type to the variable 'self' (line 685)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 685, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererSVG.draw_gouraud_triangle.__dict__.__setitem__('stypy_localization', localization)
        RendererSVG.draw_gouraud_triangle.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererSVG.draw_gouraud_triangle.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererSVG.draw_gouraud_triangle.__dict__.__setitem__('stypy_function_name', 'RendererSVG.draw_gouraud_triangle')
        RendererSVG.draw_gouraud_triangle.__dict__.__setitem__('stypy_param_names_list', ['gc', 'points', 'colors', 'trans'])
        RendererSVG.draw_gouraud_triangle.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererSVG.draw_gouraud_triangle.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererSVG.draw_gouraud_triangle.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererSVG.draw_gouraud_triangle.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererSVG.draw_gouraud_triangle.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererSVG.draw_gouraud_triangle.__dict__.__setitem__('stypy_declared_arg_number', 5)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererSVG.draw_gouraud_triangle', ['gc', 'points', 'colors', 'trans'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'draw_gouraud_triangle', localization, ['gc', 'points', 'colors', 'trans'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'draw_gouraud_triangle(...)' code ##################

        
        # Assigning a Attribute to a Name (line 696):
        
        # Assigning a Attribute to a Name (line 696):
        # Getting the type of 'self' (line 696)
        self_255159 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 696, 17), 'self')
        # Obtaining the member 'writer' of a type (line 696)
        writer_255160 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 696, 17), self_255159, 'writer')
        # Assigning a type to the variable 'writer' (line 696)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 696, 8), 'writer', writer_255160)
        
        
        # Getting the type of 'self' (line 697)
        self_255161 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 697, 15), 'self')
        # Obtaining the member '_has_gouraud' of a type (line 697)
        _has_gouraud_255162 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 697, 15), self_255161, '_has_gouraud')
        # Applying the 'not' unary operator (line 697)
        result_not__255163 = python_operator(stypy.reporting.localization.Localization(__file__, 697, 11), 'not', _has_gouraud_255162)
        
        # Testing the type of an if condition (line 697)
        if_condition_255164 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 697, 8), result_not__255163)
        # Assigning a type to the variable 'if_condition_255164' (line 697)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 697, 8), 'if_condition_255164', if_condition_255164)
        # SSA begins for if statement (line 697)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Name to a Attribute (line 698):
        
        # Assigning a Name to a Attribute (line 698):
        # Getting the type of 'True' (line 698)
        True_255165 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 698, 32), 'True')
        # Getting the type of 'self' (line 698)
        self_255166 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 698, 12), 'self')
        # Setting the type of the member '_has_gouraud' of a type (line 698)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 698, 12), self_255166, '_has_gouraud', True_255165)
        
        # Call to start(...): (line 699)
        # Processing the call arguments (line 699)
        unicode_255169 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 700, 16), 'unicode', u'filter')
        # Processing the call keyword arguments (line 699)
        unicode_255170 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 701, 19), 'unicode', u'colorAdd')
        keyword_255171 = unicode_255170
        kwargs_255172 = {'id': keyword_255171}
        # Getting the type of 'writer' (line 699)
        writer_255167 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 699, 12), 'writer', False)
        # Obtaining the member 'start' of a type (line 699)
        start_255168 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 699, 12), writer_255167, 'start')
        # Calling start(args, kwargs) (line 699)
        start_call_result_255173 = invoke(stypy.reporting.localization.Localization(__file__, 699, 12), start_255168, *[unicode_255169], **kwargs_255172)
        
        
        # Call to element(...): (line 702)
        # Processing the call arguments (line 702)
        unicode_255176 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 703, 16), 'unicode', u'feComposite')
        # Processing the call keyword arguments (line 702)
        
        # Obtaining an instance of the builtin type 'dict' (line 704)
        dict_255177 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 704, 23), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 704)
        # Adding element type (key, value) (line 704)
        unicode_255178 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 704, 24), 'unicode', u'in')
        unicode_255179 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 704, 30), 'unicode', u'SourceGraphic')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 704, 23), dict_255177, (unicode_255178, unicode_255179))
        
        keyword_255180 = dict_255177
        unicode_255181 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 705, 20), 'unicode', u'BackgroundImage')
        keyword_255182 = unicode_255181
        unicode_255183 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 706, 25), 'unicode', u'arithmetic')
        keyword_255184 = unicode_255183
        unicode_255185 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 707, 19), 'unicode', u'1')
        keyword_255186 = unicode_255185
        unicode_255187 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 707, 27), 'unicode', u'1')
        keyword_255188 = unicode_255187
        kwargs_255189 = {'operator': keyword_255184, 'k2': keyword_255186, 'attrib': keyword_255180, 'k3': keyword_255188, 'in2': keyword_255182}
        # Getting the type of 'writer' (line 702)
        writer_255174 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 702, 12), 'writer', False)
        # Obtaining the member 'element' of a type (line 702)
        element_255175 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 702, 12), writer_255174, 'element')
        # Calling element(args, kwargs) (line 702)
        element_call_result_255190 = invoke(stypy.reporting.localization.Localization(__file__, 702, 12), element_255175, *[unicode_255176], **kwargs_255189)
        
        
        # Call to end(...): (line 708)
        # Processing the call arguments (line 708)
        unicode_255193 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 708, 23), 'unicode', u'filter')
        # Processing the call keyword arguments (line 708)
        kwargs_255194 = {}
        # Getting the type of 'writer' (line 708)
        writer_255191 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 708, 12), 'writer', False)
        # Obtaining the member 'end' of a type (line 708)
        end_255192 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 708, 12), writer_255191, 'end')
        # Calling end(args, kwargs) (line 708)
        end_call_result_255195 = invoke(stypy.reporting.localization.Localization(__file__, 708, 12), end_255192, *[unicode_255193], **kwargs_255194)
        
        # SSA join for if statement (line 697)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a BinOp to a Name (line 710):
        
        # Assigning a BinOp to a Name (line 710):
        
        # Call to sum(...): (line 710)
        # Processing the call arguments (line 710)
        
        # Obtaining the type of the subscript
        slice_255198 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 710, 27), None, None, None)
        slice_255199 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 710, 27), None, None, None)
        # Getting the type of 'colors' (line 710)
        colors_255200 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 710, 27), 'colors', False)
        # Obtaining the member '__getitem__' of a type (line 710)
        getitem___255201 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 710, 27), colors_255200, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 710)
        subscript_call_result_255202 = invoke(stypy.reporting.localization.Localization(__file__, 710, 27), getitem___255201, (slice_255198, slice_255199))
        
        # Processing the call keyword arguments (line 710)
        int_255203 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 710, 46), 'int')
        keyword_255204 = int_255203
        kwargs_255205 = {'axis': keyword_255204}
        # Getting the type of 'np' (line 710)
        np_255196 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 710, 20), 'np', False)
        # Obtaining the member 'sum' of a type (line 710)
        sum_255197 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 710, 20), np_255196, 'sum')
        # Calling sum(args, kwargs) (line 710)
        sum_call_result_255206 = invoke(stypy.reporting.localization.Localization(__file__, 710, 20), sum_255197, *[subscript_call_result_255202], **kwargs_255205)
        
        float_255207 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 710, 51), 'float')
        # Applying the binary operator 'div' (line 710)
        result_div_255208 = python_operator(stypy.reporting.localization.Localization(__file__, 710, 20), 'div', sum_call_result_255206, float_255207)
        
        # Assigning a type to the variable 'avg_color' (line 710)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 710, 8), 'avg_color', result_div_255208)
        
        
        
        # Obtaining the type of the subscript
        int_255209 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 712, 21), 'int')
        # Getting the type of 'avg_color' (line 712)
        avg_color_255210 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 712, 11), 'avg_color')
        # Obtaining the member '__getitem__' of a type (line 712)
        getitem___255211 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 712, 11), avg_color_255210, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 712)
        subscript_call_result_255212 = invoke(stypy.reporting.localization.Localization(__file__, 712, 11), getitem___255211, int_255209)
        
        float_255213 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 712, 28), 'float')
        # Applying the binary operator '==' (line 712)
        result_eq_255214 = python_operator(stypy.reporting.localization.Localization(__file__, 712, 11), '==', subscript_call_result_255212, float_255213)
        
        # Testing the type of an if condition (line 712)
        if_condition_255215 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 712, 8), result_eq_255214)
        # Assigning a type to the variable 'if_condition_255215' (line 712)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 712, 8), 'if_condition_255215', if_condition_255215)
        # SSA begins for if statement (line 712)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        # Assigning a type to the variable 'stypy_return_type' (line 713)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 713, 12), 'stypy_return_type', types.NoneType)
        # SSA join for if statement (line 712)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 715):
        
        # Assigning a Call to a Name (line 715):
        
        # Call to _make_flip_transform(...): (line 715)
        # Processing the call arguments (line 715)
        # Getting the type of 'trans' (line 715)
        trans_255218 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 715, 51), 'trans', False)
        # Processing the call keyword arguments (line 715)
        kwargs_255219 = {}
        # Getting the type of 'self' (line 715)
        self_255216 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 715, 25), 'self', False)
        # Obtaining the member '_make_flip_transform' of a type (line 715)
        _make_flip_transform_255217 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 715, 25), self_255216, '_make_flip_transform')
        # Calling _make_flip_transform(args, kwargs) (line 715)
        _make_flip_transform_call_result_255220 = invoke(stypy.reporting.localization.Localization(__file__, 715, 25), _make_flip_transform_255217, *[trans_255218], **kwargs_255219)
        
        # Assigning a type to the variable 'trans_and_flip' (line 715)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 715, 8), 'trans_and_flip', _make_flip_transform_call_result_255220)
        
        # Assigning a Call to a Name (line 716):
        
        # Assigning a Call to a Name (line 716):
        
        # Call to transform(...): (line 716)
        # Processing the call arguments (line 716)
        # Getting the type of 'points' (line 716)
        points_255223 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 716, 43), 'points', False)
        # Processing the call keyword arguments (line 716)
        kwargs_255224 = {}
        # Getting the type of 'trans_and_flip' (line 716)
        trans_and_flip_255221 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 716, 18), 'trans_and_flip', False)
        # Obtaining the member 'transform' of a type (line 716)
        transform_255222 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 716, 18), trans_and_flip_255221, 'transform')
        # Calling transform(args, kwargs) (line 716)
        transform_call_result_255225 = invoke(stypy.reporting.localization.Localization(__file__, 716, 18), transform_255222, *[points_255223], **kwargs_255224)
        
        # Assigning a type to the variable 'tpoints' (line 716)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 716, 8), 'tpoints', transform_call_result_255225)
        
        # Call to start(...): (line 718)
        # Processing the call arguments (line 718)
        unicode_255228 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 718, 21), 'unicode', u'defs')
        # Processing the call keyword arguments (line 718)
        kwargs_255229 = {}
        # Getting the type of 'writer' (line 718)
        writer_255226 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 718, 8), 'writer', False)
        # Obtaining the member 'start' of a type (line 718)
        start_255227 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 718, 8), writer_255226, 'start')
        # Calling start(args, kwargs) (line 718)
        start_call_result_255230 = invoke(stypy.reporting.localization.Localization(__file__, 718, 8), start_255227, *[unicode_255228], **kwargs_255229)
        
        
        
        # Call to range(...): (line 719)
        # Processing the call arguments (line 719)
        int_255232 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 719, 23), 'int')
        # Processing the call keyword arguments (line 719)
        kwargs_255233 = {}
        # Getting the type of 'range' (line 719)
        range_255231 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 719, 17), 'range', False)
        # Calling range(args, kwargs) (line 719)
        range_call_result_255234 = invoke(stypy.reporting.localization.Localization(__file__, 719, 17), range_255231, *[int_255232], **kwargs_255233)
        
        # Testing the type of a for loop iterable (line 719)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 719, 8), range_call_result_255234)
        # Getting the type of the for loop variable (line 719)
        for_loop_var_255235 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 719, 8), range_call_result_255234)
        # Assigning a type to the variable 'i' (line 719)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 719, 8), 'i', for_loop_var_255235)
        # SSA begins for a for statement (line 719)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Subscript to a Tuple (line 720):
        
        # Assigning a Subscript to a Name (line 720):
        
        # Obtaining the type of the subscript
        int_255236 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 720, 12), 'int')
        
        # Obtaining the type of the subscript
        # Getting the type of 'i' (line 720)
        i_255237 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 720, 29), 'i')
        # Getting the type of 'tpoints' (line 720)
        tpoints_255238 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 720, 21), 'tpoints')
        # Obtaining the member '__getitem__' of a type (line 720)
        getitem___255239 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 720, 21), tpoints_255238, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 720)
        subscript_call_result_255240 = invoke(stypy.reporting.localization.Localization(__file__, 720, 21), getitem___255239, i_255237)
        
        # Obtaining the member '__getitem__' of a type (line 720)
        getitem___255241 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 720, 12), subscript_call_result_255240, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 720)
        subscript_call_result_255242 = invoke(stypy.reporting.localization.Localization(__file__, 720, 12), getitem___255241, int_255236)
        
        # Assigning a type to the variable 'tuple_var_assignment_252814' (line 720)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 720, 12), 'tuple_var_assignment_252814', subscript_call_result_255242)
        
        # Assigning a Subscript to a Name (line 720):
        
        # Obtaining the type of the subscript
        int_255243 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 720, 12), 'int')
        
        # Obtaining the type of the subscript
        # Getting the type of 'i' (line 720)
        i_255244 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 720, 29), 'i')
        # Getting the type of 'tpoints' (line 720)
        tpoints_255245 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 720, 21), 'tpoints')
        # Obtaining the member '__getitem__' of a type (line 720)
        getitem___255246 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 720, 21), tpoints_255245, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 720)
        subscript_call_result_255247 = invoke(stypy.reporting.localization.Localization(__file__, 720, 21), getitem___255246, i_255244)
        
        # Obtaining the member '__getitem__' of a type (line 720)
        getitem___255248 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 720, 12), subscript_call_result_255247, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 720)
        subscript_call_result_255249 = invoke(stypy.reporting.localization.Localization(__file__, 720, 12), getitem___255248, int_255243)
        
        # Assigning a type to the variable 'tuple_var_assignment_252815' (line 720)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 720, 12), 'tuple_var_assignment_252815', subscript_call_result_255249)
        
        # Assigning a Name to a Name (line 720):
        # Getting the type of 'tuple_var_assignment_252814' (line 720)
        tuple_var_assignment_252814_255250 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 720, 12), 'tuple_var_assignment_252814')
        # Assigning a type to the variable 'x1' (line 720)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 720, 12), 'x1', tuple_var_assignment_252814_255250)
        
        # Assigning a Name to a Name (line 720):
        # Getting the type of 'tuple_var_assignment_252815' (line 720)
        tuple_var_assignment_252815_255251 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 720, 12), 'tuple_var_assignment_252815')
        # Assigning a type to the variable 'y1' (line 720)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 720, 16), 'y1', tuple_var_assignment_252815_255251)
        
        # Assigning a Subscript to a Tuple (line 721):
        
        # Assigning a Subscript to a Name (line 721):
        
        # Obtaining the type of the subscript
        int_255252 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 721, 12), 'int')
        
        # Obtaining the type of the subscript
        # Getting the type of 'i' (line 721)
        i_255253 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 30), 'i')
        int_255254 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 721, 34), 'int')
        # Applying the binary operator '+' (line 721)
        result_add_255255 = python_operator(stypy.reporting.localization.Localization(__file__, 721, 30), '+', i_255253, int_255254)
        
        int_255256 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 721, 39), 'int')
        # Applying the binary operator '%' (line 721)
        result_mod_255257 = python_operator(stypy.reporting.localization.Localization(__file__, 721, 29), '%', result_add_255255, int_255256)
        
        # Getting the type of 'tpoints' (line 721)
        tpoints_255258 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 21), 'tpoints')
        # Obtaining the member '__getitem__' of a type (line 721)
        getitem___255259 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 721, 21), tpoints_255258, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 721)
        subscript_call_result_255260 = invoke(stypy.reporting.localization.Localization(__file__, 721, 21), getitem___255259, result_mod_255257)
        
        # Obtaining the member '__getitem__' of a type (line 721)
        getitem___255261 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 721, 12), subscript_call_result_255260, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 721)
        subscript_call_result_255262 = invoke(stypy.reporting.localization.Localization(__file__, 721, 12), getitem___255261, int_255252)
        
        # Assigning a type to the variable 'tuple_var_assignment_252816' (line 721)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 721, 12), 'tuple_var_assignment_252816', subscript_call_result_255262)
        
        # Assigning a Subscript to a Name (line 721):
        
        # Obtaining the type of the subscript
        int_255263 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 721, 12), 'int')
        
        # Obtaining the type of the subscript
        # Getting the type of 'i' (line 721)
        i_255264 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 30), 'i')
        int_255265 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 721, 34), 'int')
        # Applying the binary operator '+' (line 721)
        result_add_255266 = python_operator(stypy.reporting.localization.Localization(__file__, 721, 30), '+', i_255264, int_255265)
        
        int_255267 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 721, 39), 'int')
        # Applying the binary operator '%' (line 721)
        result_mod_255268 = python_operator(stypy.reporting.localization.Localization(__file__, 721, 29), '%', result_add_255266, int_255267)
        
        # Getting the type of 'tpoints' (line 721)
        tpoints_255269 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 21), 'tpoints')
        # Obtaining the member '__getitem__' of a type (line 721)
        getitem___255270 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 721, 21), tpoints_255269, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 721)
        subscript_call_result_255271 = invoke(stypy.reporting.localization.Localization(__file__, 721, 21), getitem___255270, result_mod_255268)
        
        # Obtaining the member '__getitem__' of a type (line 721)
        getitem___255272 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 721, 12), subscript_call_result_255271, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 721)
        subscript_call_result_255273 = invoke(stypy.reporting.localization.Localization(__file__, 721, 12), getitem___255272, int_255263)
        
        # Assigning a type to the variable 'tuple_var_assignment_252817' (line 721)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 721, 12), 'tuple_var_assignment_252817', subscript_call_result_255273)
        
        # Assigning a Name to a Name (line 721):
        # Getting the type of 'tuple_var_assignment_252816' (line 721)
        tuple_var_assignment_252816_255274 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 12), 'tuple_var_assignment_252816')
        # Assigning a type to the variable 'x2' (line 721)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 721, 12), 'x2', tuple_var_assignment_252816_255274)
        
        # Assigning a Name to a Name (line 721):
        # Getting the type of 'tuple_var_assignment_252817' (line 721)
        tuple_var_assignment_252817_255275 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 12), 'tuple_var_assignment_252817')
        # Assigning a type to the variable 'y2' (line 721)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 721, 16), 'y2', tuple_var_assignment_252817_255275)
        
        # Assigning a Subscript to a Tuple (line 722):
        
        # Assigning a Subscript to a Name (line 722):
        
        # Obtaining the type of the subscript
        int_255276 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 722, 12), 'int')
        
        # Obtaining the type of the subscript
        # Getting the type of 'i' (line 722)
        i_255277 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 30), 'i')
        int_255278 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 722, 34), 'int')
        # Applying the binary operator '+' (line 722)
        result_add_255279 = python_operator(stypy.reporting.localization.Localization(__file__, 722, 30), '+', i_255277, int_255278)
        
        int_255280 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 722, 39), 'int')
        # Applying the binary operator '%' (line 722)
        result_mod_255281 = python_operator(stypy.reporting.localization.Localization(__file__, 722, 29), '%', result_add_255279, int_255280)
        
        # Getting the type of 'tpoints' (line 722)
        tpoints_255282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 21), 'tpoints')
        # Obtaining the member '__getitem__' of a type (line 722)
        getitem___255283 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 722, 21), tpoints_255282, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 722)
        subscript_call_result_255284 = invoke(stypy.reporting.localization.Localization(__file__, 722, 21), getitem___255283, result_mod_255281)
        
        # Obtaining the member '__getitem__' of a type (line 722)
        getitem___255285 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 722, 12), subscript_call_result_255284, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 722)
        subscript_call_result_255286 = invoke(stypy.reporting.localization.Localization(__file__, 722, 12), getitem___255285, int_255276)
        
        # Assigning a type to the variable 'tuple_var_assignment_252818' (line 722)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 722, 12), 'tuple_var_assignment_252818', subscript_call_result_255286)
        
        # Assigning a Subscript to a Name (line 722):
        
        # Obtaining the type of the subscript
        int_255287 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 722, 12), 'int')
        
        # Obtaining the type of the subscript
        # Getting the type of 'i' (line 722)
        i_255288 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 30), 'i')
        int_255289 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 722, 34), 'int')
        # Applying the binary operator '+' (line 722)
        result_add_255290 = python_operator(stypy.reporting.localization.Localization(__file__, 722, 30), '+', i_255288, int_255289)
        
        int_255291 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 722, 39), 'int')
        # Applying the binary operator '%' (line 722)
        result_mod_255292 = python_operator(stypy.reporting.localization.Localization(__file__, 722, 29), '%', result_add_255290, int_255291)
        
        # Getting the type of 'tpoints' (line 722)
        tpoints_255293 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 21), 'tpoints')
        # Obtaining the member '__getitem__' of a type (line 722)
        getitem___255294 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 722, 21), tpoints_255293, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 722)
        subscript_call_result_255295 = invoke(stypy.reporting.localization.Localization(__file__, 722, 21), getitem___255294, result_mod_255292)
        
        # Obtaining the member '__getitem__' of a type (line 722)
        getitem___255296 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 722, 12), subscript_call_result_255295, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 722)
        subscript_call_result_255297 = invoke(stypy.reporting.localization.Localization(__file__, 722, 12), getitem___255296, int_255287)
        
        # Assigning a type to the variable 'tuple_var_assignment_252819' (line 722)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 722, 12), 'tuple_var_assignment_252819', subscript_call_result_255297)
        
        # Assigning a Name to a Name (line 722):
        # Getting the type of 'tuple_var_assignment_252818' (line 722)
        tuple_var_assignment_252818_255298 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 12), 'tuple_var_assignment_252818')
        # Assigning a type to the variable 'x3' (line 722)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 722, 12), 'x3', tuple_var_assignment_252818_255298)
        
        # Assigning a Name to a Name (line 722):
        # Getting the type of 'tuple_var_assignment_252819' (line 722)
        tuple_var_assignment_252819_255299 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 12), 'tuple_var_assignment_252819')
        # Assigning a type to the variable 'y3' (line 722)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 722, 16), 'y3', tuple_var_assignment_252819_255299)
        
        # Assigning a Subscript to a Name (line 723):
        
        # Assigning a Subscript to a Name (line 723):
        
        # Obtaining the type of the subscript
        slice_255300 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 723, 16), None, None, None)
        
        # Obtaining the type of the subscript
        # Getting the type of 'i' (line 723)
        i_255301 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 723, 23), 'i')
        # Getting the type of 'colors' (line 723)
        colors_255302 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 723, 16), 'colors')
        # Obtaining the member '__getitem__' of a type (line 723)
        getitem___255303 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 723, 16), colors_255302, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 723)
        subscript_call_result_255304 = invoke(stypy.reporting.localization.Localization(__file__, 723, 16), getitem___255303, i_255301)
        
        # Obtaining the member '__getitem__' of a type (line 723)
        getitem___255305 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 723, 16), subscript_call_result_255304, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 723)
        subscript_call_result_255306 = invoke(stypy.reporting.localization.Localization(__file__, 723, 16), getitem___255305, slice_255300)
        
        # Assigning a type to the variable 'c' (line 723)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 723, 12), 'c', subscript_call_result_255306)
        
        
        # Getting the type of 'x2' (line 725)
        x2_255307 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 725, 15), 'x2')
        # Getting the type of 'x3' (line 725)
        x3_255308 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 725, 21), 'x3')
        # Applying the binary operator '==' (line 725)
        result_eq_255309 = python_operator(stypy.reporting.localization.Localization(__file__, 725, 15), '==', x2_255307, x3_255308)
        
        # Testing the type of an if condition (line 725)
        if_condition_255310 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 725, 12), result_eq_255309)
        # Assigning a type to the variable 'if_condition_255310' (line 725)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 725, 12), 'if_condition_255310', if_condition_255310)
        # SSA begins for if statement (line 725)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Name to a Name (line 726):
        
        # Assigning a Name to a Name (line 726):
        # Getting the type of 'x2' (line 726)
        x2_255311 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 726, 21), 'x2')
        # Assigning a type to the variable 'xb' (line 726)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 726, 16), 'xb', x2_255311)
        
        # Assigning a Name to a Name (line 727):
        
        # Assigning a Name to a Name (line 727):
        # Getting the type of 'y1' (line 727)
        y1_255312 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 727, 21), 'y1')
        # Assigning a type to the variable 'yb' (line 727)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 727, 16), 'yb', y1_255312)
        # SSA branch for the else part of an if statement (line 725)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'y2' (line 728)
        y2_255313 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 728, 17), 'y2')
        # Getting the type of 'y3' (line 728)
        y3_255314 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 728, 23), 'y3')
        # Applying the binary operator '==' (line 728)
        result_eq_255315 = python_operator(stypy.reporting.localization.Localization(__file__, 728, 17), '==', y2_255313, y3_255314)
        
        # Testing the type of an if condition (line 728)
        if_condition_255316 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 728, 17), result_eq_255315)
        # Assigning a type to the variable 'if_condition_255316' (line 728)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 728, 17), 'if_condition_255316', if_condition_255316)
        # SSA begins for if statement (line 728)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Name to a Name (line 729):
        
        # Assigning a Name to a Name (line 729):
        # Getting the type of 'x1' (line 729)
        x1_255317 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 21), 'x1')
        # Assigning a type to the variable 'xb' (line 729)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 729, 16), 'xb', x1_255317)
        
        # Assigning a Name to a Name (line 730):
        
        # Assigning a Name to a Name (line 730):
        # Getting the type of 'y2' (line 730)
        y2_255318 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 730, 21), 'y2')
        # Assigning a type to the variable 'yb' (line 730)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 730, 16), 'yb', y2_255318)
        # SSA branch for the else part of an if statement (line 728)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a BinOp to a Name (line 732):
        
        # Assigning a BinOp to a Name (line 732):
        # Getting the type of 'y2' (line 732)
        y2_255319 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 732, 22), 'y2')
        # Getting the type of 'y3' (line 732)
        y3_255320 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 732, 27), 'y3')
        # Applying the binary operator '-' (line 732)
        result_sub_255321 = python_operator(stypy.reporting.localization.Localization(__file__, 732, 22), '-', y2_255319, y3_255320)
        
        # Getting the type of 'x2' (line 732)
        x2_255322 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 732, 34), 'x2')
        # Getting the type of 'x3' (line 732)
        x3_255323 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 732, 39), 'x3')
        # Applying the binary operator '-' (line 732)
        result_sub_255324 = python_operator(stypy.reporting.localization.Localization(__file__, 732, 34), '-', x2_255322, x3_255323)
        
        # Applying the binary operator 'div' (line 732)
        result_div_255325 = python_operator(stypy.reporting.localization.Localization(__file__, 732, 21), 'div', result_sub_255321, result_sub_255324)
        
        # Assigning a type to the variable 'm1' (line 732)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 732, 16), 'm1', result_div_255325)
        
        # Assigning a BinOp to a Name (line 733):
        
        # Assigning a BinOp to a Name (line 733):
        # Getting the type of 'y2' (line 733)
        y2_255326 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 733, 21), 'y2')
        # Getting the type of 'm1' (line 733)
        m1_255327 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 733, 27), 'm1')
        # Getting the type of 'x2' (line 733)
        x2_255328 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 733, 32), 'x2')
        # Applying the binary operator '*' (line 733)
        result_mul_255329 = python_operator(stypy.reporting.localization.Localization(__file__, 733, 27), '*', m1_255327, x2_255328)
        
        # Applying the binary operator '-' (line 733)
        result_sub_255330 = python_operator(stypy.reporting.localization.Localization(__file__, 733, 21), '-', y2_255326, result_mul_255329)
        
        # Assigning a type to the variable 'b1' (line 733)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 733, 16), 'b1', result_sub_255330)
        
        # Assigning a UnaryOp to a Name (line 734):
        
        # Assigning a UnaryOp to a Name (line 734):
        
        float_255331 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 734, 23), 'float')
        # Getting the type of 'm1' (line 734)
        m1_255332 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 734, 29), 'm1')
        # Applying the binary operator 'div' (line 734)
        result_div_255333 = python_operator(stypy.reporting.localization.Localization(__file__, 734, 23), 'div', float_255331, m1_255332)
        
        # Applying the 'usub' unary operator (line 734)
        result___neg___255334 = python_operator(stypy.reporting.localization.Localization(__file__, 734, 21), 'usub', result_div_255333)
        
        # Assigning a type to the variable 'm2' (line 734)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 734, 16), 'm2', result___neg___255334)
        
        # Assigning a BinOp to a Name (line 735):
        
        # Assigning a BinOp to a Name (line 735):
        # Getting the type of 'y1' (line 735)
        y1_255335 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 735, 21), 'y1')
        # Getting the type of 'm2' (line 735)
        m2_255336 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 735, 27), 'm2')
        # Getting the type of 'x1' (line 735)
        x1_255337 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 735, 32), 'x1')
        # Applying the binary operator '*' (line 735)
        result_mul_255338 = python_operator(stypy.reporting.localization.Localization(__file__, 735, 27), '*', m2_255336, x1_255337)
        
        # Applying the binary operator '-' (line 735)
        result_sub_255339 = python_operator(stypy.reporting.localization.Localization(__file__, 735, 21), '-', y1_255335, result_mul_255338)
        
        # Assigning a type to the variable 'b2' (line 735)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 735, 16), 'b2', result_sub_255339)
        
        # Assigning a BinOp to a Name (line 736):
        
        # Assigning a BinOp to a Name (line 736):
        
        # Getting the type of 'b1' (line 736)
        b1_255340 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 736, 23), 'b1')
        # Applying the 'usub' unary operator (line 736)
        result___neg___255341 = python_operator(stypy.reporting.localization.Localization(__file__, 736, 22), 'usub', b1_255340)
        
        # Getting the type of 'b2' (line 736)
        b2_255342 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 736, 28), 'b2')
        # Applying the binary operator '+' (line 736)
        result_add_255343 = python_operator(stypy.reporting.localization.Localization(__file__, 736, 22), '+', result___neg___255341, b2_255342)
        
        # Getting the type of 'm1' (line 736)
        m1_255344 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 736, 35), 'm1')
        # Getting the type of 'm2' (line 736)
        m2_255345 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 736, 40), 'm2')
        # Applying the binary operator '-' (line 736)
        result_sub_255346 = python_operator(stypy.reporting.localization.Localization(__file__, 736, 35), '-', m1_255344, m2_255345)
        
        # Applying the binary operator 'div' (line 736)
        result_div_255347 = python_operator(stypy.reporting.localization.Localization(__file__, 736, 21), 'div', result_add_255343, result_sub_255346)
        
        # Assigning a type to the variable 'xb' (line 736)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 736, 16), 'xb', result_div_255347)
        
        # Assigning a BinOp to a Name (line 737):
        
        # Assigning a BinOp to a Name (line 737):
        # Getting the type of 'm2' (line 737)
        m2_255348 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 737, 21), 'm2')
        # Getting the type of 'xb' (line 737)
        xb_255349 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 737, 26), 'xb')
        # Applying the binary operator '*' (line 737)
        result_mul_255350 = python_operator(stypy.reporting.localization.Localization(__file__, 737, 21), '*', m2_255348, xb_255349)
        
        # Getting the type of 'b2' (line 737)
        b2_255351 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 737, 31), 'b2')
        # Applying the binary operator '+' (line 737)
        result_add_255352 = python_operator(stypy.reporting.localization.Localization(__file__, 737, 21), '+', result_mul_255350, b2_255351)
        
        # Assigning a type to the variable 'yb' (line 737)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 737, 16), 'yb', result_add_255352)
        # SSA join for if statement (line 728)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 725)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to start(...): (line 739)
        # Processing the call arguments (line 739)
        unicode_255355 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 740, 16), 'unicode', u'linearGradient')
        # Processing the call keyword arguments (line 739)
        unicode_255356 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 741, 19), 'unicode', u'GR%x_%d')
        
        # Obtaining an instance of the builtin type 'tuple' (line 741)
        tuple_255357 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 741, 32), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 741)
        # Adding element type (line 741)
        # Getting the type of 'self' (line 741)
        self_255358 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 741, 32), 'self', False)
        # Obtaining the member '_n_gradients' of a type (line 741)
        _n_gradients_255359 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 741, 32), self_255358, '_n_gradients')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 741, 32), tuple_255357, _n_gradients_255359)
        # Adding element type (line 741)
        # Getting the type of 'i' (line 741)
        i_255360 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 741, 51), 'i', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 741, 32), tuple_255357, i_255360)
        
        # Applying the binary operator '%' (line 741)
        result_mod_255361 = python_operator(stypy.reporting.localization.Localization(__file__, 741, 19), '%', unicode_255356, tuple_255357)
        
        keyword_255362 = result_mod_255361
        
        # Call to short_float_fmt(...): (line 742)
        # Processing the call arguments (line 742)
        # Getting the type of 'x1' (line 742)
        x1_255364 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 742, 35), 'x1', False)
        # Processing the call keyword arguments (line 742)
        kwargs_255365 = {}
        # Getting the type of 'short_float_fmt' (line 742)
        short_float_fmt_255363 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 742, 19), 'short_float_fmt', False)
        # Calling short_float_fmt(args, kwargs) (line 742)
        short_float_fmt_call_result_255366 = invoke(stypy.reporting.localization.Localization(__file__, 742, 19), short_float_fmt_255363, *[x1_255364], **kwargs_255365)
        
        keyword_255367 = short_float_fmt_call_result_255366
        
        # Call to short_float_fmt(...): (line 742)
        # Processing the call arguments (line 742)
        # Getting the type of 'y1' (line 742)
        y1_255369 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 742, 59), 'y1', False)
        # Processing the call keyword arguments (line 742)
        kwargs_255370 = {}
        # Getting the type of 'short_float_fmt' (line 742)
        short_float_fmt_255368 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 742, 43), 'short_float_fmt', False)
        # Calling short_float_fmt(args, kwargs) (line 742)
        short_float_fmt_call_result_255371 = invoke(stypy.reporting.localization.Localization(__file__, 742, 43), short_float_fmt_255368, *[y1_255369], **kwargs_255370)
        
        keyword_255372 = short_float_fmt_call_result_255371
        
        # Call to short_float_fmt(...): (line 743)
        # Processing the call arguments (line 743)
        # Getting the type of 'xb' (line 743)
        xb_255374 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 743, 35), 'xb', False)
        # Processing the call keyword arguments (line 743)
        kwargs_255375 = {}
        # Getting the type of 'short_float_fmt' (line 743)
        short_float_fmt_255373 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 743, 19), 'short_float_fmt', False)
        # Calling short_float_fmt(args, kwargs) (line 743)
        short_float_fmt_call_result_255376 = invoke(stypy.reporting.localization.Localization(__file__, 743, 19), short_float_fmt_255373, *[xb_255374], **kwargs_255375)
        
        keyword_255377 = short_float_fmt_call_result_255376
        
        # Call to short_float_fmt(...): (line 743)
        # Processing the call arguments (line 743)
        # Getting the type of 'yb' (line 743)
        yb_255379 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 743, 59), 'yb', False)
        # Processing the call keyword arguments (line 743)
        kwargs_255380 = {}
        # Getting the type of 'short_float_fmt' (line 743)
        short_float_fmt_255378 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 743, 43), 'short_float_fmt', False)
        # Calling short_float_fmt(args, kwargs) (line 743)
        short_float_fmt_call_result_255381 = invoke(stypy.reporting.localization.Localization(__file__, 743, 43), short_float_fmt_255378, *[yb_255379], **kwargs_255380)
        
        keyword_255382 = short_float_fmt_call_result_255381
        kwargs_255383 = {'y1': keyword_255372, 'x2': keyword_255377, 'x1': keyword_255367, 'y2': keyword_255382, 'id': keyword_255362}
        # Getting the type of 'writer' (line 739)
        writer_255353 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 739, 12), 'writer', False)
        # Obtaining the member 'start' of a type (line 739)
        start_255354 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 739, 12), writer_255353, 'start')
        # Calling start(args, kwargs) (line 739)
        start_call_result_255384 = invoke(stypy.reporting.localization.Localization(__file__, 739, 12), start_255354, *[unicode_255355], **kwargs_255383)
        
        
        # Call to element(...): (line 744)
        # Processing the call arguments (line 744)
        unicode_255387 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 745, 16), 'unicode', u'stop')
        # Processing the call keyword arguments (line 744)
        unicode_255388 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 746, 23), 'unicode', u'0')
        keyword_255389 = unicode_255388
        
        # Call to generate_css(...): (line 747)
        # Processing the call arguments (line 747)
        
        # Obtaining an instance of the builtin type 'dict' (line 747)
        dict_255391 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 747, 35), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 747)
        # Adding element type (key, value) (line 747)
        unicode_255392 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 747, 36), 'unicode', u'stop-color')
        
        # Call to rgb2hex(...): (line 747)
        # Processing the call arguments (line 747)
        # Getting the type of 'c' (line 747)
        c_255394 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 747, 58), 'c', False)
        # Processing the call keyword arguments (line 747)
        kwargs_255395 = {}
        # Getting the type of 'rgb2hex' (line 747)
        rgb2hex_255393 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 747, 50), 'rgb2hex', False)
        # Calling rgb2hex(args, kwargs) (line 747)
        rgb2hex_call_result_255396 = invoke(stypy.reporting.localization.Localization(__file__, 747, 50), rgb2hex_255393, *[c_255394], **kwargs_255395)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 747, 35), dict_255391, (unicode_255392, rgb2hex_call_result_255396))
        # Adding element type (key, value) (line 747)
        unicode_255397 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 748, 36), 'unicode', u'stop-opacity')
        
        # Call to short_float_fmt(...): (line 748)
        # Processing the call arguments (line 748)
        
        # Obtaining the type of the subscript
        int_255399 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 748, 70), 'int')
        # Getting the type of 'c' (line 748)
        c_255400 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 748, 68), 'c', False)
        # Obtaining the member '__getitem__' of a type (line 748)
        getitem___255401 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 748, 68), c_255400, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 748)
        subscript_call_result_255402 = invoke(stypy.reporting.localization.Localization(__file__, 748, 68), getitem___255401, int_255399)
        
        # Processing the call keyword arguments (line 748)
        kwargs_255403 = {}
        # Getting the type of 'short_float_fmt' (line 748)
        short_float_fmt_255398 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 748, 52), 'short_float_fmt', False)
        # Calling short_float_fmt(args, kwargs) (line 748)
        short_float_fmt_call_result_255404 = invoke(stypy.reporting.localization.Localization(__file__, 748, 52), short_float_fmt_255398, *[subscript_call_result_255402], **kwargs_255403)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 747, 35), dict_255391, (unicode_255397, short_float_fmt_call_result_255404))
        
        # Processing the call keyword arguments (line 747)
        kwargs_255405 = {}
        # Getting the type of 'generate_css' (line 747)
        generate_css_255390 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 747, 22), 'generate_css', False)
        # Calling generate_css(args, kwargs) (line 747)
        generate_css_call_result_255406 = invoke(stypy.reporting.localization.Localization(__file__, 747, 22), generate_css_255390, *[dict_255391], **kwargs_255405)
        
        keyword_255407 = generate_css_call_result_255406
        kwargs_255408 = {'style': keyword_255407, 'offset': keyword_255389}
        # Getting the type of 'writer' (line 744)
        writer_255385 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 744, 12), 'writer', False)
        # Obtaining the member 'element' of a type (line 744)
        element_255386 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 744, 12), writer_255385, 'element')
        # Calling element(args, kwargs) (line 744)
        element_call_result_255409 = invoke(stypy.reporting.localization.Localization(__file__, 744, 12), element_255386, *[unicode_255387], **kwargs_255408)
        
        
        # Call to element(...): (line 749)
        # Processing the call arguments (line 749)
        unicode_255412 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 750, 16), 'unicode', u'stop')
        # Processing the call keyword arguments (line 749)
        unicode_255413 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 751, 23), 'unicode', u'1')
        keyword_255414 = unicode_255413
        
        # Call to generate_css(...): (line 752)
        # Processing the call arguments (line 752)
        
        # Obtaining an instance of the builtin type 'dict' (line 752)
        dict_255416 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 752, 35), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 752)
        # Adding element type (key, value) (line 752)
        unicode_255417 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 752, 36), 'unicode', u'stop-color')
        
        # Call to rgb2hex(...): (line 752)
        # Processing the call arguments (line 752)
        # Getting the type of 'c' (line 752)
        c_255419 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 752, 58), 'c', False)
        # Processing the call keyword arguments (line 752)
        kwargs_255420 = {}
        # Getting the type of 'rgb2hex' (line 752)
        rgb2hex_255418 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 752, 50), 'rgb2hex', False)
        # Calling rgb2hex(args, kwargs) (line 752)
        rgb2hex_call_result_255421 = invoke(stypy.reporting.localization.Localization(__file__, 752, 50), rgb2hex_255418, *[c_255419], **kwargs_255420)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 752, 35), dict_255416, (unicode_255417, rgb2hex_call_result_255421))
        # Adding element type (key, value) (line 752)
        unicode_255422 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 753, 36), 'unicode', u'stop-opacity')
        unicode_255423 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 753, 52), 'unicode', u'0')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 752, 35), dict_255416, (unicode_255422, unicode_255423))
        
        # Processing the call keyword arguments (line 752)
        kwargs_255424 = {}
        # Getting the type of 'generate_css' (line 752)
        generate_css_255415 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 752, 22), 'generate_css', False)
        # Calling generate_css(args, kwargs) (line 752)
        generate_css_call_result_255425 = invoke(stypy.reporting.localization.Localization(__file__, 752, 22), generate_css_255415, *[dict_255416], **kwargs_255424)
        
        keyword_255426 = generate_css_call_result_255425
        kwargs_255427 = {'style': keyword_255426, 'offset': keyword_255414}
        # Getting the type of 'writer' (line 749)
        writer_255410 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 749, 12), 'writer', False)
        # Obtaining the member 'element' of a type (line 749)
        element_255411 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 749, 12), writer_255410, 'element')
        # Calling element(args, kwargs) (line 749)
        element_call_result_255428 = invoke(stypy.reporting.localization.Localization(__file__, 749, 12), element_255411, *[unicode_255412], **kwargs_255427)
        
        
        # Call to end(...): (line 754)
        # Processing the call arguments (line 754)
        unicode_255431 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 754, 23), 'unicode', u'linearGradient')
        # Processing the call keyword arguments (line 754)
        kwargs_255432 = {}
        # Getting the type of 'writer' (line 754)
        writer_255429 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 754, 12), 'writer', False)
        # Obtaining the member 'end' of a type (line 754)
        end_255430 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 754, 12), writer_255429, 'end')
        # Calling end(args, kwargs) (line 754)
        end_call_result_255433 = invoke(stypy.reporting.localization.Localization(__file__, 754, 12), end_255430, *[unicode_255431], **kwargs_255432)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to element(...): (line 756)
        # Processing the call arguments (line 756)
        unicode_255436 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 757, 12), 'unicode', u'polygon')
        # Processing the call keyword arguments (line 756)
        unicode_255437 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 758, 15), 'unicode', u'GT%x')
        # Getting the type of 'self' (line 758)
        self_255438 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 758, 24), 'self', False)
        # Obtaining the member '_n_gradients' of a type (line 758)
        _n_gradients_255439 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 758, 24), self_255438, '_n_gradients')
        # Applying the binary operator '%' (line 758)
        result_mod_255440 = python_operator(stypy.reporting.localization.Localization(__file__, 758, 15), '%', unicode_255437, _n_gradients_255439)
        
        keyword_255441 = result_mod_255440
        
        # Call to join(...): (line 759)
        # Processing the call arguments (line 759)
        # Calculating list comprehension
        # Calculating comprehension expression
        
        # Obtaining an instance of the builtin type 'tuple' (line 760)
        tuple_255448 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 760, 39), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 760)
        # Adding element type (line 760)
        # Getting the type of 'x1' (line 760)
        x1_255449 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 760, 39), 'x1', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 760, 39), tuple_255448, x1_255449)
        # Adding element type (line 760)
        # Getting the type of 'y1' (line 760)
        y1_255450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 760, 43), 'y1', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 760, 39), tuple_255448, y1_255450)
        # Adding element type (line 760)
        # Getting the type of 'x2' (line 760)
        x2_255451 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 760, 47), 'x2', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 760, 39), tuple_255448, x2_255451)
        # Adding element type (line 760)
        # Getting the type of 'y2' (line 760)
        y2_255452 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 760, 51), 'y2', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 760, 39), tuple_255448, y2_255452)
        # Adding element type (line 760)
        # Getting the type of 'x3' (line 760)
        x3_255453 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 760, 55), 'x3', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 760, 39), tuple_255448, x3_255453)
        # Adding element type (line 760)
        # Getting the type of 'y3' (line 760)
        y3_255454 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 760, 59), 'y3', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 760, 39), tuple_255448, y3_255454)
        
        comprehension_255455 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 759, 29), tuple_255448)
        # Assigning a type to the variable 'x' (line 759)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 759, 29), 'x', comprehension_255455)
        
        # Call to short_float_fmt(...): (line 759)
        # Processing the call arguments (line 759)
        # Getting the type of 'x' (line 759)
        x_255445 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 759, 45), 'x', False)
        # Processing the call keyword arguments (line 759)
        kwargs_255446 = {}
        # Getting the type of 'short_float_fmt' (line 759)
        short_float_fmt_255444 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 759, 29), 'short_float_fmt', False)
        # Calling short_float_fmt(args, kwargs) (line 759)
        short_float_fmt_call_result_255447 = invoke(stypy.reporting.localization.Localization(__file__, 759, 29), short_float_fmt_255444, *[x_255445], **kwargs_255446)
        
        list_255456 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 759, 29), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 759, 29), list_255456, short_float_fmt_call_result_255447)
        # Processing the call keyword arguments (line 759)
        kwargs_255457 = {}
        unicode_255442 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 759, 19), 'unicode', u' ')
        # Obtaining the member 'join' of a type (line 759)
        join_255443 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 759, 19), unicode_255442, 'join')
        # Calling join(args, kwargs) (line 759)
        join_call_result_255458 = invoke(stypy.reporting.localization.Localization(__file__, 759, 19), join_255443, *[list_255456], **kwargs_255457)
        
        keyword_255459 = join_call_result_255458
        kwargs_255460 = {'points': keyword_255459, 'id': keyword_255441}
        # Getting the type of 'writer' (line 756)
        writer_255434 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 756, 8), 'writer', False)
        # Obtaining the member 'element' of a type (line 756)
        element_255435 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 756, 8), writer_255434, 'element')
        # Calling element(args, kwargs) (line 756)
        element_call_result_255461 = invoke(stypy.reporting.localization.Localization(__file__, 756, 8), element_255435, *[unicode_255436], **kwargs_255460)
        
        
        # Call to end(...): (line 761)
        # Processing the call arguments (line 761)
        unicode_255464 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 761, 19), 'unicode', u'defs')
        # Processing the call keyword arguments (line 761)
        kwargs_255465 = {}
        # Getting the type of 'writer' (line 761)
        writer_255462 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 761, 8), 'writer', False)
        # Obtaining the member 'end' of a type (line 761)
        end_255463 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 761, 8), writer_255462, 'end')
        # Calling end(args, kwargs) (line 761)
        end_call_result_255466 = invoke(stypy.reporting.localization.Localization(__file__, 761, 8), end_255463, *[unicode_255464], **kwargs_255465)
        
        
        # Assigning a BinOp to a Name (line 763):
        
        # Assigning a BinOp to a Name (line 763):
        
        # Call to sum(...): (line 763)
        # Processing the call arguments (line 763)
        
        # Obtaining the type of the subscript
        slice_255469 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 763, 27), None, None, None)
        slice_255470 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 763, 27), None, None, None)
        # Getting the type of 'colors' (line 763)
        colors_255471 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 763, 27), 'colors', False)
        # Obtaining the member '__getitem__' of a type (line 763)
        getitem___255472 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 763, 27), colors_255471, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 763)
        subscript_call_result_255473 = invoke(stypy.reporting.localization.Localization(__file__, 763, 27), getitem___255472, (slice_255469, slice_255470))
        
        # Processing the call keyword arguments (line 763)
        int_255474 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 763, 46), 'int')
        keyword_255475 = int_255474
        kwargs_255476 = {'axis': keyword_255475}
        # Getting the type of 'np' (line 763)
        np_255467 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 763, 20), 'np', False)
        # Obtaining the member 'sum' of a type (line 763)
        sum_255468 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 763, 20), np_255467, 'sum')
        # Calling sum(args, kwargs) (line 763)
        sum_call_result_255477 = invoke(stypy.reporting.localization.Localization(__file__, 763, 20), sum_255468, *[subscript_call_result_255473], **kwargs_255476)
        
        float_255478 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 763, 51), 'float')
        # Applying the binary operator 'div' (line 763)
        result_div_255479 = python_operator(stypy.reporting.localization.Localization(__file__, 763, 20), 'div', sum_call_result_255477, float_255478)
        
        # Assigning a type to the variable 'avg_color' (line 763)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 763, 8), 'avg_color', result_div_255479)
        
        # Assigning a BinOp to a Name (line 764):
        
        # Assigning a BinOp to a Name (line 764):
        unicode_255480 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 764, 15), 'unicode', u'#GT%x')
        # Getting the type of 'self' (line 764)
        self_255481 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 764, 25), 'self')
        # Obtaining the member '_n_gradients' of a type (line 764)
        _n_gradients_255482 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 764, 25), self_255481, '_n_gradients')
        # Applying the binary operator '%' (line 764)
        result_mod_255483 = python_operator(stypy.reporting.localization.Localization(__file__, 764, 15), '%', unicode_255480, _n_gradients_255482)
        
        # Assigning a type to the variable 'href' (line 764)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 764, 8), 'href', result_mod_255483)
        
        # Call to element(...): (line 765)
        # Processing the call arguments (line 765)
        unicode_255486 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 766, 12), 'unicode', u'use')
        # Processing the call keyword arguments (line 765)
        
        # Obtaining an instance of the builtin type 'dict' (line 767)
        dict_255487 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 767, 19), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 767)
        # Adding element type (key, value) (line 767)
        unicode_255488 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 767, 20), 'unicode', u'xlink:href')
        # Getting the type of 'href' (line 767)
        href_255489 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 767, 34), 'href', False)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 767, 19), dict_255487, (unicode_255488, href_255489))
        # Adding element type (key, value) (line 767)
        unicode_255490 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 768, 20), 'unicode', u'fill')
        
        # Call to rgb2hex(...): (line 768)
        # Processing the call arguments (line 768)
        # Getting the type of 'avg_color' (line 768)
        avg_color_255492 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 768, 36), 'avg_color', False)
        # Processing the call keyword arguments (line 768)
        kwargs_255493 = {}
        # Getting the type of 'rgb2hex' (line 768)
        rgb2hex_255491 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 768, 28), 'rgb2hex', False)
        # Calling rgb2hex(args, kwargs) (line 768)
        rgb2hex_call_result_255494 = invoke(stypy.reporting.localization.Localization(__file__, 768, 28), rgb2hex_255491, *[avg_color_255492], **kwargs_255493)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 767, 19), dict_255487, (unicode_255490, rgb2hex_call_result_255494))
        # Adding element type (key, value) (line 767)
        unicode_255495 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 769, 20), 'unicode', u'fill-opacity')
        
        # Call to short_float_fmt(...): (line 769)
        # Processing the call arguments (line 769)
        
        # Obtaining the type of the subscript
        int_255497 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 769, 62), 'int')
        # Getting the type of 'avg_color' (line 769)
        avg_color_255498 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 769, 52), 'avg_color', False)
        # Obtaining the member '__getitem__' of a type (line 769)
        getitem___255499 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 769, 52), avg_color_255498, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 769)
        subscript_call_result_255500 = invoke(stypy.reporting.localization.Localization(__file__, 769, 52), getitem___255499, int_255497)
        
        # Processing the call keyword arguments (line 769)
        kwargs_255501 = {}
        # Getting the type of 'short_float_fmt' (line 769)
        short_float_fmt_255496 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 769, 36), 'short_float_fmt', False)
        # Calling short_float_fmt(args, kwargs) (line 769)
        short_float_fmt_call_result_255502 = invoke(stypy.reporting.localization.Localization(__file__, 769, 36), short_float_fmt_255496, *[subscript_call_result_255500], **kwargs_255501)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 767, 19), dict_255487, (unicode_255495, short_float_fmt_call_result_255502))
        
        keyword_255503 = dict_255487
        kwargs_255504 = {'attrib': keyword_255503}
        # Getting the type of 'writer' (line 765)
        writer_255484 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 765, 8), 'writer', False)
        # Obtaining the member 'element' of a type (line 765)
        element_255485 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 765, 8), writer_255484, 'element')
        # Calling element(args, kwargs) (line 765)
        element_call_result_255505 = invoke(stypy.reporting.localization.Localization(__file__, 765, 8), element_255485, *[unicode_255486], **kwargs_255504)
        
        
        
        # Call to range(...): (line 770)
        # Processing the call arguments (line 770)
        int_255507 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 770, 23), 'int')
        # Processing the call keyword arguments (line 770)
        kwargs_255508 = {}
        # Getting the type of 'range' (line 770)
        range_255506 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 770, 17), 'range', False)
        # Calling range(args, kwargs) (line 770)
        range_call_result_255509 = invoke(stypy.reporting.localization.Localization(__file__, 770, 17), range_255506, *[int_255507], **kwargs_255508)
        
        # Testing the type of a for loop iterable (line 770)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 770, 8), range_call_result_255509)
        # Getting the type of the for loop variable (line 770)
        for_loop_var_255510 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 770, 8), range_call_result_255509)
        # Assigning a type to the variable 'i' (line 770)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 770, 8), 'i', for_loop_var_255510)
        # SSA begins for a for statement (line 770)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to element(...): (line 771)
        # Processing the call arguments (line 771)
        unicode_255513 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 772, 16), 'unicode', u'use')
        # Processing the call keyword arguments (line 771)
        
        # Obtaining an instance of the builtin type 'dict' (line 773)
        dict_255514 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 773, 23), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 773)
        # Adding element type (key, value) (line 773)
        unicode_255515 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 773, 24), 'unicode', u'xlink:href')
        # Getting the type of 'href' (line 773)
        href_255516 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 773, 38), 'href', False)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 773, 23), dict_255514, (unicode_255515, href_255516))
        # Adding element type (key, value) (line 773)
        unicode_255517 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 774, 24), 'unicode', u'fill')
        unicode_255518 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 774, 32), 'unicode', u'url(#GR%x_%d)')
        
        # Obtaining an instance of the builtin type 'tuple' (line 774)
        tuple_255519 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 774, 51), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 774)
        # Adding element type (line 774)
        # Getting the type of 'self' (line 774)
        self_255520 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 774, 51), 'self', False)
        # Obtaining the member '_n_gradients' of a type (line 774)
        _n_gradients_255521 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 774, 51), self_255520, '_n_gradients')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 774, 51), tuple_255519, _n_gradients_255521)
        # Adding element type (line 774)
        # Getting the type of 'i' (line 774)
        i_255522 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 774, 70), 'i', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 774, 51), tuple_255519, i_255522)
        
        # Applying the binary operator '%' (line 774)
        result_mod_255523 = python_operator(stypy.reporting.localization.Localization(__file__, 774, 32), '%', unicode_255518, tuple_255519)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 773, 23), dict_255514, (unicode_255517, result_mod_255523))
        # Adding element type (key, value) (line 773)
        unicode_255524 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 775, 24), 'unicode', u'fill-opacity')
        unicode_255525 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 775, 40), 'unicode', u'1')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 773, 23), dict_255514, (unicode_255524, unicode_255525))
        # Adding element type (key, value) (line 773)
        unicode_255526 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 776, 24), 'unicode', u'filter')
        unicode_255527 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 776, 34), 'unicode', u'url(#colorAdd)')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 773, 23), dict_255514, (unicode_255526, unicode_255527))
        
        keyword_255528 = dict_255514
        kwargs_255529 = {'attrib': keyword_255528}
        # Getting the type of 'writer' (line 771)
        writer_255511 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 771, 12), 'writer', False)
        # Obtaining the member 'element' of a type (line 771)
        element_255512 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 771, 12), writer_255511, 'element')
        # Calling element(args, kwargs) (line 771)
        element_call_result_255530 = invoke(stypy.reporting.localization.Localization(__file__, 771, 12), element_255512, *[unicode_255513], **kwargs_255529)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'self' (line 778)
        self_255531 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 778, 8), 'self')
        # Obtaining the member '_n_gradients' of a type (line 778)
        _n_gradients_255532 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 778, 8), self_255531, '_n_gradients')
        int_255533 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 778, 29), 'int')
        # Applying the binary operator '+=' (line 778)
        result_iadd_255534 = python_operator(stypy.reporting.localization.Localization(__file__, 778, 8), '+=', _n_gradients_255532, int_255533)
        # Getting the type of 'self' (line 778)
        self_255535 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 778, 8), 'self')
        # Setting the type of the member '_n_gradients' of a type (line 778)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 778, 8), self_255535, '_n_gradients', result_iadd_255534)
        
        
        # ################# End of 'draw_gouraud_triangle(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'draw_gouraud_triangle' in the type store
        # Getting the type of 'stypy_return_type' (line 684)
        stypy_return_type_255536 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 684, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_255536)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'draw_gouraud_triangle'
        return stypy_return_type_255536


    @norecursion
    def draw_gouraud_triangles(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'draw_gouraud_triangles'
        module_type_store = module_type_store.open_function_context('draw_gouraud_triangles', 780, 4, False)
        # Assigning a type to the variable 'self' (line 781)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 781, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererSVG.draw_gouraud_triangles.__dict__.__setitem__('stypy_localization', localization)
        RendererSVG.draw_gouraud_triangles.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererSVG.draw_gouraud_triangles.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererSVG.draw_gouraud_triangles.__dict__.__setitem__('stypy_function_name', 'RendererSVG.draw_gouraud_triangles')
        RendererSVG.draw_gouraud_triangles.__dict__.__setitem__('stypy_param_names_list', ['gc', 'triangles_array', 'colors_array', 'transform'])
        RendererSVG.draw_gouraud_triangles.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererSVG.draw_gouraud_triangles.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererSVG.draw_gouraud_triangles.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererSVG.draw_gouraud_triangles.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererSVG.draw_gouraud_triangles.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererSVG.draw_gouraud_triangles.__dict__.__setitem__('stypy_declared_arg_number', 5)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererSVG.draw_gouraud_triangles', ['gc', 'triangles_array', 'colors_array', 'transform'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'draw_gouraud_triangles', localization, ['gc', 'triangles_array', 'colors_array', 'transform'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'draw_gouraud_triangles(...)' code ##################

        
        # Assigning a Dict to a Name (line 782):
        
        # Assigning a Dict to a Name (line 782):
        
        # Obtaining an instance of the builtin type 'dict' (line 782)
        dict_255537 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 782, 17), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 782)
        
        # Assigning a type to the variable 'attrib' (line 782)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 782, 8), 'attrib', dict_255537)
        
        # Assigning a Call to a Name (line 783):
        
        # Assigning a Call to a Name (line 783):
        
        # Call to _get_clip(...): (line 783)
        # Processing the call arguments (line 783)
        # Getting the type of 'gc' (line 783)
        gc_255540 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 783, 32), 'gc', False)
        # Processing the call keyword arguments (line 783)
        kwargs_255541 = {}
        # Getting the type of 'self' (line 783)
        self_255538 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 783, 17), 'self', False)
        # Obtaining the member '_get_clip' of a type (line 783)
        _get_clip_255539 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 783, 17), self_255538, '_get_clip')
        # Calling _get_clip(args, kwargs) (line 783)
        _get_clip_call_result_255542 = invoke(stypy.reporting.localization.Localization(__file__, 783, 17), _get_clip_255539, *[gc_255540], **kwargs_255541)
        
        # Assigning a type to the variable 'clipid' (line 783)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 783, 8), 'clipid', _get_clip_call_result_255542)
        
        # Type idiom detected: calculating its left and rigth part (line 784)
        # Getting the type of 'clipid' (line 784)
        clipid_255543 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 784, 8), 'clipid')
        # Getting the type of 'None' (line 784)
        None_255544 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 784, 25), 'None')
        
        (may_be_255545, more_types_in_union_255546) = may_not_be_none(clipid_255543, None_255544)

        if may_be_255545:

            if more_types_in_union_255546:
                # Runtime conditional SSA (line 784)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a BinOp to a Subscript (line 785):
            
            # Assigning a BinOp to a Subscript (line 785):
            unicode_255547 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 785, 34), 'unicode', u'url(#%s)')
            # Getting the type of 'clipid' (line 785)
            clipid_255548 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 785, 47), 'clipid')
            # Applying the binary operator '%' (line 785)
            result_mod_255549 = python_operator(stypy.reporting.localization.Localization(__file__, 785, 34), '%', unicode_255547, clipid_255548)
            
            # Getting the type of 'attrib' (line 785)
            attrib_255550 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 785, 12), 'attrib')
            unicode_255551 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 785, 19), 'unicode', u'clip-path')
            # Storing an element on a container (line 785)
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 785, 12), attrib_255550, (unicode_255551, result_mod_255549))

            if more_types_in_union_255546:
                # SSA join for if statement (line 784)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Call to start(...): (line 787)
        # Processing the call arguments (line 787)
        unicode_255555 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 787, 26), 'unicode', u'g')
        # Processing the call keyword arguments (line 787)
        # Getting the type of 'attrib' (line 787)
        attrib_255556 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 787, 38), 'attrib', False)
        keyword_255557 = attrib_255556
        kwargs_255558 = {'attrib': keyword_255557}
        # Getting the type of 'self' (line 787)
        self_255552 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 787, 8), 'self', False)
        # Obtaining the member 'writer' of a type (line 787)
        writer_255553 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 787, 8), self_255552, 'writer')
        # Obtaining the member 'start' of a type (line 787)
        start_255554 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 787, 8), writer_255553, 'start')
        # Calling start(args, kwargs) (line 787)
        start_call_result_255559 = invoke(stypy.reporting.localization.Localization(__file__, 787, 8), start_255554, *[unicode_255555], **kwargs_255558)
        
        
        # Assigning a Call to a Name (line 789):
        
        # Assigning a Call to a Name (line 789):
        
        # Call to frozen(...): (line 789)
        # Processing the call keyword arguments (line 789)
        kwargs_255562 = {}
        # Getting the type of 'transform' (line 789)
        transform_255560 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 789, 20), 'transform', False)
        # Obtaining the member 'frozen' of a type (line 789)
        frozen_255561 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 789, 20), transform_255560, 'frozen')
        # Calling frozen(args, kwargs) (line 789)
        frozen_call_result_255563 = invoke(stypy.reporting.localization.Localization(__file__, 789, 20), frozen_255561, *[], **kwargs_255562)
        
        # Assigning a type to the variable 'transform' (line 789)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 789, 8), 'transform', frozen_call_result_255563)
        
        
        # Call to zip(...): (line 790)
        # Processing the call arguments (line 790)
        # Getting the type of 'triangles_array' (line 790)
        triangles_array_255565 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 790, 28), 'triangles_array', False)
        # Getting the type of 'colors_array' (line 790)
        colors_array_255566 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 790, 45), 'colors_array', False)
        # Processing the call keyword arguments (line 790)
        kwargs_255567 = {}
        # Getting the type of 'zip' (line 790)
        zip_255564 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 790, 24), 'zip', False)
        # Calling zip(args, kwargs) (line 790)
        zip_call_result_255568 = invoke(stypy.reporting.localization.Localization(__file__, 790, 24), zip_255564, *[triangles_array_255565, colors_array_255566], **kwargs_255567)
        
        # Testing the type of a for loop iterable (line 790)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 790, 8), zip_call_result_255568)
        # Getting the type of the for loop variable (line 790)
        for_loop_var_255569 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 790, 8), zip_call_result_255568)
        # Assigning a type to the variable 'tri' (line 790)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 790, 8), 'tri', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 790, 8), for_loop_var_255569))
        # Assigning a type to the variable 'col' (line 790)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 790, 8), 'col', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 790, 8), for_loop_var_255569))
        # SSA begins for a for statement (line 790)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to draw_gouraud_triangle(...): (line 791)
        # Processing the call arguments (line 791)
        # Getting the type of 'gc' (line 791)
        gc_255572 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 791, 39), 'gc', False)
        # Getting the type of 'tri' (line 791)
        tri_255573 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 791, 43), 'tri', False)
        # Getting the type of 'col' (line 791)
        col_255574 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 791, 48), 'col', False)
        # Getting the type of 'transform' (line 791)
        transform_255575 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 791, 53), 'transform', False)
        # Processing the call keyword arguments (line 791)
        kwargs_255576 = {}
        # Getting the type of 'self' (line 791)
        self_255570 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 791, 12), 'self', False)
        # Obtaining the member 'draw_gouraud_triangle' of a type (line 791)
        draw_gouraud_triangle_255571 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 791, 12), self_255570, 'draw_gouraud_triangle')
        # Calling draw_gouraud_triangle(args, kwargs) (line 791)
        draw_gouraud_triangle_call_result_255577 = invoke(stypy.reporting.localization.Localization(__file__, 791, 12), draw_gouraud_triangle_255571, *[gc_255572, tri_255573, col_255574, transform_255575], **kwargs_255576)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to end(...): (line 793)
        # Processing the call arguments (line 793)
        unicode_255581 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 793, 24), 'unicode', u'g')
        # Processing the call keyword arguments (line 793)
        kwargs_255582 = {}
        # Getting the type of 'self' (line 793)
        self_255578 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 793, 8), 'self', False)
        # Obtaining the member 'writer' of a type (line 793)
        writer_255579 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 793, 8), self_255578, 'writer')
        # Obtaining the member 'end' of a type (line 793)
        end_255580 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 793, 8), writer_255579, 'end')
        # Calling end(args, kwargs) (line 793)
        end_call_result_255583 = invoke(stypy.reporting.localization.Localization(__file__, 793, 8), end_255580, *[unicode_255581], **kwargs_255582)
        
        
        # ################# End of 'draw_gouraud_triangles(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'draw_gouraud_triangles' in the type store
        # Getting the type of 'stypy_return_type' (line 780)
        stypy_return_type_255584 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 780, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_255584)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'draw_gouraud_triangles'
        return stypy_return_type_255584


    @norecursion
    def option_scale_image(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'option_scale_image'
        module_type_store = module_type_store.open_function_context('option_scale_image', 795, 4, False)
        # Assigning a type to the variable 'self' (line 796)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 796, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererSVG.option_scale_image.__dict__.__setitem__('stypy_localization', localization)
        RendererSVG.option_scale_image.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererSVG.option_scale_image.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererSVG.option_scale_image.__dict__.__setitem__('stypy_function_name', 'RendererSVG.option_scale_image')
        RendererSVG.option_scale_image.__dict__.__setitem__('stypy_param_names_list', [])
        RendererSVG.option_scale_image.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererSVG.option_scale_image.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererSVG.option_scale_image.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererSVG.option_scale_image.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererSVG.option_scale_image.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererSVG.option_scale_image.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererSVG.option_scale_image', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'option_scale_image', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'option_scale_image(...)' code ##################

        # Getting the type of 'True' (line 796)
        True_255585 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 796, 15), 'True')
        # Assigning a type to the variable 'stypy_return_type' (line 796)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 796, 8), 'stypy_return_type', True_255585)
        
        # ################# End of 'option_scale_image(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'option_scale_image' in the type store
        # Getting the type of 'stypy_return_type' (line 795)
        stypy_return_type_255586 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 795, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_255586)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'option_scale_image'
        return stypy_return_type_255586


    @norecursion
    def get_image_magnification(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'get_image_magnification'
        module_type_store = module_type_store.open_function_context('get_image_magnification', 798, 4, False)
        # Assigning a type to the variable 'self' (line 799)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 799, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererSVG.get_image_magnification.__dict__.__setitem__('stypy_localization', localization)
        RendererSVG.get_image_magnification.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererSVG.get_image_magnification.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererSVG.get_image_magnification.__dict__.__setitem__('stypy_function_name', 'RendererSVG.get_image_magnification')
        RendererSVG.get_image_magnification.__dict__.__setitem__('stypy_param_names_list', [])
        RendererSVG.get_image_magnification.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererSVG.get_image_magnification.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererSVG.get_image_magnification.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererSVG.get_image_magnification.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererSVG.get_image_magnification.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererSVG.get_image_magnification.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererSVG.get_image_magnification', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_image_magnification', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_image_magnification(...)' code ##################

        # Getting the type of 'self' (line 799)
        self_255587 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 799, 15), 'self')
        # Obtaining the member 'image_dpi' of a type (line 799)
        image_dpi_255588 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 799, 15), self_255587, 'image_dpi')
        float_255589 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 799, 32), 'float')
        # Applying the binary operator 'div' (line 799)
        result_div_255590 = python_operator(stypy.reporting.localization.Localization(__file__, 799, 15), 'div', image_dpi_255588, float_255589)
        
        # Assigning a type to the variable 'stypy_return_type' (line 799)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 799, 8), 'stypy_return_type', result_div_255590)
        
        # ################# End of 'get_image_magnification(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_image_magnification' in the type store
        # Getting the type of 'stypy_return_type' (line 798)
        stypy_return_type_255591 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 798, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_255591)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_image_magnification'
        return stypy_return_type_255591


    @norecursion
    def draw_image(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'None' (line 801)
        None_255592 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 801, 49), 'None')
        defaults = [None_255592]
        # Create a new context for function 'draw_image'
        module_type_store = module_type_store.open_function_context('draw_image', 801, 4, False)
        # Assigning a type to the variable 'self' (line 802)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 802, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererSVG.draw_image.__dict__.__setitem__('stypy_localization', localization)
        RendererSVG.draw_image.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererSVG.draw_image.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererSVG.draw_image.__dict__.__setitem__('stypy_function_name', 'RendererSVG.draw_image')
        RendererSVG.draw_image.__dict__.__setitem__('stypy_param_names_list', ['gc', 'x', 'y', 'im', 'transform'])
        RendererSVG.draw_image.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererSVG.draw_image.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererSVG.draw_image.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererSVG.draw_image.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererSVG.draw_image.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererSVG.draw_image.__dict__.__setitem__('stypy_declared_arg_number', 6)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererSVG.draw_image', ['gc', 'x', 'y', 'im', 'transform'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'draw_image', localization, ['gc', 'x', 'y', 'im', 'transform'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'draw_image(...)' code ##################

        
        # Assigning a Subscript to a Tuple (line 802):
        
        # Assigning a Subscript to a Name (line 802):
        
        # Obtaining the type of the subscript
        int_255593 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 802, 8), 'int')
        
        # Obtaining the type of the subscript
        int_255594 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 802, 25), 'int')
        slice_255595 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 802, 15), None, int_255594, None)
        # Getting the type of 'im' (line 802)
        im_255596 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 802, 15), 'im')
        # Obtaining the member 'shape' of a type (line 802)
        shape_255597 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 802, 15), im_255596, 'shape')
        # Obtaining the member '__getitem__' of a type (line 802)
        getitem___255598 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 802, 15), shape_255597, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 802)
        subscript_call_result_255599 = invoke(stypy.reporting.localization.Localization(__file__, 802, 15), getitem___255598, slice_255595)
        
        # Obtaining the member '__getitem__' of a type (line 802)
        getitem___255600 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 802, 8), subscript_call_result_255599, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 802)
        subscript_call_result_255601 = invoke(stypy.reporting.localization.Localization(__file__, 802, 8), getitem___255600, int_255593)
        
        # Assigning a type to the variable 'tuple_var_assignment_252820' (line 802)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 802, 8), 'tuple_var_assignment_252820', subscript_call_result_255601)
        
        # Assigning a Subscript to a Name (line 802):
        
        # Obtaining the type of the subscript
        int_255602 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 802, 8), 'int')
        
        # Obtaining the type of the subscript
        int_255603 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 802, 25), 'int')
        slice_255604 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 802, 15), None, int_255603, None)
        # Getting the type of 'im' (line 802)
        im_255605 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 802, 15), 'im')
        # Obtaining the member 'shape' of a type (line 802)
        shape_255606 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 802, 15), im_255605, 'shape')
        # Obtaining the member '__getitem__' of a type (line 802)
        getitem___255607 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 802, 15), shape_255606, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 802)
        subscript_call_result_255608 = invoke(stypy.reporting.localization.Localization(__file__, 802, 15), getitem___255607, slice_255604)
        
        # Obtaining the member '__getitem__' of a type (line 802)
        getitem___255609 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 802, 8), subscript_call_result_255608, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 802)
        subscript_call_result_255610 = invoke(stypy.reporting.localization.Localization(__file__, 802, 8), getitem___255609, int_255602)
        
        # Assigning a type to the variable 'tuple_var_assignment_252821' (line 802)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 802, 8), 'tuple_var_assignment_252821', subscript_call_result_255610)
        
        # Assigning a Name to a Name (line 802):
        # Getting the type of 'tuple_var_assignment_252820' (line 802)
        tuple_var_assignment_252820_255611 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 802, 8), 'tuple_var_assignment_252820')
        # Assigning a type to the variable 'h' (line 802)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 802, 8), 'h', tuple_var_assignment_252820_255611)
        
        # Assigning a Name to a Name (line 802):
        # Getting the type of 'tuple_var_assignment_252821' (line 802)
        tuple_var_assignment_252821_255612 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 802, 8), 'tuple_var_assignment_252821')
        # Assigning a type to the variable 'w' (line 802)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 802, 11), 'w', tuple_var_assignment_252821_255612)
        
        
        # Evaluating a boolean operation
        
        # Getting the type of 'w' (line 804)
        w_255613 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 804, 11), 'w')
        int_255614 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 804, 16), 'int')
        # Applying the binary operator '==' (line 804)
        result_eq_255615 = python_operator(stypy.reporting.localization.Localization(__file__, 804, 11), '==', w_255613, int_255614)
        
        
        # Getting the type of 'h' (line 804)
        h_255616 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 804, 21), 'h')
        int_255617 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 804, 26), 'int')
        # Applying the binary operator '==' (line 804)
        result_eq_255618 = python_operator(stypy.reporting.localization.Localization(__file__, 804, 21), '==', h_255616, int_255617)
        
        # Applying the binary operator 'or' (line 804)
        result_or_keyword_255619 = python_operator(stypy.reporting.localization.Localization(__file__, 804, 11), 'or', result_eq_255615, result_eq_255618)
        
        # Testing the type of an if condition (line 804)
        if_condition_255620 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 804, 8), result_or_keyword_255619)
        # Assigning a type to the variable 'if_condition_255620' (line 804)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 804, 8), 'if_condition_255620', if_condition_255620)
        # SSA begins for if statement (line 804)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        # Assigning a type to the variable 'stypy_return_type' (line 805)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 805, 12), 'stypy_return_type', types.NoneType)
        # SSA join for if statement (line 804)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Dict to a Name (line 807):
        
        # Assigning a Dict to a Name (line 807):
        
        # Obtaining an instance of the builtin type 'dict' (line 807)
        dict_255621 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 807, 17), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 807)
        
        # Assigning a type to the variable 'attrib' (line 807)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 807, 8), 'attrib', dict_255621)
        
        # Assigning a Call to a Name (line 808):
        
        # Assigning a Call to a Name (line 808):
        
        # Call to _get_clip(...): (line 808)
        # Processing the call arguments (line 808)
        # Getting the type of 'gc' (line 808)
        gc_255624 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 808, 32), 'gc', False)
        # Processing the call keyword arguments (line 808)
        kwargs_255625 = {}
        # Getting the type of 'self' (line 808)
        self_255622 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 808, 17), 'self', False)
        # Obtaining the member '_get_clip' of a type (line 808)
        _get_clip_255623 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 808, 17), self_255622, '_get_clip')
        # Calling _get_clip(args, kwargs) (line 808)
        _get_clip_call_result_255626 = invoke(stypy.reporting.localization.Localization(__file__, 808, 17), _get_clip_255623, *[gc_255624], **kwargs_255625)
        
        # Assigning a type to the variable 'clipid' (line 808)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 808, 8), 'clipid', _get_clip_call_result_255626)
        
        # Type idiom detected: calculating its left and rigth part (line 809)
        # Getting the type of 'clipid' (line 809)
        clipid_255627 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 809, 8), 'clipid')
        # Getting the type of 'None' (line 809)
        None_255628 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 809, 25), 'None')
        
        (may_be_255629, more_types_in_union_255630) = may_not_be_none(clipid_255627, None_255628)

        if may_be_255629:

            if more_types_in_union_255630:
                # Runtime conditional SSA (line 809)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Call to start(...): (line 813)
            # Processing the call arguments (line 813)
            unicode_255634 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 813, 30), 'unicode', u'g')
            # Processing the call keyword arguments (line 813)
            
            # Obtaining an instance of the builtin type 'dict' (line 813)
            dict_255635 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 813, 42), 'dict')
            # Adding type elements to the builtin type 'dict' instance (line 813)
            # Adding element type (key, value) (line 813)
            unicode_255636 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 813, 43), 'unicode', u'clip-path')
            unicode_255637 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 813, 56), 'unicode', u'url(#%s)')
            # Getting the type of 'clipid' (line 813)
            clipid_255638 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 813, 69), 'clipid', False)
            # Applying the binary operator '%' (line 813)
            result_mod_255639 = python_operator(stypy.reporting.localization.Localization(__file__, 813, 56), '%', unicode_255637, clipid_255638)
            
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 813, 42), dict_255635, (unicode_255636, result_mod_255639))
            
            keyword_255640 = dict_255635
            kwargs_255641 = {'attrib': keyword_255640}
            # Getting the type of 'self' (line 813)
            self_255631 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 813, 12), 'self', False)
            # Obtaining the member 'writer' of a type (line 813)
            writer_255632 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 813, 12), self_255631, 'writer')
            # Obtaining the member 'start' of a type (line 813)
            start_255633 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 813, 12), writer_255632, 'start')
            # Calling start(args, kwargs) (line 813)
            start_call_result_255642 = invoke(stypy.reporting.localization.Localization(__file__, 813, 12), start_255633, *[unicode_255634], **kwargs_255641)
            

            if more_types_in_union_255630:
                # SSA join for if statement (line 809)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Call to a Name (line 815):
        
        # Assigning a Call to a Name (line 815):
        
        # Call to get_gid(...): (line 815)
        # Processing the call keyword arguments (line 815)
        kwargs_255645 = {}
        # Getting the type of 'gc' (line 815)
        gc_255643 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 815, 14), 'gc', False)
        # Obtaining the member 'get_gid' of a type (line 815)
        get_gid_255644 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 815, 14), gc_255643, 'get_gid')
        # Calling get_gid(args, kwargs) (line 815)
        get_gid_call_result_255646 = invoke(stypy.reporting.localization.Localization(__file__, 815, 14), get_gid_255644, *[], **kwargs_255645)
        
        # Assigning a type to the variable 'oid' (line 815)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 815, 8), 'oid', get_gid_call_result_255646)
        
        # Assigning a Call to a Name (line 816):
        
        # Assigning a Call to a Name (line 816):
        
        # Call to get_url(...): (line 816)
        # Processing the call keyword arguments (line 816)
        kwargs_255649 = {}
        # Getting the type of 'gc' (line 816)
        gc_255647 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 816, 14), 'gc', False)
        # Obtaining the member 'get_url' of a type (line 816)
        get_url_255648 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 816, 14), gc_255647, 'get_url')
        # Calling get_url(args, kwargs) (line 816)
        get_url_call_result_255650 = invoke(stypy.reporting.localization.Localization(__file__, 816, 14), get_url_255648, *[], **kwargs_255649)
        
        # Assigning a type to the variable 'url' (line 816)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 816, 8), 'url', get_url_call_result_255650)
        
        # Type idiom detected: calculating its left and rigth part (line 817)
        # Getting the type of 'url' (line 817)
        url_255651 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 817, 8), 'url')
        # Getting the type of 'None' (line 817)
        None_255652 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 817, 22), 'None')
        
        (may_be_255653, more_types_in_union_255654) = may_not_be_none(url_255651, None_255652)

        if may_be_255653:

            if more_types_in_union_255654:
                # Runtime conditional SSA (line 817)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Call to start(...): (line 818)
            # Processing the call arguments (line 818)
            unicode_255658 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 818, 30), 'unicode', u'a')
            # Processing the call keyword arguments (line 818)
            
            # Obtaining an instance of the builtin type 'dict' (line 818)
            dict_255659 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 818, 42), 'dict')
            # Adding type elements to the builtin type 'dict' instance (line 818)
            # Adding element type (key, value) (line 818)
            unicode_255660 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 818, 43), 'unicode', u'xlink:href')
            # Getting the type of 'url' (line 818)
            url_255661 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 818, 57), 'url', False)
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 818, 42), dict_255659, (unicode_255660, url_255661))
            
            keyword_255662 = dict_255659
            kwargs_255663 = {'attrib': keyword_255662}
            # Getting the type of 'self' (line 818)
            self_255655 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 818, 12), 'self', False)
            # Obtaining the member 'writer' of a type (line 818)
            writer_255656 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 818, 12), self_255655, 'writer')
            # Obtaining the member 'start' of a type (line 818)
            start_255657 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 818, 12), writer_255656, 'start')
            # Calling start(args, kwargs) (line 818)
            start_call_result_255664 = invoke(stypy.reporting.localization.Localization(__file__, 818, 12), start_255657, *[unicode_255658], **kwargs_255663)
            

            if more_types_in_union_255654:
                # SSA join for if statement (line 817)
                module_type_store = module_type_store.join_ssa_context()


        
        
        
        # Obtaining the type of the subscript
        unicode_255665 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 819, 20), 'unicode', u'svg.image_inline')
        # Getting the type of 'rcParams' (line 819)
        rcParams_255666 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 819, 11), 'rcParams')
        # Obtaining the member '__getitem__' of a type (line 819)
        getitem___255667 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 819, 11), rcParams_255666, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 819)
        subscript_call_result_255668 = invoke(stypy.reporting.localization.Localization(__file__, 819, 11), getitem___255667, unicode_255665)
        
        # Testing the type of an if condition (line 819)
        if_condition_255669 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 819, 8), subscript_call_result_255668)
        # Assigning a type to the variable 'if_condition_255669' (line 819)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 819, 8), 'if_condition_255669', if_condition_255669)
        # SSA begins for if statement (line 819)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 820):
        
        # Assigning a Call to a Name (line 820):
        
        # Call to BytesIO(...): (line 820)
        # Processing the call keyword arguments (line 820)
        kwargs_255672 = {}
        # Getting the type of 'io' (line 820)
        io_255670 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 820, 22), 'io', False)
        # Obtaining the member 'BytesIO' of a type (line 820)
        BytesIO_255671 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 820, 22), io_255670, 'BytesIO')
        # Calling BytesIO(args, kwargs) (line 820)
        BytesIO_call_result_255673 = invoke(stypy.reporting.localization.Localization(__file__, 820, 22), BytesIO_255671, *[], **kwargs_255672)
        
        # Assigning a type to the variable 'bytesio' (line 820)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 820, 12), 'bytesio', BytesIO_call_result_255673)
        
        # Call to write_png(...): (line 821)
        # Processing the call arguments (line 821)
        # Getting the type of 'im' (line 821)
        im_255676 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 821, 27), 'im', False)
        # Getting the type of 'bytesio' (line 821)
        bytesio_255677 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 821, 31), 'bytesio', False)
        # Processing the call keyword arguments (line 821)
        kwargs_255678 = {}
        # Getting the type of '_png' (line 821)
        _png_255674 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 821, 12), '_png', False)
        # Obtaining the member 'write_png' of a type (line 821)
        write_png_255675 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 821, 12), _png_255674, 'write_png')
        # Calling write_png(args, kwargs) (line 821)
        write_png_call_result_255679 = invoke(stypy.reporting.localization.Localization(__file__, 821, 12), write_png_255675, *[im_255676, bytesio_255677], **kwargs_255678)
        
        
        # Assigning a BoolOp to a Name (line 822):
        
        # Assigning a BoolOp to a Name (line 822):
        
        # Evaluating a boolean operation
        # Getting the type of 'oid' (line 822)
        oid_255680 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 822, 18), 'oid')
        
        # Call to _make_id(...): (line 822)
        # Processing the call arguments (line 822)
        unicode_255683 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 822, 39), 'unicode', u'image')
        
        # Call to getvalue(...): (line 822)
        # Processing the call keyword arguments (line 822)
        kwargs_255686 = {}
        # Getting the type of 'bytesio' (line 822)
        bytesio_255684 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 822, 48), 'bytesio', False)
        # Obtaining the member 'getvalue' of a type (line 822)
        getvalue_255685 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 822, 48), bytesio_255684, 'getvalue')
        # Calling getvalue(args, kwargs) (line 822)
        getvalue_call_result_255687 = invoke(stypy.reporting.localization.Localization(__file__, 822, 48), getvalue_255685, *[], **kwargs_255686)
        
        # Processing the call keyword arguments (line 822)
        kwargs_255688 = {}
        # Getting the type of 'self' (line 822)
        self_255681 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 822, 25), 'self', False)
        # Obtaining the member '_make_id' of a type (line 822)
        _make_id_255682 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 822, 25), self_255681, '_make_id')
        # Calling _make_id(args, kwargs) (line 822)
        _make_id_call_result_255689 = invoke(stypy.reporting.localization.Localization(__file__, 822, 25), _make_id_255682, *[unicode_255683, getvalue_call_result_255687], **kwargs_255688)
        
        # Applying the binary operator 'or' (line 822)
        result_or_keyword_255690 = python_operator(stypy.reporting.localization.Localization(__file__, 822, 18), 'or', oid_255680, _make_id_call_result_255689)
        
        # Assigning a type to the variable 'oid' (line 822)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 822, 12), 'oid', result_or_keyword_255690)
        
        # Assigning a BinOp to a Subscript (line 823):
        
        # Assigning a BinOp to a Subscript (line 823):
        unicode_255691 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 824, 16), 'unicode', u'data:image/png;base64,\n')
        
        # Call to decode(...): (line 825)
        # Processing the call arguments (line 825)
        unicode_255701 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 825, 60), 'unicode', u'ascii')
        # Processing the call keyword arguments (line 825)
        kwargs_255702 = {}
        
        # Call to b64encode(...): (line 825)
        # Processing the call arguments (line 825)
        
        # Call to getvalue(...): (line 825)
        # Processing the call keyword arguments (line 825)
        kwargs_255696 = {}
        # Getting the type of 'bytesio' (line 825)
        bytesio_255694 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 825, 33), 'bytesio', False)
        # Obtaining the member 'getvalue' of a type (line 825)
        getvalue_255695 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 825, 33), bytesio_255694, 'getvalue')
        # Calling getvalue(args, kwargs) (line 825)
        getvalue_call_result_255697 = invoke(stypy.reporting.localization.Localization(__file__, 825, 33), getvalue_255695, *[], **kwargs_255696)
        
        # Processing the call keyword arguments (line 825)
        kwargs_255698 = {}
        # Getting the type of 'base64' (line 825)
        base64_255692 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 825, 16), 'base64', False)
        # Obtaining the member 'b64encode' of a type (line 825)
        b64encode_255693 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 825, 16), base64_255692, 'b64encode')
        # Calling b64encode(args, kwargs) (line 825)
        b64encode_call_result_255699 = invoke(stypy.reporting.localization.Localization(__file__, 825, 16), b64encode_255693, *[getvalue_call_result_255697], **kwargs_255698)
        
        # Obtaining the member 'decode' of a type (line 825)
        decode_255700 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 825, 16), b64encode_call_result_255699, 'decode')
        # Calling decode(args, kwargs) (line 825)
        decode_call_result_255703 = invoke(stypy.reporting.localization.Localization(__file__, 825, 16), decode_255700, *[unicode_255701], **kwargs_255702)
        
        # Applying the binary operator '+' (line 824)
        result_add_255704 = python_operator(stypy.reporting.localization.Localization(__file__, 824, 16), '+', unicode_255691, decode_call_result_255703)
        
        # Getting the type of 'attrib' (line 823)
        attrib_255705 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 823, 12), 'attrib')
        unicode_255706 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 823, 19), 'unicode', u'xlink:href')
        # Storing an element on a container (line 823)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 823, 12), attrib_255705, (unicode_255706, result_add_255704))
        # SSA branch for the else part of an if statement (line 819)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a BinOp to a Subscript (line 827):
        
        # Assigning a BinOp to a Subscript (line 827):
        
        # Call to get(...): (line 827)
        # Processing the call arguments (line 827)
        # Getting the type of 'self' (line 827)
        self_255710 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 827, 59), 'self', False)
        # Obtaining the member 'basename' of a type (line 827)
        basename_255711 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 827, 59), self_255710, 'basename')
        int_255712 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 827, 74), 'int')
        # Processing the call keyword arguments (line 827)
        kwargs_255713 = {}
        # Getting the type of 'self' (line 827)
        self_255707 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 827, 42), 'self', False)
        # Obtaining the member '_imaged' of a type (line 827)
        _imaged_255708 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 827, 42), self_255707, '_imaged')
        # Obtaining the member 'get' of a type (line 827)
        get_255709 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 827, 42), _imaged_255708, 'get')
        # Calling get(args, kwargs) (line 827)
        get_call_result_255714 = invoke(stypy.reporting.localization.Localization(__file__, 827, 42), get_255709, *[basename_255711, int_255712], **kwargs_255713)
        
        int_255715 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 827, 79), 'int')
        # Applying the binary operator '+' (line 827)
        result_add_255716 = python_operator(stypy.reporting.localization.Localization(__file__, 827, 42), '+', get_call_result_255714, int_255715)
        
        # Getting the type of 'self' (line 827)
        self_255717 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 827, 12), 'self')
        # Obtaining the member '_imaged' of a type (line 827)
        _imaged_255718 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 827, 12), self_255717, '_imaged')
        # Getting the type of 'self' (line 827)
        self_255719 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 827, 25), 'self')
        # Obtaining the member 'basename' of a type (line 827)
        basename_255720 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 827, 25), self_255719, 'basename')
        # Storing an element on a container (line 827)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 827, 12), _imaged_255718, (basename_255720, result_add_255716))
        
        # Assigning a BinOp to a Name (line 828):
        
        # Assigning a BinOp to a Name (line 828):
        unicode_255721 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 828, 23), 'unicode', u'%s.image%d.png')
        
        # Obtaining an instance of the builtin type 'tuple' (line 828)
        tuple_255722 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 828, 41), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 828)
        # Adding element type (line 828)
        # Getting the type of 'self' (line 828)
        self_255723 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 828, 41), 'self')
        # Obtaining the member 'basename' of a type (line 828)
        basename_255724 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 828, 41), self_255723, 'basename')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 828, 41), tuple_255722, basename_255724)
        # Adding element type (line 828)
        
        # Obtaining the type of the subscript
        # Getting the type of 'self' (line 828)
        self_255725 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 828, 69), 'self')
        # Obtaining the member 'basename' of a type (line 828)
        basename_255726 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 828, 69), self_255725, 'basename')
        # Getting the type of 'self' (line 828)
        self_255727 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 828, 56), 'self')
        # Obtaining the member '_imaged' of a type (line 828)
        _imaged_255728 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 828, 56), self_255727, '_imaged')
        # Obtaining the member '__getitem__' of a type (line 828)
        getitem___255729 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 828, 56), _imaged_255728, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 828)
        subscript_call_result_255730 = invoke(stypy.reporting.localization.Localization(__file__, 828, 56), getitem___255729, basename_255726)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 828, 41), tuple_255722, subscript_call_result_255730)
        
        # Applying the binary operator '%' (line 828)
        result_mod_255731 = python_operator(stypy.reporting.localization.Localization(__file__, 828, 23), '%', unicode_255721, tuple_255722)
        
        # Assigning a type to the variable 'filename' (line 828)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 828, 12), 'filename', result_mod_255731)
        
        # Call to report(...): (line 829)
        # Processing the call arguments (line 829)
        unicode_255734 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 829, 27), 'unicode', u'Writing image file for inclusion: %s')
        # Getting the type of 'filename' (line 829)
        filename_255735 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 829, 68), 'filename', False)
        # Applying the binary operator '%' (line 829)
        result_mod_255736 = python_operator(stypy.reporting.localization.Localization(__file__, 829, 27), '%', unicode_255734, filename_255735)
        
        # Processing the call keyword arguments (line 829)
        kwargs_255737 = {}
        # Getting the type of 'verbose' (line 829)
        verbose_255732 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 829, 12), 'verbose', False)
        # Obtaining the member 'report' of a type (line 829)
        report_255733 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 829, 12), verbose_255732, 'report')
        # Calling report(args, kwargs) (line 829)
        report_call_result_255738 = invoke(stypy.reporting.localization.Localization(__file__, 829, 12), report_255733, *[result_mod_255736], **kwargs_255737)
        
        
        # Call to write_png(...): (line 830)
        # Processing the call arguments (line 830)
        # Getting the type of 'im' (line 830)
        im_255741 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 830, 27), 'im', False)
        # Getting the type of 'filename' (line 830)
        filename_255742 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 830, 31), 'filename', False)
        # Processing the call keyword arguments (line 830)
        kwargs_255743 = {}
        # Getting the type of '_png' (line 830)
        _png_255739 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 830, 12), '_png', False)
        # Obtaining the member 'write_png' of a type (line 830)
        write_png_255740 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 830, 12), _png_255739, 'write_png')
        # Calling write_png(args, kwargs) (line 830)
        write_png_call_result_255744 = invoke(stypy.reporting.localization.Localization(__file__, 830, 12), write_png_255740, *[im_255741, filename_255742], **kwargs_255743)
        
        
        # Assigning a BoolOp to a Name (line 831):
        
        # Assigning a BoolOp to a Name (line 831):
        
        # Evaluating a boolean operation
        # Getting the type of 'oid' (line 831)
        oid_255745 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 831, 18), 'oid')
        unicode_255746 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 831, 25), 'unicode', u'Im_')
        
        # Call to _make_id(...): (line 831)
        # Processing the call arguments (line 831)
        unicode_255749 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 831, 47), 'unicode', u'image')
        # Getting the type of 'filename' (line 831)
        filename_255750 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 831, 56), 'filename', False)
        # Processing the call keyword arguments (line 831)
        kwargs_255751 = {}
        # Getting the type of 'self' (line 831)
        self_255747 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 831, 33), 'self', False)
        # Obtaining the member '_make_id' of a type (line 831)
        _make_id_255748 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 831, 33), self_255747, '_make_id')
        # Calling _make_id(args, kwargs) (line 831)
        _make_id_call_result_255752 = invoke(stypy.reporting.localization.Localization(__file__, 831, 33), _make_id_255748, *[unicode_255749, filename_255750], **kwargs_255751)
        
        # Applying the binary operator '+' (line 831)
        result_add_255753 = python_operator(stypy.reporting.localization.Localization(__file__, 831, 25), '+', unicode_255746, _make_id_call_result_255752)
        
        # Applying the binary operator 'or' (line 831)
        result_or_keyword_255754 = python_operator(stypy.reporting.localization.Localization(__file__, 831, 18), 'or', oid_255745, result_add_255753)
        
        # Assigning a type to the variable 'oid' (line 831)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 831, 12), 'oid', result_or_keyword_255754)
        
        # Assigning a Name to a Subscript (line 832):
        
        # Assigning a Name to a Subscript (line 832):
        # Getting the type of 'filename' (line 832)
        filename_255755 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 832, 35), 'filename')
        # Getting the type of 'attrib' (line 832)
        attrib_255756 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 832, 12), 'attrib')
        unicode_255757 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 832, 19), 'unicode', u'xlink:href')
        # Storing an element on a container (line 832)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 832, 12), attrib_255756, (unicode_255757, filename_255755))
        # SSA join for if statement (line 819)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Name to a Subscript (line 834):
        
        # Assigning a Name to a Subscript (line 834):
        # Getting the type of 'oid' (line 834)
        oid_255758 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 834, 23), 'oid')
        # Getting the type of 'attrib' (line 834)
        attrib_255759 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 834, 8), 'attrib')
        unicode_255760 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 834, 15), 'unicode', u'id')
        # Storing an element on a container (line 834)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 834, 8), attrib_255759, (unicode_255760, oid_255758))
        
        # Type idiom detected: calculating its left and rigth part (line 836)
        # Getting the type of 'transform' (line 836)
        transform_255761 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 836, 11), 'transform')
        # Getting the type of 'None' (line 836)
        None_255762 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 836, 24), 'None')
        
        (may_be_255763, more_types_in_union_255764) = may_be_none(transform_255761, None_255762)

        if may_be_255763:

            if more_types_in_union_255764:
                # Runtime conditional SSA (line 836)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a BinOp to a Name (line 837):
            
            # Assigning a BinOp to a Name (line 837):
            float_255765 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 837, 16), 'float')
            # Getting the type of 'w' (line 837)
            w_255766 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 837, 23), 'w')
            # Applying the binary operator '*' (line 837)
            result_mul_255767 = python_operator(stypy.reporting.localization.Localization(__file__, 837, 16), '*', float_255765, w_255766)
            
            # Getting the type of 'self' (line 837)
            self_255768 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 837, 27), 'self')
            # Obtaining the member 'image_dpi' of a type (line 837)
            image_dpi_255769 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 837, 27), self_255768, 'image_dpi')
            # Applying the binary operator 'div' (line 837)
            result_div_255770 = python_operator(stypy.reporting.localization.Localization(__file__, 837, 25), 'div', result_mul_255767, image_dpi_255769)
            
            # Assigning a type to the variable 'w' (line 837)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 837, 12), 'w', result_div_255770)
            
            # Assigning a BinOp to a Name (line 838):
            
            # Assigning a BinOp to a Name (line 838):
            float_255771 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 838, 16), 'float')
            # Getting the type of 'h' (line 838)
            h_255772 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 838, 23), 'h')
            # Applying the binary operator '*' (line 838)
            result_mul_255773 = python_operator(stypy.reporting.localization.Localization(__file__, 838, 16), '*', float_255771, h_255772)
            
            # Getting the type of 'self' (line 838)
            self_255774 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 838, 27), 'self')
            # Obtaining the member 'image_dpi' of a type (line 838)
            image_dpi_255775 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 838, 27), self_255774, 'image_dpi')
            # Applying the binary operator 'div' (line 838)
            result_div_255776 = python_operator(stypy.reporting.localization.Localization(__file__, 838, 25), 'div', result_mul_255773, image_dpi_255775)
            
            # Assigning a type to the variable 'h' (line 838)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 838, 12), 'h', result_div_255776)
            
            # Call to element(...): (line 840)
            # Processing the call arguments (line 840)
            unicode_255780 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 841, 16), 'unicode', u'image')
            # Processing the call keyword arguments (line 840)
            
            # Call to generate_transform(...): (line 842)
            # Processing the call arguments (line 842)
            
            # Obtaining an instance of the builtin type 'list' (line 842)
            list_255782 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 842, 45), 'list')
            # Adding type elements to the builtin type 'list' instance (line 842)
            # Adding element type (line 842)
            
            # Obtaining an instance of the builtin type 'tuple' (line 843)
            tuple_255783 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 843, 21), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 843)
            # Adding element type (line 843)
            unicode_255784 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 843, 21), 'unicode', u'scale')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 843, 21), tuple_255783, unicode_255784)
            # Adding element type (line 843)
            
            # Obtaining an instance of the builtin type 'tuple' (line 843)
            tuple_255785 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 843, 31), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 843)
            # Adding element type (line 843)
            int_255786 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 843, 31), 'int')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 843, 31), tuple_255785, int_255786)
            # Adding element type (line 843)
            int_255787 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 843, 34), 'int')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 843, 31), tuple_255785, int_255787)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 843, 21), tuple_255783, tuple_255785)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 842, 45), list_255782, tuple_255783)
            # Adding element type (line 842)
            
            # Obtaining an instance of the builtin type 'tuple' (line 843)
            tuple_255788 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 843, 41), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 843)
            # Adding element type (line 843)
            unicode_255789 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 843, 41), 'unicode', u'translate')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 843, 41), tuple_255788, unicode_255789)
            # Adding element type (line 843)
            
            # Obtaining an instance of the builtin type 'tuple' (line 843)
            tuple_255790 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 843, 55), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 843)
            # Adding element type (line 843)
            int_255791 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 843, 55), 'int')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 843, 55), tuple_255790, int_255791)
            # Adding element type (line 843)
            
            # Getting the type of 'h' (line 843)
            h_255792 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 843, 59), 'h', False)
            # Applying the 'usub' unary operator (line 843)
            result___neg___255793 = python_operator(stypy.reporting.localization.Localization(__file__, 843, 58), 'usub', h_255792)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 843, 55), tuple_255790, result___neg___255793)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 843, 41), tuple_255788, tuple_255790)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 842, 45), list_255782, tuple_255788)
            
            # Processing the call keyword arguments (line 842)
            kwargs_255794 = {}
            # Getting the type of 'generate_transform' (line 842)
            generate_transform_255781 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 842, 26), 'generate_transform', False)
            # Calling generate_transform(args, kwargs) (line 842)
            generate_transform_call_result_255795 = invoke(stypy.reporting.localization.Localization(__file__, 842, 26), generate_transform_255781, *[list_255782], **kwargs_255794)
            
            keyword_255796 = generate_transform_call_result_255795
            
            # Call to short_float_fmt(...): (line 844)
            # Processing the call arguments (line 844)
            # Getting the type of 'x' (line 844)
            x_255798 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 844, 34), 'x', False)
            # Processing the call keyword arguments (line 844)
            kwargs_255799 = {}
            # Getting the type of 'short_float_fmt' (line 844)
            short_float_fmt_255797 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 844, 18), 'short_float_fmt', False)
            # Calling short_float_fmt(args, kwargs) (line 844)
            short_float_fmt_call_result_255800 = invoke(stypy.reporting.localization.Localization(__file__, 844, 18), short_float_fmt_255797, *[x_255798], **kwargs_255799)
            
            keyword_255801 = short_float_fmt_call_result_255800
            
            # Call to short_float_fmt(...): (line 845)
            # Processing the call arguments (line 845)
            
            # Getting the type of 'self' (line 845)
            self_255803 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 845, 36), 'self', False)
            # Obtaining the member 'height' of a type (line 845)
            height_255804 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 845, 36), self_255803, 'height')
            # Getting the type of 'y' (line 845)
            y_255805 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 845, 50), 'y', False)
            # Applying the binary operator '-' (line 845)
            result_sub_255806 = python_operator(stypy.reporting.localization.Localization(__file__, 845, 36), '-', height_255804, y_255805)
            
            # Getting the type of 'h' (line 845)
            h_255807 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 845, 54), 'h', False)
            # Applying the binary operator '-' (line 845)
            result_sub_255808 = python_operator(stypy.reporting.localization.Localization(__file__, 845, 52), '-', result_sub_255806, h_255807)
            
            # Applying the 'usub' unary operator (line 845)
            result___neg___255809 = python_operator(stypy.reporting.localization.Localization(__file__, 845, 34), 'usub', result_sub_255808)
            
            # Processing the call keyword arguments (line 845)
            kwargs_255810 = {}
            # Getting the type of 'short_float_fmt' (line 845)
            short_float_fmt_255802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 845, 18), 'short_float_fmt', False)
            # Calling short_float_fmt(args, kwargs) (line 845)
            short_float_fmt_call_result_255811 = invoke(stypy.reporting.localization.Localization(__file__, 845, 18), short_float_fmt_255802, *[result___neg___255809], **kwargs_255810)
            
            keyword_255812 = short_float_fmt_call_result_255811
            
            # Call to short_float_fmt(...): (line 846)
            # Processing the call arguments (line 846)
            # Getting the type of 'w' (line 846)
            w_255814 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 846, 38), 'w', False)
            # Processing the call keyword arguments (line 846)
            kwargs_255815 = {}
            # Getting the type of 'short_float_fmt' (line 846)
            short_float_fmt_255813 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 846, 22), 'short_float_fmt', False)
            # Calling short_float_fmt(args, kwargs) (line 846)
            short_float_fmt_call_result_255816 = invoke(stypy.reporting.localization.Localization(__file__, 846, 22), short_float_fmt_255813, *[w_255814], **kwargs_255815)
            
            keyword_255817 = short_float_fmt_call_result_255816
            
            # Call to short_float_fmt(...): (line 846)
            # Processing the call arguments (line 846)
            # Getting the type of 'h' (line 846)
            h_255819 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 846, 65), 'h', False)
            # Processing the call keyword arguments (line 846)
            kwargs_255820 = {}
            # Getting the type of 'short_float_fmt' (line 846)
            short_float_fmt_255818 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 846, 49), 'short_float_fmt', False)
            # Calling short_float_fmt(args, kwargs) (line 846)
            short_float_fmt_call_result_255821 = invoke(stypy.reporting.localization.Localization(__file__, 846, 49), short_float_fmt_255818, *[h_255819], **kwargs_255820)
            
            keyword_255822 = short_float_fmt_call_result_255821
            # Getting the type of 'attrib' (line 847)
            attrib_255823 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 847, 23), 'attrib', False)
            keyword_255824 = attrib_255823
            kwargs_255825 = {'transform': keyword_255796, 'height': keyword_255822, 'width': keyword_255817, 'y': keyword_255812, 'x': keyword_255801, 'attrib': keyword_255824}
            # Getting the type of 'self' (line 840)
            self_255777 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 840, 12), 'self', False)
            # Obtaining the member 'writer' of a type (line 840)
            writer_255778 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 840, 12), self_255777, 'writer')
            # Obtaining the member 'element' of a type (line 840)
            element_255779 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 840, 12), writer_255778, 'element')
            # Calling element(args, kwargs) (line 840)
            element_call_result_255826 = invoke(stypy.reporting.localization.Localization(__file__, 840, 12), element_255779, *[unicode_255780], **kwargs_255825)
            

            if more_types_in_union_255764:
                # Runtime conditional SSA for else branch (line 836)
                module_type_store.open_ssa_branch('idiom else')



        if ((not may_be_255763) or more_types_in_union_255764):
            
            # Assigning a Call to a Name (line 849):
            
            # Assigning a Call to a Name (line 849):
            
            # Call to get_alpha(...): (line 849)
            # Processing the call keyword arguments (line 849)
            kwargs_255829 = {}
            # Getting the type of 'gc' (line 849)
            gc_255827 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 849, 20), 'gc', False)
            # Obtaining the member 'get_alpha' of a type (line 849)
            get_alpha_255828 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 849, 20), gc_255827, 'get_alpha')
            # Calling get_alpha(args, kwargs) (line 849)
            get_alpha_call_result_255830 = invoke(stypy.reporting.localization.Localization(__file__, 849, 20), get_alpha_255828, *[], **kwargs_255829)
            
            # Assigning a type to the variable 'alpha' (line 849)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 849, 12), 'alpha', get_alpha_call_result_255830)
            
            
            # Getting the type of 'alpha' (line 850)
            alpha_255831 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 850, 15), 'alpha')
            float_255832 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 850, 24), 'float')
            # Applying the binary operator '!=' (line 850)
            result_ne_255833 = python_operator(stypy.reporting.localization.Localization(__file__, 850, 15), '!=', alpha_255831, float_255832)
            
            # Testing the type of an if condition (line 850)
            if_condition_255834 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 850, 12), result_ne_255833)
            # Assigning a type to the variable 'if_condition_255834' (line 850)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 850, 12), 'if_condition_255834', if_condition_255834)
            # SSA begins for if statement (line 850)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Call to a Subscript (line 851):
            
            # Assigning a Call to a Subscript (line 851):
            
            # Call to short_float_fmt(...): (line 851)
            # Processing the call arguments (line 851)
            # Getting the type of 'alpha' (line 851)
            alpha_255836 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 851, 52), 'alpha', False)
            # Processing the call keyword arguments (line 851)
            kwargs_255837 = {}
            # Getting the type of 'short_float_fmt' (line 851)
            short_float_fmt_255835 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 851, 36), 'short_float_fmt', False)
            # Calling short_float_fmt(args, kwargs) (line 851)
            short_float_fmt_call_result_255838 = invoke(stypy.reporting.localization.Localization(__file__, 851, 36), short_float_fmt_255835, *[alpha_255836], **kwargs_255837)
            
            # Getting the type of 'attrib' (line 851)
            attrib_255839 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 851, 16), 'attrib')
            unicode_255840 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 851, 23), 'unicode', u'opacity')
            # Storing an element on a container (line 851)
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 851, 16), attrib_255839, (unicode_255840, short_float_fmt_call_result_255838))
            # SSA join for if statement (line 850)
            module_type_store = module_type_store.join_ssa_context()
            
            
            # Assigning a BinOp to a Name (line 853):
            
            # Assigning a BinOp to a Name (line 853):
            
            # Call to scale(...): (line 854)
            # Processing the call arguments (line 854)
            float_255845 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 854, 33), 'float')
            # Getting the type of 'w' (line 854)
            w_255846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 854, 39), 'w', False)
            # Applying the binary operator 'div' (line 854)
            result_div_255847 = python_operator(stypy.reporting.localization.Localization(__file__, 854, 33), 'div', float_255845, w_255846)
            
            float_255848 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 854, 42), 'float')
            # Getting the type of 'h' (line 854)
            h_255849 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 854, 48), 'h', False)
            # Applying the binary operator 'div' (line 854)
            result_div_255850 = python_operator(stypy.reporting.localization.Localization(__file__, 854, 42), 'div', float_255848, h_255849)
            
            # Processing the call keyword arguments (line 854)
            kwargs_255851 = {}
            
            # Call to Affine2D(...): (line 854)
            # Processing the call keyword arguments (line 854)
            kwargs_255842 = {}
            # Getting the type of 'Affine2D' (line 854)
            Affine2D_255841 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 854, 16), 'Affine2D', False)
            # Calling Affine2D(args, kwargs) (line 854)
            Affine2D_call_result_255843 = invoke(stypy.reporting.localization.Localization(__file__, 854, 16), Affine2D_255841, *[], **kwargs_255842)
            
            # Obtaining the member 'scale' of a type (line 854)
            scale_255844 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 854, 16), Affine2D_call_result_255843, 'scale')
            # Calling scale(args, kwargs) (line 854)
            scale_call_result_255852 = invoke(stypy.reporting.localization.Localization(__file__, 854, 16), scale_255844, *[result_div_255847, result_div_255850], **kwargs_255851)
            
            # Getting the type of 'transform' (line 855)
            transform_255853 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 855, 16), 'transform')
            # Applying the binary operator '+' (line 854)
            result_add_255854 = python_operator(stypy.reporting.localization.Localization(__file__, 854, 16), '+', scale_call_result_255852, transform_255853)
            
            
            # Call to translate(...): (line 856)
            # Processing the call arguments (line 856)
            float_255869 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 859, 27), 'float')
            # Getting the type of 'self' (line 859)
            self_255870 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 859, 32), 'self', False)
            # Obtaining the member 'height' of a type (line 859)
            height_255871 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 859, 32), self_255870, 'height')
            # Processing the call keyword arguments (line 856)
            kwargs_255872 = {}
            
            # Call to scale(...): (line 856)
            # Processing the call arguments (line 856)
            float_255864 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 858, 23), 'float')
            float_255865 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 858, 28), 'float')
            # Processing the call keyword arguments (line 856)
            kwargs_255866 = {}
            
            # Call to translate(...): (line 856)
            # Processing the call arguments (line 856)
            # Getting the type of 'x' (line 857)
            x_255859 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 857, 27), 'x', False)
            # Getting the type of 'y' (line 857)
            y_255860 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 857, 30), 'y', False)
            # Processing the call keyword arguments (line 856)
            kwargs_255861 = {}
            
            # Call to Affine2D(...): (line 856)
            # Processing the call keyword arguments (line 856)
            kwargs_255856 = {}
            # Getting the type of 'Affine2D' (line 856)
            Affine2D_255855 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 856, 16), 'Affine2D', False)
            # Calling Affine2D(args, kwargs) (line 856)
            Affine2D_call_result_255857 = invoke(stypy.reporting.localization.Localization(__file__, 856, 16), Affine2D_255855, *[], **kwargs_255856)
            
            # Obtaining the member 'translate' of a type (line 856)
            translate_255858 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 856, 16), Affine2D_call_result_255857, 'translate')
            # Calling translate(args, kwargs) (line 856)
            translate_call_result_255862 = invoke(stypy.reporting.localization.Localization(__file__, 856, 16), translate_255858, *[x_255859, y_255860], **kwargs_255861)
            
            # Obtaining the member 'scale' of a type (line 856)
            scale_255863 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 856, 16), translate_call_result_255862, 'scale')
            # Calling scale(args, kwargs) (line 856)
            scale_call_result_255867 = invoke(stypy.reporting.localization.Localization(__file__, 856, 16), scale_255863, *[float_255864, float_255865], **kwargs_255866)
            
            # Obtaining the member 'translate' of a type (line 856)
            translate_255868 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 856, 16), scale_call_result_255867, 'translate')
            # Calling translate(args, kwargs) (line 856)
            translate_call_result_255873 = invoke(stypy.reporting.localization.Localization(__file__, 856, 16), translate_255868, *[float_255869, height_255871], **kwargs_255872)
            
            # Applying the binary operator '+' (line 855)
            result_add_255874 = python_operator(stypy.reporting.localization.Localization(__file__, 855, 26), '+', result_add_255854, translate_call_result_255873)
            
            # Assigning a type to the variable 'flipped' (line 853)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 853, 12), 'flipped', result_add_255874)
            
            # Assigning a Call to a Subscript (line 861):
            
            # Assigning a Call to a Subscript (line 861):
            
            # Call to generate_transform(...): (line 861)
            # Processing the call arguments (line 861)
            
            # Obtaining an instance of the builtin type 'list' (line 862)
            list_255876 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 862, 16), 'list')
            # Adding type elements to the builtin type 'list' instance (line 862)
            # Adding element type (line 862)
            
            # Obtaining an instance of the builtin type 'tuple' (line 862)
            tuple_255877 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 862, 18), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 862)
            # Adding element type (line 862)
            unicode_255878 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 862, 18), 'unicode', u'matrix')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 862, 18), tuple_255877, unicode_255878)
            # Adding element type (line 862)
            
            # Call to frozen(...): (line 862)
            # Processing the call keyword arguments (line 862)
            kwargs_255881 = {}
            # Getting the type of 'flipped' (line 862)
            flipped_255879 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 862, 28), 'flipped', False)
            # Obtaining the member 'frozen' of a type (line 862)
            frozen_255880 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 862, 28), flipped_255879, 'frozen')
            # Calling frozen(args, kwargs) (line 862)
            frozen_call_result_255882 = invoke(stypy.reporting.localization.Localization(__file__, 862, 28), frozen_255880, *[], **kwargs_255881)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 862, 18), tuple_255877, frozen_call_result_255882)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 862, 16), list_255876, tuple_255877)
            
            # Processing the call keyword arguments (line 861)
            kwargs_255883 = {}
            # Getting the type of 'generate_transform' (line 861)
            generate_transform_255875 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 861, 34), 'generate_transform', False)
            # Calling generate_transform(args, kwargs) (line 861)
            generate_transform_call_result_255884 = invoke(stypy.reporting.localization.Localization(__file__, 861, 34), generate_transform_255875, *[list_255876], **kwargs_255883)
            
            # Getting the type of 'attrib' (line 861)
            attrib_255885 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 861, 12), 'attrib')
            unicode_255886 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 861, 19), 'unicode', u'transform')
            # Storing an element on a container (line 861)
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 861, 12), attrib_255885, (unicode_255886, generate_transform_call_result_255884))
            
            # Call to element(...): (line 863)
            # Processing the call arguments (line 863)
            unicode_255890 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 864, 16), 'unicode', u'image')
            # Processing the call keyword arguments (line 863)
            
            # Call to short_float_fmt(...): (line 865)
            # Processing the call arguments (line 865)
            # Getting the type of 'w' (line 865)
            w_255892 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 865, 38), 'w', False)
            # Processing the call keyword arguments (line 865)
            kwargs_255893 = {}
            # Getting the type of 'short_float_fmt' (line 865)
            short_float_fmt_255891 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 865, 22), 'short_float_fmt', False)
            # Calling short_float_fmt(args, kwargs) (line 865)
            short_float_fmt_call_result_255894 = invoke(stypy.reporting.localization.Localization(__file__, 865, 22), short_float_fmt_255891, *[w_255892], **kwargs_255893)
            
            keyword_255895 = short_float_fmt_call_result_255894
            
            # Call to short_float_fmt(...): (line 865)
            # Processing the call arguments (line 865)
            # Getting the type of 'h' (line 865)
            h_255897 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 865, 65), 'h', False)
            # Processing the call keyword arguments (line 865)
            kwargs_255898 = {}
            # Getting the type of 'short_float_fmt' (line 865)
            short_float_fmt_255896 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 865, 49), 'short_float_fmt', False)
            # Calling short_float_fmt(args, kwargs) (line 865)
            short_float_fmt_call_result_255899 = invoke(stypy.reporting.localization.Localization(__file__, 865, 49), short_float_fmt_255896, *[h_255897], **kwargs_255898)
            
            keyword_255900 = short_float_fmt_call_result_255899
            # Getting the type of 'attrib' (line 866)
            attrib_255901 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 866, 23), 'attrib', False)
            keyword_255902 = attrib_255901
            kwargs_255903 = {'width': keyword_255895, 'attrib': keyword_255902, 'height': keyword_255900}
            # Getting the type of 'self' (line 863)
            self_255887 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 863, 12), 'self', False)
            # Obtaining the member 'writer' of a type (line 863)
            writer_255888 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 863, 12), self_255887, 'writer')
            # Obtaining the member 'element' of a type (line 863)
            element_255889 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 863, 12), writer_255888, 'element')
            # Calling element(args, kwargs) (line 863)
            element_call_result_255904 = invoke(stypy.reporting.localization.Localization(__file__, 863, 12), element_255889, *[unicode_255890], **kwargs_255903)
            

            if (may_be_255763 and more_types_in_union_255764):
                # SSA join for if statement (line 836)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Type idiom detected: calculating its left and rigth part (line 868)
        # Getting the type of 'url' (line 868)
        url_255905 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 868, 8), 'url')
        # Getting the type of 'None' (line 868)
        None_255906 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 868, 22), 'None')
        
        (may_be_255907, more_types_in_union_255908) = may_not_be_none(url_255905, None_255906)

        if may_be_255907:

            if more_types_in_union_255908:
                # Runtime conditional SSA (line 868)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Call to end(...): (line 869)
            # Processing the call arguments (line 869)
            unicode_255912 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 869, 28), 'unicode', u'a')
            # Processing the call keyword arguments (line 869)
            kwargs_255913 = {}
            # Getting the type of 'self' (line 869)
            self_255909 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 869, 12), 'self', False)
            # Obtaining the member 'writer' of a type (line 869)
            writer_255910 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 869, 12), self_255909, 'writer')
            # Obtaining the member 'end' of a type (line 869)
            end_255911 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 869, 12), writer_255910, 'end')
            # Calling end(args, kwargs) (line 869)
            end_call_result_255914 = invoke(stypy.reporting.localization.Localization(__file__, 869, 12), end_255911, *[unicode_255912], **kwargs_255913)
            

            if more_types_in_union_255908:
                # SSA join for if statement (line 868)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Type idiom detected: calculating its left and rigth part (line 870)
        # Getting the type of 'clipid' (line 870)
        clipid_255915 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 870, 8), 'clipid')
        # Getting the type of 'None' (line 870)
        None_255916 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 870, 25), 'None')
        
        (may_be_255917, more_types_in_union_255918) = may_not_be_none(clipid_255915, None_255916)

        if may_be_255917:

            if more_types_in_union_255918:
                # Runtime conditional SSA (line 870)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Call to end(...): (line 871)
            # Processing the call arguments (line 871)
            unicode_255922 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 871, 28), 'unicode', u'g')
            # Processing the call keyword arguments (line 871)
            kwargs_255923 = {}
            # Getting the type of 'self' (line 871)
            self_255919 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 871, 12), 'self', False)
            # Obtaining the member 'writer' of a type (line 871)
            writer_255920 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 871, 12), self_255919, 'writer')
            # Obtaining the member 'end' of a type (line 871)
            end_255921 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 871, 12), writer_255920, 'end')
            # Calling end(args, kwargs) (line 871)
            end_call_result_255924 = invoke(stypy.reporting.localization.Localization(__file__, 871, 12), end_255921, *[unicode_255922], **kwargs_255923)
            

            if more_types_in_union_255918:
                # SSA join for if statement (line 870)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # ################# End of 'draw_image(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'draw_image' in the type store
        # Getting the type of 'stypy_return_type' (line 801)
        stypy_return_type_255925 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 801, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_255925)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'draw_image'
        return stypy_return_type_255925


    @norecursion
    def _adjust_char_id(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_adjust_char_id'
        module_type_store = module_type_store.open_function_context('_adjust_char_id', 873, 4, False)
        # Assigning a type to the variable 'self' (line 874)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 874, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererSVG._adjust_char_id.__dict__.__setitem__('stypy_localization', localization)
        RendererSVG._adjust_char_id.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererSVG._adjust_char_id.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererSVG._adjust_char_id.__dict__.__setitem__('stypy_function_name', 'RendererSVG._adjust_char_id')
        RendererSVG._adjust_char_id.__dict__.__setitem__('stypy_param_names_list', ['char_id'])
        RendererSVG._adjust_char_id.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererSVG._adjust_char_id.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererSVG._adjust_char_id.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererSVG._adjust_char_id.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererSVG._adjust_char_id.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererSVG._adjust_char_id.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererSVG._adjust_char_id', ['char_id'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_adjust_char_id', localization, ['char_id'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_adjust_char_id(...)' code ##################

        
        # Call to replace(...): (line 874)
        # Processing the call arguments (line 874)
        unicode_255928 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 874, 31), 'unicode', u'%20')
        unicode_255929 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 874, 38), 'unicode', u'_')
        # Processing the call keyword arguments (line 874)
        kwargs_255930 = {}
        # Getting the type of 'char_id' (line 874)
        char_id_255926 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 874, 15), 'char_id', False)
        # Obtaining the member 'replace' of a type (line 874)
        replace_255927 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 874, 15), char_id_255926, 'replace')
        # Calling replace(args, kwargs) (line 874)
        replace_call_result_255931 = invoke(stypy.reporting.localization.Localization(__file__, 874, 15), replace_255927, *[unicode_255928, unicode_255929], **kwargs_255930)
        
        # Assigning a type to the variable 'stypy_return_type' (line 874)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 874, 8), 'stypy_return_type', replace_call_result_255931)
        
        # ################# End of '_adjust_char_id(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_adjust_char_id' in the type store
        # Getting the type of 'stypy_return_type' (line 873)
        stypy_return_type_255932 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 873, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_255932)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_adjust_char_id'
        return stypy_return_type_255932


    @norecursion
    def _draw_text_as_path(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'None' (line 876)
        None_255933 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 876, 73), 'None')
        defaults = [None_255933]
        # Create a new context for function '_draw_text_as_path'
        module_type_store = module_type_store.open_function_context('_draw_text_as_path', 876, 4, False)
        # Assigning a type to the variable 'self' (line 877)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 877, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererSVG._draw_text_as_path.__dict__.__setitem__('stypy_localization', localization)
        RendererSVG._draw_text_as_path.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererSVG._draw_text_as_path.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererSVG._draw_text_as_path.__dict__.__setitem__('stypy_function_name', 'RendererSVG._draw_text_as_path')
        RendererSVG._draw_text_as_path.__dict__.__setitem__('stypy_param_names_list', ['gc', 'x', 'y', 's', 'prop', 'angle', 'ismath', 'mtext'])
        RendererSVG._draw_text_as_path.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererSVG._draw_text_as_path.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererSVG._draw_text_as_path.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererSVG._draw_text_as_path.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererSVG._draw_text_as_path.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererSVG._draw_text_as_path.__dict__.__setitem__('stypy_declared_arg_number', 9)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererSVG._draw_text_as_path', ['gc', 'x', 'y', 's', 'prop', 'angle', 'ismath', 'mtext'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_draw_text_as_path', localization, ['gc', 'x', 'y', 's', 'prop', 'angle', 'ismath', 'mtext'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_draw_text_as_path(...)' code ##################

        unicode_255934 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 894, (-1)), 'unicode', u'\n        draw the text by converting them to paths using textpath module.\n\n        Parameters\n        ----------\n        prop : `matplotlib.font_manager.FontProperties`\n          font property\n\n        s : str\n          text to be converted\n\n        usetex : bool\n          If True, use matplotlib usetex mode.\n\n        ismath : bool\n          If True, use mathtext parser. If "TeX", use *usetex* mode.\n\n        ')
        
        # Assigning a Attribute to a Name (line 895):
        
        # Assigning a Attribute to a Name (line 895):
        # Getting the type of 'self' (line 895)
        self_255935 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 895, 17), 'self')
        # Obtaining the member 'writer' of a type (line 895)
        writer_255936 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 895, 17), self_255935, 'writer')
        # Assigning a type to the variable 'writer' (line 895)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 895, 8), 'writer', writer_255936)
        
        # Call to comment(...): (line 897)
        # Processing the call arguments (line 897)
        # Getting the type of 's' (line 897)
        s_255939 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 897, 23), 's', False)
        # Processing the call keyword arguments (line 897)
        kwargs_255940 = {}
        # Getting the type of 'writer' (line 897)
        writer_255937 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 897, 8), 'writer', False)
        # Obtaining the member 'comment' of a type (line 897)
        comment_255938 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 897, 8), writer_255937, 'comment')
        # Calling comment(args, kwargs) (line 897)
        comment_call_result_255941 = invoke(stypy.reporting.localization.Localization(__file__, 897, 8), comment_255938, *[s_255939], **kwargs_255940)
        
        
        # Assigning a Attribute to a Name (line 899):
        
        # Assigning a Attribute to a Name (line 899):
        # Getting the type of 'self' (line 899)
        self_255942 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 899, 18), 'self')
        # Obtaining the member '_glyph_map' of a type (line 899)
        _glyph_map_255943 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 899, 18), self_255942, '_glyph_map')
        # Assigning a type to the variable 'glyph_map' (line 899)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 899, 8), 'glyph_map', _glyph_map_255943)
        
        # Assigning a Attribute to a Name (line 901):
        
        # Assigning a Attribute to a Name (line 901):
        # Getting the type of 'self' (line 901)
        self_255944 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 901, 20), 'self')
        # Obtaining the member '_text2path' of a type (line 901)
        _text2path_255945 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 901, 20), self_255944, '_text2path')
        # Assigning a type to the variable 'text2path' (line 901)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 901, 8), 'text2path', _text2path_255945)
        
        # Assigning a Call to a Name (line 902):
        
        # Assigning a Call to a Name (line 902):
        
        # Call to rgb2hex(...): (line 902)
        # Processing the call arguments (line 902)
        
        # Call to get_rgb(...): (line 902)
        # Processing the call keyword arguments (line 902)
        kwargs_255949 = {}
        # Getting the type of 'gc' (line 902)
        gc_255947 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 902, 24), 'gc', False)
        # Obtaining the member 'get_rgb' of a type (line 902)
        get_rgb_255948 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 902, 24), gc_255947, 'get_rgb')
        # Calling get_rgb(args, kwargs) (line 902)
        get_rgb_call_result_255950 = invoke(stypy.reporting.localization.Localization(__file__, 902, 24), get_rgb_255948, *[], **kwargs_255949)
        
        # Processing the call keyword arguments (line 902)
        kwargs_255951 = {}
        # Getting the type of 'rgb2hex' (line 902)
        rgb2hex_255946 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 902, 16), 'rgb2hex', False)
        # Calling rgb2hex(args, kwargs) (line 902)
        rgb2hex_call_result_255952 = invoke(stypy.reporting.localization.Localization(__file__, 902, 16), rgb2hex_255946, *[get_rgb_call_result_255950], **kwargs_255951)
        
        # Assigning a type to the variable 'color' (line 902)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 902, 8), 'color', rgb2hex_call_result_255952)
        
        # Assigning a Call to a Name (line 903):
        
        # Assigning a Call to a Name (line 903):
        
        # Call to get_size_in_points(...): (line 903)
        # Processing the call keyword arguments (line 903)
        kwargs_255955 = {}
        # Getting the type of 'prop' (line 903)
        prop_255953 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 903, 19), 'prop', False)
        # Obtaining the member 'get_size_in_points' of a type (line 903)
        get_size_in_points_255954 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 903, 19), prop_255953, 'get_size_in_points')
        # Calling get_size_in_points(args, kwargs) (line 903)
        get_size_in_points_call_result_255956 = invoke(stypy.reporting.localization.Localization(__file__, 903, 19), get_size_in_points_255954, *[], **kwargs_255955)
        
        # Assigning a type to the variable 'fontsize' (line 903)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 903, 8), 'fontsize', get_size_in_points_call_result_255956)
        
        # Assigning a Dict to a Name (line 905):
        
        # Assigning a Dict to a Name (line 905):
        
        # Obtaining an instance of the builtin type 'dict' (line 905)
        dict_255957 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 905, 16), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 905)
        
        # Assigning a type to the variable 'style' (line 905)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 905, 8), 'style', dict_255957)
        
        
        # Getting the type of 'color' (line 906)
        color_255958 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 906, 11), 'color')
        unicode_255959 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 906, 20), 'unicode', u'#000000')
        # Applying the binary operator '!=' (line 906)
        result_ne_255960 = python_operator(stypy.reporting.localization.Localization(__file__, 906, 11), '!=', color_255958, unicode_255959)
        
        # Testing the type of an if condition (line 906)
        if_condition_255961 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 906, 8), result_ne_255960)
        # Assigning a type to the variable 'if_condition_255961' (line 906)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 906, 8), 'if_condition_255961', if_condition_255961)
        # SSA begins for if statement (line 906)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Name to a Subscript (line 907):
        
        # Assigning a Name to a Subscript (line 907):
        # Getting the type of 'color' (line 907)
        color_255962 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 907, 28), 'color')
        # Getting the type of 'style' (line 907)
        style_255963 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 907, 12), 'style')
        unicode_255964 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 907, 18), 'unicode', u'fill')
        # Storing an element on a container (line 907)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 907, 12), style_255963, (unicode_255964, color_255962))
        # SSA join for if statement (line 906)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        
        # Call to get_alpha(...): (line 908)
        # Processing the call keyword arguments (line 908)
        kwargs_255967 = {}
        # Getting the type of 'gc' (line 908)
        gc_255965 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 908, 11), 'gc', False)
        # Obtaining the member 'get_alpha' of a type (line 908)
        get_alpha_255966 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 908, 11), gc_255965, 'get_alpha')
        # Calling get_alpha(args, kwargs) (line 908)
        get_alpha_call_result_255968 = invoke(stypy.reporting.localization.Localization(__file__, 908, 11), get_alpha_255966, *[], **kwargs_255967)
        
        float_255969 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 908, 29), 'float')
        # Applying the binary operator '!=' (line 908)
        result_ne_255970 = python_operator(stypy.reporting.localization.Localization(__file__, 908, 11), '!=', get_alpha_call_result_255968, float_255969)
        
        # Testing the type of an if condition (line 908)
        if_condition_255971 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 908, 8), result_ne_255970)
        # Assigning a type to the variable 'if_condition_255971' (line 908)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 908, 8), 'if_condition_255971', if_condition_255971)
        # SSA begins for if statement (line 908)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Subscript (line 909):
        
        # Assigning a Call to a Subscript (line 909):
        
        # Call to short_float_fmt(...): (line 909)
        # Processing the call arguments (line 909)
        
        # Call to get_alpha(...): (line 909)
        # Processing the call keyword arguments (line 909)
        kwargs_255975 = {}
        # Getting the type of 'gc' (line 909)
        gc_255973 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 909, 47), 'gc', False)
        # Obtaining the member 'get_alpha' of a type (line 909)
        get_alpha_255974 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 909, 47), gc_255973, 'get_alpha')
        # Calling get_alpha(args, kwargs) (line 909)
        get_alpha_call_result_255976 = invoke(stypy.reporting.localization.Localization(__file__, 909, 47), get_alpha_255974, *[], **kwargs_255975)
        
        # Processing the call keyword arguments (line 909)
        kwargs_255977 = {}
        # Getting the type of 'short_float_fmt' (line 909)
        short_float_fmt_255972 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 909, 31), 'short_float_fmt', False)
        # Calling short_float_fmt(args, kwargs) (line 909)
        short_float_fmt_call_result_255978 = invoke(stypy.reporting.localization.Localization(__file__, 909, 31), short_float_fmt_255972, *[get_alpha_call_result_255976], **kwargs_255977)
        
        # Getting the type of 'style' (line 909)
        style_255979 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 909, 12), 'style')
        unicode_255980 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 909, 18), 'unicode', u'opacity')
        # Storing an element on a container (line 909)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 909, 12), style_255979, (unicode_255980, short_float_fmt_call_result_255978))
        # SSA join for if statement (line 908)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'ismath' (line 911)
        ismath_255981 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 911, 15), 'ismath')
        # Applying the 'not' unary operator (line 911)
        result_not__255982 = python_operator(stypy.reporting.localization.Localization(__file__, 911, 11), 'not', ismath_255981)
        
        # Testing the type of an if condition (line 911)
        if_condition_255983 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 911, 8), result_not__255982)
        # Assigning a type to the variable 'if_condition_255983' (line 911)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 911, 8), 'if_condition_255983', if_condition_255983)
        # SSA begins for if statement (line 911)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 912):
        
        # Assigning a Call to a Name (line 912):
        
        # Call to _get_font(...): (line 912)
        # Processing the call arguments (line 912)
        # Getting the type of 'prop' (line 912)
        prop_255986 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 912, 39), 'prop', False)
        # Processing the call keyword arguments (line 912)
        kwargs_255987 = {}
        # Getting the type of 'text2path' (line 912)
        text2path_255984 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 912, 19), 'text2path', False)
        # Obtaining the member '_get_font' of a type (line 912)
        _get_font_255985 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 912, 19), text2path_255984, '_get_font')
        # Calling _get_font(args, kwargs) (line 912)
        _get_font_call_result_255988 = invoke(stypy.reporting.localization.Localization(__file__, 912, 19), _get_font_255985, *[prop_255986], **kwargs_255987)
        
        # Assigning a type to the variable 'font' (line 912)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 912, 12), 'font', _get_font_call_result_255988)
        
        # Assigning a Call to a Name (line 913):
        
        # Assigning a Call to a Name (line 913):
        
        # Call to get_glyphs_with_font(...): (line 913)
        # Processing the call arguments (line 913)
        # Getting the type of 'font' (line 914)
        font_255991 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 914, 16), 'font', False)
        # Getting the type of 's' (line 914)
        s_255992 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 914, 22), 's', False)
        # Processing the call keyword arguments (line 913)
        # Getting the type of 'glyph_map' (line 914)
        glyph_map_255993 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 914, 35), 'glyph_map', False)
        keyword_255994 = glyph_map_255993
        # Getting the type of 'True' (line 914)
        True_255995 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 914, 69), 'True', False)
        keyword_255996 = True_255995
        kwargs_255997 = {'glyph_map': keyword_255994, 'return_new_glyphs_only': keyword_255996}
        # Getting the type of 'text2path' (line 913)
        text2path_255989 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 913, 22), 'text2path', False)
        # Obtaining the member 'get_glyphs_with_font' of a type (line 913)
        get_glyphs_with_font_255990 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 913, 22), text2path_255989, 'get_glyphs_with_font')
        # Calling get_glyphs_with_font(args, kwargs) (line 913)
        get_glyphs_with_font_call_result_255998 = invoke(stypy.reporting.localization.Localization(__file__, 913, 22), get_glyphs_with_font_255990, *[font_255991, s_255992], **kwargs_255997)
        
        # Assigning a type to the variable '_glyphs' (line 913)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 913, 12), '_glyphs', get_glyphs_with_font_call_result_255998)
        
        # Assigning a Name to a Tuple (line 915):
        
        # Assigning a Subscript to a Name (line 915):
        
        # Obtaining the type of the subscript
        int_255999 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 915, 12), 'int')
        # Getting the type of '_glyphs' (line 915)
        _glyphs_256000 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 915, 47), '_glyphs')
        # Obtaining the member '__getitem__' of a type (line 915)
        getitem___256001 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 915, 12), _glyphs_256000, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 915)
        subscript_call_result_256002 = invoke(stypy.reporting.localization.Localization(__file__, 915, 12), getitem___256001, int_255999)
        
        # Assigning a type to the variable 'tuple_var_assignment_252822' (line 915)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 915, 12), 'tuple_var_assignment_252822', subscript_call_result_256002)
        
        # Assigning a Subscript to a Name (line 915):
        
        # Obtaining the type of the subscript
        int_256003 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 915, 12), 'int')
        # Getting the type of '_glyphs' (line 915)
        _glyphs_256004 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 915, 47), '_glyphs')
        # Obtaining the member '__getitem__' of a type (line 915)
        getitem___256005 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 915, 12), _glyphs_256004, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 915)
        subscript_call_result_256006 = invoke(stypy.reporting.localization.Localization(__file__, 915, 12), getitem___256005, int_256003)
        
        # Assigning a type to the variable 'tuple_var_assignment_252823' (line 915)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 915, 12), 'tuple_var_assignment_252823', subscript_call_result_256006)
        
        # Assigning a Subscript to a Name (line 915):
        
        # Obtaining the type of the subscript
        int_256007 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 915, 12), 'int')
        # Getting the type of '_glyphs' (line 915)
        _glyphs_256008 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 915, 47), '_glyphs')
        # Obtaining the member '__getitem__' of a type (line 915)
        getitem___256009 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 915, 12), _glyphs_256008, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 915)
        subscript_call_result_256010 = invoke(stypy.reporting.localization.Localization(__file__, 915, 12), getitem___256009, int_256007)
        
        # Assigning a type to the variable 'tuple_var_assignment_252824' (line 915)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 915, 12), 'tuple_var_assignment_252824', subscript_call_result_256010)
        
        # Assigning a Name to a Name (line 915):
        # Getting the type of 'tuple_var_assignment_252822' (line 915)
        tuple_var_assignment_252822_256011 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 915, 12), 'tuple_var_assignment_252822')
        # Assigning a type to the variable 'glyph_info' (line 915)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 915, 12), 'glyph_info', tuple_var_assignment_252822_256011)
        
        # Assigning a Name to a Name (line 915):
        # Getting the type of 'tuple_var_assignment_252823' (line 915)
        tuple_var_assignment_252823_256012 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 915, 12), 'tuple_var_assignment_252823')
        # Assigning a type to the variable 'glyph_map_new' (line 915)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 915, 24), 'glyph_map_new', tuple_var_assignment_252823_256012)
        
        # Assigning a Name to a Name (line 915):
        # Getting the type of 'tuple_var_assignment_252824' (line 915)
        tuple_var_assignment_252824_256013 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 915, 12), 'tuple_var_assignment_252824')
        # Assigning a type to the variable 'rects' (line 915)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 915, 39), 'rects', tuple_var_assignment_252824_256013)
        
        # Getting the type of 'glyph_map_new' (line 917)
        glyph_map_new_256014 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 917, 15), 'glyph_map_new')
        # Testing the type of an if condition (line 917)
        if_condition_256015 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 917, 12), glyph_map_new_256014)
        # Assigning a type to the variable 'if_condition_256015' (line 917)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 917, 12), 'if_condition_256015', if_condition_256015)
        # SSA begins for if statement (line 917)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to start(...): (line 918)
        # Processing the call arguments (line 918)
        unicode_256018 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 918, 29), 'unicode', u'defs')
        # Processing the call keyword arguments (line 918)
        kwargs_256019 = {}
        # Getting the type of 'writer' (line 918)
        writer_256016 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 918, 16), 'writer', False)
        # Obtaining the member 'start' of a type (line 918)
        start_256017 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 918, 16), writer_256016, 'start')
        # Calling start(args, kwargs) (line 918)
        start_call_result_256020 = invoke(stypy.reporting.localization.Localization(__file__, 918, 16), start_256017, *[unicode_256018], **kwargs_256019)
        
        
        
        # Call to iteritems(...): (line 919)
        # Processing the call arguments (line 919)
        # Getting the type of 'glyph_map_new' (line 919)
        glyph_map_new_256023 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 919, 57), 'glyph_map_new', False)
        # Processing the call keyword arguments (line 919)
        kwargs_256024 = {}
        # Getting the type of 'six' (line 919)
        six_256021 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 919, 43), 'six', False)
        # Obtaining the member 'iteritems' of a type (line 919)
        iteritems_256022 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 919, 43), six_256021, 'iteritems')
        # Calling iteritems(args, kwargs) (line 919)
        iteritems_call_result_256025 = invoke(stypy.reporting.localization.Localization(__file__, 919, 43), iteritems_256022, *[glyph_map_new_256023], **kwargs_256024)
        
        # Testing the type of a for loop iterable (line 919)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 919, 16), iteritems_call_result_256025)
        # Getting the type of the for loop variable (line 919)
        for_loop_var_256026 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 919, 16), iteritems_call_result_256025)
        # Assigning a type to the variable 'char_id' (line 919)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 919, 16), 'char_id', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 919, 16), for_loop_var_256026))
        # Assigning a type to the variable 'glyph_path' (line 919)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 919, 16), 'glyph_path', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 919, 16), for_loop_var_256026))
        # SSA begins for a for statement (line 919)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 920):
        
        # Assigning a Call to a Name (line 920):
        
        # Call to Path(...): (line 920)
        # Getting the type of 'glyph_path' (line 920)
        glyph_path_256028 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 920, 33), 'glyph_path', False)
        # Processing the call keyword arguments (line 920)
        kwargs_256029 = {}
        # Getting the type of 'Path' (line 920)
        Path_256027 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 920, 27), 'Path', False)
        # Calling Path(args, kwargs) (line 920)
        Path_call_result_256030 = invoke(stypy.reporting.localization.Localization(__file__, 920, 27), Path_256027, *[glyph_path_256028], **kwargs_256029)
        
        # Assigning a type to the variable 'path' (line 920)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 920, 20), 'path', Path_call_result_256030)
        
        # Assigning a Call to a Name (line 921):
        
        # Assigning a Call to a Name (line 921):
        
        # Call to _convert_path(...): (line 921)
        # Processing the call arguments (line 921)
        # Getting the type of 'path' (line 921)
        path_256033 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 921, 51), 'path', False)
        # Processing the call keyword arguments (line 921)
        # Getting the type of 'False' (line 921)
        False_256034 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 921, 66), 'False', False)
        keyword_256035 = False_256034
        kwargs_256036 = {'simplify': keyword_256035}
        # Getting the type of 'self' (line 921)
        self_256031 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 921, 32), 'self', False)
        # Obtaining the member '_convert_path' of a type (line 921)
        _convert_path_256032 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 921, 32), self_256031, '_convert_path')
        # Calling _convert_path(args, kwargs) (line 921)
        _convert_path_call_result_256037 = invoke(stypy.reporting.localization.Localization(__file__, 921, 32), _convert_path_256032, *[path_256033], **kwargs_256036)
        
        # Assigning a type to the variable 'path_data' (line 921)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 921, 20), 'path_data', _convert_path_call_result_256037)
        
        # Call to element(...): (line 922)
        # Processing the call arguments (line 922)
        unicode_256040 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 922, 35), 'unicode', u'path')
        # Processing the call keyword arguments (line 922)
        # Getting the type of 'char_id' (line 922)
        char_id_256041 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 922, 46), 'char_id', False)
        keyword_256042 = char_id_256041
        # Getting the type of 'path_data' (line 922)
        path_data_256043 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 922, 57), 'path_data', False)
        keyword_256044 = path_data_256043
        kwargs_256045 = {'id': keyword_256042, 'd': keyword_256044}
        # Getting the type of 'writer' (line 922)
        writer_256038 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 922, 20), 'writer', False)
        # Obtaining the member 'element' of a type (line 922)
        element_256039 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 922, 20), writer_256038, 'element')
        # Calling element(args, kwargs) (line 922)
        element_call_result_256046 = invoke(stypy.reporting.localization.Localization(__file__, 922, 20), element_256039, *[unicode_256040], **kwargs_256045)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to end(...): (line 923)
        # Processing the call arguments (line 923)
        unicode_256049 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 923, 27), 'unicode', u'defs')
        # Processing the call keyword arguments (line 923)
        kwargs_256050 = {}
        # Getting the type of 'writer' (line 923)
        writer_256047 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 923, 16), 'writer', False)
        # Obtaining the member 'end' of a type (line 923)
        end_256048 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 923, 16), writer_256047, 'end')
        # Calling end(args, kwargs) (line 923)
        end_call_result_256051 = invoke(stypy.reporting.localization.Localization(__file__, 923, 16), end_256048, *[unicode_256049], **kwargs_256050)
        
        
        # Call to update(...): (line 925)
        # Processing the call arguments (line 925)
        # Getting the type of 'glyph_map_new' (line 925)
        glyph_map_new_256054 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 925, 33), 'glyph_map_new', False)
        # Processing the call keyword arguments (line 925)
        kwargs_256055 = {}
        # Getting the type of 'glyph_map' (line 925)
        glyph_map_256052 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 925, 16), 'glyph_map', False)
        # Obtaining the member 'update' of a type (line 925)
        update_256053 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 925, 16), glyph_map_256052, 'update')
        # Calling update(args, kwargs) (line 925)
        update_call_result_256056 = invoke(stypy.reporting.localization.Localization(__file__, 925, 16), update_256053, *[glyph_map_new_256054], **kwargs_256055)
        
        # SSA join for if statement (line 917)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Dict to a Name (line 927):
        
        # Assigning a Dict to a Name (line 927):
        
        # Obtaining an instance of the builtin type 'dict' (line 927)
        dict_256057 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 927, 21), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 927)
        
        # Assigning a type to the variable 'attrib' (line 927)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 927, 12), 'attrib', dict_256057)
        
        # Assigning a Call to a Subscript (line 928):
        
        # Assigning a Call to a Subscript (line 928):
        
        # Call to generate_css(...): (line 928)
        # Processing the call arguments (line 928)
        # Getting the type of 'style' (line 928)
        style_256059 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 928, 43), 'style', False)
        # Processing the call keyword arguments (line 928)
        kwargs_256060 = {}
        # Getting the type of 'generate_css' (line 928)
        generate_css_256058 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 928, 30), 'generate_css', False)
        # Calling generate_css(args, kwargs) (line 928)
        generate_css_call_result_256061 = invoke(stypy.reporting.localization.Localization(__file__, 928, 30), generate_css_256058, *[style_256059], **kwargs_256060)
        
        # Getting the type of 'attrib' (line 928)
        attrib_256062 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 928, 12), 'attrib')
        unicode_256063 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 928, 19), 'unicode', u'style')
        # Storing an element on a container (line 928)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 928, 12), attrib_256062, (unicode_256063, generate_css_call_result_256061))
        
        # Assigning a BinOp to a Name (line 929):
        
        # Assigning a BinOp to a Name (line 929):
        # Getting the type of 'fontsize' (line 929)
        fontsize_256064 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 929, 25), 'fontsize')
        # Getting the type of 'text2path' (line 929)
        text2path_256065 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 929, 36), 'text2path')
        # Obtaining the member 'FONT_SCALE' of a type (line 929)
        FONT_SCALE_256066 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 929, 36), text2path_256065, 'FONT_SCALE')
        # Applying the binary operator 'div' (line 929)
        result_div_256067 = python_operator(stypy.reporting.localization.Localization(__file__, 929, 25), 'div', fontsize_256064, FONT_SCALE_256066)
        
        # Assigning a type to the variable 'font_scale' (line 929)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 929, 12), 'font_scale', result_div_256067)
        
        # Assigning a Call to a Subscript (line 930):
        
        # Assigning a Call to a Subscript (line 930):
        
        # Call to generate_transform(...): (line 930)
        # Processing the call arguments (line 930)
        
        # Obtaining an instance of the builtin type 'list' (line 930)
        list_256069 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 930, 53), 'list')
        # Adding type elements to the builtin type 'list' instance (line 930)
        # Adding element type (line 930)
        
        # Obtaining an instance of the builtin type 'tuple' (line 931)
        tuple_256070 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 931, 17), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 931)
        # Adding element type (line 931)
        unicode_256071 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 931, 17), 'unicode', u'translate')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 931, 17), tuple_256070, unicode_256071)
        # Adding element type (line 931)
        
        # Obtaining an instance of the builtin type 'tuple' (line 931)
        tuple_256072 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 931, 31), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 931)
        # Adding element type (line 931)
        # Getting the type of 'x' (line 931)
        x_256073 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 931, 31), 'x', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 931, 31), tuple_256072, x_256073)
        # Adding element type (line 931)
        # Getting the type of 'y' (line 931)
        y_256074 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 931, 34), 'y', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 931, 31), tuple_256072, y_256074)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 931, 17), tuple_256070, tuple_256072)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 930, 53), list_256069, tuple_256070)
        # Adding element type (line 930)
        
        # Obtaining an instance of the builtin type 'tuple' (line 932)
        tuple_256075 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 932, 17), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 932)
        # Adding element type (line 932)
        unicode_256076 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 932, 17), 'unicode', u'rotate')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 932, 17), tuple_256075, unicode_256076)
        # Adding element type (line 932)
        
        # Obtaining an instance of the builtin type 'tuple' (line 932)
        tuple_256077 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 932, 28), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 932)
        # Adding element type (line 932)
        
        # Getting the type of 'angle' (line 932)
        angle_256078 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 932, 29), 'angle', False)
        # Applying the 'usub' unary operator (line 932)
        result___neg___256079 = python_operator(stypy.reporting.localization.Localization(__file__, 932, 28), 'usub', angle_256078)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 932, 28), tuple_256077, result___neg___256079)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 932, 17), tuple_256075, tuple_256077)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 930, 53), list_256069, tuple_256075)
        # Adding element type (line 930)
        
        # Obtaining an instance of the builtin type 'tuple' (line 933)
        tuple_256080 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 933, 17), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 933)
        # Adding element type (line 933)
        unicode_256081 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 933, 17), 'unicode', u'scale')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 933, 17), tuple_256080, unicode_256081)
        # Adding element type (line 933)
        
        # Obtaining an instance of the builtin type 'tuple' (line 933)
        tuple_256082 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 933, 27), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 933)
        # Adding element type (line 933)
        # Getting the type of 'font_scale' (line 933)
        font_scale_256083 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 933, 27), 'font_scale', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 933, 27), tuple_256082, font_scale_256083)
        # Adding element type (line 933)
        
        # Getting the type of 'font_scale' (line 933)
        font_scale_256084 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 933, 40), 'font_scale', False)
        # Applying the 'usub' unary operator (line 933)
        result___neg___256085 = python_operator(stypy.reporting.localization.Localization(__file__, 933, 39), 'usub', font_scale_256084)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 933, 27), tuple_256082, result___neg___256085)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 933, 17), tuple_256080, tuple_256082)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 930, 53), list_256069, tuple_256080)
        
        # Processing the call keyword arguments (line 930)
        kwargs_256086 = {}
        # Getting the type of 'generate_transform' (line 930)
        generate_transform_256068 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 930, 34), 'generate_transform', False)
        # Calling generate_transform(args, kwargs) (line 930)
        generate_transform_call_result_256087 = invoke(stypy.reporting.localization.Localization(__file__, 930, 34), generate_transform_256068, *[list_256069], **kwargs_256086)
        
        # Getting the type of 'attrib' (line 930)
        attrib_256088 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 930, 12), 'attrib')
        unicode_256089 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 930, 19), 'unicode', u'transform')
        # Storing an element on a container (line 930)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 930, 12), attrib_256088, (unicode_256089, generate_transform_call_result_256087))
        
        # Call to start(...): (line 935)
        # Processing the call arguments (line 935)
        unicode_256092 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 935, 25), 'unicode', u'g')
        # Processing the call keyword arguments (line 935)
        # Getting the type of 'attrib' (line 935)
        attrib_256093 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 935, 37), 'attrib', False)
        keyword_256094 = attrib_256093
        kwargs_256095 = {'attrib': keyword_256094}
        # Getting the type of 'writer' (line 935)
        writer_256090 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 935, 12), 'writer', False)
        # Obtaining the member 'start' of a type (line 935)
        start_256091 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 935, 12), writer_256090, 'start')
        # Calling start(args, kwargs) (line 935)
        start_call_result_256096 = invoke(stypy.reporting.localization.Localization(__file__, 935, 12), start_256091, *[unicode_256092], **kwargs_256095)
        
        
        # Getting the type of 'glyph_info' (line 936)
        glyph_info_256097 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 936, 57), 'glyph_info')
        # Testing the type of a for loop iterable (line 936)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 936, 12), glyph_info_256097)
        # Getting the type of the for loop variable (line 936)
        for_loop_var_256098 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 936, 12), glyph_info_256097)
        # Assigning a type to the variable 'glyph_id' (line 936)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 936, 12), 'glyph_id', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 936, 12), for_loop_var_256098))
        # Assigning a type to the variable 'xposition' (line 936)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 936, 12), 'xposition', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 936, 12), for_loop_var_256098))
        # Assigning a type to the variable 'yposition' (line 936)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 936, 12), 'yposition', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 936, 12), for_loop_var_256098))
        # Assigning a type to the variable 'scale' (line 936)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 936, 12), 'scale', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 936, 12), for_loop_var_256098))
        # SSA begins for a for statement (line 936)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Dict to a Name (line 937):
        
        # Assigning a Dict to a Name (line 937):
        
        # Obtaining an instance of the builtin type 'dict' (line 937)
        dict_256099 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 937, 23), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 937)
        # Adding element type (key, value) (line 937)
        unicode_256100 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 937, 24), 'unicode', u'xlink:href')
        unicode_256101 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 937, 38), 'unicode', u'#%s')
        # Getting the type of 'glyph_id' (line 937)
        glyph_id_256102 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 937, 46), 'glyph_id')
        # Applying the binary operator '%' (line 937)
        result_mod_256103 = python_operator(stypy.reporting.localization.Localization(__file__, 937, 38), '%', unicode_256101, glyph_id_256102)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 937, 23), dict_256099, (unicode_256100, result_mod_256103))
        
        # Assigning a type to the variable 'attrib' (line 937)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 937, 16), 'attrib', dict_256099)
        
        
        # Getting the type of 'xposition' (line 938)
        xposition_256104 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 938, 19), 'xposition')
        float_256105 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 938, 32), 'float')
        # Applying the binary operator '!=' (line 938)
        result_ne_256106 = python_operator(stypy.reporting.localization.Localization(__file__, 938, 19), '!=', xposition_256104, float_256105)
        
        # Testing the type of an if condition (line 938)
        if_condition_256107 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 938, 16), result_ne_256106)
        # Assigning a type to the variable 'if_condition_256107' (line 938)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 938, 16), 'if_condition_256107', if_condition_256107)
        # SSA begins for if statement (line 938)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Subscript (line 939):
        
        # Assigning a Call to a Subscript (line 939):
        
        # Call to short_float_fmt(...): (line 939)
        # Processing the call arguments (line 939)
        # Getting the type of 'xposition' (line 939)
        xposition_256109 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 939, 50), 'xposition', False)
        # Processing the call keyword arguments (line 939)
        kwargs_256110 = {}
        # Getting the type of 'short_float_fmt' (line 939)
        short_float_fmt_256108 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 939, 34), 'short_float_fmt', False)
        # Calling short_float_fmt(args, kwargs) (line 939)
        short_float_fmt_call_result_256111 = invoke(stypy.reporting.localization.Localization(__file__, 939, 34), short_float_fmt_256108, *[xposition_256109], **kwargs_256110)
        
        # Getting the type of 'attrib' (line 939)
        attrib_256112 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 939, 20), 'attrib')
        unicode_256113 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 939, 27), 'unicode', u'x')
        # Storing an element on a container (line 939)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 939, 20), attrib_256112, (unicode_256113, short_float_fmt_call_result_256111))
        # SSA join for if statement (line 938)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'yposition' (line 940)
        yposition_256114 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 940, 19), 'yposition')
        float_256115 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 940, 32), 'float')
        # Applying the binary operator '!=' (line 940)
        result_ne_256116 = python_operator(stypy.reporting.localization.Localization(__file__, 940, 19), '!=', yposition_256114, float_256115)
        
        # Testing the type of an if condition (line 940)
        if_condition_256117 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 940, 16), result_ne_256116)
        # Assigning a type to the variable 'if_condition_256117' (line 940)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 940, 16), 'if_condition_256117', if_condition_256117)
        # SSA begins for if statement (line 940)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Subscript (line 941):
        
        # Assigning a Call to a Subscript (line 941):
        
        # Call to short_float_fmt(...): (line 941)
        # Processing the call arguments (line 941)
        # Getting the type of 'yposition' (line 941)
        yposition_256119 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 941, 50), 'yposition', False)
        # Processing the call keyword arguments (line 941)
        kwargs_256120 = {}
        # Getting the type of 'short_float_fmt' (line 941)
        short_float_fmt_256118 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 941, 34), 'short_float_fmt', False)
        # Calling short_float_fmt(args, kwargs) (line 941)
        short_float_fmt_call_result_256121 = invoke(stypy.reporting.localization.Localization(__file__, 941, 34), short_float_fmt_256118, *[yposition_256119], **kwargs_256120)
        
        # Getting the type of 'attrib' (line 941)
        attrib_256122 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 941, 20), 'attrib')
        unicode_256123 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 941, 27), 'unicode', u'y')
        # Storing an element on a container (line 941)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 941, 20), attrib_256122, (unicode_256123, short_float_fmt_call_result_256121))
        # SSA join for if statement (line 940)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to element(...): (line 942)
        # Processing the call arguments (line 942)
        unicode_256126 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 943, 20), 'unicode', u'use')
        # Processing the call keyword arguments (line 942)
        # Getting the type of 'attrib' (line 944)
        attrib_256127 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 944, 27), 'attrib', False)
        keyword_256128 = attrib_256127
        kwargs_256129 = {'attrib': keyword_256128}
        # Getting the type of 'writer' (line 942)
        writer_256124 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 942, 16), 'writer', False)
        # Obtaining the member 'element' of a type (line 942)
        element_256125 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 942, 16), writer_256124, 'element')
        # Calling element(args, kwargs) (line 942)
        element_call_result_256130 = invoke(stypy.reporting.localization.Localization(__file__, 942, 16), element_256125, *[unicode_256126], **kwargs_256129)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to end(...): (line 946)
        # Processing the call arguments (line 946)
        unicode_256133 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 946, 23), 'unicode', u'g')
        # Processing the call keyword arguments (line 946)
        kwargs_256134 = {}
        # Getting the type of 'writer' (line 946)
        writer_256131 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 946, 12), 'writer', False)
        # Obtaining the member 'end' of a type (line 946)
        end_256132 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 946, 12), writer_256131, 'end')
        # Calling end(args, kwargs) (line 946)
        end_call_result_256135 = invoke(stypy.reporting.localization.Localization(__file__, 946, 12), end_256132, *[unicode_256133], **kwargs_256134)
        
        # SSA branch for the else part of an if statement (line 911)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'ismath' (line 948)
        ismath_256136 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 948, 15), 'ismath')
        unicode_256137 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 948, 25), 'unicode', u'TeX')
        # Applying the binary operator '==' (line 948)
        result_eq_256138 = python_operator(stypy.reporting.localization.Localization(__file__, 948, 15), '==', ismath_256136, unicode_256137)
        
        # Testing the type of an if condition (line 948)
        if_condition_256139 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 948, 12), result_eq_256138)
        # Assigning a type to the variable 'if_condition_256139' (line 948)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 948, 12), 'if_condition_256139', if_condition_256139)
        # SSA begins for if statement (line 948)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 949):
        
        # Assigning a Call to a Name (line 949):
        
        # Call to get_glyphs_tex(...): (line 949)
        # Processing the call arguments (line 949)
        # Getting the type of 'prop' (line 949)
        prop_256142 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 949, 51), 'prop', False)
        # Getting the type of 's' (line 949)
        s_256143 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 949, 57), 's', False)
        # Processing the call keyword arguments (line 949)
        # Getting the type of 'glyph_map' (line 949)
        glyph_map_256144 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 949, 70), 'glyph_map', False)
        keyword_256145 = glyph_map_256144
        # Getting the type of 'True' (line 950)
        True_256146 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 950, 74), 'True', False)
        keyword_256147 = True_256146
        kwargs_256148 = {'glyph_map': keyword_256145, 'return_new_glyphs_only': keyword_256147}
        # Getting the type of 'text2path' (line 949)
        text2path_256140 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 949, 26), 'text2path', False)
        # Obtaining the member 'get_glyphs_tex' of a type (line 949)
        get_glyphs_tex_256141 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 949, 26), text2path_256140, 'get_glyphs_tex')
        # Calling get_glyphs_tex(args, kwargs) (line 949)
        get_glyphs_tex_call_result_256149 = invoke(stypy.reporting.localization.Localization(__file__, 949, 26), get_glyphs_tex_256141, *[prop_256142, s_256143], **kwargs_256148)
        
        # Assigning a type to the variable '_glyphs' (line 949)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 949, 16), '_glyphs', get_glyphs_tex_call_result_256149)
        # SSA branch for the else part of an if statement (line 948)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Call to a Name (line 952):
        
        # Assigning a Call to a Name (line 952):
        
        # Call to get_glyphs_mathtext(...): (line 952)
        # Processing the call arguments (line 952)
        # Getting the type of 'prop' (line 952)
        prop_256152 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 952, 56), 'prop', False)
        # Getting the type of 's' (line 952)
        s_256153 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 952, 62), 's', False)
        # Processing the call keyword arguments (line 952)
        # Getting the type of 'glyph_map' (line 952)
        glyph_map_256154 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 952, 75), 'glyph_map', False)
        keyword_256155 = glyph_map_256154
        # Getting the type of 'True' (line 953)
        True_256156 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 953, 79), 'True', False)
        keyword_256157 = True_256156
        kwargs_256158 = {'glyph_map': keyword_256155, 'return_new_glyphs_only': keyword_256157}
        # Getting the type of 'text2path' (line 952)
        text2path_256150 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 952, 26), 'text2path', False)
        # Obtaining the member 'get_glyphs_mathtext' of a type (line 952)
        get_glyphs_mathtext_256151 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 952, 26), text2path_256150, 'get_glyphs_mathtext')
        # Calling get_glyphs_mathtext(args, kwargs) (line 952)
        get_glyphs_mathtext_call_result_256159 = invoke(stypy.reporting.localization.Localization(__file__, 952, 26), get_glyphs_mathtext_256151, *[prop_256152, s_256153], **kwargs_256158)
        
        # Assigning a type to the variable '_glyphs' (line 952)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 952, 16), '_glyphs', get_glyphs_mathtext_call_result_256159)
        # SSA join for if statement (line 948)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Name to a Tuple (line 955):
        
        # Assigning a Subscript to a Name (line 955):
        
        # Obtaining the type of the subscript
        int_256160 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 955, 12), 'int')
        # Getting the type of '_glyphs' (line 955)
        _glyphs_256161 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 955, 47), '_glyphs')
        # Obtaining the member '__getitem__' of a type (line 955)
        getitem___256162 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 955, 12), _glyphs_256161, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 955)
        subscript_call_result_256163 = invoke(stypy.reporting.localization.Localization(__file__, 955, 12), getitem___256162, int_256160)
        
        # Assigning a type to the variable 'tuple_var_assignment_252825' (line 955)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 955, 12), 'tuple_var_assignment_252825', subscript_call_result_256163)
        
        # Assigning a Subscript to a Name (line 955):
        
        # Obtaining the type of the subscript
        int_256164 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 955, 12), 'int')
        # Getting the type of '_glyphs' (line 955)
        _glyphs_256165 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 955, 47), '_glyphs')
        # Obtaining the member '__getitem__' of a type (line 955)
        getitem___256166 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 955, 12), _glyphs_256165, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 955)
        subscript_call_result_256167 = invoke(stypy.reporting.localization.Localization(__file__, 955, 12), getitem___256166, int_256164)
        
        # Assigning a type to the variable 'tuple_var_assignment_252826' (line 955)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 955, 12), 'tuple_var_assignment_252826', subscript_call_result_256167)
        
        # Assigning a Subscript to a Name (line 955):
        
        # Obtaining the type of the subscript
        int_256168 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 955, 12), 'int')
        # Getting the type of '_glyphs' (line 955)
        _glyphs_256169 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 955, 47), '_glyphs')
        # Obtaining the member '__getitem__' of a type (line 955)
        getitem___256170 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 955, 12), _glyphs_256169, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 955)
        subscript_call_result_256171 = invoke(stypy.reporting.localization.Localization(__file__, 955, 12), getitem___256170, int_256168)
        
        # Assigning a type to the variable 'tuple_var_assignment_252827' (line 955)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 955, 12), 'tuple_var_assignment_252827', subscript_call_result_256171)
        
        # Assigning a Name to a Name (line 955):
        # Getting the type of 'tuple_var_assignment_252825' (line 955)
        tuple_var_assignment_252825_256172 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 955, 12), 'tuple_var_assignment_252825')
        # Assigning a type to the variable 'glyph_info' (line 955)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 955, 12), 'glyph_info', tuple_var_assignment_252825_256172)
        
        # Assigning a Name to a Name (line 955):
        # Getting the type of 'tuple_var_assignment_252826' (line 955)
        tuple_var_assignment_252826_256173 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 955, 12), 'tuple_var_assignment_252826')
        # Assigning a type to the variable 'glyph_map_new' (line 955)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 955, 24), 'glyph_map_new', tuple_var_assignment_252826_256173)
        
        # Assigning a Name to a Name (line 955):
        # Getting the type of 'tuple_var_assignment_252827' (line 955)
        tuple_var_assignment_252827_256174 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 955, 12), 'tuple_var_assignment_252827')
        # Assigning a type to the variable 'rects' (line 955)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 955, 39), 'rects', tuple_var_assignment_252827_256174)
        
        # Getting the type of 'glyph_map_new' (line 960)
        glyph_map_new_256175 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 960, 15), 'glyph_map_new')
        # Testing the type of an if condition (line 960)
        if_condition_256176 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 960, 12), glyph_map_new_256175)
        # Assigning a type to the variable 'if_condition_256176' (line 960)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 960, 12), 'if_condition_256176', if_condition_256176)
        # SSA begins for if statement (line 960)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to start(...): (line 961)
        # Processing the call arguments (line 961)
        unicode_256179 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 961, 29), 'unicode', u'defs')
        # Processing the call keyword arguments (line 961)
        kwargs_256180 = {}
        # Getting the type of 'writer' (line 961)
        writer_256177 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 961, 16), 'writer', False)
        # Obtaining the member 'start' of a type (line 961)
        start_256178 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 961, 16), writer_256177, 'start')
        # Calling start(args, kwargs) (line 961)
        start_call_result_256181 = invoke(stypy.reporting.localization.Localization(__file__, 961, 16), start_256178, *[unicode_256179], **kwargs_256180)
        
        
        
        # Call to iteritems(...): (line 962)
        # Processing the call arguments (line 962)
        # Getting the type of 'glyph_map_new' (line 962)
        glyph_map_new_256184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 962, 57), 'glyph_map_new', False)
        # Processing the call keyword arguments (line 962)
        kwargs_256185 = {}
        # Getting the type of 'six' (line 962)
        six_256182 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 962, 43), 'six', False)
        # Obtaining the member 'iteritems' of a type (line 962)
        iteritems_256183 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 962, 43), six_256182, 'iteritems')
        # Calling iteritems(args, kwargs) (line 962)
        iteritems_call_result_256186 = invoke(stypy.reporting.localization.Localization(__file__, 962, 43), iteritems_256183, *[glyph_map_new_256184], **kwargs_256185)
        
        # Testing the type of a for loop iterable (line 962)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 962, 16), iteritems_call_result_256186)
        # Getting the type of the for loop variable (line 962)
        for_loop_var_256187 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 962, 16), iteritems_call_result_256186)
        # Assigning a type to the variable 'char_id' (line 962)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 962, 16), 'char_id', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 962, 16), for_loop_var_256187))
        # Assigning a type to the variable 'glyph_path' (line 962)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 962, 16), 'glyph_path', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 962, 16), for_loop_var_256187))
        # SSA begins for a for statement (line 962)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 963):
        
        # Assigning a Call to a Name (line 963):
        
        # Call to _adjust_char_id(...): (line 963)
        # Processing the call arguments (line 963)
        # Getting the type of 'char_id' (line 963)
        char_id_256190 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 963, 51), 'char_id', False)
        # Processing the call keyword arguments (line 963)
        kwargs_256191 = {}
        # Getting the type of 'self' (line 963)
        self_256188 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 963, 30), 'self', False)
        # Obtaining the member '_adjust_char_id' of a type (line 963)
        _adjust_char_id_256189 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 963, 30), self_256188, '_adjust_char_id')
        # Calling _adjust_char_id(args, kwargs) (line 963)
        _adjust_char_id_call_result_256192 = invoke(stypy.reporting.localization.Localization(__file__, 963, 30), _adjust_char_id_256189, *[char_id_256190], **kwargs_256191)
        
        # Assigning a type to the variable 'char_id' (line 963)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 963, 20), 'char_id', _adjust_char_id_call_result_256192)
        
        
        
        # Call to len(...): (line 965)
        # Processing the call arguments (line 965)
        
        # Obtaining the type of the subscript
        int_256194 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 965, 42), 'int')
        # Getting the type of 'glyph_path' (line 965)
        glyph_path_256195 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 965, 31), 'glyph_path', False)
        # Obtaining the member '__getitem__' of a type (line 965)
        getitem___256196 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 965, 31), glyph_path_256195, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 965)
        subscript_call_result_256197 = invoke(stypy.reporting.localization.Localization(__file__, 965, 31), getitem___256196, int_256194)
        
        # Processing the call keyword arguments (line 965)
        kwargs_256198 = {}
        # Getting the type of 'len' (line 965)
        len_256193 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 965, 27), 'len', False)
        # Calling len(args, kwargs) (line 965)
        len_call_result_256199 = invoke(stypy.reporting.localization.Localization(__file__, 965, 27), len_256193, *[subscript_call_result_256197], **kwargs_256198)
        
        # Applying the 'not' unary operator (line 965)
        result_not__256200 = python_operator(stypy.reporting.localization.Localization(__file__, 965, 23), 'not', len_call_result_256199)
        
        # Testing the type of an if condition (line 965)
        if_condition_256201 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 965, 20), result_not__256200)
        # Assigning a type to the variable 'if_condition_256201' (line 965)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 965, 20), 'if_condition_256201', if_condition_256201)
        # SSA begins for if statement (line 965)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Str to a Name (line 966):
        
        # Assigning a Str to a Name (line 966):
        unicode_256202 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 966, 36), 'unicode', u'')
        # Assigning a type to the variable 'path_data' (line 966)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 966, 24), 'path_data', unicode_256202)
        # SSA branch for the else part of an if statement (line 965)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Call to a Name (line 968):
        
        # Assigning a Call to a Name (line 968):
        
        # Call to Path(...): (line 968)
        # Getting the type of 'glyph_path' (line 968)
        glyph_path_256204 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 968, 37), 'glyph_path', False)
        # Processing the call keyword arguments (line 968)
        kwargs_256205 = {}
        # Getting the type of 'Path' (line 968)
        Path_256203 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 968, 31), 'Path', False)
        # Calling Path(args, kwargs) (line 968)
        Path_call_result_256206 = invoke(stypy.reporting.localization.Localization(__file__, 968, 31), Path_256203, *[glyph_path_256204], **kwargs_256205)
        
        # Assigning a type to the variable 'path' (line 968)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 968, 24), 'path', Path_call_result_256206)
        
        # Assigning a Call to a Name (line 969):
        
        # Assigning a Call to a Name (line 969):
        
        # Call to _convert_path(...): (line 969)
        # Processing the call arguments (line 969)
        # Getting the type of 'path' (line 969)
        path_256209 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 969, 55), 'path', False)
        # Processing the call keyword arguments (line 969)
        # Getting the type of 'False' (line 969)
        False_256210 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 969, 70), 'False', False)
        keyword_256211 = False_256210
        kwargs_256212 = {'simplify': keyword_256211}
        # Getting the type of 'self' (line 969)
        self_256207 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 969, 36), 'self', False)
        # Obtaining the member '_convert_path' of a type (line 969)
        _convert_path_256208 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 969, 36), self_256207, '_convert_path')
        # Calling _convert_path(args, kwargs) (line 969)
        _convert_path_call_result_256213 = invoke(stypy.reporting.localization.Localization(__file__, 969, 36), _convert_path_256208, *[path_256209], **kwargs_256212)
        
        # Assigning a type to the variable 'path_data' (line 969)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 969, 24), 'path_data', _convert_path_call_result_256213)
        # SSA join for if statement (line 965)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to element(...): (line 970)
        # Processing the call arguments (line 970)
        unicode_256216 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 970, 35), 'unicode', u'path')
        # Processing the call keyword arguments (line 970)
        # Getting the type of 'char_id' (line 970)
        char_id_256217 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 970, 46), 'char_id', False)
        keyword_256218 = char_id_256217
        # Getting the type of 'path_data' (line 970)
        path_data_256219 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 970, 57), 'path_data', False)
        keyword_256220 = path_data_256219
        kwargs_256221 = {'id': keyword_256218, 'd': keyword_256220}
        # Getting the type of 'writer' (line 970)
        writer_256214 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 970, 20), 'writer', False)
        # Obtaining the member 'element' of a type (line 970)
        element_256215 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 970, 20), writer_256214, 'element')
        # Calling element(args, kwargs) (line 970)
        element_call_result_256222 = invoke(stypy.reporting.localization.Localization(__file__, 970, 20), element_256215, *[unicode_256216], **kwargs_256221)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to end(...): (line 971)
        # Processing the call arguments (line 971)
        unicode_256225 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 971, 27), 'unicode', u'defs')
        # Processing the call keyword arguments (line 971)
        kwargs_256226 = {}
        # Getting the type of 'writer' (line 971)
        writer_256223 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 971, 16), 'writer', False)
        # Obtaining the member 'end' of a type (line 971)
        end_256224 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 971, 16), writer_256223, 'end')
        # Calling end(args, kwargs) (line 971)
        end_call_result_256227 = invoke(stypy.reporting.localization.Localization(__file__, 971, 16), end_256224, *[unicode_256225], **kwargs_256226)
        
        
        # Call to update(...): (line 973)
        # Processing the call arguments (line 973)
        # Getting the type of 'glyph_map_new' (line 973)
        glyph_map_new_256230 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 973, 33), 'glyph_map_new', False)
        # Processing the call keyword arguments (line 973)
        kwargs_256231 = {}
        # Getting the type of 'glyph_map' (line 973)
        glyph_map_256228 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 973, 16), 'glyph_map', False)
        # Obtaining the member 'update' of a type (line 973)
        update_256229 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 973, 16), glyph_map_256228, 'update')
        # Calling update(args, kwargs) (line 973)
        update_call_result_256232 = invoke(stypy.reporting.localization.Localization(__file__, 973, 16), update_256229, *[glyph_map_new_256230], **kwargs_256231)
        
        # SSA join for if statement (line 960)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Dict to a Name (line 975):
        
        # Assigning a Dict to a Name (line 975):
        
        # Obtaining an instance of the builtin type 'dict' (line 975)
        dict_256233 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 975, 21), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 975)
        
        # Assigning a type to the variable 'attrib' (line 975)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 975, 12), 'attrib', dict_256233)
        
        # Assigning a BinOp to a Name (line 976):
        
        # Assigning a BinOp to a Name (line 976):
        # Getting the type of 'fontsize' (line 976)
        fontsize_256234 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 976, 25), 'fontsize')
        # Getting the type of 'text2path' (line 976)
        text2path_256235 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 976, 36), 'text2path')
        # Obtaining the member 'FONT_SCALE' of a type (line 976)
        FONT_SCALE_256236 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 976, 36), text2path_256235, 'FONT_SCALE')
        # Applying the binary operator 'div' (line 976)
        result_div_256237 = python_operator(stypy.reporting.localization.Localization(__file__, 976, 25), 'div', fontsize_256234, FONT_SCALE_256236)
        
        # Assigning a type to the variable 'font_scale' (line 976)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 976, 12), 'font_scale', result_div_256237)
        
        # Assigning a Call to a Subscript (line 977):
        
        # Assigning a Call to a Subscript (line 977):
        
        # Call to generate_css(...): (line 977)
        # Processing the call arguments (line 977)
        # Getting the type of 'style' (line 977)
        style_256239 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 977, 43), 'style', False)
        # Processing the call keyword arguments (line 977)
        kwargs_256240 = {}
        # Getting the type of 'generate_css' (line 977)
        generate_css_256238 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 977, 30), 'generate_css', False)
        # Calling generate_css(args, kwargs) (line 977)
        generate_css_call_result_256241 = invoke(stypy.reporting.localization.Localization(__file__, 977, 30), generate_css_256238, *[style_256239], **kwargs_256240)
        
        # Getting the type of 'attrib' (line 977)
        attrib_256242 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 977, 12), 'attrib')
        unicode_256243 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 977, 19), 'unicode', u'style')
        # Storing an element on a container (line 977)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 977, 12), attrib_256242, (unicode_256243, generate_css_call_result_256241))
        
        # Assigning a Call to a Subscript (line 978):
        
        # Assigning a Call to a Subscript (line 978):
        
        # Call to generate_transform(...): (line 978)
        # Processing the call arguments (line 978)
        
        # Obtaining an instance of the builtin type 'list' (line 978)
        list_256245 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 978, 53), 'list')
        # Adding type elements to the builtin type 'list' instance (line 978)
        # Adding element type (line 978)
        
        # Obtaining an instance of the builtin type 'tuple' (line 979)
        tuple_256246 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 979, 17), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 979)
        # Adding element type (line 979)
        unicode_256247 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 979, 17), 'unicode', u'translate')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 979, 17), tuple_256246, unicode_256247)
        # Adding element type (line 979)
        
        # Obtaining an instance of the builtin type 'tuple' (line 979)
        tuple_256248 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 979, 31), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 979)
        # Adding element type (line 979)
        # Getting the type of 'x' (line 979)
        x_256249 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 979, 31), 'x', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 979, 31), tuple_256248, x_256249)
        # Adding element type (line 979)
        # Getting the type of 'y' (line 979)
        y_256250 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 979, 34), 'y', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 979, 31), tuple_256248, y_256250)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 979, 17), tuple_256246, tuple_256248)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 978, 53), list_256245, tuple_256246)
        # Adding element type (line 978)
        
        # Obtaining an instance of the builtin type 'tuple' (line 980)
        tuple_256251 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 980, 17), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 980)
        # Adding element type (line 980)
        unicode_256252 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 980, 17), 'unicode', u'rotate')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 980, 17), tuple_256251, unicode_256252)
        # Adding element type (line 980)
        
        # Obtaining an instance of the builtin type 'tuple' (line 980)
        tuple_256253 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 980, 28), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 980)
        # Adding element type (line 980)
        
        # Getting the type of 'angle' (line 980)
        angle_256254 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 980, 29), 'angle', False)
        # Applying the 'usub' unary operator (line 980)
        result___neg___256255 = python_operator(stypy.reporting.localization.Localization(__file__, 980, 28), 'usub', angle_256254)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 980, 28), tuple_256253, result___neg___256255)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 980, 17), tuple_256251, tuple_256253)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 978, 53), list_256245, tuple_256251)
        # Adding element type (line 978)
        
        # Obtaining an instance of the builtin type 'tuple' (line 981)
        tuple_256256 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 981, 17), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 981)
        # Adding element type (line 981)
        unicode_256257 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 981, 17), 'unicode', u'scale')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 981, 17), tuple_256256, unicode_256257)
        # Adding element type (line 981)
        
        # Obtaining an instance of the builtin type 'tuple' (line 981)
        tuple_256258 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 981, 27), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 981)
        # Adding element type (line 981)
        # Getting the type of 'font_scale' (line 981)
        font_scale_256259 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 981, 27), 'font_scale', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 981, 27), tuple_256258, font_scale_256259)
        # Adding element type (line 981)
        
        # Getting the type of 'font_scale' (line 981)
        font_scale_256260 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 981, 40), 'font_scale', False)
        # Applying the 'usub' unary operator (line 981)
        result___neg___256261 = python_operator(stypy.reporting.localization.Localization(__file__, 981, 39), 'usub', font_scale_256260)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 981, 27), tuple_256258, result___neg___256261)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 981, 17), tuple_256256, tuple_256258)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 978, 53), list_256245, tuple_256256)
        
        # Processing the call keyword arguments (line 978)
        kwargs_256262 = {}
        # Getting the type of 'generate_transform' (line 978)
        generate_transform_256244 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 978, 34), 'generate_transform', False)
        # Calling generate_transform(args, kwargs) (line 978)
        generate_transform_call_result_256263 = invoke(stypy.reporting.localization.Localization(__file__, 978, 34), generate_transform_256244, *[list_256245], **kwargs_256262)
        
        # Getting the type of 'attrib' (line 978)
        attrib_256264 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 978, 12), 'attrib')
        unicode_256265 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 978, 19), 'unicode', u'transform')
        # Storing an element on a container (line 978)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 978, 12), attrib_256264, (unicode_256265, generate_transform_call_result_256263))
        
        # Call to start(...): (line 983)
        # Processing the call arguments (line 983)
        unicode_256268 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 983, 25), 'unicode', u'g')
        # Processing the call keyword arguments (line 983)
        # Getting the type of 'attrib' (line 983)
        attrib_256269 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 983, 37), 'attrib', False)
        keyword_256270 = attrib_256269
        kwargs_256271 = {'attrib': keyword_256270}
        # Getting the type of 'writer' (line 983)
        writer_256266 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 983, 12), 'writer', False)
        # Obtaining the member 'start' of a type (line 983)
        start_256267 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 983, 12), writer_256266, 'start')
        # Calling start(args, kwargs) (line 983)
        start_call_result_256272 = invoke(stypy.reporting.localization.Localization(__file__, 983, 12), start_256267, *[unicode_256268], **kwargs_256271)
        
        
        # Getting the type of 'glyph_info' (line 984)
        glyph_info_256273 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 984, 56), 'glyph_info')
        # Testing the type of a for loop iterable (line 984)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 984, 12), glyph_info_256273)
        # Getting the type of the for loop variable (line 984)
        for_loop_var_256274 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 984, 12), glyph_info_256273)
        # Assigning a type to the variable 'char_id' (line 984)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 984, 12), 'char_id', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 984, 12), for_loop_var_256274))
        # Assigning a type to the variable 'xposition' (line 984)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 984, 12), 'xposition', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 984, 12), for_loop_var_256274))
        # Assigning a type to the variable 'yposition' (line 984)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 984, 12), 'yposition', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 984, 12), for_loop_var_256274))
        # Assigning a type to the variable 'scale' (line 984)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 984, 12), 'scale', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 984, 12), for_loop_var_256274))
        # SSA begins for a for statement (line 984)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 985):
        
        # Assigning a Call to a Name (line 985):
        
        # Call to _adjust_char_id(...): (line 985)
        # Processing the call arguments (line 985)
        # Getting the type of 'char_id' (line 985)
        char_id_256277 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 985, 47), 'char_id', False)
        # Processing the call keyword arguments (line 985)
        kwargs_256278 = {}
        # Getting the type of 'self' (line 985)
        self_256275 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 985, 26), 'self', False)
        # Obtaining the member '_adjust_char_id' of a type (line 985)
        _adjust_char_id_256276 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 985, 26), self_256275, '_adjust_char_id')
        # Calling _adjust_char_id(args, kwargs) (line 985)
        _adjust_char_id_call_result_256279 = invoke(stypy.reporting.localization.Localization(__file__, 985, 26), _adjust_char_id_256276, *[char_id_256277], **kwargs_256278)
        
        # Assigning a type to the variable 'char_id' (line 985)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 985, 16), 'char_id', _adjust_char_id_call_result_256279)
        
        # Call to element(...): (line 987)
        # Processing the call arguments (line 987)
        unicode_256282 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 988, 20), 'unicode', u'use')
        # Processing the call keyword arguments (line 987)
        
        # Call to generate_transform(...): (line 989)
        # Processing the call arguments (line 989)
        
        # Obtaining an instance of the builtin type 'list' (line 989)
        list_256284 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 989, 49), 'list')
        # Adding type elements to the builtin type 'list' instance (line 989)
        # Adding element type (line 989)
        
        # Obtaining an instance of the builtin type 'tuple' (line 990)
        tuple_256285 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 990, 25), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 990)
        # Adding element type (line 990)
        unicode_256286 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 990, 25), 'unicode', u'translate')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 990, 25), tuple_256285, unicode_256286)
        # Adding element type (line 990)
        
        # Obtaining an instance of the builtin type 'tuple' (line 990)
        tuple_256287 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 990, 39), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 990)
        # Adding element type (line 990)
        # Getting the type of 'xposition' (line 990)
        xposition_256288 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 990, 39), 'xposition', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 990, 39), tuple_256287, xposition_256288)
        # Adding element type (line 990)
        # Getting the type of 'yposition' (line 990)
        yposition_256289 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 990, 50), 'yposition', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 990, 39), tuple_256287, yposition_256289)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 990, 25), tuple_256285, tuple_256287)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 989, 49), list_256284, tuple_256285)
        # Adding element type (line 989)
        
        # Obtaining an instance of the builtin type 'tuple' (line 991)
        tuple_256290 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 991, 25), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 991)
        # Adding element type (line 991)
        unicode_256291 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 991, 25), 'unicode', u'scale')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 991, 25), tuple_256290, unicode_256291)
        # Adding element type (line 991)
        
        # Obtaining an instance of the builtin type 'tuple' (line 991)
        tuple_256292 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 991, 35), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 991)
        # Adding element type (line 991)
        # Getting the type of 'scale' (line 991)
        scale_256293 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 991, 35), 'scale', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 991, 35), tuple_256292, scale_256293)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 991, 25), tuple_256290, tuple_256292)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 989, 49), list_256284, tuple_256290)
        
        # Processing the call keyword arguments (line 989)
        kwargs_256294 = {}
        # Getting the type of 'generate_transform' (line 989)
        generate_transform_256283 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 989, 30), 'generate_transform', False)
        # Calling generate_transform(args, kwargs) (line 989)
        generate_transform_call_result_256295 = invoke(stypy.reporting.localization.Localization(__file__, 989, 30), generate_transform_256283, *[list_256284], **kwargs_256294)
        
        keyword_256296 = generate_transform_call_result_256295
        
        # Obtaining an instance of the builtin type 'dict' (line 993)
        dict_256297 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 993, 27), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 993)
        # Adding element type (key, value) (line 993)
        unicode_256298 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 993, 28), 'unicode', u'xlink:href')
        unicode_256299 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 993, 42), 'unicode', u'#%s')
        # Getting the type of 'char_id' (line 993)
        char_id_256300 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 993, 50), 'char_id', False)
        # Applying the binary operator '%' (line 993)
        result_mod_256301 = python_operator(stypy.reporting.localization.Localization(__file__, 993, 42), '%', unicode_256299, char_id_256300)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 993, 27), dict_256297, (unicode_256298, result_mod_256301))
        
        keyword_256302 = dict_256297
        kwargs_256303 = {'attrib': keyword_256302, 'transform': keyword_256296}
        # Getting the type of 'writer' (line 987)
        writer_256280 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 987, 16), 'writer', False)
        # Obtaining the member 'element' of a type (line 987)
        element_256281 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 987, 16), writer_256280, 'element')
        # Calling element(args, kwargs) (line 987)
        element_call_result_256304 = invoke(stypy.reporting.localization.Localization(__file__, 987, 16), element_256281, *[unicode_256282], **kwargs_256303)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'rects' (line 995)
        rects_256305 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 995, 32), 'rects')
        # Testing the type of a for loop iterable (line 995)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 995, 12), rects_256305)
        # Getting the type of the for loop variable (line 995)
        for_loop_var_256306 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 995, 12), rects_256305)
        # Assigning a type to the variable 'verts' (line 995)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 995, 12), 'verts', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 995, 12), for_loop_var_256306))
        # Assigning a type to the variable 'codes' (line 995)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 995, 12), 'codes', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 995, 12), for_loop_var_256306))
        # SSA begins for a for statement (line 995)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 996):
        
        # Assigning a Call to a Name (line 996):
        
        # Call to Path(...): (line 996)
        # Processing the call arguments (line 996)
        # Getting the type of 'verts' (line 996)
        verts_256308 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 996, 28), 'verts', False)
        # Getting the type of 'codes' (line 996)
        codes_256309 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 996, 35), 'codes', False)
        # Processing the call keyword arguments (line 996)
        kwargs_256310 = {}
        # Getting the type of 'Path' (line 996)
        Path_256307 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 996, 23), 'Path', False)
        # Calling Path(args, kwargs) (line 996)
        Path_call_result_256311 = invoke(stypy.reporting.localization.Localization(__file__, 996, 23), Path_256307, *[verts_256308, codes_256309], **kwargs_256310)
        
        # Assigning a type to the variable 'path' (line 996)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 996, 16), 'path', Path_call_result_256311)
        
        # Assigning a Call to a Name (line 997):
        
        # Assigning a Call to a Name (line 997):
        
        # Call to _convert_path(...): (line 997)
        # Processing the call arguments (line 997)
        # Getting the type of 'path' (line 997)
        path_256314 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 997, 47), 'path', False)
        # Processing the call keyword arguments (line 997)
        # Getting the type of 'False' (line 997)
        False_256315 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 997, 62), 'False', False)
        keyword_256316 = False_256315
        kwargs_256317 = {'simplify': keyword_256316}
        # Getting the type of 'self' (line 997)
        self_256312 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 997, 28), 'self', False)
        # Obtaining the member '_convert_path' of a type (line 997)
        _convert_path_256313 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 997, 28), self_256312, '_convert_path')
        # Calling _convert_path(args, kwargs) (line 997)
        _convert_path_call_result_256318 = invoke(stypy.reporting.localization.Localization(__file__, 997, 28), _convert_path_256313, *[path_256314], **kwargs_256317)
        
        # Assigning a type to the variable 'path_data' (line 997)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 997, 16), 'path_data', _convert_path_call_result_256318)
        
        # Call to element(...): (line 998)
        # Processing the call arguments (line 998)
        unicode_256321 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 998, 31), 'unicode', u'path')
        # Processing the call keyword arguments (line 998)
        # Getting the type of 'path_data' (line 998)
        path_data_256322 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 998, 41), 'path_data', False)
        keyword_256323 = path_data_256322
        kwargs_256324 = {'d': keyword_256323}
        # Getting the type of 'writer' (line 998)
        writer_256319 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 998, 16), 'writer', False)
        # Obtaining the member 'element' of a type (line 998)
        element_256320 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 998, 16), writer_256319, 'element')
        # Calling element(args, kwargs) (line 998)
        element_call_result_256325 = invoke(stypy.reporting.localization.Localization(__file__, 998, 16), element_256320, *[unicode_256321], **kwargs_256324)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to end(...): (line 1000)
        # Processing the call arguments (line 1000)
        unicode_256328 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1000, 23), 'unicode', u'g')
        # Processing the call keyword arguments (line 1000)
        kwargs_256329 = {}
        # Getting the type of 'writer' (line 1000)
        writer_256326 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1000, 12), 'writer', False)
        # Obtaining the member 'end' of a type (line 1000)
        end_256327 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1000, 12), writer_256326, 'end')
        # Calling end(args, kwargs) (line 1000)
        end_call_result_256330 = invoke(stypy.reporting.localization.Localization(__file__, 1000, 12), end_256327, *[unicode_256328], **kwargs_256329)
        
        # SSA join for if statement (line 911)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of '_draw_text_as_path(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_draw_text_as_path' in the type store
        # Getting the type of 'stypy_return_type' (line 876)
        stypy_return_type_256331 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 876, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_256331)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_draw_text_as_path'
        return stypy_return_type_256331


    @norecursion
    def _draw_text_as_text(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'None' (line 1002)
        None_256332 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1002, 73), 'None')
        defaults = [None_256332]
        # Create a new context for function '_draw_text_as_text'
        module_type_store = module_type_store.open_function_context('_draw_text_as_text', 1002, 4, False)
        # Assigning a type to the variable 'self' (line 1003)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1003, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererSVG._draw_text_as_text.__dict__.__setitem__('stypy_localization', localization)
        RendererSVG._draw_text_as_text.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererSVG._draw_text_as_text.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererSVG._draw_text_as_text.__dict__.__setitem__('stypy_function_name', 'RendererSVG._draw_text_as_text')
        RendererSVG._draw_text_as_text.__dict__.__setitem__('stypy_param_names_list', ['gc', 'x', 'y', 's', 'prop', 'angle', 'ismath', 'mtext'])
        RendererSVG._draw_text_as_text.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererSVG._draw_text_as_text.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererSVG._draw_text_as_text.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererSVG._draw_text_as_text.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererSVG._draw_text_as_text.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererSVG._draw_text_as_text.__dict__.__setitem__('stypy_declared_arg_number', 9)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererSVG._draw_text_as_text', ['gc', 'x', 'y', 's', 'prop', 'angle', 'ismath', 'mtext'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_draw_text_as_text', localization, ['gc', 'x', 'y', 's', 'prop', 'angle', 'ismath', 'mtext'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_draw_text_as_text(...)' code ##################

        
        # Assigning a Attribute to a Name (line 1003):
        
        # Assigning a Attribute to a Name (line 1003):
        # Getting the type of 'self' (line 1003)
        self_256333 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1003, 17), 'self')
        # Obtaining the member 'writer' of a type (line 1003)
        writer_256334 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1003, 17), self_256333, 'writer')
        # Assigning a type to the variable 'writer' (line 1003)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1003, 8), 'writer', writer_256334)
        
        # Assigning a Call to a Name (line 1005):
        
        # Assigning a Call to a Name (line 1005):
        
        # Call to rgb2hex(...): (line 1005)
        # Processing the call arguments (line 1005)
        
        # Call to get_rgb(...): (line 1005)
        # Processing the call keyword arguments (line 1005)
        kwargs_256338 = {}
        # Getting the type of 'gc' (line 1005)
        gc_256336 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1005, 24), 'gc', False)
        # Obtaining the member 'get_rgb' of a type (line 1005)
        get_rgb_256337 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1005, 24), gc_256336, 'get_rgb')
        # Calling get_rgb(args, kwargs) (line 1005)
        get_rgb_call_result_256339 = invoke(stypy.reporting.localization.Localization(__file__, 1005, 24), get_rgb_256337, *[], **kwargs_256338)
        
        # Processing the call keyword arguments (line 1005)
        kwargs_256340 = {}
        # Getting the type of 'rgb2hex' (line 1005)
        rgb2hex_256335 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1005, 16), 'rgb2hex', False)
        # Calling rgb2hex(args, kwargs) (line 1005)
        rgb2hex_call_result_256341 = invoke(stypy.reporting.localization.Localization(__file__, 1005, 16), rgb2hex_256335, *[get_rgb_call_result_256339], **kwargs_256340)
        
        # Assigning a type to the variable 'color' (line 1005)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1005, 8), 'color', rgb2hex_call_result_256341)
        
        # Assigning a Dict to a Name (line 1006):
        
        # Assigning a Dict to a Name (line 1006):
        
        # Obtaining an instance of the builtin type 'dict' (line 1006)
        dict_256342 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1006, 16), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 1006)
        
        # Assigning a type to the variable 'style' (line 1006)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1006, 8), 'style', dict_256342)
        
        
        # Getting the type of 'color' (line 1007)
        color_256343 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1007, 11), 'color')
        unicode_256344 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1007, 20), 'unicode', u'#000000')
        # Applying the binary operator '!=' (line 1007)
        result_ne_256345 = python_operator(stypy.reporting.localization.Localization(__file__, 1007, 11), '!=', color_256343, unicode_256344)
        
        # Testing the type of an if condition (line 1007)
        if_condition_256346 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1007, 8), result_ne_256345)
        # Assigning a type to the variable 'if_condition_256346' (line 1007)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1007, 8), 'if_condition_256346', if_condition_256346)
        # SSA begins for if statement (line 1007)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Name to a Subscript (line 1008):
        
        # Assigning a Name to a Subscript (line 1008):
        # Getting the type of 'color' (line 1008)
        color_256347 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1008, 28), 'color')
        # Getting the type of 'style' (line 1008)
        style_256348 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1008, 12), 'style')
        unicode_256349 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1008, 18), 'unicode', u'fill')
        # Storing an element on a container (line 1008)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1008, 12), style_256348, (unicode_256349, color_256347))
        # SSA join for if statement (line 1007)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        
        # Call to get_alpha(...): (line 1009)
        # Processing the call keyword arguments (line 1009)
        kwargs_256352 = {}
        # Getting the type of 'gc' (line 1009)
        gc_256350 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1009, 11), 'gc', False)
        # Obtaining the member 'get_alpha' of a type (line 1009)
        get_alpha_256351 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1009, 11), gc_256350, 'get_alpha')
        # Calling get_alpha(args, kwargs) (line 1009)
        get_alpha_call_result_256353 = invoke(stypy.reporting.localization.Localization(__file__, 1009, 11), get_alpha_256351, *[], **kwargs_256352)
        
        float_256354 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1009, 29), 'float')
        # Applying the binary operator '!=' (line 1009)
        result_ne_256355 = python_operator(stypy.reporting.localization.Localization(__file__, 1009, 11), '!=', get_alpha_call_result_256353, float_256354)
        
        # Testing the type of an if condition (line 1009)
        if_condition_256356 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1009, 8), result_ne_256355)
        # Assigning a type to the variable 'if_condition_256356' (line 1009)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1009, 8), 'if_condition_256356', if_condition_256356)
        # SSA begins for if statement (line 1009)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Subscript (line 1010):
        
        # Assigning a Call to a Subscript (line 1010):
        
        # Call to short_float_fmt(...): (line 1010)
        # Processing the call arguments (line 1010)
        
        # Call to get_alpha(...): (line 1010)
        # Processing the call keyword arguments (line 1010)
        kwargs_256360 = {}
        # Getting the type of 'gc' (line 1010)
        gc_256358 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1010, 47), 'gc', False)
        # Obtaining the member 'get_alpha' of a type (line 1010)
        get_alpha_256359 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1010, 47), gc_256358, 'get_alpha')
        # Calling get_alpha(args, kwargs) (line 1010)
        get_alpha_call_result_256361 = invoke(stypy.reporting.localization.Localization(__file__, 1010, 47), get_alpha_256359, *[], **kwargs_256360)
        
        # Processing the call keyword arguments (line 1010)
        kwargs_256362 = {}
        # Getting the type of 'short_float_fmt' (line 1010)
        short_float_fmt_256357 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1010, 31), 'short_float_fmt', False)
        # Calling short_float_fmt(args, kwargs) (line 1010)
        short_float_fmt_call_result_256363 = invoke(stypy.reporting.localization.Localization(__file__, 1010, 31), short_float_fmt_256357, *[get_alpha_call_result_256361], **kwargs_256362)
        
        # Getting the type of 'style' (line 1010)
        style_256364 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1010, 12), 'style')
        unicode_256365 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1010, 18), 'unicode', u'opacity')
        # Storing an element on a container (line 1010)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1010, 12), style_256364, (unicode_256365, short_float_fmt_call_result_256363))
        # SSA join for if statement (line 1009)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'ismath' (line 1012)
        ismath_256366 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1012, 15), 'ismath')
        # Applying the 'not' unary operator (line 1012)
        result_not__256367 = python_operator(stypy.reporting.localization.Localization(__file__, 1012, 11), 'not', ismath_256366)
        
        # Testing the type of an if condition (line 1012)
        if_condition_256368 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1012, 8), result_not__256367)
        # Assigning a type to the variable 'if_condition_256368' (line 1012)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1012, 8), 'if_condition_256368', if_condition_256368)
        # SSA begins for if statement (line 1012)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 1013):
        
        # Assigning a Call to a Name (line 1013):
        
        # Call to _get_font(...): (line 1013)
        # Processing the call arguments (line 1013)
        # Getting the type of 'prop' (line 1013)
        prop_256371 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1013, 34), 'prop', False)
        # Processing the call keyword arguments (line 1013)
        kwargs_256372 = {}
        # Getting the type of 'self' (line 1013)
        self_256369 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1013, 19), 'self', False)
        # Obtaining the member '_get_font' of a type (line 1013)
        _get_font_256370 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1013, 19), self_256369, '_get_font')
        # Calling _get_font(args, kwargs) (line 1013)
        _get_font_call_result_256373 = invoke(stypy.reporting.localization.Localization(__file__, 1013, 19), _get_font_256370, *[prop_256371], **kwargs_256372)
        
        # Assigning a type to the variable 'font' (line 1013)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1013, 12), 'font', _get_font_call_result_256373)
        
        # Call to set_text(...): (line 1014)
        # Processing the call arguments (line 1014)
        # Getting the type of 's' (line 1014)
        s_256376 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1014, 26), 's', False)
        float_256377 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1014, 29), 'float')
        # Processing the call keyword arguments (line 1014)
        # Getting the type of 'LOAD_NO_HINTING' (line 1014)
        LOAD_NO_HINTING_256378 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1014, 40), 'LOAD_NO_HINTING', False)
        keyword_256379 = LOAD_NO_HINTING_256378
        kwargs_256380 = {'flags': keyword_256379}
        # Getting the type of 'font' (line 1014)
        font_256374 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1014, 12), 'font', False)
        # Obtaining the member 'set_text' of a type (line 1014)
        set_text_256375 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1014, 12), font_256374, 'set_text')
        # Calling set_text(args, kwargs) (line 1014)
        set_text_call_result_256381 = invoke(stypy.reporting.localization.Localization(__file__, 1014, 12), set_text_256375, *[s_256376, float_256377], **kwargs_256380)
        
        
        # Assigning a Call to a Name (line 1016):
        
        # Assigning a Call to a Name (line 1016):
        
        # Call to get_size_in_points(...): (line 1016)
        # Processing the call keyword arguments (line 1016)
        kwargs_256384 = {}
        # Getting the type of 'prop' (line 1016)
        prop_256382 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1016, 23), 'prop', False)
        # Obtaining the member 'get_size_in_points' of a type (line 1016)
        get_size_in_points_256383 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1016, 23), prop_256382, 'get_size_in_points')
        # Calling get_size_in_points(args, kwargs) (line 1016)
        get_size_in_points_call_result_256385 = invoke(stypy.reporting.localization.Localization(__file__, 1016, 23), get_size_in_points_256383, *[], **kwargs_256384)
        
        # Assigning a type to the variable 'fontsize' (line 1016)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1016, 12), 'fontsize', get_size_in_points_call_result_256385)
        
        # Assigning a Attribute to a Name (line 1018):
        
        # Assigning a Attribute to a Name (line 1018):
        # Getting the type of 'font' (line 1018)
        font_256386 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1018, 25), 'font')
        # Obtaining the member 'family_name' of a type (line 1018)
        family_name_256387 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1018, 25), font_256386, 'family_name')
        # Assigning a type to the variable 'fontfamily' (line 1018)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1018, 12), 'fontfamily', family_name_256387)
        
        # Assigning a Call to a Name (line 1019):
        
        # Assigning a Call to a Name (line 1019):
        
        # Call to get_style(...): (line 1019)
        # Processing the call keyword arguments (line 1019)
        kwargs_256390 = {}
        # Getting the type of 'prop' (line 1019)
        prop_256388 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1019, 24), 'prop', False)
        # Obtaining the member 'get_style' of a type (line 1019)
        get_style_256389 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1019, 24), prop_256388, 'get_style')
        # Calling get_style(args, kwargs) (line 1019)
        get_style_call_result_256391 = invoke(stypy.reporting.localization.Localization(__file__, 1019, 24), get_style_256389, *[], **kwargs_256390)
        
        # Assigning a type to the variable 'fontstyle' (line 1019)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1019, 12), 'fontstyle', get_style_call_result_256391)
        
        # Assigning a Dict to a Name (line 1021):
        
        # Assigning a Dict to a Name (line 1021):
        
        # Obtaining an instance of the builtin type 'dict' (line 1021)
        dict_256392 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1021, 21), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 1021)
        
        # Assigning a type to the variable 'attrib' (line 1021)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1021, 12), 'attrib', dict_256392)
        
        # Assigning a BinOp to a Subscript (line 1023):
        
        # Assigning a BinOp to a Subscript (line 1023):
        
        # Call to short_float_fmt(...): (line 1023)
        # Processing the call arguments (line 1023)
        # Getting the type of 'fontsize' (line 1023)
        fontsize_256394 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1023, 49), 'fontsize', False)
        # Processing the call keyword arguments (line 1023)
        kwargs_256395 = {}
        # Getting the type of 'short_float_fmt' (line 1023)
        short_float_fmt_256393 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1023, 33), 'short_float_fmt', False)
        # Calling short_float_fmt(args, kwargs) (line 1023)
        short_float_fmt_call_result_256396 = invoke(stypy.reporting.localization.Localization(__file__, 1023, 33), short_float_fmt_256393, *[fontsize_256394], **kwargs_256395)
        
        unicode_256397 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1023, 61), 'unicode', u'px')
        # Applying the binary operator '+' (line 1023)
        result_add_256398 = python_operator(stypy.reporting.localization.Localization(__file__, 1023, 33), '+', short_float_fmt_call_result_256396, unicode_256397)
        
        # Getting the type of 'style' (line 1023)
        style_256399 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1023, 12), 'style')
        unicode_256400 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1023, 18), 'unicode', u'font-size')
        # Storing an element on a container (line 1023)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1023, 12), style_256399, (unicode_256400, result_add_256398))
        
        # Assigning a Call to a Subscript (line 1024):
        
        # Assigning a Call to a Subscript (line 1024):
        
        # Call to text_type(...): (line 1024)
        # Processing the call arguments (line 1024)
        # Getting the type of 'fontfamily' (line 1024)
        fontfamily_256403 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1024, 49), 'fontfamily', False)
        # Processing the call keyword arguments (line 1024)
        kwargs_256404 = {}
        # Getting the type of 'six' (line 1024)
        six_256401 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1024, 35), 'six', False)
        # Obtaining the member 'text_type' of a type (line 1024)
        text_type_256402 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1024, 35), six_256401, 'text_type')
        # Calling text_type(args, kwargs) (line 1024)
        text_type_call_result_256405 = invoke(stypy.reporting.localization.Localization(__file__, 1024, 35), text_type_256402, *[fontfamily_256403], **kwargs_256404)
        
        # Getting the type of 'style' (line 1024)
        style_256406 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1024, 12), 'style')
        unicode_256407 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1024, 18), 'unicode', u'font-family')
        # Storing an element on a container (line 1024)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1024, 12), style_256406, (unicode_256407, text_type_call_result_256405))
        
        # Assigning a Call to a Subscript (line 1025):
        
        # Assigning a Call to a Subscript (line 1025):
        
        # Call to lower(...): (line 1025)
        # Processing the call keyword arguments (line 1025)
        kwargs_256413 = {}
        
        # Call to get_style(...): (line 1025)
        # Processing the call keyword arguments (line 1025)
        kwargs_256410 = {}
        # Getting the type of 'prop' (line 1025)
        prop_256408 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1025, 34), 'prop', False)
        # Obtaining the member 'get_style' of a type (line 1025)
        get_style_256409 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1025, 34), prop_256408, 'get_style')
        # Calling get_style(args, kwargs) (line 1025)
        get_style_call_result_256411 = invoke(stypy.reporting.localization.Localization(__file__, 1025, 34), get_style_256409, *[], **kwargs_256410)
        
        # Obtaining the member 'lower' of a type (line 1025)
        lower_256412 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1025, 34), get_style_call_result_256411, 'lower')
        # Calling lower(args, kwargs) (line 1025)
        lower_call_result_256414 = invoke(stypy.reporting.localization.Localization(__file__, 1025, 34), lower_256412, *[], **kwargs_256413)
        
        # Getting the type of 'style' (line 1025)
        style_256415 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1025, 12), 'style')
        unicode_256416 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1025, 18), 'unicode', u'font-style')
        # Storing an element on a container (line 1025)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1025, 12), style_256415, (unicode_256416, lower_call_result_256414))
        
        # Assigning a Call to a Subscript (line 1026):
        
        # Assigning a Call to a Subscript (line 1026):
        
        # Call to lower(...): (line 1026)
        # Processing the call keyword arguments (line 1026)
        kwargs_256426 = {}
        
        # Call to text_type(...): (line 1026)
        # Processing the call arguments (line 1026)
        
        # Call to get_weight(...): (line 1026)
        # Processing the call keyword arguments (line 1026)
        kwargs_256421 = {}
        # Getting the type of 'prop' (line 1026)
        prop_256419 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1026, 49), 'prop', False)
        # Obtaining the member 'get_weight' of a type (line 1026)
        get_weight_256420 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1026, 49), prop_256419, 'get_weight')
        # Calling get_weight(args, kwargs) (line 1026)
        get_weight_call_result_256422 = invoke(stypy.reporting.localization.Localization(__file__, 1026, 49), get_weight_256420, *[], **kwargs_256421)
        
        # Processing the call keyword arguments (line 1026)
        kwargs_256423 = {}
        # Getting the type of 'six' (line 1026)
        six_256417 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1026, 35), 'six', False)
        # Obtaining the member 'text_type' of a type (line 1026)
        text_type_256418 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1026, 35), six_256417, 'text_type')
        # Calling text_type(args, kwargs) (line 1026)
        text_type_call_result_256424 = invoke(stypy.reporting.localization.Localization(__file__, 1026, 35), text_type_256418, *[get_weight_call_result_256422], **kwargs_256423)
        
        # Obtaining the member 'lower' of a type (line 1026)
        lower_256425 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1026, 35), text_type_call_result_256424, 'lower')
        # Calling lower(args, kwargs) (line 1026)
        lower_call_result_256427 = invoke(stypy.reporting.localization.Localization(__file__, 1026, 35), lower_256425, *[], **kwargs_256426)
        
        # Getting the type of 'style' (line 1026)
        style_256428 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1026, 12), 'style')
        unicode_256429 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1026, 18), 'unicode', u'font-weight')
        # Storing an element on a container (line 1026)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1026, 12), style_256428, (unicode_256429, lower_call_result_256427))
        
        # Assigning a Call to a Subscript (line 1027):
        
        # Assigning a Call to a Subscript (line 1027):
        
        # Call to generate_css(...): (line 1027)
        # Processing the call arguments (line 1027)
        # Getting the type of 'style' (line 1027)
        style_256431 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1027, 43), 'style', False)
        # Processing the call keyword arguments (line 1027)
        kwargs_256432 = {}
        # Getting the type of 'generate_css' (line 1027)
        generate_css_256430 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1027, 30), 'generate_css', False)
        # Calling generate_css(args, kwargs) (line 1027)
        generate_css_call_result_256433 = invoke(stypy.reporting.localization.Localization(__file__, 1027, 30), generate_css_256430, *[style_256431], **kwargs_256432)
        
        # Getting the type of 'attrib' (line 1027)
        attrib_256434 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1027, 12), 'attrib')
        unicode_256435 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1027, 19), 'unicode', u'style')
        # Storing an element on a container (line 1027)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1027, 12), attrib_256434, (unicode_256435, generate_css_call_result_256433))
        
        
        # Evaluating a boolean operation
        # Getting the type of 'mtext' (line 1029)
        mtext_256436 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1029, 15), 'mtext')
        
        # Evaluating a boolean operation
        
        # Getting the type of 'angle' (line 1029)
        angle_256437 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1029, 26), 'angle')
        int_256438 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1029, 35), 'int')
        # Applying the binary operator '==' (line 1029)
        result_eq_256439 = python_operator(stypy.reporting.localization.Localization(__file__, 1029, 26), '==', angle_256437, int_256438)
        
        
        
        # Call to get_rotation_mode(...): (line 1029)
        # Processing the call keyword arguments (line 1029)
        kwargs_256442 = {}
        # Getting the type of 'mtext' (line 1029)
        mtext_256440 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1029, 40), 'mtext', False)
        # Obtaining the member 'get_rotation_mode' of a type (line 1029)
        get_rotation_mode_256441 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1029, 40), mtext_256440, 'get_rotation_mode')
        # Calling get_rotation_mode(args, kwargs) (line 1029)
        get_rotation_mode_call_result_256443 = invoke(stypy.reporting.localization.Localization(__file__, 1029, 40), get_rotation_mode_256441, *[], **kwargs_256442)
        
        unicode_256444 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1029, 69), 'unicode', u'anchor')
        # Applying the binary operator '==' (line 1029)
        result_eq_256445 = python_operator(stypy.reporting.localization.Localization(__file__, 1029, 40), '==', get_rotation_mode_call_result_256443, unicode_256444)
        
        # Applying the binary operator 'or' (line 1029)
        result_or_keyword_256446 = python_operator(stypy.reporting.localization.Localization(__file__, 1029, 26), 'or', result_eq_256439, result_eq_256445)
        
        # Applying the binary operator 'and' (line 1029)
        result_and_keyword_256447 = python_operator(stypy.reporting.localization.Localization(__file__, 1029, 15), 'and', mtext_256436, result_or_keyword_256446)
        
        # Testing the type of an if condition (line 1029)
        if_condition_256448 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1029, 12), result_and_keyword_256447)
        # Assigning a type to the variable 'if_condition_256448' (line 1029)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1029, 12), 'if_condition_256448', if_condition_256448)
        # SSA begins for if statement (line 1029)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 1034):
        
        # Assigning a Call to a Name (line 1034):
        
        # Call to get_transform(...): (line 1034)
        # Processing the call keyword arguments (line 1034)
        kwargs_256451 = {}
        # Getting the type of 'mtext' (line 1034)
        mtext_256449 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1034, 28), 'mtext', False)
        # Obtaining the member 'get_transform' of a type (line 1034)
        get_transform_256450 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1034, 28), mtext_256449, 'get_transform')
        # Calling get_transform(args, kwargs) (line 1034)
        get_transform_call_result_256452 = invoke(stypy.reporting.localization.Localization(__file__, 1034, 28), get_transform_256450, *[], **kwargs_256451)
        
        # Assigning a type to the variable 'transform' (line 1034)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1034, 16), 'transform', get_transform_call_result_256452)
        
        # Assigning a Call to a Tuple (line 1035):
        
        # Assigning a Call to a Name:
        
        # Call to transform_point(...): (line 1035)
        # Processing the call arguments (line 1035)
        
        # Call to get_position(...): (line 1035)
        # Processing the call keyword arguments (line 1035)
        kwargs_256457 = {}
        # Getting the type of 'mtext' (line 1035)
        mtext_256455 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 51), 'mtext', False)
        # Obtaining the member 'get_position' of a type (line 1035)
        get_position_256456 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1035, 51), mtext_256455, 'get_position')
        # Calling get_position(args, kwargs) (line 1035)
        get_position_call_result_256458 = invoke(stypy.reporting.localization.Localization(__file__, 1035, 51), get_position_256456, *[], **kwargs_256457)
        
        # Processing the call keyword arguments (line 1035)
        kwargs_256459 = {}
        # Getting the type of 'transform' (line 1035)
        transform_256453 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 25), 'transform', False)
        # Obtaining the member 'transform_point' of a type (line 1035)
        transform_point_256454 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1035, 25), transform_256453, 'transform_point')
        # Calling transform_point(args, kwargs) (line 1035)
        transform_point_call_result_256460 = invoke(stypy.reporting.localization.Localization(__file__, 1035, 25), transform_point_256454, *[get_position_call_result_256458], **kwargs_256459)
        
        # Assigning a type to the variable 'call_assignment_252828' (line 1035)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1035, 16), 'call_assignment_252828', transform_point_call_result_256460)
        
        # Assigning a Call to a Name (line 1035):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_256463 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1035, 16), 'int')
        # Processing the call keyword arguments
        kwargs_256464 = {}
        # Getting the type of 'call_assignment_252828' (line 1035)
        call_assignment_252828_256461 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 16), 'call_assignment_252828', False)
        # Obtaining the member '__getitem__' of a type (line 1035)
        getitem___256462 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1035, 16), call_assignment_252828_256461, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_256465 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___256462, *[int_256463], **kwargs_256464)
        
        # Assigning a type to the variable 'call_assignment_252829' (line 1035)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1035, 16), 'call_assignment_252829', getitem___call_result_256465)
        
        # Assigning a Name to a Name (line 1035):
        # Getting the type of 'call_assignment_252829' (line 1035)
        call_assignment_252829_256466 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 16), 'call_assignment_252829')
        # Assigning a type to the variable 'ax' (line 1035)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1035, 16), 'ax', call_assignment_252829_256466)
        
        # Assigning a Call to a Name (line 1035):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_256469 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1035, 16), 'int')
        # Processing the call keyword arguments
        kwargs_256470 = {}
        # Getting the type of 'call_assignment_252828' (line 1035)
        call_assignment_252828_256467 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 16), 'call_assignment_252828', False)
        # Obtaining the member '__getitem__' of a type (line 1035)
        getitem___256468 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1035, 16), call_assignment_252828_256467, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_256471 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___256468, *[int_256469], **kwargs_256470)
        
        # Assigning a type to the variable 'call_assignment_252830' (line 1035)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1035, 16), 'call_assignment_252830', getitem___call_result_256471)
        
        # Assigning a Name to a Name (line 1035):
        # Getting the type of 'call_assignment_252830' (line 1035)
        call_assignment_252830_256472 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 16), 'call_assignment_252830')
        # Assigning a type to the variable 'ay' (line 1035)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1035, 20), 'ay', call_assignment_252830_256472)
        
        # Assigning a BinOp to a Name (line 1036):
        
        # Assigning a BinOp to a Name (line 1036):
        # Getting the type of 'self' (line 1036)
        self_256473 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1036, 21), 'self')
        # Obtaining the member 'height' of a type (line 1036)
        height_256474 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1036, 21), self_256473, 'height')
        # Getting the type of 'ay' (line 1036)
        ay_256475 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1036, 35), 'ay')
        # Applying the binary operator '-' (line 1036)
        result_sub_256476 = python_operator(stypy.reporting.localization.Localization(__file__, 1036, 21), '-', height_256474, ay_256475)
        
        # Assigning a type to the variable 'ay' (line 1036)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1036, 16), 'ay', result_sub_256476)
        
        # Assigning a Call to a Name (line 1041):
        
        # Assigning a Call to a Name (line 1041):
        
        # Call to deg2rad(...): (line 1041)
        # Processing the call arguments (line 1041)
        # Getting the type of 'angle' (line 1041)
        angle_256479 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1041, 39), 'angle', False)
        # Processing the call keyword arguments (line 1041)
        kwargs_256480 = {}
        # Getting the type of 'np' (line 1041)
        np_256477 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1041, 28), 'np', False)
        # Obtaining the member 'deg2rad' of a type (line 1041)
        deg2rad_256478 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1041, 28), np_256477, 'deg2rad')
        # Calling deg2rad(args, kwargs) (line 1041)
        deg2rad_call_result_256481 = invoke(stypy.reporting.localization.Localization(__file__, 1041, 28), deg2rad_256478, *[angle_256479], **kwargs_256480)
        
        # Assigning a type to the variable 'angle_rad' (line 1041)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1041, 16), 'angle_rad', deg2rad_call_result_256481)
        
        # Assigning a Call to a Name (line 1042):
        
        # Assigning a Call to a Name (line 1042):
        
        # Call to array(...): (line 1042)
        # Processing the call arguments (line 1042)
        
        # Obtaining an instance of the builtin type 'list' (line 1042)
        list_256484 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1042, 36), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1042)
        # Adding element type (line 1042)
        
        # Call to sin(...): (line 1042)
        # Processing the call arguments (line 1042)
        # Getting the type of 'angle_rad' (line 1042)
        angle_rad_256487 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1042, 44), 'angle_rad', False)
        # Processing the call keyword arguments (line 1042)
        kwargs_256488 = {}
        # Getting the type of 'np' (line 1042)
        np_256485 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1042, 37), 'np', False)
        # Obtaining the member 'sin' of a type (line 1042)
        sin_256486 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1042, 37), np_256485, 'sin')
        # Calling sin(args, kwargs) (line 1042)
        sin_call_result_256489 = invoke(stypy.reporting.localization.Localization(__file__, 1042, 37), sin_256486, *[angle_rad_256487], **kwargs_256488)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1042, 36), list_256484, sin_call_result_256489)
        # Adding element type (line 1042)
        
        # Call to cos(...): (line 1042)
        # Processing the call arguments (line 1042)
        # Getting the type of 'angle_rad' (line 1042)
        angle_rad_256492 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1042, 63), 'angle_rad', False)
        # Processing the call keyword arguments (line 1042)
        kwargs_256493 = {}
        # Getting the type of 'np' (line 1042)
        np_256490 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1042, 56), 'np', False)
        # Obtaining the member 'cos' of a type (line 1042)
        cos_256491 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1042, 56), np_256490, 'cos')
        # Calling cos(args, kwargs) (line 1042)
        cos_call_result_256494 = invoke(stypy.reporting.localization.Localization(__file__, 1042, 56), cos_256491, *[angle_rad_256492], **kwargs_256493)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1042, 36), list_256484, cos_call_result_256494)
        
        # Processing the call keyword arguments (line 1042)
        kwargs_256495 = {}
        # Getting the type of 'np' (line 1042)
        np_256482 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1042, 27), 'np', False)
        # Obtaining the member 'array' of a type (line 1042)
        array_256483 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1042, 27), np_256482, 'array')
        # Calling array(args, kwargs) (line 1042)
        array_call_result_256496 = invoke(stypy.reporting.localization.Localization(__file__, 1042, 27), array_256483, *[list_256484], **kwargs_256495)
        
        # Assigning a type to the variable 'dir_vert' (line 1042)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1042, 16), 'dir_vert', array_call_result_256496)
        
        # Assigning a Call to a Name (line 1043):
        
        # Assigning a Call to a Name (line 1043):
        
        # Call to dot(...): (line 1043)
        # Processing the call arguments (line 1043)
        # Getting the type of 'dir_vert' (line 1043)
        dir_vert_256499 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1043, 34), 'dir_vert', False)
        
        # Obtaining an instance of the builtin type 'list' (line 1043)
        list_256500 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1043, 44), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1043)
        # Adding element type (line 1043)
        # Getting the type of 'x' (line 1043)
        x_256501 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1043, 46), 'x', False)
        # Getting the type of 'ax' (line 1043)
        ax_256502 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1043, 50), 'ax', False)
        # Applying the binary operator '-' (line 1043)
        result_sub_256503 = python_operator(stypy.reporting.localization.Localization(__file__, 1043, 46), '-', x_256501, ax_256502)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1043, 44), list_256500, result_sub_256503)
        # Adding element type (line 1043)
        # Getting the type of 'y' (line 1043)
        y_256504 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1043, 56), 'y', False)
        # Getting the type of 'ay' (line 1043)
        ay_256505 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1043, 60), 'ay', False)
        # Applying the binary operator '-' (line 1043)
        result_sub_256506 = python_operator(stypy.reporting.localization.Localization(__file__, 1043, 56), '-', y_256504, ay_256505)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1043, 44), list_256500, result_sub_256506)
        
        # Processing the call keyword arguments (line 1043)
        kwargs_256507 = {}
        # Getting the type of 'np' (line 1043)
        np_256497 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1043, 27), 'np', False)
        # Obtaining the member 'dot' of a type (line 1043)
        dot_256498 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1043, 27), np_256497, 'dot')
        # Calling dot(args, kwargs) (line 1043)
        dot_call_result_256508 = invoke(stypy.reporting.localization.Localization(__file__, 1043, 27), dot_256498, *[dir_vert_256499, list_256500], **kwargs_256507)
        
        # Assigning a type to the variable 'v_offset' (line 1043)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1043, 16), 'v_offset', dot_call_result_256508)
        
        # Assigning a BinOp to a Name (line 1044):
        
        # Assigning a BinOp to a Name (line 1044):
        # Getting the type of 'ax' (line 1044)
        ax_256509 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1044, 21), 'ax')
        # Getting the type of 'v_offset' (line 1044)
        v_offset_256510 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1044, 26), 'v_offset')
        
        # Obtaining the type of the subscript
        int_256511 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1044, 46), 'int')
        # Getting the type of 'dir_vert' (line 1044)
        dir_vert_256512 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1044, 37), 'dir_vert')
        # Obtaining the member '__getitem__' of a type (line 1044)
        getitem___256513 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1044, 37), dir_vert_256512, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1044)
        subscript_call_result_256514 = invoke(stypy.reporting.localization.Localization(__file__, 1044, 37), getitem___256513, int_256511)
        
        # Applying the binary operator '*' (line 1044)
        result_mul_256515 = python_operator(stypy.reporting.localization.Localization(__file__, 1044, 26), '*', v_offset_256510, subscript_call_result_256514)
        
        # Applying the binary operator '+' (line 1044)
        result_add_256516 = python_operator(stypy.reporting.localization.Localization(__file__, 1044, 21), '+', ax_256509, result_mul_256515)
        
        # Assigning a type to the variable 'ax' (line 1044)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1044, 16), 'ax', result_add_256516)
        
        # Assigning a BinOp to a Name (line 1045):
        
        # Assigning a BinOp to a Name (line 1045):
        # Getting the type of 'ay' (line 1045)
        ay_256517 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1045, 21), 'ay')
        # Getting the type of 'v_offset' (line 1045)
        v_offset_256518 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1045, 26), 'v_offset')
        
        # Obtaining the type of the subscript
        int_256519 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1045, 46), 'int')
        # Getting the type of 'dir_vert' (line 1045)
        dir_vert_256520 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1045, 37), 'dir_vert')
        # Obtaining the member '__getitem__' of a type (line 1045)
        getitem___256521 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1045, 37), dir_vert_256520, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1045)
        subscript_call_result_256522 = invoke(stypy.reporting.localization.Localization(__file__, 1045, 37), getitem___256521, int_256519)
        
        # Applying the binary operator '*' (line 1045)
        result_mul_256523 = python_operator(stypy.reporting.localization.Localization(__file__, 1045, 26), '*', v_offset_256518, subscript_call_result_256522)
        
        # Applying the binary operator '+' (line 1045)
        result_add_256524 = python_operator(stypy.reporting.localization.Localization(__file__, 1045, 21), '+', ay_256517, result_mul_256523)
        
        # Assigning a type to the variable 'ay' (line 1045)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1045, 16), 'ay', result_add_256524)
        
        # Assigning a Dict to a Name (line 1047):
        
        # Assigning a Dict to a Name (line 1047):
        
        # Obtaining an instance of the builtin type 'dict' (line 1047)
        dict_256525 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1047, 32), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 1047)
        # Adding element type (key, value) (line 1047)
        unicode_256526 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1047, 33), 'unicode', u'left')
        unicode_256527 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1047, 41), 'unicode', u'start')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1047, 32), dict_256525, (unicode_256526, unicode_256527))
        # Adding element type (key, value) (line 1047)
        unicode_256528 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1047, 50), 'unicode', u'right')
        unicode_256529 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1047, 59), 'unicode', u'end')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1047, 32), dict_256525, (unicode_256528, unicode_256529))
        # Adding element type (key, value) (line 1047)
        unicode_256530 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1048, 33), 'unicode', u'center')
        unicode_256531 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1048, 43), 'unicode', u'middle')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1047, 32), dict_256525, (unicode_256530, unicode_256531))
        
        # Assigning a type to the variable 'ha_mpl_to_svg' (line 1047)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1047, 16), 'ha_mpl_to_svg', dict_256525)
        
        # Assigning a Subscript to a Subscript (line 1049):
        
        # Assigning a Subscript to a Subscript (line 1049):
        
        # Obtaining the type of the subscript
        
        # Call to get_ha(...): (line 1049)
        # Processing the call keyword arguments (line 1049)
        kwargs_256534 = {}
        # Getting the type of 'mtext' (line 1049)
        mtext_256532 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1049, 53), 'mtext', False)
        # Obtaining the member 'get_ha' of a type (line 1049)
        get_ha_256533 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1049, 53), mtext_256532, 'get_ha')
        # Calling get_ha(args, kwargs) (line 1049)
        get_ha_call_result_256535 = invoke(stypy.reporting.localization.Localization(__file__, 1049, 53), get_ha_256533, *[], **kwargs_256534)
        
        # Getting the type of 'ha_mpl_to_svg' (line 1049)
        ha_mpl_to_svg_256536 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1049, 39), 'ha_mpl_to_svg')
        # Obtaining the member '__getitem__' of a type (line 1049)
        getitem___256537 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1049, 39), ha_mpl_to_svg_256536, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1049)
        subscript_call_result_256538 = invoke(stypy.reporting.localization.Localization(__file__, 1049, 39), getitem___256537, get_ha_call_result_256535)
        
        # Getting the type of 'style' (line 1049)
        style_256539 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1049, 16), 'style')
        unicode_256540 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1049, 22), 'unicode', u'text-anchor')
        # Storing an element on a container (line 1049)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1049, 16), style_256539, (unicode_256540, subscript_call_result_256538))
        
        # Assigning a Call to a Subscript (line 1051):
        
        # Assigning a Call to a Subscript (line 1051):
        
        # Call to short_float_fmt(...): (line 1051)
        # Processing the call arguments (line 1051)
        # Getting the type of 'ax' (line 1051)
        ax_256542 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1051, 46), 'ax', False)
        # Processing the call keyword arguments (line 1051)
        kwargs_256543 = {}
        # Getting the type of 'short_float_fmt' (line 1051)
        short_float_fmt_256541 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1051, 30), 'short_float_fmt', False)
        # Calling short_float_fmt(args, kwargs) (line 1051)
        short_float_fmt_call_result_256544 = invoke(stypy.reporting.localization.Localization(__file__, 1051, 30), short_float_fmt_256541, *[ax_256542], **kwargs_256543)
        
        # Getting the type of 'attrib' (line 1051)
        attrib_256545 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1051, 16), 'attrib')
        unicode_256546 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1051, 23), 'unicode', u'x')
        # Storing an element on a container (line 1051)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1051, 16), attrib_256545, (unicode_256546, short_float_fmt_call_result_256544))
        
        # Assigning a Call to a Subscript (line 1052):
        
        # Assigning a Call to a Subscript (line 1052):
        
        # Call to short_float_fmt(...): (line 1052)
        # Processing the call arguments (line 1052)
        # Getting the type of 'ay' (line 1052)
        ay_256548 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1052, 46), 'ay', False)
        # Processing the call keyword arguments (line 1052)
        kwargs_256549 = {}
        # Getting the type of 'short_float_fmt' (line 1052)
        short_float_fmt_256547 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1052, 30), 'short_float_fmt', False)
        # Calling short_float_fmt(args, kwargs) (line 1052)
        short_float_fmt_call_result_256550 = invoke(stypy.reporting.localization.Localization(__file__, 1052, 30), short_float_fmt_256547, *[ay_256548], **kwargs_256549)
        
        # Getting the type of 'attrib' (line 1052)
        attrib_256551 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1052, 16), 'attrib')
        unicode_256552 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1052, 23), 'unicode', u'y')
        # Storing an element on a container (line 1052)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1052, 16), attrib_256551, (unicode_256552, short_float_fmt_call_result_256550))
        
        # Assigning a Call to a Subscript (line 1053):
        
        # Assigning a Call to a Subscript (line 1053):
        
        # Call to generate_css(...): (line 1053)
        # Processing the call arguments (line 1053)
        # Getting the type of 'style' (line 1053)
        style_256554 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1053, 47), 'style', False)
        # Processing the call keyword arguments (line 1053)
        kwargs_256555 = {}
        # Getting the type of 'generate_css' (line 1053)
        generate_css_256553 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1053, 34), 'generate_css', False)
        # Calling generate_css(args, kwargs) (line 1053)
        generate_css_call_result_256556 = invoke(stypy.reporting.localization.Localization(__file__, 1053, 34), generate_css_256553, *[style_256554], **kwargs_256555)
        
        # Getting the type of 'attrib' (line 1053)
        attrib_256557 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1053, 16), 'attrib')
        unicode_256558 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1053, 23), 'unicode', u'style')
        # Storing an element on a container (line 1053)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1053, 16), attrib_256557, (unicode_256558, generate_css_call_result_256556))
        
        # Assigning a BinOp to a Subscript (line 1054):
        
        # Assigning a BinOp to a Subscript (line 1054):
        unicode_256559 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1054, 38), 'unicode', u'rotate(%s, %s, %s)')
        
        # Obtaining an instance of the builtin type 'tuple' (line 1055)
        tuple_256560 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1055, 20), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1055)
        # Adding element type (line 1055)
        
        # Call to short_float_fmt(...): (line 1055)
        # Processing the call arguments (line 1055)
        
        # Getting the type of 'angle' (line 1055)
        angle_256562 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1055, 37), 'angle', False)
        # Applying the 'usub' unary operator (line 1055)
        result___neg___256563 = python_operator(stypy.reporting.localization.Localization(__file__, 1055, 36), 'usub', angle_256562)
        
        # Processing the call keyword arguments (line 1055)
        kwargs_256564 = {}
        # Getting the type of 'short_float_fmt' (line 1055)
        short_float_fmt_256561 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1055, 20), 'short_float_fmt', False)
        # Calling short_float_fmt(args, kwargs) (line 1055)
        short_float_fmt_call_result_256565 = invoke(stypy.reporting.localization.Localization(__file__, 1055, 20), short_float_fmt_256561, *[result___neg___256563], **kwargs_256564)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1055, 20), tuple_256560, short_float_fmt_call_result_256565)
        # Adding element type (line 1055)
        
        # Call to short_float_fmt(...): (line 1056)
        # Processing the call arguments (line 1056)
        # Getting the type of 'ax' (line 1056)
        ax_256567 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1056, 36), 'ax', False)
        # Processing the call keyword arguments (line 1056)
        kwargs_256568 = {}
        # Getting the type of 'short_float_fmt' (line 1056)
        short_float_fmt_256566 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1056, 20), 'short_float_fmt', False)
        # Calling short_float_fmt(args, kwargs) (line 1056)
        short_float_fmt_call_result_256569 = invoke(stypy.reporting.localization.Localization(__file__, 1056, 20), short_float_fmt_256566, *[ax_256567], **kwargs_256568)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1055, 20), tuple_256560, short_float_fmt_call_result_256569)
        # Adding element type (line 1055)
        
        # Call to short_float_fmt(...): (line 1057)
        # Processing the call arguments (line 1057)
        # Getting the type of 'ay' (line 1057)
        ay_256571 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1057, 36), 'ay', False)
        # Processing the call keyword arguments (line 1057)
        kwargs_256572 = {}
        # Getting the type of 'short_float_fmt' (line 1057)
        short_float_fmt_256570 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1057, 20), 'short_float_fmt', False)
        # Calling short_float_fmt(args, kwargs) (line 1057)
        short_float_fmt_call_result_256573 = invoke(stypy.reporting.localization.Localization(__file__, 1057, 20), short_float_fmt_256570, *[ay_256571], **kwargs_256572)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1055, 20), tuple_256560, short_float_fmt_call_result_256573)
        
        # Applying the binary operator '%' (line 1054)
        result_mod_256574 = python_operator(stypy.reporting.localization.Localization(__file__, 1054, 38), '%', unicode_256559, tuple_256560)
        
        # Getting the type of 'attrib' (line 1054)
        attrib_256575 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1054, 16), 'attrib')
        unicode_256576 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1054, 23), 'unicode', u'transform')
        # Storing an element on a container (line 1054)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1054, 16), attrib_256575, (unicode_256576, result_mod_256574))
        
        # Call to element(...): (line 1058)
        # Processing the call arguments (line 1058)
        unicode_256579 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1058, 31), 'unicode', u'text')
        # Getting the type of 's' (line 1058)
        s_256580 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1058, 39), 's', False)
        # Processing the call keyword arguments (line 1058)
        # Getting the type of 'attrib' (line 1058)
        attrib_256581 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1058, 49), 'attrib', False)
        keyword_256582 = attrib_256581
        kwargs_256583 = {'attrib': keyword_256582}
        # Getting the type of 'writer' (line 1058)
        writer_256577 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1058, 16), 'writer', False)
        # Obtaining the member 'element' of a type (line 1058)
        element_256578 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1058, 16), writer_256577, 'element')
        # Calling element(args, kwargs) (line 1058)
        element_call_result_256584 = invoke(stypy.reporting.localization.Localization(__file__, 1058, 16), element_256578, *[unicode_256579, s_256580], **kwargs_256583)
        
        # SSA branch for the else part of an if statement (line 1029)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Call to a Subscript (line 1060):
        
        # Assigning a Call to a Subscript (line 1060):
        
        # Call to generate_transform(...): (line 1060)
        # Processing the call arguments (line 1060)
        
        # Obtaining an instance of the builtin type 'list' (line 1060)
        list_256586 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1060, 57), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1060)
        # Adding element type (line 1060)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1061)
        tuple_256587 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1061, 21), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1061)
        # Adding element type (line 1061)
        unicode_256588 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1061, 21), 'unicode', u'translate')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1061, 21), tuple_256587, unicode_256588)
        # Adding element type (line 1061)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1061)
        tuple_256589 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1061, 35), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1061)
        # Adding element type (line 1061)
        # Getting the type of 'x' (line 1061)
        x_256590 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1061, 35), 'x', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1061, 35), tuple_256589, x_256590)
        # Adding element type (line 1061)
        # Getting the type of 'y' (line 1061)
        y_256591 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1061, 38), 'y', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1061, 35), tuple_256589, y_256591)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1061, 21), tuple_256587, tuple_256589)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1060, 57), list_256586, tuple_256587)
        # Adding element type (line 1060)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1062)
        tuple_256592 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1062, 21), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1062)
        # Adding element type (line 1062)
        unicode_256593 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1062, 21), 'unicode', u'rotate')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1062, 21), tuple_256592, unicode_256593)
        # Adding element type (line 1062)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1062)
        tuple_256594 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1062, 32), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1062)
        # Adding element type (line 1062)
        
        # Getting the type of 'angle' (line 1062)
        angle_256595 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1062, 33), 'angle', False)
        # Applying the 'usub' unary operator (line 1062)
        result___neg___256596 = python_operator(stypy.reporting.localization.Localization(__file__, 1062, 32), 'usub', angle_256595)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1062, 32), tuple_256594, result___neg___256596)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1062, 21), tuple_256592, tuple_256594)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1060, 57), list_256586, tuple_256592)
        
        # Processing the call keyword arguments (line 1060)
        kwargs_256597 = {}
        # Getting the type of 'generate_transform' (line 1060)
        generate_transform_256585 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1060, 38), 'generate_transform', False)
        # Calling generate_transform(args, kwargs) (line 1060)
        generate_transform_call_result_256598 = invoke(stypy.reporting.localization.Localization(__file__, 1060, 38), generate_transform_256585, *[list_256586], **kwargs_256597)
        
        # Getting the type of 'attrib' (line 1060)
        attrib_256599 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1060, 16), 'attrib')
        unicode_256600 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1060, 23), 'unicode', u'transform')
        # Storing an element on a container (line 1060)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1060, 16), attrib_256599, (unicode_256600, generate_transform_call_result_256598))
        
        # Call to element(...): (line 1064)
        # Processing the call arguments (line 1064)
        unicode_256603 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1064, 31), 'unicode', u'text')
        # Getting the type of 's' (line 1064)
        s_256604 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1064, 39), 's', False)
        # Processing the call keyword arguments (line 1064)
        # Getting the type of 'attrib' (line 1064)
        attrib_256605 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1064, 49), 'attrib', False)
        keyword_256606 = attrib_256605
        kwargs_256607 = {'attrib': keyword_256606}
        # Getting the type of 'writer' (line 1064)
        writer_256601 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1064, 16), 'writer', False)
        # Obtaining the member 'element' of a type (line 1064)
        element_256602 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1064, 16), writer_256601, 'element')
        # Calling element(args, kwargs) (line 1064)
        element_call_result_256608 = invoke(stypy.reporting.localization.Localization(__file__, 1064, 16), element_256602, *[unicode_256603, s_256604], **kwargs_256607)
        
        # SSA join for if statement (line 1029)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        
        # Obtaining the type of the subscript
        unicode_256609 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1066, 24), 'unicode', u'svg.fonttype')
        # Getting the type of 'rcParams' (line 1066)
        rcParams_256610 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1066, 15), 'rcParams')
        # Obtaining the member '__getitem__' of a type (line 1066)
        getitem___256611 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1066, 15), rcParams_256610, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1066)
        subscript_call_result_256612 = invoke(stypy.reporting.localization.Localization(__file__, 1066, 15), getitem___256611, unicode_256609)
        
        unicode_256613 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1066, 43), 'unicode', u'svgfont')
        # Applying the binary operator '==' (line 1066)
        result_eq_256614 = python_operator(stypy.reporting.localization.Localization(__file__, 1066, 15), '==', subscript_call_result_256612, unicode_256613)
        
        # Testing the type of an if condition (line 1066)
        if_condition_256615 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1066, 12), result_eq_256614)
        # Assigning a type to the variable 'if_condition_256615' (line 1066)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1066, 12), 'if_condition_256615', if_condition_256615)
        # SSA begins for if statement (line 1066)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 1067):
        
        # Assigning a Call to a Name (line 1067):
        
        # Call to setdefault(...): (line 1067)
        # Processing the call arguments (line 1067)
        # Getting the type of 'font' (line 1067)
        font_256619 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1067, 49), 'font', False)
        # Obtaining the member 'fname' of a type (line 1067)
        fname_256620 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1067, 49), font_256619, 'fname')
        
        # Call to set(...): (line 1067)
        # Processing the call keyword arguments (line 1067)
        kwargs_256622 = {}
        # Getting the type of 'set' (line 1067)
        set_256621 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1067, 61), 'set', False)
        # Calling set(args, kwargs) (line 1067)
        set_call_result_256623 = invoke(stypy.reporting.localization.Localization(__file__, 1067, 61), set_256621, *[], **kwargs_256622)
        
        # Processing the call keyword arguments (line 1067)
        kwargs_256624 = {}
        # Getting the type of 'self' (line 1067)
        self_256616 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1067, 26), 'self', False)
        # Obtaining the member '_fonts' of a type (line 1067)
        _fonts_256617 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1067, 26), self_256616, '_fonts')
        # Obtaining the member 'setdefault' of a type (line 1067)
        setdefault_256618 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1067, 26), _fonts_256617, 'setdefault')
        # Calling setdefault(args, kwargs) (line 1067)
        setdefault_call_result_256625 = invoke(stypy.reporting.localization.Localization(__file__, 1067, 26), setdefault_256618, *[fname_256620, set_call_result_256623], **kwargs_256624)
        
        # Assigning a type to the variable 'fontset' (line 1067)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1067, 16), 'fontset', setdefault_call_result_256625)
        
        # Getting the type of 's' (line 1068)
        s_256626 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1068, 25), 's')
        # Testing the type of a for loop iterable (line 1068)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1068, 16), s_256626)
        # Getting the type of the for loop variable (line 1068)
        for_loop_var_256627 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1068, 16), s_256626)
        # Assigning a type to the variable 'c' (line 1068)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1068, 16), 'c', for_loop_var_256627)
        # SSA begins for a for statement (line 1068)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to add(...): (line 1069)
        # Processing the call arguments (line 1069)
        
        # Call to ord(...): (line 1069)
        # Processing the call arguments (line 1069)
        # Getting the type of 'c' (line 1069)
        c_256631 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1069, 36), 'c', False)
        # Processing the call keyword arguments (line 1069)
        kwargs_256632 = {}
        # Getting the type of 'ord' (line 1069)
        ord_256630 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1069, 32), 'ord', False)
        # Calling ord(args, kwargs) (line 1069)
        ord_call_result_256633 = invoke(stypy.reporting.localization.Localization(__file__, 1069, 32), ord_256630, *[c_256631], **kwargs_256632)
        
        # Processing the call keyword arguments (line 1069)
        kwargs_256634 = {}
        # Getting the type of 'fontset' (line 1069)
        fontset_256628 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1069, 20), 'fontset', False)
        # Obtaining the member 'add' of a type (line 1069)
        add_256629 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1069, 20), fontset_256628, 'add')
        # Calling add(args, kwargs) (line 1069)
        add_call_result_256635 = invoke(stypy.reporting.localization.Localization(__file__, 1069, 20), add_256629, *[ord_call_result_256633], **kwargs_256634)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 1066)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA branch for the else part of an if statement (line 1012)
        module_type_store.open_ssa_branch('else')
        
        # Call to comment(...): (line 1071)
        # Processing the call arguments (line 1071)
        # Getting the type of 's' (line 1071)
        s_256638 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1071, 27), 's', False)
        # Processing the call keyword arguments (line 1071)
        kwargs_256639 = {}
        # Getting the type of 'writer' (line 1071)
        writer_256636 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1071, 12), 'writer', False)
        # Obtaining the member 'comment' of a type (line 1071)
        comment_256637 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1071, 12), writer_256636, 'comment')
        # Calling comment(args, kwargs) (line 1071)
        comment_call_result_256640 = invoke(stypy.reporting.localization.Localization(__file__, 1071, 12), comment_256637, *[s_256638], **kwargs_256639)
        
        
        # Assigning a Call to a Tuple (line 1073):
        
        # Assigning a Call to a Name:
        
        # Call to parse(...): (line 1074)
        # Processing the call arguments (line 1074)
        # Getting the type of 's' (line 1074)
        s_256644 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1074, 46), 's', False)
        int_256645 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1074, 49), 'int')
        # Getting the type of 'prop' (line 1074)
        prop_256646 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1074, 53), 'prop', False)
        # Processing the call keyword arguments (line 1074)
        kwargs_256647 = {}
        # Getting the type of 'self' (line 1074)
        self_256641 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1074, 19), 'self', False)
        # Obtaining the member 'mathtext_parser' of a type (line 1074)
        mathtext_parser_256642 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1074, 19), self_256641, 'mathtext_parser')
        # Obtaining the member 'parse' of a type (line 1074)
        parse_256643 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1074, 19), mathtext_parser_256642, 'parse')
        # Calling parse(args, kwargs) (line 1074)
        parse_call_result_256648 = invoke(stypy.reporting.localization.Localization(__file__, 1074, 19), parse_256643, *[s_256644, int_256645, prop_256646], **kwargs_256647)
        
        # Assigning a type to the variable 'call_assignment_252831' (line 1073)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1073, 12), 'call_assignment_252831', parse_call_result_256648)
        
        # Assigning a Call to a Name (line 1073):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_256651 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1073, 12), 'int')
        # Processing the call keyword arguments
        kwargs_256652 = {}
        # Getting the type of 'call_assignment_252831' (line 1073)
        call_assignment_252831_256649 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1073, 12), 'call_assignment_252831', False)
        # Obtaining the member '__getitem__' of a type (line 1073)
        getitem___256650 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1073, 12), call_assignment_252831_256649, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_256653 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___256650, *[int_256651], **kwargs_256652)
        
        # Assigning a type to the variable 'call_assignment_252832' (line 1073)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1073, 12), 'call_assignment_252832', getitem___call_result_256653)
        
        # Assigning a Name to a Name (line 1073):
        # Getting the type of 'call_assignment_252832' (line 1073)
        call_assignment_252832_256654 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1073, 12), 'call_assignment_252832')
        # Assigning a type to the variable 'width' (line 1073)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1073, 12), 'width', call_assignment_252832_256654)
        
        # Assigning a Call to a Name (line 1073):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_256657 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1073, 12), 'int')
        # Processing the call keyword arguments
        kwargs_256658 = {}
        # Getting the type of 'call_assignment_252831' (line 1073)
        call_assignment_252831_256655 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1073, 12), 'call_assignment_252831', False)
        # Obtaining the member '__getitem__' of a type (line 1073)
        getitem___256656 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1073, 12), call_assignment_252831_256655, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_256659 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___256656, *[int_256657], **kwargs_256658)
        
        # Assigning a type to the variable 'call_assignment_252833' (line 1073)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1073, 12), 'call_assignment_252833', getitem___call_result_256659)
        
        # Assigning a Name to a Name (line 1073):
        # Getting the type of 'call_assignment_252833' (line 1073)
        call_assignment_252833_256660 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1073, 12), 'call_assignment_252833')
        # Assigning a type to the variable 'height' (line 1073)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1073, 19), 'height', call_assignment_252833_256660)
        
        # Assigning a Call to a Name (line 1073):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_256663 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1073, 12), 'int')
        # Processing the call keyword arguments
        kwargs_256664 = {}
        # Getting the type of 'call_assignment_252831' (line 1073)
        call_assignment_252831_256661 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1073, 12), 'call_assignment_252831', False)
        # Obtaining the member '__getitem__' of a type (line 1073)
        getitem___256662 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1073, 12), call_assignment_252831_256661, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_256665 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___256662, *[int_256663], **kwargs_256664)
        
        # Assigning a type to the variable 'call_assignment_252834' (line 1073)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1073, 12), 'call_assignment_252834', getitem___call_result_256665)
        
        # Assigning a Name to a Name (line 1073):
        # Getting the type of 'call_assignment_252834' (line 1073)
        call_assignment_252834_256666 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1073, 12), 'call_assignment_252834')
        # Assigning a type to the variable 'descent' (line 1073)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1073, 27), 'descent', call_assignment_252834_256666)
        
        # Assigning a Call to a Name (line 1073):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_256669 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1073, 12), 'int')
        # Processing the call keyword arguments
        kwargs_256670 = {}
        # Getting the type of 'call_assignment_252831' (line 1073)
        call_assignment_252831_256667 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1073, 12), 'call_assignment_252831', False)
        # Obtaining the member '__getitem__' of a type (line 1073)
        getitem___256668 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1073, 12), call_assignment_252831_256667, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_256671 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___256668, *[int_256669], **kwargs_256670)
        
        # Assigning a type to the variable 'call_assignment_252835' (line 1073)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1073, 12), 'call_assignment_252835', getitem___call_result_256671)
        
        # Assigning a Name to a Name (line 1073):
        # Getting the type of 'call_assignment_252835' (line 1073)
        call_assignment_252835_256672 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1073, 12), 'call_assignment_252835')
        # Assigning a type to the variable 'svg_elements' (line 1073)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1073, 36), 'svg_elements', call_assignment_252835_256672)
        
        # Assigning a Call to a Name (line 1073):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_256675 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1073, 12), 'int')
        # Processing the call keyword arguments
        kwargs_256676 = {}
        # Getting the type of 'call_assignment_252831' (line 1073)
        call_assignment_252831_256673 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1073, 12), 'call_assignment_252831', False)
        # Obtaining the member '__getitem__' of a type (line 1073)
        getitem___256674 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1073, 12), call_assignment_252831_256673, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_256677 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___256674, *[int_256675], **kwargs_256676)
        
        # Assigning a type to the variable 'call_assignment_252836' (line 1073)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1073, 12), 'call_assignment_252836', getitem___call_result_256677)
        
        # Assigning a Name to a Name (line 1073):
        # Getting the type of 'call_assignment_252836' (line 1073)
        call_assignment_252836_256678 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1073, 12), 'call_assignment_252836')
        # Assigning a type to the variable 'used_characters' (line 1073)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1073, 50), 'used_characters', call_assignment_252836_256678)
        
        # Assigning a Attribute to a Name (line 1075):
        
        # Assigning a Attribute to a Name (line 1075):
        # Getting the type of 'svg_elements' (line 1075)
        svg_elements_256679 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1075, 25), 'svg_elements')
        # Obtaining the member 'svg_glyphs' of a type (line 1075)
        svg_glyphs_256680 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1075, 25), svg_elements_256679, 'svg_glyphs')
        # Assigning a type to the variable 'svg_glyphs' (line 1075)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1075, 12), 'svg_glyphs', svg_glyphs_256680)
        
        # Assigning a Attribute to a Name (line 1076):
        
        # Assigning a Attribute to a Name (line 1076):
        # Getting the type of 'svg_elements' (line 1076)
        svg_elements_256681 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1076, 24), 'svg_elements')
        # Obtaining the member 'svg_rects' of a type (line 1076)
        svg_rects_256682 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1076, 24), svg_elements_256681, 'svg_rects')
        # Assigning a type to the variable 'svg_rects' (line 1076)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1076, 12), 'svg_rects', svg_rects_256682)
        
        # Assigning a Dict to a Name (line 1078):
        
        # Assigning a Dict to a Name (line 1078):
        
        # Obtaining an instance of the builtin type 'dict' (line 1078)
        dict_256683 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1078, 21), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 1078)
        
        # Assigning a type to the variable 'attrib' (line 1078)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1078, 12), 'attrib', dict_256683)
        
        # Assigning a Call to a Subscript (line 1079):
        
        # Assigning a Call to a Subscript (line 1079):
        
        # Call to generate_css(...): (line 1079)
        # Processing the call arguments (line 1079)
        # Getting the type of 'style' (line 1079)
        style_256685 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1079, 43), 'style', False)
        # Processing the call keyword arguments (line 1079)
        kwargs_256686 = {}
        # Getting the type of 'generate_css' (line 1079)
        generate_css_256684 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1079, 30), 'generate_css', False)
        # Calling generate_css(args, kwargs) (line 1079)
        generate_css_call_result_256687 = invoke(stypy.reporting.localization.Localization(__file__, 1079, 30), generate_css_256684, *[style_256685], **kwargs_256686)
        
        # Getting the type of 'attrib' (line 1079)
        attrib_256688 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1079, 12), 'attrib')
        unicode_256689 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1079, 19), 'unicode', u'style')
        # Storing an element on a container (line 1079)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1079, 12), attrib_256688, (unicode_256689, generate_css_call_result_256687))
        
        # Assigning a Call to a Subscript (line 1080):
        
        # Assigning a Call to a Subscript (line 1080):
        
        # Call to generate_transform(...): (line 1080)
        # Processing the call arguments (line 1080)
        
        # Obtaining an instance of the builtin type 'list' (line 1080)
        list_256691 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1080, 53), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1080)
        # Adding element type (line 1080)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1081)
        tuple_256692 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1081, 17), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1081)
        # Adding element type (line 1081)
        unicode_256693 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1081, 17), 'unicode', u'translate')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1081, 17), tuple_256692, unicode_256693)
        # Adding element type (line 1081)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1081)
        tuple_256694 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1081, 31), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1081)
        # Adding element type (line 1081)
        # Getting the type of 'x' (line 1081)
        x_256695 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1081, 31), 'x', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1081, 31), tuple_256694, x_256695)
        # Adding element type (line 1081)
        # Getting the type of 'y' (line 1081)
        y_256696 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1081, 34), 'y', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1081, 31), tuple_256694, y_256696)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1081, 17), tuple_256692, tuple_256694)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1080, 53), list_256691, tuple_256692)
        # Adding element type (line 1080)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1082)
        tuple_256697 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1082, 17), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1082)
        # Adding element type (line 1082)
        unicode_256698 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1082, 17), 'unicode', u'rotate')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1082, 17), tuple_256697, unicode_256698)
        # Adding element type (line 1082)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1082)
        tuple_256699 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1082, 28), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1082)
        # Adding element type (line 1082)
        
        # Getting the type of 'angle' (line 1082)
        angle_256700 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1082, 29), 'angle', False)
        # Applying the 'usub' unary operator (line 1082)
        result___neg___256701 = python_operator(stypy.reporting.localization.Localization(__file__, 1082, 28), 'usub', angle_256700)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1082, 28), tuple_256699, result___neg___256701)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1082, 17), tuple_256697, tuple_256699)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1080, 53), list_256691, tuple_256697)
        
        # Processing the call keyword arguments (line 1080)
        kwargs_256702 = {}
        # Getting the type of 'generate_transform' (line 1080)
        generate_transform_256690 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1080, 34), 'generate_transform', False)
        # Calling generate_transform(args, kwargs) (line 1080)
        generate_transform_call_result_256703 = invoke(stypy.reporting.localization.Localization(__file__, 1080, 34), generate_transform_256690, *[list_256691], **kwargs_256702)
        
        # Getting the type of 'attrib' (line 1080)
        attrib_256704 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1080, 12), 'attrib')
        unicode_256705 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1080, 19), 'unicode', u'transform')
        # Storing an element on a container (line 1080)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1080, 12), attrib_256704, (unicode_256705, generate_transform_call_result_256703))
        
        # Call to start(...): (line 1087)
        # Processing the call arguments (line 1087)
        unicode_256708 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1087, 25), 'unicode', u'g')
        # Processing the call keyword arguments (line 1087)
        # Getting the type of 'attrib' (line 1087)
        attrib_256709 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1087, 37), 'attrib', False)
        keyword_256710 = attrib_256709
        kwargs_256711 = {'attrib': keyword_256710}
        # Getting the type of 'writer' (line 1087)
        writer_256706 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1087, 12), 'writer', False)
        # Obtaining the member 'start' of a type (line 1087)
        start_256707 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1087, 12), writer_256706, 'start')
        # Calling start(args, kwargs) (line 1087)
        start_call_result_256712 = invoke(stypy.reporting.localization.Localization(__file__, 1087, 12), start_256707, *[unicode_256708], **kwargs_256711)
        
        
        # Call to start(...): (line 1089)
        # Processing the call arguments (line 1089)
        unicode_256715 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1089, 25), 'unicode', u'text')
        # Processing the call keyword arguments (line 1089)
        kwargs_256716 = {}
        # Getting the type of 'writer' (line 1089)
        writer_256713 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1089, 12), 'writer', False)
        # Obtaining the member 'start' of a type (line 1089)
        start_256714 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1089, 12), writer_256713, 'start')
        # Calling start(args, kwargs) (line 1089)
        start_call_result_256717 = invoke(stypy.reporting.localization.Localization(__file__, 1089, 12), start_256714, *[unicode_256715], **kwargs_256716)
        
        
        # Assigning a Call to a Name (line 1093):
        
        # Assigning a Call to a Name (line 1093):
        
        # Call to OrderedDict(...): (line 1093)
        # Processing the call keyword arguments (line 1093)
        kwargs_256719 = {}
        # Getting the type of 'OrderedDict' (line 1093)
        OrderedDict_256718 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1093, 20), 'OrderedDict', False)
        # Calling OrderedDict(args, kwargs) (line 1093)
        OrderedDict_call_result_256720 = invoke(stypy.reporting.localization.Localization(__file__, 1093, 20), OrderedDict_256718, *[], **kwargs_256719)
        
        # Assigning a type to the variable 'spans' (line 1093)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1093, 12), 'spans', OrderedDict_call_result_256720)
        
        # Getting the type of 'svg_glyphs' (line 1094)
        svg_glyphs_256721 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1094, 66), 'svg_glyphs')
        # Testing the type of a for loop iterable (line 1094)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1094, 12), svg_glyphs_256721)
        # Getting the type of the for loop variable (line 1094)
        for_loop_var_256722 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1094, 12), svg_glyphs_256721)
        # Assigning a type to the variable 'font' (line 1094)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1094, 12), 'font', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1094, 12), for_loop_var_256722))
        # Assigning a type to the variable 'fontsize' (line 1094)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1094, 12), 'fontsize', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1094, 12), for_loop_var_256722))
        # Assigning a type to the variable 'thetext' (line 1094)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1094, 12), 'thetext', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1094, 12), for_loop_var_256722))
        # Assigning a type to the variable 'new_x' (line 1094)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1094, 12), 'new_x', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1094, 12), for_loop_var_256722))
        # Assigning a type to the variable 'new_y' (line 1094)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1094, 12), 'new_y', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1094, 12), for_loop_var_256722))
        # Assigning a type to the variable 'metrics' (line 1094)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1094, 12), 'metrics', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1094, 12), for_loop_var_256722))
        # SSA begins for a for statement (line 1094)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 1095):
        
        # Assigning a Call to a Name (line 1095):
        
        # Call to generate_css(...): (line 1095)
        # Processing the call arguments (line 1095)
        
        # Obtaining an instance of the builtin type 'dict' (line 1095)
        dict_256724 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1095, 37), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 1095)
        # Adding element type (key, value) (line 1095)
        unicode_256725 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1096, 20), 'unicode', u'font-size')
        
        # Call to short_float_fmt(...): (line 1096)
        # Processing the call arguments (line 1096)
        # Getting the type of 'fontsize' (line 1096)
        fontsize_256727 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1096, 49), 'fontsize', False)
        # Processing the call keyword arguments (line 1096)
        kwargs_256728 = {}
        # Getting the type of 'short_float_fmt' (line 1096)
        short_float_fmt_256726 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1096, 33), 'short_float_fmt', False)
        # Calling short_float_fmt(args, kwargs) (line 1096)
        short_float_fmt_call_result_256729 = invoke(stypy.reporting.localization.Localization(__file__, 1096, 33), short_float_fmt_256726, *[fontsize_256727], **kwargs_256728)
        
        unicode_256730 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1096, 61), 'unicode', u'px')
        # Applying the binary operator '+' (line 1096)
        result_add_256731 = python_operator(stypy.reporting.localization.Localization(__file__, 1096, 33), '+', short_float_fmt_call_result_256729, unicode_256730)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1095, 37), dict_256724, (unicode_256725, result_add_256731))
        # Adding element type (key, value) (line 1095)
        unicode_256732 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1097, 20), 'unicode', u'font-family')
        # Getting the type of 'font' (line 1097)
        font_256733 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1097, 35), 'font', False)
        # Obtaining the member 'family_name' of a type (line 1097)
        family_name_256734 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1097, 35), font_256733, 'family_name')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1095, 37), dict_256724, (unicode_256732, family_name_256734))
        # Adding element type (key, value) (line 1095)
        unicode_256735 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1098, 20), 'unicode', u'font-style')
        
        # Call to lower(...): (line 1098)
        # Processing the call keyword arguments (line 1098)
        kwargs_256739 = {}
        # Getting the type of 'font' (line 1098)
        font_256736 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1098, 34), 'font', False)
        # Obtaining the member 'style_name' of a type (line 1098)
        style_name_256737 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1098, 34), font_256736, 'style_name')
        # Obtaining the member 'lower' of a type (line 1098)
        lower_256738 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1098, 34), style_name_256737, 'lower')
        # Calling lower(args, kwargs) (line 1098)
        lower_call_result_256740 = invoke(stypy.reporting.localization.Localization(__file__, 1098, 34), lower_256738, *[], **kwargs_256739)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1095, 37), dict_256724, (unicode_256735, lower_call_result_256740))
        # Adding element type (key, value) (line 1095)
        unicode_256741 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1099, 20), 'unicode', u'font-weight')
        
        # Call to lower(...): (line 1099)
        # Processing the call keyword arguments (line 1099)
        kwargs_256745 = {}
        # Getting the type of 'font' (line 1099)
        font_256742 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1099, 35), 'font', False)
        # Obtaining the member 'style_name' of a type (line 1099)
        style_name_256743 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1099, 35), font_256742, 'style_name')
        # Obtaining the member 'lower' of a type (line 1099)
        lower_256744 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1099, 35), style_name_256743, 'lower')
        # Calling lower(args, kwargs) (line 1099)
        lower_call_result_256746 = invoke(stypy.reporting.localization.Localization(__file__, 1099, 35), lower_256744, *[], **kwargs_256745)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1095, 37), dict_256724, (unicode_256741, lower_call_result_256746))
        
        # Processing the call keyword arguments (line 1095)
        kwargs_256747 = {}
        # Getting the type of 'generate_css' (line 1095)
        generate_css_256723 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1095, 24), 'generate_css', False)
        # Calling generate_css(args, kwargs) (line 1095)
        generate_css_call_result_256748 = invoke(stypy.reporting.localization.Localization(__file__, 1095, 24), generate_css_256723, *[dict_256724], **kwargs_256747)
        
        # Assigning a type to the variable 'style' (line 1095)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1095, 16), 'style', generate_css_call_result_256748)
        
        
        # Getting the type of 'thetext' (line 1100)
        thetext_256749 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1100, 19), 'thetext')
        int_256750 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1100, 30), 'int')
        # Applying the binary operator '==' (line 1100)
        result_eq_256751 = python_operator(stypy.reporting.localization.Localization(__file__, 1100, 19), '==', thetext_256749, int_256750)
        
        # Testing the type of an if condition (line 1100)
        if_condition_256752 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1100, 16), result_eq_256751)
        # Assigning a type to the variable 'if_condition_256752' (line 1100)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1100, 16), 'if_condition_256752', if_condition_256752)
        # SSA begins for if statement (line 1100)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Num to a Name (line 1101):
        
        # Assigning a Num to a Name (line 1101):
        int_256753 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1101, 30), 'int')
        # Assigning a type to the variable 'thetext' (line 1101)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1101, 20), 'thetext', int_256753)
        # SSA join for if statement (line 1100)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to append(...): (line 1102)
        # Processing the call arguments (line 1102)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1102)
        tuple_256761 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1102, 52), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1102)
        # Adding element type (line 1102)
        # Getting the type of 'new_x' (line 1102)
        new_x_256762 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1102, 52), 'new_x', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1102, 52), tuple_256761, new_x_256762)
        # Adding element type (line 1102)
        
        # Getting the type of 'new_y' (line 1102)
        new_y_256763 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1102, 60), 'new_y', False)
        # Applying the 'usub' unary operator (line 1102)
        result___neg___256764 = python_operator(stypy.reporting.localization.Localization(__file__, 1102, 59), 'usub', new_y_256763)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1102, 52), tuple_256761, result___neg___256764)
        # Adding element type (line 1102)
        # Getting the type of 'thetext' (line 1102)
        thetext_256765 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1102, 67), 'thetext', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1102, 52), tuple_256761, thetext_256765)
        
        # Processing the call keyword arguments (line 1102)
        kwargs_256766 = {}
        
        # Call to setdefault(...): (line 1102)
        # Processing the call arguments (line 1102)
        # Getting the type of 'style' (line 1102)
        style_256756 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1102, 33), 'style', False)
        
        # Obtaining an instance of the builtin type 'list' (line 1102)
        list_256757 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1102, 40), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1102)
        
        # Processing the call keyword arguments (line 1102)
        kwargs_256758 = {}
        # Getting the type of 'spans' (line 1102)
        spans_256754 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1102, 16), 'spans', False)
        # Obtaining the member 'setdefault' of a type (line 1102)
        setdefault_256755 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1102, 16), spans_256754, 'setdefault')
        # Calling setdefault(args, kwargs) (line 1102)
        setdefault_call_result_256759 = invoke(stypy.reporting.localization.Localization(__file__, 1102, 16), setdefault_256755, *[style_256756, list_256757], **kwargs_256758)
        
        # Obtaining the member 'append' of a type (line 1102)
        append_256760 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1102, 16), setdefault_call_result_256759, 'append')
        # Calling append(args, kwargs) (line 1102)
        append_call_result_256767 = invoke(stypy.reporting.localization.Localization(__file__, 1102, 16), append_256760, *[tuple_256761], **kwargs_256766)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        
        # Obtaining the type of the subscript
        unicode_256768 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1104, 24), 'unicode', u'svg.fonttype')
        # Getting the type of 'rcParams' (line 1104)
        rcParams_256769 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1104, 15), 'rcParams')
        # Obtaining the member '__getitem__' of a type (line 1104)
        getitem___256770 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1104, 15), rcParams_256769, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1104)
        subscript_call_result_256771 = invoke(stypy.reporting.localization.Localization(__file__, 1104, 15), getitem___256770, unicode_256768)
        
        unicode_256772 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1104, 43), 'unicode', u'svgfont')
        # Applying the binary operator '==' (line 1104)
        result_eq_256773 = python_operator(stypy.reporting.localization.Localization(__file__, 1104, 15), '==', subscript_call_result_256771, unicode_256772)
        
        # Testing the type of an if condition (line 1104)
        if_condition_256774 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1104, 12), result_eq_256773)
        # Assigning a type to the variable 'if_condition_256774' (line 1104)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1104, 12), 'if_condition_256774', if_condition_256774)
        # SSA begins for if statement (line 1104)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'svg_glyphs' (line 1105)
        svg_glyphs_256775 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1105, 70), 'svg_glyphs')
        # Testing the type of a for loop iterable (line 1105)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1105, 16), svg_glyphs_256775)
        # Getting the type of the for loop variable (line 1105)
        for_loop_var_256776 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1105, 16), svg_glyphs_256775)
        # Assigning a type to the variable 'font' (line 1105)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1105, 16), 'font', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1105, 16), for_loop_var_256776))
        # Assigning a type to the variable 'fontsize' (line 1105)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1105, 16), 'fontsize', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1105, 16), for_loop_var_256776))
        # Assigning a type to the variable 'thetext' (line 1105)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1105, 16), 'thetext', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1105, 16), for_loop_var_256776))
        # Assigning a type to the variable 'new_x' (line 1105)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1105, 16), 'new_x', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1105, 16), for_loop_var_256776))
        # Assigning a type to the variable 'new_y' (line 1105)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1105, 16), 'new_y', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1105, 16), for_loop_var_256776))
        # Assigning a type to the variable 'metrics' (line 1105)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1105, 16), 'metrics', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1105, 16), for_loop_var_256776))
        # SSA begins for a for statement (line 1105)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 1106):
        
        # Assigning a Call to a Name (line 1106):
        
        # Call to setdefault(...): (line 1106)
        # Processing the call arguments (line 1106)
        # Getting the type of 'font' (line 1106)
        font_256780 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1106, 53), 'font', False)
        # Obtaining the member 'fname' of a type (line 1106)
        fname_256781 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1106, 53), font_256780, 'fname')
        
        # Call to set(...): (line 1106)
        # Processing the call keyword arguments (line 1106)
        kwargs_256783 = {}
        # Getting the type of 'set' (line 1106)
        set_256782 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1106, 65), 'set', False)
        # Calling set(args, kwargs) (line 1106)
        set_call_result_256784 = invoke(stypy.reporting.localization.Localization(__file__, 1106, 65), set_256782, *[], **kwargs_256783)
        
        # Processing the call keyword arguments (line 1106)
        kwargs_256785 = {}
        # Getting the type of 'self' (line 1106)
        self_256777 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1106, 30), 'self', False)
        # Obtaining the member '_fonts' of a type (line 1106)
        _fonts_256778 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1106, 30), self_256777, '_fonts')
        # Obtaining the member 'setdefault' of a type (line 1106)
        setdefault_256779 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1106, 30), _fonts_256778, 'setdefault')
        # Calling setdefault(args, kwargs) (line 1106)
        setdefault_call_result_256786 = invoke(stypy.reporting.localization.Localization(__file__, 1106, 30), setdefault_256779, *[fname_256781, set_call_result_256784], **kwargs_256785)
        
        # Assigning a type to the variable 'fontset' (line 1106)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1106, 20), 'fontset', setdefault_call_result_256786)
        
        # Call to add(...): (line 1107)
        # Processing the call arguments (line 1107)
        # Getting the type of 'thetext' (line 1107)
        thetext_256789 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1107, 32), 'thetext', False)
        # Processing the call keyword arguments (line 1107)
        kwargs_256790 = {}
        # Getting the type of 'fontset' (line 1107)
        fontset_256787 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1107, 20), 'fontset', False)
        # Obtaining the member 'add' of a type (line 1107)
        add_256788 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1107, 20), fontset_256787, 'add')
        # Calling add(args, kwargs) (line 1107)
        add_call_result_256791 = invoke(stypy.reporting.localization.Localization(__file__, 1107, 20), add_256788, *[thetext_256789], **kwargs_256790)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 1104)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Call to iteritems(...): (line 1109)
        # Processing the call arguments (line 1109)
        # Getting the type of 'spans' (line 1109)
        spans_256794 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1109, 46), 'spans', False)
        # Processing the call keyword arguments (line 1109)
        kwargs_256795 = {}
        # Getting the type of 'six' (line 1109)
        six_256792 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1109, 32), 'six', False)
        # Obtaining the member 'iteritems' of a type (line 1109)
        iteritems_256793 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1109, 32), six_256792, 'iteritems')
        # Calling iteritems(args, kwargs) (line 1109)
        iteritems_call_result_256796 = invoke(stypy.reporting.localization.Localization(__file__, 1109, 32), iteritems_256793, *[spans_256794], **kwargs_256795)
        
        # Testing the type of a for loop iterable (line 1109)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1109, 12), iteritems_call_result_256796)
        # Getting the type of the for loop variable (line 1109)
        for_loop_var_256797 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1109, 12), iteritems_call_result_256796)
        # Assigning a type to the variable 'style' (line 1109)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1109, 12), 'style', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1109, 12), for_loop_var_256797))
        # Assigning a type to the variable 'chars' (line 1109)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1109, 12), 'chars', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1109, 12), for_loop_var_256797))
        # SSA begins for a for statement (line 1109)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to sort(...): (line 1110)
        # Processing the call keyword arguments (line 1110)
        kwargs_256800 = {}
        # Getting the type of 'chars' (line 1110)
        chars_256798 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1110, 16), 'chars', False)
        # Obtaining the member 'sort' of a type (line 1110)
        sort_256799 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1110, 16), chars_256798, 'sort')
        # Calling sort(args, kwargs) (line 1110)
        sort_call_result_256801 = invoke(stypy.reporting.localization.Localization(__file__, 1110, 16), sort_256799, *[], **kwargs_256800)
        
        
        # Assigning a Name to a Name (line 1112):
        
        # Assigning a Name to a Name (line 1112):
        # Getting the type of 'True' (line 1112)
        True_256802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1112, 25), 'True')
        # Assigning a type to the variable 'same_y' (line 1112)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1112, 16), 'same_y', True_256802)
        
        
        
        # Call to len(...): (line 1113)
        # Processing the call arguments (line 1113)
        # Getting the type of 'chars' (line 1113)
        chars_256804 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1113, 23), 'chars', False)
        # Processing the call keyword arguments (line 1113)
        kwargs_256805 = {}
        # Getting the type of 'len' (line 1113)
        len_256803 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1113, 19), 'len', False)
        # Calling len(args, kwargs) (line 1113)
        len_call_result_256806 = invoke(stypy.reporting.localization.Localization(__file__, 1113, 19), len_256803, *[chars_256804], **kwargs_256805)
        
        int_256807 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1113, 32), 'int')
        # Applying the binary operator '>' (line 1113)
        result_gt_256808 = python_operator(stypy.reporting.localization.Localization(__file__, 1113, 19), '>', len_call_result_256806, int_256807)
        
        # Testing the type of an if condition (line 1113)
        if_condition_256809 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1113, 16), result_gt_256808)
        # Assigning a type to the variable 'if_condition_256809' (line 1113)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1113, 16), 'if_condition_256809', if_condition_256809)
        # SSA begins for if statement (line 1113)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Subscript to a Name (line 1114):
        
        # Assigning a Subscript to a Name (line 1114):
        
        # Obtaining the type of the subscript
        int_256810 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1114, 38), 'int')
        
        # Obtaining the type of the subscript
        int_256811 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1114, 35), 'int')
        # Getting the type of 'chars' (line 1114)
        chars_256812 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1114, 29), 'chars')
        # Obtaining the member '__getitem__' of a type (line 1114)
        getitem___256813 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1114, 29), chars_256812, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1114)
        subscript_call_result_256814 = invoke(stypy.reporting.localization.Localization(__file__, 1114, 29), getitem___256813, int_256811)
        
        # Obtaining the member '__getitem__' of a type (line 1114)
        getitem___256815 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1114, 29), subscript_call_result_256814, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1114)
        subscript_call_result_256816 = invoke(stypy.reporting.localization.Localization(__file__, 1114, 29), getitem___256815, int_256810)
        
        # Assigning a type to the variable 'last_y' (line 1114)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1114, 20), 'last_y', subscript_call_result_256816)
        
        
        # Call to xrange(...): (line 1115)
        # Processing the call arguments (line 1115)
        int_256818 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1115, 36), 'int')
        
        # Call to len(...): (line 1115)
        # Processing the call arguments (line 1115)
        # Getting the type of 'chars' (line 1115)
        chars_256820 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1115, 43), 'chars', False)
        # Processing the call keyword arguments (line 1115)
        kwargs_256821 = {}
        # Getting the type of 'len' (line 1115)
        len_256819 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1115, 39), 'len', False)
        # Calling len(args, kwargs) (line 1115)
        len_call_result_256822 = invoke(stypy.reporting.localization.Localization(__file__, 1115, 39), len_256819, *[chars_256820], **kwargs_256821)
        
        # Processing the call keyword arguments (line 1115)
        kwargs_256823 = {}
        # Getting the type of 'xrange' (line 1115)
        xrange_256817 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1115, 29), 'xrange', False)
        # Calling xrange(args, kwargs) (line 1115)
        xrange_call_result_256824 = invoke(stypy.reporting.localization.Localization(__file__, 1115, 29), xrange_256817, *[int_256818, len_call_result_256822], **kwargs_256823)
        
        # Testing the type of a for loop iterable (line 1115)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1115, 20), xrange_call_result_256824)
        # Getting the type of the for loop variable (line 1115)
        for_loop_var_256825 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1115, 20), xrange_call_result_256824)
        # Assigning a type to the variable 'i' (line 1115)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1115, 20), 'i', for_loop_var_256825)
        # SSA begins for a for statement (line 1115)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        
        
        # Obtaining the type of the subscript
        int_256826 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1116, 36), 'int')
        
        # Obtaining the type of the subscript
        # Getting the type of 'i' (line 1116)
        i_256827 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1116, 33), 'i')
        # Getting the type of 'chars' (line 1116)
        chars_256828 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1116, 27), 'chars')
        # Obtaining the member '__getitem__' of a type (line 1116)
        getitem___256829 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1116, 27), chars_256828, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1116)
        subscript_call_result_256830 = invoke(stypy.reporting.localization.Localization(__file__, 1116, 27), getitem___256829, i_256827)
        
        # Obtaining the member '__getitem__' of a type (line 1116)
        getitem___256831 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1116, 27), subscript_call_result_256830, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1116)
        subscript_call_result_256832 = invoke(stypy.reporting.localization.Localization(__file__, 1116, 27), getitem___256831, int_256826)
        
        # Getting the type of 'last_y' (line 1116)
        last_y_256833 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1116, 42), 'last_y')
        # Applying the binary operator '!=' (line 1116)
        result_ne_256834 = python_operator(stypy.reporting.localization.Localization(__file__, 1116, 27), '!=', subscript_call_result_256832, last_y_256833)
        
        # Testing the type of an if condition (line 1116)
        if_condition_256835 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1116, 24), result_ne_256834)
        # Assigning a type to the variable 'if_condition_256835' (line 1116)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1116, 24), 'if_condition_256835', if_condition_256835)
        # SSA begins for if statement (line 1116)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Name to a Name (line 1117):
        
        # Assigning a Name to a Name (line 1117):
        # Getting the type of 'False' (line 1117)
        False_256836 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1117, 37), 'False')
        # Assigning a type to the variable 'same_y' (line 1117)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1117, 28), 'same_y', False_256836)
        # SSA join for if statement (line 1116)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 1113)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'same_y' (line 1119)
        same_y_256837 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1119, 19), 'same_y')
        # Testing the type of an if condition (line 1119)
        if_condition_256838 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1119, 16), same_y_256837)
        # Assigning a type to the variable 'if_condition_256838' (line 1119)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1119, 16), 'if_condition_256838', if_condition_256838)
        # SSA begins for if statement (line 1119)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 1120):
        
        # Assigning a Call to a Name (line 1120):
        
        # Call to text_type(...): (line 1120)
        # Processing the call arguments (line 1120)
        
        # Obtaining the type of the subscript
        int_256841 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1120, 48), 'int')
        
        # Obtaining the type of the subscript
        int_256842 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1120, 45), 'int')
        # Getting the type of 'chars' (line 1120)
        chars_256843 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1120, 39), 'chars', False)
        # Obtaining the member '__getitem__' of a type (line 1120)
        getitem___256844 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1120, 39), chars_256843, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1120)
        subscript_call_result_256845 = invoke(stypy.reporting.localization.Localization(__file__, 1120, 39), getitem___256844, int_256842)
        
        # Obtaining the member '__getitem__' of a type (line 1120)
        getitem___256846 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1120, 39), subscript_call_result_256845, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1120)
        subscript_call_result_256847 = invoke(stypy.reporting.localization.Localization(__file__, 1120, 39), getitem___256846, int_256841)
        
        # Processing the call keyword arguments (line 1120)
        kwargs_256848 = {}
        # Getting the type of 'six' (line 1120)
        six_256839 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1120, 25), 'six', False)
        # Obtaining the member 'text_type' of a type (line 1120)
        text_type_256840 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1120, 25), six_256839, 'text_type')
        # Calling text_type(args, kwargs) (line 1120)
        text_type_call_result_256849 = invoke(stypy.reporting.localization.Localization(__file__, 1120, 25), text_type_256840, *[subscript_call_result_256847], **kwargs_256848)
        
        # Assigning a type to the variable 'ys' (line 1120)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1120, 20), 'ys', text_type_call_result_256849)
        # SSA branch for the else part of an if statement (line 1119)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Call to a Name (line 1122):
        
        # Assigning a Call to a Name (line 1122):
        
        # Call to join(...): (line 1122)
        # Processing the call arguments (line 1122)
        # Calculating generator expression
        module_type_store = module_type_store.open_function_context('list comprehension expression', 1122, 34, True)
        # Calculating comprehension expression
        # Getting the type of 'chars' (line 1122)
        chars_256860 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1122, 63), 'chars', False)
        comprehension_256861 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1122, 34), chars_256860)
        # Assigning a type to the variable 'c' (line 1122)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1122, 34), 'c', comprehension_256861)
        
        # Call to text_type(...): (line 1122)
        # Processing the call arguments (line 1122)
        
        # Obtaining the type of the subscript
        int_256854 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1122, 50), 'int')
        # Getting the type of 'c' (line 1122)
        c_256855 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1122, 48), 'c', False)
        # Obtaining the member '__getitem__' of a type (line 1122)
        getitem___256856 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1122, 48), c_256855, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1122)
        subscript_call_result_256857 = invoke(stypy.reporting.localization.Localization(__file__, 1122, 48), getitem___256856, int_256854)
        
        # Processing the call keyword arguments (line 1122)
        kwargs_256858 = {}
        # Getting the type of 'six' (line 1122)
        six_256852 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1122, 34), 'six', False)
        # Obtaining the member 'text_type' of a type (line 1122)
        text_type_256853 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1122, 34), six_256852, 'text_type')
        # Calling text_type(args, kwargs) (line 1122)
        text_type_call_result_256859 = invoke(stypy.reporting.localization.Localization(__file__, 1122, 34), text_type_256853, *[subscript_call_result_256857], **kwargs_256858)
        
        list_256862 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1122, 34), 'list')
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1122, 34), list_256862, text_type_call_result_256859)
        # Processing the call keyword arguments (line 1122)
        kwargs_256863 = {}
        unicode_256850 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1122, 25), 'unicode', u' ')
        # Obtaining the member 'join' of a type (line 1122)
        join_256851 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1122, 25), unicode_256850, 'join')
        # Calling join(args, kwargs) (line 1122)
        join_call_result_256864 = invoke(stypy.reporting.localization.Localization(__file__, 1122, 25), join_256851, *[list_256862], **kwargs_256863)
        
        # Assigning a type to the variable 'ys' (line 1122)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1122, 20), 'ys', join_call_result_256864)
        # SSA join for if statement (line 1119)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Dict to a Name (line 1124):
        
        # Assigning a Dict to a Name (line 1124):
        
        # Obtaining an instance of the builtin type 'dict' (line 1124)
        dict_256865 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1124, 25), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 1124)
        # Adding element type (key, value) (line 1124)
        unicode_256866 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1125, 20), 'unicode', u'style')
        # Getting the type of 'style' (line 1125)
        style_256867 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1125, 29), 'style')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1124, 25), dict_256865, (unicode_256866, style_256867))
        # Adding element type (key, value) (line 1124)
        unicode_256868 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1126, 20), 'unicode', u'x')
        
        # Call to join(...): (line 1126)
        # Processing the call arguments (line 1126)
        # Calculating generator expression
        module_type_store = module_type_store.open_function_context('list comprehension expression', 1126, 34, True)
        # Calculating comprehension expression
        # Getting the type of 'chars' (line 1126)
        chars_256878 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1126, 65), 'chars', False)
        comprehension_256879 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1126, 34), chars_256878)
        # Assigning a type to the variable 'c' (line 1126)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1126, 34), 'c', comprehension_256879)
        
        # Call to short_float_fmt(...): (line 1126)
        # Processing the call arguments (line 1126)
        
        # Obtaining the type of the subscript
        int_256872 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1126, 52), 'int')
        # Getting the type of 'c' (line 1126)
        c_256873 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1126, 50), 'c', False)
        # Obtaining the member '__getitem__' of a type (line 1126)
        getitem___256874 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1126, 50), c_256873, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1126)
        subscript_call_result_256875 = invoke(stypy.reporting.localization.Localization(__file__, 1126, 50), getitem___256874, int_256872)
        
        # Processing the call keyword arguments (line 1126)
        kwargs_256876 = {}
        # Getting the type of 'short_float_fmt' (line 1126)
        short_float_fmt_256871 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1126, 34), 'short_float_fmt', False)
        # Calling short_float_fmt(args, kwargs) (line 1126)
        short_float_fmt_call_result_256877 = invoke(stypy.reporting.localization.Localization(__file__, 1126, 34), short_float_fmt_256871, *[subscript_call_result_256875], **kwargs_256876)
        
        list_256880 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1126, 34), 'list')
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1126, 34), list_256880, short_float_fmt_call_result_256877)
        # Processing the call keyword arguments (line 1126)
        kwargs_256881 = {}
        unicode_256869 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1126, 25), 'unicode', u' ')
        # Obtaining the member 'join' of a type (line 1126)
        join_256870 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1126, 25), unicode_256869, 'join')
        # Calling join(args, kwargs) (line 1126)
        join_call_result_256882 = invoke(stypy.reporting.localization.Localization(__file__, 1126, 25), join_256870, *[list_256880], **kwargs_256881)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1124, 25), dict_256865, (unicode_256868, join_call_result_256882))
        # Adding element type (key, value) (line 1124)
        unicode_256883 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1127, 20), 'unicode', u'y')
        # Getting the type of 'ys' (line 1127)
        ys_256884 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1127, 25), 'ys')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1124, 25), dict_256865, (unicode_256883, ys_256884))
        
        # Assigning a type to the variable 'attrib' (line 1124)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1124, 16), 'attrib', dict_256865)
        
        # Call to element(...): (line 1130)
        # Processing the call arguments (line 1130)
        unicode_256887 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1131, 20), 'unicode', u'tspan')
        
        # Call to join(...): (line 1132)
        # Processing the call arguments (line 1132)
        # Calculating generator expression
        module_type_store = module_type_store.open_function_context('list comprehension expression', 1132, 28, True)
        # Calculating comprehension expression
        # Getting the type of 'chars' (line 1132)
        chars_256897 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1132, 50), 'chars', False)
        comprehension_256898 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1132, 28), chars_256897)
        # Assigning a type to the variable 'c' (line 1132)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1132, 28), 'c', comprehension_256898)
        
        # Call to unichr(...): (line 1132)
        # Processing the call arguments (line 1132)
        
        # Obtaining the type of the subscript
        int_256891 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1132, 37), 'int')
        # Getting the type of 'c' (line 1132)
        c_256892 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1132, 35), 'c', False)
        # Obtaining the member '__getitem__' of a type (line 1132)
        getitem___256893 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1132, 35), c_256892, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1132)
        subscript_call_result_256894 = invoke(stypy.reporting.localization.Localization(__file__, 1132, 35), getitem___256893, int_256891)
        
        # Processing the call keyword arguments (line 1132)
        kwargs_256895 = {}
        # Getting the type of 'unichr' (line 1132)
        unichr_256890 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1132, 28), 'unichr', False)
        # Calling unichr(args, kwargs) (line 1132)
        unichr_call_result_256896 = invoke(stypy.reporting.localization.Localization(__file__, 1132, 28), unichr_256890, *[subscript_call_result_256894], **kwargs_256895)
        
        list_256899 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1132, 28), 'list')
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1132, 28), list_256899, unichr_call_result_256896)
        # Processing the call keyword arguments (line 1132)
        kwargs_256900 = {}
        unicode_256888 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1132, 20), 'unicode', u'')
        # Obtaining the member 'join' of a type (line 1132)
        join_256889 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1132, 20), unicode_256888, 'join')
        # Calling join(args, kwargs) (line 1132)
        join_call_result_256901 = invoke(stypy.reporting.localization.Localization(__file__, 1132, 20), join_256889, *[list_256899], **kwargs_256900)
        
        # Processing the call keyword arguments (line 1130)
        # Getting the type of 'attrib' (line 1133)
        attrib_256902 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1133, 27), 'attrib', False)
        keyword_256903 = attrib_256902
        kwargs_256904 = {'attrib': keyword_256903}
        # Getting the type of 'writer' (line 1130)
        writer_256885 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1130, 16), 'writer', False)
        # Obtaining the member 'element' of a type (line 1130)
        element_256886 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1130, 16), writer_256885, 'element')
        # Calling element(args, kwargs) (line 1130)
        element_call_result_256905 = invoke(stypy.reporting.localization.Localization(__file__, 1130, 16), element_256886, *[unicode_256887, join_call_result_256901], **kwargs_256904)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to end(...): (line 1135)
        # Processing the call arguments (line 1135)
        unicode_256908 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1135, 23), 'unicode', u'text')
        # Processing the call keyword arguments (line 1135)
        kwargs_256909 = {}
        # Getting the type of 'writer' (line 1135)
        writer_256906 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1135, 12), 'writer', False)
        # Obtaining the member 'end' of a type (line 1135)
        end_256907 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1135, 12), writer_256906, 'end')
        # Calling end(args, kwargs) (line 1135)
        end_call_result_256910 = invoke(stypy.reporting.localization.Localization(__file__, 1135, 12), end_256907, *[unicode_256908], **kwargs_256909)
        
        
        
        # Call to len(...): (line 1137)
        # Processing the call arguments (line 1137)
        # Getting the type of 'svg_rects' (line 1137)
        svg_rects_256912 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1137, 19), 'svg_rects', False)
        # Processing the call keyword arguments (line 1137)
        kwargs_256913 = {}
        # Getting the type of 'len' (line 1137)
        len_256911 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1137, 15), 'len', False)
        # Calling len(args, kwargs) (line 1137)
        len_call_result_256914 = invoke(stypy.reporting.localization.Localization(__file__, 1137, 15), len_256911, *[svg_rects_256912], **kwargs_256913)
        
        # Testing the type of an if condition (line 1137)
        if_condition_256915 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1137, 12), len_call_result_256914)
        # Assigning a type to the variable 'if_condition_256915' (line 1137)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1137, 12), 'if_condition_256915', if_condition_256915)
        # SSA begins for if statement (line 1137)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'svg_rects' (line 1138)
        svg_rects_256916 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1138, 43), 'svg_rects')
        # Testing the type of a for loop iterable (line 1138)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1138, 16), svg_rects_256916)
        # Getting the type of the for loop variable (line 1138)
        for_loop_var_256917 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1138, 16), svg_rects_256916)
        # Assigning a type to the variable 'x' (line 1138)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1138, 16), 'x', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1138, 16), for_loop_var_256917))
        # Assigning a type to the variable 'y' (line 1138)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1138, 16), 'y', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1138, 16), for_loop_var_256917))
        # Assigning a type to the variable 'width' (line 1138)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1138, 16), 'width', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1138, 16), for_loop_var_256917))
        # Assigning a type to the variable 'height' (line 1138)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1138, 16), 'height', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1138, 16), for_loop_var_256917))
        # SSA begins for a for statement (line 1138)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to element(...): (line 1139)
        # Processing the call arguments (line 1139)
        unicode_256920 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1140, 24), 'unicode', u'rect')
        # Processing the call keyword arguments (line 1139)
        
        # Call to short_float_fmt(...): (line 1141)
        # Processing the call arguments (line 1141)
        # Getting the type of 'x' (line 1141)
        x_256922 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1141, 42), 'x', False)
        # Processing the call keyword arguments (line 1141)
        kwargs_256923 = {}
        # Getting the type of 'short_float_fmt' (line 1141)
        short_float_fmt_256921 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1141, 26), 'short_float_fmt', False)
        # Calling short_float_fmt(args, kwargs) (line 1141)
        short_float_fmt_call_result_256924 = invoke(stypy.reporting.localization.Localization(__file__, 1141, 26), short_float_fmt_256921, *[x_256922], **kwargs_256923)
        
        keyword_256925 = short_float_fmt_call_result_256924
        
        # Call to short_float_fmt(...): (line 1142)
        # Processing the call arguments (line 1142)
        
        # Getting the type of 'y' (line 1142)
        y_256927 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1142, 43), 'y', False)
        # Applying the 'usub' unary operator (line 1142)
        result___neg___256928 = python_operator(stypy.reporting.localization.Localization(__file__, 1142, 42), 'usub', y_256927)
        
        # Getting the type of 'height' (line 1142)
        height_256929 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1142, 47), 'height', False)
        # Applying the binary operator '+' (line 1142)
        result_add_256930 = python_operator(stypy.reporting.localization.Localization(__file__, 1142, 42), '+', result___neg___256928, height_256929)
        
        # Processing the call keyword arguments (line 1142)
        kwargs_256931 = {}
        # Getting the type of 'short_float_fmt' (line 1142)
        short_float_fmt_256926 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1142, 26), 'short_float_fmt', False)
        # Calling short_float_fmt(args, kwargs) (line 1142)
        short_float_fmt_call_result_256932 = invoke(stypy.reporting.localization.Localization(__file__, 1142, 26), short_float_fmt_256926, *[result_add_256930], **kwargs_256931)
        
        keyword_256933 = short_float_fmt_call_result_256932
        
        # Call to short_float_fmt(...): (line 1143)
        # Processing the call arguments (line 1143)
        # Getting the type of 'width' (line 1143)
        width_256935 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1143, 46), 'width', False)
        # Processing the call keyword arguments (line 1143)
        kwargs_256936 = {}
        # Getting the type of 'short_float_fmt' (line 1143)
        short_float_fmt_256934 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1143, 30), 'short_float_fmt', False)
        # Calling short_float_fmt(args, kwargs) (line 1143)
        short_float_fmt_call_result_256937 = invoke(stypy.reporting.localization.Localization(__file__, 1143, 30), short_float_fmt_256934, *[width_256935], **kwargs_256936)
        
        keyword_256938 = short_float_fmt_call_result_256937
        
        # Call to short_float_fmt(...): (line 1144)
        # Processing the call arguments (line 1144)
        # Getting the type of 'height' (line 1144)
        height_256940 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1144, 47), 'height', False)
        # Processing the call keyword arguments (line 1144)
        kwargs_256941 = {}
        # Getting the type of 'short_float_fmt' (line 1144)
        short_float_fmt_256939 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1144, 31), 'short_float_fmt', False)
        # Calling short_float_fmt(args, kwargs) (line 1144)
        short_float_fmt_call_result_256942 = invoke(stypy.reporting.localization.Localization(__file__, 1144, 31), short_float_fmt_256939, *[height_256940], **kwargs_256941)
        
        keyword_256943 = short_float_fmt_call_result_256942
        kwargs_256944 = {'y': keyword_256933, 'x': keyword_256925, 'height': keyword_256943, 'width': keyword_256938}
        # Getting the type of 'writer' (line 1139)
        writer_256918 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1139, 20), 'writer', False)
        # Obtaining the member 'element' of a type (line 1139)
        element_256919 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1139, 20), writer_256918, 'element')
        # Calling element(args, kwargs) (line 1139)
        element_call_result_256945 = invoke(stypy.reporting.localization.Localization(__file__, 1139, 20), element_256919, *[unicode_256920], **kwargs_256944)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 1137)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to end(...): (line 1147)
        # Processing the call arguments (line 1147)
        unicode_256948 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1147, 23), 'unicode', u'g')
        # Processing the call keyword arguments (line 1147)
        kwargs_256949 = {}
        # Getting the type of 'writer' (line 1147)
        writer_256946 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1147, 12), 'writer', False)
        # Obtaining the member 'end' of a type (line 1147)
        end_256947 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1147, 12), writer_256946, 'end')
        # Calling end(args, kwargs) (line 1147)
        end_call_result_256950 = invoke(stypy.reporting.localization.Localization(__file__, 1147, 12), end_256947, *[unicode_256948], **kwargs_256949)
        
        # SSA join for if statement (line 1012)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of '_draw_text_as_text(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_draw_text_as_text' in the type store
        # Getting the type of 'stypy_return_type' (line 1002)
        stypy_return_type_256951 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1002, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_256951)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_draw_text_as_text'
        return stypy_return_type_256951


    @norecursion
    def draw_tex(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        unicode_256952 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1149, 56), 'unicode', u'TeX!')
        # Getting the type of 'None' (line 1149)
        None_256953 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1149, 70), 'None')
        defaults = [unicode_256952, None_256953]
        # Create a new context for function 'draw_tex'
        module_type_store = module_type_store.open_function_context('draw_tex', 1149, 4, False)
        # Assigning a type to the variable 'self' (line 1150)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1150, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererSVG.draw_tex.__dict__.__setitem__('stypy_localization', localization)
        RendererSVG.draw_tex.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererSVG.draw_tex.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererSVG.draw_tex.__dict__.__setitem__('stypy_function_name', 'RendererSVG.draw_tex')
        RendererSVG.draw_tex.__dict__.__setitem__('stypy_param_names_list', ['gc', 'x', 'y', 's', 'prop', 'angle', 'ismath', 'mtext'])
        RendererSVG.draw_tex.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererSVG.draw_tex.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererSVG.draw_tex.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererSVG.draw_tex.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererSVG.draw_tex.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererSVG.draw_tex.__dict__.__setitem__('stypy_declared_arg_number', 9)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererSVG.draw_tex', ['gc', 'x', 'y', 's', 'prop', 'angle', 'ismath', 'mtext'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'draw_tex', localization, ['gc', 'x', 'y', 's', 'prop', 'angle', 'ismath', 'mtext'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'draw_tex(...)' code ##################

        
        # Call to _draw_text_as_path(...): (line 1150)
        # Processing the call arguments (line 1150)
        # Getting the type of 'gc' (line 1150)
        gc_256956 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1150, 32), 'gc', False)
        # Getting the type of 'x' (line 1150)
        x_256957 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1150, 36), 'x', False)
        # Getting the type of 'y' (line 1150)
        y_256958 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1150, 39), 'y', False)
        # Getting the type of 's' (line 1150)
        s_256959 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1150, 42), 's', False)
        # Getting the type of 'prop' (line 1150)
        prop_256960 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1150, 45), 'prop', False)
        # Getting the type of 'angle' (line 1150)
        angle_256961 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1150, 51), 'angle', False)
        # Processing the call keyword arguments (line 1150)
        unicode_256962 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1150, 65), 'unicode', u'TeX')
        keyword_256963 = unicode_256962
        kwargs_256964 = {'ismath': keyword_256963}
        # Getting the type of 'self' (line 1150)
        self_256954 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1150, 8), 'self', False)
        # Obtaining the member '_draw_text_as_path' of a type (line 1150)
        _draw_text_as_path_256955 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1150, 8), self_256954, '_draw_text_as_path')
        # Calling _draw_text_as_path(args, kwargs) (line 1150)
        _draw_text_as_path_call_result_256965 = invoke(stypy.reporting.localization.Localization(__file__, 1150, 8), _draw_text_as_path_256955, *[gc_256956, x_256957, y_256958, s_256959, prop_256960, angle_256961], **kwargs_256964)
        
        
        # ################# End of 'draw_tex(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'draw_tex' in the type store
        # Getting the type of 'stypy_return_type' (line 1149)
        stypy_return_type_256966 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1149, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_256966)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'draw_tex'
        return stypy_return_type_256966


    @norecursion
    def draw_text(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'False' (line 1152)
        False_256967 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1152, 57), 'False')
        # Getting the type of 'None' (line 1152)
        None_256968 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1152, 70), 'None')
        defaults = [False_256967, None_256968]
        # Create a new context for function 'draw_text'
        module_type_store = module_type_store.open_function_context('draw_text', 1152, 4, False)
        # Assigning a type to the variable 'self' (line 1153)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1153, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererSVG.draw_text.__dict__.__setitem__('stypy_localization', localization)
        RendererSVG.draw_text.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererSVG.draw_text.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererSVG.draw_text.__dict__.__setitem__('stypy_function_name', 'RendererSVG.draw_text')
        RendererSVG.draw_text.__dict__.__setitem__('stypy_param_names_list', ['gc', 'x', 'y', 's', 'prop', 'angle', 'ismath', 'mtext'])
        RendererSVG.draw_text.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererSVG.draw_text.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererSVG.draw_text.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererSVG.draw_text.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererSVG.draw_text.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererSVG.draw_text.__dict__.__setitem__('stypy_declared_arg_number', 9)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererSVG.draw_text', ['gc', 'x', 'y', 's', 'prop', 'angle', 'ismath', 'mtext'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'draw_text', localization, ['gc', 'x', 'y', 's', 'prop', 'angle', 'ismath', 'mtext'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'draw_text(...)' code ##################

        
        # Assigning a Call to a Name (line 1153):
        
        # Assigning a Call to a Name (line 1153):
        
        # Call to _get_clip(...): (line 1153)
        # Processing the call arguments (line 1153)
        # Getting the type of 'gc' (line 1153)
        gc_256971 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1153, 32), 'gc', False)
        # Processing the call keyword arguments (line 1153)
        kwargs_256972 = {}
        # Getting the type of 'self' (line 1153)
        self_256969 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1153, 17), 'self', False)
        # Obtaining the member '_get_clip' of a type (line 1153)
        _get_clip_256970 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1153, 17), self_256969, '_get_clip')
        # Calling _get_clip(args, kwargs) (line 1153)
        _get_clip_call_result_256973 = invoke(stypy.reporting.localization.Localization(__file__, 1153, 17), _get_clip_256970, *[gc_256971], **kwargs_256972)
        
        # Assigning a type to the variable 'clipid' (line 1153)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1153, 8), 'clipid', _get_clip_call_result_256973)
        
        # Type idiom detected: calculating its left and rigth part (line 1154)
        # Getting the type of 'clipid' (line 1154)
        clipid_256974 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1154, 8), 'clipid')
        # Getting the type of 'None' (line 1154)
        None_256975 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1154, 25), 'None')
        
        (may_be_256976, more_types_in_union_256977) = may_not_be_none(clipid_256974, None_256975)

        if may_be_256976:

            if more_types_in_union_256977:
                # Runtime conditional SSA (line 1154)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Call to start(...): (line 1157)
            # Processing the call arguments (line 1157)
            unicode_256981 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1158, 16), 'unicode', u'g')
            # Processing the call keyword arguments (line 1157)
            
            # Obtaining an instance of the builtin type 'dict' (line 1158)
            dict_256982 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1158, 28), 'dict')
            # Adding type elements to the builtin type 'dict' instance (line 1158)
            # Adding element type (key, value) (line 1158)
            unicode_256983 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1158, 29), 'unicode', u'clip-path')
            unicode_256984 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1158, 42), 'unicode', u'url(#%s)')
            # Getting the type of 'clipid' (line 1158)
            clipid_256985 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1158, 55), 'clipid', False)
            # Applying the binary operator '%' (line 1158)
            result_mod_256986 = python_operator(stypy.reporting.localization.Localization(__file__, 1158, 42), '%', unicode_256984, clipid_256985)
            
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1158, 28), dict_256982, (unicode_256983, result_mod_256986))
            
            keyword_256987 = dict_256982
            kwargs_256988 = {'attrib': keyword_256987}
            # Getting the type of 'self' (line 1157)
            self_256978 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1157, 12), 'self', False)
            # Obtaining the member 'writer' of a type (line 1157)
            writer_256979 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1157, 12), self_256978, 'writer')
            # Obtaining the member 'start' of a type (line 1157)
            start_256980 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1157, 12), writer_256979, 'start')
            # Calling start(args, kwargs) (line 1157)
            start_call_result_256989 = invoke(stypy.reporting.localization.Localization(__file__, 1157, 12), start_256980, *[unicode_256981], **kwargs_256988)
            

            if more_types_in_union_256977:
                # SSA join for if statement (line 1154)
                module_type_store = module_type_store.join_ssa_context()


        
        
        
        
        # Call to get_url(...): (line 1160)
        # Processing the call keyword arguments (line 1160)
        kwargs_256992 = {}
        # Getting the type of 'gc' (line 1160)
        gc_256990 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1160, 11), 'gc', False)
        # Obtaining the member 'get_url' of a type (line 1160)
        get_url_256991 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1160, 11), gc_256990, 'get_url')
        # Calling get_url(args, kwargs) (line 1160)
        get_url_call_result_256993 = invoke(stypy.reporting.localization.Localization(__file__, 1160, 11), get_url_256991, *[], **kwargs_256992)
        
        # Getting the type of 'None' (line 1160)
        None_256994 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1160, 31), 'None')
        # Applying the binary operator 'isnot' (line 1160)
        result_is_not_256995 = python_operator(stypy.reporting.localization.Localization(__file__, 1160, 11), 'isnot', get_url_call_result_256993, None_256994)
        
        # Testing the type of an if condition (line 1160)
        if_condition_256996 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1160, 8), result_is_not_256995)
        # Assigning a type to the variable 'if_condition_256996' (line 1160)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1160, 8), 'if_condition_256996', if_condition_256996)
        # SSA begins for if statement (line 1160)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to start(...): (line 1161)
        # Processing the call arguments (line 1161)
        unicode_257000 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1161, 30), 'unicode', u'a')
        
        # Obtaining an instance of the builtin type 'dict' (line 1161)
        dict_257001 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1161, 35), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 1161)
        # Adding element type (key, value) (line 1161)
        unicode_257002 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1161, 36), 'unicode', u'xlink:href')
        
        # Call to get_url(...): (line 1161)
        # Processing the call keyword arguments (line 1161)
        kwargs_257005 = {}
        # Getting the type of 'gc' (line 1161)
        gc_257003 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1161, 50), 'gc', False)
        # Obtaining the member 'get_url' of a type (line 1161)
        get_url_257004 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1161, 50), gc_257003, 'get_url')
        # Calling get_url(args, kwargs) (line 1161)
        get_url_call_result_257006 = invoke(stypy.reporting.localization.Localization(__file__, 1161, 50), get_url_257004, *[], **kwargs_257005)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1161, 35), dict_257001, (unicode_257002, get_url_call_result_257006))
        
        # Processing the call keyword arguments (line 1161)
        kwargs_257007 = {}
        # Getting the type of 'self' (line 1161)
        self_256997 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1161, 12), 'self', False)
        # Obtaining the member 'writer' of a type (line 1161)
        writer_256998 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1161, 12), self_256997, 'writer')
        # Obtaining the member 'start' of a type (line 1161)
        start_256999 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1161, 12), writer_256998, 'start')
        # Calling start(args, kwargs) (line 1161)
        start_call_result_257008 = invoke(stypy.reporting.localization.Localization(__file__, 1161, 12), start_256999, *[unicode_257000, dict_257001], **kwargs_257007)
        
        # SSA join for if statement (line 1160)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        
        # Obtaining the type of the subscript
        unicode_257009 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1163, 20), 'unicode', u'svg.fonttype')
        # Getting the type of 'rcParams' (line 1163)
        rcParams_257010 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1163, 11), 'rcParams')
        # Obtaining the member '__getitem__' of a type (line 1163)
        getitem___257011 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1163, 11), rcParams_257010, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1163)
        subscript_call_result_257012 = invoke(stypy.reporting.localization.Localization(__file__, 1163, 11), getitem___257011, unicode_257009)
        
        unicode_257013 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1163, 39), 'unicode', u'path')
        # Applying the binary operator '==' (line 1163)
        result_eq_257014 = python_operator(stypy.reporting.localization.Localization(__file__, 1163, 11), '==', subscript_call_result_257012, unicode_257013)
        
        # Testing the type of an if condition (line 1163)
        if_condition_257015 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1163, 8), result_eq_257014)
        # Assigning a type to the variable 'if_condition_257015' (line 1163)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1163, 8), 'if_condition_257015', if_condition_257015)
        # SSA begins for if statement (line 1163)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to _draw_text_as_path(...): (line 1164)
        # Processing the call arguments (line 1164)
        # Getting the type of 'gc' (line 1164)
        gc_257018 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1164, 36), 'gc', False)
        # Getting the type of 'x' (line 1164)
        x_257019 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1164, 40), 'x', False)
        # Getting the type of 'y' (line 1164)
        y_257020 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1164, 43), 'y', False)
        # Getting the type of 's' (line 1164)
        s_257021 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1164, 46), 's', False)
        # Getting the type of 'prop' (line 1164)
        prop_257022 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1164, 49), 'prop', False)
        # Getting the type of 'angle' (line 1164)
        angle_257023 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1164, 55), 'angle', False)
        # Getting the type of 'ismath' (line 1164)
        ismath_257024 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1164, 62), 'ismath', False)
        # Getting the type of 'mtext' (line 1164)
        mtext_257025 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1164, 70), 'mtext', False)
        # Processing the call keyword arguments (line 1164)
        kwargs_257026 = {}
        # Getting the type of 'self' (line 1164)
        self_257016 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1164, 12), 'self', False)
        # Obtaining the member '_draw_text_as_path' of a type (line 1164)
        _draw_text_as_path_257017 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1164, 12), self_257016, '_draw_text_as_path')
        # Calling _draw_text_as_path(args, kwargs) (line 1164)
        _draw_text_as_path_call_result_257027 = invoke(stypy.reporting.localization.Localization(__file__, 1164, 12), _draw_text_as_path_257017, *[gc_257018, x_257019, y_257020, s_257021, prop_257022, angle_257023, ismath_257024, mtext_257025], **kwargs_257026)
        
        # SSA branch for the else part of an if statement (line 1163)
        module_type_store.open_ssa_branch('else')
        
        # Call to _draw_text_as_text(...): (line 1166)
        # Processing the call arguments (line 1166)
        # Getting the type of 'gc' (line 1166)
        gc_257030 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1166, 36), 'gc', False)
        # Getting the type of 'x' (line 1166)
        x_257031 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1166, 40), 'x', False)
        # Getting the type of 'y' (line 1166)
        y_257032 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1166, 43), 'y', False)
        # Getting the type of 's' (line 1166)
        s_257033 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1166, 46), 's', False)
        # Getting the type of 'prop' (line 1166)
        prop_257034 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1166, 49), 'prop', False)
        # Getting the type of 'angle' (line 1166)
        angle_257035 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1166, 55), 'angle', False)
        # Getting the type of 'ismath' (line 1166)
        ismath_257036 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1166, 62), 'ismath', False)
        # Getting the type of 'mtext' (line 1166)
        mtext_257037 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1166, 70), 'mtext', False)
        # Processing the call keyword arguments (line 1166)
        kwargs_257038 = {}
        # Getting the type of 'self' (line 1166)
        self_257028 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1166, 12), 'self', False)
        # Obtaining the member '_draw_text_as_text' of a type (line 1166)
        _draw_text_as_text_257029 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1166, 12), self_257028, '_draw_text_as_text')
        # Calling _draw_text_as_text(args, kwargs) (line 1166)
        _draw_text_as_text_call_result_257039 = invoke(stypy.reporting.localization.Localization(__file__, 1166, 12), _draw_text_as_text_257029, *[gc_257030, x_257031, y_257032, s_257033, prop_257034, angle_257035, ismath_257036, mtext_257037], **kwargs_257038)
        
        # SSA join for if statement (line 1163)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        
        # Call to get_url(...): (line 1168)
        # Processing the call keyword arguments (line 1168)
        kwargs_257042 = {}
        # Getting the type of 'gc' (line 1168)
        gc_257040 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1168, 11), 'gc', False)
        # Obtaining the member 'get_url' of a type (line 1168)
        get_url_257041 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1168, 11), gc_257040, 'get_url')
        # Calling get_url(args, kwargs) (line 1168)
        get_url_call_result_257043 = invoke(stypy.reporting.localization.Localization(__file__, 1168, 11), get_url_257041, *[], **kwargs_257042)
        
        # Getting the type of 'None' (line 1168)
        None_257044 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1168, 31), 'None')
        # Applying the binary operator 'isnot' (line 1168)
        result_is_not_257045 = python_operator(stypy.reporting.localization.Localization(__file__, 1168, 11), 'isnot', get_url_call_result_257043, None_257044)
        
        # Testing the type of an if condition (line 1168)
        if_condition_257046 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1168, 8), result_is_not_257045)
        # Assigning a type to the variable 'if_condition_257046' (line 1168)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1168, 8), 'if_condition_257046', if_condition_257046)
        # SSA begins for if statement (line 1168)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to end(...): (line 1169)
        # Processing the call arguments (line 1169)
        unicode_257050 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1169, 28), 'unicode', u'a')
        # Processing the call keyword arguments (line 1169)
        kwargs_257051 = {}
        # Getting the type of 'self' (line 1169)
        self_257047 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1169, 12), 'self', False)
        # Obtaining the member 'writer' of a type (line 1169)
        writer_257048 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1169, 12), self_257047, 'writer')
        # Obtaining the member 'end' of a type (line 1169)
        end_257049 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1169, 12), writer_257048, 'end')
        # Calling end(args, kwargs) (line 1169)
        end_call_result_257052 = invoke(stypy.reporting.localization.Localization(__file__, 1169, 12), end_257049, *[unicode_257050], **kwargs_257051)
        
        # SSA join for if statement (line 1168)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Type idiom detected: calculating its left and rigth part (line 1171)
        # Getting the type of 'clipid' (line 1171)
        clipid_257053 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1171, 8), 'clipid')
        # Getting the type of 'None' (line 1171)
        None_257054 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1171, 25), 'None')
        
        (may_be_257055, more_types_in_union_257056) = may_not_be_none(clipid_257053, None_257054)

        if may_be_257055:

            if more_types_in_union_257056:
                # Runtime conditional SSA (line 1171)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Call to end(...): (line 1172)
            # Processing the call arguments (line 1172)
            unicode_257060 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1172, 28), 'unicode', u'g')
            # Processing the call keyword arguments (line 1172)
            kwargs_257061 = {}
            # Getting the type of 'self' (line 1172)
            self_257057 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 12), 'self', False)
            # Obtaining the member 'writer' of a type (line 1172)
            writer_257058 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1172, 12), self_257057, 'writer')
            # Obtaining the member 'end' of a type (line 1172)
            end_257059 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1172, 12), writer_257058, 'end')
            # Calling end(args, kwargs) (line 1172)
            end_call_result_257062 = invoke(stypy.reporting.localization.Localization(__file__, 1172, 12), end_257059, *[unicode_257060], **kwargs_257061)
            

            if more_types_in_union_257056:
                # SSA join for if statement (line 1171)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # ################# End of 'draw_text(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'draw_text' in the type store
        # Getting the type of 'stypy_return_type' (line 1152)
        stypy_return_type_257063 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1152, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_257063)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'draw_text'
        return stypy_return_type_257063


    @norecursion
    def flipy(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'flipy'
        module_type_store = module_type_store.open_function_context('flipy', 1174, 4, False)
        # Assigning a type to the variable 'self' (line 1175)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1175, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererSVG.flipy.__dict__.__setitem__('stypy_localization', localization)
        RendererSVG.flipy.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererSVG.flipy.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererSVG.flipy.__dict__.__setitem__('stypy_function_name', 'RendererSVG.flipy')
        RendererSVG.flipy.__dict__.__setitem__('stypy_param_names_list', [])
        RendererSVG.flipy.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererSVG.flipy.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererSVG.flipy.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererSVG.flipy.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererSVG.flipy.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererSVG.flipy.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererSVG.flipy', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'flipy', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'flipy(...)' code ##################

        # Getting the type of 'True' (line 1175)
        True_257064 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1175, 15), 'True')
        # Assigning a type to the variable 'stypy_return_type' (line 1175)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1175, 8), 'stypy_return_type', True_257064)
        
        # ################# End of 'flipy(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'flipy' in the type store
        # Getting the type of 'stypy_return_type' (line 1174)
        stypy_return_type_257065 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1174, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_257065)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'flipy'
        return stypy_return_type_257065


    @norecursion
    def get_canvas_width_height(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'get_canvas_width_height'
        module_type_store = module_type_store.open_function_context('get_canvas_width_height', 1177, 4, False)
        # Assigning a type to the variable 'self' (line 1178)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1178, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererSVG.get_canvas_width_height.__dict__.__setitem__('stypy_localization', localization)
        RendererSVG.get_canvas_width_height.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererSVG.get_canvas_width_height.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererSVG.get_canvas_width_height.__dict__.__setitem__('stypy_function_name', 'RendererSVG.get_canvas_width_height')
        RendererSVG.get_canvas_width_height.__dict__.__setitem__('stypy_param_names_list', [])
        RendererSVG.get_canvas_width_height.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererSVG.get_canvas_width_height.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererSVG.get_canvas_width_height.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererSVG.get_canvas_width_height.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererSVG.get_canvas_width_height.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererSVG.get_canvas_width_height.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererSVG.get_canvas_width_height', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_canvas_width_height', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_canvas_width_height(...)' code ##################

        
        # Obtaining an instance of the builtin type 'tuple' (line 1178)
        tuple_257066 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1178, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1178)
        # Adding element type (line 1178)
        # Getting the type of 'self' (line 1178)
        self_257067 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1178, 15), 'self')
        # Obtaining the member 'width' of a type (line 1178)
        width_257068 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1178, 15), self_257067, 'width')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1178, 15), tuple_257066, width_257068)
        # Adding element type (line 1178)
        # Getting the type of 'self' (line 1178)
        self_257069 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1178, 27), 'self')
        # Obtaining the member 'height' of a type (line 1178)
        height_257070 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1178, 27), self_257069, 'height')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1178, 15), tuple_257066, height_257070)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1178)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1178, 8), 'stypy_return_type', tuple_257066)
        
        # ################# End of 'get_canvas_width_height(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_canvas_width_height' in the type store
        # Getting the type of 'stypy_return_type' (line 1177)
        stypy_return_type_257071 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1177, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_257071)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_canvas_width_height'
        return stypy_return_type_257071


    @norecursion
    def get_text_width_height_descent(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'get_text_width_height_descent'
        module_type_store = module_type_store.open_function_context('get_text_width_height_descent', 1180, 4, False)
        # Assigning a type to the variable 'self' (line 1181)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1181, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        RendererSVG.get_text_width_height_descent.__dict__.__setitem__('stypy_localization', localization)
        RendererSVG.get_text_width_height_descent.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        RendererSVG.get_text_width_height_descent.__dict__.__setitem__('stypy_type_store', module_type_store)
        RendererSVG.get_text_width_height_descent.__dict__.__setitem__('stypy_function_name', 'RendererSVG.get_text_width_height_descent')
        RendererSVG.get_text_width_height_descent.__dict__.__setitem__('stypy_param_names_list', ['s', 'prop', 'ismath'])
        RendererSVG.get_text_width_height_descent.__dict__.__setitem__('stypy_varargs_param_name', None)
        RendererSVG.get_text_width_height_descent.__dict__.__setitem__('stypy_kwargs_param_name', None)
        RendererSVG.get_text_width_height_descent.__dict__.__setitem__('stypy_call_defaults', defaults)
        RendererSVG.get_text_width_height_descent.__dict__.__setitem__('stypy_call_varargs', varargs)
        RendererSVG.get_text_width_height_descent.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        RendererSVG.get_text_width_height_descent.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RendererSVG.get_text_width_height_descent', ['s', 'prop', 'ismath'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_text_width_height_descent', localization, ['s', 'prop', 'ismath'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_text_width_height_descent(...)' code ##################

        
        # Call to get_text_width_height_descent(...): (line 1181)
        # Processing the call arguments (line 1181)
        # Getting the type of 's' (line 1181)
        s_257075 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1181, 61), 's', False)
        # Getting the type of 'prop' (line 1181)
        prop_257076 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1181, 64), 'prop', False)
        # Getting the type of 'ismath' (line 1181)
        ismath_257077 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1181, 70), 'ismath', False)
        # Processing the call keyword arguments (line 1181)
        kwargs_257078 = {}
        # Getting the type of 'self' (line 1181)
        self_257072 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1181, 15), 'self', False)
        # Obtaining the member '_text2path' of a type (line 1181)
        _text2path_257073 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1181, 15), self_257072, '_text2path')
        # Obtaining the member 'get_text_width_height_descent' of a type (line 1181)
        get_text_width_height_descent_257074 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1181, 15), _text2path_257073, 'get_text_width_height_descent')
        # Calling get_text_width_height_descent(args, kwargs) (line 1181)
        get_text_width_height_descent_call_result_257079 = invoke(stypy.reporting.localization.Localization(__file__, 1181, 15), get_text_width_height_descent_257074, *[s_257075, prop_257076, ismath_257077], **kwargs_257078)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1181)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1181, 8), 'stypy_return_type', get_text_width_height_descent_call_result_257079)
        
        # ################# End of 'get_text_width_height_descent(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_text_width_height_descent' in the type store
        # Getting the type of 'stypy_return_type' (line 1180)
        stypy_return_type_257080 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1180, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_257080)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_text_width_height_descent'
        return stypy_return_type_257080


# Assigning a type to the variable 'RendererSVG' (line 260)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 260, 0), 'RendererSVG', RendererSVG)

# Assigning a Num to a Name (line 261):
float_257081 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 261, 17), 'float')
# Getting the type of 'RendererSVG'
RendererSVG_257082 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'RendererSVG')
# Setting the type of the member 'FONT_SCALE' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), RendererSVG_257082, 'FONT_SCALE', float_257081)

# Assigning a Call to a Name (line 262):

# Call to maxdict(...): (line 262)
# Processing the call arguments (line 262)
int_257084 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 262, 20), 'int')
# Processing the call keyword arguments (line 262)
kwargs_257085 = {}
# Getting the type of 'maxdict' (line 262)
maxdict_257083 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 262, 12), 'maxdict', False)
# Calling maxdict(args, kwargs) (line 262)
maxdict_call_result_257086 = invoke(stypy.reporting.localization.Localization(__file__, 262, 12), maxdict_257083, *[int_257084], **kwargs_257085)

# Getting the type of 'RendererSVG'
RendererSVG_257087 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'RendererSVG')
# Setting the type of the member 'fontd' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), RendererSVG_257087, 'fontd', maxdict_call_result_257086)
# Declaration of the 'FigureCanvasSVG' class
# Getting the type of 'FigureCanvasBase' (line 1184)
FigureCanvasBase_257088 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1184, 22), 'FigureCanvasBase')

class FigureCanvasSVG(FigureCanvasBase_257088, ):
    
    # Assigning a Dict to a Name (line 1185):
    
    # Assigning a Num to a Name (line 1188):

    @norecursion
    def print_svg(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'print_svg'
        module_type_store = module_type_store.open_function_context('print_svg', 1190, 4, False)
        # Assigning a type to the variable 'self' (line 1191)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1191, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        FigureCanvasSVG.print_svg.__dict__.__setitem__('stypy_localization', localization)
        FigureCanvasSVG.print_svg.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        FigureCanvasSVG.print_svg.__dict__.__setitem__('stypy_type_store', module_type_store)
        FigureCanvasSVG.print_svg.__dict__.__setitem__('stypy_function_name', 'FigureCanvasSVG.print_svg')
        FigureCanvasSVG.print_svg.__dict__.__setitem__('stypy_param_names_list', ['filename'])
        FigureCanvasSVG.print_svg.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        FigureCanvasSVG.print_svg.__dict__.__setitem__('stypy_kwargs_param_name', 'kwargs')
        FigureCanvasSVG.print_svg.__dict__.__setitem__('stypy_call_defaults', defaults)
        FigureCanvasSVG.print_svg.__dict__.__setitem__('stypy_call_varargs', varargs)
        FigureCanvasSVG.print_svg.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        FigureCanvasSVG.print_svg.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FigureCanvasSVG.print_svg', ['filename'], 'args', 'kwargs', defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'print_svg', localization, ['filename'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'print_svg(...)' code ##################

        
        
        # Call to isinstance(...): (line 1191)
        # Processing the call arguments (line 1191)
        # Getting the type of 'filename' (line 1191)
        filename_257090 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1191, 22), 'filename', False)
        # Getting the type of 'six' (line 1191)
        six_257091 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1191, 32), 'six', False)
        # Obtaining the member 'string_types' of a type (line 1191)
        string_types_257092 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1191, 32), six_257091, 'string_types')
        # Processing the call keyword arguments (line 1191)
        kwargs_257093 = {}
        # Getting the type of 'isinstance' (line 1191)
        isinstance_257089 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1191, 11), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 1191)
        isinstance_call_result_257094 = invoke(stypy.reporting.localization.Localization(__file__, 1191, 11), isinstance_257089, *[filename_257090, string_types_257092], **kwargs_257093)
        
        # Testing the type of an if condition (line 1191)
        if_condition_257095 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1191, 8), isinstance_call_result_257094)
        # Assigning a type to the variable 'if_condition_257095' (line 1191)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1191, 8), 'if_condition_257095', if_condition_257095)
        # SSA begins for if statement (line 1191)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to open(...): (line 1192)
        # Processing the call arguments (line 1192)
        # Getting the type of 'filename' (line 1192)
        filename_257098 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1192, 25), 'filename', False)
        unicode_257099 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1192, 35), 'unicode', u'w')
        # Processing the call keyword arguments (line 1192)
        unicode_257100 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1192, 49), 'unicode', u'utf-8')
        keyword_257101 = unicode_257100
        kwargs_257102 = {'encoding': keyword_257101}
        # Getting the type of 'io' (line 1192)
        io_257096 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1192, 17), 'io', False)
        # Obtaining the member 'open' of a type (line 1192)
        open_257097 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1192, 17), io_257096, 'open')
        # Calling open(args, kwargs) (line 1192)
        open_call_result_257103 = invoke(stypy.reporting.localization.Localization(__file__, 1192, 17), open_257097, *[filename_257098, unicode_257099], **kwargs_257102)
        
        with_257104 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 1192, 17), open_call_result_257103, 'with parameter', '__enter__', '__exit__')

        if with_257104:
            # Calling the __enter__ method to initiate a with section
            # Obtaining the member '__enter__' of a type (line 1192)
            enter___257105 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1192, 17), open_call_result_257103, '__enter__')
            with_enter_257106 = invoke(stypy.reporting.localization.Localization(__file__, 1192, 17), enter___257105)
            # Assigning a type to the variable 'svgwriter' (line 1192)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1192, 17), 'svgwriter', with_enter_257106)
            
            # Call to _print_svg(...): (line 1193)
            # Processing the call arguments (line 1193)
            # Getting the type of 'filename' (line 1193)
            filename_257109 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1193, 39), 'filename', False)
            # Getting the type of 'svgwriter' (line 1193)
            svgwriter_257110 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1193, 49), 'svgwriter', False)
            # Processing the call keyword arguments (line 1193)
            # Getting the type of 'kwargs' (line 1193)
            kwargs_257111 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1193, 62), 'kwargs', False)
            kwargs_257112 = {'kwargs_257111': kwargs_257111}
            # Getting the type of 'self' (line 1193)
            self_257107 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1193, 23), 'self', False)
            # Obtaining the member '_print_svg' of a type (line 1193)
            _print_svg_257108 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1193, 23), self_257107, '_print_svg')
            # Calling _print_svg(args, kwargs) (line 1193)
            _print_svg_call_result_257113 = invoke(stypy.reporting.localization.Localization(__file__, 1193, 23), _print_svg_257108, *[filename_257109, svgwriter_257110], **kwargs_257112)
            
            # Assigning a type to the variable 'stypy_return_type' (line 1193)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1193, 16), 'stypy_return_type', _print_svg_call_result_257113)
            # Calling the __exit__ method to finish a with section
            # Obtaining the member '__exit__' of a type (line 1192)
            exit___257114 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1192, 17), open_call_result_257103, '__exit__')
            with_exit_257115 = invoke(stypy.reporting.localization.Localization(__file__, 1192, 17), exit___257114, None, None, None)

        # SSA join for if statement (line 1191)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        
        # Call to is_writable_file_like(...): (line 1195)
        # Processing the call arguments (line 1195)
        # Getting the type of 'filename' (line 1195)
        filename_257117 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1195, 37), 'filename', False)
        # Processing the call keyword arguments (line 1195)
        kwargs_257118 = {}
        # Getting the type of 'is_writable_file_like' (line 1195)
        is_writable_file_like_257116 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1195, 15), 'is_writable_file_like', False)
        # Calling is_writable_file_like(args, kwargs) (line 1195)
        is_writable_file_like_call_result_257119 = invoke(stypy.reporting.localization.Localization(__file__, 1195, 15), is_writable_file_like_257116, *[filename_257117], **kwargs_257118)
        
        # Applying the 'not' unary operator (line 1195)
        result_not__257120 = python_operator(stypy.reporting.localization.Localization(__file__, 1195, 11), 'not', is_writable_file_like_call_result_257119)
        
        # Testing the type of an if condition (line 1195)
        if_condition_257121 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1195, 8), result_not__257120)
        # Assigning a type to the variable 'if_condition_257121' (line 1195)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1195, 8), 'if_condition_257121', if_condition_257121)
        # SSA begins for if statement (line 1195)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 1196)
        # Processing the call arguments (line 1196)
        unicode_257123 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1196, 29), 'unicode', u'filename must be a path or a file-like object')
        # Processing the call keyword arguments (line 1196)
        kwargs_257124 = {}
        # Getting the type of 'ValueError' (line 1196)
        ValueError_257122 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1196, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 1196)
        ValueError_call_result_257125 = invoke(stypy.reporting.localization.Localization(__file__, 1196, 18), ValueError_257122, *[unicode_257123], **kwargs_257124)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1196, 12), ValueError_call_result_257125, 'raise parameter', BaseException)
        # SSA join for if statement (line 1195)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Name to a Name (line 1198):
        
        # Assigning a Name to a Name (line 1198):
        # Getting the type of 'filename' (line 1198)
        filename_257126 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1198, 20), 'filename')
        # Assigning a type to the variable 'svgwriter' (line 1198)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1198, 8), 'svgwriter', filename_257126)
        
        # Assigning a Call to a Name (line 1199):
        
        # Assigning a Call to a Name (line 1199):
        
        # Call to getattr(...): (line 1199)
        # Processing the call arguments (line 1199)
        # Getting the type of 'svgwriter' (line 1199)
        svgwriter_257128 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1199, 27), 'svgwriter', False)
        unicode_257129 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1199, 38), 'unicode', u'name')
        unicode_257130 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1199, 46), 'unicode', u'')
        # Processing the call keyword arguments (line 1199)
        kwargs_257131 = {}
        # Getting the type of 'getattr' (line 1199)
        getattr_257127 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1199, 19), 'getattr', False)
        # Calling getattr(args, kwargs) (line 1199)
        getattr_call_result_257132 = invoke(stypy.reporting.localization.Localization(__file__, 1199, 19), getattr_257127, *[svgwriter_257128, unicode_257129, unicode_257130], **kwargs_257131)
        
        # Assigning a type to the variable 'filename' (line 1199)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1199, 8), 'filename', getattr_call_result_257132)
        
        
        
        # Call to isinstance(...): (line 1200)
        # Processing the call arguments (line 1200)
        # Getting the type of 'filename' (line 1200)
        filename_257134 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1200, 26), 'filename', False)
        # Getting the type of 'six' (line 1200)
        six_257135 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1200, 36), 'six', False)
        # Obtaining the member 'string_types' of a type (line 1200)
        string_types_257136 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1200, 36), six_257135, 'string_types')
        # Processing the call keyword arguments (line 1200)
        kwargs_257137 = {}
        # Getting the type of 'isinstance' (line 1200)
        isinstance_257133 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1200, 15), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 1200)
        isinstance_call_result_257138 = invoke(stypy.reporting.localization.Localization(__file__, 1200, 15), isinstance_257133, *[filename_257134, string_types_257136], **kwargs_257137)
        
        # Applying the 'not' unary operator (line 1200)
        result_not__257139 = python_operator(stypy.reporting.localization.Localization(__file__, 1200, 11), 'not', isinstance_call_result_257138)
        
        # Testing the type of an if condition (line 1200)
        if_condition_257140 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1200, 8), result_not__257139)
        # Assigning a type to the variable 'if_condition_257140' (line 1200)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1200, 8), 'if_condition_257140', if_condition_257140)
        # SSA begins for if statement (line 1200)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Str to a Name (line 1201):
        
        # Assigning a Str to a Name (line 1201):
        unicode_257141 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1201, 23), 'unicode', u'')
        # Assigning a type to the variable 'filename' (line 1201)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1201, 12), 'filename', unicode_257141)
        # SSA join for if statement (line 1200)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        
        # Call to isinstance(...): (line 1203)
        # Processing the call arguments (line 1203)
        # Getting the type of 'svgwriter' (line 1203)
        svgwriter_257143 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1203, 26), 'svgwriter', False)
        # Getting the type of 'io' (line 1203)
        io_257144 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1203, 37), 'io', False)
        # Obtaining the member 'TextIOBase' of a type (line 1203)
        TextIOBase_257145 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1203, 37), io_257144, 'TextIOBase')
        # Processing the call keyword arguments (line 1203)
        kwargs_257146 = {}
        # Getting the type of 'isinstance' (line 1203)
        isinstance_257142 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1203, 15), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 1203)
        isinstance_call_result_257147 = invoke(stypy.reporting.localization.Localization(__file__, 1203, 15), isinstance_257142, *[svgwriter_257143, TextIOBase_257145], **kwargs_257146)
        
        # Applying the 'not' unary operator (line 1203)
        result_not__257148 = python_operator(stypy.reporting.localization.Localization(__file__, 1203, 11), 'not', isinstance_call_result_257147)
        
        # Testing the type of an if condition (line 1203)
        if_condition_257149 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1203, 8), result_not__257148)
        # Assigning a type to the variable 'if_condition_257149' (line 1203)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1203, 8), 'if_condition_257149', if_condition_257149)
        # SSA begins for if statement (line 1203)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'six' (line 1204)
        six_257150 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1204, 15), 'six')
        # Obtaining the member 'PY3' of a type (line 1204)
        PY3_257151 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1204, 15), six_257150, 'PY3')
        # Testing the type of an if condition (line 1204)
        if_condition_257152 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1204, 12), PY3_257151)
        # Assigning a type to the variable 'if_condition_257152' (line 1204)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1204, 12), 'if_condition_257152', if_condition_257152)
        # SSA begins for if statement (line 1204)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 1205):
        
        # Assigning a Call to a Name (line 1205):
        
        # Call to TextIOWrapper(...): (line 1205)
        # Processing the call arguments (line 1205)
        # Getting the type of 'svgwriter' (line 1205)
        svgwriter_257155 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1205, 45), 'svgwriter', False)
        unicode_257156 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1205, 56), 'unicode', u'utf-8')
        # Processing the call keyword arguments (line 1205)
        kwargs_257157 = {}
        # Getting the type of 'io' (line 1205)
        io_257153 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1205, 28), 'io', False)
        # Obtaining the member 'TextIOWrapper' of a type (line 1205)
        TextIOWrapper_257154 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1205, 28), io_257153, 'TextIOWrapper')
        # Calling TextIOWrapper(args, kwargs) (line 1205)
        TextIOWrapper_call_result_257158 = invoke(stypy.reporting.localization.Localization(__file__, 1205, 28), TextIOWrapper_257154, *[svgwriter_257155, unicode_257156], **kwargs_257157)
        
        # Assigning a type to the variable 'svgwriter' (line 1205)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1205, 16), 'svgwriter', TextIOWrapper_call_result_257158)
        # SSA branch for the else part of an if statement (line 1204)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Call to a Name (line 1207):
        
        # Assigning a Call to a Name (line 1207):
        
        # Call to (...): (line 1207)
        # Processing the call arguments (line 1207)
        # Getting the type of 'svgwriter' (line 1207)
        svgwriter_257164 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1207, 54), 'svgwriter', False)
        # Processing the call keyword arguments (line 1207)
        kwargs_257165 = {}
        
        # Call to getwriter(...): (line 1207)
        # Processing the call arguments (line 1207)
        unicode_257161 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1207, 45), 'unicode', u'utf-8')
        # Processing the call keyword arguments (line 1207)
        kwargs_257162 = {}
        # Getting the type of 'codecs' (line 1207)
        codecs_257159 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1207, 28), 'codecs', False)
        # Obtaining the member 'getwriter' of a type (line 1207)
        getwriter_257160 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1207, 28), codecs_257159, 'getwriter')
        # Calling getwriter(args, kwargs) (line 1207)
        getwriter_call_result_257163 = invoke(stypy.reporting.localization.Localization(__file__, 1207, 28), getwriter_257160, *[unicode_257161], **kwargs_257162)
        
        # Calling (args, kwargs) (line 1207)
        _call_result_257166 = invoke(stypy.reporting.localization.Localization(__file__, 1207, 28), getwriter_call_result_257163, *[svgwriter_257164], **kwargs_257165)
        
        # Assigning a type to the variable 'svgwriter' (line 1207)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1207, 16), 'svgwriter', _call_result_257166)
        # SSA join for if statement (line 1204)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Name to a Name (line 1208):
        
        # Assigning a Name to a Name (line 1208):
        # Getting the type of 'True' (line 1208)
        True_257167 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1208, 21), 'True')
        # Assigning a type to the variable 'detach' (line 1208)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1208, 12), 'detach', True_257167)
        # SSA branch for the else part of an if statement (line 1203)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Name to a Name (line 1210):
        
        # Assigning a Name to a Name (line 1210):
        # Getting the type of 'False' (line 1210)
        False_257168 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1210, 21), 'False')
        # Assigning a type to the variable 'detach' (line 1210)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1210, 12), 'detach', False_257168)
        # SSA join for if statement (line 1203)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 1212):
        
        # Assigning a Call to a Name (line 1212):
        
        # Call to _print_svg(...): (line 1212)
        # Processing the call arguments (line 1212)
        # Getting the type of 'filename' (line 1212)
        filename_257171 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1212, 33), 'filename', False)
        # Getting the type of 'svgwriter' (line 1212)
        svgwriter_257172 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1212, 43), 'svgwriter', False)
        # Processing the call keyword arguments (line 1212)
        # Getting the type of 'kwargs' (line 1212)
        kwargs_257173 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1212, 56), 'kwargs', False)
        kwargs_257174 = {'kwargs_257173': kwargs_257173}
        # Getting the type of 'self' (line 1212)
        self_257169 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1212, 17), 'self', False)
        # Obtaining the member '_print_svg' of a type (line 1212)
        _print_svg_257170 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1212, 17), self_257169, '_print_svg')
        # Calling _print_svg(args, kwargs) (line 1212)
        _print_svg_call_result_257175 = invoke(stypy.reporting.localization.Localization(__file__, 1212, 17), _print_svg_257170, *[filename_257171, svgwriter_257172], **kwargs_257174)
        
        # Assigning a type to the variable 'result' (line 1212)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1212, 8), 'result', _print_svg_call_result_257175)
        
        # Getting the type of 'detach' (line 1216)
        detach_257176 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1216, 11), 'detach')
        # Testing the type of an if condition (line 1216)
        if_condition_257177 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1216, 8), detach_257176)
        # Assigning a type to the variable 'if_condition_257177' (line 1216)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1216, 8), 'if_condition_257177', if_condition_257177)
        # SSA begins for if statement (line 1216)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'six' (line 1217)
        six_257178 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1217, 15), 'six')
        # Obtaining the member 'PY3' of a type (line 1217)
        PY3_257179 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1217, 15), six_257178, 'PY3')
        # Testing the type of an if condition (line 1217)
        if_condition_257180 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1217, 12), PY3_257179)
        # Assigning a type to the variable 'if_condition_257180' (line 1217)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1217, 12), 'if_condition_257180', if_condition_257180)
        # SSA begins for if statement (line 1217)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to detach(...): (line 1218)
        # Processing the call keyword arguments (line 1218)
        kwargs_257183 = {}
        # Getting the type of 'svgwriter' (line 1218)
        svgwriter_257181 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1218, 16), 'svgwriter', False)
        # Obtaining the member 'detach' of a type (line 1218)
        detach_257182 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1218, 16), svgwriter_257181, 'detach')
        # Calling detach(args, kwargs) (line 1218)
        detach_call_result_257184 = invoke(stypy.reporting.localization.Localization(__file__, 1218, 16), detach_257182, *[], **kwargs_257183)
        
        # SSA branch for the else part of an if statement (line 1217)
        module_type_store.open_ssa_branch('else')
        
        # Call to reset(...): (line 1220)
        # Processing the call keyword arguments (line 1220)
        kwargs_257187 = {}
        # Getting the type of 'svgwriter' (line 1220)
        svgwriter_257185 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1220, 16), 'svgwriter', False)
        # Obtaining the member 'reset' of a type (line 1220)
        reset_257186 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1220, 16), svgwriter_257185, 'reset')
        # Calling reset(args, kwargs) (line 1220)
        reset_call_result_257188 = invoke(stypy.reporting.localization.Localization(__file__, 1220, 16), reset_257186, *[], **kwargs_257187)
        
        
        # Assigning a Call to a Attribute (line 1221):
        
        # Assigning a Call to a Attribute (line 1221):
        
        # Call to BytesIO(...): (line 1221)
        # Processing the call keyword arguments (line 1221)
        kwargs_257191 = {}
        # Getting the type of 'io' (line 1221)
        io_257189 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1221, 35), 'io', False)
        # Obtaining the member 'BytesIO' of a type (line 1221)
        BytesIO_257190 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1221, 35), io_257189, 'BytesIO')
        # Calling BytesIO(args, kwargs) (line 1221)
        BytesIO_call_result_257192 = invoke(stypy.reporting.localization.Localization(__file__, 1221, 35), BytesIO_257190, *[], **kwargs_257191)
        
        # Getting the type of 'svgwriter' (line 1221)
        svgwriter_257193 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1221, 16), 'svgwriter')
        # Setting the type of the member 'stream' of a type (line 1221)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1221, 16), svgwriter_257193, 'stream', BytesIO_call_result_257192)
        # SSA join for if statement (line 1217)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 1216)
        module_type_store = module_type_store.join_ssa_context()
        
        # Getting the type of 'result' (line 1223)
        result_257194 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1223, 15), 'result')
        # Assigning a type to the variable 'stypy_return_type' (line 1223)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1223, 8), 'stypy_return_type', result_257194)
        
        # ################# End of 'print_svg(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'print_svg' in the type store
        # Getting the type of 'stypy_return_type' (line 1190)
        stypy_return_type_257195 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1190, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_257195)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'print_svg'
        return stypy_return_type_257195


    @norecursion
    def print_svgz(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'print_svgz'
        module_type_store = module_type_store.open_function_context('print_svgz', 1225, 4, False)
        # Assigning a type to the variable 'self' (line 1226)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1226, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        FigureCanvasSVG.print_svgz.__dict__.__setitem__('stypy_localization', localization)
        FigureCanvasSVG.print_svgz.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        FigureCanvasSVG.print_svgz.__dict__.__setitem__('stypy_type_store', module_type_store)
        FigureCanvasSVG.print_svgz.__dict__.__setitem__('stypy_function_name', 'FigureCanvasSVG.print_svgz')
        FigureCanvasSVG.print_svgz.__dict__.__setitem__('stypy_param_names_list', ['filename'])
        FigureCanvasSVG.print_svgz.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        FigureCanvasSVG.print_svgz.__dict__.__setitem__('stypy_kwargs_param_name', 'kwargs')
        FigureCanvasSVG.print_svgz.__dict__.__setitem__('stypy_call_defaults', defaults)
        FigureCanvasSVG.print_svgz.__dict__.__setitem__('stypy_call_varargs', varargs)
        FigureCanvasSVG.print_svgz.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        FigureCanvasSVG.print_svgz.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FigureCanvasSVG.print_svgz', ['filename'], 'args', 'kwargs', defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'print_svgz', localization, ['filename'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'print_svgz(...)' code ##################

        
        
        # Call to isinstance(...): (line 1226)
        # Processing the call arguments (line 1226)
        # Getting the type of 'filename' (line 1226)
        filename_257197 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1226, 22), 'filename', False)
        # Getting the type of 'six' (line 1226)
        six_257198 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1226, 32), 'six', False)
        # Obtaining the member 'string_types' of a type (line 1226)
        string_types_257199 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1226, 32), six_257198, 'string_types')
        # Processing the call keyword arguments (line 1226)
        kwargs_257200 = {}
        # Getting the type of 'isinstance' (line 1226)
        isinstance_257196 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1226, 11), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 1226)
        isinstance_call_result_257201 = invoke(stypy.reporting.localization.Localization(__file__, 1226, 11), isinstance_257196, *[filename_257197, string_types_257199], **kwargs_257200)
        
        # Testing the type of an if condition (line 1226)
        if_condition_257202 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1226, 8), isinstance_call_result_257201)
        # Assigning a type to the variable 'if_condition_257202' (line 1226)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1226, 8), 'if_condition_257202', if_condition_257202)
        # SSA begins for if statement (line 1226)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 1227):
        
        # Assigning a Call to a Name (line 1227):
        
        # Call to dict(...): (line 1227)
        # Processing the call keyword arguments (line 1227)
        # Getting the type of 'filename' (line 1227)
        filename_257204 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1227, 36), 'filename', False)
        keyword_257205 = filename_257204
        kwargs_257206 = {'filename': keyword_257205}
        # Getting the type of 'dict' (line 1227)
        dict_257203 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1227, 22), 'dict', False)
        # Calling dict(args, kwargs) (line 1227)
        dict_call_result_257207 = invoke(stypy.reporting.localization.Localization(__file__, 1227, 22), dict_257203, *[], **kwargs_257206)
        
        # Assigning a type to the variable 'options' (line 1227)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1227, 12), 'options', dict_call_result_257207)
        # SSA branch for the else part of an if statement (line 1226)
        module_type_store.open_ssa_branch('else')
        
        
        # Call to is_writable_file_like(...): (line 1228)
        # Processing the call arguments (line 1228)
        # Getting the type of 'filename' (line 1228)
        filename_257209 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1228, 35), 'filename', False)
        # Processing the call keyword arguments (line 1228)
        kwargs_257210 = {}
        # Getting the type of 'is_writable_file_like' (line 1228)
        is_writable_file_like_257208 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1228, 13), 'is_writable_file_like', False)
        # Calling is_writable_file_like(args, kwargs) (line 1228)
        is_writable_file_like_call_result_257211 = invoke(stypy.reporting.localization.Localization(__file__, 1228, 13), is_writable_file_like_257208, *[filename_257209], **kwargs_257210)
        
        # Testing the type of an if condition (line 1228)
        if_condition_257212 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1228, 13), is_writable_file_like_call_result_257211)
        # Assigning a type to the variable 'if_condition_257212' (line 1228)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1228, 13), 'if_condition_257212', if_condition_257212)
        # SSA begins for if statement (line 1228)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 1229):
        
        # Assigning a Call to a Name (line 1229):
        
        # Call to dict(...): (line 1229)
        # Processing the call keyword arguments (line 1229)
        # Getting the type of 'filename' (line 1229)
        filename_257214 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1229, 35), 'filename', False)
        keyword_257215 = filename_257214
        kwargs_257216 = {'fileobj': keyword_257215}
        # Getting the type of 'dict' (line 1229)
        dict_257213 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1229, 22), 'dict', False)
        # Calling dict(args, kwargs) (line 1229)
        dict_call_result_257217 = invoke(stypy.reporting.localization.Localization(__file__, 1229, 22), dict_257213, *[], **kwargs_257216)
        
        # Assigning a type to the variable 'options' (line 1229)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1229, 12), 'options', dict_call_result_257217)
        # SSA branch for the else part of an if statement (line 1228)
        module_type_store.open_ssa_branch('else')
        
        # Call to ValueError(...): (line 1231)
        # Processing the call arguments (line 1231)
        unicode_257219 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1231, 29), 'unicode', u'filename must be a path or a file-like object')
        # Processing the call keyword arguments (line 1231)
        kwargs_257220 = {}
        # Getting the type of 'ValueError' (line 1231)
        ValueError_257218 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1231, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 1231)
        ValueError_call_result_257221 = invoke(stypy.reporting.localization.Localization(__file__, 1231, 18), ValueError_257218, *[unicode_257219], **kwargs_257220)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1231, 12), ValueError_call_result_257221, 'raise parameter', BaseException)
        # SSA join for if statement (line 1228)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 1226)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to GzipFile(...): (line 1233)
        # Processing the call keyword arguments (line 1233)
        unicode_257224 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1233, 32), 'unicode', u'w')
        keyword_257225 = unicode_257224
        # Getting the type of 'options' (line 1233)
        options_257226 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1233, 39), 'options', False)
        kwargs_257227 = {'mode': keyword_257225, 'options_257226': options_257226}
        # Getting the type of 'gzip' (line 1233)
        gzip_257222 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1233, 13), 'gzip', False)
        # Obtaining the member 'GzipFile' of a type (line 1233)
        GzipFile_257223 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1233, 13), gzip_257222, 'GzipFile')
        # Calling GzipFile(args, kwargs) (line 1233)
        GzipFile_call_result_257228 = invoke(stypy.reporting.localization.Localization(__file__, 1233, 13), GzipFile_257223, *[], **kwargs_257227)
        
        with_257229 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 1233, 13), GzipFile_call_result_257228, 'with parameter', '__enter__', '__exit__')

        if with_257229:
            # Calling the __enter__ method to initiate a with section
            # Obtaining the member '__enter__' of a type (line 1233)
            enter___257230 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1233, 13), GzipFile_call_result_257228, '__enter__')
            with_enter_257231 = invoke(stypy.reporting.localization.Localization(__file__, 1233, 13), enter___257230)
            # Assigning a type to the variable 'gzipwriter' (line 1233)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1233, 13), 'gzipwriter', with_enter_257231)
            
            # Call to print_svg(...): (line 1234)
            # Processing the call arguments (line 1234)
            # Getting the type of 'gzipwriter' (line 1234)
            gzipwriter_257234 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1234, 34), 'gzipwriter', False)
            # Processing the call keyword arguments (line 1234)
            kwargs_257235 = {}
            # Getting the type of 'self' (line 1234)
            self_257232 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1234, 19), 'self', False)
            # Obtaining the member 'print_svg' of a type (line 1234)
            print_svg_257233 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1234, 19), self_257232, 'print_svg')
            # Calling print_svg(args, kwargs) (line 1234)
            print_svg_call_result_257236 = invoke(stypy.reporting.localization.Localization(__file__, 1234, 19), print_svg_257233, *[gzipwriter_257234], **kwargs_257235)
            
            # Assigning a type to the variable 'stypy_return_type' (line 1234)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1234, 12), 'stypy_return_type', print_svg_call_result_257236)
            # Calling the __exit__ method to finish a with section
            # Obtaining the member '__exit__' of a type (line 1233)
            exit___257237 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1233, 13), GzipFile_call_result_257228, '__exit__')
            with_exit_257238 = invoke(stypy.reporting.localization.Localization(__file__, 1233, 13), exit___257237, None, None, None)

        
        # ################# End of 'print_svgz(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'print_svgz' in the type store
        # Getting the type of 'stypy_return_type' (line 1225)
        stypy_return_type_257239 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1225, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_257239)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'print_svgz'
        return stypy_return_type_257239


    @norecursion
    def _print_svg(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_print_svg'
        module_type_store = module_type_store.open_function_context('_print_svg', 1236, 4, False)
        # Assigning a type to the variable 'self' (line 1237)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1237, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        FigureCanvasSVG._print_svg.__dict__.__setitem__('stypy_localization', localization)
        FigureCanvasSVG._print_svg.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        FigureCanvasSVG._print_svg.__dict__.__setitem__('stypy_type_store', module_type_store)
        FigureCanvasSVG._print_svg.__dict__.__setitem__('stypy_function_name', 'FigureCanvasSVG._print_svg')
        FigureCanvasSVG._print_svg.__dict__.__setitem__('stypy_param_names_list', ['filename', 'svgwriter'])
        FigureCanvasSVG._print_svg.__dict__.__setitem__('stypy_varargs_param_name', None)
        FigureCanvasSVG._print_svg.__dict__.__setitem__('stypy_kwargs_param_name', 'kwargs')
        FigureCanvasSVG._print_svg.__dict__.__setitem__('stypy_call_defaults', defaults)
        FigureCanvasSVG._print_svg.__dict__.__setitem__('stypy_call_varargs', varargs)
        FigureCanvasSVG._print_svg.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        FigureCanvasSVG._print_svg.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FigureCanvasSVG._print_svg', ['filename', 'svgwriter'], None, 'kwargs', defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_print_svg', localization, ['filename', 'svgwriter'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_print_svg(...)' code ##################

        
        # Assigning a Call to a Name (line 1237):
        
        # Assigning a Call to a Name (line 1237):
        
        # Call to pop(...): (line 1237)
        # Processing the call arguments (line 1237)
        unicode_257242 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1237, 31), 'unicode', u'dpi')
        int_257243 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1237, 38), 'int')
        # Processing the call keyword arguments (line 1237)
        kwargs_257244 = {}
        # Getting the type of 'kwargs' (line 1237)
        kwargs_257240 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1237, 20), 'kwargs', False)
        # Obtaining the member 'pop' of a type (line 1237)
        pop_257241 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1237, 20), kwargs_257240, 'pop')
        # Calling pop(args, kwargs) (line 1237)
        pop_call_result_257245 = invoke(stypy.reporting.localization.Localization(__file__, 1237, 20), pop_257241, *[unicode_257242, int_257243], **kwargs_257244)
        
        # Assigning a type to the variable 'image_dpi' (line 1237)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1237, 8), 'image_dpi', pop_call_result_257245)
        
        # Call to set_dpi(...): (line 1238)
        # Processing the call arguments (line 1238)
        float_257249 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1238, 28), 'float')
        # Processing the call keyword arguments (line 1238)
        kwargs_257250 = {}
        # Getting the type of 'self' (line 1238)
        self_257246 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1238, 8), 'self', False)
        # Obtaining the member 'figure' of a type (line 1238)
        figure_257247 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1238, 8), self_257246, 'figure')
        # Obtaining the member 'set_dpi' of a type (line 1238)
        set_dpi_257248 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1238, 8), figure_257247, 'set_dpi')
        # Calling set_dpi(args, kwargs) (line 1238)
        set_dpi_call_result_257251 = invoke(stypy.reporting.localization.Localization(__file__, 1238, 8), set_dpi_257248, *[float_257249], **kwargs_257250)
        
        
        # Assigning a Call to a Tuple (line 1239):
        
        # Assigning a Call to a Name:
        
        # Call to get_size_inches(...): (line 1239)
        # Processing the call keyword arguments (line 1239)
        kwargs_257255 = {}
        # Getting the type of 'self' (line 1239)
        self_257252 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1239, 24), 'self', False)
        # Obtaining the member 'figure' of a type (line 1239)
        figure_257253 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1239, 24), self_257252, 'figure')
        # Obtaining the member 'get_size_inches' of a type (line 1239)
        get_size_inches_257254 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1239, 24), figure_257253, 'get_size_inches')
        # Calling get_size_inches(args, kwargs) (line 1239)
        get_size_inches_call_result_257256 = invoke(stypy.reporting.localization.Localization(__file__, 1239, 24), get_size_inches_257254, *[], **kwargs_257255)
        
        # Assigning a type to the variable 'call_assignment_252837' (line 1239)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1239, 8), 'call_assignment_252837', get_size_inches_call_result_257256)
        
        # Assigning a Call to a Name (line 1239):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_257259 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1239, 8), 'int')
        # Processing the call keyword arguments
        kwargs_257260 = {}
        # Getting the type of 'call_assignment_252837' (line 1239)
        call_assignment_252837_257257 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1239, 8), 'call_assignment_252837', False)
        # Obtaining the member '__getitem__' of a type (line 1239)
        getitem___257258 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1239, 8), call_assignment_252837_257257, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_257261 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___257258, *[int_257259], **kwargs_257260)
        
        # Assigning a type to the variable 'call_assignment_252838' (line 1239)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1239, 8), 'call_assignment_252838', getitem___call_result_257261)
        
        # Assigning a Name to a Name (line 1239):
        # Getting the type of 'call_assignment_252838' (line 1239)
        call_assignment_252838_257262 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1239, 8), 'call_assignment_252838')
        # Assigning a type to the variable 'width' (line 1239)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1239, 8), 'width', call_assignment_252838_257262)
        
        # Assigning a Call to a Name (line 1239):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_257265 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1239, 8), 'int')
        # Processing the call keyword arguments
        kwargs_257266 = {}
        # Getting the type of 'call_assignment_252837' (line 1239)
        call_assignment_252837_257263 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1239, 8), 'call_assignment_252837', False)
        # Obtaining the member '__getitem__' of a type (line 1239)
        getitem___257264 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1239, 8), call_assignment_252837_257263, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_257267 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___257264, *[int_257265], **kwargs_257266)
        
        # Assigning a type to the variable 'call_assignment_252839' (line 1239)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1239, 8), 'call_assignment_252839', getitem___call_result_257267)
        
        # Assigning a Name to a Name (line 1239):
        # Getting the type of 'call_assignment_252839' (line 1239)
        call_assignment_252839_257268 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1239, 8), 'call_assignment_252839')
        # Assigning a type to the variable 'height' (line 1239)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1239, 15), 'height', call_assignment_252839_257268)
        
        # Assigning a Tuple to a Tuple (line 1240):
        
        # Assigning a BinOp to a Name (line 1240):
        # Getting the type of 'width' (line 1240)
        width_257269 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1240, 15), 'width')
        int_257270 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1240, 21), 'int')
        # Applying the binary operator '*' (line 1240)
        result_mul_257271 = python_operator(stypy.reporting.localization.Localization(__file__, 1240, 15), '*', width_257269, int_257270)
        
        # Assigning a type to the variable 'tuple_assignment_252840' (line 1240)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1240, 8), 'tuple_assignment_252840', result_mul_257271)
        
        # Assigning a BinOp to a Name (line 1240):
        # Getting the type of 'height' (line 1240)
        height_257272 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1240, 25), 'height')
        int_257273 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1240, 32), 'int')
        # Applying the binary operator '*' (line 1240)
        result_mul_257274 = python_operator(stypy.reporting.localization.Localization(__file__, 1240, 25), '*', height_257272, int_257273)
        
        # Assigning a type to the variable 'tuple_assignment_252841' (line 1240)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1240, 8), 'tuple_assignment_252841', result_mul_257274)
        
        # Assigning a Name to a Name (line 1240):
        # Getting the type of 'tuple_assignment_252840' (line 1240)
        tuple_assignment_252840_257275 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1240, 8), 'tuple_assignment_252840')
        # Assigning a type to the variable 'w' (line 1240)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1240, 8), 'w', tuple_assignment_252840_257275)
        
        # Assigning a Name to a Name (line 1240):
        # Getting the type of 'tuple_assignment_252841' (line 1240)
        tuple_assignment_252841_257276 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1240, 8), 'tuple_assignment_252841')
        # Assigning a type to the variable 'h' (line 1240)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1240, 11), 'h', tuple_assignment_252841_257276)
        
        # Assigning a Call to a Name (line 1242):
        
        # Assigning a Call to a Name (line 1242):
        
        # Call to pop(...): (line 1242)
        # Processing the call arguments (line 1242)
        unicode_257279 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1242, 42), 'unicode', u'bbox_inches_restore')
        # Getting the type of 'None' (line 1242)
        None_257280 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1242, 65), 'None', False)
        # Processing the call keyword arguments (line 1242)
        kwargs_257281 = {}
        # Getting the type of 'kwargs' (line 1242)
        kwargs_257277 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1242, 31), 'kwargs', False)
        # Obtaining the member 'pop' of a type (line 1242)
        pop_257278 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1242, 31), kwargs_257277, 'pop')
        # Calling pop(args, kwargs) (line 1242)
        pop_call_result_257282 = invoke(stypy.reporting.localization.Localization(__file__, 1242, 31), pop_257278, *[unicode_257279, None_257280], **kwargs_257281)
        
        # Assigning a type to the variable '_bbox_inches_restore' (line 1242)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1242, 8), '_bbox_inches_restore', pop_call_result_257282)
        
        # Assigning a Call to a Name (line 1243):
        
        # Assigning a Call to a Name (line 1243):
        
        # Call to MixedModeRenderer(...): (line 1243)
        # Processing the call arguments (line 1243)
        # Getting the type of 'self' (line 1244)
        self_257284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1244, 12), 'self', False)
        # Obtaining the member 'figure' of a type (line 1244)
        figure_257285 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1244, 12), self_257284, 'figure')
        # Getting the type of 'width' (line 1245)
        width_257286 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1245, 12), 'width', False)
        # Getting the type of 'height' (line 1245)
        height_257287 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1245, 19), 'height', False)
        # Getting the type of 'image_dpi' (line 1245)
        image_dpi_257288 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1245, 27), 'image_dpi', False)
        
        # Call to RendererSVG(...): (line 1245)
        # Processing the call arguments (line 1245)
        # Getting the type of 'w' (line 1245)
        w_257290 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1245, 50), 'w', False)
        # Getting the type of 'h' (line 1245)
        h_257291 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1245, 53), 'h', False)
        # Getting the type of 'svgwriter' (line 1245)
        svgwriter_257292 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1245, 56), 'svgwriter', False)
        # Getting the type of 'filename' (line 1245)
        filename_257293 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1245, 67), 'filename', False)
        # Getting the type of 'image_dpi' (line 1245)
        image_dpi_257294 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1245, 77), 'image_dpi', False)
        # Processing the call keyword arguments (line 1245)
        kwargs_257295 = {}
        # Getting the type of 'RendererSVG' (line 1245)
        RendererSVG_257289 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1245, 38), 'RendererSVG', False)
        # Calling RendererSVG(args, kwargs) (line 1245)
        RendererSVG_call_result_257296 = invoke(stypy.reporting.localization.Localization(__file__, 1245, 38), RendererSVG_257289, *[w_257290, h_257291, svgwriter_257292, filename_257293, image_dpi_257294], **kwargs_257295)
        
        # Processing the call keyword arguments (line 1243)
        # Getting the type of '_bbox_inches_restore' (line 1246)
        _bbox_inches_restore_257297 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1246, 32), '_bbox_inches_restore', False)
        keyword_257298 = _bbox_inches_restore_257297
        kwargs_257299 = {'bbox_inches_restore': keyword_257298}
        # Getting the type of 'MixedModeRenderer' (line 1243)
        MixedModeRenderer_257283 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1243, 19), 'MixedModeRenderer', False)
        # Calling MixedModeRenderer(args, kwargs) (line 1243)
        MixedModeRenderer_call_result_257300 = invoke(stypy.reporting.localization.Localization(__file__, 1243, 19), MixedModeRenderer_257283, *[figure_257285, width_257286, height_257287, image_dpi_257288, RendererSVG_call_result_257296], **kwargs_257299)
        
        # Assigning a type to the variable 'renderer' (line 1243)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1243, 8), 'renderer', MixedModeRenderer_call_result_257300)
        
        # Call to draw(...): (line 1248)
        # Processing the call arguments (line 1248)
        # Getting the type of 'renderer' (line 1248)
        renderer_257304 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1248, 25), 'renderer', False)
        # Processing the call keyword arguments (line 1248)
        kwargs_257305 = {}
        # Getting the type of 'self' (line 1248)
        self_257301 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1248, 8), 'self', False)
        # Obtaining the member 'figure' of a type (line 1248)
        figure_257302 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1248, 8), self_257301, 'figure')
        # Obtaining the member 'draw' of a type (line 1248)
        draw_257303 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1248, 8), figure_257302, 'draw')
        # Calling draw(args, kwargs) (line 1248)
        draw_call_result_257306 = invoke(stypy.reporting.localization.Localization(__file__, 1248, 8), draw_257303, *[renderer_257304], **kwargs_257305)
        
        
        # Call to finalize(...): (line 1249)
        # Processing the call keyword arguments (line 1249)
        kwargs_257309 = {}
        # Getting the type of 'renderer' (line 1249)
        renderer_257307 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1249, 8), 'renderer', False)
        # Obtaining the member 'finalize' of a type (line 1249)
        finalize_257308 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1249, 8), renderer_257307, 'finalize')
        # Calling finalize(args, kwargs) (line 1249)
        finalize_call_result_257310 = invoke(stypy.reporting.localization.Localization(__file__, 1249, 8), finalize_257308, *[], **kwargs_257309)
        
        
        # ################# End of '_print_svg(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_print_svg' in the type store
        # Getting the type of 'stypy_return_type' (line 1236)
        stypy_return_type_257311 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1236, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_257311)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_print_svg'
        return stypy_return_type_257311


    @norecursion
    def get_default_filetype(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'get_default_filetype'
        module_type_store = module_type_store.open_function_context('get_default_filetype', 1251, 4, False)
        # Assigning a type to the variable 'self' (line 1252)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1252, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        FigureCanvasSVG.get_default_filetype.__dict__.__setitem__('stypy_localization', localization)
        FigureCanvasSVG.get_default_filetype.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        FigureCanvasSVG.get_default_filetype.__dict__.__setitem__('stypy_type_store', module_type_store)
        FigureCanvasSVG.get_default_filetype.__dict__.__setitem__('stypy_function_name', 'FigureCanvasSVG.get_default_filetype')
        FigureCanvasSVG.get_default_filetype.__dict__.__setitem__('stypy_param_names_list', [])
        FigureCanvasSVG.get_default_filetype.__dict__.__setitem__('stypy_varargs_param_name', None)
        FigureCanvasSVG.get_default_filetype.__dict__.__setitem__('stypy_kwargs_param_name', None)
        FigureCanvasSVG.get_default_filetype.__dict__.__setitem__('stypy_call_defaults', defaults)
        FigureCanvasSVG.get_default_filetype.__dict__.__setitem__('stypy_call_varargs', varargs)
        FigureCanvasSVG.get_default_filetype.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        FigureCanvasSVG.get_default_filetype.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FigureCanvasSVG.get_default_filetype', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_default_filetype', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_default_filetype(...)' code ##################

        unicode_257312 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1252, 15), 'unicode', u'svg')
        # Assigning a type to the variable 'stypy_return_type' (line 1252)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1252, 8), 'stypy_return_type', unicode_257312)
        
        # ################# End of 'get_default_filetype(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_default_filetype' in the type store
        # Getting the type of 'stypy_return_type' (line 1251)
        stypy_return_type_257313 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1251, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_257313)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_default_filetype'
        return stypy_return_type_257313


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 1184, 0, False)
        # Assigning a type to the variable 'self' (line 1185)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1185, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FigureCanvasSVG.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'FigureCanvasSVG' (line 1184)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1184, 0), 'FigureCanvasSVG', FigureCanvasSVG)

# Assigning a Dict to a Name (line 1185):

# Obtaining an instance of the builtin type 'dict' (line 1185)
dict_257314 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1185, 16), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 1185)
# Adding element type (key, value) (line 1185)
unicode_257315 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1185, 17), 'unicode', u'svg')
unicode_257316 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1185, 24), 'unicode', u'Scalable Vector Graphics')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1185, 16), dict_257314, (unicode_257315, unicode_257316))
# Adding element type (key, value) (line 1185)
unicode_257317 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1186, 17), 'unicode', u'svgz')
unicode_257318 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1186, 25), 'unicode', u'Scalable Vector Graphics')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1185, 16), dict_257314, (unicode_257317, unicode_257318))

# Getting the type of 'FigureCanvasSVG'
FigureCanvasSVG_257319 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'FigureCanvasSVG')
# Setting the type of the member 'filetypes' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), FigureCanvasSVG_257319, 'filetypes', dict_257314)

# Assigning a Num to a Name (line 1188):
int_257320 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1188, 16), 'int')
# Getting the type of 'FigureCanvasSVG'
FigureCanvasSVG_257321 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'FigureCanvasSVG')
# Setting the type of the member 'fixed_dpi' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), FigureCanvasSVG_257321, 'fixed_dpi', int_257320)
# Declaration of the 'FigureManagerSVG' class
# Getting the type of 'FigureManagerBase' (line 1254)
FigureManagerBase_257322 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1254, 23), 'FigureManagerBase')

class FigureManagerSVG(FigureManagerBase_257322, ):
    pass

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 1254, 0, False)
        # Assigning a type to the variable 'self' (line 1255)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1255, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FigureManagerSVG.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'FigureManagerSVG' (line 1254)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1254, 0), 'FigureManagerSVG', FigureManagerSVG)

# Assigning a Str to a Name (line 1258):

# Assigning a Str to a Name (line 1258):
unicode_257323 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1263, (-1)), 'unicode', u'<?xml version="1.0" encoding="utf-8" standalone="no"?>\n<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"\n  "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">\n<!-- Created with matplotlib (http://matplotlib.org/) -->\n')
# Assigning a type to the variable 'svgProlog' (line 1258)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1258, 0), 'svgProlog', unicode_257323)
# Declaration of the '_BackendSVG' class
# Getting the type of '_Backend' (line 1267)
_Backend_257324 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1267, 18), '_Backend')

class _BackendSVG(_Backend_257324, ):
    
    # Assigning a Name to a Name (line 1268):
    
    # Assigning a Name to a Name (line 1269):
    pass

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 1266, 0, False)
        # Assigning a type to the variable 'self' (line 1267)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1267, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, '_BackendSVG.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable '_BackendSVG' (line 1266)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1266, 0), '_BackendSVG', _BackendSVG)

# Assigning a Name to a Name (line 1268):
# Getting the type of 'FigureCanvasSVG' (line 1268)
FigureCanvasSVG_257325 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1268, 19), 'FigureCanvasSVG')
# Getting the type of '_BackendSVG'
_BackendSVG_257326 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), '_BackendSVG')
# Setting the type of the member 'FigureCanvas' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), _BackendSVG_257326, 'FigureCanvas', FigureCanvasSVG_257325)

# Assigning a Name to a Name (line 1269):
# Getting the type of 'FigureManagerSVG' (line 1269)
FigureManagerSVG_257327 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1269, 20), 'FigureManagerSVG')
# Getting the type of '_BackendSVG'
_BackendSVG_257328 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), '_BackendSVG')
# Setting the type of the member 'FigureManager' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), _BackendSVG_257328, 'FigureManager', FigureManagerSVG_257327)

# ################# End of the type inference program ##################

module_errors = stypy.errors.type_error.StypyTypeError.get_error_msgs()
module_warnings = stypy.errors.type_warning.TypeWarning.get_warning_msgs()
