
# -*- coding: utf-8 -*-

"""
ORIGINAL PROGRAM SOURCE CODE:
1: # This file is generated by C:\projects\scipy-wheels\scipy\setup.py
2: # It contains system_info results at the time of building this package.
3: __all__ = ["get_info","show"]
4: 
5: 
6: import os
7: extra_dll_dir = os.path.join(os.path.dirname(__file__), 'extra-dll')
8: if os.path.isdir(extra_dll_dir):
9:     os.environ["PATH"] += os.pathsep + extra_dll_dir
10: lapack_opt_info={'libraries': ['openblas'], 'library_dirs': ['C:\\projects\\scipy-wheels\\scipy\\build\\openblas'], 'language': 'f77', 'define_macros': [('HAVE_CBLAS', None)]}
11: blas_opt_info={'libraries': ['openblas'], 'library_dirs': ['C:\\projects\\scipy-wheels\\scipy\\build\\openblas'], 'language': 'f77', 'define_macros': [('HAVE_CBLAS', None)]}
12: blis_info={}
13: openblas_info={'libraries': ['openblas'], 'library_dirs': ['C:\\projects\\scipy-wheels\\scipy\\build\\openblas'], 'language': 'f77', 'define_macros': [('HAVE_CBLAS', None)]}
14: openblas_lapack_info={'libraries': ['openblas'], 'library_dirs': ['C:\\projects\\scipy-wheels\\scipy\\build\\openblas'], 'language': 'f77', 'define_macros': [('HAVE_CBLAS', None)]}
15: lapack_mkl_info={}
16: blas_mkl_info={}
17: 
18: def get_info(name):
19:     g = globals()
20:     return g.get(name, g.get(name + "_info", {}))
21: 
22: def show():
23:     for name,info_dict in globals().items():
24:         if name[0] == "_" or type(info_dict) is not type({}): continue
25:         print(name + ":")
26:         if not info_dict:
27:             print("  NOT AVAILABLE")
28:         for k,v in info_dict.items():
29:             v = str(v)
30:             if k == "sources" and len(v) > 200:
31:                 v = v[:60] + " ...\n... " + v[-60:]
32:             print("    %s = %s" % (k,v))
33:     

"""

# Import the stypy library necessary elements
from stypy.type_inference_programs.type_inference_programs_imports import *

# Create the module type store
module_type_store = Context(None, __file__)

# ################# Begin of the type inference program ##################


# Assigning a List to a Name (line 3):
__all__ = ['get_info', 'show']
module_type_store.set_exportable_members(['get_info', 'show'])

# Obtaining an instance of the builtin type 'list' (line 3)
list_197 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3, 10), 'list')
# Adding type elements to the builtin type 'list' instance (line 3)
# Adding element type (line 3)
str_198 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3, 11), 'str', 'get_info')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3, 10), list_197, str_198)
# Adding element type (line 3)
str_199 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3, 22), 'str', 'show')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3, 10), list_197, str_199)

# Assigning a type to the variable '__all__' (line 3)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3, 0), '__all__', list_197)
stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 6, 0))

# 'import os' statement (line 6)
import os

import_module(stypy.reporting.localization.Localization(__file__, 6, 0), 'os', os, module_type_store)


# Assigning a Call to a Name (line 7):

# Call to join(...): (line 7)
# Processing the call arguments (line 7)

# Call to dirname(...): (line 7)
# Processing the call arguments (line 7)
# Getting the type of '__file__' (line 7)
file___206 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 7, 45), '__file__', False)
# Processing the call keyword arguments (line 7)
kwargs_207 = {}
# Getting the type of 'os' (line 7)
os_203 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 7, 29), 'os', False)
# Obtaining the member 'path' of a type (line 7)
path_204 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 7, 29), os_203, 'path')
# Obtaining the member 'dirname' of a type (line 7)
dirname_205 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 7, 29), path_204, 'dirname')
# Calling dirname(args, kwargs) (line 7)
dirname_call_result_208 = invoke(stypy.reporting.localization.Localization(__file__, 7, 29), dirname_205, *[file___206], **kwargs_207)

str_209 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 7, 56), 'str', 'extra-dll')
# Processing the call keyword arguments (line 7)
kwargs_210 = {}
# Getting the type of 'os' (line 7)
os_200 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 7, 16), 'os', False)
# Obtaining the member 'path' of a type (line 7)
path_201 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 7, 16), os_200, 'path')
# Obtaining the member 'join' of a type (line 7)
join_202 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 7, 16), path_201, 'join')
# Calling join(args, kwargs) (line 7)
join_call_result_211 = invoke(stypy.reporting.localization.Localization(__file__, 7, 16), join_202, *[dirname_call_result_208, str_209], **kwargs_210)

# Assigning a type to the variable 'extra_dll_dir' (line 7)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 7, 0), 'extra_dll_dir', join_call_result_211)


# Call to isdir(...): (line 8)
# Processing the call arguments (line 8)
# Getting the type of 'extra_dll_dir' (line 8)
extra_dll_dir_215 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 8, 17), 'extra_dll_dir', False)
# Processing the call keyword arguments (line 8)
kwargs_216 = {}
# Getting the type of 'os' (line 8)
os_212 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 8, 3), 'os', False)
# Obtaining the member 'path' of a type (line 8)
path_213 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 8, 3), os_212, 'path')
# Obtaining the member 'isdir' of a type (line 8)
isdir_214 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 8, 3), path_213, 'isdir')
# Calling isdir(args, kwargs) (line 8)
isdir_call_result_217 = invoke(stypy.reporting.localization.Localization(__file__, 8, 3), isdir_214, *[extra_dll_dir_215], **kwargs_216)

# Testing the type of an if condition (line 8)
if_condition_218 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 8, 0), isdir_call_result_217)
# Assigning a type to the variable 'if_condition_218' (line 8)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 8, 0), 'if_condition_218', if_condition_218)
# SSA begins for if statement (line 8)
module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')

# Getting the type of 'os' (line 9)
os_219 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 9, 4), 'os')
# Obtaining the member 'environ' of a type (line 9)
environ_220 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 9, 4), os_219, 'environ')

# Obtaining the type of the subscript
str_221 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 9, 15), 'str', 'PATH')
# Getting the type of 'os' (line 9)
os_222 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 9, 4), 'os')
# Obtaining the member 'environ' of a type (line 9)
environ_223 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 9, 4), os_222, 'environ')
# Obtaining the member '__getitem__' of a type (line 9)
getitem___224 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 9, 4), environ_223, '__getitem__')
# Calling the subscript (__getitem__) to obtain the elements type (line 9)
subscript_call_result_225 = invoke(stypy.reporting.localization.Localization(__file__, 9, 4), getitem___224, str_221)

# Getting the type of 'os' (line 9)
os_226 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 9, 26), 'os')
# Obtaining the member 'pathsep' of a type (line 9)
pathsep_227 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 9, 26), os_226, 'pathsep')
# Getting the type of 'extra_dll_dir' (line 9)
extra_dll_dir_228 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 9, 39), 'extra_dll_dir')
# Applying the binary operator '+' (line 9)
result_add_229 = python_operator(stypy.reporting.localization.Localization(__file__, 9, 26), '+', pathsep_227, extra_dll_dir_228)

# Applying the binary operator '+=' (line 9)
result_iadd_230 = python_operator(stypy.reporting.localization.Localization(__file__, 9, 4), '+=', subscript_call_result_225, result_add_229)
# Getting the type of 'os' (line 9)
os_231 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 9, 4), 'os')
# Obtaining the member 'environ' of a type (line 9)
environ_232 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 9, 4), os_231, 'environ')
str_233 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 9, 15), 'str', 'PATH')
# Storing an element on a container (line 9)
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 9, 4), environ_232, (str_233, result_iadd_230))

# SSA join for if statement (line 8)
module_type_store = module_type_store.join_ssa_context()


# Assigning a Dict to a Name (line 10):

# Obtaining an instance of the builtin type 'dict' (line 10)
dict_234 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 10, 16), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 10)
# Adding element type (key, value) (line 10)
str_235 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 10, 17), 'str', 'libraries')

# Obtaining an instance of the builtin type 'list' (line 10)
list_236 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 10, 30), 'list')
# Adding type elements to the builtin type 'list' instance (line 10)
# Adding element type (line 10)
str_237 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 10, 31), 'str', 'openblas')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 10, 30), list_236, str_237)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 10, 16), dict_234, (str_235, list_236))
# Adding element type (key, value) (line 10)
str_238 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 10, 44), 'str', 'library_dirs')

# Obtaining an instance of the builtin type 'list' (line 10)
list_239 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 10, 60), 'list')
# Adding type elements to the builtin type 'list' instance (line 10)
# Adding element type (line 10)
str_240 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 10, 61), 'str', 'C:\\projects\\scipy-wheels\\scipy\\build\\openblas')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 10, 60), list_239, str_240)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 10, 16), dict_234, (str_238, list_239))
# Adding element type (key, value) (line 10)
str_241 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 10, 116), 'str', 'language')
str_242 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 10, 128), 'str', 'f77')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 10, 16), dict_234, (str_241, str_242))
# Adding element type (key, value) (line 10)
str_243 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 10, 135), 'str', 'define_macros')

# Obtaining an instance of the builtin type 'list' (line 10)
list_244 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 10, 152), 'list')
# Adding type elements to the builtin type 'list' instance (line 10)
# Adding element type (line 10)

# Obtaining an instance of the builtin type 'tuple' (line 10)
tuple_245 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 10, 154), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 10)
# Adding element type (line 10)
str_246 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 10, 154), 'str', 'HAVE_CBLAS')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 10, 154), tuple_245, str_246)
# Adding element type (line 10)
# Getting the type of 'None' (line 10)
None_247 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 10, 168), 'None')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 10, 154), tuple_245, None_247)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 10, 152), list_244, tuple_245)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 10, 16), dict_234, (str_243, list_244))

# Assigning a type to the variable 'lapack_opt_info' (line 10)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 10, 0), 'lapack_opt_info', dict_234)

# Assigning a Dict to a Name (line 11):

# Obtaining an instance of the builtin type 'dict' (line 11)
dict_248 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 11, 14), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 11)
# Adding element type (key, value) (line 11)
str_249 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 11, 15), 'str', 'libraries')

# Obtaining an instance of the builtin type 'list' (line 11)
list_250 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 11, 28), 'list')
# Adding type elements to the builtin type 'list' instance (line 11)
# Adding element type (line 11)
str_251 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 11, 29), 'str', 'openblas')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 11, 28), list_250, str_251)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 11, 14), dict_248, (str_249, list_250))
# Adding element type (key, value) (line 11)
str_252 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 11, 42), 'str', 'library_dirs')

# Obtaining an instance of the builtin type 'list' (line 11)
list_253 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 11, 58), 'list')
# Adding type elements to the builtin type 'list' instance (line 11)
# Adding element type (line 11)
str_254 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 11, 59), 'str', 'C:\\projects\\scipy-wheels\\scipy\\build\\openblas')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 11, 58), list_253, str_254)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 11, 14), dict_248, (str_252, list_253))
# Adding element type (key, value) (line 11)
str_255 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 11, 114), 'str', 'language')
str_256 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 11, 126), 'str', 'f77')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 11, 14), dict_248, (str_255, str_256))
# Adding element type (key, value) (line 11)
str_257 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 11, 133), 'str', 'define_macros')

# Obtaining an instance of the builtin type 'list' (line 11)
list_258 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 11, 150), 'list')
# Adding type elements to the builtin type 'list' instance (line 11)
# Adding element type (line 11)

# Obtaining an instance of the builtin type 'tuple' (line 11)
tuple_259 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 11, 152), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 11)
# Adding element type (line 11)
str_260 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 11, 152), 'str', 'HAVE_CBLAS')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 11, 152), tuple_259, str_260)
# Adding element type (line 11)
# Getting the type of 'None' (line 11)
None_261 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 11, 166), 'None')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 11, 152), tuple_259, None_261)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 11, 150), list_258, tuple_259)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 11, 14), dict_248, (str_257, list_258))

# Assigning a type to the variable 'blas_opt_info' (line 11)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 11, 0), 'blas_opt_info', dict_248)

# Assigning a Dict to a Name (line 12):

# Obtaining an instance of the builtin type 'dict' (line 12)
dict_262 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 12, 10), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 12)

# Assigning a type to the variable 'blis_info' (line 12)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 12, 0), 'blis_info', dict_262)

# Assigning a Dict to a Name (line 13):

# Obtaining an instance of the builtin type 'dict' (line 13)
dict_263 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 13, 14), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 13)
# Adding element type (key, value) (line 13)
str_264 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 13, 15), 'str', 'libraries')

# Obtaining an instance of the builtin type 'list' (line 13)
list_265 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 13, 28), 'list')
# Adding type elements to the builtin type 'list' instance (line 13)
# Adding element type (line 13)
str_266 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 13, 29), 'str', 'openblas')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 13, 28), list_265, str_266)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 13, 14), dict_263, (str_264, list_265))
# Adding element type (key, value) (line 13)
str_267 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 13, 42), 'str', 'library_dirs')

# Obtaining an instance of the builtin type 'list' (line 13)
list_268 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 13, 58), 'list')
# Adding type elements to the builtin type 'list' instance (line 13)
# Adding element type (line 13)
str_269 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 13, 59), 'str', 'C:\\projects\\scipy-wheels\\scipy\\build\\openblas')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 13, 58), list_268, str_269)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 13, 14), dict_263, (str_267, list_268))
# Adding element type (key, value) (line 13)
str_270 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 13, 114), 'str', 'language')
str_271 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 13, 126), 'str', 'f77')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 13, 14), dict_263, (str_270, str_271))
# Adding element type (key, value) (line 13)
str_272 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 13, 133), 'str', 'define_macros')

# Obtaining an instance of the builtin type 'list' (line 13)
list_273 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 13, 150), 'list')
# Adding type elements to the builtin type 'list' instance (line 13)
# Adding element type (line 13)

# Obtaining an instance of the builtin type 'tuple' (line 13)
tuple_274 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 13, 152), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 13)
# Adding element type (line 13)
str_275 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 13, 152), 'str', 'HAVE_CBLAS')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 13, 152), tuple_274, str_275)
# Adding element type (line 13)
# Getting the type of 'None' (line 13)
None_276 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 13, 166), 'None')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 13, 152), tuple_274, None_276)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 13, 150), list_273, tuple_274)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 13, 14), dict_263, (str_272, list_273))

# Assigning a type to the variable 'openblas_info' (line 13)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 13, 0), 'openblas_info', dict_263)

# Assigning a Dict to a Name (line 14):

# Obtaining an instance of the builtin type 'dict' (line 14)
dict_277 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 14, 21), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 14)
# Adding element type (key, value) (line 14)
str_278 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 14, 22), 'str', 'libraries')

# Obtaining an instance of the builtin type 'list' (line 14)
list_279 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 14, 35), 'list')
# Adding type elements to the builtin type 'list' instance (line 14)
# Adding element type (line 14)
str_280 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 14, 36), 'str', 'openblas')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 14, 35), list_279, str_280)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 14, 21), dict_277, (str_278, list_279))
# Adding element type (key, value) (line 14)
str_281 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 14, 49), 'str', 'library_dirs')

# Obtaining an instance of the builtin type 'list' (line 14)
list_282 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 14, 65), 'list')
# Adding type elements to the builtin type 'list' instance (line 14)
# Adding element type (line 14)
str_283 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 14, 66), 'str', 'C:\\projects\\scipy-wheels\\scipy\\build\\openblas')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 14, 65), list_282, str_283)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 14, 21), dict_277, (str_281, list_282))
# Adding element type (key, value) (line 14)
str_284 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 14, 121), 'str', 'language')
str_285 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 14, 133), 'str', 'f77')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 14, 21), dict_277, (str_284, str_285))
# Adding element type (key, value) (line 14)
str_286 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 14, 140), 'str', 'define_macros')

# Obtaining an instance of the builtin type 'list' (line 14)
list_287 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 14, 157), 'list')
# Adding type elements to the builtin type 'list' instance (line 14)
# Adding element type (line 14)

# Obtaining an instance of the builtin type 'tuple' (line 14)
tuple_288 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 14, 159), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 14)
# Adding element type (line 14)
str_289 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 14, 159), 'str', 'HAVE_CBLAS')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 14, 159), tuple_288, str_289)
# Adding element type (line 14)
# Getting the type of 'None' (line 14)
None_290 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 14, 173), 'None')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 14, 159), tuple_288, None_290)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 14, 157), list_287, tuple_288)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 14, 21), dict_277, (str_286, list_287))

# Assigning a type to the variable 'openblas_lapack_info' (line 14)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 14, 0), 'openblas_lapack_info', dict_277)

# Assigning a Dict to a Name (line 15):

# Obtaining an instance of the builtin type 'dict' (line 15)
dict_291 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 15, 16), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 15)

# Assigning a type to the variable 'lapack_mkl_info' (line 15)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 15, 0), 'lapack_mkl_info', dict_291)

# Assigning a Dict to a Name (line 16):

# Obtaining an instance of the builtin type 'dict' (line 16)
dict_292 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 16, 14), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 16)

# Assigning a type to the variable 'blas_mkl_info' (line 16)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 16, 0), 'blas_mkl_info', dict_292)

@norecursion
def get_info(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'get_info'
    module_type_store = module_type_store.open_function_context('get_info', 18, 0, False)
    
    # Passed parameters checking function
    get_info.stypy_localization = localization
    get_info.stypy_type_of_self = None
    get_info.stypy_type_store = module_type_store
    get_info.stypy_function_name = 'get_info'
    get_info.stypy_param_names_list = ['name']
    get_info.stypy_varargs_param_name = None
    get_info.stypy_kwargs_param_name = None
    get_info.stypy_call_defaults = defaults
    get_info.stypy_call_varargs = varargs
    get_info.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'get_info', ['name'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'get_info', localization, ['name'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'get_info(...)' code ##################

    
    # Assigning a Call to a Name (line 19):
    
    # Call to globals(...): (line 19)
    # Processing the call keyword arguments (line 19)
    kwargs_294 = {}
    # Getting the type of 'globals' (line 19)
    globals_293 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 19, 8), 'globals', False)
    # Calling globals(args, kwargs) (line 19)
    globals_call_result_295 = invoke(stypy.reporting.localization.Localization(__file__, 19, 8), globals_293, *[], **kwargs_294)
    
    # Assigning a type to the variable 'g' (line 19)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 19, 4), 'g', globals_call_result_295)
    
    # Call to get(...): (line 20)
    # Processing the call arguments (line 20)
    # Getting the type of 'name' (line 20)
    name_298 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 20, 17), 'name', False)
    
    # Call to get(...): (line 20)
    # Processing the call arguments (line 20)
    # Getting the type of 'name' (line 20)
    name_301 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 20, 29), 'name', False)
    str_302 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 20, 36), 'str', '_info')
    # Applying the binary operator '+' (line 20)
    result_add_303 = python_operator(stypy.reporting.localization.Localization(__file__, 20, 29), '+', name_301, str_302)
    
    
    # Obtaining an instance of the builtin type 'dict' (line 20)
    dict_304 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 20, 45), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 20)
    
    # Processing the call keyword arguments (line 20)
    kwargs_305 = {}
    # Getting the type of 'g' (line 20)
    g_299 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 20, 23), 'g', False)
    # Obtaining the member 'get' of a type (line 20)
    get_300 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 20, 23), g_299, 'get')
    # Calling get(args, kwargs) (line 20)
    get_call_result_306 = invoke(stypy.reporting.localization.Localization(__file__, 20, 23), get_300, *[result_add_303, dict_304], **kwargs_305)
    
    # Processing the call keyword arguments (line 20)
    kwargs_307 = {}
    # Getting the type of 'g' (line 20)
    g_296 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 20, 11), 'g', False)
    # Obtaining the member 'get' of a type (line 20)
    get_297 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 20, 11), g_296, 'get')
    # Calling get(args, kwargs) (line 20)
    get_call_result_308 = invoke(stypy.reporting.localization.Localization(__file__, 20, 11), get_297, *[name_298, get_call_result_306], **kwargs_307)
    
    # Assigning a type to the variable 'stypy_return_type' (line 20)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 20, 4), 'stypy_return_type', get_call_result_308)
    
    # ################# End of 'get_info(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'get_info' in the type store
    # Getting the type of 'stypy_return_type' (line 18)
    stypy_return_type_309 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 18, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_309)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'get_info'
    return stypy_return_type_309

# Assigning a type to the variable 'get_info' (line 18)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 18, 0), 'get_info', get_info)

@norecursion
def show(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'show'
    module_type_store = module_type_store.open_function_context('show', 22, 0, False)
    
    # Passed parameters checking function
    show.stypy_localization = localization
    show.stypy_type_of_self = None
    show.stypy_type_store = module_type_store
    show.stypy_function_name = 'show'
    show.stypy_param_names_list = []
    show.stypy_varargs_param_name = None
    show.stypy_kwargs_param_name = None
    show.stypy_call_defaults = defaults
    show.stypy_call_varargs = varargs
    show.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'show', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'show', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'show(...)' code ##################

    
    
    # Call to items(...): (line 23)
    # Processing the call keyword arguments (line 23)
    kwargs_314 = {}
    
    # Call to globals(...): (line 23)
    # Processing the call keyword arguments (line 23)
    kwargs_311 = {}
    # Getting the type of 'globals' (line 23)
    globals_310 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 23, 26), 'globals', False)
    # Calling globals(args, kwargs) (line 23)
    globals_call_result_312 = invoke(stypy.reporting.localization.Localization(__file__, 23, 26), globals_310, *[], **kwargs_311)
    
    # Obtaining the member 'items' of a type (line 23)
    items_313 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 23, 26), globals_call_result_312, 'items')
    # Calling items(args, kwargs) (line 23)
    items_call_result_315 = invoke(stypy.reporting.localization.Localization(__file__, 23, 26), items_313, *[], **kwargs_314)
    
    # Testing the type of a for loop iterable (line 23)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 23, 4), items_call_result_315)
    # Getting the type of the for loop variable (line 23)
    for_loop_var_316 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 23, 4), items_call_result_315)
    # Assigning a type to the variable 'name' (line 23)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 23, 4), 'name', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 23, 4), for_loop_var_316))
    # Assigning a type to the variable 'info_dict' (line 23)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 23, 4), 'info_dict', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 23, 4), for_loop_var_316))
    # SSA begins for a for statement (line 23)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Evaluating a boolean operation
    
    
    # Obtaining the type of the subscript
    int_317 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 24, 16), 'int')
    # Getting the type of 'name' (line 24)
    name_318 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 24, 11), 'name')
    # Obtaining the member '__getitem__' of a type (line 24)
    getitem___319 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 24, 11), name_318, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 24)
    subscript_call_result_320 = invoke(stypy.reporting.localization.Localization(__file__, 24, 11), getitem___319, int_317)
    
    str_321 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 24, 22), 'str', '_')
    # Applying the binary operator '==' (line 24)
    result_eq_322 = python_operator(stypy.reporting.localization.Localization(__file__, 24, 11), '==', subscript_call_result_320, str_321)
    
    
    
    # Call to type(...): (line 24)
    # Processing the call arguments (line 24)
    # Getting the type of 'info_dict' (line 24)
    info_dict_324 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 24, 34), 'info_dict', False)
    # Processing the call keyword arguments (line 24)
    kwargs_325 = {}
    # Getting the type of 'type' (line 24)
    type_323 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 24, 29), 'type', False)
    # Calling type(args, kwargs) (line 24)
    type_call_result_326 = invoke(stypy.reporting.localization.Localization(__file__, 24, 29), type_323, *[info_dict_324], **kwargs_325)
    
    
    # Call to type(...): (line 24)
    # Processing the call arguments (line 24)
    
    # Obtaining an instance of the builtin type 'dict' (line 24)
    dict_328 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 24, 57), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 24)
    
    # Processing the call keyword arguments (line 24)
    kwargs_329 = {}
    # Getting the type of 'type' (line 24)
    type_327 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 24, 52), 'type', False)
    # Calling type(args, kwargs) (line 24)
    type_call_result_330 = invoke(stypy.reporting.localization.Localization(__file__, 24, 52), type_327, *[dict_328], **kwargs_329)
    
    # Applying the binary operator 'isnot' (line 24)
    result_is_not_331 = python_operator(stypy.reporting.localization.Localization(__file__, 24, 29), 'isnot', type_call_result_326, type_call_result_330)
    
    # Applying the binary operator 'or' (line 24)
    result_or_keyword_332 = python_operator(stypy.reporting.localization.Localization(__file__, 24, 11), 'or', result_eq_322, result_is_not_331)
    
    # Testing the type of an if condition (line 24)
    if_condition_333 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 24, 8), result_or_keyword_332)
    # Assigning a type to the variable 'if_condition_333' (line 24)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 24, 8), 'if_condition_333', if_condition_333)
    # SSA begins for if statement (line 24)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # SSA join for if statement (line 24)
    module_type_store = module_type_store.join_ssa_context()
    
    # Getting the type of 'name' (line 25)
    name_334 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 25, 14), 'name')
    str_335 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 25, 21), 'str', ':')
    # Applying the binary operator '+' (line 25)
    result_add_336 = python_operator(stypy.reporting.localization.Localization(__file__, 25, 14), '+', name_334, str_335)
    
    
    
    # Getting the type of 'info_dict' (line 26)
    info_dict_337 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 26, 15), 'info_dict')
    # Applying the 'not' unary operator (line 26)
    result_not__338 = python_operator(stypy.reporting.localization.Localization(__file__, 26, 11), 'not', info_dict_337)
    
    # Testing the type of an if condition (line 26)
    if_condition_339 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 26, 8), result_not__338)
    # Assigning a type to the variable 'if_condition_339' (line 26)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 26, 8), 'if_condition_339', if_condition_339)
    # SSA begins for if statement (line 26)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    str_340 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 27, 18), 'str', '  NOT AVAILABLE')
    # SSA join for if statement (line 26)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Call to items(...): (line 28)
    # Processing the call keyword arguments (line 28)
    kwargs_343 = {}
    # Getting the type of 'info_dict' (line 28)
    info_dict_341 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 28, 19), 'info_dict', False)
    # Obtaining the member 'items' of a type (line 28)
    items_342 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 28, 19), info_dict_341, 'items')
    # Calling items(args, kwargs) (line 28)
    items_call_result_344 = invoke(stypy.reporting.localization.Localization(__file__, 28, 19), items_342, *[], **kwargs_343)
    
    # Testing the type of a for loop iterable (line 28)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 28, 8), items_call_result_344)
    # Getting the type of the for loop variable (line 28)
    for_loop_var_345 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 28, 8), items_call_result_344)
    # Assigning a type to the variable 'k' (line 28)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 28, 8), 'k', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 28, 8), for_loop_var_345))
    # Assigning a type to the variable 'v' (line 28)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 28, 8), 'v', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 28, 8), for_loop_var_345))
    # SSA begins for a for statement (line 28)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Call to a Name (line 29):
    
    # Call to str(...): (line 29)
    # Processing the call arguments (line 29)
    # Getting the type of 'v' (line 29)
    v_347 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 29, 20), 'v', False)
    # Processing the call keyword arguments (line 29)
    kwargs_348 = {}
    # Getting the type of 'str' (line 29)
    str_346 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 29, 16), 'str', False)
    # Calling str(args, kwargs) (line 29)
    str_call_result_349 = invoke(stypy.reporting.localization.Localization(__file__, 29, 16), str_346, *[v_347], **kwargs_348)
    
    # Assigning a type to the variable 'v' (line 29)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 29, 12), 'v', str_call_result_349)
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'k' (line 30)
    k_350 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 30, 15), 'k')
    str_351 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 30, 20), 'str', 'sources')
    # Applying the binary operator '==' (line 30)
    result_eq_352 = python_operator(stypy.reporting.localization.Localization(__file__, 30, 15), '==', k_350, str_351)
    
    
    
    # Call to len(...): (line 30)
    # Processing the call arguments (line 30)
    # Getting the type of 'v' (line 30)
    v_354 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 30, 38), 'v', False)
    # Processing the call keyword arguments (line 30)
    kwargs_355 = {}
    # Getting the type of 'len' (line 30)
    len_353 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 30, 34), 'len', False)
    # Calling len(args, kwargs) (line 30)
    len_call_result_356 = invoke(stypy.reporting.localization.Localization(__file__, 30, 34), len_353, *[v_354], **kwargs_355)
    
    int_357 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 30, 43), 'int')
    # Applying the binary operator '>' (line 30)
    result_gt_358 = python_operator(stypy.reporting.localization.Localization(__file__, 30, 34), '>', len_call_result_356, int_357)
    
    # Applying the binary operator 'and' (line 30)
    result_and_keyword_359 = python_operator(stypy.reporting.localization.Localization(__file__, 30, 15), 'and', result_eq_352, result_gt_358)
    
    # Testing the type of an if condition (line 30)
    if_condition_360 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 30, 12), result_and_keyword_359)
    # Assigning a type to the variable 'if_condition_360' (line 30)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 30, 12), 'if_condition_360', if_condition_360)
    # SSA begins for if statement (line 30)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 31):
    
    # Obtaining the type of the subscript
    int_361 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 31, 23), 'int')
    slice_362 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 31, 20), None, int_361, None)
    # Getting the type of 'v' (line 31)
    v_363 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 31, 20), 'v')
    # Obtaining the member '__getitem__' of a type (line 31)
    getitem___364 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 31, 20), v_363, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 31)
    subscript_call_result_365 = invoke(stypy.reporting.localization.Localization(__file__, 31, 20), getitem___364, slice_362)
    
    str_366 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 31, 29), 'str', ' ...\n... ')
    # Applying the binary operator '+' (line 31)
    result_add_367 = python_operator(stypy.reporting.localization.Localization(__file__, 31, 20), '+', subscript_call_result_365, str_366)
    
    
    # Obtaining the type of the subscript
    int_368 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 31, 46), 'int')
    slice_369 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 31, 44), int_368, None, None)
    # Getting the type of 'v' (line 31)
    v_370 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 31, 44), 'v')
    # Obtaining the member '__getitem__' of a type (line 31)
    getitem___371 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 31, 44), v_370, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 31)
    subscript_call_result_372 = invoke(stypy.reporting.localization.Localization(__file__, 31, 44), getitem___371, slice_369)
    
    # Applying the binary operator '+' (line 31)
    result_add_373 = python_operator(stypy.reporting.localization.Localization(__file__, 31, 42), '+', result_add_367, subscript_call_result_372)
    
    # Assigning a type to the variable 'v' (line 31)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 31, 16), 'v', result_add_373)
    # SSA join for if statement (line 30)
    module_type_store = module_type_store.join_ssa_context()
    
    str_374 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 32, 18), 'str', '    %s = %s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 32)
    tuple_375 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 32, 35), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 32)
    # Adding element type (line 32)
    # Getting the type of 'k' (line 32)
    k_376 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 32, 35), 'k')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 32, 35), tuple_375, k_376)
    # Adding element type (line 32)
    # Getting the type of 'v' (line 32)
    v_377 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 32, 37), 'v')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 32, 35), tuple_375, v_377)
    
    # Applying the binary operator '%' (line 32)
    result_mod_378 = python_operator(stypy.reporting.localization.Localization(__file__, 32, 18), '%', str_374, tuple_375)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # ################# End of 'show(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'show' in the type store
    # Getting the type of 'stypy_return_type' (line 22)
    stypy_return_type_379 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 22, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_379)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'show'
    return stypy_return_type_379

# Assigning a type to the variable 'show' (line 22)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 22, 0), 'show', show)

# ################# End of the type inference program ##################

module_errors = stypy.errors.type_error.StypyTypeError.get_error_msgs()
module_warnings = stypy.errors.type_warning.TypeWarning.get_warning_msgs()
