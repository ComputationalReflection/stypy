
# -*- coding: utf-8 -*-

"""
ORIGINAL PROGRAM SOURCE CODE:
1: # Created by Pearu Peterson, September 2002
2: 
3: from __future__ import division, print_function, absolute_import
4: 
5: __usage__ = '''
6: Build fftpack:
7:   python setup_fftpack.py build
8: Run tests if scipy is installed:
9:   python -c 'import scipy;scipy.fftpack.test()'
10: Run tests if fftpack is not installed:
11:   python tests/test_basic.py
12: '''
13: 
14: from numpy.testing import (assert_equal, assert_array_almost_equal,
15:         assert_array_almost_equal_nulp, assert_array_less)
16: import pytest
17: from pytest import raises as assert_raises
18: from scipy.fftpack import ifft,fft,fftn,ifftn,rfft,irfft, fft2
19: from scipy.fftpack import _fftpack as fftpack
20: from scipy.fftpack.basic import _is_safe_size
21: 
22: from numpy import (arange, add, array, asarray, zeros, dot, exp, pi,
23:      swapaxes, double, cdouble)
24: import numpy as np
25: import numpy.fft
26: 
27: # "large" composite numbers supported by FFTPACK
28: LARGE_COMPOSITE_SIZES = [
29:     2**13,
30:     2**5 * 3**5,
31:     2**3 * 3**3 * 5**2,
32: ]
33: SMALL_COMPOSITE_SIZES = [
34:     2,
35:     2*3*5,
36:     2*2*3*3,
37: ]
38: # prime
39: LARGE_PRIME_SIZES = [
40:     2011
41: ]
42: SMALL_PRIME_SIZES = [
43:     29
44: ]
45: 
46: from numpy.random import rand
47: 
48: 
49: def _assert_close_in_norm(x, y, rtol, size, rdt):
50:     # helper function for testing
51:     err_msg = "size: %s  rdt: %s" % (size, rdt)
52:     assert_array_less(np.linalg.norm(x - y), rtol*np.linalg.norm(x), err_msg)
53: 
54: 
55: def random(size):
56:     return rand(*size)
57: 
58: 
59: def get_mat(n):
60:     data = arange(n)
61:     data = add.outer(data,data)
62:     return data
63: 
64: 
65: def direct_dft(x):
66:     x = asarray(x)
67:     n = len(x)
68:     y = zeros(n,dtype=cdouble)
69:     w = -arange(n)*(2j*pi/n)
70:     for i in range(n):
71:         y[i] = dot(exp(i*w),x)
72:     return y
73: 
74: 
75: def direct_idft(x):
76:     x = asarray(x)
77:     n = len(x)
78:     y = zeros(n,dtype=cdouble)
79:     w = arange(n)*(2j*pi/n)
80:     for i in range(n):
81:         y[i] = dot(exp(i*w),x)/n
82:     return y
83: 
84: 
85: def direct_dftn(x):
86:     x = asarray(x)
87:     for axis in range(len(x.shape)):
88:         x = fft(x,axis=axis)
89:     return x
90: 
91: 
92: def direct_idftn(x):
93:     x = asarray(x)
94:     for axis in range(len(x.shape)):
95:         x = ifft(x,axis=axis)
96:     return x
97: 
98: 
99: def direct_rdft(x):
100:     x = asarray(x)
101:     n = len(x)
102:     w = -arange(n)*(2j*pi/n)
103:     r = zeros(n,dtype=double)
104:     for i in range(n//2+1):
105:         y = dot(exp(i*w),x)
106:         if i:
107:             r[2*i-1] = y.real
108:             if 2*i < n:
109:                 r[2*i] = y.imag
110:         else:
111:             r[0] = y.real
112:     return r
113: 
114: 
115: def direct_irdft(x):
116:     x = asarray(x)
117:     n = len(x)
118:     x1 = zeros(n,dtype=cdouble)
119:     for i in range(n//2+1):
120:         if i:
121:             if 2*i < n:
122:                 x1[i] = x[2*i-1] + 1j*x[2*i]
123:                 x1[n-i] = x[2*i-1] - 1j*x[2*i]
124:             else:
125:                 x1[i] = x[2*i-1]
126:         else:
127:             x1[0] = x[0]
128:     return direct_idft(x1).real
129: 
130: 
131: class _TestFFTBase(object):
132:     def setup_method(self):
133:         self.cdt = None
134:         self.rdt = None
135:         np.random.seed(1234)
136: 
137:     def test_definition(self):
138:         x = np.array([1,2,3,4+1j,1,2,3,4+2j], dtype=self.cdt)
139:         y = fft(x)
140:         assert_equal(y.dtype, self.cdt)
141:         y1 = direct_dft(x)
142:         assert_array_almost_equal(y,y1)
143:         x = np.array([1,2,3,4+0j,5], dtype=self.cdt)
144:         assert_array_almost_equal(fft(x),direct_dft(x))
145: 
146:     def test_n_argument_real(self):
147:         x1 = np.array([1,2,3,4], dtype=self.rdt)
148:         x2 = np.array([1,2,3,4], dtype=self.rdt)
149:         y = fft([x1,x2],n=4)
150:         assert_equal(y.dtype, self.cdt)
151:         assert_equal(y.shape,(2,4))
152:         assert_array_almost_equal(y[0],direct_dft(x1))
153:         assert_array_almost_equal(y[1],direct_dft(x2))
154: 
155:     def _test_n_argument_complex(self):
156:         x1 = np.array([1,2,3,4+1j], dtype=self.cdt)
157:         x2 = np.array([1,2,3,4+1j], dtype=self.cdt)
158:         y = fft([x1,x2],n=4)
159:         assert_equal(y.dtype, self.cdt)
160:         assert_equal(y.shape,(2,4))
161:         assert_array_almost_equal(y[0],direct_dft(x1))
162:         assert_array_almost_equal(y[1],direct_dft(x2))
163: 
164:     def test_djbfft(self):
165:         for i in range(2,14):
166:             n = 2**i
167:             x = list(range(n))
168:             y = fftpack.zfft(x)
169:             y2 = numpy.fft.fft(x)
170:             assert_array_almost_equal(y,y2)
171:             y = fftpack.zrfft(x)
172:             assert_array_almost_equal(y,y2)
173: 
174:     def test_invalid_sizes(self):
175:         assert_raises(ValueError, fft, [])
176:         assert_raises(ValueError, fft, [[1,1],[2,2]], -5)
177: 
178:     def test__is_safe_size(self):
179:         vals = [(0, True), (1, True), (2, True), (3, True), (4, True), (5, True), (6, True), (7, False),
180:                 (15, True), (16, True), (17, False), (18, True), (21, False), (25, True), (50, True),
181:                 (120, True), (210, False)]
182:         for n, is_safe in vals:
183:             assert_equal(_is_safe_size(n), is_safe)
184: 
185: 
186: class TestDoubleFFT(_TestFFTBase):
187:     def setup_method(self):
188:         self.cdt = np.cdouble
189:         self.rdt = np.double
190: 
191: 
192: class TestSingleFFT(_TestFFTBase):
193:     def setup_method(self):
194:         self.cdt = np.complex64
195:         self.rdt = np.float32
196: 
197:     @pytest.mark.xfail(run=False, reason="single-precision FFT implementation is partially disabled, until accuracy issues with large prime powers are resolved")
198:     def test_notice(self):
199:         pass
200: 
201: 
202: class TestFloat16FFT(object):
203: 
204:     def test_1_argument_real(self):
205:         x1 = np.array([1, 2, 3, 4], dtype=np.float16)
206:         y = fft(x1, n=4)
207:         assert_equal(y.dtype, np.complex64)
208:         assert_equal(y.shape, (4, ))
209:         assert_array_almost_equal(y, direct_dft(x1.astype(np.float32)))
210: 
211:     def test_n_argument_real(self):
212:         x1 = np.array([1, 2, 3, 4], dtype=np.float16)
213:         x2 = np.array([1, 2, 3, 4], dtype=np.float16)
214:         y = fft([x1, x2], n=4)
215:         assert_equal(y.dtype, np.complex64)
216:         assert_equal(y.shape, (2, 4))
217:         assert_array_almost_equal(y[0], direct_dft(x1.astype(np.float32)))
218:         assert_array_almost_equal(y[1], direct_dft(x2.astype(np.float32)))
219: 
220: 
221: class _TestIFFTBase(object):
222:     def setup_method(self):
223:         np.random.seed(1234)
224: 
225:     def test_definition(self):
226:         x = np.array([1,2,3,4+1j,1,2,3,4+2j], self.cdt)
227:         y = ifft(x)
228:         y1 = direct_idft(x)
229:         assert_equal(y.dtype, self.cdt)
230:         assert_array_almost_equal(y,y1)
231: 
232:         x = np.array([1,2,3,4+0j,5], self.cdt)
233:         assert_array_almost_equal(ifft(x),direct_idft(x))
234: 
235:     def test_definition_real(self):
236:         x = np.array([1,2,3,4,1,2,3,4], self.rdt)
237:         y = ifft(x)
238:         assert_equal(y.dtype, self.cdt)
239:         y1 = direct_idft(x)
240:         assert_array_almost_equal(y,y1)
241: 
242:         x = np.array([1,2,3,4,5], dtype=self.rdt)
243:         assert_equal(y.dtype, self.cdt)
244:         assert_array_almost_equal(ifft(x),direct_idft(x))
245: 
246:     def test_djbfft(self):
247:         for i in range(2,14):
248:             n = 2**i
249:             x = list(range(n))
250:             y = fftpack.zfft(x,direction=-1)
251:             y2 = numpy.fft.ifft(x)
252:             assert_array_almost_equal(y,y2)
253:             y = fftpack.zrfft(x,direction=-1)
254:             assert_array_almost_equal(y,y2)
255: 
256:     def test_random_complex(self):
257:         for size in [1,51,111,100,200,64,128,256,1024]:
258:             x = random([size]).astype(self.cdt)
259:             x = random([size]).astype(self.cdt) + 1j*x
260:             y1 = ifft(fft(x))
261:             y2 = fft(ifft(x))
262:             assert_equal(y1.dtype, self.cdt)
263:             assert_equal(y2.dtype, self.cdt)
264:             assert_array_almost_equal(y1, x)
265:             assert_array_almost_equal(y2, x)
266: 
267:     def test_random_real(self):
268:         for size in [1,51,111,100,200,64,128,256,1024]:
269:             x = random([size]).astype(self.rdt)
270:             y1 = ifft(fft(x))
271:             y2 = fft(ifft(x))
272:             assert_equal(y1.dtype, self.cdt)
273:             assert_equal(y2.dtype, self.cdt)
274:             assert_array_almost_equal(y1, x)
275:             assert_array_almost_equal(y2, x)
276: 
277:     def test_size_accuracy(self):
278:         # Sanity check for the accuracy for prime and non-prime sized inputs
279:         if self.rdt == np.float32:
280:             rtol = 1e-5
281:         elif self.rdt == np.float64:
282:             rtol = 1e-10
283: 
284:         for size in LARGE_COMPOSITE_SIZES + LARGE_PRIME_SIZES:
285:             np.random.seed(1234)
286:             x = np.random.rand(size).astype(self.rdt)
287:             y = ifft(fft(x))
288:             _assert_close_in_norm(x, y, rtol, size, self.rdt)
289:             y = fft(ifft(x))
290:             _assert_close_in_norm(x, y, rtol, size, self.rdt)
291: 
292:             x = (x + 1j*np.random.rand(size)).astype(self.cdt)
293:             y = ifft(fft(x))
294:             _assert_close_in_norm(x, y, rtol, size, self.rdt)
295:             y = fft(ifft(x))
296:             _assert_close_in_norm(x, y, rtol, size, self.rdt)
297: 
298:     def test_invalid_sizes(self):
299:         assert_raises(ValueError, ifft, [])
300:         assert_raises(ValueError, ifft, [[1,1],[2,2]], -5)
301: 
302: 
303: class TestDoubleIFFT(_TestIFFTBase):
304:     def setup_method(self):
305:         self.cdt = np.cdouble
306:         self.rdt = np.double
307: 
308: 
309: class TestSingleIFFT(_TestIFFTBase):
310:     def setup_method(self):
311:         self.cdt = np.complex64
312:         self.rdt = np.float32
313: 
314: 
315: class _TestRFFTBase(object):
316:     def setup_method(self):
317:         np.random.seed(1234)
318: 
319:     def test_definition(self):
320:         for t in [[1, 2, 3, 4, 1, 2, 3, 4], [1, 2, 3, 4, 1, 2, 3, 4, 5]]:
321:             x = np.array(t, dtype=self.rdt)
322:             y = rfft(x)
323:             y1 = direct_rdft(x)
324:             assert_array_almost_equal(y,y1)
325:             assert_equal(y.dtype, self.rdt)
326: 
327:     def test_djbfft(self):
328:         from numpy.fft import fft as numpy_fft
329:         for i in range(2,14):
330:             n = 2**i
331:             x = list(range(n))
332:             y2 = numpy_fft(x)
333:             y1 = zeros((n,),dtype=double)
334:             y1[0] = y2[0].real
335:             y1[-1] = y2[n//2].real
336:             for k in range(1, n//2):
337:                 y1[2*k-1] = y2[k].real
338:                 y1[2*k] = y2[k].imag
339:             y = fftpack.drfft(x)
340:             assert_array_almost_equal(y,y1)
341: 
342:     def test_invalid_sizes(self):
343:         assert_raises(ValueError, rfft, [])
344:         assert_raises(ValueError, rfft, [[1,1],[2,2]], -5)
345: 
346:     # See gh-5790
347:     class MockSeries(object):
348:         def __init__(self, data):
349:             self.data = np.asarray(data)
350: 
351:         def __getattr__(self, item):
352:             try:
353:                 return getattr(self.data, item)
354:             except AttributeError:
355:                 raise AttributeError(("'MockSeries' object "
356:                                       "has no attribute '{attr}'".
357:                                       format(attr=item)))
358: 
359:     def test_non_ndarray_with_dtype(self):
360:         x = np.array([1., 2., 3., 4., 5.])
361:         xs = _TestRFFTBase.MockSeries(x)
362: 
363:         expected = [1, 2, 3, 4, 5]
364:         out = rfft(xs)
365: 
366:         # Data should not have been overwritten
367:         assert_equal(x, expected)
368:         assert_equal(xs.data, expected)
369: 
370: class TestRFFTDouble(_TestRFFTBase):
371:     def setup_method(self):
372:         self.cdt = np.cdouble
373:         self.rdt = np.double
374: 
375: 
376: class TestRFFTSingle(_TestRFFTBase):
377:     def setup_method(self):
378:         self.cdt = np.complex64
379:         self.rdt = np.float32
380: 
381: 
382: class _TestIRFFTBase(object):
383:     def setup_method(self):
384:         np.random.seed(1234)
385: 
386:     def test_definition(self):
387:         x1 = [1,2,3,4,1,2,3,4]
388:         x1_1 = [1,2+3j,4+1j,2+3j,4,2-3j,4-1j,2-3j]
389:         x2 = [1,2,3,4,1,2,3,4,5]
390:         x2_1 = [1,2+3j,4+1j,2+3j,4+5j,4-5j,2-3j,4-1j,2-3j]
391: 
392:         def _test(x, xr):
393:             y = irfft(np.array(x, dtype=self.rdt))
394:             y1 = direct_irdft(x)
395:             assert_equal(y.dtype, self.rdt)
396:             assert_array_almost_equal(y,y1, decimal=self.ndec)
397:             assert_array_almost_equal(y,ifft(xr), decimal=self.ndec)
398: 
399:         _test(x1, x1_1)
400:         _test(x2, x2_1)
401: 
402:     def test_djbfft(self):
403:         from numpy.fft import ifft as numpy_ifft
404:         for i in range(2,14):
405:             n = 2**i
406:             x = list(range(n))
407:             x1 = zeros((n,),dtype=cdouble)
408:             x1[0] = x[0]
409:             for k in range(1, n//2):
410:                 x1[k] = x[2*k-1]+1j*x[2*k]
411:                 x1[n-k] = x[2*k-1]-1j*x[2*k]
412:             x1[n//2] = x[-1]
413:             y1 = numpy_ifft(x1)
414:             y = fftpack.drfft(x,direction=-1)
415:             assert_array_almost_equal(y,y1)
416: 
417:     def test_random_real(self):
418:         for size in [1,51,111,100,200,64,128,256,1024]:
419:             x = random([size]).astype(self.rdt)
420:             y1 = irfft(rfft(x))
421:             y2 = rfft(irfft(x))
422:             assert_equal(y1.dtype, self.rdt)
423:             assert_equal(y2.dtype, self.rdt)
424:             assert_array_almost_equal(y1, x, decimal=self.ndec,
425:                                        err_msg="size=%d" % size)
426:             assert_array_almost_equal(y2, x, decimal=self.ndec,
427:                                        err_msg="size=%d" % size)
428: 
429:     def test_size_accuracy(self):
430:         # Sanity check for the accuracy for prime and non-prime sized inputs
431:         if self.rdt == np.float32:
432:             rtol = 1e-5
433:         elif self.rdt == np.float64:
434:             rtol = 1e-10
435: 
436:         for size in LARGE_COMPOSITE_SIZES + LARGE_PRIME_SIZES:
437:             np.random.seed(1234)
438:             x = np.random.rand(size).astype(self.rdt)
439:             y = irfft(rfft(x))
440:             _assert_close_in_norm(x, y, rtol, size, self.rdt)
441:             y = rfft(irfft(x))
442:             _assert_close_in_norm(x, y, rtol, size, self.rdt)
443: 
444:     def test_invalid_sizes(self):
445:         assert_raises(ValueError, irfft, [])
446:         assert_raises(ValueError, irfft, [[1,1],[2,2]], -5)
447: 
448: 
449: # self.ndec is bogus; we should have a assert_array_approx_equal for number of
450: # significant digits
451: 
452: class TestIRFFTDouble(_TestIRFFTBase):
453:     def setup_method(self):
454:         self.cdt = np.cdouble
455:         self.rdt = np.double
456:         self.ndec = 14
457: 
458: 
459: class TestIRFFTSingle(_TestIRFFTBase):
460:     def setup_method(self):
461:         self.cdt = np.complex64
462:         self.rdt = np.float32
463:         self.ndec = 5
464: 
465: 
466: class Testfft2(object):
467:     def setup_method(self):
468:         np.random.seed(1234)
469: 
470:     def test_regression_244(self):
471:         '''fft returns wrong result with axes parameter.'''
472:         # fftn (and hence fft2) used to break when both axes and shape were
473:         # used
474:         x = numpy.ones((4,4,2))
475:         y = fft2(x, shape=(8,8), axes=(-3,-2))
476:         y_r = numpy.fft.fftn(x, s=(8, 8), axes=(-3, -2))
477:         assert_array_almost_equal(y, y_r)
478: 
479:     def test_invalid_sizes(self):
480:         assert_raises(ValueError, fft2, [[]])
481:         assert_raises(ValueError, fft2, [[1,1],[2,2]], (4, -3))
482: 
483: 
484: class TestFftnSingle(object):
485:     def setup_method(self):
486:         np.random.seed(1234)
487: 
488:     def test_definition(self):
489:         x = [[1,2,3],[4,5,6],[7,8,9]]
490:         y = fftn(np.array(x, np.float32))
491:         if not y.dtype == np.complex64:
492:             raise ValueError("double precision output with single precision")
493: 
494:         y_r = np.array(fftn(x), np.complex64)
495:         assert_array_almost_equal_nulp(y, y_r)
496: 
497:     def test_size_accuracy(self):
498:         for size in SMALL_COMPOSITE_SIZES + SMALL_PRIME_SIZES:
499:             np.random.seed(1234)
500:             x = np.random.rand(size, size) + 1j*np.random.rand(size, size)
501:             y1 = fftn(x.real.astype(np.float32))
502:             y2 = fftn(x.real.astype(np.float64)).astype(np.complex64)
503: 
504:             assert_equal(y1.dtype, np.complex64)
505:             assert_array_almost_equal_nulp(y1, y2, 2000)
506: 
507:         for size in LARGE_COMPOSITE_SIZES + LARGE_PRIME_SIZES:
508:             np.random.seed(1234)
509:             x = np.random.rand(size, 3) + 1j*np.random.rand(size, 3)
510:             y1 = fftn(x.real.astype(np.float32))
511:             y2 = fftn(x.real.astype(np.float64)).astype(np.complex64)
512: 
513:             assert_equal(y1.dtype, np.complex64)
514:             assert_array_almost_equal_nulp(y1, y2, 2000)
515: 
516:     def test_definition_float16(self):
517:         x = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
518:         y = fftn(np.array(x, np.float16))
519:         assert_equal(y.dtype, np.complex64)
520:         y_r = np.array(fftn(x), np.complex64)
521:         assert_array_almost_equal_nulp(y, y_r)
522: 
523:     def test_float16_input(self):
524:         for size in SMALL_COMPOSITE_SIZES + SMALL_PRIME_SIZES:
525:             np.random.seed(1234)
526:             x = np.random.rand(size, size) + 1j*np.random.rand(size, size)
527:             y1 = fftn(x.real.astype(np.float16))
528:             y2 = fftn(x.real.astype(np.float64)).astype(np.complex64)
529: 
530:             assert_equal(y1.dtype, np.complex64)
531:             assert_array_almost_equal_nulp(y1, y2, 5e5)
532: 
533:         for size in LARGE_COMPOSITE_SIZES + LARGE_PRIME_SIZES:
534:             np.random.seed(1234)
535:             x = np.random.rand(size, 3) + 1j*np.random.rand(size, 3)
536:             y1 = fftn(x.real.astype(np.float16))
537:             y2 = fftn(x.real.astype(np.float64)).astype(np.complex64)
538: 
539:             assert_equal(y1.dtype, np.complex64)
540:             assert_array_almost_equal_nulp(y1, y2, 2e6)
541: 
542: 
543: class TestFftn(object):
544:     def setup_method(self):
545:         np.random.seed(1234)
546: 
547:     def test_definition(self):
548:         x = [[1,2,3],[4,5,6],[7,8,9]]
549:         y = fftn(x)
550:         assert_array_almost_equal(y,direct_dftn(x))
551:         x = random((20,26))
552:         assert_array_almost_equal(fftn(x),direct_dftn(x))
553:         x = random((5,4,3,20))
554:         assert_array_almost_equal(fftn(x),direct_dftn(x))
555: 
556:     def test_axes_argument(self):
557:         # plane == ji_plane, x== kji_space
558:         plane1 = [[1,2,3],[4,5,6],[7,8,9]]
559:         plane2 = [[10,11,12],[13,14,15],[16,17,18]]
560:         plane3 = [[19,20,21],[22,23,24],[25,26,27]]
561:         ki_plane1 = [[1,2,3],[10,11,12],[19,20,21]]
562:         ki_plane2 = [[4,5,6],[13,14,15],[22,23,24]]
563:         ki_plane3 = [[7,8,9],[16,17,18],[25,26,27]]
564:         jk_plane1 = [[1,10,19],[4,13,22],[7,16,25]]
565:         jk_plane2 = [[2,11,20],[5,14,23],[8,17,26]]
566:         jk_plane3 = [[3,12,21],[6,15,24],[9,18,27]]
567:         kj_plane1 = [[1,4,7],[10,13,16],[19,22,25]]
568:         kj_plane2 = [[2,5,8],[11,14,17],[20,23,26]]
569:         kj_plane3 = [[3,6,9],[12,15,18],[21,24,27]]
570:         ij_plane1 = [[1,4,7],[2,5,8],[3,6,9]]
571:         ij_plane2 = [[10,13,16],[11,14,17],[12,15,18]]
572:         ij_plane3 = [[19,22,25],[20,23,26],[21,24,27]]
573:         ik_plane1 = [[1,10,19],[2,11,20],[3,12,21]]
574:         ik_plane2 = [[4,13,22],[5,14,23],[6,15,24]]
575:         ik_plane3 = [[7,16,25],[8,17,26],[9,18,27]]
576:         ijk_space = [jk_plane1,jk_plane2,jk_plane3]
577:         ikj_space = [kj_plane1,kj_plane2,kj_plane3]
578:         jik_space = [ik_plane1,ik_plane2,ik_plane3]
579:         jki_space = [ki_plane1,ki_plane2,ki_plane3]
580:         kij_space = [ij_plane1,ij_plane2,ij_plane3]
581:         x = array([plane1,plane2,plane3])
582: 
583:         assert_array_almost_equal(fftn(x),fftn(x,axes=(-3,-2,-1)))  # kji_space
584:         assert_array_almost_equal(fftn(x),fftn(x,axes=(0,1,2)))
585:         assert_array_almost_equal(fftn(x,axes=(0, 2)),fftn(x,axes=(0,-1)))
586:         y = fftn(x,axes=(2,1,0))  # ijk_space
587:         assert_array_almost_equal(swapaxes(y,-1,-3),fftn(ijk_space))
588:         y = fftn(x,axes=(2,0,1))  # ikj_space
589:         assert_array_almost_equal(swapaxes(swapaxes(y,-1,-3),
590:                                                    -1,-2),
591:                                   fftn(ikj_space))
592:         y = fftn(x,axes=(1,2,0))  # jik_space
593:         assert_array_almost_equal(swapaxes(swapaxes(y,-1,-3),
594:                                                    -3,-2),
595:                                   fftn(jik_space))
596:         y = fftn(x,axes=(1,0,2))  # jki_space
597:         assert_array_almost_equal(swapaxes(y,-2,-3),fftn(jki_space))
598:         y = fftn(x,axes=(0,2,1))  # kij_space
599:         assert_array_almost_equal(swapaxes(y,-2,-1),
600:                                   fftn(kij_space))
601: 
602:         y = fftn(x,axes=(-2,-1))  # ji_plane
603:         assert_array_almost_equal(fftn(plane1),y[0])
604:         assert_array_almost_equal(fftn(plane2),y[1])
605:         assert_array_almost_equal(fftn(plane3),y[2])
606:         y = fftn(x,axes=(1,2))  # ji_plane
607:         assert_array_almost_equal(fftn(plane1),y[0])
608:         assert_array_almost_equal(fftn(plane2),y[1])
609:         assert_array_almost_equal(fftn(plane3),y[2])
610:         y = fftn(x,axes=(-3,-2))  # kj_plane
611:         assert_array_almost_equal(fftn(x[:,:,0]),y[:,:,0])
612:         assert_array_almost_equal(fftn(x[:,:,1]),y[:,:,1])
613:         assert_array_almost_equal(fftn(x[:,:,2]),y[:,:,2])
614:         y = fftn(x,axes=(-3,-1))  # ki_plane
615:         assert_array_almost_equal(fftn(x[:,0,:]),y[:,0,:])
616:         assert_array_almost_equal(fftn(x[:,1,:]),y[:,1,:])
617:         assert_array_almost_equal(fftn(x[:,2,:]),y[:,2,:])
618:         y = fftn(x,axes=(-1,-2))  # ij_plane
619:         assert_array_almost_equal(fftn(ij_plane1),swapaxes(y[0],-2,-1))
620:         assert_array_almost_equal(fftn(ij_plane2),swapaxes(y[1],-2,-1))
621:         assert_array_almost_equal(fftn(ij_plane3),swapaxes(y[2],-2,-1))
622:         y = fftn(x,axes=(-1,-3))  # ik_plane
623:         assert_array_almost_equal(fftn(ik_plane1),swapaxes(y[:,0,:],-1,-2))
624:         assert_array_almost_equal(fftn(ik_plane2),swapaxes(y[:,1,:],-1,-2))
625:         assert_array_almost_equal(fftn(ik_plane3),swapaxes(y[:,2,:],-1,-2))
626:         y = fftn(x,axes=(-2,-3))  # jk_plane
627:         assert_array_almost_equal(fftn(jk_plane1),swapaxes(y[:,:,0],-1,-2))
628:         assert_array_almost_equal(fftn(jk_plane2),swapaxes(y[:,:,1],-1,-2))
629:         assert_array_almost_equal(fftn(jk_plane3),swapaxes(y[:,:,2],-1,-2))
630: 
631:         y = fftn(x,axes=(-1,))  # i_line
632:         for i in range(3):
633:             for j in range(3):
634:                 assert_array_almost_equal(fft(x[i,j,:]),y[i,j,:])
635:         y = fftn(x,axes=(-2,))  # j_line
636:         for i in range(3):
637:             for j in range(3):
638:                 assert_array_almost_equal(fft(x[i,:,j]),y[i,:,j])
639:         y = fftn(x,axes=(0,))  # k_line
640:         for i in range(3):
641:             for j in range(3):
642:                 assert_array_almost_equal(fft(x[:,i,j]),y[:,i,j])
643: 
644:         y = fftn(x,axes=())  # point
645:         assert_array_almost_equal(y,x)
646: 
647:     def test_shape_argument(self):
648:         small_x = [[1,2,3],[4,5,6]]
649:         large_x1 = [[1,2,3,0],[4,5,6,0],[0,0,0,0],[0,0,0,0]]
650:         y = fftn(small_x,shape=(4,4))
651:         assert_array_almost_equal(y,fftn(large_x1))
652:         y = fftn(small_x,shape=(3,4))
653:         assert_array_almost_equal(y,fftn(large_x1[:-1]))
654: 
655:     def test_shape_axes_argument(self):
656:         small_x = [[1,2,3],[4,5,6],[7,8,9]]
657:         large_x1 = array([[1,2,3,0],
658:                                   [4,5,6,0],
659:                                   [7,8,9,0],
660:                                   [0,0,0,0]])
661:         # Disable tests with shape and axes of different lengths
662:         # y = fftn(small_x,shape=(4,4),axes=(-1,))
663:         # for i in range(4):
664:         #    assert_array_almost_equal (y[i],fft(large_x1[i]))
665:         # y = fftn(small_x,shape=(4,4),axes=(-2,))
666:         # for i in range(4):
667:         #    assert_array_almost_equal (y[:,i],fft(large_x1[:,i]))
668:         y = fftn(small_x,shape=(4,4),axes=(-2,-1))
669:         assert_array_almost_equal(y,fftn(large_x1))
670:         y = fftn(small_x,shape=(4,4),axes=(-1,-2))
671:         assert_array_almost_equal(y,swapaxes(
672:             fftn(swapaxes(large_x1,-1,-2)),-1,-2))
673: 
674:     def test_shape_axes_argument2(self):
675:         # Change shape of the last axis
676:         x = numpy.random.random((10, 5, 3, 7))
677:         y = fftn(x, axes=(-1,), shape=(8,))
678:         assert_array_almost_equal(y, fft(x, axis=-1, n=8))
679: 
680:         # Change shape of an arbitrary axis which is not the last one
681:         x = numpy.random.random((10, 5, 3, 7))
682:         y = fftn(x, axes=(-2,), shape=(8,))
683:         assert_array_almost_equal(y, fft(x, axis=-2, n=8))
684: 
685:         # Change shape of axes: cf #244, where shape and axes were mixed up
686:         x = numpy.random.random((4,4,2))
687:         y = fftn(x, axes=(-3,-2), shape=(8,8))
688:         assert_array_almost_equal(y, numpy.fft.fftn(x, axes=(-3, -2), s=(8, 8)))
689: 
690:     def test_shape_argument_more(self):
691:         '''Test that fftn raises ValueError when s.shape is longer than x.shape'''
692:         x = zeros((4, 4, 2))
693:         assert_raises(ValueError, fftn, x, shape=(8, 8, 2, 1))
694: 
695:     def test_invalid_sizes(self):
696:         assert_raises(ValueError, fftn, [[]])
697:         assert_raises(ValueError, fftn, [[1,1],[2,2]], (4, -3))
698: 
699: 
700: class _TestIfftn(object):
701:     dtype = None
702:     cdtype = None
703: 
704:     def setup_method(self):
705:         np.random.seed(1234)
706: 
707:     def test_definition(self):
708:         x = np.array([[1,2,3],[4,5,6],[7,8,9]], dtype=self.dtype)
709:         y = ifftn(x)
710:         assert_equal(y.dtype, self.cdtype)
711:         assert_array_almost_equal_nulp(y,direct_idftn(x),self.maxnlp)
712:         x = random((20,26))
713:         assert_array_almost_equal_nulp(ifftn(x),direct_idftn(x),self.maxnlp)
714:         x = random((5,4,3,20))
715:         assert_array_almost_equal_nulp(ifftn(x),direct_idftn(x),self.maxnlp)
716: 
717:     def test_random_complex(self):
718:         for size in [1,2,51,32,64,92]:
719:             x = random([size,size]) + 1j*random([size,size])
720:             assert_array_almost_equal_nulp(ifftn(fftn(x)),x,self.maxnlp)
721:             assert_array_almost_equal_nulp(fftn(ifftn(x)),x,self.maxnlp)
722: 
723:     def test_invalid_sizes(self):
724:         assert_raises(ValueError, ifftn, [[]])
725:         assert_raises(ValueError, ifftn, [[1,1],[2,2]], (4, -3))
726: 
727: 
728: class TestIfftnDouble(_TestIfftn):
729:     dtype = np.float64
730:     cdtype = np.complex128
731:     maxnlp = 2000
732: 
733: 
734: class TestIfftnSingle(_TestIfftn):
735:     dtype = np.float32
736:     cdtype = np.complex64
737:     maxnlp = 3500
738: 
739: 
740: class TestLongDoubleFailure(object):
741:     def setup_method(self):
742:         np.random.seed(1234)
743: 
744:     def test_complex(self):
745:         if np.dtype(np.longcomplex).itemsize == np.dtype(complex).itemsize:
746:             # longdouble == double; so fft is supported
747:             return
748: 
749:         x = np.random.randn(10).astype(np.longdouble) + \
750:                 1j * np.random.randn(10).astype(np.longdouble)
751: 
752:         for f in [fft, ifft]:
753:             try:
754:                 f(x)
755:                 raise AssertionError("Type %r not supported but does not fail" %
756:                                      np.longcomplex)
757:             except ValueError:
758:                 pass
759: 
760:     def test_real(self):
761:         if np.dtype(np.longdouble).itemsize == np.dtype(np.double).itemsize:
762:             # longdouble == double; so fft is supported
763:             return
764: 
765:         x = np.random.randn(10).astype(np.longcomplex)
766: 
767:         for f in [fft, ifft]:
768:             try:
769:                 f(x)
770:                 raise AssertionError("Type %r not supported but does not fail" %
771:                                      np.longcomplex)
772:             except ValueError:
773:                 pass
774: 
775: 
776: class FakeArray(object):
777:     def __init__(self, data):
778:         self._data = data
779:         self.__array_interface__ = data.__array_interface__
780: 
781: 
782: class FakeArray2(object):
783:     def __init__(self, data):
784:         self._data = data
785: 
786:     def __array__(self):
787:         return self._data
788: 
789: 
790: class TestOverwrite(object):
791:     '''Check input overwrite behavior of the FFT functions '''
792: 
793:     real_dtypes = [np.float32, np.float64]
794:     dtypes = real_dtypes + [np.complex64, np.complex128]
795: 
796:     def _check(self, x, routine, fftsize, axis, overwrite_x, should_overwrite):
797:         x2 = x.copy()
798:         for fake in [lambda x: x, FakeArray, FakeArray2]:
799:             routine(fake(x2), fftsize, axis, overwrite_x=overwrite_x)
800: 
801:             sig = "%s(%s%r, %r, axis=%r, overwrite_x=%r)" % (
802:                 routine.__name__, x.dtype, x.shape, fftsize, axis, overwrite_x)
803:             if not should_overwrite:
804:                 assert_equal(x2, x, err_msg="spurious overwrite in %s" % sig)
805: 
806:     def _check_1d(self, routine, dtype, shape, axis, overwritable_dtypes):
807:         np.random.seed(1234)
808:         if np.issubdtype(dtype, np.complexfloating):
809:             data = np.random.randn(*shape) + 1j*np.random.randn(*shape)
810:         else:
811:             data = np.random.randn(*shape)
812:         data = data.astype(dtype)
813: 
814:         for fftsize in [8, 16, 32]:
815:             for overwrite_x in [True, False]:
816:                 should_overwrite = (overwrite_x
817:                                     and dtype in overwritable_dtypes
818:                                     and fftsize <= shape[axis]
819:                                     and (len(shape) == 1 or
820:                                          (axis % len(shape) == len(shape)-1
821:                                           and fftsize == shape[axis])))
822:                 self._check(data, routine, fftsize, axis,
823:                             overwrite_x=overwrite_x,
824:                             should_overwrite=should_overwrite)
825: 
826:     def test_fft(self):
827:         overwritable = (np.complex128, np.complex64)
828:         for dtype in self.dtypes:
829:             self._check_1d(fft, dtype, (16,), -1, overwritable)
830:             self._check_1d(fft, dtype, (16, 2), 0, overwritable)
831:             self._check_1d(fft, dtype, (2, 16), 1, overwritable)
832: 
833:     def test_ifft(self):
834:         overwritable = (np.complex128, np.complex64)
835:         for dtype in self.dtypes:
836:             self._check_1d(ifft, dtype, (16,), -1, overwritable)
837:             self._check_1d(ifft, dtype, (16, 2), 0, overwritable)
838:             self._check_1d(ifft, dtype, (2, 16), 1, overwritable)
839: 
840:     def test_rfft(self):
841:         overwritable = self.real_dtypes
842:         for dtype in self.real_dtypes:
843:             self._check_1d(rfft, dtype, (16,), -1, overwritable)
844:             self._check_1d(rfft, dtype, (16, 2), 0, overwritable)
845:             self._check_1d(rfft, dtype, (2, 16), 1, overwritable)
846: 
847:     def test_irfft(self):
848:         overwritable = self.real_dtypes
849:         for dtype in self.real_dtypes:
850:             self._check_1d(irfft, dtype, (16,), -1, overwritable)
851:             self._check_1d(irfft, dtype, (16, 2), 0, overwritable)
852:             self._check_1d(irfft, dtype, (2, 16), 1, overwritable)
853: 
854:     def _check_nd_one(self, routine, dtype, shape, axes, overwritable_dtypes):
855:         np.random.seed(1234)
856:         if np.issubdtype(dtype, np.complexfloating):
857:             data = np.random.randn(*shape) + 1j*np.random.randn(*shape)
858:         else:
859:             data = np.random.randn(*shape)
860:         data = data.astype(dtype)
861: 
862:         def fftshape_iter(shp):
863:             if len(shp) <= 0:
864:                 yield ()
865:             else:
866:                 for j in (shp[0]//2, shp[0], shp[0]*2):
867:                     for rest in fftshape_iter(shp[1:]):
868:                         yield (j,) + rest
869: 
870:         if axes is None:
871:             part_shape = shape
872:         else:
873:             part_shape = tuple(np.take(shape, axes))
874: 
875:         for overwrite_x in [True, False]:
876:             for fftshape in fftshape_iter(part_shape):
877:                 should_overwrite = (overwrite_x
878:                                     and data.ndim == 1
879:                                     and np.all([x < y for x, y in zip(fftshape, part_shape)])
880:                                     and dtype in overwritable_dtypes)
881:                 self._check(data, routine, fftshape, axes,
882:                             overwrite_x=overwrite_x,
883:                             should_overwrite=should_overwrite)
884:                 if data.ndim > 1:
885:                     # check fortran order: it never overwrites
886:                     self._check(data.T, routine, fftshape, axes,
887:                                 overwrite_x=overwrite_x,
888:                                 should_overwrite=False)
889: 
890:     def _check_nd(self, routine, dtype, overwritable):
891:         self._check_nd_one(routine, dtype, (16,), None, overwritable)
892:         self._check_nd_one(routine, dtype, (16,), (0,), overwritable)
893:         self._check_nd_one(routine, dtype, (16, 2), (0,), overwritable)
894:         self._check_nd_one(routine, dtype, (2, 16), (1,), overwritable)
895:         self._check_nd_one(routine, dtype, (8, 16), None, overwritable)
896:         self._check_nd_one(routine, dtype, (8, 16), (0, 1), overwritable)
897:         self._check_nd_one(routine, dtype, (8, 16, 2), (0, 1), overwritable)
898:         self._check_nd_one(routine, dtype, (8, 16, 2), (1, 2), overwritable)
899:         self._check_nd_one(routine, dtype, (8, 16, 2), (0,), overwritable)
900:         self._check_nd_one(routine, dtype, (8, 16, 2), (1,), overwritable)
901:         self._check_nd_one(routine, dtype, (8, 16, 2), (2,), overwritable)
902:         self._check_nd_one(routine, dtype, (8, 16, 2), None, overwritable)
903:         self._check_nd_one(routine, dtype, (8, 16, 2), (0,1,2), overwritable)
904: 
905:     def test_fftn(self):
906:         overwritable = (np.complex128, np.complex64)
907:         for dtype in self.dtypes:
908:             self._check_nd(fftn, dtype, overwritable)
909: 
910:     def test_ifftn(self):
911:         overwritable = (np.complex128, np.complex64)
912:         for dtype in self.dtypes:
913:             self._check_nd(ifftn, dtype, overwritable)
914: 
915: 

"""

# Import the stypy library necessary elements
from stypy.type_inference_programs.type_inference_programs_imports import *

# Create the module type store
module_type_store = Context(None, __file__)

# ################# Begin of the type inference program ##################


# Assigning a Str to a Name (line 5):
str_18948 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 12, (-1)), 'str', "\nBuild fftpack:\n  python setup_fftpack.py build\nRun tests if scipy is installed:\n  python -c 'import scipy;scipy.fftpack.test()'\nRun tests if fftpack is not installed:\n  python tests/test_basic.py\n")
# Assigning a type to the variable '__usage__' (line 5)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 5, 0), '__usage__', str_18948)
stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 14, 0))

# 'from numpy.testing import assert_equal, assert_array_almost_equal, assert_array_almost_equal_nulp, assert_array_less' statement (line 14)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/fftpack/tests/')
import_18949 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 14, 0), 'numpy.testing')

if (type(import_18949) is not StypyTypeError):

    if (import_18949 != 'pyd_module'):
        __import__(import_18949)
        sys_modules_18950 = sys.modules[import_18949]
        import_from_module(stypy.reporting.localization.Localization(__file__, 14, 0), 'numpy.testing', sys_modules_18950.module_type_store, module_type_store, ['assert_equal', 'assert_array_almost_equal', 'assert_array_almost_equal_nulp', 'assert_array_less'])
        nest_module(stypy.reporting.localization.Localization(__file__, 14, 0), __file__, sys_modules_18950, sys_modules_18950.module_type_store, module_type_store)
    else:
        from numpy.testing import assert_equal, assert_array_almost_equal, assert_array_almost_equal_nulp, assert_array_less

        import_from_module(stypy.reporting.localization.Localization(__file__, 14, 0), 'numpy.testing', None, module_type_store, ['assert_equal', 'assert_array_almost_equal', 'assert_array_almost_equal_nulp', 'assert_array_less'], [assert_equal, assert_array_almost_equal, assert_array_almost_equal_nulp, assert_array_less])

else:
    # Assigning a type to the variable 'numpy.testing' (line 14)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 14, 0), 'numpy.testing', import_18949)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/fftpack/tests/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 16, 0))

# 'import pytest' statement (line 16)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/fftpack/tests/')
import_18951 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 16, 0), 'pytest')

if (type(import_18951) is not StypyTypeError):

    if (import_18951 != 'pyd_module'):
        __import__(import_18951)
        sys_modules_18952 = sys.modules[import_18951]
        import_module(stypy.reporting.localization.Localization(__file__, 16, 0), 'pytest', sys_modules_18952.module_type_store, module_type_store)
    else:
        import pytest

        import_module(stypy.reporting.localization.Localization(__file__, 16, 0), 'pytest', pytest, module_type_store)

else:
    # Assigning a type to the variable 'pytest' (line 16)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 16, 0), 'pytest', import_18951)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/fftpack/tests/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 17, 0))

# 'from pytest import assert_raises' statement (line 17)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/fftpack/tests/')
import_18953 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 17, 0), 'pytest')

if (type(import_18953) is not StypyTypeError):

    if (import_18953 != 'pyd_module'):
        __import__(import_18953)
        sys_modules_18954 = sys.modules[import_18953]
        import_from_module(stypy.reporting.localization.Localization(__file__, 17, 0), 'pytest', sys_modules_18954.module_type_store, module_type_store, ['raises'])
        nest_module(stypy.reporting.localization.Localization(__file__, 17, 0), __file__, sys_modules_18954, sys_modules_18954.module_type_store, module_type_store)
    else:
        from pytest import raises as assert_raises

        import_from_module(stypy.reporting.localization.Localization(__file__, 17, 0), 'pytest', None, module_type_store, ['raises'], [assert_raises])

else:
    # Assigning a type to the variable 'pytest' (line 17)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 17, 0), 'pytest', import_18953)

# Adding an alias
module_type_store.add_alias('assert_raises', 'raises')
remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/fftpack/tests/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 18, 0))

# 'from scipy.fftpack import ifft, fft, fftn, ifftn, rfft, irfft, fft2' statement (line 18)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/fftpack/tests/')
import_18955 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 18, 0), 'scipy.fftpack')

if (type(import_18955) is not StypyTypeError):

    if (import_18955 != 'pyd_module'):
        __import__(import_18955)
        sys_modules_18956 = sys.modules[import_18955]
        import_from_module(stypy.reporting.localization.Localization(__file__, 18, 0), 'scipy.fftpack', sys_modules_18956.module_type_store, module_type_store, ['ifft', 'fft', 'fftn', 'ifftn', 'rfft', 'irfft', 'fft2'])
        nest_module(stypy.reporting.localization.Localization(__file__, 18, 0), __file__, sys_modules_18956, sys_modules_18956.module_type_store, module_type_store)
    else:
        from scipy.fftpack import ifft, fft, fftn, ifftn, rfft, irfft, fft2

        import_from_module(stypy.reporting.localization.Localization(__file__, 18, 0), 'scipy.fftpack', None, module_type_store, ['ifft', 'fft', 'fftn', 'ifftn', 'rfft', 'irfft', 'fft2'], [ifft, fft, fftn, ifftn, rfft, irfft, fft2])

else:
    # Assigning a type to the variable 'scipy.fftpack' (line 18)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 18, 0), 'scipy.fftpack', import_18955)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/fftpack/tests/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 19, 0))

# 'from scipy.fftpack import fftpack' statement (line 19)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/fftpack/tests/')
import_18957 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 19, 0), 'scipy.fftpack')

if (type(import_18957) is not StypyTypeError):

    if (import_18957 != 'pyd_module'):
        __import__(import_18957)
        sys_modules_18958 = sys.modules[import_18957]
        import_from_module(stypy.reporting.localization.Localization(__file__, 19, 0), 'scipy.fftpack', sys_modules_18958.module_type_store, module_type_store, ['_fftpack'])
        nest_module(stypy.reporting.localization.Localization(__file__, 19, 0), __file__, sys_modules_18958, sys_modules_18958.module_type_store, module_type_store)
    else:
        from scipy.fftpack import _fftpack as fftpack

        import_from_module(stypy.reporting.localization.Localization(__file__, 19, 0), 'scipy.fftpack', None, module_type_store, ['_fftpack'], [fftpack])

else:
    # Assigning a type to the variable 'scipy.fftpack' (line 19)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 19, 0), 'scipy.fftpack', import_18957)

# Adding an alias
module_type_store.add_alias('fftpack', '_fftpack')
remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/fftpack/tests/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 20, 0))

# 'from scipy.fftpack.basic import _is_safe_size' statement (line 20)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/fftpack/tests/')
import_18959 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 20, 0), 'scipy.fftpack.basic')

if (type(import_18959) is not StypyTypeError):

    if (import_18959 != 'pyd_module'):
        __import__(import_18959)
        sys_modules_18960 = sys.modules[import_18959]
        import_from_module(stypy.reporting.localization.Localization(__file__, 20, 0), 'scipy.fftpack.basic', sys_modules_18960.module_type_store, module_type_store, ['_is_safe_size'])
        nest_module(stypy.reporting.localization.Localization(__file__, 20, 0), __file__, sys_modules_18960, sys_modules_18960.module_type_store, module_type_store)
    else:
        from scipy.fftpack.basic import _is_safe_size

        import_from_module(stypy.reporting.localization.Localization(__file__, 20, 0), 'scipy.fftpack.basic', None, module_type_store, ['_is_safe_size'], [_is_safe_size])

else:
    # Assigning a type to the variable 'scipy.fftpack.basic' (line 20)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 20, 0), 'scipy.fftpack.basic', import_18959)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/fftpack/tests/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 22, 0))

# 'from numpy import arange, add, array, asarray, zeros, dot, exp, pi, swapaxes, double, cdouble' statement (line 22)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/fftpack/tests/')
import_18961 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 22, 0), 'numpy')

if (type(import_18961) is not StypyTypeError):

    if (import_18961 != 'pyd_module'):
        __import__(import_18961)
        sys_modules_18962 = sys.modules[import_18961]
        import_from_module(stypy.reporting.localization.Localization(__file__, 22, 0), 'numpy', sys_modules_18962.module_type_store, module_type_store, ['arange', 'add', 'array', 'asarray', 'zeros', 'dot', 'exp', 'pi', 'swapaxes', 'double', 'cdouble'])
        nest_module(stypy.reporting.localization.Localization(__file__, 22, 0), __file__, sys_modules_18962, sys_modules_18962.module_type_store, module_type_store)
    else:
        from numpy import arange, add, array, asarray, zeros, dot, exp, pi, swapaxes, double, cdouble

        import_from_module(stypy.reporting.localization.Localization(__file__, 22, 0), 'numpy', None, module_type_store, ['arange', 'add', 'array', 'asarray', 'zeros', 'dot', 'exp', 'pi', 'swapaxes', 'double', 'cdouble'], [arange, add, array, asarray, zeros, dot, exp, pi, swapaxes, double, cdouble])

else:
    # Assigning a type to the variable 'numpy' (line 22)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 22, 0), 'numpy', import_18961)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/fftpack/tests/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 24, 0))

# 'import numpy' statement (line 24)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/fftpack/tests/')
import_18963 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 24, 0), 'numpy')

if (type(import_18963) is not StypyTypeError):

    if (import_18963 != 'pyd_module'):
        __import__(import_18963)
        sys_modules_18964 = sys.modules[import_18963]
        import_module(stypy.reporting.localization.Localization(__file__, 24, 0), 'np', sys_modules_18964.module_type_store, module_type_store)
    else:
        import numpy as np

        import_module(stypy.reporting.localization.Localization(__file__, 24, 0), 'np', numpy, module_type_store)

else:
    # Assigning a type to the variable 'numpy' (line 24)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 24, 0), 'numpy', import_18963)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/fftpack/tests/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 25, 0))

# 'import numpy.fft' statement (line 25)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/fftpack/tests/')
import_18965 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 25, 0), 'numpy.fft')

if (type(import_18965) is not StypyTypeError):

    if (import_18965 != 'pyd_module'):
        __import__(import_18965)
        sys_modules_18966 = sys.modules[import_18965]
        import_module(stypy.reporting.localization.Localization(__file__, 25, 0), 'numpy.fft', sys_modules_18966.module_type_store, module_type_store)
    else:
        import numpy.fft

        import_module(stypy.reporting.localization.Localization(__file__, 25, 0), 'numpy.fft', numpy.fft, module_type_store)

else:
    # Assigning a type to the variable 'numpy.fft' (line 25)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 25, 0), 'numpy.fft', import_18965)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/fftpack/tests/')


# Assigning a List to a Name (line 28):

# Obtaining an instance of the builtin type 'list' (line 28)
list_18967 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 28, 24), 'list')
# Adding type elements to the builtin type 'list' instance (line 28)
# Adding element type (line 28)
int_18968 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 29, 4), 'int')
int_18969 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 29, 7), 'int')
# Applying the binary operator '**' (line 29)
result_pow_18970 = python_operator(stypy.reporting.localization.Localization(__file__, 29, 4), '**', int_18968, int_18969)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 28, 24), list_18967, result_pow_18970)
# Adding element type (line 28)
int_18971 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 30, 4), 'int')
int_18972 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 30, 7), 'int')
# Applying the binary operator '**' (line 30)
result_pow_18973 = python_operator(stypy.reporting.localization.Localization(__file__, 30, 4), '**', int_18971, int_18972)

int_18974 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 30, 11), 'int')
int_18975 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 30, 14), 'int')
# Applying the binary operator '**' (line 30)
result_pow_18976 = python_operator(stypy.reporting.localization.Localization(__file__, 30, 11), '**', int_18974, int_18975)

# Applying the binary operator '*' (line 30)
result_mul_18977 = python_operator(stypy.reporting.localization.Localization(__file__, 30, 4), '*', result_pow_18973, result_pow_18976)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 28, 24), list_18967, result_mul_18977)
# Adding element type (line 28)
int_18978 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 31, 4), 'int')
int_18979 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 31, 7), 'int')
# Applying the binary operator '**' (line 31)
result_pow_18980 = python_operator(stypy.reporting.localization.Localization(__file__, 31, 4), '**', int_18978, int_18979)

int_18981 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 31, 11), 'int')
int_18982 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 31, 14), 'int')
# Applying the binary operator '**' (line 31)
result_pow_18983 = python_operator(stypy.reporting.localization.Localization(__file__, 31, 11), '**', int_18981, int_18982)

# Applying the binary operator '*' (line 31)
result_mul_18984 = python_operator(stypy.reporting.localization.Localization(__file__, 31, 4), '*', result_pow_18980, result_pow_18983)

int_18985 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 31, 18), 'int')
int_18986 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 31, 21), 'int')
# Applying the binary operator '**' (line 31)
result_pow_18987 = python_operator(stypy.reporting.localization.Localization(__file__, 31, 18), '**', int_18985, int_18986)

# Applying the binary operator '*' (line 31)
result_mul_18988 = python_operator(stypy.reporting.localization.Localization(__file__, 31, 16), '*', result_mul_18984, result_pow_18987)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 28, 24), list_18967, result_mul_18988)

# Assigning a type to the variable 'LARGE_COMPOSITE_SIZES' (line 28)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 28, 0), 'LARGE_COMPOSITE_SIZES', list_18967)

# Assigning a List to a Name (line 33):

# Obtaining an instance of the builtin type 'list' (line 33)
list_18989 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 33, 24), 'list')
# Adding type elements to the builtin type 'list' instance (line 33)
# Adding element type (line 33)
int_18990 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 34, 4), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 33, 24), list_18989, int_18990)
# Adding element type (line 33)
int_18991 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 35, 4), 'int')
int_18992 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 35, 6), 'int')
# Applying the binary operator '*' (line 35)
result_mul_18993 = python_operator(stypy.reporting.localization.Localization(__file__, 35, 4), '*', int_18991, int_18992)

int_18994 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 35, 8), 'int')
# Applying the binary operator '*' (line 35)
result_mul_18995 = python_operator(stypy.reporting.localization.Localization(__file__, 35, 7), '*', result_mul_18993, int_18994)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 33, 24), list_18989, result_mul_18995)
# Adding element type (line 33)
int_18996 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 36, 4), 'int')
int_18997 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 36, 6), 'int')
# Applying the binary operator '*' (line 36)
result_mul_18998 = python_operator(stypy.reporting.localization.Localization(__file__, 36, 4), '*', int_18996, int_18997)

int_18999 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 36, 8), 'int')
# Applying the binary operator '*' (line 36)
result_mul_19000 = python_operator(stypy.reporting.localization.Localization(__file__, 36, 7), '*', result_mul_18998, int_18999)

int_19001 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 36, 10), 'int')
# Applying the binary operator '*' (line 36)
result_mul_19002 = python_operator(stypy.reporting.localization.Localization(__file__, 36, 9), '*', result_mul_19000, int_19001)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 33, 24), list_18989, result_mul_19002)

# Assigning a type to the variable 'SMALL_COMPOSITE_SIZES' (line 33)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 33, 0), 'SMALL_COMPOSITE_SIZES', list_18989)

# Assigning a List to a Name (line 39):

# Obtaining an instance of the builtin type 'list' (line 39)
list_19003 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 39, 20), 'list')
# Adding type elements to the builtin type 'list' instance (line 39)
# Adding element type (line 39)
int_19004 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 40, 4), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 39, 20), list_19003, int_19004)

# Assigning a type to the variable 'LARGE_PRIME_SIZES' (line 39)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 39, 0), 'LARGE_PRIME_SIZES', list_19003)

# Assigning a List to a Name (line 42):

# Obtaining an instance of the builtin type 'list' (line 42)
list_19005 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 42, 20), 'list')
# Adding type elements to the builtin type 'list' instance (line 42)
# Adding element type (line 42)
int_19006 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 43, 4), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 42, 20), list_19005, int_19006)

# Assigning a type to the variable 'SMALL_PRIME_SIZES' (line 42)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 42, 0), 'SMALL_PRIME_SIZES', list_19005)
stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 46, 0))

# 'from numpy.random import rand' statement (line 46)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/fftpack/tests/')
import_19007 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 46, 0), 'numpy.random')

if (type(import_19007) is not StypyTypeError):

    if (import_19007 != 'pyd_module'):
        __import__(import_19007)
        sys_modules_19008 = sys.modules[import_19007]
        import_from_module(stypy.reporting.localization.Localization(__file__, 46, 0), 'numpy.random', sys_modules_19008.module_type_store, module_type_store, ['rand'])
        nest_module(stypy.reporting.localization.Localization(__file__, 46, 0), __file__, sys_modules_19008, sys_modules_19008.module_type_store, module_type_store)
    else:
        from numpy.random import rand

        import_from_module(stypy.reporting.localization.Localization(__file__, 46, 0), 'numpy.random', None, module_type_store, ['rand'], [rand])

else:
    # Assigning a type to the variable 'numpy.random' (line 46)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 46, 0), 'numpy.random', import_19007)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/fftpack/tests/')


@norecursion
def _assert_close_in_norm(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function '_assert_close_in_norm'
    module_type_store = module_type_store.open_function_context('_assert_close_in_norm', 49, 0, False)
    
    # Passed parameters checking function
    _assert_close_in_norm.stypy_localization = localization
    _assert_close_in_norm.stypy_type_of_self = None
    _assert_close_in_norm.stypy_type_store = module_type_store
    _assert_close_in_norm.stypy_function_name = '_assert_close_in_norm'
    _assert_close_in_norm.stypy_param_names_list = ['x', 'y', 'rtol', 'size', 'rdt']
    _assert_close_in_norm.stypy_varargs_param_name = None
    _assert_close_in_norm.stypy_kwargs_param_name = None
    _assert_close_in_norm.stypy_call_defaults = defaults
    _assert_close_in_norm.stypy_call_varargs = varargs
    _assert_close_in_norm.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, '_assert_close_in_norm', ['x', 'y', 'rtol', 'size', 'rdt'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, '_assert_close_in_norm', localization, ['x', 'y', 'rtol', 'size', 'rdt'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of '_assert_close_in_norm(...)' code ##################

    
    # Assigning a BinOp to a Name (line 51):
    str_19009 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 51, 14), 'str', 'size: %s  rdt: %s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 51)
    tuple_19010 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 51, 37), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 51)
    # Adding element type (line 51)
    # Getting the type of 'size' (line 51)
    size_19011 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 51, 37), 'size')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 51, 37), tuple_19010, size_19011)
    # Adding element type (line 51)
    # Getting the type of 'rdt' (line 51)
    rdt_19012 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 51, 43), 'rdt')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 51, 37), tuple_19010, rdt_19012)
    
    # Applying the binary operator '%' (line 51)
    result_mod_19013 = python_operator(stypy.reporting.localization.Localization(__file__, 51, 14), '%', str_19009, tuple_19010)
    
    # Assigning a type to the variable 'err_msg' (line 51)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 51, 4), 'err_msg', result_mod_19013)
    
    # Call to assert_array_less(...): (line 52)
    # Processing the call arguments (line 52)
    
    # Call to norm(...): (line 52)
    # Processing the call arguments (line 52)
    # Getting the type of 'x' (line 52)
    x_19018 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 52, 37), 'x', False)
    # Getting the type of 'y' (line 52)
    y_19019 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 52, 41), 'y', False)
    # Applying the binary operator '-' (line 52)
    result_sub_19020 = python_operator(stypy.reporting.localization.Localization(__file__, 52, 37), '-', x_19018, y_19019)
    
    # Processing the call keyword arguments (line 52)
    kwargs_19021 = {}
    # Getting the type of 'np' (line 52)
    np_19015 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 52, 22), 'np', False)
    # Obtaining the member 'linalg' of a type (line 52)
    linalg_19016 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 52, 22), np_19015, 'linalg')
    # Obtaining the member 'norm' of a type (line 52)
    norm_19017 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 52, 22), linalg_19016, 'norm')
    # Calling norm(args, kwargs) (line 52)
    norm_call_result_19022 = invoke(stypy.reporting.localization.Localization(__file__, 52, 22), norm_19017, *[result_sub_19020], **kwargs_19021)
    
    # Getting the type of 'rtol' (line 52)
    rtol_19023 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 52, 45), 'rtol', False)
    
    # Call to norm(...): (line 52)
    # Processing the call arguments (line 52)
    # Getting the type of 'x' (line 52)
    x_19027 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 52, 65), 'x', False)
    # Processing the call keyword arguments (line 52)
    kwargs_19028 = {}
    # Getting the type of 'np' (line 52)
    np_19024 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 52, 50), 'np', False)
    # Obtaining the member 'linalg' of a type (line 52)
    linalg_19025 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 52, 50), np_19024, 'linalg')
    # Obtaining the member 'norm' of a type (line 52)
    norm_19026 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 52, 50), linalg_19025, 'norm')
    # Calling norm(args, kwargs) (line 52)
    norm_call_result_19029 = invoke(stypy.reporting.localization.Localization(__file__, 52, 50), norm_19026, *[x_19027], **kwargs_19028)
    
    # Applying the binary operator '*' (line 52)
    result_mul_19030 = python_operator(stypy.reporting.localization.Localization(__file__, 52, 45), '*', rtol_19023, norm_call_result_19029)
    
    # Getting the type of 'err_msg' (line 52)
    err_msg_19031 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 52, 69), 'err_msg', False)
    # Processing the call keyword arguments (line 52)
    kwargs_19032 = {}
    # Getting the type of 'assert_array_less' (line 52)
    assert_array_less_19014 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 52, 4), 'assert_array_less', False)
    # Calling assert_array_less(args, kwargs) (line 52)
    assert_array_less_call_result_19033 = invoke(stypy.reporting.localization.Localization(__file__, 52, 4), assert_array_less_19014, *[norm_call_result_19022, result_mul_19030, err_msg_19031], **kwargs_19032)
    
    
    # ################# End of '_assert_close_in_norm(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function '_assert_close_in_norm' in the type store
    # Getting the type of 'stypy_return_type' (line 49)
    stypy_return_type_19034 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 49, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_19034)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function '_assert_close_in_norm'
    return stypy_return_type_19034

# Assigning a type to the variable '_assert_close_in_norm' (line 49)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 49, 0), '_assert_close_in_norm', _assert_close_in_norm)

@norecursion
def random(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'random'
    module_type_store = module_type_store.open_function_context('random', 55, 0, False)
    
    # Passed parameters checking function
    random.stypy_localization = localization
    random.stypy_type_of_self = None
    random.stypy_type_store = module_type_store
    random.stypy_function_name = 'random'
    random.stypy_param_names_list = ['size']
    random.stypy_varargs_param_name = None
    random.stypy_kwargs_param_name = None
    random.stypy_call_defaults = defaults
    random.stypy_call_varargs = varargs
    random.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'random', ['size'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'random', localization, ['size'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'random(...)' code ##################

    
    # Call to rand(...): (line 56)
    # Getting the type of 'size' (line 56)
    size_19036 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 56, 17), 'size', False)
    # Processing the call keyword arguments (line 56)
    kwargs_19037 = {}
    # Getting the type of 'rand' (line 56)
    rand_19035 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 56, 11), 'rand', False)
    # Calling rand(args, kwargs) (line 56)
    rand_call_result_19038 = invoke(stypy.reporting.localization.Localization(__file__, 56, 11), rand_19035, *[size_19036], **kwargs_19037)
    
    # Assigning a type to the variable 'stypy_return_type' (line 56)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 56, 4), 'stypy_return_type', rand_call_result_19038)
    
    # ################# End of 'random(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'random' in the type store
    # Getting the type of 'stypy_return_type' (line 55)
    stypy_return_type_19039 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 55, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_19039)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'random'
    return stypy_return_type_19039

# Assigning a type to the variable 'random' (line 55)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 55, 0), 'random', random)

@norecursion
def get_mat(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'get_mat'
    module_type_store = module_type_store.open_function_context('get_mat', 59, 0, False)
    
    # Passed parameters checking function
    get_mat.stypy_localization = localization
    get_mat.stypy_type_of_self = None
    get_mat.stypy_type_store = module_type_store
    get_mat.stypy_function_name = 'get_mat'
    get_mat.stypy_param_names_list = ['n']
    get_mat.stypy_varargs_param_name = None
    get_mat.stypy_kwargs_param_name = None
    get_mat.stypy_call_defaults = defaults
    get_mat.stypy_call_varargs = varargs
    get_mat.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'get_mat', ['n'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'get_mat', localization, ['n'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'get_mat(...)' code ##################

    
    # Assigning a Call to a Name (line 60):
    
    # Call to arange(...): (line 60)
    # Processing the call arguments (line 60)
    # Getting the type of 'n' (line 60)
    n_19041 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 60, 18), 'n', False)
    # Processing the call keyword arguments (line 60)
    kwargs_19042 = {}
    # Getting the type of 'arange' (line 60)
    arange_19040 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 60, 11), 'arange', False)
    # Calling arange(args, kwargs) (line 60)
    arange_call_result_19043 = invoke(stypy.reporting.localization.Localization(__file__, 60, 11), arange_19040, *[n_19041], **kwargs_19042)
    
    # Assigning a type to the variable 'data' (line 60)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 60, 4), 'data', arange_call_result_19043)
    
    # Assigning a Call to a Name (line 61):
    
    # Call to outer(...): (line 61)
    # Processing the call arguments (line 61)
    # Getting the type of 'data' (line 61)
    data_19046 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 61, 21), 'data', False)
    # Getting the type of 'data' (line 61)
    data_19047 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 61, 26), 'data', False)
    # Processing the call keyword arguments (line 61)
    kwargs_19048 = {}
    # Getting the type of 'add' (line 61)
    add_19044 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 61, 11), 'add', False)
    # Obtaining the member 'outer' of a type (line 61)
    outer_19045 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 61, 11), add_19044, 'outer')
    # Calling outer(args, kwargs) (line 61)
    outer_call_result_19049 = invoke(stypy.reporting.localization.Localization(__file__, 61, 11), outer_19045, *[data_19046, data_19047], **kwargs_19048)
    
    # Assigning a type to the variable 'data' (line 61)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 61, 4), 'data', outer_call_result_19049)
    # Getting the type of 'data' (line 62)
    data_19050 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 62, 11), 'data')
    # Assigning a type to the variable 'stypy_return_type' (line 62)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 62, 4), 'stypy_return_type', data_19050)
    
    # ################# End of 'get_mat(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'get_mat' in the type store
    # Getting the type of 'stypy_return_type' (line 59)
    stypy_return_type_19051 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 59, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_19051)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'get_mat'
    return stypy_return_type_19051

# Assigning a type to the variable 'get_mat' (line 59)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 59, 0), 'get_mat', get_mat)

@norecursion
def direct_dft(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'direct_dft'
    module_type_store = module_type_store.open_function_context('direct_dft', 65, 0, False)
    
    # Passed parameters checking function
    direct_dft.stypy_localization = localization
    direct_dft.stypy_type_of_self = None
    direct_dft.stypy_type_store = module_type_store
    direct_dft.stypy_function_name = 'direct_dft'
    direct_dft.stypy_param_names_list = ['x']
    direct_dft.stypy_varargs_param_name = None
    direct_dft.stypy_kwargs_param_name = None
    direct_dft.stypy_call_defaults = defaults
    direct_dft.stypy_call_varargs = varargs
    direct_dft.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'direct_dft', ['x'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'direct_dft', localization, ['x'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'direct_dft(...)' code ##################

    
    # Assigning a Call to a Name (line 66):
    
    # Call to asarray(...): (line 66)
    # Processing the call arguments (line 66)
    # Getting the type of 'x' (line 66)
    x_19053 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 66, 16), 'x', False)
    # Processing the call keyword arguments (line 66)
    kwargs_19054 = {}
    # Getting the type of 'asarray' (line 66)
    asarray_19052 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 66, 8), 'asarray', False)
    # Calling asarray(args, kwargs) (line 66)
    asarray_call_result_19055 = invoke(stypy.reporting.localization.Localization(__file__, 66, 8), asarray_19052, *[x_19053], **kwargs_19054)
    
    # Assigning a type to the variable 'x' (line 66)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 66, 4), 'x', asarray_call_result_19055)
    
    # Assigning a Call to a Name (line 67):
    
    # Call to len(...): (line 67)
    # Processing the call arguments (line 67)
    # Getting the type of 'x' (line 67)
    x_19057 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 67, 12), 'x', False)
    # Processing the call keyword arguments (line 67)
    kwargs_19058 = {}
    # Getting the type of 'len' (line 67)
    len_19056 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 67, 8), 'len', False)
    # Calling len(args, kwargs) (line 67)
    len_call_result_19059 = invoke(stypy.reporting.localization.Localization(__file__, 67, 8), len_19056, *[x_19057], **kwargs_19058)
    
    # Assigning a type to the variable 'n' (line 67)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 67, 4), 'n', len_call_result_19059)
    
    # Assigning a Call to a Name (line 68):
    
    # Call to zeros(...): (line 68)
    # Processing the call arguments (line 68)
    # Getting the type of 'n' (line 68)
    n_19061 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 68, 14), 'n', False)
    # Processing the call keyword arguments (line 68)
    # Getting the type of 'cdouble' (line 68)
    cdouble_19062 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 68, 22), 'cdouble', False)
    keyword_19063 = cdouble_19062
    kwargs_19064 = {'dtype': keyword_19063}
    # Getting the type of 'zeros' (line 68)
    zeros_19060 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 68, 8), 'zeros', False)
    # Calling zeros(args, kwargs) (line 68)
    zeros_call_result_19065 = invoke(stypy.reporting.localization.Localization(__file__, 68, 8), zeros_19060, *[n_19061], **kwargs_19064)
    
    # Assigning a type to the variable 'y' (line 68)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 68, 4), 'y', zeros_call_result_19065)
    
    # Assigning a BinOp to a Name (line 69):
    
    
    # Call to arange(...): (line 69)
    # Processing the call arguments (line 69)
    # Getting the type of 'n' (line 69)
    n_19067 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 69, 16), 'n', False)
    # Processing the call keyword arguments (line 69)
    kwargs_19068 = {}
    # Getting the type of 'arange' (line 69)
    arange_19066 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 69, 9), 'arange', False)
    # Calling arange(args, kwargs) (line 69)
    arange_call_result_19069 = invoke(stypy.reporting.localization.Localization(__file__, 69, 9), arange_19066, *[n_19067], **kwargs_19068)
    
    # Applying the 'usub' unary operator (line 69)
    result___neg___19070 = python_operator(stypy.reporting.localization.Localization(__file__, 69, 8), 'usub', arange_call_result_19069)
    
    complex_19071 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 69, 20), 'complex')
    # Getting the type of 'pi' (line 69)
    pi_19072 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 69, 23), 'pi')
    # Applying the binary operator '*' (line 69)
    result_mul_19073 = python_operator(stypy.reporting.localization.Localization(__file__, 69, 20), '*', complex_19071, pi_19072)
    
    # Getting the type of 'n' (line 69)
    n_19074 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 69, 26), 'n')
    # Applying the binary operator 'div' (line 69)
    result_div_19075 = python_operator(stypy.reporting.localization.Localization(__file__, 69, 25), 'div', result_mul_19073, n_19074)
    
    # Applying the binary operator '*' (line 69)
    result_mul_19076 = python_operator(stypy.reporting.localization.Localization(__file__, 69, 8), '*', result___neg___19070, result_div_19075)
    
    # Assigning a type to the variable 'w' (line 69)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 69, 4), 'w', result_mul_19076)
    
    
    # Call to range(...): (line 70)
    # Processing the call arguments (line 70)
    # Getting the type of 'n' (line 70)
    n_19078 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 70, 19), 'n', False)
    # Processing the call keyword arguments (line 70)
    kwargs_19079 = {}
    # Getting the type of 'range' (line 70)
    range_19077 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 70, 13), 'range', False)
    # Calling range(args, kwargs) (line 70)
    range_call_result_19080 = invoke(stypy.reporting.localization.Localization(__file__, 70, 13), range_19077, *[n_19078], **kwargs_19079)
    
    # Testing the type of a for loop iterable (line 70)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 70, 4), range_call_result_19080)
    # Getting the type of the for loop variable (line 70)
    for_loop_var_19081 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 70, 4), range_call_result_19080)
    # Assigning a type to the variable 'i' (line 70)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 70, 4), 'i', for_loop_var_19081)
    # SSA begins for a for statement (line 70)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Call to a Subscript (line 71):
    
    # Call to dot(...): (line 71)
    # Processing the call arguments (line 71)
    
    # Call to exp(...): (line 71)
    # Processing the call arguments (line 71)
    # Getting the type of 'i' (line 71)
    i_19084 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 71, 23), 'i', False)
    # Getting the type of 'w' (line 71)
    w_19085 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 71, 25), 'w', False)
    # Applying the binary operator '*' (line 71)
    result_mul_19086 = python_operator(stypy.reporting.localization.Localization(__file__, 71, 23), '*', i_19084, w_19085)
    
    # Processing the call keyword arguments (line 71)
    kwargs_19087 = {}
    # Getting the type of 'exp' (line 71)
    exp_19083 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 71, 19), 'exp', False)
    # Calling exp(args, kwargs) (line 71)
    exp_call_result_19088 = invoke(stypy.reporting.localization.Localization(__file__, 71, 19), exp_19083, *[result_mul_19086], **kwargs_19087)
    
    # Getting the type of 'x' (line 71)
    x_19089 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 71, 28), 'x', False)
    # Processing the call keyword arguments (line 71)
    kwargs_19090 = {}
    # Getting the type of 'dot' (line 71)
    dot_19082 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 71, 15), 'dot', False)
    # Calling dot(args, kwargs) (line 71)
    dot_call_result_19091 = invoke(stypy.reporting.localization.Localization(__file__, 71, 15), dot_19082, *[exp_call_result_19088, x_19089], **kwargs_19090)
    
    # Getting the type of 'y' (line 71)
    y_19092 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 71, 8), 'y')
    # Getting the type of 'i' (line 71)
    i_19093 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 71, 10), 'i')
    # Storing an element on a container (line 71)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 71, 8), y_19092, (i_19093, dot_call_result_19091))
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # Getting the type of 'y' (line 72)
    y_19094 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 72, 11), 'y')
    # Assigning a type to the variable 'stypy_return_type' (line 72)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 72, 4), 'stypy_return_type', y_19094)
    
    # ################# End of 'direct_dft(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'direct_dft' in the type store
    # Getting the type of 'stypy_return_type' (line 65)
    stypy_return_type_19095 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 65, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_19095)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'direct_dft'
    return stypy_return_type_19095

# Assigning a type to the variable 'direct_dft' (line 65)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 65, 0), 'direct_dft', direct_dft)

@norecursion
def direct_idft(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'direct_idft'
    module_type_store = module_type_store.open_function_context('direct_idft', 75, 0, False)
    
    # Passed parameters checking function
    direct_idft.stypy_localization = localization
    direct_idft.stypy_type_of_self = None
    direct_idft.stypy_type_store = module_type_store
    direct_idft.stypy_function_name = 'direct_idft'
    direct_idft.stypy_param_names_list = ['x']
    direct_idft.stypy_varargs_param_name = None
    direct_idft.stypy_kwargs_param_name = None
    direct_idft.stypy_call_defaults = defaults
    direct_idft.stypy_call_varargs = varargs
    direct_idft.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'direct_idft', ['x'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'direct_idft', localization, ['x'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'direct_idft(...)' code ##################

    
    # Assigning a Call to a Name (line 76):
    
    # Call to asarray(...): (line 76)
    # Processing the call arguments (line 76)
    # Getting the type of 'x' (line 76)
    x_19097 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 76, 16), 'x', False)
    # Processing the call keyword arguments (line 76)
    kwargs_19098 = {}
    # Getting the type of 'asarray' (line 76)
    asarray_19096 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 76, 8), 'asarray', False)
    # Calling asarray(args, kwargs) (line 76)
    asarray_call_result_19099 = invoke(stypy.reporting.localization.Localization(__file__, 76, 8), asarray_19096, *[x_19097], **kwargs_19098)
    
    # Assigning a type to the variable 'x' (line 76)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 76, 4), 'x', asarray_call_result_19099)
    
    # Assigning a Call to a Name (line 77):
    
    # Call to len(...): (line 77)
    # Processing the call arguments (line 77)
    # Getting the type of 'x' (line 77)
    x_19101 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 77, 12), 'x', False)
    # Processing the call keyword arguments (line 77)
    kwargs_19102 = {}
    # Getting the type of 'len' (line 77)
    len_19100 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 77, 8), 'len', False)
    # Calling len(args, kwargs) (line 77)
    len_call_result_19103 = invoke(stypy.reporting.localization.Localization(__file__, 77, 8), len_19100, *[x_19101], **kwargs_19102)
    
    # Assigning a type to the variable 'n' (line 77)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 77, 4), 'n', len_call_result_19103)
    
    # Assigning a Call to a Name (line 78):
    
    # Call to zeros(...): (line 78)
    # Processing the call arguments (line 78)
    # Getting the type of 'n' (line 78)
    n_19105 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 78, 14), 'n', False)
    # Processing the call keyword arguments (line 78)
    # Getting the type of 'cdouble' (line 78)
    cdouble_19106 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 78, 22), 'cdouble', False)
    keyword_19107 = cdouble_19106
    kwargs_19108 = {'dtype': keyword_19107}
    # Getting the type of 'zeros' (line 78)
    zeros_19104 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 78, 8), 'zeros', False)
    # Calling zeros(args, kwargs) (line 78)
    zeros_call_result_19109 = invoke(stypy.reporting.localization.Localization(__file__, 78, 8), zeros_19104, *[n_19105], **kwargs_19108)
    
    # Assigning a type to the variable 'y' (line 78)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 78, 4), 'y', zeros_call_result_19109)
    
    # Assigning a BinOp to a Name (line 79):
    
    # Call to arange(...): (line 79)
    # Processing the call arguments (line 79)
    # Getting the type of 'n' (line 79)
    n_19111 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 79, 15), 'n', False)
    # Processing the call keyword arguments (line 79)
    kwargs_19112 = {}
    # Getting the type of 'arange' (line 79)
    arange_19110 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 79, 8), 'arange', False)
    # Calling arange(args, kwargs) (line 79)
    arange_call_result_19113 = invoke(stypy.reporting.localization.Localization(__file__, 79, 8), arange_19110, *[n_19111], **kwargs_19112)
    
    complex_19114 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 79, 19), 'complex')
    # Getting the type of 'pi' (line 79)
    pi_19115 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 79, 22), 'pi')
    # Applying the binary operator '*' (line 79)
    result_mul_19116 = python_operator(stypy.reporting.localization.Localization(__file__, 79, 19), '*', complex_19114, pi_19115)
    
    # Getting the type of 'n' (line 79)
    n_19117 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 79, 25), 'n')
    # Applying the binary operator 'div' (line 79)
    result_div_19118 = python_operator(stypy.reporting.localization.Localization(__file__, 79, 24), 'div', result_mul_19116, n_19117)
    
    # Applying the binary operator '*' (line 79)
    result_mul_19119 = python_operator(stypy.reporting.localization.Localization(__file__, 79, 8), '*', arange_call_result_19113, result_div_19118)
    
    # Assigning a type to the variable 'w' (line 79)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 79, 4), 'w', result_mul_19119)
    
    
    # Call to range(...): (line 80)
    # Processing the call arguments (line 80)
    # Getting the type of 'n' (line 80)
    n_19121 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 80, 19), 'n', False)
    # Processing the call keyword arguments (line 80)
    kwargs_19122 = {}
    # Getting the type of 'range' (line 80)
    range_19120 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 80, 13), 'range', False)
    # Calling range(args, kwargs) (line 80)
    range_call_result_19123 = invoke(stypy.reporting.localization.Localization(__file__, 80, 13), range_19120, *[n_19121], **kwargs_19122)
    
    # Testing the type of a for loop iterable (line 80)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 80, 4), range_call_result_19123)
    # Getting the type of the for loop variable (line 80)
    for_loop_var_19124 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 80, 4), range_call_result_19123)
    # Assigning a type to the variable 'i' (line 80)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 80, 4), 'i', for_loop_var_19124)
    # SSA begins for a for statement (line 80)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a BinOp to a Subscript (line 81):
    
    # Call to dot(...): (line 81)
    # Processing the call arguments (line 81)
    
    # Call to exp(...): (line 81)
    # Processing the call arguments (line 81)
    # Getting the type of 'i' (line 81)
    i_19127 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 81, 23), 'i', False)
    # Getting the type of 'w' (line 81)
    w_19128 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 81, 25), 'w', False)
    # Applying the binary operator '*' (line 81)
    result_mul_19129 = python_operator(stypy.reporting.localization.Localization(__file__, 81, 23), '*', i_19127, w_19128)
    
    # Processing the call keyword arguments (line 81)
    kwargs_19130 = {}
    # Getting the type of 'exp' (line 81)
    exp_19126 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 81, 19), 'exp', False)
    # Calling exp(args, kwargs) (line 81)
    exp_call_result_19131 = invoke(stypy.reporting.localization.Localization(__file__, 81, 19), exp_19126, *[result_mul_19129], **kwargs_19130)
    
    # Getting the type of 'x' (line 81)
    x_19132 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 81, 28), 'x', False)
    # Processing the call keyword arguments (line 81)
    kwargs_19133 = {}
    # Getting the type of 'dot' (line 81)
    dot_19125 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 81, 15), 'dot', False)
    # Calling dot(args, kwargs) (line 81)
    dot_call_result_19134 = invoke(stypy.reporting.localization.Localization(__file__, 81, 15), dot_19125, *[exp_call_result_19131, x_19132], **kwargs_19133)
    
    # Getting the type of 'n' (line 81)
    n_19135 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 81, 31), 'n')
    # Applying the binary operator 'div' (line 81)
    result_div_19136 = python_operator(stypy.reporting.localization.Localization(__file__, 81, 15), 'div', dot_call_result_19134, n_19135)
    
    # Getting the type of 'y' (line 81)
    y_19137 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 81, 8), 'y')
    # Getting the type of 'i' (line 81)
    i_19138 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 81, 10), 'i')
    # Storing an element on a container (line 81)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 81, 8), y_19137, (i_19138, result_div_19136))
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # Getting the type of 'y' (line 82)
    y_19139 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 82, 11), 'y')
    # Assigning a type to the variable 'stypy_return_type' (line 82)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 82, 4), 'stypy_return_type', y_19139)
    
    # ################# End of 'direct_idft(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'direct_idft' in the type store
    # Getting the type of 'stypy_return_type' (line 75)
    stypy_return_type_19140 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 75, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_19140)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'direct_idft'
    return stypy_return_type_19140

# Assigning a type to the variable 'direct_idft' (line 75)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 75, 0), 'direct_idft', direct_idft)

@norecursion
def direct_dftn(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'direct_dftn'
    module_type_store = module_type_store.open_function_context('direct_dftn', 85, 0, False)
    
    # Passed parameters checking function
    direct_dftn.stypy_localization = localization
    direct_dftn.stypy_type_of_self = None
    direct_dftn.stypy_type_store = module_type_store
    direct_dftn.stypy_function_name = 'direct_dftn'
    direct_dftn.stypy_param_names_list = ['x']
    direct_dftn.stypy_varargs_param_name = None
    direct_dftn.stypy_kwargs_param_name = None
    direct_dftn.stypy_call_defaults = defaults
    direct_dftn.stypy_call_varargs = varargs
    direct_dftn.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'direct_dftn', ['x'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'direct_dftn', localization, ['x'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'direct_dftn(...)' code ##################

    
    # Assigning a Call to a Name (line 86):
    
    # Call to asarray(...): (line 86)
    # Processing the call arguments (line 86)
    # Getting the type of 'x' (line 86)
    x_19142 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 16), 'x', False)
    # Processing the call keyword arguments (line 86)
    kwargs_19143 = {}
    # Getting the type of 'asarray' (line 86)
    asarray_19141 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 8), 'asarray', False)
    # Calling asarray(args, kwargs) (line 86)
    asarray_call_result_19144 = invoke(stypy.reporting.localization.Localization(__file__, 86, 8), asarray_19141, *[x_19142], **kwargs_19143)
    
    # Assigning a type to the variable 'x' (line 86)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 86, 4), 'x', asarray_call_result_19144)
    
    
    # Call to range(...): (line 87)
    # Processing the call arguments (line 87)
    
    # Call to len(...): (line 87)
    # Processing the call arguments (line 87)
    # Getting the type of 'x' (line 87)
    x_19147 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 87, 26), 'x', False)
    # Obtaining the member 'shape' of a type (line 87)
    shape_19148 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 87, 26), x_19147, 'shape')
    # Processing the call keyword arguments (line 87)
    kwargs_19149 = {}
    # Getting the type of 'len' (line 87)
    len_19146 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 87, 22), 'len', False)
    # Calling len(args, kwargs) (line 87)
    len_call_result_19150 = invoke(stypy.reporting.localization.Localization(__file__, 87, 22), len_19146, *[shape_19148], **kwargs_19149)
    
    # Processing the call keyword arguments (line 87)
    kwargs_19151 = {}
    # Getting the type of 'range' (line 87)
    range_19145 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 87, 16), 'range', False)
    # Calling range(args, kwargs) (line 87)
    range_call_result_19152 = invoke(stypy.reporting.localization.Localization(__file__, 87, 16), range_19145, *[len_call_result_19150], **kwargs_19151)
    
    # Testing the type of a for loop iterable (line 87)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 87, 4), range_call_result_19152)
    # Getting the type of the for loop variable (line 87)
    for_loop_var_19153 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 87, 4), range_call_result_19152)
    # Assigning a type to the variable 'axis' (line 87)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 87, 4), 'axis', for_loop_var_19153)
    # SSA begins for a for statement (line 87)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Call to a Name (line 88):
    
    # Call to fft(...): (line 88)
    # Processing the call arguments (line 88)
    # Getting the type of 'x' (line 88)
    x_19155 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 88, 16), 'x', False)
    # Processing the call keyword arguments (line 88)
    # Getting the type of 'axis' (line 88)
    axis_19156 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 88, 23), 'axis', False)
    keyword_19157 = axis_19156
    kwargs_19158 = {'axis': keyword_19157}
    # Getting the type of 'fft' (line 88)
    fft_19154 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 88, 12), 'fft', False)
    # Calling fft(args, kwargs) (line 88)
    fft_call_result_19159 = invoke(stypy.reporting.localization.Localization(__file__, 88, 12), fft_19154, *[x_19155], **kwargs_19158)
    
    # Assigning a type to the variable 'x' (line 88)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 88, 8), 'x', fft_call_result_19159)
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # Getting the type of 'x' (line 89)
    x_19160 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 89, 11), 'x')
    # Assigning a type to the variable 'stypy_return_type' (line 89)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 89, 4), 'stypy_return_type', x_19160)
    
    # ################# End of 'direct_dftn(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'direct_dftn' in the type store
    # Getting the type of 'stypy_return_type' (line 85)
    stypy_return_type_19161 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 85, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_19161)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'direct_dftn'
    return stypy_return_type_19161

# Assigning a type to the variable 'direct_dftn' (line 85)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 85, 0), 'direct_dftn', direct_dftn)

@norecursion
def direct_idftn(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'direct_idftn'
    module_type_store = module_type_store.open_function_context('direct_idftn', 92, 0, False)
    
    # Passed parameters checking function
    direct_idftn.stypy_localization = localization
    direct_idftn.stypy_type_of_self = None
    direct_idftn.stypy_type_store = module_type_store
    direct_idftn.stypy_function_name = 'direct_idftn'
    direct_idftn.stypy_param_names_list = ['x']
    direct_idftn.stypy_varargs_param_name = None
    direct_idftn.stypy_kwargs_param_name = None
    direct_idftn.stypy_call_defaults = defaults
    direct_idftn.stypy_call_varargs = varargs
    direct_idftn.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'direct_idftn', ['x'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'direct_idftn', localization, ['x'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'direct_idftn(...)' code ##################

    
    # Assigning a Call to a Name (line 93):
    
    # Call to asarray(...): (line 93)
    # Processing the call arguments (line 93)
    # Getting the type of 'x' (line 93)
    x_19163 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 93, 16), 'x', False)
    # Processing the call keyword arguments (line 93)
    kwargs_19164 = {}
    # Getting the type of 'asarray' (line 93)
    asarray_19162 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 93, 8), 'asarray', False)
    # Calling asarray(args, kwargs) (line 93)
    asarray_call_result_19165 = invoke(stypy.reporting.localization.Localization(__file__, 93, 8), asarray_19162, *[x_19163], **kwargs_19164)
    
    # Assigning a type to the variable 'x' (line 93)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 93, 4), 'x', asarray_call_result_19165)
    
    
    # Call to range(...): (line 94)
    # Processing the call arguments (line 94)
    
    # Call to len(...): (line 94)
    # Processing the call arguments (line 94)
    # Getting the type of 'x' (line 94)
    x_19168 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 94, 26), 'x', False)
    # Obtaining the member 'shape' of a type (line 94)
    shape_19169 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 94, 26), x_19168, 'shape')
    # Processing the call keyword arguments (line 94)
    kwargs_19170 = {}
    # Getting the type of 'len' (line 94)
    len_19167 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 94, 22), 'len', False)
    # Calling len(args, kwargs) (line 94)
    len_call_result_19171 = invoke(stypy.reporting.localization.Localization(__file__, 94, 22), len_19167, *[shape_19169], **kwargs_19170)
    
    # Processing the call keyword arguments (line 94)
    kwargs_19172 = {}
    # Getting the type of 'range' (line 94)
    range_19166 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 94, 16), 'range', False)
    # Calling range(args, kwargs) (line 94)
    range_call_result_19173 = invoke(stypy.reporting.localization.Localization(__file__, 94, 16), range_19166, *[len_call_result_19171], **kwargs_19172)
    
    # Testing the type of a for loop iterable (line 94)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 94, 4), range_call_result_19173)
    # Getting the type of the for loop variable (line 94)
    for_loop_var_19174 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 94, 4), range_call_result_19173)
    # Assigning a type to the variable 'axis' (line 94)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 94, 4), 'axis', for_loop_var_19174)
    # SSA begins for a for statement (line 94)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Call to a Name (line 95):
    
    # Call to ifft(...): (line 95)
    # Processing the call arguments (line 95)
    # Getting the type of 'x' (line 95)
    x_19176 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 95, 17), 'x', False)
    # Processing the call keyword arguments (line 95)
    # Getting the type of 'axis' (line 95)
    axis_19177 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 95, 24), 'axis', False)
    keyword_19178 = axis_19177
    kwargs_19179 = {'axis': keyword_19178}
    # Getting the type of 'ifft' (line 95)
    ifft_19175 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 95, 12), 'ifft', False)
    # Calling ifft(args, kwargs) (line 95)
    ifft_call_result_19180 = invoke(stypy.reporting.localization.Localization(__file__, 95, 12), ifft_19175, *[x_19176], **kwargs_19179)
    
    # Assigning a type to the variable 'x' (line 95)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 95, 8), 'x', ifft_call_result_19180)
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # Getting the type of 'x' (line 96)
    x_19181 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 96, 11), 'x')
    # Assigning a type to the variable 'stypy_return_type' (line 96)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 96, 4), 'stypy_return_type', x_19181)
    
    # ################# End of 'direct_idftn(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'direct_idftn' in the type store
    # Getting the type of 'stypy_return_type' (line 92)
    stypy_return_type_19182 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 92, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_19182)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'direct_idftn'
    return stypy_return_type_19182

# Assigning a type to the variable 'direct_idftn' (line 92)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 92, 0), 'direct_idftn', direct_idftn)

@norecursion
def direct_rdft(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'direct_rdft'
    module_type_store = module_type_store.open_function_context('direct_rdft', 99, 0, False)
    
    # Passed parameters checking function
    direct_rdft.stypy_localization = localization
    direct_rdft.stypy_type_of_self = None
    direct_rdft.stypy_type_store = module_type_store
    direct_rdft.stypy_function_name = 'direct_rdft'
    direct_rdft.stypy_param_names_list = ['x']
    direct_rdft.stypy_varargs_param_name = None
    direct_rdft.stypy_kwargs_param_name = None
    direct_rdft.stypy_call_defaults = defaults
    direct_rdft.stypy_call_varargs = varargs
    direct_rdft.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'direct_rdft', ['x'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'direct_rdft', localization, ['x'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'direct_rdft(...)' code ##################

    
    # Assigning a Call to a Name (line 100):
    
    # Call to asarray(...): (line 100)
    # Processing the call arguments (line 100)
    # Getting the type of 'x' (line 100)
    x_19184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 100, 16), 'x', False)
    # Processing the call keyword arguments (line 100)
    kwargs_19185 = {}
    # Getting the type of 'asarray' (line 100)
    asarray_19183 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 100, 8), 'asarray', False)
    # Calling asarray(args, kwargs) (line 100)
    asarray_call_result_19186 = invoke(stypy.reporting.localization.Localization(__file__, 100, 8), asarray_19183, *[x_19184], **kwargs_19185)
    
    # Assigning a type to the variable 'x' (line 100)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 100, 4), 'x', asarray_call_result_19186)
    
    # Assigning a Call to a Name (line 101):
    
    # Call to len(...): (line 101)
    # Processing the call arguments (line 101)
    # Getting the type of 'x' (line 101)
    x_19188 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 101, 12), 'x', False)
    # Processing the call keyword arguments (line 101)
    kwargs_19189 = {}
    # Getting the type of 'len' (line 101)
    len_19187 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 101, 8), 'len', False)
    # Calling len(args, kwargs) (line 101)
    len_call_result_19190 = invoke(stypy.reporting.localization.Localization(__file__, 101, 8), len_19187, *[x_19188], **kwargs_19189)
    
    # Assigning a type to the variable 'n' (line 101)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 101, 4), 'n', len_call_result_19190)
    
    # Assigning a BinOp to a Name (line 102):
    
    
    # Call to arange(...): (line 102)
    # Processing the call arguments (line 102)
    # Getting the type of 'n' (line 102)
    n_19192 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 102, 16), 'n', False)
    # Processing the call keyword arguments (line 102)
    kwargs_19193 = {}
    # Getting the type of 'arange' (line 102)
    arange_19191 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 102, 9), 'arange', False)
    # Calling arange(args, kwargs) (line 102)
    arange_call_result_19194 = invoke(stypy.reporting.localization.Localization(__file__, 102, 9), arange_19191, *[n_19192], **kwargs_19193)
    
    # Applying the 'usub' unary operator (line 102)
    result___neg___19195 = python_operator(stypy.reporting.localization.Localization(__file__, 102, 8), 'usub', arange_call_result_19194)
    
    complex_19196 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 102, 20), 'complex')
    # Getting the type of 'pi' (line 102)
    pi_19197 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 102, 23), 'pi')
    # Applying the binary operator '*' (line 102)
    result_mul_19198 = python_operator(stypy.reporting.localization.Localization(__file__, 102, 20), '*', complex_19196, pi_19197)
    
    # Getting the type of 'n' (line 102)
    n_19199 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 102, 26), 'n')
    # Applying the binary operator 'div' (line 102)
    result_div_19200 = python_operator(stypy.reporting.localization.Localization(__file__, 102, 25), 'div', result_mul_19198, n_19199)
    
    # Applying the binary operator '*' (line 102)
    result_mul_19201 = python_operator(stypy.reporting.localization.Localization(__file__, 102, 8), '*', result___neg___19195, result_div_19200)
    
    # Assigning a type to the variable 'w' (line 102)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 102, 4), 'w', result_mul_19201)
    
    # Assigning a Call to a Name (line 103):
    
    # Call to zeros(...): (line 103)
    # Processing the call arguments (line 103)
    # Getting the type of 'n' (line 103)
    n_19203 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 103, 14), 'n', False)
    # Processing the call keyword arguments (line 103)
    # Getting the type of 'double' (line 103)
    double_19204 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 103, 22), 'double', False)
    keyword_19205 = double_19204
    kwargs_19206 = {'dtype': keyword_19205}
    # Getting the type of 'zeros' (line 103)
    zeros_19202 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 103, 8), 'zeros', False)
    # Calling zeros(args, kwargs) (line 103)
    zeros_call_result_19207 = invoke(stypy.reporting.localization.Localization(__file__, 103, 8), zeros_19202, *[n_19203], **kwargs_19206)
    
    # Assigning a type to the variable 'r' (line 103)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 103, 4), 'r', zeros_call_result_19207)
    
    
    # Call to range(...): (line 104)
    # Processing the call arguments (line 104)
    # Getting the type of 'n' (line 104)
    n_19209 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 104, 19), 'n', False)
    int_19210 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 104, 22), 'int')
    # Applying the binary operator '//' (line 104)
    result_floordiv_19211 = python_operator(stypy.reporting.localization.Localization(__file__, 104, 19), '//', n_19209, int_19210)
    
    int_19212 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 104, 24), 'int')
    # Applying the binary operator '+' (line 104)
    result_add_19213 = python_operator(stypy.reporting.localization.Localization(__file__, 104, 19), '+', result_floordiv_19211, int_19212)
    
    # Processing the call keyword arguments (line 104)
    kwargs_19214 = {}
    # Getting the type of 'range' (line 104)
    range_19208 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 104, 13), 'range', False)
    # Calling range(args, kwargs) (line 104)
    range_call_result_19215 = invoke(stypy.reporting.localization.Localization(__file__, 104, 13), range_19208, *[result_add_19213], **kwargs_19214)
    
    # Testing the type of a for loop iterable (line 104)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 104, 4), range_call_result_19215)
    # Getting the type of the for loop variable (line 104)
    for_loop_var_19216 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 104, 4), range_call_result_19215)
    # Assigning a type to the variable 'i' (line 104)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 104, 4), 'i', for_loop_var_19216)
    # SSA begins for a for statement (line 104)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Call to a Name (line 105):
    
    # Call to dot(...): (line 105)
    # Processing the call arguments (line 105)
    
    # Call to exp(...): (line 105)
    # Processing the call arguments (line 105)
    # Getting the type of 'i' (line 105)
    i_19219 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 105, 20), 'i', False)
    # Getting the type of 'w' (line 105)
    w_19220 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 105, 22), 'w', False)
    # Applying the binary operator '*' (line 105)
    result_mul_19221 = python_operator(stypy.reporting.localization.Localization(__file__, 105, 20), '*', i_19219, w_19220)
    
    # Processing the call keyword arguments (line 105)
    kwargs_19222 = {}
    # Getting the type of 'exp' (line 105)
    exp_19218 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 105, 16), 'exp', False)
    # Calling exp(args, kwargs) (line 105)
    exp_call_result_19223 = invoke(stypy.reporting.localization.Localization(__file__, 105, 16), exp_19218, *[result_mul_19221], **kwargs_19222)
    
    # Getting the type of 'x' (line 105)
    x_19224 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 105, 25), 'x', False)
    # Processing the call keyword arguments (line 105)
    kwargs_19225 = {}
    # Getting the type of 'dot' (line 105)
    dot_19217 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 105, 12), 'dot', False)
    # Calling dot(args, kwargs) (line 105)
    dot_call_result_19226 = invoke(stypy.reporting.localization.Localization(__file__, 105, 12), dot_19217, *[exp_call_result_19223, x_19224], **kwargs_19225)
    
    # Assigning a type to the variable 'y' (line 105)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 105, 8), 'y', dot_call_result_19226)
    
    # Getting the type of 'i' (line 106)
    i_19227 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 106, 11), 'i')
    # Testing the type of an if condition (line 106)
    if_condition_19228 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 106, 8), i_19227)
    # Assigning a type to the variable 'if_condition_19228' (line 106)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 106, 8), 'if_condition_19228', if_condition_19228)
    # SSA begins for if statement (line 106)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Attribute to a Subscript (line 107):
    # Getting the type of 'y' (line 107)
    y_19229 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 107, 23), 'y')
    # Obtaining the member 'real' of a type (line 107)
    real_19230 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 107, 23), y_19229, 'real')
    # Getting the type of 'r' (line 107)
    r_19231 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 107, 12), 'r')
    int_19232 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 107, 14), 'int')
    # Getting the type of 'i' (line 107)
    i_19233 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 107, 16), 'i')
    # Applying the binary operator '*' (line 107)
    result_mul_19234 = python_operator(stypy.reporting.localization.Localization(__file__, 107, 14), '*', int_19232, i_19233)
    
    int_19235 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 107, 18), 'int')
    # Applying the binary operator '-' (line 107)
    result_sub_19236 = python_operator(stypy.reporting.localization.Localization(__file__, 107, 14), '-', result_mul_19234, int_19235)
    
    # Storing an element on a container (line 107)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 107, 12), r_19231, (result_sub_19236, real_19230))
    
    
    int_19237 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 108, 15), 'int')
    # Getting the type of 'i' (line 108)
    i_19238 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 108, 17), 'i')
    # Applying the binary operator '*' (line 108)
    result_mul_19239 = python_operator(stypy.reporting.localization.Localization(__file__, 108, 15), '*', int_19237, i_19238)
    
    # Getting the type of 'n' (line 108)
    n_19240 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 108, 21), 'n')
    # Applying the binary operator '<' (line 108)
    result_lt_19241 = python_operator(stypy.reporting.localization.Localization(__file__, 108, 15), '<', result_mul_19239, n_19240)
    
    # Testing the type of an if condition (line 108)
    if_condition_19242 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 108, 12), result_lt_19241)
    # Assigning a type to the variable 'if_condition_19242' (line 108)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 108, 12), 'if_condition_19242', if_condition_19242)
    # SSA begins for if statement (line 108)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Attribute to a Subscript (line 109):
    # Getting the type of 'y' (line 109)
    y_19243 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 109, 25), 'y')
    # Obtaining the member 'imag' of a type (line 109)
    imag_19244 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 109, 25), y_19243, 'imag')
    # Getting the type of 'r' (line 109)
    r_19245 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 109, 16), 'r')
    int_19246 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 109, 18), 'int')
    # Getting the type of 'i' (line 109)
    i_19247 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 109, 20), 'i')
    # Applying the binary operator '*' (line 109)
    result_mul_19248 = python_operator(stypy.reporting.localization.Localization(__file__, 109, 18), '*', int_19246, i_19247)
    
    # Storing an element on a container (line 109)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 109, 16), r_19245, (result_mul_19248, imag_19244))
    # SSA join for if statement (line 108)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else part of an if statement (line 106)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a Attribute to a Subscript (line 111):
    # Getting the type of 'y' (line 111)
    y_19249 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 111, 19), 'y')
    # Obtaining the member 'real' of a type (line 111)
    real_19250 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 111, 19), y_19249, 'real')
    # Getting the type of 'r' (line 111)
    r_19251 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 111, 12), 'r')
    int_19252 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 111, 14), 'int')
    # Storing an element on a container (line 111)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 111, 12), r_19251, (int_19252, real_19250))
    # SSA join for if statement (line 106)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # Getting the type of 'r' (line 112)
    r_19253 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 112, 11), 'r')
    # Assigning a type to the variable 'stypy_return_type' (line 112)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 112, 4), 'stypy_return_type', r_19253)
    
    # ################# End of 'direct_rdft(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'direct_rdft' in the type store
    # Getting the type of 'stypy_return_type' (line 99)
    stypy_return_type_19254 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 99, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_19254)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'direct_rdft'
    return stypy_return_type_19254

# Assigning a type to the variable 'direct_rdft' (line 99)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 99, 0), 'direct_rdft', direct_rdft)

@norecursion
def direct_irdft(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'direct_irdft'
    module_type_store = module_type_store.open_function_context('direct_irdft', 115, 0, False)
    
    # Passed parameters checking function
    direct_irdft.stypy_localization = localization
    direct_irdft.stypy_type_of_self = None
    direct_irdft.stypy_type_store = module_type_store
    direct_irdft.stypy_function_name = 'direct_irdft'
    direct_irdft.stypy_param_names_list = ['x']
    direct_irdft.stypy_varargs_param_name = None
    direct_irdft.stypy_kwargs_param_name = None
    direct_irdft.stypy_call_defaults = defaults
    direct_irdft.stypy_call_varargs = varargs
    direct_irdft.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'direct_irdft', ['x'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'direct_irdft', localization, ['x'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'direct_irdft(...)' code ##################

    
    # Assigning a Call to a Name (line 116):
    
    # Call to asarray(...): (line 116)
    # Processing the call arguments (line 116)
    # Getting the type of 'x' (line 116)
    x_19256 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 116, 16), 'x', False)
    # Processing the call keyword arguments (line 116)
    kwargs_19257 = {}
    # Getting the type of 'asarray' (line 116)
    asarray_19255 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 116, 8), 'asarray', False)
    # Calling asarray(args, kwargs) (line 116)
    asarray_call_result_19258 = invoke(stypy.reporting.localization.Localization(__file__, 116, 8), asarray_19255, *[x_19256], **kwargs_19257)
    
    # Assigning a type to the variable 'x' (line 116)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 116, 4), 'x', asarray_call_result_19258)
    
    # Assigning a Call to a Name (line 117):
    
    # Call to len(...): (line 117)
    # Processing the call arguments (line 117)
    # Getting the type of 'x' (line 117)
    x_19260 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 117, 12), 'x', False)
    # Processing the call keyword arguments (line 117)
    kwargs_19261 = {}
    # Getting the type of 'len' (line 117)
    len_19259 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 117, 8), 'len', False)
    # Calling len(args, kwargs) (line 117)
    len_call_result_19262 = invoke(stypy.reporting.localization.Localization(__file__, 117, 8), len_19259, *[x_19260], **kwargs_19261)
    
    # Assigning a type to the variable 'n' (line 117)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 117, 4), 'n', len_call_result_19262)
    
    # Assigning a Call to a Name (line 118):
    
    # Call to zeros(...): (line 118)
    # Processing the call arguments (line 118)
    # Getting the type of 'n' (line 118)
    n_19264 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 118, 15), 'n', False)
    # Processing the call keyword arguments (line 118)
    # Getting the type of 'cdouble' (line 118)
    cdouble_19265 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 118, 23), 'cdouble', False)
    keyword_19266 = cdouble_19265
    kwargs_19267 = {'dtype': keyword_19266}
    # Getting the type of 'zeros' (line 118)
    zeros_19263 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 118, 9), 'zeros', False)
    # Calling zeros(args, kwargs) (line 118)
    zeros_call_result_19268 = invoke(stypy.reporting.localization.Localization(__file__, 118, 9), zeros_19263, *[n_19264], **kwargs_19267)
    
    # Assigning a type to the variable 'x1' (line 118)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 118, 4), 'x1', zeros_call_result_19268)
    
    
    # Call to range(...): (line 119)
    # Processing the call arguments (line 119)
    # Getting the type of 'n' (line 119)
    n_19270 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 119, 19), 'n', False)
    int_19271 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 119, 22), 'int')
    # Applying the binary operator '//' (line 119)
    result_floordiv_19272 = python_operator(stypy.reporting.localization.Localization(__file__, 119, 19), '//', n_19270, int_19271)
    
    int_19273 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 119, 24), 'int')
    # Applying the binary operator '+' (line 119)
    result_add_19274 = python_operator(stypy.reporting.localization.Localization(__file__, 119, 19), '+', result_floordiv_19272, int_19273)
    
    # Processing the call keyword arguments (line 119)
    kwargs_19275 = {}
    # Getting the type of 'range' (line 119)
    range_19269 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 119, 13), 'range', False)
    # Calling range(args, kwargs) (line 119)
    range_call_result_19276 = invoke(stypy.reporting.localization.Localization(__file__, 119, 13), range_19269, *[result_add_19274], **kwargs_19275)
    
    # Testing the type of a for loop iterable (line 119)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 119, 4), range_call_result_19276)
    # Getting the type of the for loop variable (line 119)
    for_loop_var_19277 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 119, 4), range_call_result_19276)
    # Assigning a type to the variable 'i' (line 119)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 119, 4), 'i', for_loop_var_19277)
    # SSA begins for a for statement (line 119)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Getting the type of 'i' (line 120)
    i_19278 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 120, 11), 'i')
    # Testing the type of an if condition (line 120)
    if_condition_19279 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 120, 8), i_19278)
    # Assigning a type to the variable 'if_condition_19279' (line 120)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 120, 8), 'if_condition_19279', if_condition_19279)
    # SSA begins for if statement (line 120)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    int_19280 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 121, 15), 'int')
    # Getting the type of 'i' (line 121)
    i_19281 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 121, 17), 'i')
    # Applying the binary operator '*' (line 121)
    result_mul_19282 = python_operator(stypy.reporting.localization.Localization(__file__, 121, 15), '*', int_19280, i_19281)
    
    # Getting the type of 'n' (line 121)
    n_19283 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 121, 21), 'n')
    # Applying the binary operator '<' (line 121)
    result_lt_19284 = python_operator(stypy.reporting.localization.Localization(__file__, 121, 15), '<', result_mul_19282, n_19283)
    
    # Testing the type of an if condition (line 121)
    if_condition_19285 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 121, 12), result_lt_19284)
    # Assigning a type to the variable 'if_condition_19285' (line 121)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 121, 12), 'if_condition_19285', if_condition_19285)
    # SSA begins for if statement (line 121)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Subscript (line 122):
    
    # Obtaining the type of the subscript
    int_19286 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 122, 26), 'int')
    # Getting the type of 'i' (line 122)
    i_19287 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 122, 28), 'i')
    # Applying the binary operator '*' (line 122)
    result_mul_19288 = python_operator(stypy.reporting.localization.Localization(__file__, 122, 26), '*', int_19286, i_19287)
    
    int_19289 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 122, 30), 'int')
    # Applying the binary operator '-' (line 122)
    result_sub_19290 = python_operator(stypy.reporting.localization.Localization(__file__, 122, 26), '-', result_mul_19288, int_19289)
    
    # Getting the type of 'x' (line 122)
    x_19291 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 122, 24), 'x')
    # Obtaining the member '__getitem__' of a type (line 122)
    getitem___19292 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 122, 24), x_19291, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 122)
    subscript_call_result_19293 = invoke(stypy.reporting.localization.Localization(__file__, 122, 24), getitem___19292, result_sub_19290)
    
    complex_19294 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 122, 35), 'complex')
    
    # Obtaining the type of the subscript
    int_19295 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 122, 40), 'int')
    # Getting the type of 'i' (line 122)
    i_19296 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 122, 42), 'i')
    # Applying the binary operator '*' (line 122)
    result_mul_19297 = python_operator(stypy.reporting.localization.Localization(__file__, 122, 40), '*', int_19295, i_19296)
    
    # Getting the type of 'x' (line 122)
    x_19298 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 122, 38), 'x')
    # Obtaining the member '__getitem__' of a type (line 122)
    getitem___19299 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 122, 38), x_19298, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 122)
    subscript_call_result_19300 = invoke(stypy.reporting.localization.Localization(__file__, 122, 38), getitem___19299, result_mul_19297)
    
    # Applying the binary operator '*' (line 122)
    result_mul_19301 = python_operator(stypy.reporting.localization.Localization(__file__, 122, 35), '*', complex_19294, subscript_call_result_19300)
    
    # Applying the binary operator '+' (line 122)
    result_add_19302 = python_operator(stypy.reporting.localization.Localization(__file__, 122, 24), '+', subscript_call_result_19293, result_mul_19301)
    
    # Getting the type of 'x1' (line 122)
    x1_19303 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 122, 16), 'x1')
    # Getting the type of 'i' (line 122)
    i_19304 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 122, 19), 'i')
    # Storing an element on a container (line 122)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 122, 16), x1_19303, (i_19304, result_add_19302))
    
    # Assigning a BinOp to a Subscript (line 123):
    
    # Obtaining the type of the subscript
    int_19305 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 123, 28), 'int')
    # Getting the type of 'i' (line 123)
    i_19306 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 123, 30), 'i')
    # Applying the binary operator '*' (line 123)
    result_mul_19307 = python_operator(stypy.reporting.localization.Localization(__file__, 123, 28), '*', int_19305, i_19306)
    
    int_19308 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 123, 32), 'int')
    # Applying the binary operator '-' (line 123)
    result_sub_19309 = python_operator(stypy.reporting.localization.Localization(__file__, 123, 28), '-', result_mul_19307, int_19308)
    
    # Getting the type of 'x' (line 123)
    x_19310 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 123, 26), 'x')
    # Obtaining the member '__getitem__' of a type (line 123)
    getitem___19311 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 123, 26), x_19310, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 123)
    subscript_call_result_19312 = invoke(stypy.reporting.localization.Localization(__file__, 123, 26), getitem___19311, result_sub_19309)
    
    complex_19313 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 123, 37), 'complex')
    
    # Obtaining the type of the subscript
    int_19314 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 123, 42), 'int')
    # Getting the type of 'i' (line 123)
    i_19315 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 123, 44), 'i')
    # Applying the binary operator '*' (line 123)
    result_mul_19316 = python_operator(stypy.reporting.localization.Localization(__file__, 123, 42), '*', int_19314, i_19315)
    
    # Getting the type of 'x' (line 123)
    x_19317 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 123, 40), 'x')
    # Obtaining the member '__getitem__' of a type (line 123)
    getitem___19318 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 123, 40), x_19317, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 123)
    subscript_call_result_19319 = invoke(stypy.reporting.localization.Localization(__file__, 123, 40), getitem___19318, result_mul_19316)
    
    # Applying the binary operator '*' (line 123)
    result_mul_19320 = python_operator(stypy.reporting.localization.Localization(__file__, 123, 37), '*', complex_19313, subscript_call_result_19319)
    
    # Applying the binary operator '-' (line 123)
    result_sub_19321 = python_operator(stypy.reporting.localization.Localization(__file__, 123, 26), '-', subscript_call_result_19312, result_mul_19320)
    
    # Getting the type of 'x1' (line 123)
    x1_19322 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 123, 16), 'x1')
    # Getting the type of 'n' (line 123)
    n_19323 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 123, 19), 'n')
    # Getting the type of 'i' (line 123)
    i_19324 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 123, 21), 'i')
    # Applying the binary operator '-' (line 123)
    result_sub_19325 = python_operator(stypy.reporting.localization.Localization(__file__, 123, 19), '-', n_19323, i_19324)
    
    # Storing an element on a container (line 123)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 123, 16), x1_19322, (result_sub_19325, result_sub_19321))
    # SSA branch for the else part of an if statement (line 121)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a Subscript to a Subscript (line 125):
    
    # Obtaining the type of the subscript
    int_19326 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 125, 26), 'int')
    # Getting the type of 'i' (line 125)
    i_19327 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 125, 28), 'i')
    # Applying the binary operator '*' (line 125)
    result_mul_19328 = python_operator(stypy.reporting.localization.Localization(__file__, 125, 26), '*', int_19326, i_19327)
    
    int_19329 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 125, 30), 'int')
    # Applying the binary operator '-' (line 125)
    result_sub_19330 = python_operator(stypy.reporting.localization.Localization(__file__, 125, 26), '-', result_mul_19328, int_19329)
    
    # Getting the type of 'x' (line 125)
    x_19331 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 125, 24), 'x')
    # Obtaining the member '__getitem__' of a type (line 125)
    getitem___19332 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 125, 24), x_19331, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 125)
    subscript_call_result_19333 = invoke(stypy.reporting.localization.Localization(__file__, 125, 24), getitem___19332, result_sub_19330)
    
    # Getting the type of 'x1' (line 125)
    x1_19334 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 125, 16), 'x1')
    # Getting the type of 'i' (line 125)
    i_19335 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 125, 19), 'i')
    # Storing an element on a container (line 125)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 125, 16), x1_19334, (i_19335, subscript_call_result_19333))
    # SSA join for if statement (line 121)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else part of an if statement (line 120)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a Subscript to a Subscript (line 127):
    
    # Obtaining the type of the subscript
    int_19336 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 127, 22), 'int')
    # Getting the type of 'x' (line 127)
    x_19337 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 127, 20), 'x')
    # Obtaining the member '__getitem__' of a type (line 127)
    getitem___19338 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 127, 20), x_19337, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 127)
    subscript_call_result_19339 = invoke(stypy.reporting.localization.Localization(__file__, 127, 20), getitem___19338, int_19336)
    
    # Getting the type of 'x1' (line 127)
    x1_19340 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 127, 12), 'x1')
    int_19341 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 127, 15), 'int')
    # Storing an element on a container (line 127)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 127, 12), x1_19340, (int_19341, subscript_call_result_19339))
    # SSA join for if statement (line 120)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Call to direct_idft(...): (line 128)
    # Processing the call arguments (line 128)
    # Getting the type of 'x1' (line 128)
    x1_19343 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 128, 23), 'x1', False)
    # Processing the call keyword arguments (line 128)
    kwargs_19344 = {}
    # Getting the type of 'direct_idft' (line 128)
    direct_idft_19342 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 128, 11), 'direct_idft', False)
    # Calling direct_idft(args, kwargs) (line 128)
    direct_idft_call_result_19345 = invoke(stypy.reporting.localization.Localization(__file__, 128, 11), direct_idft_19342, *[x1_19343], **kwargs_19344)
    
    # Obtaining the member 'real' of a type (line 128)
    real_19346 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 128, 11), direct_idft_call_result_19345, 'real')
    # Assigning a type to the variable 'stypy_return_type' (line 128)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 128, 4), 'stypy_return_type', real_19346)
    
    # ################# End of 'direct_irdft(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'direct_irdft' in the type store
    # Getting the type of 'stypy_return_type' (line 115)
    stypy_return_type_19347 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 115, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_19347)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'direct_irdft'
    return stypy_return_type_19347

# Assigning a type to the variable 'direct_irdft' (line 115)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 115, 0), 'direct_irdft', direct_irdft)
# Declaration of the '_TestFFTBase' class

class _TestFFTBase(object, ):

    @norecursion
    def setup_method(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'setup_method'
        module_type_store = module_type_store.open_function_context('setup_method', 132, 4, False)
        # Assigning a type to the variable 'self' (line 133)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 133, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        _TestFFTBase.setup_method.__dict__.__setitem__('stypy_localization', localization)
        _TestFFTBase.setup_method.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        _TestFFTBase.setup_method.__dict__.__setitem__('stypy_type_store', module_type_store)
        _TestFFTBase.setup_method.__dict__.__setitem__('stypy_function_name', '_TestFFTBase.setup_method')
        _TestFFTBase.setup_method.__dict__.__setitem__('stypy_param_names_list', [])
        _TestFFTBase.setup_method.__dict__.__setitem__('stypy_varargs_param_name', None)
        _TestFFTBase.setup_method.__dict__.__setitem__('stypy_kwargs_param_name', None)
        _TestFFTBase.setup_method.__dict__.__setitem__('stypy_call_defaults', defaults)
        _TestFFTBase.setup_method.__dict__.__setitem__('stypy_call_varargs', varargs)
        _TestFFTBase.setup_method.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        _TestFFTBase.setup_method.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, '_TestFFTBase.setup_method', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'setup_method', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'setup_method(...)' code ##################

        
        # Assigning a Name to a Attribute (line 133):
        # Getting the type of 'None' (line 133)
        None_19348 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 133, 19), 'None')
        # Getting the type of 'self' (line 133)
        self_19349 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 133, 8), 'self')
        # Setting the type of the member 'cdt' of a type (line 133)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 133, 8), self_19349, 'cdt', None_19348)
        
        # Assigning a Name to a Attribute (line 134):
        # Getting the type of 'None' (line 134)
        None_19350 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 134, 19), 'None')
        # Getting the type of 'self' (line 134)
        self_19351 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 134, 8), 'self')
        # Setting the type of the member 'rdt' of a type (line 134)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 134, 8), self_19351, 'rdt', None_19350)
        
        # Call to seed(...): (line 135)
        # Processing the call arguments (line 135)
        int_19355 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 135, 23), 'int')
        # Processing the call keyword arguments (line 135)
        kwargs_19356 = {}
        # Getting the type of 'np' (line 135)
        np_19352 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 135, 8), 'np', False)
        # Obtaining the member 'random' of a type (line 135)
        random_19353 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 135, 8), np_19352, 'random')
        # Obtaining the member 'seed' of a type (line 135)
        seed_19354 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 135, 8), random_19353, 'seed')
        # Calling seed(args, kwargs) (line 135)
        seed_call_result_19357 = invoke(stypy.reporting.localization.Localization(__file__, 135, 8), seed_19354, *[int_19355], **kwargs_19356)
        
        
        # ################# End of 'setup_method(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'setup_method' in the type store
        # Getting the type of 'stypy_return_type' (line 132)
        stypy_return_type_19358 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 132, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_19358)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'setup_method'
        return stypy_return_type_19358


    @norecursion
    def test_definition(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_definition'
        module_type_store = module_type_store.open_function_context('test_definition', 137, 4, False)
        # Assigning a type to the variable 'self' (line 138)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 138, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        _TestFFTBase.test_definition.__dict__.__setitem__('stypy_localization', localization)
        _TestFFTBase.test_definition.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        _TestFFTBase.test_definition.__dict__.__setitem__('stypy_type_store', module_type_store)
        _TestFFTBase.test_definition.__dict__.__setitem__('stypy_function_name', '_TestFFTBase.test_definition')
        _TestFFTBase.test_definition.__dict__.__setitem__('stypy_param_names_list', [])
        _TestFFTBase.test_definition.__dict__.__setitem__('stypy_varargs_param_name', None)
        _TestFFTBase.test_definition.__dict__.__setitem__('stypy_kwargs_param_name', None)
        _TestFFTBase.test_definition.__dict__.__setitem__('stypy_call_defaults', defaults)
        _TestFFTBase.test_definition.__dict__.__setitem__('stypy_call_varargs', varargs)
        _TestFFTBase.test_definition.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        _TestFFTBase.test_definition.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, '_TestFFTBase.test_definition', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_definition', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_definition(...)' code ##################

        
        # Assigning a Call to a Name (line 138):
        
        # Call to array(...): (line 138)
        # Processing the call arguments (line 138)
        
        # Obtaining an instance of the builtin type 'list' (line 138)
        list_19361 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 138, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 138)
        # Adding element type (line 138)
        int_19362 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 138, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 138, 21), list_19361, int_19362)
        # Adding element type (line 138)
        int_19363 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 138, 24), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 138, 21), list_19361, int_19363)
        # Adding element type (line 138)
        int_19364 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 138, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 138, 21), list_19361, int_19364)
        # Adding element type (line 138)
        int_19365 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 138, 28), 'int')
        complex_19366 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 138, 30), 'complex')
        # Applying the binary operator '+' (line 138)
        result_add_19367 = python_operator(stypy.reporting.localization.Localization(__file__, 138, 28), '+', int_19365, complex_19366)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 138, 21), list_19361, result_add_19367)
        # Adding element type (line 138)
        int_19368 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 138, 33), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 138, 21), list_19361, int_19368)
        # Adding element type (line 138)
        int_19369 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 138, 35), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 138, 21), list_19361, int_19369)
        # Adding element type (line 138)
        int_19370 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 138, 37), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 138, 21), list_19361, int_19370)
        # Adding element type (line 138)
        int_19371 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 138, 39), 'int')
        complex_19372 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 138, 41), 'complex')
        # Applying the binary operator '+' (line 138)
        result_add_19373 = python_operator(stypy.reporting.localization.Localization(__file__, 138, 39), '+', int_19371, complex_19372)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 138, 21), list_19361, result_add_19373)
        
        # Processing the call keyword arguments (line 138)
        # Getting the type of 'self' (line 138)
        self_19374 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 138, 52), 'self', False)
        # Obtaining the member 'cdt' of a type (line 138)
        cdt_19375 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 138, 52), self_19374, 'cdt')
        keyword_19376 = cdt_19375
        kwargs_19377 = {'dtype': keyword_19376}
        # Getting the type of 'np' (line 138)
        np_19359 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 138, 12), 'np', False)
        # Obtaining the member 'array' of a type (line 138)
        array_19360 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 138, 12), np_19359, 'array')
        # Calling array(args, kwargs) (line 138)
        array_call_result_19378 = invoke(stypy.reporting.localization.Localization(__file__, 138, 12), array_19360, *[list_19361], **kwargs_19377)
        
        # Assigning a type to the variable 'x' (line 138)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 138, 8), 'x', array_call_result_19378)
        
        # Assigning a Call to a Name (line 139):
        
        # Call to fft(...): (line 139)
        # Processing the call arguments (line 139)
        # Getting the type of 'x' (line 139)
        x_19380 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 139, 16), 'x', False)
        # Processing the call keyword arguments (line 139)
        kwargs_19381 = {}
        # Getting the type of 'fft' (line 139)
        fft_19379 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 139, 12), 'fft', False)
        # Calling fft(args, kwargs) (line 139)
        fft_call_result_19382 = invoke(stypy.reporting.localization.Localization(__file__, 139, 12), fft_19379, *[x_19380], **kwargs_19381)
        
        # Assigning a type to the variable 'y' (line 139)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 139, 8), 'y', fft_call_result_19382)
        
        # Call to assert_equal(...): (line 140)
        # Processing the call arguments (line 140)
        # Getting the type of 'y' (line 140)
        y_19384 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 140, 21), 'y', False)
        # Obtaining the member 'dtype' of a type (line 140)
        dtype_19385 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 140, 21), y_19384, 'dtype')
        # Getting the type of 'self' (line 140)
        self_19386 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 140, 30), 'self', False)
        # Obtaining the member 'cdt' of a type (line 140)
        cdt_19387 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 140, 30), self_19386, 'cdt')
        # Processing the call keyword arguments (line 140)
        kwargs_19388 = {}
        # Getting the type of 'assert_equal' (line 140)
        assert_equal_19383 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 140, 8), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 140)
        assert_equal_call_result_19389 = invoke(stypy.reporting.localization.Localization(__file__, 140, 8), assert_equal_19383, *[dtype_19385, cdt_19387], **kwargs_19388)
        
        
        # Assigning a Call to a Name (line 141):
        
        # Call to direct_dft(...): (line 141)
        # Processing the call arguments (line 141)
        # Getting the type of 'x' (line 141)
        x_19391 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 141, 24), 'x', False)
        # Processing the call keyword arguments (line 141)
        kwargs_19392 = {}
        # Getting the type of 'direct_dft' (line 141)
        direct_dft_19390 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 141, 13), 'direct_dft', False)
        # Calling direct_dft(args, kwargs) (line 141)
        direct_dft_call_result_19393 = invoke(stypy.reporting.localization.Localization(__file__, 141, 13), direct_dft_19390, *[x_19391], **kwargs_19392)
        
        # Assigning a type to the variable 'y1' (line 141)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 141, 8), 'y1', direct_dft_call_result_19393)
        
        # Call to assert_array_almost_equal(...): (line 142)
        # Processing the call arguments (line 142)
        # Getting the type of 'y' (line 142)
        y_19395 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 142, 34), 'y', False)
        # Getting the type of 'y1' (line 142)
        y1_19396 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 142, 36), 'y1', False)
        # Processing the call keyword arguments (line 142)
        kwargs_19397 = {}
        # Getting the type of 'assert_array_almost_equal' (line 142)
        assert_array_almost_equal_19394 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 142, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 142)
        assert_array_almost_equal_call_result_19398 = invoke(stypy.reporting.localization.Localization(__file__, 142, 8), assert_array_almost_equal_19394, *[y_19395, y1_19396], **kwargs_19397)
        
        
        # Assigning a Call to a Name (line 143):
        
        # Call to array(...): (line 143)
        # Processing the call arguments (line 143)
        
        # Obtaining an instance of the builtin type 'list' (line 143)
        list_19401 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 143, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 143)
        # Adding element type (line 143)
        int_19402 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 143, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 143, 21), list_19401, int_19402)
        # Adding element type (line 143)
        int_19403 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 143, 24), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 143, 21), list_19401, int_19403)
        # Adding element type (line 143)
        int_19404 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 143, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 143, 21), list_19401, int_19404)
        # Adding element type (line 143)
        int_19405 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 143, 28), 'int')
        complex_19406 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 143, 30), 'complex')
        # Applying the binary operator '+' (line 143)
        result_add_19407 = python_operator(stypy.reporting.localization.Localization(__file__, 143, 28), '+', int_19405, complex_19406)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 143, 21), list_19401, result_add_19407)
        # Adding element type (line 143)
        int_19408 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 143, 33), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 143, 21), list_19401, int_19408)
        
        # Processing the call keyword arguments (line 143)
        # Getting the type of 'self' (line 143)
        self_19409 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 143, 43), 'self', False)
        # Obtaining the member 'cdt' of a type (line 143)
        cdt_19410 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 143, 43), self_19409, 'cdt')
        keyword_19411 = cdt_19410
        kwargs_19412 = {'dtype': keyword_19411}
        # Getting the type of 'np' (line 143)
        np_19399 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 143, 12), 'np', False)
        # Obtaining the member 'array' of a type (line 143)
        array_19400 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 143, 12), np_19399, 'array')
        # Calling array(args, kwargs) (line 143)
        array_call_result_19413 = invoke(stypy.reporting.localization.Localization(__file__, 143, 12), array_19400, *[list_19401], **kwargs_19412)
        
        # Assigning a type to the variable 'x' (line 143)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 143, 8), 'x', array_call_result_19413)
        
        # Call to assert_array_almost_equal(...): (line 144)
        # Processing the call arguments (line 144)
        
        # Call to fft(...): (line 144)
        # Processing the call arguments (line 144)
        # Getting the type of 'x' (line 144)
        x_19416 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 144, 38), 'x', False)
        # Processing the call keyword arguments (line 144)
        kwargs_19417 = {}
        # Getting the type of 'fft' (line 144)
        fft_19415 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 144, 34), 'fft', False)
        # Calling fft(args, kwargs) (line 144)
        fft_call_result_19418 = invoke(stypy.reporting.localization.Localization(__file__, 144, 34), fft_19415, *[x_19416], **kwargs_19417)
        
        
        # Call to direct_dft(...): (line 144)
        # Processing the call arguments (line 144)
        # Getting the type of 'x' (line 144)
        x_19420 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 144, 52), 'x', False)
        # Processing the call keyword arguments (line 144)
        kwargs_19421 = {}
        # Getting the type of 'direct_dft' (line 144)
        direct_dft_19419 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 144, 41), 'direct_dft', False)
        # Calling direct_dft(args, kwargs) (line 144)
        direct_dft_call_result_19422 = invoke(stypy.reporting.localization.Localization(__file__, 144, 41), direct_dft_19419, *[x_19420], **kwargs_19421)
        
        # Processing the call keyword arguments (line 144)
        kwargs_19423 = {}
        # Getting the type of 'assert_array_almost_equal' (line 144)
        assert_array_almost_equal_19414 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 144, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 144)
        assert_array_almost_equal_call_result_19424 = invoke(stypy.reporting.localization.Localization(__file__, 144, 8), assert_array_almost_equal_19414, *[fft_call_result_19418, direct_dft_call_result_19422], **kwargs_19423)
        
        
        # ################# End of 'test_definition(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_definition' in the type store
        # Getting the type of 'stypy_return_type' (line 137)
        stypy_return_type_19425 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 137, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_19425)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_definition'
        return stypy_return_type_19425


    @norecursion
    def test_n_argument_real(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_n_argument_real'
        module_type_store = module_type_store.open_function_context('test_n_argument_real', 146, 4, False)
        # Assigning a type to the variable 'self' (line 147)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 147, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        _TestFFTBase.test_n_argument_real.__dict__.__setitem__('stypy_localization', localization)
        _TestFFTBase.test_n_argument_real.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        _TestFFTBase.test_n_argument_real.__dict__.__setitem__('stypy_type_store', module_type_store)
        _TestFFTBase.test_n_argument_real.__dict__.__setitem__('stypy_function_name', '_TestFFTBase.test_n_argument_real')
        _TestFFTBase.test_n_argument_real.__dict__.__setitem__('stypy_param_names_list', [])
        _TestFFTBase.test_n_argument_real.__dict__.__setitem__('stypy_varargs_param_name', None)
        _TestFFTBase.test_n_argument_real.__dict__.__setitem__('stypy_kwargs_param_name', None)
        _TestFFTBase.test_n_argument_real.__dict__.__setitem__('stypy_call_defaults', defaults)
        _TestFFTBase.test_n_argument_real.__dict__.__setitem__('stypy_call_varargs', varargs)
        _TestFFTBase.test_n_argument_real.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        _TestFFTBase.test_n_argument_real.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, '_TestFFTBase.test_n_argument_real', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_n_argument_real', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_n_argument_real(...)' code ##################

        
        # Assigning a Call to a Name (line 147):
        
        # Call to array(...): (line 147)
        # Processing the call arguments (line 147)
        
        # Obtaining an instance of the builtin type 'list' (line 147)
        list_19428 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 147, 22), 'list')
        # Adding type elements to the builtin type 'list' instance (line 147)
        # Adding element type (line 147)
        int_19429 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 147, 23), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 147, 22), list_19428, int_19429)
        # Adding element type (line 147)
        int_19430 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 147, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 147, 22), list_19428, int_19430)
        # Adding element type (line 147)
        int_19431 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 147, 27), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 147, 22), list_19428, int_19431)
        # Adding element type (line 147)
        int_19432 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 147, 29), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 147, 22), list_19428, int_19432)
        
        # Processing the call keyword arguments (line 147)
        # Getting the type of 'self' (line 147)
        self_19433 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 147, 39), 'self', False)
        # Obtaining the member 'rdt' of a type (line 147)
        rdt_19434 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 147, 39), self_19433, 'rdt')
        keyword_19435 = rdt_19434
        kwargs_19436 = {'dtype': keyword_19435}
        # Getting the type of 'np' (line 147)
        np_19426 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 147, 13), 'np', False)
        # Obtaining the member 'array' of a type (line 147)
        array_19427 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 147, 13), np_19426, 'array')
        # Calling array(args, kwargs) (line 147)
        array_call_result_19437 = invoke(stypy.reporting.localization.Localization(__file__, 147, 13), array_19427, *[list_19428], **kwargs_19436)
        
        # Assigning a type to the variable 'x1' (line 147)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 147, 8), 'x1', array_call_result_19437)
        
        # Assigning a Call to a Name (line 148):
        
        # Call to array(...): (line 148)
        # Processing the call arguments (line 148)
        
        # Obtaining an instance of the builtin type 'list' (line 148)
        list_19440 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 148, 22), 'list')
        # Adding type elements to the builtin type 'list' instance (line 148)
        # Adding element type (line 148)
        int_19441 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 148, 23), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 148, 22), list_19440, int_19441)
        # Adding element type (line 148)
        int_19442 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 148, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 148, 22), list_19440, int_19442)
        # Adding element type (line 148)
        int_19443 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 148, 27), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 148, 22), list_19440, int_19443)
        # Adding element type (line 148)
        int_19444 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 148, 29), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 148, 22), list_19440, int_19444)
        
        # Processing the call keyword arguments (line 148)
        # Getting the type of 'self' (line 148)
        self_19445 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 148, 39), 'self', False)
        # Obtaining the member 'rdt' of a type (line 148)
        rdt_19446 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 148, 39), self_19445, 'rdt')
        keyword_19447 = rdt_19446
        kwargs_19448 = {'dtype': keyword_19447}
        # Getting the type of 'np' (line 148)
        np_19438 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 148, 13), 'np', False)
        # Obtaining the member 'array' of a type (line 148)
        array_19439 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 148, 13), np_19438, 'array')
        # Calling array(args, kwargs) (line 148)
        array_call_result_19449 = invoke(stypy.reporting.localization.Localization(__file__, 148, 13), array_19439, *[list_19440], **kwargs_19448)
        
        # Assigning a type to the variable 'x2' (line 148)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 148, 8), 'x2', array_call_result_19449)
        
        # Assigning a Call to a Name (line 149):
        
        # Call to fft(...): (line 149)
        # Processing the call arguments (line 149)
        
        # Obtaining an instance of the builtin type 'list' (line 149)
        list_19451 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 149, 16), 'list')
        # Adding type elements to the builtin type 'list' instance (line 149)
        # Adding element type (line 149)
        # Getting the type of 'x1' (line 149)
        x1_19452 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 149, 17), 'x1', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 149, 16), list_19451, x1_19452)
        # Adding element type (line 149)
        # Getting the type of 'x2' (line 149)
        x2_19453 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 149, 20), 'x2', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 149, 16), list_19451, x2_19453)
        
        # Processing the call keyword arguments (line 149)
        int_19454 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 149, 26), 'int')
        keyword_19455 = int_19454
        kwargs_19456 = {'n': keyword_19455}
        # Getting the type of 'fft' (line 149)
        fft_19450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 149, 12), 'fft', False)
        # Calling fft(args, kwargs) (line 149)
        fft_call_result_19457 = invoke(stypy.reporting.localization.Localization(__file__, 149, 12), fft_19450, *[list_19451], **kwargs_19456)
        
        # Assigning a type to the variable 'y' (line 149)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 149, 8), 'y', fft_call_result_19457)
        
        # Call to assert_equal(...): (line 150)
        # Processing the call arguments (line 150)
        # Getting the type of 'y' (line 150)
        y_19459 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 150, 21), 'y', False)
        # Obtaining the member 'dtype' of a type (line 150)
        dtype_19460 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 150, 21), y_19459, 'dtype')
        # Getting the type of 'self' (line 150)
        self_19461 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 150, 30), 'self', False)
        # Obtaining the member 'cdt' of a type (line 150)
        cdt_19462 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 150, 30), self_19461, 'cdt')
        # Processing the call keyword arguments (line 150)
        kwargs_19463 = {}
        # Getting the type of 'assert_equal' (line 150)
        assert_equal_19458 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 150, 8), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 150)
        assert_equal_call_result_19464 = invoke(stypy.reporting.localization.Localization(__file__, 150, 8), assert_equal_19458, *[dtype_19460, cdt_19462], **kwargs_19463)
        
        
        # Call to assert_equal(...): (line 151)
        # Processing the call arguments (line 151)
        # Getting the type of 'y' (line 151)
        y_19466 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 151, 21), 'y', False)
        # Obtaining the member 'shape' of a type (line 151)
        shape_19467 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 151, 21), y_19466, 'shape')
        
        # Obtaining an instance of the builtin type 'tuple' (line 151)
        tuple_19468 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 151, 30), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 151)
        # Adding element type (line 151)
        int_19469 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 151, 30), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 151, 30), tuple_19468, int_19469)
        # Adding element type (line 151)
        int_19470 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 151, 32), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 151, 30), tuple_19468, int_19470)
        
        # Processing the call keyword arguments (line 151)
        kwargs_19471 = {}
        # Getting the type of 'assert_equal' (line 151)
        assert_equal_19465 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 151, 8), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 151)
        assert_equal_call_result_19472 = invoke(stypy.reporting.localization.Localization(__file__, 151, 8), assert_equal_19465, *[shape_19467, tuple_19468], **kwargs_19471)
        
        
        # Call to assert_array_almost_equal(...): (line 152)
        # Processing the call arguments (line 152)
        
        # Obtaining the type of the subscript
        int_19474 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 152, 36), 'int')
        # Getting the type of 'y' (line 152)
        y_19475 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 152, 34), 'y', False)
        # Obtaining the member '__getitem__' of a type (line 152)
        getitem___19476 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 152, 34), y_19475, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 152)
        subscript_call_result_19477 = invoke(stypy.reporting.localization.Localization(__file__, 152, 34), getitem___19476, int_19474)
        
        
        # Call to direct_dft(...): (line 152)
        # Processing the call arguments (line 152)
        # Getting the type of 'x1' (line 152)
        x1_19479 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 152, 50), 'x1', False)
        # Processing the call keyword arguments (line 152)
        kwargs_19480 = {}
        # Getting the type of 'direct_dft' (line 152)
        direct_dft_19478 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 152, 39), 'direct_dft', False)
        # Calling direct_dft(args, kwargs) (line 152)
        direct_dft_call_result_19481 = invoke(stypy.reporting.localization.Localization(__file__, 152, 39), direct_dft_19478, *[x1_19479], **kwargs_19480)
        
        # Processing the call keyword arguments (line 152)
        kwargs_19482 = {}
        # Getting the type of 'assert_array_almost_equal' (line 152)
        assert_array_almost_equal_19473 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 152, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 152)
        assert_array_almost_equal_call_result_19483 = invoke(stypy.reporting.localization.Localization(__file__, 152, 8), assert_array_almost_equal_19473, *[subscript_call_result_19477, direct_dft_call_result_19481], **kwargs_19482)
        
        
        # Call to assert_array_almost_equal(...): (line 153)
        # Processing the call arguments (line 153)
        
        # Obtaining the type of the subscript
        int_19485 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 153, 36), 'int')
        # Getting the type of 'y' (line 153)
        y_19486 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 153, 34), 'y', False)
        # Obtaining the member '__getitem__' of a type (line 153)
        getitem___19487 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 153, 34), y_19486, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 153)
        subscript_call_result_19488 = invoke(stypy.reporting.localization.Localization(__file__, 153, 34), getitem___19487, int_19485)
        
        
        # Call to direct_dft(...): (line 153)
        # Processing the call arguments (line 153)
        # Getting the type of 'x2' (line 153)
        x2_19490 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 153, 50), 'x2', False)
        # Processing the call keyword arguments (line 153)
        kwargs_19491 = {}
        # Getting the type of 'direct_dft' (line 153)
        direct_dft_19489 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 153, 39), 'direct_dft', False)
        # Calling direct_dft(args, kwargs) (line 153)
        direct_dft_call_result_19492 = invoke(stypy.reporting.localization.Localization(__file__, 153, 39), direct_dft_19489, *[x2_19490], **kwargs_19491)
        
        # Processing the call keyword arguments (line 153)
        kwargs_19493 = {}
        # Getting the type of 'assert_array_almost_equal' (line 153)
        assert_array_almost_equal_19484 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 153, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 153)
        assert_array_almost_equal_call_result_19494 = invoke(stypy.reporting.localization.Localization(__file__, 153, 8), assert_array_almost_equal_19484, *[subscript_call_result_19488, direct_dft_call_result_19492], **kwargs_19493)
        
        
        # ################# End of 'test_n_argument_real(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_n_argument_real' in the type store
        # Getting the type of 'stypy_return_type' (line 146)
        stypy_return_type_19495 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 146, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_19495)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_n_argument_real'
        return stypy_return_type_19495


    @norecursion
    def _test_n_argument_complex(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_test_n_argument_complex'
        module_type_store = module_type_store.open_function_context('_test_n_argument_complex', 155, 4, False)
        # Assigning a type to the variable 'self' (line 156)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 156, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        _TestFFTBase._test_n_argument_complex.__dict__.__setitem__('stypy_localization', localization)
        _TestFFTBase._test_n_argument_complex.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        _TestFFTBase._test_n_argument_complex.__dict__.__setitem__('stypy_type_store', module_type_store)
        _TestFFTBase._test_n_argument_complex.__dict__.__setitem__('stypy_function_name', '_TestFFTBase._test_n_argument_complex')
        _TestFFTBase._test_n_argument_complex.__dict__.__setitem__('stypy_param_names_list', [])
        _TestFFTBase._test_n_argument_complex.__dict__.__setitem__('stypy_varargs_param_name', None)
        _TestFFTBase._test_n_argument_complex.__dict__.__setitem__('stypy_kwargs_param_name', None)
        _TestFFTBase._test_n_argument_complex.__dict__.__setitem__('stypy_call_defaults', defaults)
        _TestFFTBase._test_n_argument_complex.__dict__.__setitem__('stypy_call_varargs', varargs)
        _TestFFTBase._test_n_argument_complex.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        _TestFFTBase._test_n_argument_complex.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, '_TestFFTBase._test_n_argument_complex', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_test_n_argument_complex', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_test_n_argument_complex(...)' code ##################

        
        # Assigning a Call to a Name (line 156):
        
        # Call to array(...): (line 156)
        # Processing the call arguments (line 156)
        
        # Obtaining an instance of the builtin type 'list' (line 156)
        list_19498 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 156, 22), 'list')
        # Adding type elements to the builtin type 'list' instance (line 156)
        # Adding element type (line 156)
        int_19499 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 156, 23), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 156, 22), list_19498, int_19499)
        # Adding element type (line 156)
        int_19500 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 156, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 156, 22), list_19498, int_19500)
        # Adding element type (line 156)
        int_19501 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 156, 27), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 156, 22), list_19498, int_19501)
        # Adding element type (line 156)
        int_19502 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 156, 29), 'int')
        complex_19503 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 156, 31), 'complex')
        # Applying the binary operator '+' (line 156)
        result_add_19504 = python_operator(stypy.reporting.localization.Localization(__file__, 156, 29), '+', int_19502, complex_19503)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 156, 22), list_19498, result_add_19504)
        
        # Processing the call keyword arguments (line 156)
        # Getting the type of 'self' (line 156)
        self_19505 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 156, 42), 'self', False)
        # Obtaining the member 'cdt' of a type (line 156)
        cdt_19506 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 156, 42), self_19505, 'cdt')
        keyword_19507 = cdt_19506
        kwargs_19508 = {'dtype': keyword_19507}
        # Getting the type of 'np' (line 156)
        np_19496 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 156, 13), 'np', False)
        # Obtaining the member 'array' of a type (line 156)
        array_19497 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 156, 13), np_19496, 'array')
        # Calling array(args, kwargs) (line 156)
        array_call_result_19509 = invoke(stypy.reporting.localization.Localization(__file__, 156, 13), array_19497, *[list_19498], **kwargs_19508)
        
        # Assigning a type to the variable 'x1' (line 156)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 156, 8), 'x1', array_call_result_19509)
        
        # Assigning a Call to a Name (line 157):
        
        # Call to array(...): (line 157)
        # Processing the call arguments (line 157)
        
        # Obtaining an instance of the builtin type 'list' (line 157)
        list_19512 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 157, 22), 'list')
        # Adding type elements to the builtin type 'list' instance (line 157)
        # Adding element type (line 157)
        int_19513 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 157, 23), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 157, 22), list_19512, int_19513)
        # Adding element type (line 157)
        int_19514 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 157, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 157, 22), list_19512, int_19514)
        # Adding element type (line 157)
        int_19515 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 157, 27), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 157, 22), list_19512, int_19515)
        # Adding element type (line 157)
        int_19516 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 157, 29), 'int')
        complex_19517 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 157, 31), 'complex')
        # Applying the binary operator '+' (line 157)
        result_add_19518 = python_operator(stypy.reporting.localization.Localization(__file__, 157, 29), '+', int_19516, complex_19517)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 157, 22), list_19512, result_add_19518)
        
        # Processing the call keyword arguments (line 157)
        # Getting the type of 'self' (line 157)
        self_19519 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 157, 42), 'self', False)
        # Obtaining the member 'cdt' of a type (line 157)
        cdt_19520 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 157, 42), self_19519, 'cdt')
        keyword_19521 = cdt_19520
        kwargs_19522 = {'dtype': keyword_19521}
        # Getting the type of 'np' (line 157)
        np_19510 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 157, 13), 'np', False)
        # Obtaining the member 'array' of a type (line 157)
        array_19511 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 157, 13), np_19510, 'array')
        # Calling array(args, kwargs) (line 157)
        array_call_result_19523 = invoke(stypy.reporting.localization.Localization(__file__, 157, 13), array_19511, *[list_19512], **kwargs_19522)
        
        # Assigning a type to the variable 'x2' (line 157)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 157, 8), 'x2', array_call_result_19523)
        
        # Assigning a Call to a Name (line 158):
        
        # Call to fft(...): (line 158)
        # Processing the call arguments (line 158)
        
        # Obtaining an instance of the builtin type 'list' (line 158)
        list_19525 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 158, 16), 'list')
        # Adding type elements to the builtin type 'list' instance (line 158)
        # Adding element type (line 158)
        # Getting the type of 'x1' (line 158)
        x1_19526 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 158, 17), 'x1', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 158, 16), list_19525, x1_19526)
        # Adding element type (line 158)
        # Getting the type of 'x2' (line 158)
        x2_19527 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 158, 20), 'x2', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 158, 16), list_19525, x2_19527)
        
        # Processing the call keyword arguments (line 158)
        int_19528 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 158, 26), 'int')
        keyword_19529 = int_19528
        kwargs_19530 = {'n': keyword_19529}
        # Getting the type of 'fft' (line 158)
        fft_19524 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 158, 12), 'fft', False)
        # Calling fft(args, kwargs) (line 158)
        fft_call_result_19531 = invoke(stypy.reporting.localization.Localization(__file__, 158, 12), fft_19524, *[list_19525], **kwargs_19530)
        
        # Assigning a type to the variable 'y' (line 158)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 158, 8), 'y', fft_call_result_19531)
        
        # Call to assert_equal(...): (line 159)
        # Processing the call arguments (line 159)
        # Getting the type of 'y' (line 159)
        y_19533 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 159, 21), 'y', False)
        # Obtaining the member 'dtype' of a type (line 159)
        dtype_19534 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 159, 21), y_19533, 'dtype')
        # Getting the type of 'self' (line 159)
        self_19535 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 159, 30), 'self', False)
        # Obtaining the member 'cdt' of a type (line 159)
        cdt_19536 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 159, 30), self_19535, 'cdt')
        # Processing the call keyword arguments (line 159)
        kwargs_19537 = {}
        # Getting the type of 'assert_equal' (line 159)
        assert_equal_19532 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 159, 8), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 159)
        assert_equal_call_result_19538 = invoke(stypy.reporting.localization.Localization(__file__, 159, 8), assert_equal_19532, *[dtype_19534, cdt_19536], **kwargs_19537)
        
        
        # Call to assert_equal(...): (line 160)
        # Processing the call arguments (line 160)
        # Getting the type of 'y' (line 160)
        y_19540 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 160, 21), 'y', False)
        # Obtaining the member 'shape' of a type (line 160)
        shape_19541 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 160, 21), y_19540, 'shape')
        
        # Obtaining an instance of the builtin type 'tuple' (line 160)
        tuple_19542 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 160, 30), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 160)
        # Adding element type (line 160)
        int_19543 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 160, 30), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 160, 30), tuple_19542, int_19543)
        # Adding element type (line 160)
        int_19544 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 160, 32), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 160, 30), tuple_19542, int_19544)
        
        # Processing the call keyword arguments (line 160)
        kwargs_19545 = {}
        # Getting the type of 'assert_equal' (line 160)
        assert_equal_19539 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 160, 8), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 160)
        assert_equal_call_result_19546 = invoke(stypy.reporting.localization.Localization(__file__, 160, 8), assert_equal_19539, *[shape_19541, tuple_19542], **kwargs_19545)
        
        
        # Call to assert_array_almost_equal(...): (line 161)
        # Processing the call arguments (line 161)
        
        # Obtaining the type of the subscript
        int_19548 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 161, 36), 'int')
        # Getting the type of 'y' (line 161)
        y_19549 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 161, 34), 'y', False)
        # Obtaining the member '__getitem__' of a type (line 161)
        getitem___19550 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 161, 34), y_19549, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 161)
        subscript_call_result_19551 = invoke(stypy.reporting.localization.Localization(__file__, 161, 34), getitem___19550, int_19548)
        
        
        # Call to direct_dft(...): (line 161)
        # Processing the call arguments (line 161)
        # Getting the type of 'x1' (line 161)
        x1_19553 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 161, 50), 'x1', False)
        # Processing the call keyword arguments (line 161)
        kwargs_19554 = {}
        # Getting the type of 'direct_dft' (line 161)
        direct_dft_19552 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 161, 39), 'direct_dft', False)
        # Calling direct_dft(args, kwargs) (line 161)
        direct_dft_call_result_19555 = invoke(stypy.reporting.localization.Localization(__file__, 161, 39), direct_dft_19552, *[x1_19553], **kwargs_19554)
        
        # Processing the call keyword arguments (line 161)
        kwargs_19556 = {}
        # Getting the type of 'assert_array_almost_equal' (line 161)
        assert_array_almost_equal_19547 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 161, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 161)
        assert_array_almost_equal_call_result_19557 = invoke(stypy.reporting.localization.Localization(__file__, 161, 8), assert_array_almost_equal_19547, *[subscript_call_result_19551, direct_dft_call_result_19555], **kwargs_19556)
        
        
        # Call to assert_array_almost_equal(...): (line 162)
        # Processing the call arguments (line 162)
        
        # Obtaining the type of the subscript
        int_19559 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 162, 36), 'int')
        # Getting the type of 'y' (line 162)
        y_19560 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 162, 34), 'y', False)
        # Obtaining the member '__getitem__' of a type (line 162)
        getitem___19561 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 162, 34), y_19560, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 162)
        subscript_call_result_19562 = invoke(stypy.reporting.localization.Localization(__file__, 162, 34), getitem___19561, int_19559)
        
        
        # Call to direct_dft(...): (line 162)
        # Processing the call arguments (line 162)
        # Getting the type of 'x2' (line 162)
        x2_19564 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 162, 50), 'x2', False)
        # Processing the call keyword arguments (line 162)
        kwargs_19565 = {}
        # Getting the type of 'direct_dft' (line 162)
        direct_dft_19563 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 162, 39), 'direct_dft', False)
        # Calling direct_dft(args, kwargs) (line 162)
        direct_dft_call_result_19566 = invoke(stypy.reporting.localization.Localization(__file__, 162, 39), direct_dft_19563, *[x2_19564], **kwargs_19565)
        
        # Processing the call keyword arguments (line 162)
        kwargs_19567 = {}
        # Getting the type of 'assert_array_almost_equal' (line 162)
        assert_array_almost_equal_19558 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 162, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 162)
        assert_array_almost_equal_call_result_19568 = invoke(stypy.reporting.localization.Localization(__file__, 162, 8), assert_array_almost_equal_19558, *[subscript_call_result_19562, direct_dft_call_result_19566], **kwargs_19567)
        
        
        # ################# End of '_test_n_argument_complex(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_test_n_argument_complex' in the type store
        # Getting the type of 'stypy_return_type' (line 155)
        stypy_return_type_19569 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 155, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_19569)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_test_n_argument_complex'
        return stypy_return_type_19569


    @norecursion
    def test_djbfft(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_djbfft'
        module_type_store = module_type_store.open_function_context('test_djbfft', 164, 4, False)
        # Assigning a type to the variable 'self' (line 165)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 165, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        _TestFFTBase.test_djbfft.__dict__.__setitem__('stypy_localization', localization)
        _TestFFTBase.test_djbfft.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        _TestFFTBase.test_djbfft.__dict__.__setitem__('stypy_type_store', module_type_store)
        _TestFFTBase.test_djbfft.__dict__.__setitem__('stypy_function_name', '_TestFFTBase.test_djbfft')
        _TestFFTBase.test_djbfft.__dict__.__setitem__('stypy_param_names_list', [])
        _TestFFTBase.test_djbfft.__dict__.__setitem__('stypy_varargs_param_name', None)
        _TestFFTBase.test_djbfft.__dict__.__setitem__('stypy_kwargs_param_name', None)
        _TestFFTBase.test_djbfft.__dict__.__setitem__('stypy_call_defaults', defaults)
        _TestFFTBase.test_djbfft.__dict__.__setitem__('stypy_call_varargs', varargs)
        _TestFFTBase.test_djbfft.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        _TestFFTBase.test_djbfft.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, '_TestFFTBase.test_djbfft', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_djbfft', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_djbfft(...)' code ##################

        
        
        # Call to range(...): (line 165)
        # Processing the call arguments (line 165)
        int_19571 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 165, 23), 'int')
        int_19572 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 165, 25), 'int')
        # Processing the call keyword arguments (line 165)
        kwargs_19573 = {}
        # Getting the type of 'range' (line 165)
        range_19570 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 165, 17), 'range', False)
        # Calling range(args, kwargs) (line 165)
        range_call_result_19574 = invoke(stypy.reporting.localization.Localization(__file__, 165, 17), range_19570, *[int_19571, int_19572], **kwargs_19573)
        
        # Testing the type of a for loop iterable (line 165)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 165, 8), range_call_result_19574)
        # Getting the type of the for loop variable (line 165)
        for_loop_var_19575 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 165, 8), range_call_result_19574)
        # Assigning a type to the variable 'i' (line 165)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 165, 8), 'i', for_loop_var_19575)
        # SSA begins for a for statement (line 165)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a BinOp to a Name (line 166):
        int_19576 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 166, 16), 'int')
        # Getting the type of 'i' (line 166)
        i_19577 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 166, 19), 'i')
        # Applying the binary operator '**' (line 166)
        result_pow_19578 = python_operator(stypy.reporting.localization.Localization(__file__, 166, 16), '**', int_19576, i_19577)
        
        # Assigning a type to the variable 'n' (line 166)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 166, 12), 'n', result_pow_19578)
        
        # Assigning a Call to a Name (line 167):
        
        # Call to list(...): (line 167)
        # Processing the call arguments (line 167)
        
        # Call to range(...): (line 167)
        # Processing the call arguments (line 167)
        # Getting the type of 'n' (line 167)
        n_19581 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 167, 27), 'n', False)
        # Processing the call keyword arguments (line 167)
        kwargs_19582 = {}
        # Getting the type of 'range' (line 167)
        range_19580 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 167, 21), 'range', False)
        # Calling range(args, kwargs) (line 167)
        range_call_result_19583 = invoke(stypy.reporting.localization.Localization(__file__, 167, 21), range_19580, *[n_19581], **kwargs_19582)
        
        # Processing the call keyword arguments (line 167)
        kwargs_19584 = {}
        # Getting the type of 'list' (line 167)
        list_19579 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 167, 16), 'list', False)
        # Calling list(args, kwargs) (line 167)
        list_call_result_19585 = invoke(stypy.reporting.localization.Localization(__file__, 167, 16), list_19579, *[range_call_result_19583], **kwargs_19584)
        
        # Assigning a type to the variable 'x' (line 167)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 167, 12), 'x', list_call_result_19585)
        
        # Assigning a Call to a Name (line 168):
        
        # Call to zfft(...): (line 168)
        # Processing the call arguments (line 168)
        # Getting the type of 'x' (line 168)
        x_19588 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 168, 29), 'x', False)
        # Processing the call keyword arguments (line 168)
        kwargs_19589 = {}
        # Getting the type of 'fftpack' (line 168)
        fftpack_19586 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 168, 16), 'fftpack', False)
        # Obtaining the member 'zfft' of a type (line 168)
        zfft_19587 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 168, 16), fftpack_19586, 'zfft')
        # Calling zfft(args, kwargs) (line 168)
        zfft_call_result_19590 = invoke(stypy.reporting.localization.Localization(__file__, 168, 16), zfft_19587, *[x_19588], **kwargs_19589)
        
        # Assigning a type to the variable 'y' (line 168)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 168, 12), 'y', zfft_call_result_19590)
        
        # Assigning a Call to a Name (line 169):
        
        # Call to fft(...): (line 169)
        # Processing the call arguments (line 169)
        # Getting the type of 'x' (line 169)
        x_19594 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 169, 31), 'x', False)
        # Processing the call keyword arguments (line 169)
        kwargs_19595 = {}
        # Getting the type of 'numpy' (line 169)
        numpy_19591 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 169, 17), 'numpy', False)
        # Obtaining the member 'fft' of a type (line 169)
        fft_19592 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 169, 17), numpy_19591, 'fft')
        # Obtaining the member 'fft' of a type (line 169)
        fft_19593 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 169, 17), fft_19592, 'fft')
        # Calling fft(args, kwargs) (line 169)
        fft_call_result_19596 = invoke(stypy.reporting.localization.Localization(__file__, 169, 17), fft_19593, *[x_19594], **kwargs_19595)
        
        # Assigning a type to the variable 'y2' (line 169)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 169, 12), 'y2', fft_call_result_19596)
        
        # Call to assert_array_almost_equal(...): (line 170)
        # Processing the call arguments (line 170)
        # Getting the type of 'y' (line 170)
        y_19598 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 170, 38), 'y', False)
        # Getting the type of 'y2' (line 170)
        y2_19599 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 170, 40), 'y2', False)
        # Processing the call keyword arguments (line 170)
        kwargs_19600 = {}
        # Getting the type of 'assert_array_almost_equal' (line 170)
        assert_array_almost_equal_19597 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 170, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 170)
        assert_array_almost_equal_call_result_19601 = invoke(stypy.reporting.localization.Localization(__file__, 170, 12), assert_array_almost_equal_19597, *[y_19598, y2_19599], **kwargs_19600)
        
        
        # Assigning a Call to a Name (line 171):
        
        # Call to zrfft(...): (line 171)
        # Processing the call arguments (line 171)
        # Getting the type of 'x' (line 171)
        x_19604 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 171, 30), 'x', False)
        # Processing the call keyword arguments (line 171)
        kwargs_19605 = {}
        # Getting the type of 'fftpack' (line 171)
        fftpack_19602 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 171, 16), 'fftpack', False)
        # Obtaining the member 'zrfft' of a type (line 171)
        zrfft_19603 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 171, 16), fftpack_19602, 'zrfft')
        # Calling zrfft(args, kwargs) (line 171)
        zrfft_call_result_19606 = invoke(stypy.reporting.localization.Localization(__file__, 171, 16), zrfft_19603, *[x_19604], **kwargs_19605)
        
        # Assigning a type to the variable 'y' (line 171)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 171, 12), 'y', zrfft_call_result_19606)
        
        # Call to assert_array_almost_equal(...): (line 172)
        # Processing the call arguments (line 172)
        # Getting the type of 'y' (line 172)
        y_19608 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 172, 38), 'y', False)
        # Getting the type of 'y2' (line 172)
        y2_19609 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 172, 40), 'y2', False)
        # Processing the call keyword arguments (line 172)
        kwargs_19610 = {}
        # Getting the type of 'assert_array_almost_equal' (line 172)
        assert_array_almost_equal_19607 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 172, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 172)
        assert_array_almost_equal_call_result_19611 = invoke(stypy.reporting.localization.Localization(__file__, 172, 12), assert_array_almost_equal_19607, *[y_19608, y2_19609], **kwargs_19610)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_djbfft(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_djbfft' in the type store
        # Getting the type of 'stypy_return_type' (line 164)
        stypy_return_type_19612 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 164, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_19612)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_djbfft'
        return stypy_return_type_19612


    @norecursion
    def test_invalid_sizes(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_invalid_sizes'
        module_type_store = module_type_store.open_function_context('test_invalid_sizes', 174, 4, False)
        # Assigning a type to the variable 'self' (line 175)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 175, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        _TestFFTBase.test_invalid_sizes.__dict__.__setitem__('stypy_localization', localization)
        _TestFFTBase.test_invalid_sizes.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        _TestFFTBase.test_invalid_sizes.__dict__.__setitem__('stypy_type_store', module_type_store)
        _TestFFTBase.test_invalid_sizes.__dict__.__setitem__('stypy_function_name', '_TestFFTBase.test_invalid_sizes')
        _TestFFTBase.test_invalid_sizes.__dict__.__setitem__('stypy_param_names_list', [])
        _TestFFTBase.test_invalid_sizes.__dict__.__setitem__('stypy_varargs_param_name', None)
        _TestFFTBase.test_invalid_sizes.__dict__.__setitem__('stypy_kwargs_param_name', None)
        _TestFFTBase.test_invalid_sizes.__dict__.__setitem__('stypy_call_defaults', defaults)
        _TestFFTBase.test_invalid_sizes.__dict__.__setitem__('stypy_call_varargs', varargs)
        _TestFFTBase.test_invalid_sizes.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        _TestFFTBase.test_invalid_sizes.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, '_TestFFTBase.test_invalid_sizes', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_invalid_sizes', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_invalid_sizes(...)' code ##################

        
        # Call to assert_raises(...): (line 175)
        # Processing the call arguments (line 175)
        # Getting the type of 'ValueError' (line 175)
        ValueError_19614 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 175, 22), 'ValueError', False)
        # Getting the type of 'fft' (line 175)
        fft_19615 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 175, 34), 'fft', False)
        
        # Obtaining an instance of the builtin type 'list' (line 175)
        list_19616 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 175, 39), 'list')
        # Adding type elements to the builtin type 'list' instance (line 175)
        
        # Processing the call keyword arguments (line 175)
        kwargs_19617 = {}
        # Getting the type of 'assert_raises' (line 175)
        assert_raises_19613 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 175, 8), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 175)
        assert_raises_call_result_19618 = invoke(stypy.reporting.localization.Localization(__file__, 175, 8), assert_raises_19613, *[ValueError_19614, fft_19615, list_19616], **kwargs_19617)
        
        
        # Call to assert_raises(...): (line 176)
        # Processing the call arguments (line 176)
        # Getting the type of 'ValueError' (line 176)
        ValueError_19620 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 176, 22), 'ValueError', False)
        # Getting the type of 'fft' (line 176)
        fft_19621 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 176, 34), 'fft', False)
        
        # Obtaining an instance of the builtin type 'list' (line 176)
        list_19622 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 176, 39), 'list')
        # Adding type elements to the builtin type 'list' instance (line 176)
        # Adding element type (line 176)
        
        # Obtaining an instance of the builtin type 'list' (line 176)
        list_19623 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 176, 40), 'list')
        # Adding type elements to the builtin type 'list' instance (line 176)
        # Adding element type (line 176)
        int_19624 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 176, 41), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 176, 40), list_19623, int_19624)
        # Adding element type (line 176)
        int_19625 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 176, 43), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 176, 40), list_19623, int_19625)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 176, 39), list_19622, list_19623)
        # Adding element type (line 176)
        
        # Obtaining an instance of the builtin type 'list' (line 176)
        list_19626 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 176, 46), 'list')
        # Adding type elements to the builtin type 'list' instance (line 176)
        # Adding element type (line 176)
        int_19627 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 176, 47), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 176, 46), list_19626, int_19627)
        # Adding element type (line 176)
        int_19628 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 176, 49), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 176, 46), list_19626, int_19628)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 176, 39), list_19622, list_19626)
        
        int_19629 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 176, 54), 'int')
        # Processing the call keyword arguments (line 176)
        kwargs_19630 = {}
        # Getting the type of 'assert_raises' (line 176)
        assert_raises_19619 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 176, 8), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 176)
        assert_raises_call_result_19631 = invoke(stypy.reporting.localization.Localization(__file__, 176, 8), assert_raises_19619, *[ValueError_19620, fft_19621, list_19622, int_19629], **kwargs_19630)
        
        
        # ################# End of 'test_invalid_sizes(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_invalid_sizes' in the type store
        # Getting the type of 'stypy_return_type' (line 174)
        stypy_return_type_19632 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 174, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_19632)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_invalid_sizes'
        return stypy_return_type_19632


    @norecursion
    def test__is_safe_size(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test__is_safe_size'
        module_type_store = module_type_store.open_function_context('test__is_safe_size', 178, 4, False)
        # Assigning a type to the variable 'self' (line 179)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 179, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        _TestFFTBase.test__is_safe_size.__dict__.__setitem__('stypy_localization', localization)
        _TestFFTBase.test__is_safe_size.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        _TestFFTBase.test__is_safe_size.__dict__.__setitem__('stypy_type_store', module_type_store)
        _TestFFTBase.test__is_safe_size.__dict__.__setitem__('stypy_function_name', '_TestFFTBase.test__is_safe_size')
        _TestFFTBase.test__is_safe_size.__dict__.__setitem__('stypy_param_names_list', [])
        _TestFFTBase.test__is_safe_size.__dict__.__setitem__('stypy_varargs_param_name', None)
        _TestFFTBase.test__is_safe_size.__dict__.__setitem__('stypy_kwargs_param_name', None)
        _TestFFTBase.test__is_safe_size.__dict__.__setitem__('stypy_call_defaults', defaults)
        _TestFFTBase.test__is_safe_size.__dict__.__setitem__('stypy_call_varargs', varargs)
        _TestFFTBase.test__is_safe_size.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        _TestFFTBase.test__is_safe_size.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, '_TestFFTBase.test__is_safe_size', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test__is_safe_size', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test__is_safe_size(...)' code ##################

        
        # Assigning a List to a Name (line 179):
        
        # Obtaining an instance of the builtin type 'list' (line 179)
        list_19633 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 179, 15), 'list')
        # Adding type elements to the builtin type 'list' instance (line 179)
        # Adding element type (line 179)
        
        # Obtaining an instance of the builtin type 'tuple' (line 179)
        tuple_19634 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 179, 17), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 179)
        # Adding element type (line 179)
        int_19635 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 179, 17), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 179, 17), tuple_19634, int_19635)
        # Adding element type (line 179)
        # Getting the type of 'True' (line 179)
        True_19636 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 179, 20), 'True')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 179, 17), tuple_19634, True_19636)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 179, 15), list_19633, tuple_19634)
        # Adding element type (line 179)
        
        # Obtaining an instance of the builtin type 'tuple' (line 179)
        tuple_19637 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 179, 28), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 179)
        # Adding element type (line 179)
        int_19638 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 179, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 179, 28), tuple_19637, int_19638)
        # Adding element type (line 179)
        # Getting the type of 'True' (line 179)
        True_19639 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 179, 31), 'True')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 179, 28), tuple_19637, True_19639)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 179, 15), list_19633, tuple_19637)
        # Adding element type (line 179)
        
        # Obtaining an instance of the builtin type 'tuple' (line 179)
        tuple_19640 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 179, 39), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 179)
        # Adding element type (line 179)
        int_19641 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 179, 39), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 179, 39), tuple_19640, int_19641)
        # Adding element type (line 179)
        # Getting the type of 'True' (line 179)
        True_19642 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 179, 42), 'True')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 179, 39), tuple_19640, True_19642)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 179, 15), list_19633, tuple_19640)
        # Adding element type (line 179)
        
        # Obtaining an instance of the builtin type 'tuple' (line 179)
        tuple_19643 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 179, 50), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 179)
        # Adding element type (line 179)
        int_19644 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 179, 50), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 179, 50), tuple_19643, int_19644)
        # Adding element type (line 179)
        # Getting the type of 'True' (line 179)
        True_19645 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 179, 53), 'True')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 179, 50), tuple_19643, True_19645)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 179, 15), list_19633, tuple_19643)
        # Adding element type (line 179)
        
        # Obtaining an instance of the builtin type 'tuple' (line 179)
        tuple_19646 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 179, 61), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 179)
        # Adding element type (line 179)
        int_19647 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 179, 61), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 179, 61), tuple_19646, int_19647)
        # Adding element type (line 179)
        # Getting the type of 'True' (line 179)
        True_19648 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 179, 64), 'True')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 179, 61), tuple_19646, True_19648)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 179, 15), list_19633, tuple_19646)
        # Adding element type (line 179)
        
        # Obtaining an instance of the builtin type 'tuple' (line 179)
        tuple_19649 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 179, 72), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 179)
        # Adding element type (line 179)
        int_19650 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 179, 72), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 179, 72), tuple_19649, int_19650)
        # Adding element type (line 179)
        # Getting the type of 'True' (line 179)
        True_19651 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 179, 75), 'True')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 179, 72), tuple_19649, True_19651)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 179, 15), list_19633, tuple_19649)
        # Adding element type (line 179)
        
        # Obtaining an instance of the builtin type 'tuple' (line 179)
        tuple_19652 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 179, 83), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 179)
        # Adding element type (line 179)
        int_19653 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 179, 83), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 179, 83), tuple_19652, int_19653)
        # Adding element type (line 179)
        # Getting the type of 'True' (line 179)
        True_19654 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 179, 86), 'True')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 179, 83), tuple_19652, True_19654)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 179, 15), list_19633, tuple_19652)
        # Adding element type (line 179)
        
        # Obtaining an instance of the builtin type 'tuple' (line 179)
        tuple_19655 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 179, 94), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 179)
        # Adding element type (line 179)
        int_19656 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 179, 94), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 179, 94), tuple_19655, int_19656)
        # Adding element type (line 179)
        # Getting the type of 'False' (line 179)
        False_19657 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 179, 97), 'False')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 179, 94), tuple_19655, False_19657)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 179, 15), list_19633, tuple_19655)
        # Adding element type (line 179)
        
        # Obtaining an instance of the builtin type 'tuple' (line 180)
        tuple_19658 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 180, 17), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 180)
        # Adding element type (line 180)
        int_19659 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 180, 17), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 180, 17), tuple_19658, int_19659)
        # Adding element type (line 180)
        # Getting the type of 'True' (line 180)
        True_19660 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 180, 21), 'True')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 180, 17), tuple_19658, True_19660)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 179, 15), list_19633, tuple_19658)
        # Adding element type (line 179)
        
        # Obtaining an instance of the builtin type 'tuple' (line 180)
        tuple_19661 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 180, 29), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 180)
        # Adding element type (line 180)
        int_19662 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 180, 29), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 180, 29), tuple_19661, int_19662)
        # Adding element type (line 180)
        # Getting the type of 'True' (line 180)
        True_19663 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 180, 33), 'True')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 180, 29), tuple_19661, True_19663)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 179, 15), list_19633, tuple_19661)
        # Adding element type (line 179)
        
        # Obtaining an instance of the builtin type 'tuple' (line 180)
        tuple_19664 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 180, 41), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 180)
        # Adding element type (line 180)
        int_19665 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 180, 41), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 180, 41), tuple_19664, int_19665)
        # Adding element type (line 180)
        # Getting the type of 'False' (line 180)
        False_19666 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 180, 45), 'False')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 180, 41), tuple_19664, False_19666)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 179, 15), list_19633, tuple_19664)
        # Adding element type (line 179)
        
        # Obtaining an instance of the builtin type 'tuple' (line 180)
        tuple_19667 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 180, 54), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 180)
        # Adding element type (line 180)
        int_19668 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 180, 54), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 180, 54), tuple_19667, int_19668)
        # Adding element type (line 180)
        # Getting the type of 'True' (line 180)
        True_19669 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 180, 58), 'True')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 180, 54), tuple_19667, True_19669)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 179, 15), list_19633, tuple_19667)
        # Adding element type (line 179)
        
        # Obtaining an instance of the builtin type 'tuple' (line 180)
        tuple_19670 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 180, 66), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 180)
        # Adding element type (line 180)
        int_19671 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 180, 66), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 180, 66), tuple_19670, int_19671)
        # Adding element type (line 180)
        # Getting the type of 'False' (line 180)
        False_19672 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 180, 70), 'False')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 180, 66), tuple_19670, False_19672)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 179, 15), list_19633, tuple_19670)
        # Adding element type (line 179)
        
        # Obtaining an instance of the builtin type 'tuple' (line 180)
        tuple_19673 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 180, 79), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 180)
        # Adding element type (line 180)
        int_19674 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 180, 79), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 180, 79), tuple_19673, int_19674)
        # Adding element type (line 180)
        # Getting the type of 'True' (line 180)
        True_19675 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 180, 83), 'True')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 180, 79), tuple_19673, True_19675)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 179, 15), list_19633, tuple_19673)
        # Adding element type (line 179)
        
        # Obtaining an instance of the builtin type 'tuple' (line 180)
        tuple_19676 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 180, 91), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 180)
        # Adding element type (line 180)
        int_19677 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 180, 91), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 180, 91), tuple_19676, int_19677)
        # Adding element type (line 180)
        # Getting the type of 'True' (line 180)
        True_19678 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 180, 95), 'True')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 180, 91), tuple_19676, True_19678)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 179, 15), list_19633, tuple_19676)
        # Adding element type (line 179)
        
        # Obtaining an instance of the builtin type 'tuple' (line 181)
        tuple_19679 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 181, 17), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 181)
        # Adding element type (line 181)
        int_19680 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 181, 17), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 181, 17), tuple_19679, int_19680)
        # Adding element type (line 181)
        # Getting the type of 'True' (line 181)
        True_19681 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 181, 22), 'True')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 181, 17), tuple_19679, True_19681)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 179, 15), list_19633, tuple_19679)
        # Adding element type (line 179)
        
        # Obtaining an instance of the builtin type 'tuple' (line 181)
        tuple_19682 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 181, 30), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 181)
        # Adding element type (line 181)
        int_19683 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 181, 30), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 181, 30), tuple_19682, int_19683)
        # Adding element type (line 181)
        # Getting the type of 'False' (line 181)
        False_19684 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 181, 35), 'False')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 181, 30), tuple_19682, False_19684)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 179, 15), list_19633, tuple_19682)
        
        # Assigning a type to the variable 'vals' (line 179)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 179, 8), 'vals', list_19633)
        
        # Getting the type of 'vals' (line 182)
        vals_19685 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 182, 26), 'vals')
        # Testing the type of a for loop iterable (line 182)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 182, 8), vals_19685)
        # Getting the type of the for loop variable (line 182)
        for_loop_var_19686 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 182, 8), vals_19685)
        # Assigning a type to the variable 'n' (line 182)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 182, 8), 'n', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 182, 8), for_loop_var_19686))
        # Assigning a type to the variable 'is_safe' (line 182)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 182, 8), 'is_safe', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 182, 8), for_loop_var_19686))
        # SSA begins for a for statement (line 182)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to assert_equal(...): (line 183)
        # Processing the call arguments (line 183)
        
        # Call to _is_safe_size(...): (line 183)
        # Processing the call arguments (line 183)
        # Getting the type of 'n' (line 183)
        n_19689 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 183, 39), 'n', False)
        # Processing the call keyword arguments (line 183)
        kwargs_19690 = {}
        # Getting the type of '_is_safe_size' (line 183)
        _is_safe_size_19688 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 183, 25), '_is_safe_size', False)
        # Calling _is_safe_size(args, kwargs) (line 183)
        _is_safe_size_call_result_19691 = invoke(stypy.reporting.localization.Localization(__file__, 183, 25), _is_safe_size_19688, *[n_19689], **kwargs_19690)
        
        # Getting the type of 'is_safe' (line 183)
        is_safe_19692 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 183, 43), 'is_safe', False)
        # Processing the call keyword arguments (line 183)
        kwargs_19693 = {}
        # Getting the type of 'assert_equal' (line 183)
        assert_equal_19687 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 183, 12), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 183)
        assert_equal_call_result_19694 = invoke(stypy.reporting.localization.Localization(__file__, 183, 12), assert_equal_19687, *[_is_safe_size_call_result_19691, is_safe_19692], **kwargs_19693)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test__is_safe_size(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test__is_safe_size' in the type store
        # Getting the type of 'stypy_return_type' (line 178)
        stypy_return_type_19695 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 178, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_19695)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test__is_safe_size'
        return stypy_return_type_19695


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 131, 0, False)
        # Assigning a type to the variable 'self' (line 132)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 132, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, '_TestFFTBase.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable '_TestFFTBase' (line 131)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 131, 0), '_TestFFTBase', _TestFFTBase)
# Declaration of the 'TestDoubleFFT' class
# Getting the type of '_TestFFTBase' (line 186)
_TestFFTBase_19696 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 186, 20), '_TestFFTBase')

class TestDoubleFFT(_TestFFTBase_19696, ):

    @norecursion
    def setup_method(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'setup_method'
        module_type_store = module_type_store.open_function_context('setup_method', 187, 4, False)
        # Assigning a type to the variable 'self' (line 188)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 188, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestDoubleFFT.setup_method.__dict__.__setitem__('stypy_localization', localization)
        TestDoubleFFT.setup_method.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestDoubleFFT.setup_method.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestDoubleFFT.setup_method.__dict__.__setitem__('stypy_function_name', 'TestDoubleFFT.setup_method')
        TestDoubleFFT.setup_method.__dict__.__setitem__('stypy_param_names_list', [])
        TestDoubleFFT.setup_method.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestDoubleFFT.setup_method.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestDoubleFFT.setup_method.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestDoubleFFT.setup_method.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestDoubleFFT.setup_method.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestDoubleFFT.setup_method.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestDoubleFFT.setup_method', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'setup_method', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'setup_method(...)' code ##################

        
        # Assigning a Attribute to a Attribute (line 188):
        # Getting the type of 'np' (line 188)
        np_19697 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 188, 19), 'np')
        # Obtaining the member 'cdouble' of a type (line 188)
        cdouble_19698 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 188, 19), np_19697, 'cdouble')
        # Getting the type of 'self' (line 188)
        self_19699 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 188, 8), 'self')
        # Setting the type of the member 'cdt' of a type (line 188)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 188, 8), self_19699, 'cdt', cdouble_19698)
        
        # Assigning a Attribute to a Attribute (line 189):
        # Getting the type of 'np' (line 189)
        np_19700 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 189, 19), 'np')
        # Obtaining the member 'double' of a type (line 189)
        double_19701 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 189, 19), np_19700, 'double')
        # Getting the type of 'self' (line 189)
        self_19702 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 189, 8), 'self')
        # Setting the type of the member 'rdt' of a type (line 189)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 189, 8), self_19702, 'rdt', double_19701)
        
        # ################# End of 'setup_method(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'setup_method' in the type store
        # Getting the type of 'stypy_return_type' (line 187)
        stypy_return_type_19703 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 187, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_19703)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'setup_method'
        return stypy_return_type_19703


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 186, 0, False)
        # Assigning a type to the variable 'self' (line 187)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 187, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestDoubleFFT.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'TestDoubleFFT' (line 186)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 186, 0), 'TestDoubleFFT', TestDoubleFFT)
# Declaration of the 'TestSingleFFT' class
# Getting the type of '_TestFFTBase' (line 192)
_TestFFTBase_19704 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 192, 20), '_TestFFTBase')

class TestSingleFFT(_TestFFTBase_19704, ):

    @norecursion
    def setup_method(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'setup_method'
        module_type_store = module_type_store.open_function_context('setup_method', 193, 4, False)
        # Assigning a type to the variable 'self' (line 194)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 194, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSingleFFT.setup_method.__dict__.__setitem__('stypy_localization', localization)
        TestSingleFFT.setup_method.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSingleFFT.setup_method.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSingleFFT.setup_method.__dict__.__setitem__('stypy_function_name', 'TestSingleFFT.setup_method')
        TestSingleFFT.setup_method.__dict__.__setitem__('stypy_param_names_list', [])
        TestSingleFFT.setup_method.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSingleFFT.setup_method.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSingleFFT.setup_method.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSingleFFT.setup_method.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSingleFFT.setup_method.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSingleFFT.setup_method.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSingleFFT.setup_method', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'setup_method', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'setup_method(...)' code ##################

        
        # Assigning a Attribute to a Attribute (line 194):
        # Getting the type of 'np' (line 194)
        np_19705 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 194, 19), 'np')
        # Obtaining the member 'complex64' of a type (line 194)
        complex64_19706 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 194, 19), np_19705, 'complex64')
        # Getting the type of 'self' (line 194)
        self_19707 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 194, 8), 'self')
        # Setting the type of the member 'cdt' of a type (line 194)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 194, 8), self_19707, 'cdt', complex64_19706)
        
        # Assigning a Attribute to a Attribute (line 195):
        # Getting the type of 'np' (line 195)
        np_19708 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 195, 19), 'np')
        # Obtaining the member 'float32' of a type (line 195)
        float32_19709 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 195, 19), np_19708, 'float32')
        # Getting the type of 'self' (line 195)
        self_19710 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 195, 8), 'self')
        # Setting the type of the member 'rdt' of a type (line 195)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 195, 8), self_19710, 'rdt', float32_19709)
        
        # ################# End of 'setup_method(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'setup_method' in the type store
        # Getting the type of 'stypy_return_type' (line 193)
        stypy_return_type_19711 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 193, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_19711)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'setup_method'
        return stypy_return_type_19711


    @norecursion
    def test_notice(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_notice'
        module_type_store = module_type_store.open_function_context('test_notice', 197, 4, False)
        # Assigning a type to the variable 'self' (line 198)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 198, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSingleFFT.test_notice.__dict__.__setitem__('stypy_localization', localization)
        TestSingleFFT.test_notice.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSingleFFT.test_notice.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSingleFFT.test_notice.__dict__.__setitem__('stypy_function_name', 'TestSingleFFT.test_notice')
        TestSingleFFT.test_notice.__dict__.__setitem__('stypy_param_names_list', [])
        TestSingleFFT.test_notice.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSingleFFT.test_notice.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSingleFFT.test_notice.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSingleFFT.test_notice.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSingleFFT.test_notice.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSingleFFT.test_notice.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSingleFFT.test_notice', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_notice', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_notice(...)' code ##################

        pass
        
        # ################# End of 'test_notice(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_notice' in the type store
        # Getting the type of 'stypy_return_type' (line 197)
        stypy_return_type_19712 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 197, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_19712)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_notice'
        return stypy_return_type_19712


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 192, 0, False)
        # Assigning a type to the variable 'self' (line 193)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 193, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSingleFFT.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'TestSingleFFT' (line 192)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 192, 0), 'TestSingleFFT', TestSingleFFT)
# Declaration of the 'TestFloat16FFT' class

class TestFloat16FFT(object, ):

    @norecursion
    def test_1_argument_real(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_1_argument_real'
        module_type_store = module_type_store.open_function_context('test_1_argument_real', 204, 4, False)
        # Assigning a type to the variable 'self' (line 205)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 205, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestFloat16FFT.test_1_argument_real.__dict__.__setitem__('stypy_localization', localization)
        TestFloat16FFT.test_1_argument_real.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestFloat16FFT.test_1_argument_real.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestFloat16FFT.test_1_argument_real.__dict__.__setitem__('stypy_function_name', 'TestFloat16FFT.test_1_argument_real')
        TestFloat16FFT.test_1_argument_real.__dict__.__setitem__('stypy_param_names_list', [])
        TestFloat16FFT.test_1_argument_real.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestFloat16FFT.test_1_argument_real.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestFloat16FFT.test_1_argument_real.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestFloat16FFT.test_1_argument_real.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestFloat16FFT.test_1_argument_real.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestFloat16FFT.test_1_argument_real.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFloat16FFT.test_1_argument_real', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_1_argument_real', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_1_argument_real(...)' code ##################

        
        # Assigning a Call to a Name (line 205):
        
        # Call to array(...): (line 205)
        # Processing the call arguments (line 205)
        
        # Obtaining an instance of the builtin type 'list' (line 205)
        list_19715 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 205, 22), 'list')
        # Adding type elements to the builtin type 'list' instance (line 205)
        # Adding element type (line 205)
        int_19716 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 205, 23), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 205, 22), list_19715, int_19716)
        # Adding element type (line 205)
        int_19717 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 205, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 205, 22), list_19715, int_19717)
        # Adding element type (line 205)
        int_19718 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 205, 29), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 205, 22), list_19715, int_19718)
        # Adding element type (line 205)
        int_19719 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 205, 32), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 205, 22), list_19715, int_19719)
        
        # Processing the call keyword arguments (line 205)
        # Getting the type of 'np' (line 205)
        np_19720 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 205, 42), 'np', False)
        # Obtaining the member 'float16' of a type (line 205)
        float16_19721 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 205, 42), np_19720, 'float16')
        keyword_19722 = float16_19721
        kwargs_19723 = {'dtype': keyword_19722}
        # Getting the type of 'np' (line 205)
        np_19713 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 205, 13), 'np', False)
        # Obtaining the member 'array' of a type (line 205)
        array_19714 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 205, 13), np_19713, 'array')
        # Calling array(args, kwargs) (line 205)
        array_call_result_19724 = invoke(stypy.reporting.localization.Localization(__file__, 205, 13), array_19714, *[list_19715], **kwargs_19723)
        
        # Assigning a type to the variable 'x1' (line 205)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 205, 8), 'x1', array_call_result_19724)
        
        # Assigning a Call to a Name (line 206):
        
        # Call to fft(...): (line 206)
        # Processing the call arguments (line 206)
        # Getting the type of 'x1' (line 206)
        x1_19726 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 206, 16), 'x1', False)
        # Processing the call keyword arguments (line 206)
        int_19727 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 206, 22), 'int')
        keyword_19728 = int_19727
        kwargs_19729 = {'n': keyword_19728}
        # Getting the type of 'fft' (line 206)
        fft_19725 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 206, 12), 'fft', False)
        # Calling fft(args, kwargs) (line 206)
        fft_call_result_19730 = invoke(stypy.reporting.localization.Localization(__file__, 206, 12), fft_19725, *[x1_19726], **kwargs_19729)
        
        # Assigning a type to the variable 'y' (line 206)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 206, 8), 'y', fft_call_result_19730)
        
        # Call to assert_equal(...): (line 207)
        # Processing the call arguments (line 207)
        # Getting the type of 'y' (line 207)
        y_19732 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 207, 21), 'y', False)
        # Obtaining the member 'dtype' of a type (line 207)
        dtype_19733 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 207, 21), y_19732, 'dtype')
        # Getting the type of 'np' (line 207)
        np_19734 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 207, 30), 'np', False)
        # Obtaining the member 'complex64' of a type (line 207)
        complex64_19735 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 207, 30), np_19734, 'complex64')
        # Processing the call keyword arguments (line 207)
        kwargs_19736 = {}
        # Getting the type of 'assert_equal' (line 207)
        assert_equal_19731 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 207, 8), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 207)
        assert_equal_call_result_19737 = invoke(stypy.reporting.localization.Localization(__file__, 207, 8), assert_equal_19731, *[dtype_19733, complex64_19735], **kwargs_19736)
        
        
        # Call to assert_equal(...): (line 208)
        # Processing the call arguments (line 208)
        # Getting the type of 'y' (line 208)
        y_19739 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 208, 21), 'y', False)
        # Obtaining the member 'shape' of a type (line 208)
        shape_19740 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 208, 21), y_19739, 'shape')
        
        # Obtaining an instance of the builtin type 'tuple' (line 208)
        tuple_19741 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 208, 31), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 208)
        # Adding element type (line 208)
        int_19742 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 208, 31), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 208, 31), tuple_19741, int_19742)
        
        # Processing the call keyword arguments (line 208)
        kwargs_19743 = {}
        # Getting the type of 'assert_equal' (line 208)
        assert_equal_19738 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 208, 8), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 208)
        assert_equal_call_result_19744 = invoke(stypy.reporting.localization.Localization(__file__, 208, 8), assert_equal_19738, *[shape_19740, tuple_19741], **kwargs_19743)
        
        
        # Call to assert_array_almost_equal(...): (line 209)
        # Processing the call arguments (line 209)
        # Getting the type of 'y' (line 209)
        y_19746 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 209, 34), 'y', False)
        
        # Call to direct_dft(...): (line 209)
        # Processing the call arguments (line 209)
        
        # Call to astype(...): (line 209)
        # Processing the call arguments (line 209)
        # Getting the type of 'np' (line 209)
        np_19750 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 209, 58), 'np', False)
        # Obtaining the member 'float32' of a type (line 209)
        float32_19751 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 209, 58), np_19750, 'float32')
        # Processing the call keyword arguments (line 209)
        kwargs_19752 = {}
        # Getting the type of 'x1' (line 209)
        x1_19748 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 209, 48), 'x1', False)
        # Obtaining the member 'astype' of a type (line 209)
        astype_19749 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 209, 48), x1_19748, 'astype')
        # Calling astype(args, kwargs) (line 209)
        astype_call_result_19753 = invoke(stypy.reporting.localization.Localization(__file__, 209, 48), astype_19749, *[float32_19751], **kwargs_19752)
        
        # Processing the call keyword arguments (line 209)
        kwargs_19754 = {}
        # Getting the type of 'direct_dft' (line 209)
        direct_dft_19747 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 209, 37), 'direct_dft', False)
        # Calling direct_dft(args, kwargs) (line 209)
        direct_dft_call_result_19755 = invoke(stypy.reporting.localization.Localization(__file__, 209, 37), direct_dft_19747, *[astype_call_result_19753], **kwargs_19754)
        
        # Processing the call keyword arguments (line 209)
        kwargs_19756 = {}
        # Getting the type of 'assert_array_almost_equal' (line 209)
        assert_array_almost_equal_19745 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 209, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 209)
        assert_array_almost_equal_call_result_19757 = invoke(stypy.reporting.localization.Localization(__file__, 209, 8), assert_array_almost_equal_19745, *[y_19746, direct_dft_call_result_19755], **kwargs_19756)
        
        
        # ################# End of 'test_1_argument_real(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_1_argument_real' in the type store
        # Getting the type of 'stypy_return_type' (line 204)
        stypy_return_type_19758 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 204, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_19758)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_1_argument_real'
        return stypy_return_type_19758


    @norecursion
    def test_n_argument_real(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_n_argument_real'
        module_type_store = module_type_store.open_function_context('test_n_argument_real', 211, 4, False)
        # Assigning a type to the variable 'self' (line 212)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 212, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestFloat16FFT.test_n_argument_real.__dict__.__setitem__('stypy_localization', localization)
        TestFloat16FFT.test_n_argument_real.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestFloat16FFT.test_n_argument_real.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestFloat16FFT.test_n_argument_real.__dict__.__setitem__('stypy_function_name', 'TestFloat16FFT.test_n_argument_real')
        TestFloat16FFT.test_n_argument_real.__dict__.__setitem__('stypy_param_names_list', [])
        TestFloat16FFT.test_n_argument_real.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestFloat16FFT.test_n_argument_real.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestFloat16FFT.test_n_argument_real.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestFloat16FFT.test_n_argument_real.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestFloat16FFT.test_n_argument_real.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestFloat16FFT.test_n_argument_real.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFloat16FFT.test_n_argument_real', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_n_argument_real', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_n_argument_real(...)' code ##################

        
        # Assigning a Call to a Name (line 212):
        
        # Call to array(...): (line 212)
        # Processing the call arguments (line 212)
        
        # Obtaining an instance of the builtin type 'list' (line 212)
        list_19761 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 212, 22), 'list')
        # Adding type elements to the builtin type 'list' instance (line 212)
        # Adding element type (line 212)
        int_19762 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 212, 23), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 212, 22), list_19761, int_19762)
        # Adding element type (line 212)
        int_19763 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 212, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 212, 22), list_19761, int_19763)
        # Adding element type (line 212)
        int_19764 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 212, 29), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 212, 22), list_19761, int_19764)
        # Adding element type (line 212)
        int_19765 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 212, 32), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 212, 22), list_19761, int_19765)
        
        # Processing the call keyword arguments (line 212)
        # Getting the type of 'np' (line 212)
        np_19766 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 212, 42), 'np', False)
        # Obtaining the member 'float16' of a type (line 212)
        float16_19767 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 212, 42), np_19766, 'float16')
        keyword_19768 = float16_19767
        kwargs_19769 = {'dtype': keyword_19768}
        # Getting the type of 'np' (line 212)
        np_19759 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 212, 13), 'np', False)
        # Obtaining the member 'array' of a type (line 212)
        array_19760 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 212, 13), np_19759, 'array')
        # Calling array(args, kwargs) (line 212)
        array_call_result_19770 = invoke(stypy.reporting.localization.Localization(__file__, 212, 13), array_19760, *[list_19761], **kwargs_19769)
        
        # Assigning a type to the variable 'x1' (line 212)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 212, 8), 'x1', array_call_result_19770)
        
        # Assigning a Call to a Name (line 213):
        
        # Call to array(...): (line 213)
        # Processing the call arguments (line 213)
        
        # Obtaining an instance of the builtin type 'list' (line 213)
        list_19773 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 213, 22), 'list')
        # Adding type elements to the builtin type 'list' instance (line 213)
        # Adding element type (line 213)
        int_19774 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 213, 23), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 213, 22), list_19773, int_19774)
        # Adding element type (line 213)
        int_19775 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 213, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 213, 22), list_19773, int_19775)
        # Adding element type (line 213)
        int_19776 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 213, 29), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 213, 22), list_19773, int_19776)
        # Adding element type (line 213)
        int_19777 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 213, 32), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 213, 22), list_19773, int_19777)
        
        # Processing the call keyword arguments (line 213)
        # Getting the type of 'np' (line 213)
        np_19778 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 213, 42), 'np', False)
        # Obtaining the member 'float16' of a type (line 213)
        float16_19779 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 213, 42), np_19778, 'float16')
        keyword_19780 = float16_19779
        kwargs_19781 = {'dtype': keyword_19780}
        # Getting the type of 'np' (line 213)
        np_19771 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 213, 13), 'np', False)
        # Obtaining the member 'array' of a type (line 213)
        array_19772 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 213, 13), np_19771, 'array')
        # Calling array(args, kwargs) (line 213)
        array_call_result_19782 = invoke(stypy.reporting.localization.Localization(__file__, 213, 13), array_19772, *[list_19773], **kwargs_19781)
        
        # Assigning a type to the variable 'x2' (line 213)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 213, 8), 'x2', array_call_result_19782)
        
        # Assigning a Call to a Name (line 214):
        
        # Call to fft(...): (line 214)
        # Processing the call arguments (line 214)
        
        # Obtaining an instance of the builtin type 'list' (line 214)
        list_19784 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 214, 16), 'list')
        # Adding type elements to the builtin type 'list' instance (line 214)
        # Adding element type (line 214)
        # Getting the type of 'x1' (line 214)
        x1_19785 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 214, 17), 'x1', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 214, 16), list_19784, x1_19785)
        # Adding element type (line 214)
        # Getting the type of 'x2' (line 214)
        x2_19786 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 214, 21), 'x2', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 214, 16), list_19784, x2_19786)
        
        # Processing the call keyword arguments (line 214)
        int_19787 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 214, 28), 'int')
        keyword_19788 = int_19787
        kwargs_19789 = {'n': keyword_19788}
        # Getting the type of 'fft' (line 214)
        fft_19783 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 214, 12), 'fft', False)
        # Calling fft(args, kwargs) (line 214)
        fft_call_result_19790 = invoke(stypy.reporting.localization.Localization(__file__, 214, 12), fft_19783, *[list_19784], **kwargs_19789)
        
        # Assigning a type to the variable 'y' (line 214)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 214, 8), 'y', fft_call_result_19790)
        
        # Call to assert_equal(...): (line 215)
        # Processing the call arguments (line 215)
        # Getting the type of 'y' (line 215)
        y_19792 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 215, 21), 'y', False)
        # Obtaining the member 'dtype' of a type (line 215)
        dtype_19793 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 215, 21), y_19792, 'dtype')
        # Getting the type of 'np' (line 215)
        np_19794 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 215, 30), 'np', False)
        # Obtaining the member 'complex64' of a type (line 215)
        complex64_19795 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 215, 30), np_19794, 'complex64')
        # Processing the call keyword arguments (line 215)
        kwargs_19796 = {}
        # Getting the type of 'assert_equal' (line 215)
        assert_equal_19791 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 215, 8), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 215)
        assert_equal_call_result_19797 = invoke(stypy.reporting.localization.Localization(__file__, 215, 8), assert_equal_19791, *[dtype_19793, complex64_19795], **kwargs_19796)
        
        
        # Call to assert_equal(...): (line 216)
        # Processing the call arguments (line 216)
        # Getting the type of 'y' (line 216)
        y_19799 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 216, 21), 'y', False)
        # Obtaining the member 'shape' of a type (line 216)
        shape_19800 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 216, 21), y_19799, 'shape')
        
        # Obtaining an instance of the builtin type 'tuple' (line 216)
        tuple_19801 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 216, 31), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 216)
        # Adding element type (line 216)
        int_19802 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 216, 31), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 216, 31), tuple_19801, int_19802)
        # Adding element type (line 216)
        int_19803 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 216, 34), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 216, 31), tuple_19801, int_19803)
        
        # Processing the call keyword arguments (line 216)
        kwargs_19804 = {}
        # Getting the type of 'assert_equal' (line 216)
        assert_equal_19798 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 216, 8), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 216)
        assert_equal_call_result_19805 = invoke(stypy.reporting.localization.Localization(__file__, 216, 8), assert_equal_19798, *[shape_19800, tuple_19801], **kwargs_19804)
        
        
        # Call to assert_array_almost_equal(...): (line 217)
        # Processing the call arguments (line 217)
        
        # Obtaining the type of the subscript
        int_19807 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 217, 36), 'int')
        # Getting the type of 'y' (line 217)
        y_19808 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 217, 34), 'y', False)
        # Obtaining the member '__getitem__' of a type (line 217)
        getitem___19809 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 217, 34), y_19808, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 217)
        subscript_call_result_19810 = invoke(stypy.reporting.localization.Localization(__file__, 217, 34), getitem___19809, int_19807)
        
        
        # Call to direct_dft(...): (line 217)
        # Processing the call arguments (line 217)
        
        # Call to astype(...): (line 217)
        # Processing the call arguments (line 217)
        # Getting the type of 'np' (line 217)
        np_19814 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 217, 61), 'np', False)
        # Obtaining the member 'float32' of a type (line 217)
        float32_19815 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 217, 61), np_19814, 'float32')
        # Processing the call keyword arguments (line 217)
        kwargs_19816 = {}
        # Getting the type of 'x1' (line 217)
        x1_19812 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 217, 51), 'x1', False)
        # Obtaining the member 'astype' of a type (line 217)
        astype_19813 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 217, 51), x1_19812, 'astype')
        # Calling astype(args, kwargs) (line 217)
        astype_call_result_19817 = invoke(stypy.reporting.localization.Localization(__file__, 217, 51), astype_19813, *[float32_19815], **kwargs_19816)
        
        # Processing the call keyword arguments (line 217)
        kwargs_19818 = {}
        # Getting the type of 'direct_dft' (line 217)
        direct_dft_19811 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 217, 40), 'direct_dft', False)
        # Calling direct_dft(args, kwargs) (line 217)
        direct_dft_call_result_19819 = invoke(stypy.reporting.localization.Localization(__file__, 217, 40), direct_dft_19811, *[astype_call_result_19817], **kwargs_19818)
        
        # Processing the call keyword arguments (line 217)
        kwargs_19820 = {}
        # Getting the type of 'assert_array_almost_equal' (line 217)
        assert_array_almost_equal_19806 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 217, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 217)
        assert_array_almost_equal_call_result_19821 = invoke(stypy.reporting.localization.Localization(__file__, 217, 8), assert_array_almost_equal_19806, *[subscript_call_result_19810, direct_dft_call_result_19819], **kwargs_19820)
        
        
        # Call to assert_array_almost_equal(...): (line 218)
        # Processing the call arguments (line 218)
        
        # Obtaining the type of the subscript
        int_19823 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 218, 36), 'int')
        # Getting the type of 'y' (line 218)
        y_19824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 218, 34), 'y', False)
        # Obtaining the member '__getitem__' of a type (line 218)
        getitem___19825 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 218, 34), y_19824, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 218)
        subscript_call_result_19826 = invoke(stypy.reporting.localization.Localization(__file__, 218, 34), getitem___19825, int_19823)
        
        
        # Call to direct_dft(...): (line 218)
        # Processing the call arguments (line 218)
        
        # Call to astype(...): (line 218)
        # Processing the call arguments (line 218)
        # Getting the type of 'np' (line 218)
        np_19830 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 218, 61), 'np', False)
        # Obtaining the member 'float32' of a type (line 218)
        float32_19831 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 218, 61), np_19830, 'float32')
        # Processing the call keyword arguments (line 218)
        kwargs_19832 = {}
        # Getting the type of 'x2' (line 218)
        x2_19828 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 218, 51), 'x2', False)
        # Obtaining the member 'astype' of a type (line 218)
        astype_19829 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 218, 51), x2_19828, 'astype')
        # Calling astype(args, kwargs) (line 218)
        astype_call_result_19833 = invoke(stypy.reporting.localization.Localization(__file__, 218, 51), astype_19829, *[float32_19831], **kwargs_19832)
        
        # Processing the call keyword arguments (line 218)
        kwargs_19834 = {}
        # Getting the type of 'direct_dft' (line 218)
        direct_dft_19827 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 218, 40), 'direct_dft', False)
        # Calling direct_dft(args, kwargs) (line 218)
        direct_dft_call_result_19835 = invoke(stypy.reporting.localization.Localization(__file__, 218, 40), direct_dft_19827, *[astype_call_result_19833], **kwargs_19834)
        
        # Processing the call keyword arguments (line 218)
        kwargs_19836 = {}
        # Getting the type of 'assert_array_almost_equal' (line 218)
        assert_array_almost_equal_19822 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 218, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 218)
        assert_array_almost_equal_call_result_19837 = invoke(stypy.reporting.localization.Localization(__file__, 218, 8), assert_array_almost_equal_19822, *[subscript_call_result_19826, direct_dft_call_result_19835], **kwargs_19836)
        
        
        # ################# End of 'test_n_argument_real(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_n_argument_real' in the type store
        # Getting the type of 'stypy_return_type' (line 211)
        stypy_return_type_19838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 211, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_19838)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_n_argument_real'
        return stypy_return_type_19838


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 202, 0, False)
        # Assigning a type to the variable 'self' (line 203)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 203, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFloat16FFT.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'TestFloat16FFT' (line 202)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 202, 0), 'TestFloat16FFT', TestFloat16FFT)
# Declaration of the '_TestIFFTBase' class

class _TestIFFTBase(object, ):

    @norecursion
    def setup_method(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'setup_method'
        module_type_store = module_type_store.open_function_context('setup_method', 222, 4, False)
        # Assigning a type to the variable 'self' (line 223)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 223, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        _TestIFFTBase.setup_method.__dict__.__setitem__('stypy_localization', localization)
        _TestIFFTBase.setup_method.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        _TestIFFTBase.setup_method.__dict__.__setitem__('stypy_type_store', module_type_store)
        _TestIFFTBase.setup_method.__dict__.__setitem__('stypy_function_name', '_TestIFFTBase.setup_method')
        _TestIFFTBase.setup_method.__dict__.__setitem__('stypy_param_names_list', [])
        _TestIFFTBase.setup_method.__dict__.__setitem__('stypy_varargs_param_name', None)
        _TestIFFTBase.setup_method.__dict__.__setitem__('stypy_kwargs_param_name', None)
        _TestIFFTBase.setup_method.__dict__.__setitem__('stypy_call_defaults', defaults)
        _TestIFFTBase.setup_method.__dict__.__setitem__('stypy_call_varargs', varargs)
        _TestIFFTBase.setup_method.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        _TestIFFTBase.setup_method.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, '_TestIFFTBase.setup_method', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'setup_method', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'setup_method(...)' code ##################

        
        # Call to seed(...): (line 223)
        # Processing the call arguments (line 223)
        int_19842 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 223, 23), 'int')
        # Processing the call keyword arguments (line 223)
        kwargs_19843 = {}
        # Getting the type of 'np' (line 223)
        np_19839 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 223, 8), 'np', False)
        # Obtaining the member 'random' of a type (line 223)
        random_19840 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 223, 8), np_19839, 'random')
        # Obtaining the member 'seed' of a type (line 223)
        seed_19841 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 223, 8), random_19840, 'seed')
        # Calling seed(args, kwargs) (line 223)
        seed_call_result_19844 = invoke(stypy.reporting.localization.Localization(__file__, 223, 8), seed_19841, *[int_19842], **kwargs_19843)
        
        
        # ################# End of 'setup_method(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'setup_method' in the type store
        # Getting the type of 'stypy_return_type' (line 222)
        stypy_return_type_19845 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 222, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_19845)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'setup_method'
        return stypy_return_type_19845


    @norecursion
    def test_definition(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_definition'
        module_type_store = module_type_store.open_function_context('test_definition', 225, 4, False)
        # Assigning a type to the variable 'self' (line 226)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 226, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        _TestIFFTBase.test_definition.__dict__.__setitem__('stypy_localization', localization)
        _TestIFFTBase.test_definition.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        _TestIFFTBase.test_definition.__dict__.__setitem__('stypy_type_store', module_type_store)
        _TestIFFTBase.test_definition.__dict__.__setitem__('stypy_function_name', '_TestIFFTBase.test_definition')
        _TestIFFTBase.test_definition.__dict__.__setitem__('stypy_param_names_list', [])
        _TestIFFTBase.test_definition.__dict__.__setitem__('stypy_varargs_param_name', None)
        _TestIFFTBase.test_definition.__dict__.__setitem__('stypy_kwargs_param_name', None)
        _TestIFFTBase.test_definition.__dict__.__setitem__('stypy_call_defaults', defaults)
        _TestIFFTBase.test_definition.__dict__.__setitem__('stypy_call_varargs', varargs)
        _TestIFFTBase.test_definition.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        _TestIFFTBase.test_definition.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, '_TestIFFTBase.test_definition', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_definition', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_definition(...)' code ##################

        
        # Assigning a Call to a Name (line 226):
        
        # Call to array(...): (line 226)
        # Processing the call arguments (line 226)
        
        # Obtaining an instance of the builtin type 'list' (line 226)
        list_19848 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 226, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 226)
        # Adding element type (line 226)
        int_19849 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 226, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 226, 21), list_19848, int_19849)
        # Adding element type (line 226)
        int_19850 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 226, 24), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 226, 21), list_19848, int_19850)
        # Adding element type (line 226)
        int_19851 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 226, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 226, 21), list_19848, int_19851)
        # Adding element type (line 226)
        int_19852 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 226, 28), 'int')
        complex_19853 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 226, 30), 'complex')
        # Applying the binary operator '+' (line 226)
        result_add_19854 = python_operator(stypy.reporting.localization.Localization(__file__, 226, 28), '+', int_19852, complex_19853)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 226, 21), list_19848, result_add_19854)
        # Adding element type (line 226)
        int_19855 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 226, 33), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 226, 21), list_19848, int_19855)
        # Adding element type (line 226)
        int_19856 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 226, 35), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 226, 21), list_19848, int_19856)
        # Adding element type (line 226)
        int_19857 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 226, 37), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 226, 21), list_19848, int_19857)
        # Adding element type (line 226)
        int_19858 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 226, 39), 'int')
        complex_19859 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 226, 41), 'complex')
        # Applying the binary operator '+' (line 226)
        result_add_19860 = python_operator(stypy.reporting.localization.Localization(__file__, 226, 39), '+', int_19858, complex_19859)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 226, 21), list_19848, result_add_19860)
        
        # Getting the type of 'self' (line 226)
        self_19861 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 226, 46), 'self', False)
        # Obtaining the member 'cdt' of a type (line 226)
        cdt_19862 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 226, 46), self_19861, 'cdt')
        # Processing the call keyword arguments (line 226)
        kwargs_19863 = {}
        # Getting the type of 'np' (line 226)
        np_19846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 226, 12), 'np', False)
        # Obtaining the member 'array' of a type (line 226)
        array_19847 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 226, 12), np_19846, 'array')
        # Calling array(args, kwargs) (line 226)
        array_call_result_19864 = invoke(stypy.reporting.localization.Localization(__file__, 226, 12), array_19847, *[list_19848, cdt_19862], **kwargs_19863)
        
        # Assigning a type to the variable 'x' (line 226)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 226, 8), 'x', array_call_result_19864)
        
        # Assigning a Call to a Name (line 227):
        
        # Call to ifft(...): (line 227)
        # Processing the call arguments (line 227)
        # Getting the type of 'x' (line 227)
        x_19866 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 227, 17), 'x', False)
        # Processing the call keyword arguments (line 227)
        kwargs_19867 = {}
        # Getting the type of 'ifft' (line 227)
        ifft_19865 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 227, 12), 'ifft', False)
        # Calling ifft(args, kwargs) (line 227)
        ifft_call_result_19868 = invoke(stypy.reporting.localization.Localization(__file__, 227, 12), ifft_19865, *[x_19866], **kwargs_19867)
        
        # Assigning a type to the variable 'y' (line 227)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 227, 8), 'y', ifft_call_result_19868)
        
        # Assigning a Call to a Name (line 228):
        
        # Call to direct_idft(...): (line 228)
        # Processing the call arguments (line 228)
        # Getting the type of 'x' (line 228)
        x_19870 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 228, 25), 'x', False)
        # Processing the call keyword arguments (line 228)
        kwargs_19871 = {}
        # Getting the type of 'direct_idft' (line 228)
        direct_idft_19869 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 228, 13), 'direct_idft', False)
        # Calling direct_idft(args, kwargs) (line 228)
        direct_idft_call_result_19872 = invoke(stypy.reporting.localization.Localization(__file__, 228, 13), direct_idft_19869, *[x_19870], **kwargs_19871)
        
        # Assigning a type to the variable 'y1' (line 228)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 228, 8), 'y1', direct_idft_call_result_19872)
        
        # Call to assert_equal(...): (line 229)
        # Processing the call arguments (line 229)
        # Getting the type of 'y' (line 229)
        y_19874 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 229, 21), 'y', False)
        # Obtaining the member 'dtype' of a type (line 229)
        dtype_19875 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 229, 21), y_19874, 'dtype')
        # Getting the type of 'self' (line 229)
        self_19876 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 229, 30), 'self', False)
        # Obtaining the member 'cdt' of a type (line 229)
        cdt_19877 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 229, 30), self_19876, 'cdt')
        # Processing the call keyword arguments (line 229)
        kwargs_19878 = {}
        # Getting the type of 'assert_equal' (line 229)
        assert_equal_19873 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 229, 8), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 229)
        assert_equal_call_result_19879 = invoke(stypy.reporting.localization.Localization(__file__, 229, 8), assert_equal_19873, *[dtype_19875, cdt_19877], **kwargs_19878)
        
        
        # Call to assert_array_almost_equal(...): (line 230)
        # Processing the call arguments (line 230)
        # Getting the type of 'y' (line 230)
        y_19881 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 230, 34), 'y', False)
        # Getting the type of 'y1' (line 230)
        y1_19882 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 230, 36), 'y1', False)
        # Processing the call keyword arguments (line 230)
        kwargs_19883 = {}
        # Getting the type of 'assert_array_almost_equal' (line 230)
        assert_array_almost_equal_19880 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 230, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 230)
        assert_array_almost_equal_call_result_19884 = invoke(stypy.reporting.localization.Localization(__file__, 230, 8), assert_array_almost_equal_19880, *[y_19881, y1_19882], **kwargs_19883)
        
        
        # Assigning a Call to a Name (line 232):
        
        # Call to array(...): (line 232)
        # Processing the call arguments (line 232)
        
        # Obtaining an instance of the builtin type 'list' (line 232)
        list_19887 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 232, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 232)
        # Adding element type (line 232)
        int_19888 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 232, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 232, 21), list_19887, int_19888)
        # Adding element type (line 232)
        int_19889 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 232, 24), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 232, 21), list_19887, int_19889)
        # Adding element type (line 232)
        int_19890 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 232, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 232, 21), list_19887, int_19890)
        # Adding element type (line 232)
        int_19891 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 232, 28), 'int')
        complex_19892 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 232, 30), 'complex')
        # Applying the binary operator '+' (line 232)
        result_add_19893 = python_operator(stypy.reporting.localization.Localization(__file__, 232, 28), '+', int_19891, complex_19892)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 232, 21), list_19887, result_add_19893)
        # Adding element type (line 232)
        int_19894 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 232, 33), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 232, 21), list_19887, int_19894)
        
        # Getting the type of 'self' (line 232)
        self_19895 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 232, 37), 'self', False)
        # Obtaining the member 'cdt' of a type (line 232)
        cdt_19896 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 232, 37), self_19895, 'cdt')
        # Processing the call keyword arguments (line 232)
        kwargs_19897 = {}
        # Getting the type of 'np' (line 232)
        np_19885 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 232, 12), 'np', False)
        # Obtaining the member 'array' of a type (line 232)
        array_19886 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 232, 12), np_19885, 'array')
        # Calling array(args, kwargs) (line 232)
        array_call_result_19898 = invoke(stypy.reporting.localization.Localization(__file__, 232, 12), array_19886, *[list_19887, cdt_19896], **kwargs_19897)
        
        # Assigning a type to the variable 'x' (line 232)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 232, 8), 'x', array_call_result_19898)
        
        # Call to assert_array_almost_equal(...): (line 233)
        # Processing the call arguments (line 233)
        
        # Call to ifft(...): (line 233)
        # Processing the call arguments (line 233)
        # Getting the type of 'x' (line 233)
        x_19901 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 233, 39), 'x', False)
        # Processing the call keyword arguments (line 233)
        kwargs_19902 = {}
        # Getting the type of 'ifft' (line 233)
        ifft_19900 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 233, 34), 'ifft', False)
        # Calling ifft(args, kwargs) (line 233)
        ifft_call_result_19903 = invoke(stypy.reporting.localization.Localization(__file__, 233, 34), ifft_19900, *[x_19901], **kwargs_19902)
        
        
        # Call to direct_idft(...): (line 233)
        # Processing the call arguments (line 233)
        # Getting the type of 'x' (line 233)
        x_19905 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 233, 54), 'x', False)
        # Processing the call keyword arguments (line 233)
        kwargs_19906 = {}
        # Getting the type of 'direct_idft' (line 233)
        direct_idft_19904 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 233, 42), 'direct_idft', False)
        # Calling direct_idft(args, kwargs) (line 233)
        direct_idft_call_result_19907 = invoke(stypy.reporting.localization.Localization(__file__, 233, 42), direct_idft_19904, *[x_19905], **kwargs_19906)
        
        # Processing the call keyword arguments (line 233)
        kwargs_19908 = {}
        # Getting the type of 'assert_array_almost_equal' (line 233)
        assert_array_almost_equal_19899 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 233, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 233)
        assert_array_almost_equal_call_result_19909 = invoke(stypy.reporting.localization.Localization(__file__, 233, 8), assert_array_almost_equal_19899, *[ifft_call_result_19903, direct_idft_call_result_19907], **kwargs_19908)
        
        
        # ################# End of 'test_definition(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_definition' in the type store
        # Getting the type of 'stypy_return_type' (line 225)
        stypy_return_type_19910 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 225, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_19910)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_definition'
        return stypy_return_type_19910


    @norecursion
    def test_definition_real(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_definition_real'
        module_type_store = module_type_store.open_function_context('test_definition_real', 235, 4, False)
        # Assigning a type to the variable 'self' (line 236)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 236, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        _TestIFFTBase.test_definition_real.__dict__.__setitem__('stypy_localization', localization)
        _TestIFFTBase.test_definition_real.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        _TestIFFTBase.test_definition_real.__dict__.__setitem__('stypy_type_store', module_type_store)
        _TestIFFTBase.test_definition_real.__dict__.__setitem__('stypy_function_name', '_TestIFFTBase.test_definition_real')
        _TestIFFTBase.test_definition_real.__dict__.__setitem__('stypy_param_names_list', [])
        _TestIFFTBase.test_definition_real.__dict__.__setitem__('stypy_varargs_param_name', None)
        _TestIFFTBase.test_definition_real.__dict__.__setitem__('stypy_kwargs_param_name', None)
        _TestIFFTBase.test_definition_real.__dict__.__setitem__('stypy_call_defaults', defaults)
        _TestIFFTBase.test_definition_real.__dict__.__setitem__('stypy_call_varargs', varargs)
        _TestIFFTBase.test_definition_real.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        _TestIFFTBase.test_definition_real.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, '_TestIFFTBase.test_definition_real', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_definition_real', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_definition_real(...)' code ##################

        
        # Assigning a Call to a Name (line 236):
        
        # Call to array(...): (line 236)
        # Processing the call arguments (line 236)
        
        # Obtaining an instance of the builtin type 'list' (line 236)
        list_19913 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 236, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 236)
        # Adding element type (line 236)
        int_19914 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 236, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 236, 21), list_19913, int_19914)
        # Adding element type (line 236)
        int_19915 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 236, 24), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 236, 21), list_19913, int_19915)
        # Adding element type (line 236)
        int_19916 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 236, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 236, 21), list_19913, int_19916)
        # Adding element type (line 236)
        int_19917 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 236, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 236, 21), list_19913, int_19917)
        # Adding element type (line 236)
        int_19918 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 236, 30), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 236, 21), list_19913, int_19918)
        # Adding element type (line 236)
        int_19919 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 236, 32), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 236, 21), list_19913, int_19919)
        # Adding element type (line 236)
        int_19920 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 236, 34), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 236, 21), list_19913, int_19920)
        # Adding element type (line 236)
        int_19921 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 236, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 236, 21), list_19913, int_19921)
        
        # Getting the type of 'self' (line 236)
        self_19922 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 236, 40), 'self', False)
        # Obtaining the member 'rdt' of a type (line 236)
        rdt_19923 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 236, 40), self_19922, 'rdt')
        # Processing the call keyword arguments (line 236)
        kwargs_19924 = {}
        # Getting the type of 'np' (line 236)
        np_19911 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 236, 12), 'np', False)
        # Obtaining the member 'array' of a type (line 236)
        array_19912 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 236, 12), np_19911, 'array')
        # Calling array(args, kwargs) (line 236)
        array_call_result_19925 = invoke(stypy.reporting.localization.Localization(__file__, 236, 12), array_19912, *[list_19913, rdt_19923], **kwargs_19924)
        
        # Assigning a type to the variable 'x' (line 236)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 236, 8), 'x', array_call_result_19925)
        
        # Assigning a Call to a Name (line 237):
        
        # Call to ifft(...): (line 237)
        # Processing the call arguments (line 237)
        # Getting the type of 'x' (line 237)
        x_19927 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 237, 17), 'x', False)
        # Processing the call keyword arguments (line 237)
        kwargs_19928 = {}
        # Getting the type of 'ifft' (line 237)
        ifft_19926 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 237, 12), 'ifft', False)
        # Calling ifft(args, kwargs) (line 237)
        ifft_call_result_19929 = invoke(stypy.reporting.localization.Localization(__file__, 237, 12), ifft_19926, *[x_19927], **kwargs_19928)
        
        # Assigning a type to the variable 'y' (line 237)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 237, 8), 'y', ifft_call_result_19929)
        
        # Call to assert_equal(...): (line 238)
        # Processing the call arguments (line 238)
        # Getting the type of 'y' (line 238)
        y_19931 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 238, 21), 'y', False)
        # Obtaining the member 'dtype' of a type (line 238)
        dtype_19932 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 238, 21), y_19931, 'dtype')
        # Getting the type of 'self' (line 238)
        self_19933 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 238, 30), 'self', False)
        # Obtaining the member 'cdt' of a type (line 238)
        cdt_19934 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 238, 30), self_19933, 'cdt')
        # Processing the call keyword arguments (line 238)
        kwargs_19935 = {}
        # Getting the type of 'assert_equal' (line 238)
        assert_equal_19930 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 238, 8), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 238)
        assert_equal_call_result_19936 = invoke(stypy.reporting.localization.Localization(__file__, 238, 8), assert_equal_19930, *[dtype_19932, cdt_19934], **kwargs_19935)
        
        
        # Assigning a Call to a Name (line 239):
        
        # Call to direct_idft(...): (line 239)
        # Processing the call arguments (line 239)
        # Getting the type of 'x' (line 239)
        x_19938 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 239, 25), 'x', False)
        # Processing the call keyword arguments (line 239)
        kwargs_19939 = {}
        # Getting the type of 'direct_idft' (line 239)
        direct_idft_19937 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 239, 13), 'direct_idft', False)
        # Calling direct_idft(args, kwargs) (line 239)
        direct_idft_call_result_19940 = invoke(stypy.reporting.localization.Localization(__file__, 239, 13), direct_idft_19937, *[x_19938], **kwargs_19939)
        
        # Assigning a type to the variable 'y1' (line 239)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 239, 8), 'y1', direct_idft_call_result_19940)
        
        # Call to assert_array_almost_equal(...): (line 240)
        # Processing the call arguments (line 240)
        # Getting the type of 'y' (line 240)
        y_19942 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 240, 34), 'y', False)
        # Getting the type of 'y1' (line 240)
        y1_19943 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 240, 36), 'y1', False)
        # Processing the call keyword arguments (line 240)
        kwargs_19944 = {}
        # Getting the type of 'assert_array_almost_equal' (line 240)
        assert_array_almost_equal_19941 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 240, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 240)
        assert_array_almost_equal_call_result_19945 = invoke(stypy.reporting.localization.Localization(__file__, 240, 8), assert_array_almost_equal_19941, *[y_19942, y1_19943], **kwargs_19944)
        
        
        # Assigning a Call to a Name (line 242):
        
        # Call to array(...): (line 242)
        # Processing the call arguments (line 242)
        
        # Obtaining an instance of the builtin type 'list' (line 242)
        list_19948 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 242, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 242)
        # Adding element type (line 242)
        int_19949 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 242, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 242, 21), list_19948, int_19949)
        # Adding element type (line 242)
        int_19950 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 242, 24), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 242, 21), list_19948, int_19950)
        # Adding element type (line 242)
        int_19951 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 242, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 242, 21), list_19948, int_19951)
        # Adding element type (line 242)
        int_19952 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 242, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 242, 21), list_19948, int_19952)
        # Adding element type (line 242)
        int_19953 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 242, 30), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 242, 21), list_19948, int_19953)
        
        # Processing the call keyword arguments (line 242)
        # Getting the type of 'self' (line 242)
        self_19954 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 242, 40), 'self', False)
        # Obtaining the member 'rdt' of a type (line 242)
        rdt_19955 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 242, 40), self_19954, 'rdt')
        keyword_19956 = rdt_19955
        kwargs_19957 = {'dtype': keyword_19956}
        # Getting the type of 'np' (line 242)
        np_19946 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 242, 12), 'np', False)
        # Obtaining the member 'array' of a type (line 242)
        array_19947 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 242, 12), np_19946, 'array')
        # Calling array(args, kwargs) (line 242)
        array_call_result_19958 = invoke(stypy.reporting.localization.Localization(__file__, 242, 12), array_19947, *[list_19948], **kwargs_19957)
        
        # Assigning a type to the variable 'x' (line 242)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 242, 8), 'x', array_call_result_19958)
        
        # Call to assert_equal(...): (line 243)
        # Processing the call arguments (line 243)
        # Getting the type of 'y' (line 243)
        y_19960 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 243, 21), 'y', False)
        # Obtaining the member 'dtype' of a type (line 243)
        dtype_19961 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 243, 21), y_19960, 'dtype')
        # Getting the type of 'self' (line 243)
        self_19962 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 243, 30), 'self', False)
        # Obtaining the member 'cdt' of a type (line 243)
        cdt_19963 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 243, 30), self_19962, 'cdt')
        # Processing the call keyword arguments (line 243)
        kwargs_19964 = {}
        # Getting the type of 'assert_equal' (line 243)
        assert_equal_19959 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 243, 8), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 243)
        assert_equal_call_result_19965 = invoke(stypy.reporting.localization.Localization(__file__, 243, 8), assert_equal_19959, *[dtype_19961, cdt_19963], **kwargs_19964)
        
        
        # Call to assert_array_almost_equal(...): (line 244)
        # Processing the call arguments (line 244)
        
        # Call to ifft(...): (line 244)
        # Processing the call arguments (line 244)
        # Getting the type of 'x' (line 244)
        x_19968 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 244, 39), 'x', False)
        # Processing the call keyword arguments (line 244)
        kwargs_19969 = {}
        # Getting the type of 'ifft' (line 244)
        ifft_19967 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 244, 34), 'ifft', False)
        # Calling ifft(args, kwargs) (line 244)
        ifft_call_result_19970 = invoke(stypy.reporting.localization.Localization(__file__, 244, 34), ifft_19967, *[x_19968], **kwargs_19969)
        
        
        # Call to direct_idft(...): (line 244)
        # Processing the call arguments (line 244)
        # Getting the type of 'x' (line 244)
        x_19972 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 244, 54), 'x', False)
        # Processing the call keyword arguments (line 244)
        kwargs_19973 = {}
        # Getting the type of 'direct_idft' (line 244)
        direct_idft_19971 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 244, 42), 'direct_idft', False)
        # Calling direct_idft(args, kwargs) (line 244)
        direct_idft_call_result_19974 = invoke(stypy.reporting.localization.Localization(__file__, 244, 42), direct_idft_19971, *[x_19972], **kwargs_19973)
        
        # Processing the call keyword arguments (line 244)
        kwargs_19975 = {}
        # Getting the type of 'assert_array_almost_equal' (line 244)
        assert_array_almost_equal_19966 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 244, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 244)
        assert_array_almost_equal_call_result_19976 = invoke(stypy.reporting.localization.Localization(__file__, 244, 8), assert_array_almost_equal_19966, *[ifft_call_result_19970, direct_idft_call_result_19974], **kwargs_19975)
        
        
        # ################# End of 'test_definition_real(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_definition_real' in the type store
        # Getting the type of 'stypy_return_type' (line 235)
        stypy_return_type_19977 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 235, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_19977)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_definition_real'
        return stypy_return_type_19977


    @norecursion
    def test_djbfft(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_djbfft'
        module_type_store = module_type_store.open_function_context('test_djbfft', 246, 4, False)
        # Assigning a type to the variable 'self' (line 247)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 247, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        _TestIFFTBase.test_djbfft.__dict__.__setitem__('stypy_localization', localization)
        _TestIFFTBase.test_djbfft.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        _TestIFFTBase.test_djbfft.__dict__.__setitem__('stypy_type_store', module_type_store)
        _TestIFFTBase.test_djbfft.__dict__.__setitem__('stypy_function_name', '_TestIFFTBase.test_djbfft')
        _TestIFFTBase.test_djbfft.__dict__.__setitem__('stypy_param_names_list', [])
        _TestIFFTBase.test_djbfft.__dict__.__setitem__('stypy_varargs_param_name', None)
        _TestIFFTBase.test_djbfft.__dict__.__setitem__('stypy_kwargs_param_name', None)
        _TestIFFTBase.test_djbfft.__dict__.__setitem__('stypy_call_defaults', defaults)
        _TestIFFTBase.test_djbfft.__dict__.__setitem__('stypy_call_varargs', varargs)
        _TestIFFTBase.test_djbfft.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        _TestIFFTBase.test_djbfft.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, '_TestIFFTBase.test_djbfft', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_djbfft', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_djbfft(...)' code ##################

        
        
        # Call to range(...): (line 247)
        # Processing the call arguments (line 247)
        int_19979 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 247, 23), 'int')
        int_19980 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 247, 25), 'int')
        # Processing the call keyword arguments (line 247)
        kwargs_19981 = {}
        # Getting the type of 'range' (line 247)
        range_19978 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 247, 17), 'range', False)
        # Calling range(args, kwargs) (line 247)
        range_call_result_19982 = invoke(stypy.reporting.localization.Localization(__file__, 247, 17), range_19978, *[int_19979, int_19980], **kwargs_19981)
        
        # Testing the type of a for loop iterable (line 247)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 247, 8), range_call_result_19982)
        # Getting the type of the for loop variable (line 247)
        for_loop_var_19983 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 247, 8), range_call_result_19982)
        # Assigning a type to the variable 'i' (line 247)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 247, 8), 'i', for_loop_var_19983)
        # SSA begins for a for statement (line 247)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a BinOp to a Name (line 248):
        int_19984 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 248, 16), 'int')
        # Getting the type of 'i' (line 248)
        i_19985 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 248, 19), 'i')
        # Applying the binary operator '**' (line 248)
        result_pow_19986 = python_operator(stypy.reporting.localization.Localization(__file__, 248, 16), '**', int_19984, i_19985)
        
        # Assigning a type to the variable 'n' (line 248)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 248, 12), 'n', result_pow_19986)
        
        # Assigning a Call to a Name (line 249):
        
        # Call to list(...): (line 249)
        # Processing the call arguments (line 249)
        
        # Call to range(...): (line 249)
        # Processing the call arguments (line 249)
        # Getting the type of 'n' (line 249)
        n_19989 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 249, 27), 'n', False)
        # Processing the call keyword arguments (line 249)
        kwargs_19990 = {}
        # Getting the type of 'range' (line 249)
        range_19988 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 249, 21), 'range', False)
        # Calling range(args, kwargs) (line 249)
        range_call_result_19991 = invoke(stypy.reporting.localization.Localization(__file__, 249, 21), range_19988, *[n_19989], **kwargs_19990)
        
        # Processing the call keyword arguments (line 249)
        kwargs_19992 = {}
        # Getting the type of 'list' (line 249)
        list_19987 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 249, 16), 'list', False)
        # Calling list(args, kwargs) (line 249)
        list_call_result_19993 = invoke(stypy.reporting.localization.Localization(__file__, 249, 16), list_19987, *[range_call_result_19991], **kwargs_19992)
        
        # Assigning a type to the variable 'x' (line 249)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 249, 12), 'x', list_call_result_19993)
        
        # Assigning a Call to a Name (line 250):
        
        # Call to zfft(...): (line 250)
        # Processing the call arguments (line 250)
        # Getting the type of 'x' (line 250)
        x_19996 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 250, 29), 'x', False)
        # Processing the call keyword arguments (line 250)
        int_19997 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 250, 41), 'int')
        keyword_19998 = int_19997
        kwargs_19999 = {'direction': keyword_19998}
        # Getting the type of 'fftpack' (line 250)
        fftpack_19994 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 250, 16), 'fftpack', False)
        # Obtaining the member 'zfft' of a type (line 250)
        zfft_19995 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 250, 16), fftpack_19994, 'zfft')
        # Calling zfft(args, kwargs) (line 250)
        zfft_call_result_20000 = invoke(stypy.reporting.localization.Localization(__file__, 250, 16), zfft_19995, *[x_19996], **kwargs_19999)
        
        # Assigning a type to the variable 'y' (line 250)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 250, 12), 'y', zfft_call_result_20000)
        
        # Assigning a Call to a Name (line 251):
        
        # Call to ifft(...): (line 251)
        # Processing the call arguments (line 251)
        # Getting the type of 'x' (line 251)
        x_20004 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 251, 32), 'x', False)
        # Processing the call keyword arguments (line 251)
        kwargs_20005 = {}
        # Getting the type of 'numpy' (line 251)
        numpy_20001 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 251, 17), 'numpy', False)
        # Obtaining the member 'fft' of a type (line 251)
        fft_20002 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 251, 17), numpy_20001, 'fft')
        # Obtaining the member 'ifft' of a type (line 251)
        ifft_20003 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 251, 17), fft_20002, 'ifft')
        # Calling ifft(args, kwargs) (line 251)
        ifft_call_result_20006 = invoke(stypy.reporting.localization.Localization(__file__, 251, 17), ifft_20003, *[x_20004], **kwargs_20005)
        
        # Assigning a type to the variable 'y2' (line 251)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 251, 12), 'y2', ifft_call_result_20006)
        
        # Call to assert_array_almost_equal(...): (line 252)
        # Processing the call arguments (line 252)
        # Getting the type of 'y' (line 252)
        y_20008 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 252, 38), 'y', False)
        # Getting the type of 'y2' (line 252)
        y2_20009 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 252, 40), 'y2', False)
        # Processing the call keyword arguments (line 252)
        kwargs_20010 = {}
        # Getting the type of 'assert_array_almost_equal' (line 252)
        assert_array_almost_equal_20007 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 252, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 252)
        assert_array_almost_equal_call_result_20011 = invoke(stypy.reporting.localization.Localization(__file__, 252, 12), assert_array_almost_equal_20007, *[y_20008, y2_20009], **kwargs_20010)
        
        
        # Assigning a Call to a Name (line 253):
        
        # Call to zrfft(...): (line 253)
        # Processing the call arguments (line 253)
        # Getting the type of 'x' (line 253)
        x_20014 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 253, 30), 'x', False)
        # Processing the call keyword arguments (line 253)
        int_20015 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 253, 42), 'int')
        keyword_20016 = int_20015
        kwargs_20017 = {'direction': keyword_20016}
        # Getting the type of 'fftpack' (line 253)
        fftpack_20012 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 253, 16), 'fftpack', False)
        # Obtaining the member 'zrfft' of a type (line 253)
        zrfft_20013 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 253, 16), fftpack_20012, 'zrfft')
        # Calling zrfft(args, kwargs) (line 253)
        zrfft_call_result_20018 = invoke(stypy.reporting.localization.Localization(__file__, 253, 16), zrfft_20013, *[x_20014], **kwargs_20017)
        
        # Assigning a type to the variable 'y' (line 253)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 253, 12), 'y', zrfft_call_result_20018)
        
        # Call to assert_array_almost_equal(...): (line 254)
        # Processing the call arguments (line 254)
        # Getting the type of 'y' (line 254)
        y_20020 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 254, 38), 'y', False)
        # Getting the type of 'y2' (line 254)
        y2_20021 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 254, 40), 'y2', False)
        # Processing the call keyword arguments (line 254)
        kwargs_20022 = {}
        # Getting the type of 'assert_array_almost_equal' (line 254)
        assert_array_almost_equal_20019 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 254, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 254)
        assert_array_almost_equal_call_result_20023 = invoke(stypy.reporting.localization.Localization(__file__, 254, 12), assert_array_almost_equal_20019, *[y_20020, y2_20021], **kwargs_20022)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_djbfft(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_djbfft' in the type store
        # Getting the type of 'stypy_return_type' (line 246)
        stypy_return_type_20024 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 246, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_20024)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_djbfft'
        return stypy_return_type_20024


    @norecursion
    def test_random_complex(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_random_complex'
        module_type_store = module_type_store.open_function_context('test_random_complex', 256, 4, False)
        # Assigning a type to the variable 'self' (line 257)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 257, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        _TestIFFTBase.test_random_complex.__dict__.__setitem__('stypy_localization', localization)
        _TestIFFTBase.test_random_complex.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        _TestIFFTBase.test_random_complex.__dict__.__setitem__('stypy_type_store', module_type_store)
        _TestIFFTBase.test_random_complex.__dict__.__setitem__('stypy_function_name', '_TestIFFTBase.test_random_complex')
        _TestIFFTBase.test_random_complex.__dict__.__setitem__('stypy_param_names_list', [])
        _TestIFFTBase.test_random_complex.__dict__.__setitem__('stypy_varargs_param_name', None)
        _TestIFFTBase.test_random_complex.__dict__.__setitem__('stypy_kwargs_param_name', None)
        _TestIFFTBase.test_random_complex.__dict__.__setitem__('stypy_call_defaults', defaults)
        _TestIFFTBase.test_random_complex.__dict__.__setitem__('stypy_call_varargs', varargs)
        _TestIFFTBase.test_random_complex.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        _TestIFFTBase.test_random_complex.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, '_TestIFFTBase.test_random_complex', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_random_complex', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_random_complex(...)' code ##################

        
        
        # Obtaining an instance of the builtin type 'list' (line 257)
        list_20025 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 257, 20), 'list')
        # Adding type elements to the builtin type 'list' instance (line 257)
        # Adding element type (line 257)
        int_20026 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 257, 21), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 257, 20), list_20025, int_20026)
        # Adding element type (line 257)
        int_20027 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 257, 23), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 257, 20), list_20025, int_20027)
        # Adding element type (line 257)
        int_20028 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 257, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 257, 20), list_20025, int_20028)
        # Adding element type (line 257)
        int_20029 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 257, 30), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 257, 20), list_20025, int_20029)
        # Adding element type (line 257)
        int_20030 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 257, 34), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 257, 20), list_20025, int_20030)
        # Adding element type (line 257)
        int_20031 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 257, 38), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 257, 20), list_20025, int_20031)
        # Adding element type (line 257)
        int_20032 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 257, 41), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 257, 20), list_20025, int_20032)
        # Adding element type (line 257)
        int_20033 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 257, 45), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 257, 20), list_20025, int_20033)
        # Adding element type (line 257)
        int_20034 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 257, 49), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 257, 20), list_20025, int_20034)
        
        # Testing the type of a for loop iterable (line 257)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 257, 8), list_20025)
        # Getting the type of the for loop variable (line 257)
        for_loop_var_20035 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 257, 8), list_20025)
        # Assigning a type to the variable 'size' (line 257)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 257, 8), 'size', for_loop_var_20035)
        # SSA begins for a for statement (line 257)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 258):
        
        # Call to astype(...): (line 258)
        # Processing the call arguments (line 258)
        # Getting the type of 'self' (line 258)
        self_20042 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 258, 38), 'self', False)
        # Obtaining the member 'cdt' of a type (line 258)
        cdt_20043 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 258, 38), self_20042, 'cdt')
        # Processing the call keyword arguments (line 258)
        kwargs_20044 = {}
        
        # Call to random(...): (line 258)
        # Processing the call arguments (line 258)
        
        # Obtaining an instance of the builtin type 'list' (line 258)
        list_20037 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 258, 23), 'list')
        # Adding type elements to the builtin type 'list' instance (line 258)
        # Adding element type (line 258)
        # Getting the type of 'size' (line 258)
        size_20038 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 258, 24), 'size', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 258, 23), list_20037, size_20038)
        
        # Processing the call keyword arguments (line 258)
        kwargs_20039 = {}
        # Getting the type of 'random' (line 258)
        random_20036 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 258, 16), 'random', False)
        # Calling random(args, kwargs) (line 258)
        random_call_result_20040 = invoke(stypy.reporting.localization.Localization(__file__, 258, 16), random_20036, *[list_20037], **kwargs_20039)
        
        # Obtaining the member 'astype' of a type (line 258)
        astype_20041 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 258, 16), random_call_result_20040, 'astype')
        # Calling astype(args, kwargs) (line 258)
        astype_call_result_20045 = invoke(stypy.reporting.localization.Localization(__file__, 258, 16), astype_20041, *[cdt_20043], **kwargs_20044)
        
        # Assigning a type to the variable 'x' (line 258)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 258, 12), 'x', astype_call_result_20045)
        
        # Assigning a BinOp to a Name (line 259):
        
        # Call to astype(...): (line 259)
        # Processing the call arguments (line 259)
        # Getting the type of 'self' (line 259)
        self_20052 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 259, 38), 'self', False)
        # Obtaining the member 'cdt' of a type (line 259)
        cdt_20053 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 259, 38), self_20052, 'cdt')
        # Processing the call keyword arguments (line 259)
        kwargs_20054 = {}
        
        # Call to random(...): (line 259)
        # Processing the call arguments (line 259)
        
        # Obtaining an instance of the builtin type 'list' (line 259)
        list_20047 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 259, 23), 'list')
        # Adding type elements to the builtin type 'list' instance (line 259)
        # Adding element type (line 259)
        # Getting the type of 'size' (line 259)
        size_20048 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 259, 24), 'size', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 259, 23), list_20047, size_20048)
        
        # Processing the call keyword arguments (line 259)
        kwargs_20049 = {}
        # Getting the type of 'random' (line 259)
        random_20046 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 259, 16), 'random', False)
        # Calling random(args, kwargs) (line 259)
        random_call_result_20050 = invoke(stypy.reporting.localization.Localization(__file__, 259, 16), random_20046, *[list_20047], **kwargs_20049)
        
        # Obtaining the member 'astype' of a type (line 259)
        astype_20051 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 259, 16), random_call_result_20050, 'astype')
        # Calling astype(args, kwargs) (line 259)
        astype_call_result_20055 = invoke(stypy.reporting.localization.Localization(__file__, 259, 16), astype_20051, *[cdt_20053], **kwargs_20054)
        
        complex_20056 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 259, 50), 'complex')
        # Getting the type of 'x' (line 259)
        x_20057 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 259, 53), 'x')
        # Applying the binary operator '*' (line 259)
        result_mul_20058 = python_operator(stypy.reporting.localization.Localization(__file__, 259, 50), '*', complex_20056, x_20057)
        
        # Applying the binary operator '+' (line 259)
        result_add_20059 = python_operator(stypy.reporting.localization.Localization(__file__, 259, 16), '+', astype_call_result_20055, result_mul_20058)
        
        # Assigning a type to the variable 'x' (line 259)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 259, 12), 'x', result_add_20059)
        
        # Assigning a Call to a Name (line 260):
        
        # Call to ifft(...): (line 260)
        # Processing the call arguments (line 260)
        
        # Call to fft(...): (line 260)
        # Processing the call arguments (line 260)
        # Getting the type of 'x' (line 260)
        x_20062 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 260, 26), 'x', False)
        # Processing the call keyword arguments (line 260)
        kwargs_20063 = {}
        # Getting the type of 'fft' (line 260)
        fft_20061 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 260, 22), 'fft', False)
        # Calling fft(args, kwargs) (line 260)
        fft_call_result_20064 = invoke(stypy.reporting.localization.Localization(__file__, 260, 22), fft_20061, *[x_20062], **kwargs_20063)
        
        # Processing the call keyword arguments (line 260)
        kwargs_20065 = {}
        # Getting the type of 'ifft' (line 260)
        ifft_20060 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 260, 17), 'ifft', False)
        # Calling ifft(args, kwargs) (line 260)
        ifft_call_result_20066 = invoke(stypy.reporting.localization.Localization(__file__, 260, 17), ifft_20060, *[fft_call_result_20064], **kwargs_20065)
        
        # Assigning a type to the variable 'y1' (line 260)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 260, 12), 'y1', ifft_call_result_20066)
        
        # Assigning a Call to a Name (line 261):
        
        # Call to fft(...): (line 261)
        # Processing the call arguments (line 261)
        
        # Call to ifft(...): (line 261)
        # Processing the call arguments (line 261)
        # Getting the type of 'x' (line 261)
        x_20069 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 261, 26), 'x', False)
        # Processing the call keyword arguments (line 261)
        kwargs_20070 = {}
        # Getting the type of 'ifft' (line 261)
        ifft_20068 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 261, 21), 'ifft', False)
        # Calling ifft(args, kwargs) (line 261)
        ifft_call_result_20071 = invoke(stypy.reporting.localization.Localization(__file__, 261, 21), ifft_20068, *[x_20069], **kwargs_20070)
        
        # Processing the call keyword arguments (line 261)
        kwargs_20072 = {}
        # Getting the type of 'fft' (line 261)
        fft_20067 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 261, 17), 'fft', False)
        # Calling fft(args, kwargs) (line 261)
        fft_call_result_20073 = invoke(stypy.reporting.localization.Localization(__file__, 261, 17), fft_20067, *[ifft_call_result_20071], **kwargs_20072)
        
        # Assigning a type to the variable 'y2' (line 261)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 261, 12), 'y2', fft_call_result_20073)
        
        # Call to assert_equal(...): (line 262)
        # Processing the call arguments (line 262)
        # Getting the type of 'y1' (line 262)
        y1_20075 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 262, 25), 'y1', False)
        # Obtaining the member 'dtype' of a type (line 262)
        dtype_20076 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 262, 25), y1_20075, 'dtype')
        # Getting the type of 'self' (line 262)
        self_20077 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 262, 35), 'self', False)
        # Obtaining the member 'cdt' of a type (line 262)
        cdt_20078 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 262, 35), self_20077, 'cdt')
        # Processing the call keyword arguments (line 262)
        kwargs_20079 = {}
        # Getting the type of 'assert_equal' (line 262)
        assert_equal_20074 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 262, 12), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 262)
        assert_equal_call_result_20080 = invoke(stypy.reporting.localization.Localization(__file__, 262, 12), assert_equal_20074, *[dtype_20076, cdt_20078], **kwargs_20079)
        
        
        # Call to assert_equal(...): (line 263)
        # Processing the call arguments (line 263)
        # Getting the type of 'y2' (line 263)
        y2_20082 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 263, 25), 'y2', False)
        # Obtaining the member 'dtype' of a type (line 263)
        dtype_20083 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 263, 25), y2_20082, 'dtype')
        # Getting the type of 'self' (line 263)
        self_20084 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 263, 35), 'self', False)
        # Obtaining the member 'cdt' of a type (line 263)
        cdt_20085 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 263, 35), self_20084, 'cdt')
        # Processing the call keyword arguments (line 263)
        kwargs_20086 = {}
        # Getting the type of 'assert_equal' (line 263)
        assert_equal_20081 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 263, 12), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 263)
        assert_equal_call_result_20087 = invoke(stypy.reporting.localization.Localization(__file__, 263, 12), assert_equal_20081, *[dtype_20083, cdt_20085], **kwargs_20086)
        
        
        # Call to assert_array_almost_equal(...): (line 264)
        # Processing the call arguments (line 264)
        # Getting the type of 'y1' (line 264)
        y1_20089 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 264, 38), 'y1', False)
        # Getting the type of 'x' (line 264)
        x_20090 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 264, 42), 'x', False)
        # Processing the call keyword arguments (line 264)
        kwargs_20091 = {}
        # Getting the type of 'assert_array_almost_equal' (line 264)
        assert_array_almost_equal_20088 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 264, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 264)
        assert_array_almost_equal_call_result_20092 = invoke(stypy.reporting.localization.Localization(__file__, 264, 12), assert_array_almost_equal_20088, *[y1_20089, x_20090], **kwargs_20091)
        
        
        # Call to assert_array_almost_equal(...): (line 265)
        # Processing the call arguments (line 265)
        # Getting the type of 'y2' (line 265)
        y2_20094 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 265, 38), 'y2', False)
        # Getting the type of 'x' (line 265)
        x_20095 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 265, 42), 'x', False)
        # Processing the call keyword arguments (line 265)
        kwargs_20096 = {}
        # Getting the type of 'assert_array_almost_equal' (line 265)
        assert_array_almost_equal_20093 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 265, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 265)
        assert_array_almost_equal_call_result_20097 = invoke(stypy.reporting.localization.Localization(__file__, 265, 12), assert_array_almost_equal_20093, *[y2_20094, x_20095], **kwargs_20096)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_random_complex(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_random_complex' in the type store
        # Getting the type of 'stypy_return_type' (line 256)
        stypy_return_type_20098 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 256, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_20098)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_random_complex'
        return stypy_return_type_20098


    @norecursion
    def test_random_real(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_random_real'
        module_type_store = module_type_store.open_function_context('test_random_real', 267, 4, False)
        # Assigning a type to the variable 'self' (line 268)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 268, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        _TestIFFTBase.test_random_real.__dict__.__setitem__('stypy_localization', localization)
        _TestIFFTBase.test_random_real.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        _TestIFFTBase.test_random_real.__dict__.__setitem__('stypy_type_store', module_type_store)
        _TestIFFTBase.test_random_real.__dict__.__setitem__('stypy_function_name', '_TestIFFTBase.test_random_real')
        _TestIFFTBase.test_random_real.__dict__.__setitem__('stypy_param_names_list', [])
        _TestIFFTBase.test_random_real.__dict__.__setitem__('stypy_varargs_param_name', None)
        _TestIFFTBase.test_random_real.__dict__.__setitem__('stypy_kwargs_param_name', None)
        _TestIFFTBase.test_random_real.__dict__.__setitem__('stypy_call_defaults', defaults)
        _TestIFFTBase.test_random_real.__dict__.__setitem__('stypy_call_varargs', varargs)
        _TestIFFTBase.test_random_real.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        _TestIFFTBase.test_random_real.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, '_TestIFFTBase.test_random_real', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_random_real', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_random_real(...)' code ##################

        
        
        # Obtaining an instance of the builtin type 'list' (line 268)
        list_20099 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 268, 20), 'list')
        # Adding type elements to the builtin type 'list' instance (line 268)
        # Adding element type (line 268)
        int_20100 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 268, 21), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 268, 20), list_20099, int_20100)
        # Adding element type (line 268)
        int_20101 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 268, 23), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 268, 20), list_20099, int_20101)
        # Adding element type (line 268)
        int_20102 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 268, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 268, 20), list_20099, int_20102)
        # Adding element type (line 268)
        int_20103 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 268, 30), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 268, 20), list_20099, int_20103)
        # Adding element type (line 268)
        int_20104 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 268, 34), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 268, 20), list_20099, int_20104)
        # Adding element type (line 268)
        int_20105 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 268, 38), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 268, 20), list_20099, int_20105)
        # Adding element type (line 268)
        int_20106 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 268, 41), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 268, 20), list_20099, int_20106)
        # Adding element type (line 268)
        int_20107 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 268, 45), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 268, 20), list_20099, int_20107)
        # Adding element type (line 268)
        int_20108 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 268, 49), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 268, 20), list_20099, int_20108)
        
        # Testing the type of a for loop iterable (line 268)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 268, 8), list_20099)
        # Getting the type of the for loop variable (line 268)
        for_loop_var_20109 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 268, 8), list_20099)
        # Assigning a type to the variable 'size' (line 268)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 268, 8), 'size', for_loop_var_20109)
        # SSA begins for a for statement (line 268)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 269):
        
        # Call to astype(...): (line 269)
        # Processing the call arguments (line 269)
        # Getting the type of 'self' (line 269)
        self_20116 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 269, 38), 'self', False)
        # Obtaining the member 'rdt' of a type (line 269)
        rdt_20117 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 269, 38), self_20116, 'rdt')
        # Processing the call keyword arguments (line 269)
        kwargs_20118 = {}
        
        # Call to random(...): (line 269)
        # Processing the call arguments (line 269)
        
        # Obtaining an instance of the builtin type 'list' (line 269)
        list_20111 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 269, 23), 'list')
        # Adding type elements to the builtin type 'list' instance (line 269)
        # Adding element type (line 269)
        # Getting the type of 'size' (line 269)
        size_20112 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 269, 24), 'size', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 269, 23), list_20111, size_20112)
        
        # Processing the call keyword arguments (line 269)
        kwargs_20113 = {}
        # Getting the type of 'random' (line 269)
        random_20110 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 269, 16), 'random', False)
        # Calling random(args, kwargs) (line 269)
        random_call_result_20114 = invoke(stypy.reporting.localization.Localization(__file__, 269, 16), random_20110, *[list_20111], **kwargs_20113)
        
        # Obtaining the member 'astype' of a type (line 269)
        astype_20115 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 269, 16), random_call_result_20114, 'astype')
        # Calling astype(args, kwargs) (line 269)
        astype_call_result_20119 = invoke(stypy.reporting.localization.Localization(__file__, 269, 16), astype_20115, *[rdt_20117], **kwargs_20118)
        
        # Assigning a type to the variable 'x' (line 269)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 269, 12), 'x', astype_call_result_20119)
        
        # Assigning a Call to a Name (line 270):
        
        # Call to ifft(...): (line 270)
        # Processing the call arguments (line 270)
        
        # Call to fft(...): (line 270)
        # Processing the call arguments (line 270)
        # Getting the type of 'x' (line 270)
        x_20122 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 270, 26), 'x', False)
        # Processing the call keyword arguments (line 270)
        kwargs_20123 = {}
        # Getting the type of 'fft' (line 270)
        fft_20121 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 270, 22), 'fft', False)
        # Calling fft(args, kwargs) (line 270)
        fft_call_result_20124 = invoke(stypy.reporting.localization.Localization(__file__, 270, 22), fft_20121, *[x_20122], **kwargs_20123)
        
        # Processing the call keyword arguments (line 270)
        kwargs_20125 = {}
        # Getting the type of 'ifft' (line 270)
        ifft_20120 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 270, 17), 'ifft', False)
        # Calling ifft(args, kwargs) (line 270)
        ifft_call_result_20126 = invoke(stypy.reporting.localization.Localization(__file__, 270, 17), ifft_20120, *[fft_call_result_20124], **kwargs_20125)
        
        # Assigning a type to the variable 'y1' (line 270)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 270, 12), 'y1', ifft_call_result_20126)
        
        # Assigning a Call to a Name (line 271):
        
        # Call to fft(...): (line 271)
        # Processing the call arguments (line 271)
        
        # Call to ifft(...): (line 271)
        # Processing the call arguments (line 271)
        # Getting the type of 'x' (line 271)
        x_20129 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 26), 'x', False)
        # Processing the call keyword arguments (line 271)
        kwargs_20130 = {}
        # Getting the type of 'ifft' (line 271)
        ifft_20128 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 21), 'ifft', False)
        # Calling ifft(args, kwargs) (line 271)
        ifft_call_result_20131 = invoke(stypy.reporting.localization.Localization(__file__, 271, 21), ifft_20128, *[x_20129], **kwargs_20130)
        
        # Processing the call keyword arguments (line 271)
        kwargs_20132 = {}
        # Getting the type of 'fft' (line 271)
        fft_20127 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 17), 'fft', False)
        # Calling fft(args, kwargs) (line 271)
        fft_call_result_20133 = invoke(stypy.reporting.localization.Localization(__file__, 271, 17), fft_20127, *[ifft_call_result_20131], **kwargs_20132)
        
        # Assigning a type to the variable 'y2' (line 271)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 271, 12), 'y2', fft_call_result_20133)
        
        # Call to assert_equal(...): (line 272)
        # Processing the call arguments (line 272)
        # Getting the type of 'y1' (line 272)
        y1_20135 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 272, 25), 'y1', False)
        # Obtaining the member 'dtype' of a type (line 272)
        dtype_20136 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 272, 25), y1_20135, 'dtype')
        # Getting the type of 'self' (line 272)
        self_20137 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 272, 35), 'self', False)
        # Obtaining the member 'cdt' of a type (line 272)
        cdt_20138 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 272, 35), self_20137, 'cdt')
        # Processing the call keyword arguments (line 272)
        kwargs_20139 = {}
        # Getting the type of 'assert_equal' (line 272)
        assert_equal_20134 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 272, 12), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 272)
        assert_equal_call_result_20140 = invoke(stypy.reporting.localization.Localization(__file__, 272, 12), assert_equal_20134, *[dtype_20136, cdt_20138], **kwargs_20139)
        
        
        # Call to assert_equal(...): (line 273)
        # Processing the call arguments (line 273)
        # Getting the type of 'y2' (line 273)
        y2_20142 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 273, 25), 'y2', False)
        # Obtaining the member 'dtype' of a type (line 273)
        dtype_20143 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 273, 25), y2_20142, 'dtype')
        # Getting the type of 'self' (line 273)
        self_20144 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 273, 35), 'self', False)
        # Obtaining the member 'cdt' of a type (line 273)
        cdt_20145 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 273, 35), self_20144, 'cdt')
        # Processing the call keyword arguments (line 273)
        kwargs_20146 = {}
        # Getting the type of 'assert_equal' (line 273)
        assert_equal_20141 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 273, 12), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 273)
        assert_equal_call_result_20147 = invoke(stypy.reporting.localization.Localization(__file__, 273, 12), assert_equal_20141, *[dtype_20143, cdt_20145], **kwargs_20146)
        
        
        # Call to assert_array_almost_equal(...): (line 274)
        # Processing the call arguments (line 274)
        # Getting the type of 'y1' (line 274)
        y1_20149 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 274, 38), 'y1', False)
        # Getting the type of 'x' (line 274)
        x_20150 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 274, 42), 'x', False)
        # Processing the call keyword arguments (line 274)
        kwargs_20151 = {}
        # Getting the type of 'assert_array_almost_equal' (line 274)
        assert_array_almost_equal_20148 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 274, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 274)
        assert_array_almost_equal_call_result_20152 = invoke(stypy.reporting.localization.Localization(__file__, 274, 12), assert_array_almost_equal_20148, *[y1_20149, x_20150], **kwargs_20151)
        
        
        # Call to assert_array_almost_equal(...): (line 275)
        # Processing the call arguments (line 275)
        # Getting the type of 'y2' (line 275)
        y2_20154 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 38), 'y2', False)
        # Getting the type of 'x' (line 275)
        x_20155 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 42), 'x', False)
        # Processing the call keyword arguments (line 275)
        kwargs_20156 = {}
        # Getting the type of 'assert_array_almost_equal' (line 275)
        assert_array_almost_equal_20153 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 275)
        assert_array_almost_equal_call_result_20157 = invoke(stypy.reporting.localization.Localization(__file__, 275, 12), assert_array_almost_equal_20153, *[y2_20154, x_20155], **kwargs_20156)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_random_real(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_random_real' in the type store
        # Getting the type of 'stypy_return_type' (line 267)
        stypy_return_type_20158 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 267, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_20158)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_random_real'
        return stypy_return_type_20158


    @norecursion
    def test_size_accuracy(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_size_accuracy'
        module_type_store = module_type_store.open_function_context('test_size_accuracy', 277, 4, False)
        # Assigning a type to the variable 'self' (line 278)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 278, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        _TestIFFTBase.test_size_accuracy.__dict__.__setitem__('stypy_localization', localization)
        _TestIFFTBase.test_size_accuracy.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        _TestIFFTBase.test_size_accuracy.__dict__.__setitem__('stypy_type_store', module_type_store)
        _TestIFFTBase.test_size_accuracy.__dict__.__setitem__('stypy_function_name', '_TestIFFTBase.test_size_accuracy')
        _TestIFFTBase.test_size_accuracy.__dict__.__setitem__('stypy_param_names_list', [])
        _TestIFFTBase.test_size_accuracy.__dict__.__setitem__('stypy_varargs_param_name', None)
        _TestIFFTBase.test_size_accuracy.__dict__.__setitem__('stypy_kwargs_param_name', None)
        _TestIFFTBase.test_size_accuracy.__dict__.__setitem__('stypy_call_defaults', defaults)
        _TestIFFTBase.test_size_accuracy.__dict__.__setitem__('stypy_call_varargs', varargs)
        _TestIFFTBase.test_size_accuracy.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        _TestIFFTBase.test_size_accuracy.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, '_TestIFFTBase.test_size_accuracy', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_size_accuracy', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_size_accuracy(...)' code ##################

        
        
        # Getting the type of 'self' (line 279)
        self_20159 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 279, 11), 'self')
        # Obtaining the member 'rdt' of a type (line 279)
        rdt_20160 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 279, 11), self_20159, 'rdt')
        # Getting the type of 'np' (line 279)
        np_20161 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 279, 23), 'np')
        # Obtaining the member 'float32' of a type (line 279)
        float32_20162 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 279, 23), np_20161, 'float32')
        # Applying the binary operator '==' (line 279)
        result_eq_20163 = python_operator(stypy.reporting.localization.Localization(__file__, 279, 11), '==', rdt_20160, float32_20162)
        
        # Testing the type of an if condition (line 279)
        if_condition_20164 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 279, 8), result_eq_20163)
        # Assigning a type to the variable 'if_condition_20164' (line 279)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 279, 8), 'if_condition_20164', if_condition_20164)
        # SSA begins for if statement (line 279)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Num to a Name (line 280):
        float_20165 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 280, 19), 'float')
        # Assigning a type to the variable 'rtol' (line 280)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 280, 12), 'rtol', float_20165)
        # SSA branch for the else part of an if statement (line 279)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'self' (line 281)
        self_20166 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 281, 13), 'self')
        # Obtaining the member 'rdt' of a type (line 281)
        rdt_20167 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 281, 13), self_20166, 'rdt')
        # Getting the type of 'np' (line 281)
        np_20168 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 281, 25), 'np')
        # Obtaining the member 'float64' of a type (line 281)
        float64_20169 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 281, 25), np_20168, 'float64')
        # Applying the binary operator '==' (line 281)
        result_eq_20170 = python_operator(stypy.reporting.localization.Localization(__file__, 281, 13), '==', rdt_20167, float64_20169)
        
        # Testing the type of an if condition (line 281)
        if_condition_20171 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 281, 13), result_eq_20170)
        # Assigning a type to the variable 'if_condition_20171' (line 281)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 281, 13), 'if_condition_20171', if_condition_20171)
        # SSA begins for if statement (line 281)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Num to a Name (line 282):
        float_20172 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 282, 19), 'float')
        # Assigning a type to the variable 'rtol' (line 282)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 282, 12), 'rtol', float_20172)
        # SSA join for if statement (line 281)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 279)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'LARGE_COMPOSITE_SIZES' (line 284)
        LARGE_COMPOSITE_SIZES_20173 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 284, 20), 'LARGE_COMPOSITE_SIZES')
        # Getting the type of 'LARGE_PRIME_SIZES' (line 284)
        LARGE_PRIME_SIZES_20174 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 284, 44), 'LARGE_PRIME_SIZES')
        # Applying the binary operator '+' (line 284)
        result_add_20175 = python_operator(stypy.reporting.localization.Localization(__file__, 284, 20), '+', LARGE_COMPOSITE_SIZES_20173, LARGE_PRIME_SIZES_20174)
        
        # Testing the type of a for loop iterable (line 284)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 284, 8), result_add_20175)
        # Getting the type of the for loop variable (line 284)
        for_loop_var_20176 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 284, 8), result_add_20175)
        # Assigning a type to the variable 'size' (line 284)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 284, 8), 'size', for_loop_var_20176)
        # SSA begins for a for statement (line 284)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to seed(...): (line 285)
        # Processing the call arguments (line 285)
        int_20180 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 285, 27), 'int')
        # Processing the call keyword arguments (line 285)
        kwargs_20181 = {}
        # Getting the type of 'np' (line 285)
        np_20177 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 285, 12), 'np', False)
        # Obtaining the member 'random' of a type (line 285)
        random_20178 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 285, 12), np_20177, 'random')
        # Obtaining the member 'seed' of a type (line 285)
        seed_20179 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 285, 12), random_20178, 'seed')
        # Calling seed(args, kwargs) (line 285)
        seed_call_result_20182 = invoke(stypy.reporting.localization.Localization(__file__, 285, 12), seed_20179, *[int_20180], **kwargs_20181)
        
        
        # Assigning a Call to a Name (line 286):
        
        # Call to astype(...): (line 286)
        # Processing the call arguments (line 286)
        # Getting the type of 'self' (line 286)
        self_20190 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 286, 44), 'self', False)
        # Obtaining the member 'rdt' of a type (line 286)
        rdt_20191 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 286, 44), self_20190, 'rdt')
        # Processing the call keyword arguments (line 286)
        kwargs_20192 = {}
        
        # Call to rand(...): (line 286)
        # Processing the call arguments (line 286)
        # Getting the type of 'size' (line 286)
        size_20186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 286, 31), 'size', False)
        # Processing the call keyword arguments (line 286)
        kwargs_20187 = {}
        # Getting the type of 'np' (line 286)
        np_20183 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 286, 16), 'np', False)
        # Obtaining the member 'random' of a type (line 286)
        random_20184 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 286, 16), np_20183, 'random')
        # Obtaining the member 'rand' of a type (line 286)
        rand_20185 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 286, 16), random_20184, 'rand')
        # Calling rand(args, kwargs) (line 286)
        rand_call_result_20188 = invoke(stypy.reporting.localization.Localization(__file__, 286, 16), rand_20185, *[size_20186], **kwargs_20187)
        
        # Obtaining the member 'astype' of a type (line 286)
        astype_20189 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 286, 16), rand_call_result_20188, 'astype')
        # Calling astype(args, kwargs) (line 286)
        astype_call_result_20193 = invoke(stypy.reporting.localization.Localization(__file__, 286, 16), astype_20189, *[rdt_20191], **kwargs_20192)
        
        # Assigning a type to the variable 'x' (line 286)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 286, 12), 'x', astype_call_result_20193)
        
        # Assigning a Call to a Name (line 287):
        
        # Call to ifft(...): (line 287)
        # Processing the call arguments (line 287)
        
        # Call to fft(...): (line 287)
        # Processing the call arguments (line 287)
        # Getting the type of 'x' (line 287)
        x_20196 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 287, 25), 'x', False)
        # Processing the call keyword arguments (line 287)
        kwargs_20197 = {}
        # Getting the type of 'fft' (line 287)
        fft_20195 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 287, 21), 'fft', False)
        # Calling fft(args, kwargs) (line 287)
        fft_call_result_20198 = invoke(stypy.reporting.localization.Localization(__file__, 287, 21), fft_20195, *[x_20196], **kwargs_20197)
        
        # Processing the call keyword arguments (line 287)
        kwargs_20199 = {}
        # Getting the type of 'ifft' (line 287)
        ifft_20194 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 287, 16), 'ifft', False)
        # Calling ifft(args, kwargs) (line 287)
        ifft_call_result_20200 = invoke(stypy.reporting.localization.Localization(__file__, 287, 16), ifft_20194, *[fft_call_result_20198], **kwargs_20199)
        
        # Assigning a type to the variable 'y' (line 287)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 287, 12), 'y', ifft_call_result_20200)
        
        # Call to _assert_close_in_norm(...): (line 288)
        # Processing the call arguments (line 288)
        # Getting the type of 'x' (line 288)
        x_20202 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 288, 34), 'x', False)
        # Getting the type of 'y' (line 288)
        y_20203 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 288, 37), 'y', False)
        # Getting the type of 'rtol' (line 288)
        rtol_20204 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 288, 40), 'rtol', False)
        # Getting the type of 'size' (line 288)
        size_20205 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 288, 46), 'size', False)
        # Getting the type of 'self' (line 288)
        self_20206 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 288, 52), 'self', False)
        # Obtaining the member 'rdt' of a type (line 288)
        rdt_20207 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 288, 52), self_20206, 'rdt')
        # Processing the call keyword arguments (line 288)
        kwargs_20208 = {}
        # Getting the type of '_assert_close_in_norm' (line 288)
        _assert_close_in_norm_20201 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 288, 12), '_assert_close_in_norm', False)
        # Calling _assert_close_in_norm(args, kwargs) (line 288)
        _assert_close_in_norm_call_result_20209 = invoke(stypy.reporting.localization.Localization(__file__, 288, 12), _assert_close_in_norm_20201, *[x_20202, y_20203, rtol_20204, size_20205, rdt_20207], **kwargs_20208)
        
        
        # Assigning a Call to a Name (line 289):
        
        # Call to fft(...): (line 289)
        # Processing the call arguments (line 289)
        
        # Call to ifft(...): (line 289)
        # Processing the call arguments (line 289)
        # Getting the type of 'x' (line 289)
        x_20212 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 289, 25), 'x', False)
        # Processing the call keyword arguments (line 289)
        kwargs_20213 = {}
        # Getting the type of 'ifft' (line 289)
        ifft_20211 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 289, 20), 'ifft', False)
        # Calling ifft(args, kwargs) (line 289)
        ifft_call_result_20214 = invoke(stypy.reporting.localization.Localization(__file__, 289, 20), ifft_20211, *[x_20212], **kwargs_20213)
        
        # Processing the call keyword arguments (line 289)
        kwargs_20215 = {}
        # Getting the type of 'fft' (line 289)
        fft_20210 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 289, 16), 'fft', False)
        # Calling fft(args, kwargs) (line 289)
        fft_call_result_20216 = invoke(stypy.reporting.localization.Localization(__file__, 289, 16), fft_20210, *[ifft_call_result_20214], **kwargs_20215)
        
        # Assigning a type to the variable 'y' (line 289)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 289, 12), 'y', fft_call_result_20216)
        
        # Call to _assert_close_in_norm(...): (line 290)
        # Processing the call arguments (line 290)
        # Getting the type of 'x' (line 290)
        x_20218 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 290, 34), 'x', False)
        # Getting the type of 'y' (line 290)
        y_20219 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 290, 37), 'y', False)
        # Getting the type of 'rtol' (line 290)
        rtol_20220 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 290, 40), 'rtol', False)
        # Getting the type of 'size' (line 290)
        size_20221 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 290, 46), 'size', False)
        # Getting the type of 'self' (line 290)
        self_20222 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 290, 52), 'self', False)
        # Obtaining the member 'rdt' of a type (line 290)
        rdt_20223 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 290, 52), self_20222, 'rdt')
        # Processing the call keyword arguments (line 290)
        kwargs_20224 = {}
        # Getting the type of '_assert_close_in_norm' (line 290)
        _assert_close_in_norm_20217 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 290, 12), '_assert_close_in_norm', False)
        # Calling _assert_close_in_norm(args, kwargs) (line 290)
        _assert_close_in_norm_call_result_20225 = invoke(stypy.reporting.localization.Localization(__file__, 290, 12), _assert_close_in_norm_20217, *[x_20218, y_20219, rtol_20220, size_20221, rdt_20223], **kwargs_20224)
        
        
        # Assigning a Call to a Name (line 292):
        
        # Call to astype(...): (line 292)
        # Processing the call arguments (line 292)
        # Getting the type of 'self' (line 292)
        self_20237 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 292, 53), 'self', False)
        # Obtaining the member 'cdt' of a type (line 292)
        cdt_20238 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 292, 53), self_20237, 'cdt')
        # Processing the call keyword arguments (line 292)
        kwargs_20239 = {}
        # Getting the type of 'x' (line 292)
        x_20226 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 292, 17), 'x', False)
        complex_20227 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 292, 21), 'complex')
        
        # Call to rand(...): (line 292)
        # Processing the call arguments (line 292)
        # Getting the type of 'size' (line 292)
        size_20231 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 292, 39), 'size', False)
        # Processing the call keyword arguments (line 292)
        kwargs_20232 = {}
        # Getting the type of 'np' (line 292)
        np_20228 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 292, 24), 'np', False)
        # Obtaining the member 'random' of a type (line 292)
        random_20229 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 292, 24), np_20228, 'random')
        # Obtaining the member 'rand' of a type (line 292)
        rand_20230 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 292, 24), random_20229, 'rand')
        # Calling rand(args, kwargs) (line 292)
        rand_call_result_20233 = invoke(stypy.reporting.localization.Localization(__file__, 292, 24), rand_20230, *[size_20231], **kwargs_20232)
        
        # Applying the binary operator '*' (line 292)
        result_mul_20234 = python_operator(stypy.reporting.localization.Localization(__file__, 292, 21), '*', complex_20227, rand_call_result_20233)
        
        # Applying the binary operator '+' (line 292)
        result_add_20235 = python_operator(stypy.reporting.localization.Localization(__file__, 292, 17), '+', x_20226, result_mul_20234)
        
        # Obtaining the member 'astype' of a type (line 292)
        astype_20236 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 292, 17), result_add_20235, 'astype')
        # Calling astype(args, kwargs) (line 292)
        astype_call_result_20240 = invoke(stypy.reporting.localization.Localization(__file__, 292, 17), astype_20236, *[cdt_20238], **kwargs_20239)
        
        # Assigning a type to the variable 'x' (line 292)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 292, 12), 'x', astype_call_result_20240)
        
        # Assigning a Call to a Name (line 293):
        
        # Call to ifft(...): (line 293)
        # Processing the call arguments (line 293)
        
        # Call to fft(...): (line 293)
        # Processing the call arguments (line 293)
        # Getting the type of 'x' (line 293)
        x_20243 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 293, 25), 'x', False)
        # Processing the call keyword arguments (line 293)
        kwargs_20244 = {}
        # Getting the type of 'fft' (line 293)
        fft_20242 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 293, 21), 'fft', False)
        # Calling fft(args, kwargs) (line 293)
        fft_call_result_20245 = invoke(stypy.reporting.localization.Localization(__file__, 293, 21), fft_20242, *[x_20243], **kwargs_20244)
        
        # Processing the call keyword arguments (line 293)
        kwargs_20246 = {}
        # Getting the type of 'ifft' (line 293)
        ifft_20241 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 293, 16), 'ifft', False)
        # Calling ifft(args, kwargs) (line 293)
        ifft_call_result_20247 = invoke(stypy.reporting.localization.Localization(__file__, 293, 16), ifft_20241, *[fft_call_result_20245], **kwargs_20246)
        
        # Assigning a type to the variable 'y' (line 293)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 293, 12), 'y', ifft_call_result_20247)
        
        # Call to _assert_close_in_norm(...): (line 294)
        # Processing the call arguments (line 294)
        # Getting the type of 'x' (line 294)
        x_20249 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 294, 34), 'x', False)
        # Getting the type of 'y' (line 294)
        y_20250 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 294, 37), 'y', False)
        # Getting the type of 'rtol' (line 294)
        rtol_20251 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 294, 40), 'rtol', False)
        # Getting the type of 'size' (line 294)
        size_20252 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 294, 46), 'size', False)
        # Getting the type of 'self' (line 294)
        self_20253 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 294, 52), 'self', False)
        # Obtaining the member 'rdt' of a type (line 294)
        rdt_20254 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 294, 52), self_20253, 'rdt')
        # Processing the call keyword arguments (line 294)
        kwargs_20255 = {}
        # Getting the type of '_assert_close_in_norm' (line 294)
        _assert_close_in_norm_20248 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 294, 12), '_assert_close_in_norm', False)
        # Calling _assert_close_in_norm(args, kwargs) (line 294)
        _assert_close_in_norm_call_result_20256 = invoke(stypy.reporting.localization.Localization(__file__, 294, 12), _assert_close_in_norm_20248, *[x_20249, y_20250, rtol_20251, size_20252, rdt_20254], **kwargs_20255)
        
        
        # Assigning a Call to a Name (line 295):
        
        # Call to fft(...): (line 295)
        # Processing the call arguments (line 295)
        
        # Call to ifft(...): (line 295)
        # Processing the call arguments (line 295)
        # Getting the type of 'x' (line 295)
        x_20259 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 295, 25), 'x', False)
        # Processing the call keyword arguments (line 295)
        kwargs_20260 = {}
        # Getting the type of 'ifft' (line 295)
        ifft_20258 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 295, 20), 'ifft', False)
        # Calling ifft(args, kwargs) (line 295)
        ifft_call_result_20261 = invoke(stypy.reporting.localization.Localization(__file__, 295, 20), ifft_20258, *[x_20259], **kwargs_20260)
        
        # Processing the call keyword arguments (line 295)
        kwargs_20262 = {}
        # Getting the type of 'fft' (line 295)
        fft_20257 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 295, 16), 'fft', False)
        # Calling fft(args, kwargs) (line 295)
        fft_call_result_20263 = invoke(stypy.reporting.localization.Localization(__file__, 295, 16), fft_20257, *[ifft_call_result_20261], **kwargs_20262)
        
        # Assigning a type to the variable 'y' (line 295)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 295, 12), 'y', fft_call_result_20263)
        
        # Call to _assert_close_in_norm(...): (line 296)
        # Processing the call arguments (line 296)
        # Getting the type of 'x' (line 296)
        x_20265 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 296, 34), 'x', False)
        # Getting the type of 'y' (line 296)
        y_20266 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 296, 37), 'y', False)
        # Getting the type of 'rtol' (line 296)
        rtol_20267 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 296, 40), 'rtol', False)
        # Getting the type of 'size' (line 296)
        size_20268 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 296, 46), 'size', False)
        # Getting the type of 'self' (line 296)
        self_20269 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 296, 52), 'self', False)
        # Obtaining the member 'rdt' of a type (line 296)
        rdt_20270 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 296, 52), self_20269, 'rdt')
        # Processing the call keyword arguments (line 296)
        kwargs_20271 = {}
        # Getting the type of '_assert_close_in_norm' (line 296)
        _assert_close_in_norm_20264 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 296, 12), '_assert_close_in_norm', False)
        # Calling _assert_close_in_norm(args, kwargs) (line 296)
        _assert_close_in_norm_call_result_20272 = invoke(stypy.reporting.localization.Localization(__file__, 296, 12), _assert_close_in_norm_20264, *[x_20265, y_20266, rtol_20267, size_20268, rdt_20270], **kwargs_20271)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_size_accuracy(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_size_accuracy' in the type store
        # Getting the type of 'stypy_return_type' (line 277)
        stypy_return_type_20273 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_20273)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_size_accuracy'
        return stypy_return_type_20273


    @norecursion
    def test_invalid_sizes(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_invalid_sizes'
        module_type_store = module_type_store.open_function_context('test_invalid_sizes', 298, 4, False)
        # Assigning a type to the variable 'self' (line 299)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 299, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        _TestIFFTBase.test_invalid_sizes.__dict__.__setitem__('stypy_localization', localization)
        _TestIFFTBase.test_invalid_sizes.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        _TestIFFTBase.test_invalid_sizes.__dict__.__setitem__('stypy_type_store', module_type_store)
        _TestIFFTBase.test_invalid_sizes.__dict__.__setitem__('stypy_function_name', '_TestIFFTBase.test_invalid_sizes')
        _TestIFFTBase.test_invalid_sizes.__dict__.__setitem__('stypy_param_names_list', [])
        _TestIFFTBase.test_invalid_sizes.__dict__.__setitem__('stypy_varargs_param_name', None)
        _TestIFFTBase.test_invalid_sizes.__dict__.__setitem__('stypy_kwargs_param_name', None)
        _TestIFFTBase.test_invalid_sizes.__dict__.__setitem__('stypy_call_defaults', defaults)
        _TestIFFTBase.test_invalid_sizes.__dict__.__setitem__('stypy_call_varargs', varargs)
        _TestIFFTBase.test_invalid_sizes.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        _TestIFFTBase.test_invalid_sizes.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, '_TestIFFTBase.test_invalid_sizes', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_invalid_sizes', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_invalid_sizes(...)' code ##################

        
        # Call to assert_raises(...): (line 299)
        # Processing the call arguments (line 299)
        # Getting the type of 'ValueError' (line 299)
        ValueError_20275 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 299, 22), 'ValueError', False)
        # Getting the type of 'ifft' (line 299)
        ifft_20276 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 299, 34), 'ifft', False)
        
        # Obtaining an instance of the builtin type 'list' (line 299)
        list_20277 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 299, 40), 'list')
        # Adding type elements to the builtin type 'list' instance (line 299)
        
        # Processing the call keyword arguments (line 299)
        kwargs_20278 = {}
        # Getting the type of 'assert_raises' (line 299)
        assert_raises_20274 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 299, 8), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 299)
        assert_raises_call_result_20279 = invoke(stypy.reporting.localization.Localization(__file__, 299, 8), assert_raises_20274, *[ValueError_20275, ifft_20276, list_20277], **kwargs_20278)
        
        
        # Call to assert_raises(...): (line 300)
        # Processing the call arguments (line 300)
        # Getting the type of 'ValueError' (line 300)
        ValueError_20281 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 300, 22), 'ValueError', False)
        # Getting the type of 'ifft' (line 300)
        ifft_20282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 300, 34), 'ifft', False)
        
        # Obtaining an instance of the builtin type 'list' (line 300)
        list_20283 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 300, 40), 'list')
        # Adding type elements to the builtin type 'list' instance (line 300)
        # Adding element type (line 300)
        
        # Obtaining an instance of the builtin type 'list' (line 300)
        list_20284 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 300, 41), 'list')
        # Adding type elements to the builtin type 'list' instance (line 300)
        # Adding element type (line 300)
        int_20285 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 300, 42), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 300, 41), list_20284, int_20285)
        # Adding element type (line 300)
        int_20286 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 300, 44), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 300, 41), list_20284, int_20286)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 300, 40), list_20283, list_20284)
        # Adding element type (line 300)
        
        # Obtaining an instance of the builtin type 'list' (line 300)
        list_20287 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 300, 47), 'list')
        # Adding type elements to the builtin type 'list' instance (line 300)
        # Adding element type (line 300)
        int_20288 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 300, 48), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 300, 47), list_20287, int_20288)
        # Adding element type (line 300)
        int_20289 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 300, 50), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 300, 47), list_20287, int_20289)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 300, 40), list_20283, list_20287)
        
        int_20290 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 300, 55), 'int')
        # Processing the call keyword arguments (line 300)
        kwargs_20291 = {}
        # Getting the type of 'assert_raises' (line 300)
        assert_raises_20280 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 300, 8), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 300)
        assert_raises_call_result_20292 = invoke(stypy.reporting.localization.Localization(__file__, 300, 8), assert_raises_20280, *[ValueError_20281, ifft_20282, list_20283, int_20290], **kwargs_20291)
        
        
        # ################# End of 'test_invalid_sizes(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_invalid_sizes' in the type store
        # Getting the type of 'stypy_return_type' (line 298)
        stypy_return_type_20293 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 298, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_20293)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_invalid_sizes'
        return stypy_return_type_20293


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 221, 0, False)
        # Assigning a type to the variable 'self' (line 222)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 222, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, '_TestIFFTBase.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable '_TestIFFTBase' (line 221)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 221, 0), '_TestIFFTBase', _TestIFFTBase)
# Declaration of the 'TestDoubleIFFT' class
# Getting the type of '_TestIFFTBase' (line 303)
_TestIFFTBase_20294 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 303, 21), '_TestIFFTBase')

class TestDoubleIFFT(_TestIFFTBase_20294, ):

    @norecursion
    def setup_method(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'setup_method'
        module_type_store = module_type_store.open_function_context('setup_method', 304, 4, False)
        # Assigning a type to the variable 'self' (line 305)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 305, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestDoubleIFFT.setup_method.__dict__.__setitem__('stypy_localization', localization)
        TestDoubleIFFT.setup_method.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestDoubleIFFT.setup_method.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestDoubleIFFT.setup_method.__dict__.__setitem__('stypy_function_name', 'TestDoubleIFFT.setup_method')
        TestDoubleIFFT.setup_method.__dict__.__setitem__('stypy_param_names_list', [])
        TestDoubleIFFT.setup_method.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestDoubleIFFT.setup_method.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestDoubleIFFT.setup_method.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestDoubleIFFT.setup_method.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestDoubleIFFT.setup_method.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestDoubleIFFT.setup_method.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestDoubleIFFT.setup_method', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'setup_method', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'setup_method(...)' code ##################

        
        # Assigning a Attribute to a Attribute (line 305):
        # Getting the type of 'np' (line 305)
        np_20295 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 305, 19), 'np')
        # Obtaining the member 'cdouble' of a type (line 305)
        cdouble_20296 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 305, 19), np_20295, 'cdouble')
        # Getting the type of 'self' (line 305)
        self_20297 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 305, 8), 'self')
        # Setting the type of the member 'cdt' of a type (line 305)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 305, 8), self_20297, 'cdt', cdouble_20296)
        
        # Assigning a Attribute to a Attribute (line 306):
        # Getting the type of 'np' (line 306)
        np_20298 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 306, 19), 'np')
        # Obtaining the member 'double' of a type (line 306)
        double_20299 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 306, 19), np_20298, 'double')
        # Getting the type of 'self' (line 306)
        self_20300 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 306, 8), 'self')
        # Setting the type of the member 'rdt' of a type (line 306)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 306, 8), self_20300, 'rdt', double_20299)
        
        # ################# End of 'setup_method(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'setup_method' in the type store
        # Getting the type of 'stypy_return_type' (line 304)
        stypy_return_type_20301 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 304, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_20301)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'setup_method'
        return stypy_return_type_20301


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 303, 0, False)
        # Assigning a type to the variable 'self' (line 304)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 304, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestDoubleIFFT.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'TestDoubleIFFT' (line 303)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 303, 0), 'TestDoubleIFFT', TestDoubleIFFT)
# Declaration of the 'TestSingleIFFT' class
# Getting the type of '_TestIFFTBase' (line 309)
_TestIFFTBase_20302 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 309, 21), '_TestIFFTBase')

class TestSingleIFFT(_TestIFFTBase_20302, ):

    @norecursion
    def setup_method(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'setup_method'
        module_type_store = module_type_store.open_function_context('setup_method', 310, 4, False)
        # Assigning a type to the variable 'self' (line 311)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 311, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSingleIFFT.setup_method.__dict__.__setitem__('stypy_localization', localization)
        TestSingleIFFT.setup_method.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSingleIFFT.setup_method.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSingleIFFT.setup_method.__dict__.__setitem__('stypy_function_name', 'TestSingleIFFT.setup_method')
        TestSingleIFFT.setup_method.__dict__.__setitem__('stypy_param_names_list', [])
        TestSingleIFFT.setup_method.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSingleIFFT.setup_method.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSingleIFFT.setup_method.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSingleIFFT.setup_method.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSingleIFFT.setup_method.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSingleIFFT.setup_method.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSingleIFFT.setup_method', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'setup_method', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'setup_method(...)' code ##################

        
        # Assigning a Attribute to a Attribute (line 311):
        # Getting the type of 'np' (line 311)
        np_20303 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 311, 19), 'np')
        # Obtaining the member 'complex64' of a type (line 311)
        complex64_20304 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 311, 19), np_20303, 'complex64')
        # Getting the type of 'self' (line 311)
        self_20305 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 311, 8), 'self')
        # Setting the type of the member 'cdt' of a type (line 311)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 311, 8), self_20305, 'cdt', complex64_20304)
        
        # Assigning a Attribute to a Attribute (line 312):
        # Getting the type of 'np' (line 312)
        np_20306 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 312, 19), 'np')
        # Obtaining the member 'float32' of a type (line 312)
        float32_20307 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 312, 19), np_20306, 'float32')
        # Getting the type of 'self' (line 312)
        self_20308 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 312, 8), 'self')
        # Setting the type of the member 'rdt' of a type (line 312)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 312, 8), self_20308, 'rdt', float32_20307)
        
        # ################# End of 'setup_method(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'setup_method' in the type store
        # Getting the type of 'stypy_return_type' (line 310)
        stypy_return_type_20309 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 310, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_20309)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'setup_method'
        return stypy_return_type_20309


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 309, 0, False)
        # Assigning a type to the variable 'self' (line 310)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 310, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSingleIFFT.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'TestSingleIFFT' (line 309)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 309, 0), 'TestSingleIFFT', TestSingleIFFT)
# Declaration of the '_TestRFFTBase' class

class _TestRFFTBase(object, ):

    @norecursion
    def setup_method(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'setup_method'
        module_type_store = module_type_store.open_function_context('setup_method', 316, 4, False)
        # Assigning a type to the variable 'self' (line 317)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 317, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        _TestRFFTBase.setup_method.__dict__.__setitem__('stypy_localization', localization)
        _TestRFFTBase.setup_method.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        _TestRFFTBase.setup_method.__dict__.__setitem__('stypy_type_store', module_type_store)
        _TestRFFTBase.setup_method.__dict__.__setitem__('stypy_function_name', '_TestRFFTBase.setup_method')
        _TestRFFTBase.setup_method.__dict__.__setitem__('stypy_param_names_list', [])
        _TestRFFTBase.setup_method.__dict__.__setitem__('stypy_varargs_param_name', None)
        _TestRFFTBase.setup_method.__dict__.__setitem__('stypy_kwargs_param_name', None)
        _TestRFFTBase.setup_method.__dict__.__setitem__('stypy_call_defaults', defaults)
        _TestRFFTBase.setup_method.__dict__.__setitem__('stypy_call_varargs', varargs)
        _TestRFFTBase.setup_method.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        _TestRFFTBase.setup_method.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, '_TestRFFTBase.setup_method', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'setup_method', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'setup_method(...)' code ##################

        
        # Call to seed(...): (line 317)
        # Processing the call arguments (line 317)
        int_20313 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 317, 23), 'int')
        # Processing the call keyword arguments (line 317)
        kwargs_20314 = {}
        # Getting the type of 'np' (line 317)
        np_20310 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 317, 8), 'np', False)
        # Obtaining the member 'random' of a type (line 317)
        random_20311 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 317, 8), np_20310, 'random')
        # Obtaining the member 'seed' of a type (line 317)
        seed_20312 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 317, 8), random_20311, 'seed')
        # Calling seed(args, kwargs) (line 317)
        seed_call_result_20315 = invoke(stypy.reporting.localization.Localization(__file__, 317, 8), seed_20312, *[int_20313], **kwargs_20314)
        
        
        # ################# End of 'setup_method(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'setup_method' in the type store
        # Getting the type of 'stypy_return_type' (line 316)
        stypy_return_type_20316 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 316, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_20316)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'setup_method'
        return stypy_return_type_20316


    @norecursion
    def test_definition(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_definition'
        module_type_store = module_type_store.open_function_context('test_definition', 319, 4, False)
        # Assigning a type to the variable 'self' (line 320)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 320, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        _TestRFFTBase.test_definition.__dict__.__setitem__('stypy_localization', localization)
        _TestRFFTBase.test_definition.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        _TestRFFTBase.test_definition.__dict__.__setitem__('stypy_type_store', module_type_store)
        _TestRFFTBase.test_definition.__dict__.__setitem__('stypy_function_name', '_TestRFFTBase.test_definition')
        _TestRFFTBase.test_definition.__dict__.__setitem__('stypy_param_names_list', [])
        _TestRFFTBase.test_definition.__dict__.__setitem__('stypy_varargs_param_name', None)
        _TestRFFTBase.test_definition.__dict__.__setitem__('stypy_kwargs_param_name', None)
        _TestRFFTBase.test_definition.__dict__.__setitem__('stypy_call_defaults', defaults)
        _TestRFFTBase.test_definition.__dict__.__setitem__('stypy_call_varargs', varargs)
        _TestRFFTBase.test_definition.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        _TestRFFTBase.test_definition.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, '_TestRFFTBase.test_definition', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_definition', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_definition(...)' code ##################

        
        
        # Obtaining an instance of the builtin type 'list' (line 320)
        list_20317 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 320, 17), 'list')
        # Adding type elements to the builtin type 'list' instance (line 320)
        # Adding element type (line 320)
        
        # Obtaining an instance of the builtin type 'list' (line 320)
        list_20318 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 320, 18), 'list')
        # Adding type elements to the builtin type 'list' instance (line 320)
        # Adding element type (line 320)
        int_20319 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 320, 19), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 320, 18), list_20318, int_20319)
        # Adding element type (line 320)
        int_20320 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 320, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 320, 18), list_20318, int_20320)
        # Adding element type (line 320)
        int_20321 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 320, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 320, 18), list_20318, int_20321)
        # Adding element type (line 320)
        int_20322 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 320, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 320, 18), list_20318, int_20322)
        # Adding element type (line 320)
        int_20323 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 320, 31), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 320, 18), list_20318, int_20323)
        # Adding element type (line 320)
        int_20324 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 320, 34), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 320, 18), list_20318, int_20324)
        # Adding element type (line 320)
        int_20325 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 320, 37), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 320, 18), list_20318, int_20325)
        # Adding element type (line 320)
        int_20326 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 320, 40), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 320, 18), list_20318, int_20326)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 320, 17), list_20317, list_20318)
        # Adding element type (line 320)
        
        # Obtaining an instance of the builtin type 'list' (line 320)
        list_20327 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 320, 44), 'list')
        # Adding type elements to the builtin type 'list' instance (line 320)
        # Adding element type (line 320)
        int_20328 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 320, 45), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 320, 44), list_20327, int_20328)
        # Adding element type (line 320)
        int_20329 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 320, 48), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 320, 44), list_20327, int_20329)
        # Adding element type (line 320)
        int_20330 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 320, 51), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 320, 44), list_20327, int_20330)
        # Adding element type (line 320)
        int_20331 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 320, 54), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 320, 44), list_20327, int_20331)
        # Adding element type (line 320)
        int_20332 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 320, 57), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 320, 44), list_20327, int_20332)
        # Adding element type (line 320)
        int_20333 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 320, 60), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 320, 44), list_20327, int_20333)
        # Adding element type (line 320)
        int_20334 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 320, 63), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 320, 44), list_20327, int_20334)
        # Adding element type (line 320)
        int_20335 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 320, 66), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 320, 44), list_20327, int_20335)
        # Adding element type (line 320)
        int_20336 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 320, 69), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 320, 44), list_20327, int_20336)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 320, 17), list_20317, list_20327)
        
        # Testing the type of a for loop iterable (line 320)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 320, 8), list_20317)
        # Getting the type of the for loop variable (line 320)
        for_loop_var_20337 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 320, 8), list_20317)
        # Assigning a type to the variable 't' (line 320)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 320, 8), 't', for_loop_var_20337)
        # SSA begins for a for statement (line 320)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 321):
        
        # Call to array(...): (line 321)
        # Processing the call arguments (line 321)
        # Getting the type of 't' (line 321)
        t_20340 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 321, 25), 't', False)
        # Processing the call keyword arguments (line 321)
        # Getting the type of 'self' (line 321)
        self_20341 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 321, 34), 'self', False)
        # Obtaining the member 'rdt' of a type (line 321)
        rdt_20342 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 321, 34), self_20341, 'rdt')
        keyword_20343 = rdt_20342
        kwargs_20344 = {'dtype': keyword_20343}
        # Getting the type of 'np' (line 321)
        np_20338 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 321, 16), 'np', False)
        # Obtaining the member 'array' of a type (line 321)
        array_20339 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 321, 16), np_20338, 'array')
        # Calling array(args, kwargs) (line 321)
        array_call_result_20345 = invoke(stypy.reporting.localization.Localization(__file__, 321, 16), array_20339, *[t_20340], **kwargs_20344)
        
        # Assigning a type to the variable 'x' (line 321)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 321, 12), 'x', array_call_result_20345)
        
        # Assigning a Call to a Name (line 322):
        
        # Call to rfft(...): (line 322)
        # Processing the call arguments (line 322)
        # Getting the type of 'x' (line 322)
        x_20347 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 322, 21), 'x', False)
        # Processing the call keyword arguments (line 322)
        kwargs_20348 = {}
        # Getting the type of 'rfft' (line 322)
        rfft_20346 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 322, 16), 'rfft', False)
        # Calling rfft(args, kwargs) (line 322)
        rfft_call_result_20349 = invoke(stypy.reporting.localization.Localization(__file__, 322, 16), rfft_20346, *[x_20347], **kwargs_20348)
        
        # Assigning a type to the variable 'y' (line 322)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 322, 12), 'y', rfft_call_result_20349)
        
        # Assigning a Call to a Name (line 323):
        
        # Call to direct_rdft(...): (line 323)
        # Processing the call arguments (line 323)
        # Getting the type of 'x' (line 323)
        x_20351 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 323, 29), 'x', False)
        # Processing the call keyword arguments (line 323)
        kwargs_20352 = {}
        # Getting the type of 'direct_rdft' (line 323)
        direct_rdft_20350 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 323, 17), 'direct_rdft', False)
        # Calling direct_rdft(args, kwargs) (line 323)
        direct_rdft_call_result_20353 = invoke(stypy.reporting.localization.Localization(__file__, 323, 17), direct_rdft_20350, *[x_20351], **kwargs_20352)
        
        # Assigning a type to the variable 'y1' (line 323)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 323, 12), 'y1', direct_rdft_call_result_20353)
        
        # Call to assert_array_almost_equal(...): (line 324)
        # Processing the call arguments (line 324)
        # Getting the type of 'y' (line 324)
        y_20355 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 38), 'y', False)
        # Getting the type of 'y1' (line 324)
        y1_20356 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 40), 'y1', False)
        # Processing the call keyword arguments (line 324)
        kwargs_20357 = {}
        # Getting the type of 'assert_array_almost_equal' (line 324)
        assert_array_almost_equal_20354 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 324)
        assert_array_almost_equal_call_result_20358 = invoke(stypy.reporting.localization.Localization(__file__, 324, 12), assert_array_almost_equal_20354, *[y_20355, y1_20356], **kwargs_20357)
        
        
        # Call to assert_equal(...): (line 325)
        # Processing the call arguments (line 325)
        # Getting the type of 'y' (line 325)
        y_20360 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 325, 25), 'y', False)
        # Obtaining the member 'dtype' of a type (line 325)
        dtype_20361 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 325, 25), y_20360, 'dtype')
        # Getting the type of 'self' (line 325)
        self_20362 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 325, 34), 'self', False)
        # Obtaining the member 'rdt' of a type (line 325)
        rdt_20363 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 325, 34), self_20362, 'rdt')
        # Processing the call keyword arguments (line 325)
        kwargs_20364 = {}
        # Getting the type of 'assert_equal' (line 325)
        assert_equal_20359 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 325, 12), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 325)
        assert_equal_call_result_20365 = invoke(stypy.reporting.localization.Localization(__file__, 325, 12), assert_equal_20359, *[dtype_20361, rdt_20363], **kwargs_20364)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_definition(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_definition' in the type store
        # Getting the type of 'stypy_return_type' (line 319)
        stypy_return_type_20366 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 319, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_20366)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_definition'
        return stypy_return_type_20366


    @norecursion
    def test_djbfft(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_djbfft'
        module_type_store = module_type_store.open_function_context('test_djbfft', 327, 4, False)
        # Assigning a type to the variable 'self' (line 328)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 328, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        _TestRFFTBase.test_djbfft.__dict__.__setitem__('stypy_localization', localization)
        _TestRFFTBase.test_djbfft.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        _TestRFFTBase.test_djbfft.__dict__.__setitem__('stypy_type_store', module_type_store)
        _TestRFFTBase.test_djbfft.__dict__.__setitem__('stypy_function_name', '_TestRFFTBase.test_djbfft')
        _TestRFFTBase.test_djbfft.__dict__.__setitem__('stypy_param_names_list', [])
        _TestRFFTBase.test_djbfft.__dict__.__setitem__('stypy_varargs_param_name', None)
        _TestRFFTBase.test_djbfft.__dict__.__setitem__('stypy_kwargs_param_name', None)
        _TestRFFTBase.test_djbfft.__dict__.__setitem__('stypy_call_defaults', defaults)
        _TestRFFTBase.test_djbfft.__dict__.__setitem__('stypy_call_varargs', varargs)
        _TestRFFTBase.test_djbfft.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        _TestRFFTBase.test_djbfft.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, '_TestRFFTBase.test_djbfft', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_djbfft', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_djbfft(...)' code ##################

        stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 328, 8))
        
        # 'from numpy.fft import numpy_fft' statement (line 328)
        update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/fftpack/tests/')
        import_20367 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 328, 8), 'numpy.fft')

        if (type(import_20367) is not StypyTypeError):

            if (import_20367 != 'pyd_module'):
                __import__(import_20367)
                sys_modules_20368 = sys.modules[import_20367]
                import_from_module(stypy.reporting.localization.Localization(__file__, 328, 8), 'numpy.fft', sys_modules_20368.module_type_store, module_type_store, ['fft'])
                nest_module(stypy.reporting.localization.Localization(__file__, 328, 8), __file__, sys_modules_20368, sys_modules_20368.module_type_store, module_type_store)
            else:
                from numpy.fft import fft as numpy_fft

                import_from_module(stypy.reporting.localization.Localization(__file__, 328, 8), 'numpy.fft', None, module_type_store, ['fft'], [numpy_fft])

        else:
            # Assigning a type to the variable 'numpy.fft' (line 328)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 328, 8), 'numpy.fft', import_20367)

        # Adding an alias
        module_type_store.add_alias('numpy_fft', 'fft')
        remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/fftpack/tests/')
        
        
        
        # Call to range(...): (line 329)
        # Processing the call arguments (line 329)
        int_20370 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 329, 23), 'int')
        int_20371 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 329, 25), 'int')
        # Processing the call keyword arguments (line 329)
        kwargs_20372 = {}
        # Getting the type of 'range' (line 329)
        range_20369 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 329, 17), 'range', False)
        # Calling range(args, kwargs) (line 329)
        range_call_result_20373 = invoke(stypy.reporting.localization.Localization(__file__, 329, 17), range_20369, *[int_20370, int_20371], **kwargs_20372)
        
        # Testing the type of a for loop iterable (line 329)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 329, 8), range_call_result_20373)
        # Getting the type of the for loop variable (line 329)
        for_loop_var_20374 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 329, 8), range_call_result_20373)
        # Assigning a type to the variable 'i' (line 329)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 329, 8), 'i', for_loop_var_20374)
        # SSA begins for a for statement (line 329)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a BinOp to a Name (line 330):
        int_20375 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 330, 16), 'int')
        # Getting the type of 'i' (line 330)
        i_20376 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 330, 19), 'i')
        # Applying the binary operator '**' (line 330)
        result_pow_20377 = python_operator(stypy.reporting.localization.Localization(__file__, 330, 16), '**', int_20375, i_20376)
        
        # Assigning a type to the variable 'n' (line 330)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 330, 12), 'n', result_pow_20377)
        
        # Assigning a Call to a Name (line 331):
        
        # Call to list(...): (line 331)
        # Processing the call arguments (line 331)
        
        # Call to range(...): (line 331)
        # Processing the call arguments (line 331)
        # Getting the type of 'n' (line 331)
        n_20380 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 331, 27), 'n', False)
        # Processing the call keyword arguments (line 331)
        kwargs_20381 = {}
        # Getting the type of 'range' (line 331)
        range_20379 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 331, 21), 'range', False)
        # Calling range(args, kwargs) (line 331)
        range_call_result_20382 = invoke(stypy.reporting.localization.Localization(__file__, 331, 21), range_20379, *[n_20380], **kwargs_20381)
        
        # Processing the call keyword arguments (line 331)
        kwargs_20383 = {}
        # Getting the type of 'list' (line 331)
        list_20378 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 331, 16), 'list', False)
        # Calling list(args, kwargs) (line 331)
        list_call_result_20384 = invoke(stypy.reporting.localization.Localization(__file__, 331, 16), list_20378, *[range_call_result_20382], **kwargs_20383)
        
        # Assigning a type to the variable 'x' (line 331)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 331, 12), 'x', list_call_result_20384)
        
        # Assigning a Call to a Name (line 332):
        
        # Call to numpy_fft(...): (line 332)
        # Processing the call arguments (line 332)
        # Getting the type of 'x' (line 332)
        x_20386 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 332, 27), 'x', False)
        # Processing the call keyword arguments (line 332)
        kwargs_20387 = {}
        # Getting the type of 'numpy_fft' (line 332)
        numpy_fft_20385 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 332, 17), 'numpy_fft', False)
        # Calling numpy_fft(args, kwargs) (line 332)
        numpy_fft_call_result_20388 = invoke(stypy.reporting.localization.Localization(__file__, 332, 17), numpy_fft_20385, *[x_20386], **kwargs_20387)
        
        # Assigning a type to the variable 'y2' (line 332)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 332, 12), 'y2', numpy_fft_call_result_20388)
        
        # Assigning a Call to a Name (line 333):
        
        # Call to zeros(...): (line 333)
        # Processing the call arguments (line 333)
        
        # Obtaining an instance of the builtin type 'tuple' (line 333)
        tuple_20390 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 333, 24), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 333)
        # Adding element type (line 333)
        # Getting the type of 'n' (line 333)
        n_20391 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 333, 24), 'n', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 333, 24), tuple_20390, n_20391)
        
        # Processing the call keyword arguments (line 333)
        # Getting the type of 'double' (line 333)
        double_20392 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 333, 34), 'double', False)
        keyword_20393 = double_20392
        kwargs_20394 = {'dtype': keyword_20393}
        # Getting the type of 'zeros' (line 333)
        zeros_20389 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 333, 17), 'zeros', False)
        # Calling zeros(args, kwargs) (line 333)
        zeros_call_result_20395 = invoke(stypy.reporting.localization.Localization(__file__, 333, 17), zeros_20389, *[tuple_20390], **kwargs_20394)
        
        # Assigning a type to the variable 'y1' (line 333)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 333, 12), 'y1', zeros_call_result_20395)
        
        # Assigning a Attribute to a Subscript (line 334):
        
        # Obtaining the type of the subscript
        int_20396 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 334, 23), 'int')
        # Getting the type of 'y2' (line 334)
        y2_20397 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 334, 20), 'y2')
        # Obtaining the member '__getitem__' of a type (line 334)
        getitem___20398 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 334, 20), y2_20397, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 334)
        subscript_call_result_20399 = invoke(stypy.reporting.localization.Localization(__file__, 334, 20), getitem___20398, int_20396)
        
        # Obtaining the member 'real' of a type (line 334)
        real_20400 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 334, 20), subscript_call_result_20399, 'real')
        # Getting the type of 'y1' (line 334)
        y1_20401 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 334, 12), 'y1')
        int_20402 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 334, 15), 'int')
        # Storing an element on a container (line 334)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 334, 12), y1_20401, (int_20402, real_20400))
        
        # Assigning a Attribute to a Subscript (line 335):
        
        # Obtaining the type of the subscript
        # Getting the type of 'n' (line 335)
        n_20403 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 335, 24), 'n')
        int_20404 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 335, 27), 'int')
        # Applying the binary operator '//' (line 335)
        result_floordiv_20405 = python_operator(stypy.reporting.localization.Localization(__file__, 335, 24), '//', n_20403, int_20404)
        
        # Getting the type of 'y2' (line 335)
        y2_20406 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 335, 21), 'y2')
        # Obtaining the member '__getitem__' of a type (line 335)
        getitem___20407 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 335, 21), y2_20406, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 335)
        subscript_call_result_20408 = invoke(stypy.reporting.localization.Localization(__file__, 335, 21), getitem___20407, result_floordiv_20405)
        
        # Obtaining the member 'real' of a type (line 335)
        real_20409 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 335, 21), subscript_call_result_20408, 'real')
        # Getting the type of 'y1' (line 335)
        y1_20410 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 335, 12), 'y1')
        int_20411 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 335, 15), 'int')
        # Storing an element on a container (line 335)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 335, 12), y1_20410, (int_20411, real_20409))
        
        
        # Call to range(...): (line 336)
        # Processing the call arguments (line 336)
        int_20413 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 336, 27), 'int')
        # Getting the type of 'n' (line 336)
        n_20414 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 336, 30), 'n', False)
        int_20415 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 336, 33), 'int')
        # Applying the binary operator '//' (line 336)
        result_floordiv_20416 = python_operator(stypy.reporting.localization.Localization(__file__, 336, 30), '//', n_20414, int_20415)
        
        # Processing the call keyword arguments (line 336)
        kwargs_20417 = {}
        # Getting the type of 'range' (line 336)
        range_20412 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 336, 21), 'range', False)
        # Calling range(args, kwargs) (line 336)
        range_call_result_20418 = invoke(stypy.reporting.localization.Localization(__file__, 336, 21), range_20412, *[int_20413, result_floordiv_20416], **kwargs_20417)
        
        # Testing the type of a for loop iterable (line 336)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 336, 12), range_call_result_20418)
        # Getting the type of the for loop variable (line 336)
        for_loop_var_20419 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 336, 12), range_call_result_20418)
        # Assigning a type to the variable 'k' (line 336)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 336, 12), 'k', for_loop_var_20419)
        # SSA begins for a for statement (line 336)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Attribute to a Subscript (line 337):
        
        # Obtaining the type of the subscript
        # Getting the type of 'k' (line 337)
        k_20420 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 337, 31), 'k')
        # Getting the type of 'y2' (line 337)
        y2_20421 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 337, 28), 'y2')
        # Obtaining the member '__getitem__' of a type (line 337)
        getitem___20422 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 337, 28), y2_20421, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 337)
        subscript_call_result_20423 = invoke(stypy.reporting.localization.Localization(__file__, 337, 28), getitem___20422, k_20420)
        
        # Obtaining the member 'real' of a type (line 337)
        real_20424 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 337, 28), subscript_call_result_20423, 'real')
        # Getting the type of 'y1' (line 337)
        y1_20425 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 337, 16), 'y1')
        int_20426 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 337, 19), 'int')
        # Getting the type of 'k' (line 337)
        k_20427 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 337, 21), 'k')
        # Applying the binary operator '*' (line 337)
        result_mul_20428 = python_operator(stypy.reporting.localization.Localization(__file__, 337, 19), '*', int_20426, k_20427)
        
        int_20429 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 337, 23), 'int')
        # Applying the binary operator '-' (line 337)
        result_sub_20430 = python_operator(stypy.reporting.localization.Localization(__file__, 337, 19), '-', result_mul_20428, int_20429)
        
        # Storing an element on a container (line 337)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 337, 16), y1_20425, (result_sub_20430, real_20424))
        
        # Assigning a Attribute to a Subscript (line 338):
        
        # Obtaining the type of the subscript
        # Getting the type of 'k' (line 338)
        k_20431 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 338, 29), 'k')
        # Getting the type of 'y2' (line 338)
        y2_20432 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 338, 26), 'y2')
        # Obtaining the member '__getitem__' of a type (line 338)
        getitem___20433 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 338, 26), y2_20432, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 338)
        subscript_call_result_20434 = invoke(stypy.reporting.localization.Localization(__file__, 338, 26), getitem___20433, k_20431)
        
        # Obtaining the member 'imag' of a type (line 338)
        imag_20435 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 338, 26), subscript_call_result_20434, 'imag')
        # Getting the type of 'y1' (line 338)
        y1_20436 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 338, 16), 'y1')
        int_20437 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 338, 19), 'int')
        # Getting the type of 'k' (line 338)
        k_20438 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 338, 21), 'k')
        # Applying the binary operator '*' (line 338)
        result_mul_20439 = python_operator(stypy.reporting.localization.Localization(__file__, 338, 19), '*', int_20437, k_20438)
        
        # Storing an element on a container (line 338)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 338, 16), y1_20436, (result_mul_20439, imag_20435))
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 339):
        
        # Call to drfft(...): (line 339)
        # Processing the call arguments (line 339)
        # Getting the type of 'x' (line 339)
        x_20442 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 339, 30), 'x', False)
        # Processing the call keyword arguments (line 339)
        kwargs_20443 = {}
        # Getting the type of 'fftpack' (line 339)
        fftpack_20440 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 339, 16), 'fftpack', False)
        # Obtaining the member 'drfft' of a type (line 339)
        drfft_20441 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 339, 16), fftpack_20440, 'drfft')
        # Calling drfft(args, kwargs) (line 339)
        drfft_call_result_20444 = invoke(stypy.reporting.localization.Localization(__file__, 339, 16), drfft_20441, *[x_20442], **kwargs_20443)
        
        # Assigning a type to the variable 'y' (line 339)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 339, 12), 'y', drfft_call_result_20444)
        
        # Call to assert_array_almost_equal(...): (line 340)
        # Processing the call arguments (line 340)
        # Getting the type of 'y' (line 340)
        y_20446 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 340, 38), 'y', False)
        # Getting the type of 'y1' (line 340)
        y1_20447 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 340, 40), 'y1', False)
        # Processing the call keyword arguments (line 340)
        kwargs_20448 = {}
        # Getting the type of 'assert_array_almost_equal' (line 340)
        assert_array_almost_equal_20445 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 340, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 340)
        assert_array_almost_equal_call_result_20449 = invoke(stypy.reporting.localization.Localization(__file__, 340, 12), assert_array_almost_equal_20445, *[y_20446, y1_20447], **kwargs_20448)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_djbfft(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_djbfft' in the type store
        # Getting the type of 'stypy_return_type' (line 327)
        stypy_return_type_20450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 327, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_20450)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_djbfft'
        return stypy_return_type_20450


    @norecursion
    def test_invalid_sizes(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_invalid_sizes'
        module_type_store = module_type_store.open_function_context('test_invalid_sizes', 342, 4, False)
        # Assigning a type to the variable 'self' (line 343)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 343, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        _TestRFFTBase.test_invalid_sizes.__dict__.__setitem__('stypy_localization', localization)
        _TestRFFTBase.test_invalid_sizes.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        _TestRFFTBase.test_invalid_sizes.__dict__.__setitem__('stypy_type_store', module_type_store)
        _TestRFFTBase.test_invalid_sizes.__dict__.__setitem__('stypy_function_name', '_TestRFFTBase.test_invalid_sizes')
        _TestRFFTBase.test_invalid_sizes.__dict__.__setitem__('stypy_param_names_list', [])
        _TestRFFTBase.test_invalid_sizes.__dict__.__setitem__('stypy_varargs_param_name', None)
        _TestRFFTBase.test_invalid_sizes.__dict__.__setitem__('stypy_kwargs_param_name', None)
        _TestRFFTBase.test_invalid_sizes.__dict__.__setitem__('stypy_call_defaults', defaults)
        _TestRFFTBase.test_invalid_sizes.__dict__.__setitem__('stypy_call_varargs', varargs)
        _TestRFFTBase.test_invalid_sizes.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        _TestRFFTBase.test_invalid_sizes.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, '_TestRFFTBase.test_invalid_sizes', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_invalid_sizes', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_invalid_sizes(...)' code ##################

        
        # Call to assert_raises(...): (line 343)
        # Processing the call arguments (line 343)
        # Getting the type of 'ValueError' (line 343)
        ValueError_20452 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 343, 22), 'ValueError', False)
        # Getting the type of 'rfft' (line 343)
        rfft_20453 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 343, 34), 'rfft', False)
        
        # Obtaining an instance of the builtin type 'list' (line 343)
        list_20454 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 343, 40), 'list')
        # Adding type elements to the builtin type 'list' instance (line 343)
        
        # Processing the call keyword arguments (line 343)
        kwargs_20455 = {}
        # Getting the type of 'assert_raises' (line 343)
        assert_raises_20451 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 343, 8), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 343)
        assert_raises_call_result_20456 = invoke(stypy.reporting.localization.Localization(__file__, 343, 8), assert_raises_20451, *[ValueError_20452, rfft_20453, list_20454], **kwargs_20455)
        
        
        # Call to assert_raises(...): (line 344)
        # Processing the call arguments (line 344)
        # Getting the type of 'ValueError' (line 344)
        ValueError_20458 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 344, 22), 'ValueError', False)
        # Getting the type of 'rfft' (line 344)
        rfft_20459 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 344, 34), 'rfft', False)
        
        # Obtaining an instance of the builtin type 'list' (line 344)
        list_20460 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 344, 40), 'list')
        # Adding type elements to the builtin type 'list' instance (line 344)
        # Adding element type (line 344)
        
        # Obtaining an instance of the builtin type 'list' (line 344)
        list_20461 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 344, 41), 'list')
        # Adding type elements to the builtin type 'list' instance (line 344)
        # Adding element type (line 344)
        int_20462 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 344, 42), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 344, 41), list_20461, int_20462)
        # Adding element type (line 344)
        int_20463 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 344, 44), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 344, 41), list_20461, int_20463)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 344, 40), list_20460, list_20461)
        # Adding element type (line 344)
        
        # Obtaining an instance of the builtin type 'list' (line 344)
        list_20464 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 344, 47), 'list')
        # Adding type elements to the builtin type 'list' instance (line 344)
        # Adding element type (line 344)
        int_20465 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 344, 48), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 344, 47), list_20464, int_20465)
        # Adding element type (line 344)
        int_20466 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 344, 50), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 344, 47), list_20464, int_20466)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 344, 40), list_20460, list_20464)
        
        int_20467 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 344, 55), 'int')
        # Processing the call keyword arguments (line 344)
        kwargs_20468 = {}
        # Getting the type of 'assert_raises' (line 344)
        assert_raises_20457 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 344, 8), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 344)
        assert_raises_call_result_20469 = invoke(stypy.reporting.localization.Localization(__file__, 344, 8), assert_raises_20457, *[ValueError_20458, rfft_20459, list_20460, int_20467], **kwargs_20468)
        
        
        # ################# End of 'test_invalid_sizes(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_invalid_sizes' in the type store
        # Getting the type of 'stypy_return_type' (line 342)
        stypy_return_type_20470 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 342, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_20470)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_invalid_sizes'
        return stypy_return_type_20470

    # Declaration of the 'MockSeries' class

    class MockSeries(object, ):

        @norecursion
        def __init__(type_of_self, localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '__init__'
            module_type_store = module_type_store.open_function_context('__init__', 348, 8, False)
            # Assigning a type to the variable 'self' (line 349)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 349, 8), 'self', type_of_self)
            
            # Passed parameters checking function
            arguments = process_argument_values(localization, type_of_self, module_type_store, 'MockSeries.__init__', ['data'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return

            # Initialize method data
            init_call_information(module_type_store, '__init__', localization, ['data'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of '__init__(...)' code ##################

            
            # Assigning a Call to a Attribute (line 349):
            
            # Call to asarray(...): (line 349)
            # Processing the call arguments (line 349)
            # Getting the type of 'data' (line 349)
            data_20473 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 349, 35), 'data', False)
            # Processing the call keyword arguments (line 349)
            kwargs_20474 = {}
            # Getting the type of 'np' (line 349)
            np_20471 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 349, 24), 'np', False)
            # Obtaining the member 'asarray' of a type (line 349)
            asarray_20472 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 349, 24), np_20471, 'asarray')
            # Calling asarray(args, kwargs) (line 349)
            asarray_call_result_20475 = invoke(stypy.reporting.localization.Localization(__file__, 349, 24), asarray_20472, *[data_20473], **kwargs_20474)
            
            # Getting the type of 'self' (line 349)
            self_20476 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 349, 12), 'self')
            # Setting the type of the member 'data' of a type (line 349)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 349, 12), self_20476, 'data', asarray_call_result_20475)
            
            # ################# End of '__init__(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()


        @norecursion
        def __getattr__(type_of_self, localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '__getattr__'
            module_type_store = module_type_store.open_function_context('__getattr__', 351, 8, False)
            # Assigning a type to the variable 'self' (line 352)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 352, 8), 'self', type_of_self)
            
            # Passed parameters checking function
            MockSeries.__getattr__.__dict__.__setitem__('stypy_localization', localization)
            MockSeries.__getattr__.__dict__.__setitem__('stypy_type_of_self', type_of_self)
            MockSeries.__getattr__.__dict__.__setitem__('stypy_type_store', module_type_store)
            MockSeries.__getattr__.__dict__.__setitem__('stypy_function_name', 'MockSeries.__getattr__')
            MockSeries.__getattr__.__dict__.__setitem__('stypy_param_names_list', ['item'])
            MockSeries.__getattr__.__dict__.__setitem__('stypy_varargs_param_name', None)
            MockSeries.__getattr__.__dict__.__setitem__('stypy_kwargs_param_name', None)
            MockSeries.__getattr__.__dict__.__setitem__('stypy_call_defaults', defaults)
            MockSeries.__getattr__.__dict__.__setitem__('stypy_call_varargs', varargs)
            MockSeries.__getattr__.__dict__.__setitem__('stypy_call_kwargs', kwargs)
            MockSeries.__getattr__.__dict__.__setitem__('stypy_declared_arg_number', 2)
            arguments = process_argument_values(localization, type_of_self, module_type_store, 'MockSeries.__getattr__', ['item'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, '__getattr__', localization, ['item'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of '__getattr__(...)' code ##################

            
            
            # SSA begins for try-except statement (line 352)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
            
            # Call to getattr(...): (line 353)
            # Processing the call arguments (line 353)
            # Getting the type of 'self' (line 353)
            self_20478 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 353, 31), 'self', False)
            # Obtaining the member 'data' of a type (line 353)
            data_20479 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 353, 31), self_20478, 'data')
            # Getting the type of 'item' (line 353)
            item_20480 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 353, 42), 'item', False)
            # Processing the call keyword arguments (line 353)
            kwargs_20481 = {}
            # Getting the type of 'getattr' (line 353)
            getattr_20477 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 353, 23), 'getattr', False)
            # Calling getattr(args, kwargs) (line 353)
            getattr_call_result_20482 = invoke(stypy.reporting.localization.Localization(__file__, 353, 23), getattr_20477, *[data_20479, item_20480], **kwargs_20481)
            
            # Assigning a type to the variable 'stypy_return_type' (line 353)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 353, 16), 'stypy_return_type', getattr_call_result_20482)
            # SSA branch for the except part of a try statement (line 352)
            # SSA branch for the except 'AttributeError' branch of a try statement (line 352)
            module_type_store.open_ssa_branch('except')
            
            # Call to AttributeError(...): (line 355)
            # Processing the call arguments (line 355)
            
            # Call to format(...): (line 355)
            # Processing the call keyword arguments (line 355)
            # Getting the type of 'item' (line 357)
            item_20486 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 50), 'item', False)
            keyword_20487 = item_20486
            kwargs_20488 = {'attr': keyword_20487}
            str_20484 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 355, 38), 'str', "'MockSeries' object has no attribute '{attr}'")
            # Obtaining the member 'format' of a type (line 355)
            format_20485 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 355, 38), str_20484, 'format')
            # Calling format(args, kwargs) (line 355)
            format_call_result_20489 = invoke(stypy.reporting.localization.Localization(__file__, 355, 38), format_20485, *[], **kwargs_20488)
            
            # Processing the call keyword arguments (line 355)
            kwargs_20490 = {}
            # Getting the type of 'AttributeError' (line 355)
            AttributeError_20483 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 355, 22), 'AttributeError', False)
            # Calling AttributeError(args, kwargs) (line 355)
            AttributeError_call_result_20491 = invoke(stypy.reporting.localization.Localization(__file__, 355, 22), AttributeError_20483, *[format_call_result_20489], **kwargs_20490)
            
            ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 355, 16), AttributeError_call_result_20491, 'raise parameter', BaseException)
            # SSA join for try-except statement (line 352)
            module_type_store = module_type_store.join_ssa_context()
            
            
            # ################# End of '__getattr__(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function '__getattr__' in the type store
            # Getting the type of 'stypy_return_type' (line 351)
            stypy_return_type_20492 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 351, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_20492)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '__getattr__'
            return stypy_return_type_20492

    
    # Assigning a type to the variable 'MockSeries' (line 347)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 347, 4), 'MockSeries', MockSeries)

    @norecursion
    def test_non_ndarray_with_dtype(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_non_ndarray_with_dtype'
        module_type_store = module_type_store.open_function_context('test_non_ndarray_with_dtype', 359, 4, False)
        # Assigning a type to the variable 'self' (line 360)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 360, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        _TestRFFTBase.test_non_ndarray_with_dtype.__dict__.__setitem__('stypy_localization', localization)
        _TestRFFTBase.test_non_ndarray_with_dtype.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        _TestRFFTBase.test_non_ndarray_with_dtype.__dict__.__setitem__('stypy_type_store', module_type_store)
        _TestRFFTBase.test_non_ndarray_with_dtype.__dict__.__setitem__('stypy_function_name', '_TestRFFTBase.test_non_ndarray_with_dtype')
        _TestRFFTBase.test_non_ndarray_with_dtype.__dict__.__setitem__('stypy_param_names_list', [])
        _TestRFFTBase.test_non_ndarray_with_dtype.__dict__.__setitem__('stypy_varargs_param_name', None)
        _TestRFFTBase.test_non_ndarray_with_dtype.__dict__.__setitem__('stypy_kwargs_param_name', None)
        _TestRFFTBase.test_non_ndarray_with_dtype.__dict__.__setitem__('stypy_call_defaults', defaults)
        _TestRFFTBase.test_non_ndarray_with_dtype.__dict__.__setitem__('stypy_call_varargs', varargs)
        _TestRFFTBase.test_non_ndarray_with_dtype.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        _TestRFFTBase.test_non_ndarray_with_dtype.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, '_TestRFFTBase.test_non_ndarray_with_dtype', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_non_ndarray_with_dtype', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_non_ndarray_with_dtype(...)' code ##################

        
        # Assigning a Call to a Name (line 360):
        
        # Call to array(...): (line 360)
        # Processing the call arguments (line 360)
        
        # Obtaining an instance of the builtin type 'list' (line 360)
        list_20495 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 360, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 360)
        # Adding element type (line 360)
        float_20496 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 360, 22), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 360, 21), list_20495, float_20496)
        # Adding element type (line 360)
        float_20497 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 360, 26), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 360, 21), list_20495, float_20497)
        # Adding element type (line 360)
        float_20498 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 360, 30), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 360, 21), list_20495, float_20498)
        # Adding element type (line 360)
        float_20499 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 360, 34), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 360, 21), list_20495, float_20499)
        # Adding element type (line 360)
        float_20500 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 360, 38), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 360, 21), list_20495, float_20500)
        
        # Processing the call keyword arguments (line 360)
        kwargs_20501 = {}
        # Getting the type of 'np' (line 360)
        np_20493 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 360, 12), 'np', False)
        # Obtaining the member 'array' of a type (line 360)
        array_20494 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 360, 12), np_20493, 'array')
        # Calling array(args, kwargs) (line 360)
        array_call_result_20502 = invoke(stypy.reporting.localization.Localization(__file__, 360, 12), array_20494, *[list_20495], **kwargs_20501)
        
        # Assigning a type to the variable 'x' (line 360)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 360, 8), 'x', array_call_result_20502)
        
        # Assigning a Call to a Name (line 361):
        
        # Call to MockSeries(...): (line 361)
        # Processing the call arguments (line 361)
        # Getting the type of 'x' (line 361)
        x_20505 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 361, 38), 'x', False)
        # Processing the call keyword arguments (line 361)
        kwargs_20506 = {}
        # Getting the type of '_TestRFFTBase' (line 361)
        _TestRFFTBase_20503 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 361, 13), '_TestRFFTBase', False)
        # Obtaining the member 'MockSeries' of a type (line 361)
        MockSeries_20504 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 361, 13), _TestRFFTBase_20503, 'MockSeries')
        # Calling MockSeries(args, kwargs) (line 361)
        MockSeries_call_result_20507 = invoke(stypy.reporting.localization.Localization(__file__, 361, 13), MockSeries_20504, *[x_20505], **kwargs_20506)
        
        # Assigning a type to the variable 'xs' (line 361)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 361, 8), 'xs', MockSeries_call_result_20507)
        
        # Assigning a List to a Name (line 363):
        
        # Obtaining an instance of the builtin type 'list' (line 363)
        list_20508 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 363, 19), 'list')
        # Adding type elements to the builtin type 'list' instance (line 363)
        # Adding element type (line 363)
        int_20509 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 363, 20), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 363, 19), list_20508, int_20509)
        # Adding element type (line 363)
        int_20510 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 363, 23), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 363, 19), list_20508, int_20510)
        # Adding element type (line 363)
        int_20511 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 363, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 363, 19), list_20508, int_20511)
        # Adding element type (line 363)
        int_20512 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 363, 29), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 363, 19), list_20508, int_20512)
        # Adding element type (line 363)
        int_20513 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 363, 32), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 363, 19), list_20508, int_20513)
        
        # Assigning a type to the variable 'expected' (line 363)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 363, 8), 'expected', list_20508)
        
        # Assigning a Call to a Name (line 364):
        
        # Call to rfft(...): (line 364)
        # Processing the call arguments (line 364)
        # Getting the type of 'xs' (line 364)
        xs_20515 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 364, 19), 'xs', False)
        # Processing the call keyword arguments (line 364)
        kwargs_20516 = {}
        # Getting the type of 'rfft' (line 364)
        rfft_20514 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 364, 14), 'rfft', False)
        # Calling rfft(args, kwargs) (line 364)
        rfft_call_result_20517 = invoke(stypy.reporting.localization.Localization(__file__, 364, 14), rfft_20514, *[xs_20515], **kwargs_20516)
        
        # Assigning a type to the variable 'out' (line 364)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 364, 8), 'out', rfft_call_result_20517)
        
        # Call to assert_equal(...): (line 367)
        # Processing the call arguments (line 367)
        # Getting the type of 'x' (line 367)
        x_20519 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 367, 21), 'x', False)
        # Getting the type of 'expected' (line 367)
        expected_20520 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 367, 24), 'expected', False)
        # Processing the call keyword arguments (line 367)
        kwargs_20521 = {}
        # Getting the type of 'assert_equal' (line 367)
        assert_equal_20518 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 367, 8), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 367)
        assert_equal_call_result_20522 = invoke(stypy.reporting.localization.Localization(__file__, 367, 8), assert_equal_20518, *[x_20519, expected_20520], **kwargs_20521)
        
        
        # Call to assert_equal(...): (line 368)
        # Processing the call arguments (line 368)
        # Getting the type of 'xs' (line 368)
        xs_20524 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 368, 21), 'xs', False)
        # Obtaining the member 'data' of a type (line 368)
        data_20525 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 368, 21), xs_20524, 'data')
        # Getting the type of 'expected' (line 368)
        expected_20526 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 368, 30), 'expected', False)
        # Processing the call keyword arguments (line 368)
        kwargs_20527 = {}
        # Getting the type of 'assert_equal' (line 368)
        assert_equal_20523 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 368, 8), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 368)
        assert_equal_call_result_20528 = invoke(stypy.reporting.localization.Localization(__file__, 368, 8), assert_equal_20523, *[data_20525, expected_20526], **kwargs_20527)
        
        
        # ################# End of 'test_non_ndarray_with_dtype(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_non_ndarray_with_dtype' in the type store
        # Getting the type of 'stypy_return_type' (line 359)
        stypy_return_type_20529 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 359, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_20529)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_non_ndarray_with_dtype'
        return stypy_return_type_20529


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 315, 0, False)
        # Assigning a type to the variable 'self' (line 316)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 316, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, '_TestRFFTBase.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable '_TestRFFTBase' (line 315)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 315, 0), '_TestRFFTBase', _TestRFFTBase)
# Declaration of the 'TestRFFTDouble' class
# Getting the type of '_TestRFFTBase' (line 370)
_TestRFFTBase_20530 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 370, 21), '_TestRFFTBase')

class TestRFFTDouble(_TestRFFTBase_20530, ):

    @norecursion
    def setup_method(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'setup_method'
        module_type_store = module_type_store.open_function_context('setup_method', 371, 4, False)
        # Assigning a type to the variable 'self' (line 372)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 372, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestRFFTDouble.setup_method.__dict__.__setitem__('stypy_localization', localization)
        TestRFFTDouble.setup_method.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestRFFTDouble.setup_method.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestRFFTDouble.setup_method.__dict__.__setitem__('stypy_function_name', 'TestRFFTDouble.setup_method')
        TestRFFTDouble.setup_method.__dict__.__setitem__('stypy_param_names_list', [])
        TestRFFTDouble.setup_method.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestRFFTDouble.setup_method.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestRFFTDouble.setup_method.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestRFFTDouble.setup_method.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestRFFTDouble.setup_method.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestRFFTDouble.setup_method.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestRFFTDouble.setup_method', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'setup_method', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'setup_method(...)' code ##################

        
        # Assigning a Attribute to a Attribute (line 372):
        # Getting the type of 'np' (line 372)
        np_20531 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 372, 19), 'np')
        # Obtaining the member 'cdouble' of a type (line 372)
        cdouble_20532 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 372, 19), np_20531, 'cdouble')
        # Getting the type of 'self' (line 372)
        self_20533 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 372, 8), 'self')
        # Setting the type of the member 'cdt' of a type (line 372)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 372, 8), self_20533, 'cdt', cdouble_20532)
        
        # Assigning a Attribute to a Attribute (line 373):
        # Getting the type of 'np' (line 373)
        np_20534 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 373, 19), 'np')
        # Obtaining the member 'double' of a type (line 373)
        double_20535 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 373, 19), np_20534, 'double')
        # Getting the type of 'self' (line 373)
        self_20536 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 373, 8), 'self')
        # Setting the type of the member 'rdt' of a type (line 373)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 373, 8), self_20536, 'rdt', double_20535)
        
        # ################# End of 'setup_method(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'setup_method' in the type store
        # Getting the type of 'stypy_return_type' (line 371)
        stypy_return_type_20537 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 371, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_20537)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'setup_method'
        return stypy_return_type_20537


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 370, 0, False)
        # Assigning a type to the variable 'self' (line 371)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 371, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestRFFTDouble.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'TestRFFTDouble' (line 370)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 370, 0), 'TestRFFTDouble', TestRFFTDouble)
# Declaration of the 'TestRFFTSingle' class
# Getting the type of '_TestRFFTBase' (line 376)
_TestRFFTBase_20538 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 376, 21), '_TestRFFTBase')

class TestRFFTSingle(_TestRFFTBase_20538, ):

    @norecursion
    def setup_method(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'setup_method'
        module_type_store = module_type_store.open_function_context('setup_method', 377, 4, False)
        # Assigning a type to the variable 'self' (line 378)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 378, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestRFFTSingle.setup_method.__dict__.__setitem__('stypy_localization', localization)
        TestRFFTSingle.setup_method.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestRFFTSingle.setup_method.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestRFFTSingle.setup_method.__dict__.__setitem__('stypy_function_name', 'TestRFFTSingle.setup_method')
        TestRFFTSingle.setup_method.__dict__.__setitem__('stypy_param_names_list', [])
        TestRFFTSingle.setup_method.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestRFFTSingle.setup_method.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestRFFTSingle.setup_method.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestRFFTSingle.setup_method.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestRFFTSingle.setup_method.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestRFFTSingle.setup_method.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestRFFTSingle.setup_method', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'setup_method', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'setup_method(...)' code ##################

        
        # Assigning a Attribute to a Attribute (line 378):
        # Getting the type of 'np' (line 378)
        np_20539 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 378, 19), 'np')
        # Obtaining the member 'complex64' of a type (line 378)
        complex64_20540 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 378, 19), np_20539, 'complex64')
        # Getting the type of 'self' (line 378)
        self_20541 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 378, 8), 'self')
        # Setting the type of the member 'cdt' of a type (line 378)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 378, 8), self_20541, 'cdt', complex64_20540)
        
        # Assigning a Attribute to a Attribute (line 379):
        # Getting the type of 'np' (line 379)
        np_20542 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 19), 'np')
        # Obtaining the member 'float32' of a type (line 379)
        float32_20543 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 379, 19), np_20542, 'float32')
        # Getting the type of 'self' (line 379)
        self_20544 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 8), 'self')
        # Setting the type of the member 'rdt' of a type (line 379)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 379, 8), self_20544, 'rdt', float32_20543)
        
        # ################# End of 'setup_method(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'setup_method' in the type store
        # Getting the type of 'stypy_return_type' (line 377)
        stypy_return_type_20545 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 377, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_20545)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'setup_method'
        return stypy_return_type_20545


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 376, 0, False)
        # Assigning a type to the variable 'self' (line 377)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 377, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestRFFTSingle.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'TestRFFTSingle' (line 376)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 376, 0), 'TestRFFTSingle', TestRFFTSingle)
# Declaration of the '_TestIRFFTBase' class

class _TestIRFFTBase(object, ):

    @norecursion
    def setup_method(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'setup_method'
        module_type_store = module_type_store.open_function_context('setup_method', 383, 4, False)
        # Assigning a type to the variable 'self' (line 384)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 384, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        _TestIRFFTBase.setup_method.__dict__.__setitem__('stypy_localization', localization)
        _TestIRFFTBase.setup_method.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        _TestIRFFTBase.setup_method.__dict__.__setitem__('stypy_type_store', module_type_store)
        _TestIRFFTBase.setup_method.__dict__.__setitem__('stypy_function_name', '_TestIRFFTBase.setup_method')
        _TestIRFFTBase.setup_method.__dict__.__setitem__('stypy_param_names_list', [])
        _TestIRFFTBase.setup_method.__dict__.__setitem__('stypy_varargs_param_name', None)
        _TestIRFFTBase.setup_method.__dict__.__setitem__('stypy_kwargs_param_name', None)
        _TestIRFFTBase.setup_method.__dict__.__setitem__('stypy_call_defaults', defaults)
        _TestIRFFTBase.setup_method.__dict__.__setitem__('stypy_call_varargs', varargs)
        _TestIRFFTBase.setup_method.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        _TestIRFFTBase.setup_method.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, '_TestIRFFTBase.setup_method', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'setup_method', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'setup_method(...)' code ##################

        
        # Call to seed(...): (line 384)
        # Processing the call arguments (line 384)
        int_20549 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 384, 23), 'int')
        # Processing the call keyword arguments (line 384)
        kwargs_20550 = {}
        # Getting the type of 'np' (line 384)
        np_20546 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 384, 8), 'np', False)
        # Obtaining the member 'random' of a type (line 384)
        random_20547 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 384, 8), np_20546, 'random')
        # Obtaining the member 'seed' of a type (line 384)
        seed_20548 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 384, 8), random_20547, 'seed')
        # Calling seed(args, kwargs) (line 384)
        seed_call_result_20551 = invoke(stypy.reporting.localization.Localization(__file__, 384, 8), seed_20548, *[int_20549], **kwargs_20550)
        
        
        # ################# End of 'setup_method(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'setup_method' in the type store
        # Getting the type of 'stypy_return_type' (line 383)
        stypy_return_type_20552 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 383, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_20552)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'setup_method'
        return stypy_return_type_20552


    @norecursion
    def test_definition(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_definition'
        module_type_store = module_type_store.open_function_context('test_definition', 386, 4, False)
        # Assigning a type to the variable 'self' (line 387)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 387, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        _TestIRFFTBase.test_definition.__dict__.__setitem__('stypy_localization', localization)
        _TestIRFFTBase.test_definition.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        _TestIRFFTBase.test_definition.__dict__.__setitem__('stypy_type_store', module_type_store)
        _TestIRFFTBase.test_definition.__dict__.__setitem__('stypy_function_name', '_TestIRFFTBase.test_definition')
        _TestIRFFTBase.test_definition.__dict__.__setitem__('stypy_param_names_list', [])
        _TestIRFFTBase.test_definition.__dict__.__setitem__('stypy_varargs_param_name', None)
        _TestIRFFTBase.test_definition.__dict__.__setitem__('stypy_kwargs_param_name', None)
        _TestIRFFTBase.test_definition.__dict__.__setitem__('stypy_call_defaults', defaults)
        _TestIRFFTBase.test_definition.__dict__.__setitem__('stypy_call_varargs', varargs)
        _TestIRFFTBase.test_definition.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        _TestIRFFTBase.test_definition.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, '_TestIRFFTBase.test_definition', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_definition', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_definition(...)' code ##################

        
        # Assigning a List to a Name (line 387):
        
        # Obtaining an instance of the builtin type 'list' (line 387)
        list_20553 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 387, 13), 'list')
        # Adding type elements to the builtin type 'list' instance (line 387)
        # Adding element type (line 387)
        int_20554 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 387, 14), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 387, 13), list_20553, int_20554)
        # Adding element type (line 387)
        int_20555 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 387, 16), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 387, 13), list_20553, int_20555)
        # Adding element type (line 387)
        int_20556 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 387, 18), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 387, 13), list_20553, int_20556)
        # Adding element type (line 387)
        int_20557 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 387, 20), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 387, 13), list_20553, int_20557)
        # Adding element type (line 387)
        int_20558 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 387, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 387, 13), list_20553, int_20558)
        # Adding element type (line 387)
        int_20559 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 387, 24), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 387, 13), list_20553, int_20559)
        # Adding element type (line 387)
        int_20560 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 387, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 387, 13), list_20553, int_20560)
        # Adding element type (line 387)
        int_20561 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 387, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 387, 13), list_20553, int_20561)
        
        # Assigning a type to the variable 'x1' (line 387)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 387, 8), 'x1', list_20553)
        
        # Assigning a List to a Name (line 388):
        
        # Obtaining an instance of the builtin type 'list' (line 388)
        list_20562 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 388, 15), 'list')
        # Adding type elements to the builtin type 'list' instance (line 388)
        # Adding element type (line 388)
        int_20563 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 388, 16), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 388, 15), list_20562, int_20563)
        # Adding element type (line 388)
        int_20564 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 388, 18), 'int')
        complex_20565 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 388, 20), 'complex')
        # Applying the binary operator '+' (line 388)
        result_add_20566 = python_operator(stypy.reporting.localization.Localization(__file__, 388, 18), '+', int_20564, complex_20565)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 388, 15), list_20562, result_add_20566)
        # Adding element type (line 388)
        int_20567 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 388, 23), 'int')
        complex_20568 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 388, 25), 'complex')
        # Applying the binary operator '+' (line 388)
        result_add_20569 = python_operator(stypy.reporting.localization.Localization(__file__, 388, 23), '+', int_20567, complex_20568)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 388, 15), list_20562, result_add_20569)
        # Adding element type (line 388)
        int_20570 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 388, 28), 'int')
        complex_20571 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 388, 30), 'complex')
        # Applying the binary operator '+' (line 388)
        result_add_20572 = python_operator(stypy.reporting.localization.Localization(__file__, 388, 28), '+', int_20570, complex_20571)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 388, 15), list_20562, result_add_20572)
        # Adding element type (line 388)
        int_20573 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 388, 33), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 388, 15), list_20562, int_20573)
        # Adding element type (line 388)
        int_20574 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 388, 35), 'int')
        complex_20575 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 388, 37), 'complex')
        # Applying the binary operator '-' (line 388)
        result_sub_20576 = python_operator(stypy.reporting.localization.Localization(__file__, 388, 35), '-', int_20574, complex_20575)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 388, 15), list_20562, result_sub_20576)
        # Adding element type (line 388)
        int_20577 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 388, 40), 'int')
        complex_20578 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 388, 42), 'complex')
        # Applying the binary operator '-' (line 388)
        result_sub_20579 = python_operator(stypy.reporting.localization.Localization(__file__, 388, 40), '-', int_20577, complex_20578)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 388, 15), list_20562, result_sub_20579)
        # Adding element type (line 388)
        int_20580 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 388, 45), 'int')
        complex_20581 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 388, 47), 'complex')
        # Applying the binary operator '-' (line 388)
        result_sub_20582 = python_operator(stypy.reporting.localization.Localization(__file__, 388, 45), '-', int_20580, complex_20581)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 388, 15), list_20562, result_sub_20582)
        
        # Assigning a type to the variable 'x1_1' (line 388)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 388, 8), 'x1_1', list_20562)
        
        # Assigning a List to a Name (line 389):
        
        # Obtaining an instance of the builtin type 'list' (line 389)
        list_20583 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 389, 13), 'list')
        # Adding type elements to the builtin type 'list' instance (line 389)
        # Adding element type (line 389)
        int_20584 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 389, 14), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 389, 13), list_20583, int_20584)
        # Adding element type (line 389)
        int_20585 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 389, 16), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 389, 13), list_20583, int_20585)
        # Adding element type (line 389)
        int_20586 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 389, 18), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 389, 13), list_20583, int_20586)
        # Adding element type (line 389)
        int_20587 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 389, 20), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 389, 13), list_20583, int_20587)
        # Adding element type (line 389)
        int_20588 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 389, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 389, 13), list_20583, int_20588)
        # Adding element type (line 389)
        int_20589 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 389, 24), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 389, 13), list_20583, int_20589)
        # Adding element type (line 389)
        int_20590 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 389, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 389, 13), list_20583, int_20590)
        # Adding element type (line 389)
        int_20591 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 389, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 389, 13), list_20583, int_20591)
        # Adding element type (line 389)
        int_20592 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 389, 30), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 389, 13), list_20583, int_20592)
        
        # Assigning a type to the variable 'x2' (line 389)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 389, 8), 'x2', list_20583)
        
        # Assigning a List to a Name (line 390):
        
        # Obtaining an instance of the builtin type 'list' (line 390)
        list_20593 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 390, 15), 'list')
        # Adding type elements to the builtin type 'list' instance (line 390)
        # Adding element type (line 390)
        int_20594 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 390, 16), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 390, 15), list_20593, int_20594)
        # Adding element type (line 390)
        int_20595 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 390, 18), 'int')
        complex_20596 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 390, 20), 'complex')
        # Applying the binary operator '+' (line 390)
        result_add_20597 = python_operator(stypy.reporting.localization.Localization(__file__, 390, 18), '+', int_20595, complex_20596)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 390, 15), list_20593, result_add_20597)
        # Adding element type (line 390)
        int_20598 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 390, 23), 'int')
        complex_20599 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 390, 25), 'complex')
        # Applying the binary operator '+' (line 390)
        result_add_20600 = python_operator(stypy.reporting.localization.Localization(__file__, 390, 23), '+', int_20598, complex_20599)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 390, 15), list_20593, result_add_20600)
        # Adding element type (line 390)
        int_20601 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 390, 28), 'int')
        complex_20602 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 390, 30), 'complex')
        # Applying the binary operator '+' (line 390)
        result_add_20603 = python_operator(stypy.reporting.localization.Localization(__file__, 390, 28), '+', int_20601, complex_20602)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 390, 15), list_20593, result_add_20603)
        # Adding element type (line 390)
        int_20604 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 390, 33), 'int')
        complex_20605 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 390, 35), 'complex')
        # Applying the binary operator '+' (line 390)
        result_add_20606 = python_operator(stypy.reporting.localization.Localization(__file__, 390, 33), '+', int_20604, complex_20605)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 390, 15), list_20593, result_add_20606)
        # Adding element type (line 390)
        int_20607 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 390, 38), 'int')
        complex_20608 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 390, 40), 'complex')
        # Applying the binary operator '-' (line 390)
        result_sub_20609 = python_operator(stypy.reporting.localization.Localization(__file__, 390, 38), '-', int_20607, complex_20608)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 390, 15), list_20593, result_sub_20609)
        # Adding element type (line 390)
        int_20610 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 390, 43), 'int')
        complex_20611 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 390, 45), 'complex')
        # Applying the binary operator '-' (line 390)
        result_sub_20612 = python_operator(stypy.reporting.localization.Localization(__file__, 390, 43), '-', int_20610, complex_20611)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 390, 15), list_20593, result_sub_20612)
        # Adding element type (line 390)
        int_20613 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 390, 48), 'int')
        complex_20614 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 390, 50), 'complex')
        # Applying the binary operator '-' (line 390)
        result_sub_20615 = python_operator(stypy.reporting.localization.Localization(__file__, 390, 48), '-', int_20613, complex_20614)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 390, 15), list_20593, result_sub_20615)
        # Adding element type (line 390)
        int_20616 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 390, 53), 'int')
        complex_20617 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 390, 55), 'complex')
        # Applying the binary operator '-' (line 390)
        result_sub_20618 = python_operator(stypy.reporting.localization.Localization(__file__, 390, 53), '-', int_20616, complex_20617)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 390, 15), list_20593, result_sub_20618)
        
        # Assigning a type to the variable 'x2_1' (line 390)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 390, 8), 'x2_1', list_20593)

        @norecursion
        def _test(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_test'
            module_type_store = module_type_store.open_function_context('_test', 392, 8, False)
            
            # Passed parameters checking function
            _test.stypy_localization = localization
            _test.stypy_type_of_self = None
            _test.stypy_type_store = module_type_store
            _test.stypy_function_name = '_test'
            _test.stypy_param_names_list = ['x', 'xr']
            _test.stypy_varargs_param_name = None
            _test.stypy_kwargs_param_name = None
            _test.stypy_call_defaults = defaults
            _test.stypy_call_varargs = varargs
            _test.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_test', ['x', 'xr'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, '_test', localization, ['x', 'xr'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of '_test(...)' code ##################

            
            # Assigning a Call to a Name (line 393):
            
            # Call to irfft(...): (line 393)
            # Processing the call arguments (line 393)
            
            # Call to array(...): (line 393)
            # Processing the call arguments (line 393)
            # Getting the type of 'x' (line 393)
            x_20622 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 393, 31), 'x', False)
            # Processing the call keyword arguments (line 393)
            # Getting the type of 'self' (line 393)
            self_20623 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 393, 40), 'self', False)
            # Obtaining the member 'rdt' of a type (line 393)
            rdt_20624 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 393, 40), self_20623, 'rdt')
            keyword_20625 = rdt_20624
            kwargs_20626 = {'dtype': keyword_20625}
            # Getting the type of 'np' (line 393)
            np_20620 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 393, 22), 'np', False)
            # Obtaining the member 'array' of a type (line 393)
            array_20621 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 393, 22), np_20620, 'array')
            # Calling array(args, kwargs) (line 393)
            array_call_result_20627 = invoke(stypy.reporting.localization.Localization(__file__, 393, 22), array_20621, *[x_20622], **kwargs_20626)
            
            # Processing the call keyword arguments (line 393)
            kwargs_20628 = {}
            # Getting the type of 'irfft' (line 393)
            irfft_20619 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 393, 16), 'irfft', False)
            # Calling irfft(args, kwargs) (line 393)
            irfft_call_result_20629 = invoke(stypy.reporting.localization.Localization(__file__, 393, 16), irfft_20619, *[array_call_result_20627], **kwargs_20628)
            
            # Assigning a type to the variable 'y' (line 393)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 393, 12), 'y', irfft_call_result_20629)
            
            # Assigning a Call to a Name (line 394):
            
            # Call to direct_irdft(...): (line 394)
            # Processing the call arguments (line 394)
            # Getting the type of 'x' (line 394)
            x_20631 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 394, 30), 'x', False)
            # Processing the call keyword arguments (line 394)
            kwargs_20632 = {}
            # Getting the type of 'direct_irdft' (line 394)
            direct_irdft_20630 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 394, 17), 'direct_irdft', False)
            # Calling direct_irdft(args, kwargs) (line 394)
            direct_irdft_call_result_20633 = invoke(stypy.reporting.localization.Localization(__file__, 394, 17), direct_irdft_20630, *[x_20631], **kwargs_20632)
            
            # Assigning a type to the variable 'y1' (line 394)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 394, 12), 'y1', direct_irdft_call_result_20633)
            
            # Call to assert_equal(...): (line 395)
            # Processing the call arguments (line 395)
            # Getting the type of 'y' (line 395)
            y_20635 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 395, 25), 'y', False)
            # Obtaining the member 'dtype' of a type (line 395)
            dtype_20636 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 395, 25), y_20635, 'dtype')
            # Getting the type of 'self' (line 395)
            self_20637 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 395, 34), 'self', False)
            # Obtaining the member 'rdt' of a type (line 395)
            rdt_20638 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 395, 34), self_20637, 'rdt')
            # Processing the call keyword arguments (line 395)
            kwargs_20639 = {}
            # Getting the type of 'assert_equal' (line 395)
            assert_equal_20634 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 395, 12), 'assert_equal', False)
            # Calling assert_equal(args, kwargs) (line 395)
            assert_equal_call_result_20640 = invoke(stypy.reporting.localization.Localization(__file__, 395, 12), assert_equal_20634, *[dtype_20636, rdt_20638], **kwargs_20639)
            
            
            # Call to assert_array_almost_equal(...): (line 396)
            # Processing the call arguments (line 396)
            # Getting the type of 'y' (line 396)
            y_20642 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 396, 38), 'y', False)
            # Getting the type of 'y1' (line 396)
            y1_20643 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 396, 40), 'y1', False)
            # Processing the call keyword arguments (line 396)
            # Getting the type of 'self' (line 396)
            self_20644 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 396, 52), 'self', False)
            # Obtaining the member 'ndec' of a type (line 396)
            ndec_20645 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 396, 52), self_20644, 'ndec')
            keyword_20646 = ndec_20645
            kwargs_20647 = {'decimal': keyword_20646}
            # Getting the type of 'assert_array_almost_equal' (line 396)
            assert_array_almost_equal_20641 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 396, 12), 'assert_array_almost_equal', False)
            # Calling assert_array_almost_equal(args, kwargs) (line 396)
            assert_array_almost_equal_call_result_20648 = invoke(stypy.reporting.localization.Localization(__file__, 396, 12), assert_array_almost_equal_20641, *[y_20642, y1_20643], **kwargs_20647)
            
            
            # Call to assert_array_almost_equal(...): (line 397)
            # Processing the call arguments (line 397)
            # Getting the type of 'y' (line 397)
            y_20650 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 397, 38), 'y', False)
            
            # Call to ifft(...): (line 397)
            # Processing the call arguments (line 397)
            # Getting the type of 'xr' (line 397)
            xr_20652 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 397, 45), 'xr', False)
            # Processing the call keyword arguments (line 397)
            kwargs_20653 = {}
            # Getting the type of 'ifft' (line 397)
            ifft_20651 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 397, 40), 'ifft', False)
            # Calling ifft(args, kwargs) (line 397)
            ifft_call_result_20654 = invoke(stypy.reporting.localization.Localization(__file__, 397, 40), ifft_20651, *[xr_20652], **kwargs_20653)
            
            # Processing the call keyword arguments (line 397)
            # Getting the type of 'self' (line 397)
            self_20655 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 397, 58), 'self', False)
            # Obtaining the member 'ndec' of a type (line 397)
            ndec_20656 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 397, 58), self_20655, 'ndec')
            keyword_20657 = ndec_20656
            kwargs_20658 = {'decimal': keyword_20657}
            # Getting the type of 'assert_array_almost_equal' (line 397)
            assert_array_almost_equal_20649 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 397, 12), 'assert_array_almost_equal', False)
            # Calling assert_array_almost_equal(args, kwargs) (line 397)
            assert_array_almost_equal_call_result_20659 = invoke(stypy.reporting.localization.Localization(__file__, 397, 12), assert_array_almost_equal_20649, *[y_20650, ifft_call_result_20654], **kwargs_20658)
            
            
            # ################# End of '_test(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function '_test' in the type store
            # Getting the type of 'stypy_return_type' (line 392)
            stypy_return_type_20660 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_20660)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_test'
            return stypy_return_type_20660

        # Assigning a type to the variable '_test' (line 392)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 392, 8), '_test', _test)
        
        # Call to _test(...): (line 399)
        # Processing the call arguments (line 399)
        # Getting the type of 'x1' (line 399)
        x1_20662 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 399, 14), 'x1', False)
        # Getting the type of 'x1_1' (line 399)
        x1_1_20663 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 399, 18), 'x1_1', False)
        # Processing the call keyword arguments (line 399)
        kwargs_20664 = {}
        # Getting the type of '_test' (line 399)
        _test_20661 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 399, 8), '_test', False)
        # Calling _test(args, kwargs) (line 399)
        _test_call_result_20665 = invoke(stypy.reporting.localization.Localization(__file__, 399, 8), _test_20661, *[x1_20662, x1_1_20663], **kwargs_20664)
        
        
        # Call to _test(...): (line 400)
        # Processing the call arguments (line 400)
        # Getting the type of 'x2' (line 400)
        x2_20667 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 400, 14), 'x2', False)
        # Getting the type of 'x2_1' (line 400)
        x2_1_20668 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 400, 18), 'x2_1', False)
        # Processing the call keyword arguments (line 400)
        kwargs_20669 = {}
        # Getting the type of '_test' (line 400)
        _test_20666 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 400, 8), '_test', False)
        # Calling _test(args, kwargs) (line 400)
        _test_call_result_20670 = invoke(stypy.reporting.localization.Localization(__file__, 400, 8), _test_20666, *[x2_20667, x2_1_20668], **kwargs_20669)
        
        
        # ################# End of 'test_definition(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_definition' in the type store
        # Getting the type of 'stypy_return_type' (line 386)
        stypy_return_type_20671 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 386, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_20671)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_definition'
        return stypy_return_type_20671


    @norecursion
    def test_djbfft(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_djbfft'
        module_type_store = module_type_store.open_function_context('test_djbfft', 402, 4, False)
        # Assigning a type to the variable 'self' (line 403)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 403, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        _TestIRFFTBase.test_djbfft.__dict__.__setitem__('stypy_localization', localization)
        _TestIRFFTBase.test_djbfft.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        _TestIRFFTBase.test_djbfft.__dict__.__setitem__('stypy_type_store', module_type_store)
        _TestIRFFTBase.test_djbfft.__dict__.__setitem__('stypy_function_name', '_TestIRFFTBase.test_djbfft')
        _TestIRFFTBase.test_djbfft.__dict__.__setitem__('stypy_param_names_list', [])
        _TestIRFFTBase.test_djbfft.__dict__.__setitem__('stypy_varargs_param_name', None)
        _TestIRFFTBase.test_djbfft.__dict__.__setitem__('stypy_kwargs_param_name', None)
        _TestIRFFTBase.test_djbfft.__dict__.__setitem__('stypy_call_defaults', defaults)
        _TestIRFFTBase.test_djbfft.__dict__.__setitem__('stypy_call_varargs', varargs)
        _TestIRFFTBase.test_djbfft.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        _TestIRFFTBase.test_djbfft.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, '_TestIRFFTBase.test_djbfft', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_djbfft', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_djbfft(...)' code ##################

        stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 403, 8))
        
        # 'from numpy.fft import numpy_ifft' statement (line 403)
        update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/fftpack/tests/')
        import_20672 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 403, 8), 'numpy.fft')

        if (type(import_20672) is not StypyTypeError):

            if (import_20672 != 'pyd_module'):
                __import__(import_20672)
                sys_modules_20673 = sys.modules[import_20672]
                import_from_module(stypy.reporting.localization.Localization(__file__, 403, 8), 'numpy.fft', sys_modules_20673.module_type_store, module_type_store, ['ifft'])
                nest_module(stypy.reporting.localization.Localization(__file__, 403, 8), __file__, sys_modules_20673, sys_modules_20673.module_type_store, module_type_store)
            else:
                from numpy.fft import ifft as numpy_ifft

                import_from_module(stypy.reporting.localization.Localization(__file__, 403, 8), 'numpy.fft', None, module_type_store, ['ifft'], [numpy_ifft])

        else:
            # Assigning a type to the variable 'numpy.fft' (line 403)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 403, 8), 'numpy.fft', import_20672)

        # Adding an alias
        module_type_store.add_alias('numpy_ifft', 'ifft')
        remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/fftpack/tests/')
        
        
        
        # Call to range(...): (line 404)
        # Processing the call arguments (line 404)
        int_20675 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 404, 23), 'int')
        int_20676 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 404, 25), 'int')
        # Processing the call keyword arguments (line 404)
        kwargs_20677 = {}
        # Getting the type of 'range' (line 404)
        range_20674 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 404, 17), 'range', False)
        # Calling range(args, kwargs) (line 404)
        range_call_result_20678 = invoke(stypy.reporting.localization.Localization(__file__, 404, 17), range_20674, *[int_20675, int_20676], **kwargs_20677)
        
        # Testing the type of a for loop iterable (line 404)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 404, 8), range_call_result_20678)
        # Getting the type of the for loop variable (line 404)
        for_loop_var_20679 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 404, 8), range_call_result_20678)
        # Assigning a type to the variable 'i' (line 404)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 404, 8), 'i', for_loop_var_20679)
        # SSA begins for a for statement (line 404)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a BinOp to a Name (line 405):
        int_20680 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 405, 16), 'int')
        # Getting the type of 'i' (line 405)
        i_20681 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 405, 19), 'i')
        # Applying the binary operator '**' (line 405)
        result_pow_20682 = python_operator(stypy.reporting.localization.Localization(__file__, 405, 16), '**', int_20680, i_20681)
        
        # Assigning a type to the variable 'n' (line 405)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 405, 12), 'n', result_pow_20682)
        
        # Assigning a Call to a Name (line 406):
        
        # Call to list(...): (line 406)
        # Processing the call arguments (line 406)
        
        # Call to range(...): (line 406)
        # Processing the call arguments (line 406)
        # Getting the type of 'n' (line 406)
        n_20685 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 406, 27), 'n', False)
        # Processing the call keyword arguments (line 406)
        kwargs_20686 = {}
        # Getting the type of 'range' (line 406)
        range_20684 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 406, 21), 'range', False)
        # Calling range(args, kwargs) (line 406)
        range_call_result_20687 = invoke(stypy.reporting.localization.Localization(__file__, 406, 21), range_20684, *[n_20685], **kwargs_20686)
        
        # Processing the call keyword arguments (line 406)
        kwargs_20688 = {}
        # Getting the type of 'list' (line 406)
        list_20683 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 406, 16), 'list', False)
        # Calling list(args, kwargs) (line 406)
        list_call_result_20689 = invoke(stypy.reporting.localization.Localization(__file__, 406, 16), list_20683, *[range_call_result_20687], **kwargs_20688)
        
        # Assigning a type to the variable 'x' (line 406)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 406, 12), 'x', list_call_result_20689)
        
        # Assigning a Call to a Name (line 407):
        
        # Call to zeros(...): (line 407)
        # Processing the call arguments (line 407)
        
        # Obtaining an instance of the builtin type 'tuple' (line 407)
        tuple_20691 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 407, 24), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 407)
        # Adding element type (line 407)
        # Getting the type of 'n' (line 407)
        n_20692 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 407, 24), 'n', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 407, 24), tuple_20691, n_20692)
        
        # Processing the call keyword arguments (line 407)
        # Getting the type of 'cdouble' (line 407)
        cdouble_20693 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 407, 34), 'cdouble', False)
        keyword_20694 = cdouble_20693
        kwargs_20695 = {'dtype': keyword_20694}
        # Getting the type of 'zeros' (line 407)
        zeros_20690 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 407, 17), 'zeros', False)
        # Calling zeros(args, kwargs) (line 407)
        zeros_call_result_20696 = invoke(stypy.reporting.localization.Localization(__file__, 407, 17), zeros_20690, *[tuple_20691], **kwargs_20695)
        
        # Assigning a type to the variable 'x1' (line 407)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 407, 12), 'x1', zeros_call_result_20696)
        
        # Assigning a Subscript to a Subscript (line 408):
        
        # Obtaining the type of the subscript
        int_20697 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 408, 22), 'int')
        # Getting the type of 'x' (line 408)
        x_20698 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 408, 20), 'x')
        # Obtaining the member '__getitem__' of a type (line 408)
        getitem___20699 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 408, 20), x_20698, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 408)
        subscript_call_result_20700 = invoke(stypy.reporting.localization.Localization(__file__, 408, 20), getitem___20699, int_20697)
        
        # Getting the type of 'x1' (line 408)
        x1_20701 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 408, 12), 'x1')
        int_20702 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 408, 15), 'int')
        # Storing an element on a container (line 408)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 408, 12), x1_20701, (int_20702, subscript_call_result_20700))
        
        
        # Call to range(...): (line 409)
        # Processing the call arguments (line 409)
        int_20704 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 409, 27), 'int')
        # Getting the type of 'n' (line 409)
        n_20705 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 409, 30), 'n', False)
        int_20706 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 409, 33), 'int')
        # Applying the binary operator '//' (line 409)
        result_floordiv_20707 = python_operator(stypy.reporting.localization.Localization(__file__, 409, 30), '//', n_20705, int_20706)
        
        # Processing the call keyword arguments (line 409)
        kwargs_20708 = {}
        # Getting the type of 'range' (line 409)
        range_20703 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 409, 21), 'range', False)
        # Calling range(args, kwargs) (line 409)
        range_call_result_20709 = invoke(stypy.reporting.localization.Localization(__file__, 409, 21), range_20703, *[int_20704, result_floordiv_20707], **kwargs_20708)
        
        # Testing the type of a for loop iterable (line 409)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 409, 12), range_call_result_20709)
        # Getting the type of the for loop variable (line 409)
        for_loop_var_20710 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 409, 12), range_call_result_20709)
        # Assigning a type to the variable 'k' (line 409)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 409, 12), 'k', for_loop_var_20710)
        # SSA begins for a for statement (line 409)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a BinOp to a Subscript (line 410):
        
        # Obtaining the type of the subscript
        int_20711 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 410, 26), 'int')
        # Getting the type of 'k' (line 410)
        k_20712 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 410, 28), 'k')
        # Applying the binary operator '*' (line 410)
        result_mul_20713 = python_operator(stypy.reporting.localization.Localization(__file__, 410, 26), '*', int_20711, k_20712)
        
        int_20714 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 410, 30), 'int')
        # Applying the binary operator '-' (line 410)
        result_sub_20715 = python_operator(stypy.reporting.localization.Localization(__file__, 410, 26), '-', result_mul_20713, int_20714)
        
        # Getting the type of 'x' (line 410)
        x_20716 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 410, 24), 'x')
        # Obtaining the member '__getitem__' of a type (line 410)
        getitem___20717 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 410, 24), x_20716, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 410)
        subscript_call_result_20718 = invoke(stypy.reporting.localization.Localization(__file__, 410, 24), getitem___20717, result_sub_20715)
        
        complex_20719 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 410, 33), 'complex')
        
        # Obtaining the type of the subscript
        int_20720 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 410, 38), 'int')
        # Getting the type of 'k' (line 410)
        k_20721 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 410, 40), 'k')
        # Applying the binary operator '*' (line 410)
        result_mul_20722 = python_operator(stypy.reporting.localization.Localization(__file__, 410, 38), '*', int_20720, k_20721)
        
        # Getting the type of 'x' (line 410)
        x_20723 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 410, 36), 'x')
        # Obtaining the member '__getitem__' of a type (line 410)
        getitem___20724 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 410, 36), x_20723, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 410)
        subscript_call_result_20725 = invoke(stypy.reporting.localization.Localization(__file__, 410, 36), getitem___20724, result_mul_20722)
        
        # Applying the binary operator '*' (line 410)
        result_mul_20726 = python_operator(stypy.reporting.localization.Localization(__file__, 410, 33), '*', complex_20719, subscript_call_result_20725)
        
        # Applying the binary operator '+' (line 410)
        result_add_20727 = python_operator(stypy.reporting.localization.Localization(__file__, 410, 24), '+', subscript_call_result_20718, result_mul_20726)
        
        # Getting the type of 'x1' (line 410)
        x1_20728 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 410, 16), 'x1')
        # Getting the type of 'k' (line 410)
        k_20729 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 410, 19), 'k')
        # Storing an element on a container (line 410)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 410, 16), x1_20728, (k_20729, result_add_20727))
        
        # Assigning a BinOp to a Subscript (line 411):
        
        # Obtaining the type of the subscript
        int_20730 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 411, 28), 'int')
        # Getting the type of 'k' (line 411)
        k_20731 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 411, 30), 'k')
        # Applying the binary operator '*' (line 411)
        result_mul_20732 = python_operator(stypy.reporting.localization.Localization(__file__, 411, 28), '*', int_20730, k_20731)
        
        int_20733 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 411, 32), 'int')
        # Applying the binary operator '-' (line 411)
        result_sub_20734 = python_operator(stypy.reporting.localization.Localization(__file__, 411, 28), '-', result_mul_20732, int_20733)
        
        # Getting the type of 'x' (line 411)
        x_20735 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 411, 26), 'x')
        # Obtaining the member '__getitem__' of a type (line 411)
        getitem___20736 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 411, 26), x_20735, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 411)
        subscript_call_result_20737 = invoke(stypy.reporting.localization.Localization(__file__, 411, 26), getitem___20736, result_sub_20734)
        
        complex_20738 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 411, 35), 'complex')
        
        # Obtaining the type of the subscript
        int_20739 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 411, 40), 'int')
        # Getting the type of 'k' (line 411)
        k_20740 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 411, 42), 'k')
        # Applying the binary operator '*' (line 411)
        result_mul_20741 = python_operator(stypy.reporting.localization.Localization(__file__, 411, 40), '*', int_20739, k_20740)
        
        # Getting the type of 'x' (line 411)
        x_20742 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 411, 38), 'x')
        # Obtaining the member '__getitem__' of a type (line 411)
        getitem___20743 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 411, 38), x_20742, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 411)
        subscript_call_result_20744 = invoke(stypy.reporting.localization.Localization(__file__, 411, 38), getitem___20743, result_mul_20741)
        
        # Applying the binary operator '*' (line 411)
        result_mul_20745 = python_operator(stypy.reporting.localization.Localization(__file__, 411, 35), '*', complex_20738, subscript_call_result_20744)
        
        # Applying the binary operator '-' (line 411)
        result_sub_20746 = python_operator(stypy.reporting.localization.Localization(__file__, 411, 26), '-', subscript_call_result_20737, result_mul_20745)
        
        # Getting the type of 'x1' (line 411)
        x1_20747 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 411, 16), 'x1')
        # Getting the type of 'n' (line 411)
        n_20748 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 411, 19), 'n')
        # Getting the type of 'k' (line 411)
        k_20749 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 411, 21), 'k')
        # Applying the binary operator '-' (line 411)
        result_sub_20750 = python_operator(stypy.reporting.localization.Localization(__file__, 411, 19), '-', n_20748, k_20749)
        
        # Storing an element on a container (line 411)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 411, 16), x1_20747, (result_sub_20750, result_sub_20746))
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Subscript to a Subscript (line 412):
        
        # Obtaining the type of the subscript
        int_20751 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 412, 25), 'int')
        # Getting the type of 'x' (line 412)
        x_20752 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 412, 23), 'x')
        # Obtaining the member '__getitem__' of a type (line 412)
        getitem___20753 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 412, 23), x_20752, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 412)
        subscript_call_result_20754 = invoke(stypy.reporting.localization.Localization(__file__, 412, 23), getitem___20753, int_20751)
        
        # Getting the type of 'x1' (line 412)
        x1_20755 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 412, 12), 'x1')
        # Getting the type of 'n' (line 412)
        n_20756 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 412, 15), 'n')
        int_20757 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 412, 18), 'int')
        # Applying the binary operator '//' (line 412)
        result_floordiv_20758 = python_operator(stypy.reporting.localization.Localization(__file__, 412, 15), '//', n_20756, int_20757)
        
        # Storing an element on a container (line 412)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 412, 12), x1_20755, (result_floordiv_20758, subscript_call_result_20754))
        
        # Assigning a Call to a Name (line 413):
        
        # Call to numpy_ifft(...): (line 413)
        # Processing the call arguments (line 413)
        # Getting the type of 'x1' (line 413)
        x1_20760 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 413, 28), 'x1', False)
        # Processing the call keyword arguments (line 413)
        kwargs_20761 = {}
        # Getting the type of 'numpy_ifft' (line 413)
        numpy_ifft_20759 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 413, 17), 'numpy_ifft', False)
        # Calling numpy_ifft(args, kwargs) (line 413)
        numpy_ifft_call_result_20762 = invoke(stypy.reporting.localization.Localization(__file__, 413, 17), numpy_ifft_20759, *[x1_20760], **kwargs_20761)
        
        # Assigning a type to the variable 'y1' (line 413)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 413, 12), 'y1', numpy_ifft_call_result_20762)
        
        # Assigning a Call to a Name (line 414):
        
        # Call to drfft(...): (line 414)
        # Processing the call arguments (line 414)
        # Getting the type of 'x' (line 414)
        x_20765 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 414, 30), 'x', False)
        # Processing the call keyword arguments (line 414)
        int_20766 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 414, 42), 'int')
        keyword_20767 = int_20766
        kwargs_20768 = {'direction': keyword_20767}
        # Getting the type of 'fftpack' (line 414)
        fftpack_20763 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 414, 16), 'fftpack', False)
        # Obtaining the member 'drfft' of a type (line 414)
        drfft_20764 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 414, 16), fftpack_20763, 'drfft')
        # Calling drfft(args, kwargs) (line 414)
        drfft_call_result_20769 = invoke(stypy.reporting.localization.Localization(__file__, 414, 16), drfft_20764, *[x_20765], **kwargs_20768)
        
        # Assigning a type to the variable 'y' (line 414)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 414, 12), 'y', drfft_call_result_20769)
        
        # Call to assert_array_almost_equal(...): (line 415)
        # Processing the call arguments (line 415)
        # Getting the type of 'y' (line 415)
        y_20771 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 415, 38), 'y', False)
        # Getting the type of 'y1' (line 415)
        y1_20772 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 415, 40), 'y1', False)
        # Processing the call keyword arguments (line 415)
        kwargs_20773 = {}
        # Getting the type of 'assert_array_almost_equal' (line 415)
        assert_array_almost_equal_20770 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 415, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 415)
        assert_array_almost_equal_call_result_20774 = invoke(stypy.reporting.localization.Localization(__file__, 415, 12), assert_array_almost_equal_20770, *[y_20771, y1_20772], **kwargs_20773)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_djbfft(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_djbfft' in the type store
        # Getting the type of 'stypy_return_type' (line 402)
        stypy_return_type_20775 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 402, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_20775)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_djbfft'
        return stypy_return_type_20775


    @norecursion
    def test_random_real(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_random_real'
        module_type_store = module_type_store.open_function_context('test_random_real', 417, 4, False)
        # Assigning a type to the variable 'self' (line 418)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 418, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        _TestIRFFTBase.test_random_real.__dict__.__setitem__('stypy_localization', localization)
        _TestIRFFTBase.test_random_real.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        _TestIRFFTBase.test_random_real.__dict__.__setitem__('stypy_type_store', module_type_store)
        _TestIRFFTBase.test_random_real.__dict__.__setitem__('stypy_function_name', '_TestIRFFTBase.test_random_real')
        _TestIRFFTBase.test_random_real.__dict__.__setitem__('stypy_param_names_list', [])
        _TestIRFFTBase.test_random_real.__dict__.__setitem__('stypy_varargs_param_name', None)
        _TestIRFFTBase.test_random_real.__dict__.__setitem__('stypy_kwargs_param_name', None)
        _TestIRFFTBase.test_random_real.__dict__.__setitem__('stypy_call_defaults', defaults)
        _TestIRFFTBase.test_random_real.__dict__.__setitem__('stypy_call_varargs', varargs)
        _TestIRFFTBase.test_random_real.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        _TestIRFFTBase.test_random_real.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, '_TestIRFFTBase.test_random_real', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_random_real', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_random_real(...)' code ##################

        
        
        # Obtaining an instance of the builtin type 'list' (line 418)
        list_20776 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 418, 20), 'list')
        # Adding type elements to the builtin type 'list' instance (line 418)
        # Adding element type (line 418)
        int_20777 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 418, 21), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 418, 20), list_20776, int_20777)
        # Adding element type (line 418)
        int_20778 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 418, 23), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 418, 20), list_20776, int_20778)
        # Adding element type (line 418)
        int_20779 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 418, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 418, 20), list_20776, int_20779)
        # Adding element type (line 418)
        int_20780 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 418, 30), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 418, 20), list_20776, int_20780)
        # Adding element type (line 418)
        int_20781 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 418, 34), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 418, 20), list_20776, int_20781)
        # Adding element type (line 418)
        int_20782 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 418, 38), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 418, 20), list_20776, int_20782)
        # Adding element type (line 418)
        int_20783 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 418, 41), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 418, 20), list_20776, int_20783)
        # Adding element type (line 418)
        int_20784 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 418, 45), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 418, 20), list_20776, int_20784)
        # Adding element type (line 418)
        int_20785 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 418, 49), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 418, 20), list_20776, int_20785)
        
        # Testing the type of a for loop iterable (line 418)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 418, 8), list_20776)
        # Getting the type of the for loop variable (line 418)
        for_loop_var_20786 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 418, 8), list_20776)
        # Assigning a type to the variable 'size' (line 418)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 418, 8), 'size', for_loop_var_20786)
        # SSA begins for a for statement (line 418)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 419):
        
        # Call to astype(...): (line 419)
        # Processing the call arguments (line 419)
        # Getting the type of 'self' (line 419)
        self_20793 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 419, 38), 'self', False)
        # Obtaining the member 'rdt' of a type (line 419)
        rdt_20794 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 419, 38), self_20793, 'rdt')
        # Processing the call keyword arguments (line 419)
        kwargs_20795 = {}
        
        # Call to random(...): (line 419)
        # Processing the call arguments (line 419)
        
        # Obtaining an instance of the builtin type 'list' (line 419)
        list_20788 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 419, 23), 'list')
        # Adding type elements to the builtin type 'list' instance (line 419)
        # Adding element type (line 419)
        # Getting the type of 'size' (line 419)
        size_20789 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 419, 24), 'size', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 419, 23), list_20788, size_20789)
        
        # Processing the call keyword arguments (line 419)
        kwargs_20790 = {}
        # Getting the type of 'random' (line 419)
        random_20787 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 419, 16), 'random', False)
        # Calling random(args, kwargs) (line 419)
        random_call_result_20791 = invoke(stypy.reporting.localization.Localization(__file__, 419, 16), random_20787, *[list_20788], **kwargs_20790)
        
        # Obtaining the member 'astype' of a type (line 419)
        astype_20792 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 419, 16), random_call_result_20791, 'astype')
        # Calling astype(args, kwargs) (line 419)
        astype_call_result_20796 = invoke(stypy.reporting.localization.Localization(__file__, 419, 16), astype_20792, *[rdt_20794], **kwargs_20795)
        
        # Assigning a type to the variable 'x' (line 419)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 419, 12), 'x', astype_call_result_20796)
        
        # Assigning a Call to a Name (line 420):
        
        # Call to irfft(...): (line 420)
        # Processing the call arguments (line 420)
        
        # Call to rfft(...): (line 420)
        # Processing the call arguments (line 420)
        # Getting the type of 'x' (line 420)
        x_20799 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 420, 28), 'x', False)
        # Processing the call keyword arguments (line 420)
        kwargs_20800 = {}
        # Getting the type of 'rfft' (line 420)
        rfft_20798 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 420, 23), 'rfft', False)
        # Calling rfft(args, kwargs) (line 420)
        rfft_call_result_20801 = invoke(stypy.reporting.localization.Localization(__file__, 420, 23), rfft_20798, *[x_20799], **kwargs_20800)
        
        # Processing the call keyword arguments (line 420)
        kwargs_20802 = {}
        # Getting the type of 'irfft' (line 420)
        irfft_20797 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 420, 17), 'irfft', False)
        # Calling irfft(args, kwargs) (line 420)
        irfft_call_result_20803 = invoke(stypy.reporting.localization.Localization(__file__, 420, 17), irfft_20797, *[rfft_call_result_20801], **kwargs_20802)
        
        # Assigning a type to the variable 'y1' (line 420)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 420, 12), 'y1', irfft_call_result_20803)
        
        # Assigning a Call to a Name (line 421):
        
        # Call to rfft(...): (line 421)
        # Processing the call arguments (line 421)
        
        # Call to irfft(...): (line 421)
        # Processing the call arguments (line 421)
        # Getting the type of 'x' (line 421)
        x_20806 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 421, 28), 'x', False)
        # Processing the call keyword arguments (line 421)
        kwargs_20807 = {}
        # Getting the type of 'irfft' (line 421)
        irfft_20805 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 421, 22), 'irfft', False)
        # Calling irfft(args, kwargs) (line 421)
        irfft_call_result_20808 = invoke(stypy.reporting.localization.Localization(__file__, 421, 22), irfft_20805, *[x_20806], **kwargs_20807)
        
        # Processing the call keyword arguments (line 421)
        kwargs_20809 = {}
        # Getting the type of 'rfft' (line 421)
        rfft_20804 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 421, 17), 'rfft', False)
        # Calling rfft(args, kwargs) (line 421)
        rfft_call_result_20810 = invoke(stypy.reporting.localization.Localization(__file__, 421, 17), rfft_20804, *[irfft_call_result_20808], **kwargs_20809)
        
        # Assigning a type to the variable 'y2' (line 421)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 421, 12), 'y2', rfft_call_result_20810)
        
        # Call to assert_equal(...): (line 422)
        # Processing the call arguments (line 422)
        # Getting the type of 'y1' (line 422)
        y1_20812 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 422, 25), 'y1', False)
        # Obtaining the member 'dtype' of a type (line 422)
        dtype_20813 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 422, 25), y1_20812, 'dtype')
        # Getting the type of 'self' (line 422)
        self_20814 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 422, 35), 'self', False)
        # Obtaining the member 'rdt' of a type (line 422)
        rdt_20815 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 422, 35), self_20814, 'rdt')
        # Processing the call keyword arguments (line 422)
        kwargs_20816 = {}
        # Getting the type of 'assert_equal' (line 422)
        assert_equal_20811 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 422, 12), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 422)
        assert_equal_call_result_20817 = invoke(stypy.reporting.localization.Localization(__file__, 422, 12), assert_equal_20811, *[dtype_20813, rdt_20815], **kwargs_20816)
        
        
        # Call to assert_equal(...): (line 423)
        # Processing the call arguments (line 423)
        # Getting the type of 'y2' (line 423)
        y2_20819 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 423, 25), 'y2', False)
        # Obtaining the member 'dtype' of a type (line 423)
        dtype_20820 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 423, 25), y2_20819, 'dtype')
        # Getting the type of 'self' (line 423)
        self_20821 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 423, 35), 'self', False)
        # Obtaining the member 'rdt' of a type (line 423)
        rdt_20822 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 423, 35), self_20821, 'rdt')
        # Processing the call keyword arguments (line 423)
        kwargs_20823 = {}
        # Getting the type of 'assert_equal' (line 423)
        assert_equal_20818 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 423, 12), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 423)
        assert_equal_call_result_20824 = invoke(stypy.reporting.localization.Localization(__file__, 423, 12), assert_equal_20818, *[dtype_20820, rdt_20822], **kwargs_20823)
        
        
        # Call to assert_array_almost_equal(...): (line 424)
        # Processing the call arguments (line 424)
        # Getting the type of 'y1' (line 424)
        y1_20826 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 424, 38), 'y1', False)
        # Getting the type of 'x' (line 424)
        x_20827 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 424, 42), 'x', False)
        # Processing the call keyword arguments (line 424)
        # Getting the type of 'self' (line 424)
        self_20828 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 424, 53), 'self', False)
        # Obtaining the member 'ndec' of a type (line 424)
        ndec_20829 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 424, 53), self_20828, 'ndec')
        keyword_20830 = ndec_20829
        str_20831 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 425, 47), 'str', 'size=%d')
        # Getting the type of 'size' (line 425)
        size_20832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 425, 59), 'size', False)
        # Applying the binary operator '%' (line 425)
        result_mod_20833 = python_operator(stypy.reporting.localization.Localization(__file__, 425, 47), '%', str_20831, size_20832)
        
        keyword_20834 = result_mod_20833
        kwargs_20835 = {'decimal': keyword_20830, 'err_msg': keyword_20834}
        # Getting the type of 'assert_array_almost_equal' (line 424)
        assert_array_almost_equal_20825 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 424, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 424)
        assert_array_almost_equal_call_result_20836 = invoke(stypy.reporting.localization.Localization(__file__, 424, 12), assert_array_almost_equal_20825, *[y1_20826, x_20827], **kwargs_20835)
        
        
        # Call to assert_array_almost_equal(...): (line 426)
        # Processing the call arguments (line 426)
        # Getting the type of 'y2' (line 426)
        y2_20838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 426, 38), 'y2', False)
        # Getting the type of 'x' (line 426)
        x_20839 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 426, 42), 'x', False)
        # Processing the call keyword arguments (line 426)
        # Getting the type of 'self' (line 426)
        self_20840 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 426, 53), 'self', False)
        # Obtaining the member 'ndec' of a type (line 426)
        ndec_20841 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 426, 53), self_20840, 'ndec')
        keyword_20842 = ndec_20841
        str_20843 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 427, 47), 'str', 'size=%d')
        # Getting the type of 'size' (line 427)
        size_20844 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 427, 59), 'size', False)
        # Applying the binary operator '%' (line 427)
        result_mod_20845 = python_operator(stypy.reporting.localization.Localization(__file__, 427, 47), '%', str_20843, size_20844)
        
        keyword_20846 = result_mod_20845
        kwargs_20847 = {'decimal': keyword_20842, 'err_msg': keyword_20846}
        # Getting the type of 'assert_array_almost_equal' (line 426)
        assert_array_almost_equal_20837 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 426, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 426)
        assert_array_almost_equal_call_result_20848 = invoke(stypy.reporting.localization.Localization(__file__, 426, 12), assert_array_almost_equal_20837, *[y2_20838, x_20839], **kwargs_20847)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_random_real(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_random_real' in the type store
        # Getting the type of 'stypy_return_type' (line 417)
        stypy_return_type_20849 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 417, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_20849)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_random_real'
        return stypy_return_type_20849


    @norecursion
    def test_size_accuracy(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_size_accuracy'
        module_type_store = module_type_store.open_function_context('test_size_accuracy', 429, 4, False)
        # Assigning a type to the variable 'self' (line 430)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 430, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        _TestIRFFTBase.test_size_accuracy.__dict__.__setitem__('stypy_localization', localization)
        _TestIRFFTBase.test_size_accuracy.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        _TestIRFFTBase.test_size_accuracy.__dict__.__setitem__('stypy_type_store', module_type_store)
        _TestIRFFTBase.test_size_accuracy.__dict__.__setitem__('stypy_function_name', '_TestIRFFTBase.test_size_accuracy')
        _TestIRFFTBase.test_size_accuracy.__dict__.__setitem__('stypy_param_names_list', [])
        _TestIRFFTBase.test_size_accuracy.__dict__.__setitem__('stypy_varargs_param_name', None)
        _TestIRFFTBase.test_size_accuracy.__dict__.__setitem__('stypy_kwargs_param_name', None)
        _TestIRFFTBase.test_size_accuracy.__dict__.__setitem__('stypy_call_defaults', defaults)
        _TestIRFFTBase.test_size_accuracy.__dict__.__setitem__('stypy_call_varargs', varargs)
        _TestIRFFTBase.test_size_accuracy.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        _TestIRFFTBase.test_size_accuracy.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, '_TestIRFFTBase.test_size_accuracy', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_size_accuracy', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_size_accuracy(...)' code ##################

        
        
        # Getting the type of 'self' (line 431)
        self_20850 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 431, 11), 'self')
        # Obtaining the member 'rdt' of a type (line 431)
        rdt_20851 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 431, 11), self_20850, 'rdt')
        # Getting the type of 'np' (line 431)
        np_20852 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 431, 23), 'np')
        # Obtaining the member 'float32' of a type (line 431)
        float32_20853 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 431, 23), np_20852, 'float32')
        # Applying the binary operator '==' (line 431)
        result_eq_20854 = python_operator(stypy.reporting.localization.Localization(__file__, 431, 11), '==', rdt_20851, float32_20853)
        
        # Testing the type of an if condition (line 431)
        if_condition_20855 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 431, 8), result_eq_20854)
        # Assigning a type to the variable 'if_condition_20855' (line 431)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 431, 8), 'if_condition_20855', if_condition_20855)
        # SSA begins for if statement (line 431)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Num to a Name (line 432):
        float_20856 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 432, 19), 'float')
        # Assigning a type to the variable 'rtol' (line 432)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 432, 12), 'rtol', float_20856)
        # SSA branch for the else part of an if statement (line 431)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'self' (line 433)
        self_20857 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 433, 13), 'self')
        # Obtaining the member 'rdt' of a type (line 433)
        rdt_20858 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 433, 13), self_20857, 'rdt')
        # Getting the type of 'np' (line 433)
        np_20859 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 433, 25), 'np')
        # Obtaining the member 'float64' of a type (line 433)
        float64_20860 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 433, 25), np_20859, 'float64')
        # Applying the binary operator '==' (line 433)
        result_eq_20861 = python_operator(stypy.reporting.localization.Localization(__file__, 433, 13), '==', rdt_20858, float64_20860)
        
        # Testing the type of an if condition (line 433)
        if_condition_20862 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 433, 13), result_eq_20861)
        # Assigning a type to the variable 'if_condition_20862' (line 433)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 433, 13), 'if_condition_20862', if_condition_20862)
        # SSA begins for if statement (line 433)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Num to a Name (line 434):
        float_20863 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 434, 19), 'float')
        # Assigning a type to the variable 'rtol' (line 434)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 434, 12), 'rtol', float_20863)
        # SSA join for if statement (line 433)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 431)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'LARGE_COMPOSITE_SIZES' (line 436)
        LARGE_COMPOSITE_SIZES_20864 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 436, 20), 'LARGE_COMPOSITE_SIZES')
        # Getting the type of 'LARGE_PRIME_SIZES' (line 436)
        LARGE_PRIME_SIZES_20865 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 436, 44), 'LARGE_PRIME_SIZES')
        # Applying the binary operator '+' (line 436)
        result_add_20866 = python_operator(stypy.reporting.localization.Localization(__file__, 436, 20), '+', LARGE_COMPOSITE_SIZES_20864, LARGE_PRIME_SIZES_20865)
        
        # Testing the type of a for loop iterable (line 436)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 436, 8), result_add_20866)
        # Getting the type of the for loop variable (line 436)
        for_loop_var_20867 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 436, 8), result_add_20866)
        # Assigning a type to the variable 'size' (line 436)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 436, 8), 'size', for_loop_var_20867)
        # SSA begins for a for statement (line 436)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to seed(...): (line 437)
        # Processing the call arguments (line 437)
        int_20871 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 437, 27), 'int')
        # Processing the call keyword arguments (line 437)
        kwargs_20872 = {}
        # Getting the type of 'np' (line 437)
        np_20868 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 437, 12), 'np', False)
        # Obtaining the member 'random' of a type (line 437)
        random_20869 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 437, 12), np_20868, 'random')
        # Obtaining the member 'seed' of a type (line 437)
        seed_20870 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 437, 12), random_20869, 'seed')
        # Calling seed(args, kwargs) (line 437)
        seed_call_result_20873 = invoke(stypy.reporting.localization.Localization(__file__, 437, 12), seed_20870, *[int_20871], **kwargs_20872)
        
        
        # Assigning a Call to a Name (line 438):
        
        # Call to astype(...): (line 438)
        # Processing the call arguments (line 438)
        # Getting the type of 'self' (line 438)
        self_20881 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 438, 44), 'self', False)
        # Obtaining the member 'rdt' of a type (line 438)
        rdt_20882 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 438, 44), self_20881, 'rdt')
        # Processing the call keyword arguments (line 438)
        kwargs_20883 = {}
        
        # Call to rand(...): (line 438)
        # Processing the call arguments (line 438)
        # Getting the type of 'size' (line 438)
        size_20877 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 438, 31), 'size', False)
        # Processing the call keyword arguments (line 438)
        kwargs_20878 = {}
        # Getting the type of 'np' (line 438)
        np_20874 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 438, 16), 'np', False)
        # Obtaining the member 'random' of a type (line 438)
        random_20875 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 438, 16), np_20874, 'random')
        # Obtaining the member 'rand' of a type (line 438)
        rand_20876 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 438, 16), random_20875, 'rand')
        # Calling rand(args, kwargs) (line 438)
        rand_call_result_20879 = invoke(stypy.reporting.localization.Localization(__file__, 438, 16), rand_20876, *[size_20877], **kwargs_20878)
        
        # Obtaining the member 'astype' of a type (line 438)
        astype_20880 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 438, 16), rand_call_result_20879, 'astype')
        # Calling astype(args, kwargs) (line 438)
        astype_call_result_20884 = invoke(stypy.reporting.localization.Localization(__file__, 438, 16), astype_20880, *[rdt_20882], **kwargs_20883)
        
        # Assigning a type to the variable 'x' (line 438)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 438, 12), 'x', astype_call_result_20884)
        
        # Assigning a Call to a Name (line 439):
        
        # Call to irfft(...): (line 439)
        # Processing the call arguments (line 439)
        
        # Call to rfft(...): (line 439)
        # Processing the call arguments (line 439)
        # Getting the type of 'x' (line 439)
        x_20887 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 439, 27), 'x', False)
        # Processing the call keyword arguments (line 439)
        kwargs_20888 = {}
        # Getting the type of 'rfft' (line 439)
        rfft_20886 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 439, 22), 'rfft', False)
        # Calling rfft(args, kwargs) (line 439)
        rfft_call_result_20889 = invoke(stypy.reporting.localization.Localization(__file__, 439, 22), rfft_20886, *[x_20887], **kwargs_20888)
        
        # Processing the call keyword arguments (line 439)
        kwargs_20890 = {}
        # Getting the type of 'irfft' (line 439)
        irfft_20885 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 439, 16), 'irfft', False)
        # Calling irfft(args, kwargs) (line 439)
        irfft_call_result_20891 = invoke(stypy.reporting.localization.Localization(__file__, 439, 16), irfft_20885, *[rfft_call_result_20889], **kwargs_20890)
        
        # Assigning a type to the variable 'y' (line 439)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 439, 12), 'y', irfft_call_result_20891)
        
        # Call to _assert_close_in_norm(...): (line 440)
        # Processing the call arguments (line 440)
        # Getting the type of 'x' (line 440)
        x_20893 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 440, 34), 'x', False)
        # Getting the type of 'y' (line 440)
        y_20894 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 440, 37), 'y', False)
        # Getting the type of 'rtol' (line 440)
        rtol_20895 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 440, 40), 'rtol', False)
        # Getting the type of 'size' (line 440)
        size_20896 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 440, 46), 'size', False)
        # Getting the type of 'self' (line 440)
        self_20897 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 440, 52), 'self', False)
        # Obtaining the member 'rdt' of a type (line 440)
        rdt_20898 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 440, 52), self_20897, 'rdt')
        # Processing the call keyword arguments (line 440)
        kwargs_20899 = {}
        # Getting the type of '_assert_close_in_norm' (line 440)
        _assert_close_in_norm_20892 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 440, 12), '_assert_close_in_norm', False)
        # Calling _assert_close_in_norm(args, kwargs) (line 440)
        _assert_close_in_norm_call_result_20900 = invoke(stypy.reporting.localization.Localization(__file__, 440, 12), _assert_close_in_norm_20892, *[x_20893, y_20894, rtol_20895, size_20896, rdt_20898], **kwargs_20899)
        
        
        # Assigning a Call to a Name (line 441):
        
        # Call to rfft(...): (line 441)
        # Processing the call arguments (line 441)
        
        # Call to irfft(...): (line 441)
        # Processing the call arguments (line 441)
        # Getting the type of 'x' (line 441)
        x_20903 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 441, 27), 'x', False)
        # Processing the call keyword arguments (line 441)
        kwargs_20904 = {}
        # Getting the type of 'irfft' (line 441)
        irfft_20902 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 441, 21), 'irfft', False)
        # Calling irfft(args, kwargs) (line 441)
        irfft_call_result_20905 = invoke(stypy.reporting.localization.Localization(__file__, 441, 21), irfft_20902, *[x_20903], **kwargs_20904)
        
        # Processing the call keyword arguments (line 441)
        kwargs_20906 = {}
        # Getting the type of 'rfft' (line 441)
        rfft_20901 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 441, 16), 'rfft', False)
        # Calling rfft(args, kwargs) (line 441)
        rfft_call_result_20907 = invoke(stypy.reporting.localization.Localization(__file__, 441, 16), rfft_20901, *[irfft_call_result_20905], **kwargs_20906)
        
        # Assigning a type to the variable 'y' (line 441)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 441, 12), 'y', rfft_call_result_20907)
        
        # Call to _assert_close_in_norm(...): (line 442)
        # Processing the call arguments (line 442)
        # Getting the type of 'x' (line 442)
        x_20909 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 442, 34), 'x', False)
        # Getting the type of 'y' (line 442)
        y_20910 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 442, 37), 'y', False)
        # Getting the type of 'rtol' (line 442)
        rtol_20911 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 442, 40), 'rtol', False)
        # Getting the type of 'size' (line 442)
        size_20912 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 442, 46), 'size', False)
        # Getting the type of 'self' (line 442)
        self_20913 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 442, 52), 'self', False)
        # Obtaining the member 'rdt' of a type (line 442)
        rdt_20914 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 442, 52), self_20913, 'rdt')
        # Processing the call keyword arguments (line 442)
        kwargs_20915 = {}
        # Getting the type of '_assert_close_in_norm' (line 442)
        _assert_close_in_norm_20908 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 442, 12), '_assert_close_in_norm', False)
        # Calling _assert_close_in_norm(args, kwargs) (line 442)
        _assert_close_in_norm_call_result_20916 = invoke(stypy.reporting.localization.Localization(__file__, 442, 12), _assert_close_in_norm_20908, *[x_20909, y_20910, rtol_20911, size_20912, rdt_20914], **kwargs_20915)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_size_accuracy(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_size_accuracy' in the type store
        # Getting the type of 'stypy_return_type' (line 429)
        stypy_return_type_20917 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 429, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_20917)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_size_accuracy'
        return stypy_return_type_20917


    @norecursion
    def test_invalid_sizes(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_invalid_sizes'
        module_type_store = module_type_store.open_function_context('test_invalid_sizes', 444, 4, False)
        # Assigning a type to the variable 'self' (line 445)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 445, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        _TestIRFFTBase.test_invalid_sizes.__dict__.__setitem__('stypy_localization', localization)
        _TestIRFFTBase.test_invalid_sizes.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        _TestIRFFTBase.test_invalid_sizes.__dict__.__setitem__('stypy_type_store', module_type_store)
        _TestIRFFTBase.test_invalid_sizes.__dict__.__setitem__('stypy_function_name', '_TestIRFFTBase.test_invalid_sizes')
        _TestIRFFTBase.test_invalid_sizes.__dict__.__setitem__('stypy_param_names_list', [])
        _TestIRFFTBase.test_invalid_sizes.__dict__.__setitem__('stypy_varargs_param_name', None)
        _TestIRFFTBase.test_invalid_sizes.__dict__.__setitem__('stypy_kwargs_param_name', None)
        _TestIRFFTBase.test_invalid_sizes.__dict__.__setitem__('stypy_call_defaults', defaults)
        _TestIRFFTBase.test_invalid_sizes.__dict__.__setitem__('stypy_call_varargs', varargs)
        _TestIRFFTBase.test_invalid_sizes.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        _TestIRFFTBase.test_invalid_sizes.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, '_TestIRFFTBase.test_invalid_sizes', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_invalid_sizes', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_invalid_sizes(...)' code ##################

        
        # Call to assert_raises(...): (line 445)
        # Processing the call arguments (line 445)
        # Getting the type of 'ValueError' (line 445)
        ValueError_20919 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 445, 22), 'ValueError', False)
        # Getting the type of 'irfft' (line 445)
        irfft_20920 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 445, 34), 'irfft', False)
        
        # Obtaining an instance of the builtin type 'list' (line 445)
        list_20921 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 445, 41), 'list')
        # Adding type elements to the builtin type 'list' instance (line 445)
        
        # Processing the call keyword arguments (line 445)
        kwargs_20922 = {}
        # Getting the type of 'assert_raises' (line 445)
        assert_raises_20918 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 445, 8), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 445)
        assert_raises_call_result_20923 = invoke(stypy.reporting.localization.Localization(__file__, 445, 8), assert_raises_20918, *[ValueError_20919, irfft_20920, list_20921], **kwargs_20922)
        
        
        # Call to assert_raises(...): (line 446)
        # Processing the call arguments (line 446)
        # Getting the type of 'ValueError' (line 446)
        ValueError_20925 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 446, 22), 'ValueError', False)
        # Getting the type of 'irfft' (line 446)
        irfft_20926 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 446, 34), 'irfft', False)
        
        # Obtaining an instance of the builtin type 'list' (line 446)
        list_20927 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 446, 41), 'list')
        # Adding type elements to the builtin type 'list' instance (line 446)
        # Adding element type (line 446)
        
        # Obtaining an instance of the builtin type 'list' (line 446)
        list_20928 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 446, 42), 'list')
        # Adding type elements to the builtin type 'list' instance (line 446)
        # Adding element type (line 446)
        int_20929 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 446, 43), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 446, 42), list_20928, int_20929)
        # Adding element type (line 446)
        int_20930 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 446, 45), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 446, 42), list_20928, int_20930)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 446, 41), list_20927, list_20928)
        # Adding element type (line 446)
        
        # Obtaining an instance of the builtin type 'list' (line 446)
        list_20931 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 446, 48), 'list')
        # Adding type elements to the builtin type 'list' instance (line 446)
        # Adding element type (line 446)
        int_20932 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 446, 49), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 446, 48), list_20931, int_20932)
        # Adding element type (line 446)
        int_20933 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 446, 51), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 446, 48), list_20931, int_20933)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 446, 41), list_20927, list_20931)
        
        int_20934 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 446, 56), 'int')
        # Processing the call keyword arguments (line 446)
        kwargs_20935 = {}
        # Getting the type of 'assert_raises' (line 446)
        assert_raises_20924 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 446, 8), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 446)
        assert_raises_call_result_20936 = invoke(stypy.reporting.localization.Localization(__file__, 446, 8), assert_raises_20924, *[ValueError_20925, irfft_20926, list_20927, int_20934], **kwargs_20935)
        
        
        # ################# End of 'test_invalid_sizes(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_invalid_sizes' in the type store
        # Getting the type of 'stypy_return_type' (line 444)
        stypy_return_type_20937 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 444, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_20937)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_invalid_sizes'
        return stypy_return_type_20937


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 382, 0, False)
        # Assigning a type to the variable 'self' (line 383)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 383, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, '_TestIRFFTBase.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable '_TestIRFFTBase' (line 382)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 382, 0), '_TestIRFFTBase', _TestIRFFTBase)
# Declaration of the 'TestIRFFTDouble' class
# Getting the type of '_TestIRFFTBase' (line 452)
_TestIRFFTBase_20938 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 452, 22), '_TestIRFFTBase')

class TestIRFFTDouble(_TestIRFFTBase_20938, ):

    @norecursion
    def setup_method(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'setup_method'
        module_type_store = module_type_store.open_function_context('setup_method', 453, 4, False)
        # Assigning a type to the variable 'self' (line 454)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 454, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestIRFFTDouble.setup_method.__dict__.__setitem__('stypy_localization', localization)
        TestIRFFTDouble.setup_method.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestIRFFTDouble.setup_method.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestIRFFTDouble.setup_method.__dict__.__setitem__('stypy_function_name', 'TestIRFFTDouble.setup_method')
        TestIRFFTDouble.setup_method.__dict__.__setitem__('stypy_param_names_list', [])
        TestIRFFTDouble.setup_method.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestIRFFTDouble.setup_method.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestIRFFTDouble.setup_method.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestIRFFTDouble.setup_method.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestIRFFTDouble.setup_method.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestIRFFTDouble.setup_method.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestIRFFTDouble.setup_method', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'setup_method', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'setup_method(...)' code ##################

        
        # Assigning a Attribute to a Attribute (line 454):
        # Getting the type of 'np' (line 454)
        np_20939 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 454, 19), 'np')
        # Obtaining the member 'cdouble' of a type (line 454)
        cdouble_20940 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 454, 19), np_20939, 'cdouble')
        # Getting the type of 'self' (line 454)
        self_20941 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 454, 8), 'self')
        # Setting the type of the member 'cdt' of a type (line 454)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 454, 8), self_20941, 'cdt', cdouble_20940)
        
        # Assigning a Attribute to a Attribute (line 455):
        # Getting the type of 'np' (line 455)
        np_20942 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 455, 19), 'np')
        # Obtaining the member 'double' of a type (line 455)
        double_20943 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 455, 19), np_20942, 'double')
        # Getting the type of 'self' (line 455)
        self_20944 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 455, 8), 'self')
        # Setting the type of the member 'rdt' of a type (line 455)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 455, 8), self_20944, 'rdt', double_20943)
        
        # Assigning a Num to a Attribute (line 456):
        int_20945 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 456, 20), 'int')
        # Getting the type of 'self' (line 456)
        self_20946 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 456, 8), 'self')
        # Setting the type of the member 'ndec' of a type (line 456)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 456, 8), self_20946, 'ndec', int_20945)
        
        # ################# End of 'setup_method(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'setup_method' in the type store
        # Getting the type of 'stypy_return_type' (line 453)
        stypy_return_type_20947 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 453, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_20947)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'setup_method'
        return stypy_return_type_20947


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 452, 0, False)
        # Assigning a type to the variable 'self' (line 453)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 453, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestIRFFTDouble.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'TestIRFFTDouble' (line 452)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 452, 0), 'TestIRFFTDouble', TestIRFFTDouble)
# Declaration of the 'TestIRFFTSingle' class
# Getting the type of '_TestIRFFTBase' (line 459)
_TestIRFFTBase_20948 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 459, 22), '_TestIRFFTBase')

class TestIRFFTSingle(_TestIRFFTBase_20948, ):

    @norecursion
    def setup_method(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'setup_method'
        module_type_store = module_type_store.open_function_context('setup_method', 460, 4, False)
        # Assigning a type to the variable 'self' (line 461)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 461, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestIRFFTSingle.setup_method.__dict__.__setitem__('stypy_localization', localization)
        TestIRFFTSingle.setup_method.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestIRFFTSingle.setup_method.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestIRFFTSingle.setup_method.__dict__.__setitem__('stypy_function_name', 'TestIRFFTSingle.setup_method')
        TestIRFFTSingle.setup_method.__dict__.__setitem__('stypy_param_names_list', [])
        TestIRFFTSingle.setup_method.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestIRFFTSingle.setup_method.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestIRFFTSingle.setup_method.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestIRFFTSingle.setup_method.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestIRFFTSingle.setup_method.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestIRFFTSingle.setup_method.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestIRFFTSingle.setup_method', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'setup_method', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'setup_method(...)' code ##################

        
        # Assigning a Attribute to a Attribute (line 461):
        # Getting the type of 'np' (line 461)
        np_20949 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 461, 19), 'np')
        # Obtaining the member 'complex64' of a type (line 461)
        complex64_20950 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 461, 19), np_20949, 'complex64')
        # Getting the type of 'self' (line 461)
        self_20951 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 461, 8), 'self')
        # Setting the type of the member 'cdt' of a type (line 461)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 461, 8), self_20951, 'cdt', complex64_20950)
        
        # Assigning a Attribute to a Attribute (line 462):
        # Getting the type of 'np' (line 462)
        np_20952 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 462, 19), 'np')
        # Obtaining the member 'float32' of a type (line 462)
        float32_20953 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 462, 19), np_20952, 'float32')
        # Getting the type of 'self' (line 462)
        self_20954 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 462, 8), 'self')
        # Setting the type of the member 'rdt' of a type (line 462)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 462, 8), self_20954, 'rdt', float32_20953)
        
        # Assigning a Num to a Attribute (line 463):
        int_20955 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 463, 20), 'int')
        # Getting the type of 'self' (line 463)
        self_20956 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 463, 8), 'self')
        # Setting the type of the member 'ndec' of a type (line 463)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 463, 8), self_20956, 'ndec', int_20955)
        
        # ################# End of 'setup_method(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'setup_method' in the type store
        # Getting the type of 'stypy_return_type' (line 460)
        stypy_return_type_20957 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 460, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_20957)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'setup_method'
        return stypy_return_type_20957


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 459, 0, False)
        # Assigning a type to the variable 'self' (line 460)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 460, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestIRFFTSingle.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'TestIRFFTSingle' (line 459)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 459, 0), 'TestIRFFTSingle', TestIRFFTSingle)
# Declaration of the 'Testfft2' class

class Testfft2(object, ):

    @norecursion
    def setup_method(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'setup_method'
        module_type_store = module_type_store.open_function_context('setup_method', 467, 4, False)
        # Assigning a type to the variable 'self' (line 468)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 468, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Testfft2.setup_method.__dict__.__setitem__('stypy_localization', localization)
        Testfft2.setup_method.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Testfft2.setup_method.__dict__.__setitem__('stypy_type_store', module_type_store)
        Testfft2.setup_method.__dict__.__setitem__('stypy_function_name', 'Testfft2.setup_method')
        Testfft2.setup_method.__dict__.__setitem__('stypy_param_names_list', [])
        Testfft2.setup_method.__dict__.__setitem__('stypy_varargs_param_name', None)
        Testfft2.setup_method.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Testfft2.setup_method.__dict__.__setitem__('stypy_call_defaults', defaults)
        Testfft2.setup_method.__dict__.__setitem__('stypy_call_varargs', varargs)
        Testfft2.setup_method.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Testfft2.setup_method.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Testfft2.setup_method', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'setup_method', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'setup_method(...)' code ##################

        
        # Call to seed(...): (line 468)
        # Processing the call arguments (line 468)
        int_20961 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 468, 23), 'int')
        # Processing the call keyword arguments (line 468)
        kwargs_20962 = {}
        # Getting the type of 'np' (line 468)
        np_20958 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 468, 8), 'np', False)
        # Obtaining the member 'random' of a type (line 468)
        random_20959 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 468, 8), np_20958, 'random')
        # Obtaining the member 'seed' of a type (line 468)
        seed_20960 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 468, 8), random_20959, 'seed')
        # Calling seed(args, kwargs) (line 468)
        seed_call_result_20963 = invoke(stypy.reporting.localization.Localization(__file__, 468, 8), seed_20960, *[int_20961], **kwargs_20962)
        
        
        # ################# End of 'setup_method(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'setup_method' in the type store
        # Getting the type of 'stypy_return_type' (line 467)
        stypy_return_type_20964 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 467, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_20964)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'setup_method'
        return stypy_return_type_20964


    @norecursion
    def test_regression_244(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_regression_244'
        module_type_store = module_type_store.open_function_context('test_regression_244', 470, 4, False)
        # Assigning a type to the variable 'self' (line 471)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 471, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Testfft2.test_regression_244.__dict__.__setitem__('stypy_localization', localization)
        Testfft2.test_regression_244.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Testfft2.test_regression_244.__dict__.__setitem__('stypy_type_store', module_type_store)
        Testfft2.test_regression_244.__dict__.__setitem__('stypy_function_name', 'Testfft2.test_regression_244')
        Testfft2.test_regression_244.__dict__.__setitem__('stypy_param_names_list', [])
        Testfft2.test_regression_244.__dict__.__setitem__('stypy_varargs_param_name', None)
        Testfft2.test_regression_244.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Testfft2.test_regression_244.__dict__.__setitem__('stypy_call_defaults', defaults)
        Testfft2.test_regression_244.__dict__.__setitem__('stypy_call_varargs', varargs)
        Testfft2.test_regression_244.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Testfft2.test_regression_244.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Testfft2.test_regression_244', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_regression_244', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_regression_244(...)' code ##################

        str_20965 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 471, 8), 'str', 'fft returns wrong result with axes parameter.')
        
        # Assigning a Call to a Name (line 474):
        
        # Call to ones(...): (line 474)
        # Processing the call arguments (line 474)
        
        # Obtaining an instance of the builtin type 'tuple' (line 474)
        tuple_20968 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 474, 24), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 474)
        # Adding element type (line 474)
        int_20969 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 474, 24), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 474, 24), tuple_20968, int_20969)
        # Adding element type (line 474)
        int_20970 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 474, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 474, 24), tuple_20968, int_20970)
        # Adding element type (line 474)
        int_20971 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 474, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 474, 24), tuple_20968, int_20971)
        
        # Processing the call keyword arguments (line 474)
        kwargs_20972 = {}
        # Getting the type of 'numpy' (line 474)
        numpy_20966 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 474, 12), 'numpy', False)
        # Obtaining the member 'ones' of a type (line 474)
        ones_20967 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 474, 12), numpy_20966, 'ones')
        # Calling ones(args, kwargs) (line 474)
        ones_call_result_20973 = invoke(stypy.reporting.localization.Localization(__file__, 474, 12), ones_20967, *[tuple_20968], **kwargs_20972)
        
        # Assigning a type to the variable 'x' (line 474)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 474, 8), 'x', ones_call_result_20973)
        
        # Assigning a Call to a Name (line 475):
        
        # Call to fft2(...): (line 475)
        # Processing the call arguments (line 475)
        # Getting the type of 'x' (line 475)
        x_20975 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 475, 17), 'x', False)
        # Processing the call keyword arguments (line 475)
        
        # Obtaining an instance of the builtin type 'tuple' (line 475)
        tuple_20976 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 475, 27), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 475)
        # Adding element type (line 475)
        int_20977 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 475, 27), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 475, 27), tuple_20976, int_20977)
        # Adding element type (line 475)
        int_20978 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 475, 29), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 475, 27), tuple_20976, int_20978)
        
        keyword_20979 = tuple_20976
        
        # Obtaining an instance of the builtin type 'tuple' (line 475)
        tuple_20980 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 475, 39), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 475)
        # Adding element type (line 475)
        int_20981 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 475, 39), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 475, 39), tuple_20980, int_20981)
        # Adding element type (line 475)
        int_20982 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 475, 42), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 475, 39), tuple_20980, int_20982)
        
        keyword_20983 = tuple_20980
        kwargs_20984 = {'shape': keyword_20979, 'axes': keyword_20983}
        # Getting the type of 'fft2' (line 475)
        fft2_20974 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 475, 12), 'fft2', False)
        # Calling fft2(args, kwargs) (line 475)
        fft2_call_result_20985 = invoke(stypy.reporting.localization.Localization(__file__, 475, 12), fft2_20974, *[x_20975], **kwargs_20984)
        
        # Assigning a type to the variable 'y' (line 475)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 475, 8), 'y', fft2_call_result_20985)
        
        # Assigning a Call to a Name (line 476):
        
        # Call to fftn(...): (line 476)
        # Processing the call arguments (line 476)
        # Getting the type of 'x' (line 476)
        x_20989 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 476, 29), 'x', False)
        # Processing the call keyword arguments (line 476)
        
        # Obtaining an instance of the builtin type 'tuple' (line 476)
        tuple_20990 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 476, 35), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 476)
        # Adding element type (line 476)
        int_20991 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 476, 35), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 476, 35), tuple_20990, int_20991)
        # Adding element type (line 476)
        int_20992 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 476, 38), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 476, 35), tuple_20990, int_20992)
        
        keyword_20993 = tuple_20990
        
        # Obtaining an instance of the builtin type 'tuple' (line 476)
        tuple_20994 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 476, 48), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 476)
        # Adding element type (line 476)
        int_20995 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 476, 48), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 476, 48), tuple_20994, int_20995)
        # Adding element type (line 476)
        int_20996 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 476, 52), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 476, 48), tuple_20994, int_20996)
        
        keyword_20997 = tuple_20994
        kwargs_20998 = {'s': keyword_20993, 'axes': keyword_20997}
        # Getting the type of 'numpy' (line 476)
        numpy_20986 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 476, 14), 'numpy', False)
        # Obtaining the member 'fft' of a type (line 476)
        fft_20987 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 476, 14), numpy_20986, 'fft')
        # Obtaining the member 'fftn' of a type (line 476)
        fftn_20988 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 476, 14), fft_20987, 'fftn')
        # Calling fftn(args, kwargs) (line 476)
        fftn_call_result_20999 = invoke(stypy.reporting.localization.Localization(__file__, 476, 14), fftn_20988, *[x_20989], **kwargs_20998)
        
        # Assigning a type to the variable 'y_r' (line 476)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 476, 8), 'y_r', fftn_call_result_20999)
        
        # Call to assert_array_almost_equal(...): (line 477)
        # Processing the call arguments (line 477)
        # Getting the type of 'y' (line 477)
        y_21001 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 477, 34), 'y', False)
        # Getting the type of 'y_r' (line 477)
        y_r_21002 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 477, 37), 'y_r', False)
        # Processing the call keyword arguments (line 477)
        kwargs_21003 = {}
        # Getting the type of 'assert_array_almost_equal' (line 477)
        assert_array_almost_equal_21000 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 477, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 477)
        assert_array_almost_equal_call_result_21004 = invoke(stypy.reporting.localization.Localization(__file__, 477, 8), assert_array_almost_equal_21000, *[y_21001, y_r_21002], **kwargs_21003)
        
        
        # ################# End of 'test_regression_244(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_regression_244' in the type store
        # Getting the type of 'stypy_return_type' (line 470)
        stypy_return_type_21005 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 470, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_21005)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_regression_244'
        return stypy_return_type_21005


    @norecursion
    def test_invalid_sizes(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_invalid_sizes'
        module_type_store = module_type_store.open_function_context('test_invalid_sizes', 479, 4, False)
        # Assigning a type to the variable 'self' (line 480)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 480, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Testfft2.test_invalid_sizes.__dict__.__setitem__('stypy_localization', localization)
        Testfft2.test_invalid_sizes.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Testfft2.test_invalid_sizes.__dict__.__setitem__('stypy_type_store', module_type_store)
        Testfft2.test_invalid_sizes.__dict__.__setitem__('stypy_function_name', 'Testfft2.test_invalid_sizes')
        Testfft2.test_invalid_sizes.__dict__.__setitem__('stypy_param_names_list', [])
        Testfft2.test_invalid_sizes.__dict__.__setitem__('stypy_varargs_param_name', None)
        Testfft2.test_invalid_sizes.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Testfft2.test_invalid_sizes.__dict__.__setitem__('stypy_call_defaults', defaults)
        Testfft2.test_invalid_sizes.__dict__.__setitem__('stypy_call_varargs', varargs)
        Testfft2.test_invalid_sizes.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Testfft2.test_invalid_sizes.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Testfft2.test_invalid_sizes', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_invalid_sizes', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_invalid_sizes(...)' code ##################

        
        # Call to assert_raises(...): (line 480)
        # Processing the call arguments (line 480)
        # Getting the type of 'ValueError' (line 480)
        ValueError_21007 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 480, 22), 'ValueError', False)
        # Getting the type of 'fft2' (line 480)
        fft2_21008 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 480, 34), 'fft2', False)
        
        # Obtaining an instance of the builtin type 'list' (line 480)
        list_21009 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 480, 40), 'list')
        # Adding type elements to the builtin type 'list' instance (line 480)
        # Adding element type (line 480)
        
        # Obtaining an instance of the builtin type 'list' (line 480)
        list_21010 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 480, 41), 'list')
        # Adding type elements to the builtin type 'list' instance (line 480)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 480, 40), list_21009, list_21010)
        
        # Processing the call keyword arguments (line 480)
        kwargs_21011 = {}
        # Getting the type of 'assert_raises' (line 480)
        assert_raises_21006 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 480, 8), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 480)
        assert_raises_call_result_21012 = invoke(stypy.reporting.localization.Localization(__file__, 480, 8), assert_raises_21006, *[ValueError_21007, fft2_21008, list_21009], **kwargs_21011)
        
        
        # Call to assert_raises(...): (line 481)
        # Processing the call arguments (line 481)
        # Getting the type of 'ValueError' (line 481)
        ValueError_21014 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 481, 22), 'ValueError', False)
        # Getting the type of 'fft2' (line 481)
        fft2_21015 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 481, 34), 'fft2', False)
        
        # Obtaining an instance of the builtin type 'list' (line 481)
        list_21016 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 481, 40), 'list')
        # Adding type elements to the builtin type 'list' instance (line 481)
        # Adding element type (line 481)
        
        # Obtaining an instance of the builtin type 'list' (line 481)
        list_21017 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 481, 41), 'list')
        # Adding type elements to the builtin type 'list' instance (line 481)
        # Adding element type (line 481)
        int_21018 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 481, 42), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 481, 41), list_21017, int_21018)
        # Adding element type (line 481)
        int_21019 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 481, 44), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 481, 41), list_21017, int_21019)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 481, 40), list_21016, list_21017)
        # Adding element type (line 481)
        
        # Obtaining an instance of the builtin type 'list' (line 481)
        list_21020 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 481, 47), 'list')
        # Adding type elements to the builtin type 'list' instance (line 481)
        # Adding element type (line 481)
        int_21021 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 481, 48), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 481, 47), list_21020, int_21021)
        # Adding element type (line 481)
        int_21022 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 481, 50), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 481, 47), list_21020, int_21022)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 481, 40), list_21016, list_21020)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 481)
        tuple_21023 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 481, 56), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 481)
        # Adding element type (line 481)
        int_21024 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 481, 56), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 481, 56), tuple_21023, int_21024)
        # Adding element type (line 481)
        int_21025 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 481, 59), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 481, 56), tuple_21023, int_21025)
        
        # Processing the call keyword arguments (line 481)
        kwargs_21026 = {}
        # Getting the type of 'assert_raises' (line 481)
        assert_raises_21013 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 481, 8), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 481)
        assert_raises_call_result_21027 = invoke(stypy.reporting.localization.Localization(__file__, 481, 8), assert_raises_21013, *[ValueError_21014, fft2_21015, list_21016, tuple_21023], **kwargs_21026)
        
        
        # ################# End of 'test_invalid_sizes(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_invalid_sizes' in the type store
        # Getting the type of 'stypy_return_type' (line 479)
        stypy_return_type_21028 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 479, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_21028)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_invalid_sizes'
        return stypy_return_type_21028


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 466, 0, False)
        # Assigning a type to the variable 'self' (line 467)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 467, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Testfft2.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'Testfft2' (line 466)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 466, 0), 'Testfft2', Testfft2)
# Declaration of the 'TestFftnSingle' class

class TestFftnSingle(object, ):

    @norecursion
    def setup_method(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'setup_method'
        module_type_store = module_type_store.open_function_context('setup_method', 485, 4, False)
        # Assigning a type to the variable 'self' (line 486)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 486, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestFftnSingle.setup_method.__dict__.__setitem__('stypy_localization', localization)
        TestFftnSingle.setup_method.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestFftnSingle.setup_method.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestFftnSingle.setup_method.__dict__.__setitem__('stypy_function_name', 'TestFftnSingle.setup_method')
        TestFftnSingle.setup_method.__dict__.__setitem__('stypy_param_names_list', [])
        TestFftnSingle.setup_method.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestFftnSingle.setup_method.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestFftnSingle.setup_method.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestFftnSingle.setup_method.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestFftnSingle.setup_method.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestFftnSingle.setup_method.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFftnSingle.setup_method', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'setup_method', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'setup_method(...)' code ##################

        
        # Call to seed(...): (line 486)
        # Processing the call arguments (line 486)
        int_21032 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 486, 23), 'int')
        # Processing the call keyword arguments (line 486)
        kwargs_21033 = {}
        # Getting the type of 'np' (line 486)
        np_21029 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 486, 8), 'np', False)
        # Obtaining the member 'random' of a type (line 486)
        random_21030 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 486, 8), np_21029, 'random')
        # Obtaining the member 'seed' of a type (line 486)
        seed_21031 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 486, 8), random_21030, 'seed')
        # Calling seed(args, kwargs) (line 486)
        seed_call_result_21034 = invoke(stypy.reporting.localization.Localization(__file__, 486, 8), seed_21031, *[int_21032], **kwargs_21033)
        
        
        # ################# End of 'setup_method(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'setup_method' in the type store
        # Getting the type of 'stypy_return_type' (line 485)
        stypy_return_type_21035 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 485, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_21035)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'setup_method'
        return stypy_return_type_21035


    @norecursion
    def test_definition(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_definition'
        module_type_store = module_type_store.open_function_context('test_definition', 488, 4, False)
        # Assigning a type to the variable 'self' (line 489)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 489, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestFftnSingle.test_definition.__dict__.__setitem__('stypy_localization', localization)
        TestFftnSingle.test_definition.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestFftnSingle.test_definition.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestFftnSingle.test_definition.__dict__.__setitem__('stypy_function_name', 'TestFftnSingle.test_definition')
        TestFftnSingle.test_definition.__dict__.__setitem__('stypy_param_names_list', [])
        TestFftnSingle.test_definition.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestFftnSingle.test_definition.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestFftnSingle.test_definition.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestFftnSingle.test_definition.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestFftnSingle.test_definition.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestFftnSingle.test_definition.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFftnSingle.test_definition', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_definition', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_definition(...)' code ##################

        
        # Assigning a List to a Name (line 489):
        
        # Obtaining an instance of the builtin type 'list' (line 489)
        list_21036 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 489, 12), 'list')
        # Adding type elements to the builtin type 'list' instance (line 489)
        # Adding element type (line 489)
        
        # Obtaining an instance of the builtin type 'list' (line 489)
        list_21037 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 489, 13), 'list')
        # Adding type elements to the builtin type 'list' instance (line 489)
        # Adding element type (line 489)
        int_21038 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 489, 14), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 489, 13), list_21037, int_21038)
        # Adding element type (line 489)
        int_21039 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 489, 16), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 489, 13), list_21037, int_21039)
        # Adding element type (line 489)
        int_21040 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 489, 18), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 489, 13), list_21037, int_21040)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 489, 12), list_21036, list_21037)
        # Adding element type (line 489)
        
        # Obtaining an instance of the builtin type 'list' (line 489)
        list_21041 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 489, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 489)
        # Adding element type (line 489)
        int_21042 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 489, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 489, 21), list_21041, int_21042)
        # Adding element type (line 489)
        int_21043 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 489, 24), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 489, 21), list_21041, int_21043)
        # Adding element type (line 489)
        int_21044 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 489, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 489, 21), list_21041, int_21044)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 489, 12), list_21036, list_21041)
        # Adding element type (line 489)
        
        # Obtaining an instance of the builtin type 'list' (line 489)
        list_21045 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 489, 29), 'list')
        # Adding type elements to the builtin type 'list' instance (line 489)
        # Adding element type (line 489)
        int_21046 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 489, 30), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 489, 29), list_21045, int_21046)
        # Adding element type (line 489)
        int_21047 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 489, 32), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 489, 29), list_21045, int_21047)
        # Adding element type (line 489)
        int_21048 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 489, 34), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 489, 29), list_21045, int_21048)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 489, 12), list_21036, list_21045)
        
        # Assigning a type to the variable 'x' (line 489)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 489, 8), 'x', list_21036)
        
        # Assigning a Call to a Name (line 490):
        
        # Call to fftn(...): (line 490)
        # Processing the call arguments (line 490)
        
        # Call to array(...): (line 490)
        # Processing the call arguments (line 490)
        # Getting the type of 'x' (line 490)
        x_21052 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 490, 26), 'x', False)
        # Getting the type of 'np' (line 490)
        np_21053 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 490, 29), 'np', False)
        # Obtaining the member 'float32' of a type (line 490)
        float32_21054 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 490, 29), np_21053, 'float32')
        # Processing the call keyword arguments (line 490)
        kwargs_21055 = {}
        # Getting the type of 'np' (line 490)
        np_21050 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 490, 17), 'np', False)
        # Obtaining the member 'array' of a type (line 490)
        array_21051 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 490, 17), np_21050, 'array')
        # Calling array(args, kwargs) (line 490)
        array_call_result_21056 = invoke(stypy.reporting.localization.Localization(__file__, 490, 17), array_21051, *[x_21052, float32_21054], **kwargs_21055)
        
        # Processing the call keyword arguments (line 490)
        kwargs_21057 = {}
        # Getting the type of 'fftn' (line 490)
        fftn_21049 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 490, 12), 'fftn', False)
        # Calling fftn(args, kwargs) (line 490)
        fftn_call_result_21058 = invoke(stypy.reporting.localization.Localization(__file__, 490, 12), fftn_21049, *[array_call_result_21056], **kwargs_21057)
        
        # Assigning a type to the variable 'y' (line 490)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 490, 8), 'y', fftn_call_result_21058)
        
        
        
        # Getting the type of 'y' (line 491)
        y_21059 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 491, 15), 'y')
        # Obtaining the member 'dtype' of a type (line 491)
        dtype_21060 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 491, 15), y_21059, 'dtype')
        # Getting the type of 'np' (line 491)
        np_21061 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 491, 26), 'np')
        # Obtaining the member 'complex64' of a type (line 491)
        complex64_21062 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 491, 26), np_21061, 'complex64')
        # Applying the binary operator '==' (line 491)
        result_eq_21063 = python_operator(stypy.reporting.localization.Localization(__file__, 491, 15), '==', dtype_21060, complex64_21062)
        
        # Applying the 'not' unary operator (line 491)
        result_not__21064 = python_operator(stypy.reporting.localization.Localization(__file__, 491, 11), 'not', result_eq_21063)
        
        # Testing the type of an if condition (line 491)
        if_condition_21065 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 491, 8), result_not__21064)
        # Assigning a type to the variable 'if_condition_21065' (line 491)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 491, 8), 'if_condition_21065', if_condition_21065)
        # SSA begins for if statement (line 491)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 492)
        # Processing the call arguments (line 492)
        str_21067 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 492, 29), 'str', 'double precision output with single precision')
        # Processing the call keyword arguments (line 492)
        kwargs_21068 = {}
        # Getting the type of 'ValueError' (line 492)
        ValueError_21066 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 492, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 492)
        ValueError_call_result_21069 = invoke(stypy.reporting.localization.Localization(__file__, 492, 18), ValueError_21066, *[str_21067], **kwargs_21068)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 492, 12), ValueError_call_result_21069, 'raise parameter', BaseException)
        # SSA join for if statement (line 491)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 494):
        
        # Call to array(...): (line 494)
        # Processing the call arguments (line 494)
        
        # Call to fftn(...): (line 494)
        # Processing the call arguments (line 494)
        # Getting the type of 'x' (line 494)
        x_21073 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 494, 28), 'x', False)
        # Processing the call keyword arguments (line 494)
        kwargs_21074 = {}
        # Getting the type of 'fftn' (line 494)
        fftn_21072 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 494, 23), 'fftn', False)
        # Calling fftn(args, kwargs) (line 494)
        fftn_call_result_21075 = invoke(stypy.reporting.localization.Localization(__file__, 494, 23), fftn_21072, *[x_21073], **kwargs_21074)
        
        # Getting the type of 'np' (line 494)
        np_21076 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 494, 32), 'np', False)
        # Obtaining the member 'complex64' of a type (line 494)
        complex64_21077 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 494, 32), np_21076, 'complex64')
        # Processing the call keyword arguments (line 494)
        kwargs_21078 = {}
        # Getting the type of 'np' (line 494)
        np_21070 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 494, 14), 'np', False)
        # Obtaining the member 'array' of a type (line 494)
        array_21071 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 494, 14), np_21070, 'array')
        # Calling array(args, kwargs) (line 494)
        array_call_result_21079 = invoke(stypy.reporting.localization.Localization(__file__, 494, 14), array_21071, *[fftn_call_result_21075, complex64_21077], **kwargs_21078)
        
        # Assigning a type to the variable 'y_r' (line 494)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 494, 8), 'y_r', array_call_result_21079)
        
        # Call to assert_array_almost_equal_nulp(...): (line 495)
        # Processing the call arguments (line 495)
        # Getting the type of 'y' (line 495)
        y_21081 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 495, 39), 'y', False)
        # Getting the type of 'y_r' (line 495)
        y_r_21082 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 495, 42), 'y_r', False)
        # Processing the call keyword arguments (line 495)
        kwargs_21083 = {}
        # Getting the type of 'assert_array_almost_equal_nulp' (line 495)
        assert_array_almost_equal_nulp_21080 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 495, 8), 'assert_array_almost_equal_nulp', False)
        # Calling assert_array_almost_equal_nulp(args, kwargs) (line 495)
        assert_array_almost_equal_nulp_call_result_21084 = invoke(stypy.reporting.localization.Localization(__file__, 495, 8), assert_array_almost_equal_nulp_21080, *[y_21081, y_r_21082], **kwargs_21083)
        
        
        # ################# End of 'test_definition(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_definition' in the type store
        # Getting the type of 'stypy_return_type' (line 488)
        stypy_return_type_21085 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 488, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_21085)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_definition'
        return stypy_return_type_21085


    @norecursion
    def test_size_accuracy(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_size_accuracy'
        module_type_store = module_type_store.open_function_context('test_size_accuracy', 497, 4, False)
        # Assigning a type to the variable 'self' (line 498)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 498, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestFftnSingle.test_size_accuracy.__dict__.__setitem__('stypy_localization', localization)
        TestFftnSingle.test_size_accuracy.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestFftnSingle.test_size_accuracy.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestFftnSingle.test_size_accuracy.__dict__.__setitem__('stypy_function_name', 'TestFftnSingle.test_size_accuracy')
        TestFftnSingle.test_size_accuracy.__dict__.__setitem__('stypy_param_names_list', [])
        TestFftnSingle.test_size_accuracy.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestFftnSingle.test_size_accuracy.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestFftnSingle.test_size_accuracy.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestFftnSingle.test_size_accuracy.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestFftnSingle.test_size_accuracy.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestFftnSingle.test_size_accuracy.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFftnSingle.test_size_accuracy', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_size_accuracy', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_size_accuracy(...)' code ##################

        
        # Getting the type of 'SMALL_COMPOSITE_SIZES' (line 498)
        SMALL_COMPOSITE_SIZES_21086 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 498, 20), 'SMALL_COMPOSITE_SIZES')
        # Getting the type of 'SMALL_PRIME_SIZES' (line 498)
        SMALL_PRIME_SIZES_21087 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 498, 44), 'SMALL_PRIME_SIZES')
        # Applying the binary operator '+' (line 498)
        result_add_21088 = python_operator(stypy.reporting.localization.Localization(__file__, 498, 20), '+', SMALL_COMPOSITE_SIZES_21086, SMALL_PRIME_SIZES_21087)
        
        # Testing the type of a for loop iterable (line 498)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 498, 8), result_add_21088)
        # Getting the type of the for loop variable (line 498)
        for_loop_var_21089 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 498, 8), result_add_21088)
        # Assigning a type to the variable 'size' (line 498)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 498, 8), 'size', for_loop_var_21089)
        # SSA begins for a for statement (line 498)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to seed(...): (line 499)
        # Processing the call arguments (line 499)
        int_21093 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 499, 27), 'int')
        # Processing the call keyword arguments (line 499)
        kwargs_21094 = {}
        # Getting the type of 'np' (line 499)
        np_21090 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 499, 12), 'np', False)
        # Obtaining the member 'random' of a type (line 499)
        random_21091 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 499, 12), np_21090, 'random')
        # Obtaining the member 'seed' of a type (line 499)
        seed_21092 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 499, 12), random_21091, 'seed')
        # Calling seed(args, kwargs) (line 499)
        seed_call_result_21095 = invoke(stypy.reporting.localization.Localization(__file__, 499, 12), seed_21092, *[int_21093], **kwargs_21094)
        
        
        # Assigning a BinOp to a Name (line 500):
        
        # Call to rand(...): (line 500)
        # Processing the call arguments (line 500)
        # Getting the type of 'size' (line 500)
        size_21099 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 500, 31), 'size', False)
        # Getting the type of 'size' (line 500)
        size_21100 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 500, 37), 'size', False)
        # Processing the call keyword arguments (line 500)
        kwargs_21101 = {}
        # Getting the type of 'np' (line 500)
        np_21096 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 500, 16), 'np', False)
        # Obtaining the member 'random' of a type (line 500)
        random_21097 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 500, 16), np_21096, 'random')
        # Obtaining the member 'rand' of a type (line 500)
        rand_21098 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 500, 16), random_21097, 'rand')
        # Calling rand(args, kwargs) (line 500)
        rand_call_result_21102 = invoke(stypy.reporting.localization.Localization(__file__, 500, 16), rand_21098, *[size_21099, size_21100], **kwargs_21101)
        
        complex_21103 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 500, 45), 'complex')
        
        # Call to rand(...): (line 500)
        # Processing the call arguments (line 500)
        # Getting the type of 'size' (line 500)
        size_21107 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 500, 63), 'size', False)
        # Getting the type of 'size' (line 500)
        size_21108 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 500, 69), 'size', False)
        # Processing the call keyword arguments (line 500)
        kwargs_21109 = {}
        # Getting the type of 'np' (line 500)
        np_21104 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 500, 48), 'np', False)
        # Obtaining the member 'random' of a type (line 500)
        random_21105 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 500, 48), np_21104, 'random')
        # Obtaining the member 'rand' of a type (line 500)
        rand_21106 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 500, 48), random_21105, 'rand')
        # Calling rand(args, kwargs) (line 500)
        rand_call_result_21110 = invoke(stypy.reporting.localization.Localization(__file__, 500, 48), rand_21106, *[size_21107, size_21108], **kwargs_21109)
        
        # Applying the binary operator '*' (line 500)
        result_mul_21111 = python_operator(stypy.reporting.localization.Localization(__file__, 500, 45), '*', complex_21103, rand_call_result_21110)
        
        # Applying the binary operator '+' (line 500)
        result_add_21112 = python_operator(stypy.reporting.localization.Localization(__file__, 500, 16), '+', rand_call_result_21102, result_mul_21111)
        
        # Assigning a type to the variable 'x' (line 500)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 500, 12), 'x', result_add_21112)
        
        # Assigning a Call to a Name (line 501):
        
        # Call to fftn(...): (line 501)
        # Processing the call arguments (line 501)
        
        # Call to astype(...): (line 501)
        # Processing the call arguments (line 501)
        # Getting the type of 'np' (line 501)
        np_21117 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 501, 36), 'np', False)
        # Obtaining the member 'float32' of a type (line 501)
        float32_21118 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 501, 36), np_21117, 'float32')
        # Processing the call keyword arguments (line 501)
        kwargs_21119 = {}
        # Getting the type of 'x' (line 501)
        x_21114 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 501, 22), 'x', False)
        # Obtaining the member 'real' of a type (line 501)
        real_21115 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 501, 22), x_21114, 'real')
        # Obtaining the member 'astype' of a type (line 501)
        astype_21116 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 501, 22), real_21115, 'astype')
        # Calling astype(args, kwargs) (line 501)
        astype_call_result_21120 = invoke(stypy.reporting.localization.Localization(__file__, 501, 22), astype_21116, *[float32_21118], **kwargs_21119)
        
        # Processing the call keyword arguments (line 501)
        kwargs_21121 = {}
        # Getting the type of 'fftn' (line 501)
        fftn_21113 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 501, 17), 'fftn', False)
        # Calling fftn(args, kwargs) (line 501)
        fftn_call_result_21122 = invoke(stypy.reporting.localization.Localization(__file__, 501, 17), fftn_21113, *[astype_call_result_21120], **kwargs_21121)
        
        # Assigning a type to the variable 'y1' (line 501)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 501, 12), 'y1', fftn_call_result_21122)
        
        # Assigning a Call to a Name (line 502):
        
        # Call to astype(...): (line 502)
        # Processing the call arguments (line 502)
        # Getting the type of 'np' (line 502)
        np_21134 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 502, 56), 'np', False)
        # Obtaining the member 'complex64' of a type (line 502)
        complex64_21135 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 502, 56), np_21134, 'complex64')
        # Processing the call keyword arguments (line 502)
        kwargs_21136 = {}
        
        # Call to fftn(...): (line 502)
        # Processing the call arguments (line 502)
        
        # Call to astype(...): (line 502)
        # Processing the call arguments (line 502)
        # Getting the type of 'np' (line 502)
        np_21127 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 502, 36), 'np', False)
        # Obtaining the member 'float64' of a type (line 502)
        float64_21128 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 502, 36), np_21127, 'float64')
        # Processing the call keyword arguments (line 502)
        kwargs_21129 = {}
        # Getting the type of 'x' (line 502)
        x_21124 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 502, 22), 'x', False)
        # Obtaining the member 'real' of a type (line 502)
        real_21125 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 502, 22), x_21124, 'real')
        # Obtaining the member 'astype' of a type (line 502)
        astype_21126 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 502, 22), real_21125, 'astype')
        # Calling astype(args, kwargs) (line 502)
        astype_call_result_21130 = invoke(stypy.reporting.localization.Localization(__file__, 502, 22), astype_21126, *[float64_21128], **kwargs_21129)
        
        # Processing the call keyword arguments (line 502)
        kwargs_21131 = {}
        # Getting the type of 'fftn' (line 502)
        fftn_21123 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 502, 17), 'fftn', False)
        # Calling fftn(args, kwargs) (line 502)
        fftn_call_result_21132 = invoke(stypy.reporting.localization.Localization(__file__, 502, 17), fftn_21123, *[astype_call_result_21130], **kwargs_21131)
        
        # Obtaining the member 'astype' of a type (line 502)
        astype_21133 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 502, 17), fftn_call_result_21132, 'astype')
        # Calling astype(args, kwargs) (line 502)
        astype_call_result_21137 = invoke(stypy.reporting.localization.Localization(__file__, 502, 17), astype_21133, *[complex64_21135], **kwargs_21136)
        
        # Assigning a type to the variable 'y2' (line 502)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 502, 12), 'y2', astype_call_result_21137)
        
        # Call to assert_equal(...): (line 504)
        # Processing the call arguments (line 504)
        # Getting the type of 'y1' (line 504)
        y1_21139 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 504, 25), 'y1', False)
        # Obtaining the member 'dtype' of a type (line 504)
        dtype_21140 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 504, 25), y1_21139, 'dtype')
        # Getting the type of 'np' (line 504)
        np_21141 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 504, 35), 'np', False)
        # Obtaining the member 'complex64' of a type (line 504)
        complex64_21142 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 504, 35), np_21141, 'complex64')
        # Processing the call keyword arguments (line 504)
        kwargs_21143 = {}
        # Getting the type of 'assert_equal' (line 504)
        assert_equal_21138 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 504, 12), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 504)
        assert_equal_call_result_21144 = invoke(stypy.reporting.localization.Localization(__file__, 504, 12), assert_equal_21138, *[dtype_21140, complex64_21142], **kwargs_21143)
        
        
        # Call to assert_array_almost_equal_nulp(...): (line 505)
        # Processing the call arguments (line 505)
        # Getting the type of 'y1' (line 505)
        y1_21146 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 505, 43), 'y1', False)
        # Getting the type of 'y2' (line 505)
        y2_21147 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 505, 47), 'y2', False)
        int_21148 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 505, 51), 'int')
        # Processing the call keyword arguments (line 505)
        kwargs_21149 = {}
        # Getting the type of 'assert_array_almost_equal_nulp' (line 505)
        assert_array_almost_equal_nulp_21145 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 505, 12), 'assert_array_almost_equal_nulp', False)
        # Calling assert_array_almost_equal_nulp(args, kwargs) (line 505)
        assert_array_almost_equal_nulp_call_result_21150 = invoke(stypy.reporting.localization.Localization(__file__, 505, 12), assert_array_almost_equal_nulp_21145, *[y1_21146, y2_21147, int_21148], **kwargs_21149)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'LARGE_COMPOSITE_SIZES' (line 507)
        LARGE_COMPOSITE_SIZES_21151 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 507, 20), 'LARGE_COMPOSITE_SIZES')
        # Getting the type of 'LARGE_PRIME_SIZES' (line 507)
        LARGE_PRIME_SIZES_21152 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 507, 44), 'LARGE_PRIME_SIZES')
        # Applying the binary operator '+' (line 507)
        result_add_21153 = python_operator(stypy.reporting.localization.Localization(__file__, 507, 20), '+', LARGE_COMPOSITE_SIZES_21151, LARGE_PRIME_SIZES_21152)
        
        # Testing the type of a for loop iterable (line 507)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 507, 8), result_add_21153)
        # Getting the type of the for loop variable (line 507)
        for_loop_var_21154 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 507, 8), result_add_21153)
        # Assigning a type to the variable 'size' (line 507)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 507, 8), 'size', for_loop_var_21154)
        # SSA begins for a for statement (line 507)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to seed(...): (line 508)
        # Processing the call arguments (line 508)
        int_21158 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 508, 27), 'int')
        # Processing the call keyword arguments (line 508)
        kwargs_21159 = {}
        # Getting the type of 'np' (line 508)
        np_21155 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 508, 12), 'np', False)
        # Obtaining the member 'random' of a type (line 508)
        random_21156 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 508, 12), np_21155, 'random')
        # Obtaining the member 'seed' of a type (line 508)
        seed_21157 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 508, 12), random_21156, 'seed')
        # Calling seed(args, kwargs) (line 508)
        seed_call_result_21160 = invoke(stypy.reporting.localization.Localization(__file__, 508, 12), seed_21157, *[int_21158], **kwargs_21159)
        
        
        # Assigning a BinOp to a Name (line 509):
        
        # Call to rand(...): (line 509)
        # Processing the call arguments (line 509)
        # Getting the type of 'size' (line 509)
        size_21164 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 509, 31), 'size', False)
        int_21165 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 509, 37), 'int')
        # Processing the call keyword arguments (line 509)
        kwargs_21166 = {}
        # Getting the type of 'np' (line 509)
        np_21161 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 509, 16), 'np', False)
        # Obtaining the member 'random' of a type (line 509)
        random_21162 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 509, 16), np_21161, 'random')
        # Obtaining the member 'rand' of a type (line 509)
        rand_21163 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 509, 16), random_21162, 'rand')
        # Calling rand(args, kwargs) (line 509)
        rand_call_result_21167 = invoke(stypy.reporting.localization.Localization(__file__, 509, 16), rand_21163, *[size_21164, int_21165], **kwargs_21166)
        
        complex_21168 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 509, 42), 'complex')
        
        # Call to rand(...): (line 509)
        # Processing the call arguments (line 509)
        # Getting the type of 'size' (line 509)
        size_21172 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 509, 60), 'size', False)
        int_21173 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 509, 66), 'int')
        # Processing the call keyword arguments (line 509)
        kwargs_21174 = {}
        # Getting the type of 'np' (line 509)
        np_21169 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 509, 45), 'np', False)
        # Obtaining the member 'random' of a type (line 509)
        random_21170 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 509, 45), np_21169, 'random')
        # Obtaining the member 'rand' of a type (line 509)
        rand_21171 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 509, 45), random_21170, 'rand')
        # Calling rand(args, kwargs) (line 509)
        rand_call_result_21175 = invoke(stypy.reporting.localization.Localization(__file__, 509, 45), rand_21171, *[size_21172, int_21173], **kwargs_21174)
        
        # Applying the binary operator '*' (line 509)
        result_mul_21176 = python_operator(stypy.reporting.localization.Localization(__file__, 509, 42), '*', complex_21168, rand_call_result_21175)
        
        # Applying the binary operator '+' (line 509)
        result_add_21177 = python_operator(stypy.reporting.localization.Localization(__file__, 509, 16), '+', rand_call_result_21167, result_mul_21176)
        
        # Assigning a type to the variable 'x' (line 509)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 509, 12), 'x', result_add_21177)
        
        # Assigning a Call to a Name (line 510):
        
        # Call to fftn(...): (line 510)
        # Processing the call arguments (line 510)
        
        # Call to astype(...): (line 510)
        # Processing the call arguments (line 510)
        # Getting the type of 'np' (line 510)
        np_21182 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 510, 36), 'np', False)
        # Obtaining the member 'float32' of a type (line 510)
        float32_21183 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 510, 36), np_21182, 'float32')
        # Processing the call keyword arguments (line 510)
        kwargs_21184 = {}
        # Getting the type of 'x' (line 510)
        x_21179 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 510, 22), 'x', False)
        # Obtaining the member 'real' of a type (line 510)
        real_21180 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 510, 22), x_21179, 'real')
        # Obtaining the member 'astype' of a type (line 510)
        astype_21181 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 510, 22), real_21180, 'astype')
        # Calling astype(args, kwargs) (line 510)
        astype_call_result_21185 = invoke(stypy.reporting.localization.Localization(__file__, 510, 22), astype_21181, *[float32_21183], **kwargs_21184)
        
        # Processing the call keyword arguments (line 510)
        kwargs_21186 = {}
        # Getting the type of 'fftn' (line 510)
        fftn_21178 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 510, 17), 'fftn', False)
        # Calling fftn(args, kwargs) (line 510)
        fftn_call_result_21187 = invoke(stypy.reporting.localization.Localization(__file__, 510, 17), fftn_21178, *[astype_call_result_21185], **kwargs_21186)
        
        # Assigning a type to the variable 'y1' (line 510)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 510, 12), 'y1', fftn_call_result_21187)
        
        # Assigning a Call to a Name (line 511):
        
        # Call to astype(...): (line 511)
        # Processing the call arguments (line 511)
        # Getting the type of 'np' (line 511)
        np_21199 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 511, 56), 'np', False)
        # Obtaining the member 'complex64' of a type (line 511)
        complex64_21200 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 511, 56), np_21199, 'complex64')
        # Processing the call keyword arguments (line 511)
        kwargs_21201 = {}
        
        # Call to fftn(...): (line 511)
        # Processing the call arguments (line 511)
        
        # Call to astype(...): (line 511)
        # Processing the call arguments (line 511)
        # Getting the type of 'np' (line 511)
        np_21192 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 511, 36), 'np', False)
        # Obtaining the member 'float64' of a type (line 511)
        float64_21193 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 511, 36), np_21192, 'float64')
        # Processing the call keyword arguments (line 511)
        kwargs_21194 = {}
        # Getting the type of 'x' (line 511)
        x_21189 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 511, 22), 'x', False)
        # Obtaining the member 'real' of a type (line 511)
        real_21190 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 511, 22), x_21189, 'real')
        # Obtaining the member 'astype' of a type (line 511)
        astype_21191 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 511, 22), real_21190, 'astype')
        # Calling astype(args, kwargs) (line 511)
        astype_call_result_21195 = invoke(stypy.reporting.localization.Localization(__file__, 511, 22), astype_21191, *[float64_21193], **kwargs_21194)
        
        # Processing the call keyword arguments (line 511)
        kwargs_21196 = {}
        # Getting the type of 'fftn' (line 511)
        fftn_21188 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 511, 17), 'fftn', False)
        # Calling fftn(args, kwargs) (line 511)
        fftn_call_result_21197 = invoke(stypy.reporting.localization.Localization(__file__, 511, 17), fftn_21188, *[astype_call_result_21195], **kwargs_21196)
        
        # Obtaining the member 'astype' of a type (line 511)
        astype_21198 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 511, 17), fftn_call_result_21197, 'astype')
        # Calling astype(args, kwargs) (line 511)
        astype_call_result_21202 = invoke(stypy.reporting.localization.Localization(__file__, 511, 17), astype_21198, *[complex64_21200], **kwargs_21201)
        
        # Assigning a type to the variable 'y2' (line 511)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 511, 12), 'y2', astype_call_result_21202)
        
        # Call to assert_equal(...): (line 513)
        # Processing the call arguments (line 513)
        # Getting the type of 'y1' (line 513)
        y1_21204 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 513, 25), 'y1', False)
        # Obtaining the member 'dtype' of a type (line 513)
        dtype_21205 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 513, 25), y1_21204, 'dtype')
        # Getting the type of 'np' (line 513)
        np_21206 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 513, 35), 'np', False)
        # Obtaining the member 'complex64' of a type (line 513)
        complex64_21207 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 513, 35), np_21206, 'complex64')
        # Processing the call keyword arguments (line 513)
        kwargs_21208 = {}
        # Getting the type of 'assert_equal' (line 513)
        assert_equal_21203 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 513, 12), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 513)
        assert_equal_call_result_21209 = invoke(stypy.reporting.localization.Localization(__file__, 513, 12), assert_equal_21203, *[dtype_21205, complex64_21207], **kwargs_21208)
        
        
        # Call to assert_array_almost_equal_nulp(...): (line 514)
        # Processing the call arguments (line 514)
        # Getting the type of 'y1' (line 514)
        y1_21211 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 514, 43), 'y1', False)
        # Getting the type of 'y2' (line 514)
        y2_21212 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 514, 47), 'y2', False)
        int_21213 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 514, 51), 'int')
        # Processing the call keyword arguments (line 514)
        kwargs_21214 = {}
        # Getting the type of 'assert_array_almost_equal_nulp' (line 514)
        assert_array_almost_equal_nulp_21210 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 514, 12), 'assert_array_almost_equal_nulp', False)
        # Calling assert_array_almost_equal_nulp(args, kwargs) (line 514)
        assert_array_almost_equal_nulp_call_result_21215 = invoke(stypy.reporting.localization.Localization(__file__, 514, 12), assert_array_almost_equal_nulp_21210, *[y1_21211, y2_21212, int_21213], **kwargs_21214)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_size_accuracy(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_size_accuracy' in the type store
        # Getting the type of 'stypy_return_type' (line 497)
        stypy_return_type_21216 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 497, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_21216)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_size_accuracy'
        return stypy_return_type_21216


    @norecursion
    def test_definition_float16(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_definition_float16'
        module_type_store = module_type_store.open_function_context('test_definition_float16', 516, 4, False)
        # Assigning a type to the variable 'self' (line 517)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 517, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestFftnSingle.test_definition_float16.__dict__.__setitem__('stypy_localization', localization)
        TestFftnSingle.test_definition_float16.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestFftnSingle.test_definition_float16.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestFftnSingle.test_definition_float16.__dict__.__setitem__('stypy_function_name', 'TestFftnSingle.test_definition_float16')
        TestFftnSingle.test_definition_float16.__dict__.__setitem__('stypy_param_names_list', [])
        TestFftnSingle.test_definition_float16.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestFftnSingle.test_definition_float16.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestFftnSingle.test_definition_float16.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestFftnSingle.test_definition_float16.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestFftnSingle.test_definition_float16.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestFftnSingle.test_definition_float16.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFftnSingle.test_definition_float16', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_definition_float16', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_definition_float16(...)' code ##################

        
        # Assigning a List to a Name (line 517):
        
        # Obtaining an instance of the builtin type 'list' (line 517)
        list_21217 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 517, 12), 'list')
        # Adding type elements to the builtin type 'list' instance (line 517)
        # Adding element type (line 517)
        
        # Obtaining an instance of the builtin type 'list' (line 517)
        list_21218 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 517, 13), 'list')
        # Adding type elements to the builtin type 'list' instance (line 517)
        # Adding element type (line 517)
        int_21219 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 517, 14), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 517, 13), list_21218, int_21219)
        # Adding element type (line 517)
        int_21220 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 517, 17), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 517, 13), list_21218, int_21220)
        # Adding element type (line 517)
        int_21221 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 517, 20), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 517, 13), list_21218, int_21221)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 517, 12), list_21217, list_21218)
        # Adding element type (line 517)
        
        # Obtaining an instance of the builtin type 'list' (line 517)
        list_21222 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 517, 24), 'list')
        # Adding type elements to the builtin type 'list' instance (line 517)
        # Adding element type (line 517)
        int_21223 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 517, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 517, 24), list_21222, int_21223)
        # Adding element type (line 517)
        int_21224 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 517, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 517, 24), list_21222, int_21224)
        # Adding element type (line 517)
        int_21225 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 517, 31), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 517, 24), list_21222, int_21225)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 517, 12), list_21217, list_21222)
        # Adding element type (line 517)
        
        # Obtaining an instance of the builtin type 'list' (line 517)
        list_21226 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 517, 35), 'list')
        # Adding type elements to the builtin type 'list' instance (line 517)
        # Adding element type (line 517)
        int_21227 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 517, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 517, 35), list_21226, int_21227)
        # Adding element type (line 517)
        int_21228 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 517, 39), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 517, 35), list_21226, int_21228)
        # Adding element type (line 517)
        int_21229 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 517, 42), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 517, 35), list_21226, int_21229)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 517, 12), list_21217, list_21226)
        
        # Assigning a type to the variable 'x' (line 517)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 517, 8), 'x', list_21217)
        
        # Assigning a Call to a Name (line 518):
        
        # Call to fftn(...): (line 518)
        # Processing the call arguments (line 518)
        
        # Call to array(...): (line 518)
        # Processing the call arguments (line 518)
        # Getting the type of 'x' (line 518)
        x_21233 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 518, 26), 'x', False)
        # Getting the type of 'np' (line 518)
        np_21234 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 518, 29), 'np', False)
        # Obtaining the member 'float16' of a type (line 518)
        float16_21235 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 518, 29), np_21234, 'float16')
        # Processing the call keyword arguments (line 518)
        kwargs_21236 = {}
        # Getting the type of 'np' (line 518)
        np_21231 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 518, 17), 'np', False)
        # Obtaining the member 'array' of a type (line 518)
        array_21232 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 518, 17), np_21231, 'array')
        # Calling array(args, kwargs) (line 518)
        array_call_result_21237 = invoke(stypy.reporting.localization.Localization(__file__, 518, 17), array_21232, *[x_21233, float16_21235], **kwargs_21236)
        
        # Processing the call keyword arguments (line 518)
        kwargs_21238 = {}
        # Getting the type of 'fftn' (line 518)
        fftn_21230 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 518, 12), 'fftn', False)
        # Calling fftn(args, kwargs) (line 518)
        fftn_call_result_21239 = invoke(stypy.reporting.localization.Localization(__file__, 518, 12), fftn_21230, *[array_call_result_21237], **kwargs_21238)
        
        # Assigning a type to the variable 'y' (line 518)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 518, 8), 'y', fftn_call_result_21239)
        
        # Call to assert_equal(...): (line 519)
        # Processing the call arguments (line 519)
        # Getting the type of 'y' (line 519)
        y_21241 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 519, 21), 'y', False)
        # Obtaining the member 'dtype' of a type (line 519)
        dtype_21242 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 519, 21), y_21241, 'dtype')
        # Getting the type of 'np' (line 519)
        np_21243 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 519, 30), 'np', False)
        # Obtaining the member 'complex64' of a type (line 519)
        complex64_21244 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 519, 30), np_21243, 'complex64')
        # Processing the call keyword arguments (line 519)
        kwargs_21245 = {}
        # Getting the type of 'assert_equal' (line 519)
        assert_equal_21240 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 519, 8), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 519)
        assert_equal_call_result_21246 = invoke(stypy.reporting.localization.Localization(__file__, 519, 8), assert_equal_21240, *[dtype_21242, complex64_21244], **kwargs_21245)
        
        
        # Assigning a Call to a Name (line 520):
        
        # Call to array(...): (line 520)
        # Processing the call arguments (line 520)
        
        # Call to fftn(...): (line 520)
        # Processing the call arguments (line 520)
        # Getting the type of 'x' (line 520)
        x_21250 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 520, 28), 'x', False)
        # Processing the call keyword arguments (line 520)
        kwargs_21251 = {}
        # Getting the type of 'fftn' (line 520)
        fftn_21249 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 520, 23), 'fftn', False)
        # Calling fftn(args, kwargs) (line 520)
        fftn_call_result_21252 = invoke(stypy.reporting.localization.Localization(__file__, 520, 23), fftn_21249, *[x_21250], **kwargs_21251)
        
        # Getting the type of 'np' (line 520)
        np_21253 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 520, 32), 'np', False)
        # Obtaining the member 'complex64' of a type (line 520)
        complex64_21254 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 520, 32), np_21253, 'complex64')
        # Processing the call keyword arguments (line 520)
        kwargs_21255 = {}
        # Getting the type of 'np' (line 520)
        np_21247 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 520, 14), 'np', False)
        # Obtaining the member 'array' of a type (line 520)
        array_21248 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 520, 14), np_21247, 'array')
        # Calling array(args, kwargs) (line 520)
        array_call_result_21256 = invoke(stypy.reporting.localization.Localization(__file__, 520, 14), array_21248, *[fftn_call_result_21252, complex64_21254], **kwargs_21255)
        
        # Assigning a type to the variable 'y_r' (line 520)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 520, 8), 'y_r', array_call_result_21256)
        
        # Call to assert_array_almost_equal_nulp(...): (line 521)
        # Processing the call arguments (line 521)
        # Getting the type of 'y' (line 521)
        y_21258 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 521, 39), 'y', False)
        # Getting the type of 'y_r' (line 521)
        y_r_21259 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 521, 42), 'y_r', False)
        # Processing the call keyword arguments (line 521)
        kwargs_21260 = {}
        # Getting the type of 'assert_array_almost_equal_nulp' (line 521)
        assert_array_almost_equal_nulp_21257 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 521, 8), 'assert_array_almost_equal_nulp', False)
        # Calling assert_array_almost_equal_nulp(args, kwargs) (line 521)
        assert_array_almost_equal_nulp_call_result_21261 = invoke(stypy.reporting.localization.Localization(__file__, 521, 8), assert_array_almost_equal_nulp_21257, *[y_21258, y_r_21259], **kwargs_21260)
        
        
        # ################# End of 'test_definition_float16(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_definition_float16' in the type store
        # Getting the type of 'stypy_return_type' (line 516)
        stypy_return_type_21262 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 516, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_21262)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_definition_float16'
        return stypy_return_type_21262


    @norecursion
    def test_float16_input(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_float16_input'
        module_type_store = module_type_store.open_function_context('test_float16_input', 523, 4, False)
        # Assigning a type to the variable 'self' (line 524)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 524, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestFftnSingle.test_float16_input.__dict__.__setitem__('stypy_localization', localization)
        TestFftnSingle.test_float16_input.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestFftnSingle.test_float16_input.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestFftnSingle.test_float16_input.__dict__.__setitem__('stypy_function_name', 'TestFftnSingle.test_float16_input')
        TestFftnSingle.test_float16_input.__dict__.__setitem__('stypy_param_names_list', [])
        TestFftnSingle.test_float16_input.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestFftnSingle.test_float16_input.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestFftnSingle.test_float16_input.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestFftnSingle.test_float16_input.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestFftnSingle.test_float16_input.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestFftnSingle.test_float16_input.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFftnSingle.test_float16_input', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_float16_input', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_float16_input(...)' code ##################

        
        # Getting the type of 'SMALL_COMPOSITE_SIZES' (line 524)
        SMALL_COMPOSITE_SIZES_21263 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 524, 20), 'SMALL_COMPOSITE_SIZES')
        # Getting the type of 'SMALL_PRIME_SIZES' (line 524)
        SMALL_PRIME_SIZES_21264 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 524, 44), 'SMALL_PRIME_SIZES')
        # Applying the binary operator '+' (line 524)
        result_add_21265 = python_operator(stypy.reporting.localization.Localization(__file__, 524, 20), '+', SMALL_COMPOSITE_SIZES_21263, SMALL_PRIME_SIZES_21264)
        
        # Testing the type of a for loop iterable (line 524)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 524, 8), result_add_21265)
        # Getting the type of the for loop variable (line 524)
        for_loop_var_21266 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 524, 8), result_add_21265)
        # Assigning a type to the variable 'size' (line 524)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 524, 8), 'size', for_loop_var_21266)
        # SSA begins for a for statement (line 524)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to seed(...): (line 525)
        # Processing the call arguments (line 525)
        int_21270 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 525, 27), 'int')
        # Processing the call keyword arguments (line 525)
        kwargs_21271 = {}
        # Getting the type of 'np' (line 525)
        np_21267 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 525, 12), 'np', False)
        # Obtaining the member 'random' of a type (line 525)
        random_21268 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 525, 12), np_21267, 'random')
        # Obtaining the member 'seed' of a type (line 525)
        seed_21269 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 525, 12), random_21268, 'seed')
        # Calling seed(args, kwargs) (line 525)
        seed_call_result_21272 = invoke(stypy.reporting.localization.Localization(__file__, 525, 12), seed_21269, *[int_21270], **kwargs_21271)
        
        
        # Assigning a BinOp to a Name (line 526):
        
        # Call to rand(...): (line 526)
        # Processing the call arguments (line 526)
        # Getting the type of 'size' (line 526)
        size_21276 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 526, 31), 'size', False)
        # Getting the type of 'size' (line 526)
        size_21277 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 526, 37), 'size', False)
        # Processing the call keyword arguments (line 526)
        kwargs_21278 = {}
        # Getting the type of 'np' (line 526)
        np_21273 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 526, 16), 'np', False)
        # Obtaining the member 'random' of a type (line 526)
        random_21274 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 526, 16), np_21273, 'random')
        # Obtaining the member 'rand' of a type (line 526)
        rand_21275 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 526, 16), random_21274, 'rand')
        # Calling rand(args, kwargs) (line 526)
        rand_call_result_21279 = invoke(stypy.reporting.localization.Localization(__file__, 526, 16), rand_21275, *[size_21276, size_21277], **kwargs_21278)
        
        complex_21280 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 526, 45), 'complex')
        
        # Call to rand(...): (line 526)
        # Processing the call arguments (line 526)
        # Getting the type of 'size' (line 526)
        size_21284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 526, 63), 'size', False)
        # Getting the type of 'size' (line 526)
        size_21285 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 526, 69), 'size', False)
        # Processing the call keyword arguments (line 526)
        kwargs_21286 = {}
        # Getting the type of 'np' (line 526)
        np_21281 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 526, 48), 'np', False)
        # Obtaining the member 'random' of a type (line 526)
        random_21282 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 526, 48), np_21281, 'random')
        # Obtaining the member 'rand' of a type (line 526)
        rand_21283 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 526, 48), random_21282, 'rand')
        # Calling rand(args, kwargs) (line 526)
        rand_call_result_21287 = invoke(stypy.reporting.localization.Localization(__file__, 526, 48), rand_21283, *[size_21284, size_21285], **kwargs_21286)
        
        # Applying the binary operator '*' (line 526)
        result_mul_21288 = python_operator(stypy.reporting.localization.Localization(__file__, 526, 45), '*', complex_21280, rand_call_result_21287)
        
        # Applying the binary operator '+' (line 526)
        result_add_21289 = python_operator(stypy.reporting.localization.Localization(__file__, 526, 16), '+', rand_call_result_21279, result_mul_21288)
        
        # Assigning a type to the variable 'x' (line 526)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 526, 12), 'x', result_add_21289)
        
        # Assigning a Call to a Name (line 527):
        
        # Call to fftn(...): (line 527)
        # Processing the call arguments (line 527)
        
        # Call to astype(...): (line 527)
        # Processing the call arguments (line 527)
        # Getting the type of 'np' (line 527)
        np_21294 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 527, 36), 'np', False)
        # Obtaining the member 'float16' of a type (line 527)
        float16_21295 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 527, 36), np_21294, 'float16')
        # Processing the call keyword arguments (line 527)
        kwargs_21296 = {}
        # Getting the type of 'x' (line 527)
        x_21291 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 527, 22), 'x', False)
        # Obtaining the member 'real' of a type (line 527)
        real_21292 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 527, 22), x_21291, 'real')
        # Obtaining the member 'astype' of a type (line 527)
        astype_21293 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 527, 22), real_21292, 'astype')
        # Calling astype(args, kwargs) (line 527)
        astype_call_result_21297 = invoke(stypy.reporting.localization.Localization(__file__, 527, 22), astype_21293, *[float16_21295], **kwargs_21296)
        
        # Processing the call keyword arguments (line 527)
        kwargs_21298 = {}
        # Getting the type of 'fftn' (line 527)
        fftn_21290 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 527, 17), 'fftn', False)
        # Calling fftn(args, kwargs) (line 527)
        fftn_call_result_21299 = invoke(stypy.reporting.localization.Localization(__file__, 527, 17), fftn_21290, *[astype_call_result_21297], **kwargs_21298)
        
        # Assigning a type to the variable 'y1' (line 527)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 527, 12), 'y1', fftn_call_result_21299)
        
        # Assigning a Call to a Name (line 528):
        
        # Call to astype(...): (line 528)
        # Processing the call arguments (line 528)
        # Getting the type of 'np' (line 528)
        np_21311 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 528, 56), 'np', False)
        # Obtaining the member 'complex64' of a type (line 528)
        complex64_21312 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 528, 56), np_21311, 'complex64')
        # Processing the call keyword arguments (line 528)
        kwargs_21313 = {}
        
        # Call to fftn(...): (line 528)
        # Processing the call arguments (line 528)
        
        # Call to astype(...): (line 528)
        # Processing the call arguments (line 528)
        # Getting the type of 'np' (line 528)
        np_21304 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 528, 36), 'np', False)
        # Obtaining the member 'float64' of a type (line 528)
        float64_21305 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 528, 36), np_21304, 'float64')
        # Processing the call keyword arguments (line 528)
        kwargs_21306 = {}
        # Getting the type of 'x' (line 528)
        x_21301 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 528, 22), 'x', False)
        # Obtaining the member 'real' of a type (line 528)
        real_21302 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 528, 22), x_21301, 'real')
        # Obtaining the member 'astype' of a type (line 528)
        astype_21303 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 528, 22), real_21302, 'astype')
        # Calling astype(args, kwargs) (line 528)
        astype_call_result_21307 = invoke(stypy.reporting.localization.Localization(__file__, 528, 22), astype_21303, *[float64_21305], **kwargs_21306)
        
        # Processing the call keyword arguments (line 528)
        kwargs_21308 = {}
        # Getting the type of 'fftn' (line 528)
        fftn_21300 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 528, 17), 'fftn', False)
        # Calling fftn(args, kwargs) (line 528)
        fftn_call_result_21309 = invoke(stypy.reporting.localization.Localization(__file__, 528, 17), fftn_21300, *[astype_call_result_21307], **kwargs_21308)
        
        # Obtaining the member 'astype' of a type (line 528)
        astype_21310 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 528, 17), fftn_call_result_21309, 'astype')
        # Calling astype(args, kwargs) (line 528)
        astype_call_result_21314 = invoke(stypy.reporting.localization.Localization(__file__, 528, 17), astype_21310, *[complex64_21312], **kwargs_21313)
        
        # Assigning a type to the variable 'y2' (line 528)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 528, 12), 'y2', astype_call_result_21314)
        
        # Call to assert_equal(...): (line 530)
        # Processing the call arguments (line 530)
        # Getting the type of 'y1' (line 530)
        y1_21316 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 530, 25), 'y1', False)
        # Obtaining the member 'dtype' of a type (line 530)
        dtype_21317 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 530, 25), y1_21316, 'dtype')
        # Getting the type of 'np' (line 530)
        np_21318 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 530, 35), 'np', False)
        # Obtaining the member 'complex64' of a type (line 530)
        complex64_21319 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 530, 35), np_21318, 'complex64')
        # Processing the call keyword arguments (line 530)
        kwargs_21320 = {}
        # Getting the type of 'assert_equal' (line 530)
        assert_equal_21315 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 530, 12), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 530)
        assert_equal_call_result_21321 = invoke(stypy.reporting.localization.Localization(__file__, 530, 12), assert_equal_21315, *[dtype_21317, complex64_21319], **kwargs_21320)
        
        
        # Call to assert_array_almost_equal_nulp(...): (line 531)
        # Processing the call arguments (line 531)
        # Getting the type of 'y1' (line 531)
        y1_21323 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 531, 43), 'y1', False)
        # Getting the type of 'y2' (line 531)
        y2_21324 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 531, 47), 'y2', False)
        float_21325 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 531, 51), 'float')
        # Processing the call keyword arguments (line 531)
        kwargs_21326 = {}
        # Getting the type of 'assert_array_almost_equal_nulp' (line 531)
        assert_array_almost_equal_nulp_21322 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 531, 12), 'assert_array_almost_equal_nulp', False)
        # Calling assert_array_almost_equal_nulp(args, kwargs) (line 531)
        assert_array_almost_equal_nulp_call_result_21327 = invoke(stypy.reporting.localization.Localization(__file__, 531, 12), assert_array_almost_equal_nulp_21322, *[y1_21323, y2_21324, float_21325], **kwargs_21326)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'LARGE_COMPOSITE_SIZES' (line 533)
        LARGE_COMPOSITE_SIZES_21328 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 533, 20), 'LARGE_COMPOSITE_SIZES')
        # Getting the type of 'LARGE_PRIME_SIZES' (line 533)
        LARGE_PRIME_SIZES_21329 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 533, 44), 'LARGE_PRIME_SIZES')
        # Applying the binary operator '+' (line 533)
        result_add_21330 = python_operator(stypy.reporting.localization.Localization(__file__, 533, 20), '+', LARGE_COMPOSITE_SIZES_21328, LARGE_PRIME_SIZES_21329)
        
        # Testing the type of a for loop iterable (line 533)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 533, 8), result_add_21330)
        # Getting the type of the for loop variable (line 533)
        for_loop_var_21331 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 533, 8), result_add_21330)
        # Assigning a type to the variable 'size' (line 533)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 533, 8), 'size', for_loop_var_21331)
        # SSA begins for a for statement (line 533)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to seed(...): (line 534)
        # Processing the call arguments (line 534)
        int_21335 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 534, 27), 'int')
        # Processing the call keyword arguments (line 534)
        kwargs_21336 = {}
        # Getting the type of 'np' (line 534)
        np_21332 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 534, 12), 'np', False)
        # Obtaining the member 'random' of a type (line 534)
        random_21333 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 534, 12), np_21332, 'random')
        # Obtaining the member 'seed' of a type (line 534)
        seed_21334 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 534, 12), random_21333, 'seed')
        # Calling seed(args, kwargs) (line 534)
        seed_call_result_21337 = invoke(stypy.reporting.localization.Localization(__file__, 534, 12), seed_21334, *[int_21335], **kwargs_21336)
        
        
        # Assigning a BinOp to a Name (line 535):
        
        # Call to rand(...): (line 535)
        # Processing the call arguments (line 535)
        # Getting the type of 'size' (line 535)
        size_21341 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 535, 31), 'size', False)
        int_21342 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 535, 37), 'int')
        # Processing the call keyword arguments (line 535)
        kwargs_21343 = {}
        # Getting the type of 'np' (line 535)
        np_21338 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 535, 16), 'np', False)
        # Obtaining the member 'random' of a type (line 535)
        random_21339 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 535, 16), np_21338, 'random')
        # Obtaining the member 'rand' of a type (line 535)
        rand_21340 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 535, 16), random_21339, 'rand')
        # Calling rand(args, kwargs) (line 535)
        rand_call_result_21344 = invoke(stypy.reporting.localization.Localization(__file__, 535, 16), rand_21340, *[size_21341, int_21342], **kwargs_21343)
        
        complex_21345 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 535, 42), 'complex')
        
        # Call to rand(...): (line 535)
        # Processing the call arguments (line 535)
        # Getting the type of 'size' (line 535)
        size_21349 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 535, 60), 'size', False)
        int_21350 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 535, 66), 'int')
        # Processing the call keyword arguments (line 535)
        kwargs_21351 = {}
        # Getting the type of 'np' (line 535)
        np_21346 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 535, 45), 'np', False)
        # Obtaining the member 'random' of a type (line 535)
        random_21347 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 535, 45), np_21346, 'random')
        # Obtaining the member 'rand' of a type (line 535)
        rand_21348 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 535, 45), random_21347, 'rand')
        # Calling rand(args, kwargs) (line 535)
        rand_call_result_21352 = invoke(stypy.reporting.localization.Localization(__file__, 535, 45), rand_21348, *[size_21349, int_21350], **kwargs_21351)
        
        # Applying the binary operator '*' (line 535)
        result_mul_21353 = python_operator(stypy.reporting.localization.Localization(__file__, 535, 42), '*', complex_21345, rand_call_result_21352)
        
        # Applying the binary operator '+' (line 535)
        result_add_21354 = python_operator(stypy.reporting.localization.Localization(__file__, 535, 16), '+', rand_call_result_21344, result_mul_21353)
        
        # Assigning a type to the variable 'x' (line 535)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 535, 12), 'x', result_add_21354)
        
        # Assigning a Call to a Name (line 536):
        
        # Call to fftn(...): (line 536)
        # Processing the call arguments (line 536)
        
        # Call to astype(...): (line 536)
        # Processing the call arguments (line 536)
        # Getting the type of 'np' (line 536)
        np_21359 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 36), 'np', False)
        # Obtaining the member 'float16' of a type (line 536)
        float16_21360 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 536, 36), np_21359, 'float16')
        # Processing the call keyword arguments (line 536)
        kwargs_21361 = {}
        # Getting the type of 'x' (line 536)
        x_21356 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 22), 'x', False)
        # Obtaining the member 'real' of a type (line 536)
        real_21357 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 536, 22), x_21356, 'real')
        # Obtaining the member 'astype' of a type (line 536)
        astype_21358 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 536, 22), real_21357, 'astype')
        # Calling astype(args, kwargs) (line 536)
        astype_call_result_21362 = invoke(stypy.reporting.localization.Localization(__file__, 536, 22), astype_21358, *[float16_21360], **kwargs_21361)
        
        # Processing the call keyword arguments (line 536)
        kwargs_21363 = {}
        # Getting the type of 'fftn' (line 536)
        fftn_21355 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 17), 'fftn', False)
        # Calling fftn(args, kwargs) (line 536)
        fftn_call_result_21364 = invoke(stypy.reporting.localization.Localization(__file__, 536, 17), fftn_21355, *[astype_call_result_21362], **kwargs_21363)
        
        # Assigning a type to the variable 'y1' (line 536)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 536, 12), 'y1', fftn_call_result_21364)
        
        # Assigning a Call to a Name (line 537):
        
        # Call to astype(...): (line 537)
        # Processing the call arguments (line 537)
        # Getting the type of 'np' (line 537)
        np_21376 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 537, 56), 'np', False)
        # Obtaining the member 'complex64' of a type (line 537)
        complex64_21377 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 537, 56), np_21376, 'complex64')
        # Processing the call keyword arguments (line 537)
        kwargs_21378 = {}
        
        # Call to fftn(...): (line 537)
        # Processing the call arguments (line 537)
        
        # Call to astype(...): (line 537)
        # Processing the call arguments (line 537)
        # Getting the type of 'np' (line 537)
        np_21369 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 537, 36), 'np', False)
        # Obtaining the member 'float64' of a type (line 537)
        float64_21370 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 537, 36), np_21369, 'float64')
        # Processing the call keyword arguments (line 537)
        kwargs_21371 = {}
        # Getting the type of 'x' (line 537)
        x_21366 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 537, 22), 'x', False)
        # Obtaining the member 'real' of a type (line 537)
        real_21367 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 537, 22), x_21366, 'real')
        # Obtaining the member 'astype' of a type (line 537)
        astype_21368 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 537, 22), real_21367, 'astype')
        # Calling astype(args, kwargs) (line 537)
        astype_call_result_21372 = invoke(stypy.reporting.localization.Localization(__file__, 537, 22), astype_21368, *[float64_21370], **kwargs_21371)
        
        # Processing the call keyword arguments (line 537)
        kwargs_21373 = {}
        # Getting the type of 'fftn' (line 537)
        fftn_21365 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 537, 17), 'fftn', False)
        # Calling fftn(args, kwargs) (line 537)
        fftn_call_result_21374 = invoke(stypy.reporting.localization.Localization(__file__, 537, 17), fftn_21365, *[astype_call_result_21372], **kwargs_21373)
        
        # Obtaining the member 'astype' of a type (line 537)
        astype_21375 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 537, 17), fftn_call_result_21374, 'astype')
        # Calling astype(args, kwargs) (line 537)
        astype_call_result_21379 = invoke(stypy.reporting.localization.Localization(__file__, 537, 17), astype_21375, *[complex64_21377], **kwargs_21378)
        
        # Assigning a type to the variable 'y2' (line 537)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 537, 12), 'y2', astype_call_result_21379)
        
        # Call to assert_equal(...): (line 539)
        # Processing the call arguments (line 539)
        # Getting the type of 'y1' (line 539)
        y1_21381 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 539, 25), 'y1', False)
        # Obtaining the member 'dtype' of a type (line 539)
        dtype_21382 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 539, 25), y1_21381, 'dtype')
        # Getting the type of 'np' (line 539)
        np_21383 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 539, 35), 'np', False)
        # Obtaining the member 'complex64' of a type (line 539)
        complex64_21384 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 539, 35), np_21383, 'complex64')
        # Processing the call keyword arguments (line 539)
        kwargs_21385 = {}
        # Getting the type of 'assert_equal' (line 539)
        assert_equal_21380 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 539, 12), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 539)
        assert_equal_call_result_21386 = invoke(stypy.reporting.localization.Localization(__file__, 539, 12), assert_equal_21380, *[dtype_21382, complex64_21384], **kwargs_21385)
        
        
        # Call to assert_array_almost_equal_nulp(...): (line 540)
        # Processing the call arguments (line 540)
        # Getting the type of 'y1' (line 540)
        y1_21388 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 540, 43), 'y1', False)
        # Getting the type of 'y2' (line 540)
        y2_21389 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 540, 47), 'y2', False)
        float_21390 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 540, 51), 'float')
        # Processing the call keyword arguments (line 540)
        kwargs_21391 = {}
        # Getting the type of 'assert_array_almost_equal_nulp' (line 540)
        assert_array_almost_equal_nulp_21387 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 540, 12), 'assert_array_almost_equal_nulp', False)
        # Calling assert_array_almost_equal_nulp(args, kwargs) (line 540)
        assert_array_almost_equal_nulp_call_result_21392 = invoke(stypy.reporting.localization.Localization(__file__, 540, 12), assert_array_almost_equal_nulp_21387, *[y1_21388, y2_21389, float_21390], **kwargs_21391)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_float16_input(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_float16_input' in the type store
        # Getting the type of 'stypy_return_type' (line 523)
        stypy_return_type_21393 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 523, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_21393)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_float16_input'
        return stypy_return_type_21393


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 484, 0, False)
        # Assigning a type to the variable 'self' (line 485)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 485, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFftnSingle.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'TestFftnSingle' (line 484)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 484, 0), 'TestFftnSingle', TestFftnSingle)
# Declaration of the 'TestFftn' class

class TestFftn(object, ):

    @norecursion
    def setup_method(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'setup_method'
        module_type_store = module_type_store.open_function_context('setup_method', 544, 4, False)
        # Assigning a type to the variable 'self' (line 545)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 545, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestFftn.setup_method.__dict__.__setitem__('stypy_localization', localization)
        TestFftn.setup_method.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestFftn.setup_method.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestFftn.setup_method.__dict__.__setitem__('stypy_function_name', 'TestFftn.setup_method')
        TestFftn.setup_method.__dict__.__setitem__('stypy_param_names_list', [])
        TestFftn.setup_method.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestFftn.setup_method.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestFftn.setup_method.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestFftn.setup_method.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestFftn.setup_method.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestFftn.setup_method.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFftn.setup_method', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'setup_method', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'setup_method(...)' code ##################

        
        # Call to seed(...): (line 545)
        # Processing the call arguments (line 545)
        int_21397 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 545, 23), 'int')
        # Processing the call keyword arguments (line 545)
        kwargs_21398 = {}
        # Getting the type of 'np' (line 545)
        np_21394 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 545, 8), 'np', False)
        # Obtaining the member 'random' of a type (line 545)
        random_21395 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 545, 8), np_21394, 'random')
        # Obtaining the member 'seed' of a type (line 545)
        seed_21396 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 545, 8), random_21395, 'seed')
        # Calling seed(args, kwargs) (line 545)
        seed_call_result_21399 = invoke(stypy.reporting.localization.Localization(__file__, 545, 8), seed_21396, *[int_21397], **kwargs_21398)
        
        
        # ################# End of 'setup_method(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'setup_method' in the type store
        # Getting the type of 'stypy_return_type' (line 544)
        stypy_return_type_21400 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 544, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_21400)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'setup_method'
        return stypy_return_type_21400


    @norecursion
    def test_definition(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_definition'
        module_type_store = module_type_store.open_function_context('test_definition', 547, 4, False)
        # Assigning a type to the variable 'self' (line 548)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 548, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestFftn.test_definition.__dict__.__setitem__('stypy_localization', localization)
        TestFftn.test_definition.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestFftn.test_definition.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestFftn.test_definition.__dict__.__setitem__('stypy_function_name', 'TestFftn.test_definition')
        TestFftn.test_definition.__dict__.__setitem__('stypy_param_names_list', [])
        TestFftn.test_definition.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestFftn.test_definition.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestFftn.test_definition.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestFftn.test_definition.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestFftn.test_definition.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestFftn.test_definition.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFftn.test_definition', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_definition', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_definition(...)' code ##################

        
        # Assigning a List to a Name (line 548):
        
        # Obtaining an instance of the builtin type 'list' (line 548)
        list_21401 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 548, 12), 'list')
        # Adding type elements to the builtin type 'list' instance (line 548)
        # Adding element type (line 548)
        
        # Obtaining an instance of the builtin type 'list' (line 548)
        list_21402 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 548, 13), 'list')
        # Adding type elements to the builtin type 'list' instance (line 548)
        # Adding element type (line 548)
        int_21403 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 548, 14), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 548, 13), list_21402, int_21403)
        # Adding element type (line 548)
        int_21404 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 548, 16), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 548, 13), list_21402, int_21404)
        # Adding element type (line 548)
        int_21405 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 548, 18), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 548, 13), list_21402, int_21405)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 548, 12), list_21401, list_21402)
        # Adding element type (line 548)
        
        # Obtaining an instance of the builtin type 'list' (line 548)
        list_21406 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 548, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 548)
        # Adding element type (line 548)
        int_21407 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 548, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 548, 21), list_21406, int_21407)
        # Adding element type (line 548)
        int_21408 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 548, 24), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 548, 21), list_21406, int_21408)
        # Adding element type (line 548)
        int_21409 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 548, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 548, 21), list_21406, int_21409)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 548, 12), list_21401, list_21406)
        # Adding element type (line 548)
        
        # Obtaining an instance of the builtin type 'list' (line 548)
        list_21410 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 548, 29), 'list')
        # Adding type elements to the builtin type 'list' instance (line 548)
        # Adding element type (line 548)
        int_21411 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 548, 30), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 548, 29), list_21410, int_21411)
        # Adding element type (line 548)
        int_21412 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 548, 32), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 548, 29), list_21410, int_21412)
        # Adding element type (line 548)
        int_21413 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 548, 34), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 548, 29), list_21410, int_21413)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 548, 12), list_21401, list_21410)
        
        # Assigning a type to the variable 'x' (line 548)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 548, 8), 'x', list_21401)
        
        # Assigning a Call to a Name (line 549):
        
        # Call to fftn(...): (line 549)
        # Processing the call arguments (line 549)
        # Getting the type of 'x' (line 549)
        x_21415 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 549, 17), 'x', False)
        # Processing the call keyword arguments (line 549)
        kwargs_21416 = {}
        # Getting the type of 'fftn' (line 549)
        fftn_21414 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 549, 12), 'fftn', False)
        # Calling fftn(args, kwargs) (line 549)
        fftn_call_result_21417 = invoke(stypy.reporting.localization.Localization(__file__, 549, 12), fftn_21414, *[x_21415], **kwargs_21416)
        
        # Assigning a type to the variable 'y' (line 549)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 549, 8), 'y', fftn_call_result_21417)
        
        # Call to assert_array_almost_equal(...): (line 550)
        # Processing the call arguments (line 550)
        # Getting the type of 'y' (line 550)
        y_21419 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 550, 34), 'y', False)
        
        # Call to direct_dftn(...): (line 550)
        # Processing the call arguments (line 550)
        # Getting the type of 'x' (line 550)
        x_21421 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 550, 48), 'x', False)
        # Processing the call keyword arguments (line 550)
        kwargs_21422 = {}
        # Getting the type of 'direct_dftn' (line 550)
        direct_dftn_21420 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 550, 36), 'direct_dftn', False)
        # Calling direct_dftn(args, kwargs) (line 550)
        direct_dftn_call_result_21423 = invoke(stypy.reporting.localization.Localization(__file__, 550, 36), direct_dftn_21420, *[x_21421], **kwargs_21422)
        
        # Processing the call keyword arguments (line 550)
        kwargs_21424 = {}
        # Getting the type of 'assert_array_almost_equal' (line 550)
        assert_array_almost_equal_21418 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 550, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 550)
        assert_array_almost_equal_call_result_21425 = invoke(stypy.reporting.localization.Localization(__file__, 550, 8), assert_array_almost_equal_21418, *[y_21419, direct_dftn_call_result_21423], **kwargs_21424)
        
        
        # Assigning a Call to a Name (line 551):
        
        # Call to random(...): (line 551)
        # Processing the call arguments (line 551)
        
        # Obtaining an instance of the builtin type 'tuple' (line 551)
        tuple_21427 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 551, 20), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 551)
        # Adding element type (line 551)
        int_21428 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 551, 20), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 551, 20), tuple_21427, int_21428)
        # Adding element type (line 551)
        int_21429 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 551, 23), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 551, 20), tuple_21427, int_21429)
        
        # Processing the call keyword arguments (line 551)
        kwargs_21430 = {}
        # Getting the type of 'random' (line 551)
        random_21426 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 551, 12), 'random', False)
        # Calling random(args, kwargs) (line 551)
        random_call_result_21431 = invoke(stypy.reporting.localization.Localization(__file__, 551, 12), random_21426, *[tuple_21427], **kwargs_21430)
        
        # Assigning a type to the variable 'x' (line 551)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 551, 8), 'x', random_call_result_21431)
        
        # Call to assert_array_almost_equal(...): (line 552)
        # Processing the call arguments (line 552)
        
        # Call to fftn(...): (line 552)
        # Processing the call arguments (line 552)
        # Getting the type of 'x' (line 552)
        x_21434 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 552, 39), 'x', False)
        # Processing the call keyword arguments (line 552)
        kwargs_21435 = {}
        # Getting the type of 'fftn' (line 552)
        fftn_21433 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 552, 34), 'fftn', False)
        # Calling fftn(args, kwargs) (line 552)
        fftn_call_result_21436 = invoke(stypy.reporting.localization.Localization(__file__, 552, 34), fftn_21433, *[x_21434], **kwargs_21435)
        
        
        # Call to direct_dftn(...): (line 552)
        # Processing the call arguments (line 552)
        # Getting the type of 'x' (line 552)
        x_21438 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 552, 54), 'x', False)
        # Processing the call keyword arguments (line 552)
        kwargs_21439 = {}
        # Getting the type of 'direct_dftn' (line 552)
        direct_dftn_21437 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 552, 42), 'direct_dftn', False)
        # Calling direct_dftn(args, kwargs) (line 552)
        direct_dftn_call_result_21440 = invoke(stypy.reporting.localization.Localization(__file__, 552, 42), direct_dftn_21437, *[x_21438], **kwargs_21439)
        
        # Processing the call keyword arguments (line 552)
        kwargs_21441 = {}
        # Getting the type of 'assert_array_almost_equal' (line 552)
        assert_array_almost_equal_21432 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 552, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 552)
        assert_array_almost_equal_call_result_21442 = invoke(stypy.reporting.localization.Localization(__file__, 552, 8), assert_array_almost_equal_21432, *[fftn_call_result_21436, direct_dftn_call_result_21440], **kwargs_21441)
        
        
        # Assigning a Call to a Name (line 553):
        
        # Call to random(...): (line 553)
        # Processing the call arguments (line 553)
        
        # Obtaining an instance of the builtin type 'tuple' (line 553)
        tuple_21444 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 553, 20), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 553)
        # Adding element type (line 553)
        int_21445 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 553, 20), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 553, 20), tuple_21444, int_21445)
        # Adding element type (line 553)
        int_21446 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 553, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 553, 20), tuple_21444, int_21446)
        # Adding element type (line 553)
        int_21447 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 553, 24), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 553, 20), tuple_21444, int_21447)
        # Adding element type (line 553)
        int_21448 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 553, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 553, 20), tuple_21444, int_21448)
        
        # Processing the call keyword arguments (line 553)
        kwargs_21449 = {}
        # Getting the type of 'random' (line 553)
        random_21443 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 553, 12), 'random', False)
        # Calling random(args, kwargs) (line 553)
        random_call_result_21450 = invoke(stypy.reporting.localization.Localization(__file__, 553, 12), random_21443, *[tuple_21444], **kwargs_21449)
        
        # Assigning a type to the variable 'x' (line 553)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 553, 8), 'x', random_call_result_21450)
        
        # Call to assert_array_almost_equal(...): (line 554)
        # Processing the call arguments (line 554)
        
        # Call to fftn(...): (line 554)
        # Processing the call arguments (line 554)
        # Getting the type of 'x' (line 554)
        x_21453 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 554, 39), 'x', False)
        # Processing the call keyword arguments (line 554)
        kwargs_21454 = {}
        # Getting the type of 'fftn' (line 554)
        fftn_21452 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 554, 34), 'fftn', False)
        # Calling fftn(args, kwargs) (line 554)
        fftn_call_result_21455 = invoke(stypy.reporting.localization.Localization(__file__, 554, 34), fftn_21452, *[x_21453], **kwargs_21454)
        
        
        # Call to direct_dftn(...): (line 554)
        # Processing the call arguments (line 554)
        # Getting the type of 'x' (line 554)
        x_21457 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 554, 54), 'x', False)
        # Processing the call keyword arguments (line 554)
        kwargs_21458 = {}
        # Getting the type of 'direct_dftn' (line 554)
        direct_dftn_21456 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 554, 42), 'direct_dftn', False)
        # Calling direct_dftn(args, kwargs) (line 554)
        direct_dftn_call_result_21459 = invoke(stypy.reporting.localization.Localization(__file__, 554, 42), direct_dftn_21456, *[x_21457], **kwargs_21458)
        
        # Processing the call keyword arguments (line 554)
        kwargs_21460 = {}
        # Getting the type of 'assert_array_almost_equal' (line 554)
        assert_array_almost_equal_21451 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 554, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 554)
        assert_array_almost_equal_call_result_21461 = invoke(stypy.reporting.localization.Localization(__file__, 554, 8), assert_array_almost_equal_21451, *[fftn_call_result_21455, direct_dftn_call_result_21459], **kwargs_21460)
        
        
        # ################# End of 'test_definition(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_definition' in the type store
        # Getting the type of 'stypy_return_type' (line 547)
        stypy_return_type_21462 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 547, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_21462)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_definition'
        return stypy_return_type_21462


    @norecursion
    def test_axes_argument(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_axes_argument'
        module_type_store = module_type_store.open_function_context('test_axes_argument', 556, 4, False)
        # Assigning a type to the variable 'self' (line 557)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 557, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestFftn.test_axes_argument.__dict__.__setitem__('stypy_localization', localization)
        TestFftn.test_axes_argument.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestFftn.test_axes_argument.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestFftn.test_axes_argument.__dict__.__setitem__('stypy_function_name', 'TestFftn.test_axes_argument')
        TestFftn.test_axes_argument.__dict__.__setitem__('stypy_param_names_list', [])
        TestFftn.test_axes_argument.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestFftn.test_axes_argument.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestFftn.test_axes_argument.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestFftn.test_axes_argument.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestFftn.test_axes_argument.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestFftn.test_axes_argument.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFftn.test_axes_argument', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_axes_argument', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_axes_argument(...)' code ##################

        
        # Assigning a List to a Name (line 558):
        
        # Obtaining an instance of the builtin type 'list' (line 558)
        list_21463 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 558, 17), 'list')
        # Adding type elements to the builtin type 'list' instance (line 558)
        # Adding element type (line 558)
        
        # Obtaining an instance of the builtin type 'list' (line 558)
        list_21464 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 558, 18), 'list')
        # Adding type elements to the builtin type 'list' instance (line 558)
        # Adding element type (line 558)
        int_21465 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 558, 19), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 558, 18), list_21464, int_21465)
        # Adding element type (line 558)
        int_21466 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 558, 21), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 558, 18), list_21464, int_21466)
        # Adding element type (line 558)
        int_21467 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 558, 23), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 558, 18), list_21464, int_21467)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 558, 17), list_21463, list_21464)
        # Adding element type (line 558)
        
        # Obtaining an instance of the builtin type 'list' (line 558)
        list_21468 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 558, 26), 'list')
        # Adding type elements to the builtin type 'list' instance (line 558)
        # Adding element type (line 558)
        int_21469 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 558, 27), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 558, 26), list_21468, int_21469)
        # Adding element type (line 558)
        int_21470 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 558, 29), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 558, 26), list_21468, int_21470)
        # Adding element type (line 558)
        int_21471 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 558, 31), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 558, 26), list_21468, int_21471)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 558, 17), list_21463, list_21468)
        # Adding element type (line 558)
        
        # Obtaining an instance of the builtin type 'list' (line 558)
        list_21472 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 558, 34), 'list')
        # Adding type elements to the builtin type 'list' instance (line 558)
        # Adding element type (line 558)
        int_21473 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 558, 35), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 558, 34), list_21472, int_21473)
        # Adding element type (line 558)
        int_21474 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 558, 37), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 558, 34), list_21472, int_21474)
        # Adding element type (line 558)
        int_21475 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 558, 39), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 558, 34), list_21472, int_21475)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 558, 17), list_21463, list_21472)
        
        # Assigning a type to the variable 'plane1' (line 558)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 558, 8), 'plane1', list_21463)
        
        # Assigning a List to a Name (line 559):
        
        # Obtaining an instance of the builtin type 'list' (line 559)
        list_21476 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 559, 17), 'list')
        # Adding type elements to the builtin type 'list' instance (line 559)
        # Adding element type (line 559)
        
        # Obtaining an instance of the builtin type 'list' (line 559)
        list_21477 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 559, 18), 'list')
        # Adding type elements to the builtin type 'list' instance (line 559)
        # Adding element type (line 559)
        int_21478 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 559, 19), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 559, 18), list_21477, int_21478)
        # Adding element type (line 559)
        int_21479 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 559, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 559, 18), list_21477, int_21479)
        # Adding element type (line 559)
        int_21480 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 559, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 559, 18), list_21477, int_21480)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 559, 17), list_21476, list_21477)
        # Adding element type (line 559)
        
        # Obtaining an instance of the builtin type 'list' (line 559)
        list_21481 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 559, 29), 'list')
        # Adding type elements to the builtin type 'list' instance (line 559)
        # Adding element type (line 559)
        int_21482 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 559, 30), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 559, 29), list_21481, int_21482)
        # Adding element type (line 559)
        int_21483 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 559, 33), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 559, 29), list_21481, int_21483)
        # Adding element type (line 559)
        int_21484 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 559, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 559, 29), list_21481, int_21484)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 559, 17), list_21476, list_21481)
        # Adding element type (line 559)
        
        # Obtaining an instance of the builtin type 'list' (line 559)
        list_21485 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 559, 40), 'list')
        # Adding type elements to the builtin type 'list' instance (line 559)
        # Adding element type (line 559)
        int_21486 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 559, 41), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 559, 40), list_21485, int_21486)
        # Adding element type (line 559)
        int_21487 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 559, 44), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 559, 40), list_21485, int_21487)
        # Adding element type (line 559)
        int_21488 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 559, 47), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 559, 40), list_21485, int_21488)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 559, 17), list_21476, list_21485)
        
        # Assigning a type to the variable 'plane2' (line 559)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 559, 8), 'plane2', list_21476)
        
        # Assigning a List to a Name (line 560):
        
        # Obtaining an instance of the builtin type 'list' (line 560)
        list_21489 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 560, 17), 'list')
        # Adding type elements to the builtin type 'list' instance (line 560)
        # Adding element type (line 560)
        
        # Obtaining an instance of the builtin type 'list' (line 560)
        list_21490 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 560, 18), 'list')
        # Adding type elements to the builtin type 'list' instance (line 560)
        # Adding element type (line 560)
        int_21491 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 560, 19), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 560, 18), list_21490, int_21491)
        # Adding element type (line 560)
        int_21492 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 560, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 560, 18), list_21490, int_21492)
        # Adding element type (line 560)
        int_21493 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 560, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 560, 18), list_21490, int_21493)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 560, 17), list_21489, list_21490)
        # Adding element type (line 560)
        
        # Obtaining an instance of the builtin type 'list' (line 560)
        list_21494 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 560, 29), 'list')
        # Adding type elements to the builtin type 'list' instance (line 560)
        # Adding element type (line 560)
        int_21495 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 560, 30), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 560, 29), list_21494, int_21495)
        # Adding element type (line 560)
        int_21496 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 560, 33), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 560, 29), list_21494, int_21496)
        # Adding element type (line 560)
        int_21497 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 560, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 560, 29), list_21494, int_21497)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 560, 17), list_21489, list_21494)
        # Adding element type (line 560)
        
        # Obtaining an instance of the builtin type 'list' (line 560)
        list_21498 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 560, 40), 'list')
        # Adding type elements to the builtin type 'list' instance (line 560)
        # Adding element type (line 560)
        int_21499 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 560, 41), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 560, 40), list_21498, int_21499)
        # Adding element type (line 560)
        int_21500 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 560, 44), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 560, 40), list_21498, int_21500)
        # Adding element type (line 560)
        int_21501 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 560, 47), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 560, 40), list_21498, int_21501)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 560, 17), list_21489, list_21498)
        
        # Assigning a type to the variable 'plane3' (line 560)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 560, 8), 'plane3', list_21489)
        
        # Assigning a List to a Name (line 561):
        
        # Obtaining an instance of the builtin type 'list' (line 561)
        list_21502 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 561, 20), 'list')
        # Adding type elements to the builtin type 'list' instance (line 561)
        # Adding element type (line 561)
        
        # Obtaining an instance of the builtin type 'list' (line 561)
        list_21503 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 561, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 561)
        # Adding element type (line 561)
        int_21504 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 561, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 561, 21), list_21503, int_21504)
        # Adding element type (line 561)
        int_21505 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 561, 24), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 561, 21), list_21503, int_21505)
        # Adding element type (line 561)
        int_21506 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 561, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 561, 21), list_21503, int_21506)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 561, 20), list_21502, list_21503)
        # Adding element type (line 561)
        
        # Obtaining an instance of the builtin type 'list' (line 561)
        list_21507 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 561, 29), 'list')
        # Adding type elements to the builtin type 'list' instance (line 561)
        # Adding element type (line 561)
        int_21508 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 561, 30), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 561, 29), list_21507, int_21508)
        # Adding element type (line 561)
        int_21509 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 561, 33), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 561, 29), list_21507, int_21509)
        # Adding element type (line 561)
        int_21510 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 561, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 561, 29), list_21507, int_21510)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 561, 20), list_21502, list_21507)
        # Adding element type (line 561)
        
        # Obtaining an instance of the builtin type 'list' (line 561)
        list_21511 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 561, 40), 'list')
        # Adding type elements to the builtin type 'list' instance (line 561)
        # Adding element type (line 561)
        int_21512 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 561, 41), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 561, 40), list_21511, int_21512)
        # Adding element type (line 561)
        int_21513 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 561, 44), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 561, 40), list_21511, int_21513)
        # Adding element type (line 561)
        int_21514 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 561, 47), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 561, 40), list_21511, int_21514)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 561, 20), list_21502, list_21511)
        
        # Assigning a type to the variable 'ki_plane1' (line 561)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 561, 8), 'ki_plane1', list_21502)
        
        # Assigning a List to a Name (line 562):
        
        # Obtaining an instance of the builtin type 'list' (line 562)
        list_21515 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 562, 20), 'list')
        # Adding type elements to the builtin type 'list' instance (line 562)
        # Adding element type (line 562)
        
        # Obtaining an instance of the builtin type 'list' (line 562)
        list_21516 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 562, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 562)
        # Adding element type (line 562)
        int_21517 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 562, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 562, 21), list_21516, int_21517)
        # Adding element type (line 562)
        int_21518 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 562, 24), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 562, 21), list_21516, int_21518)
        # Adding element type (line 562)
        int_21519 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 562, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 562, 21), list_21516, int_21519)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 562, 20), list_21515, list_21516)
        # Adding element type (line 562)
        
        # Obtaining an instance of the builtin type 'list' (line 562)
        list_21520 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 562, 29), 'list')
        # Adding type elements to the builtin type 'list' instance (line 562)
        # Adding element type (line 562)
        int_21521 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 562, 30), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 562, 29), list_21520, int_21521)
        # Adding element type (line 562)
        int_21522 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 562, 33), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 562, 29), list_21520, int_21522)
        # Adding element type (line 562)
        int_21523 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 562, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 562, 29), list_21520, int_21523)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 562, 20), list_21515, list_21520)
        # Adding element type (line 562)
        
        # Obtaining an instance of the builtin type 'list' (line 562)
        list_21524 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 562, 40), 'list')
        # Adding type elements to the builtin type 'list' instance (line 562)
        # Adding element type (line 562)
        int_21525 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 562, 41), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 562, 40), list_21524, int_21525)
        # Adding element type (line 562)
        int_21526 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 562, 44), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 562, 40), list_21524, int_21526)
        # Adding element type (line 562)
        int_21527 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 562, 47), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 562, 40), list_21524, int_21527)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 562, 20), list_21515, list_21524)
        
        # Assigning a type to the variable 'ki_plane2' (line 562)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 562, 8), 'ki_plane2', list_21515)
        
        # Assigning a List to a Name (line 563):
        
        # Obtaining an instance of the builtin type 'list' (line 563)
        list_21528 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 563, 20), 'list')
        # Adding type elements to the builtin type 'list' instance (line 563)
        # Adding element type (line 563)
        
        # Obtaining an instance of the builtin type 'list' (line 563)
        list_21529 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 563, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 563)
        # Adding element type (line 563)
        int_21530 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 563, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 563, 21), list_21529, int_21530)
        # Adding element type (line 563)
        int_21531 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 563, 24), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 563, 21), list_21529, int_21531)
        # Adding element type (line 563)
        int_21532 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 563, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 563, 21), list_21529, int_21532)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 563, 20), list_21528, list_21529)
        # Adding element type (line 563)
        
        # Obtaining an instance of the builtin type 'list' (line 563)
        list_21533 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 563, 29), 'list')
        # Adding type elements to the builtin type 'list' instance (line 563)
        # Adding element type (line 563)
        int_21534 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 563, 30), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 563, 29), list_21533, int_21534)
        # Adding element type (line 563)
        int_21535 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 563, 33), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 563, 29), list_21533, int_21535)
        # Adding element type (line 563)
        int_21536 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 563, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 563, 29), list_21533, int_21536)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 563, 20), list_21528, list_21533)
        # Adding element type (line 563)
        
        # Obtaining an instance of the builtin type 'list' (line 563)
        list_21537 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 563, 40), 'list')
        # Adding type elements to the builtin type 'list' instance (line 563)
        # Adding element type (line 563)
        int_21538 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 563, 41), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 563, 40), list_21537, int_21538)
        # Adding element type (line 563)
        int_21539 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 563, 44), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 563, 40), list_21537, int_21539)
        # Adding element type (line 563)
        int_21540 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 563, 47), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 563, 40), list_21537, int_21540)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 563, 20), list_21528, list_21537)
        
        # Assigning a type to the variable 'ki_plane3' (line 563)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 563, 8), 'ki_plane3', list_21528)
        
        # Assigning a List to a Name (line 564):
        
        # Obtaining an instance of the builtin type 'list' (line 564)
        list_21541 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 564, 20), 'list')
        # Adding type elements to the builtin type 'list' instance (line 564)
        # Adding element type (line 564)
        
        # Obtaining an instance of the builtin type 'list' (line 564)
        list_21542 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 564, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 564)
        # Adding element type (line 564)
        int_21543 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 564, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 564, 21), list_21542, int_21543)
        # Adding element type (line 564)
        int_21544 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 564, 24), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 564, 21), list_21542, int_21544)
        # Adding element type (line 564)
        int_21545 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 564, 27), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 564, 21), list_21542, int_21545)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 564, 20), list_21541, list_21542)
        # Adding element type (line 564)
        
        # Obtaining an instance of the builtin type 'list' (line 564)
        list_21546 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 564, 31), 'list')
        # Adding type elements to the builtin type 'list' instance (line 564)
        # Adding element type (line 564)
        int_21547 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 564, 32), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 564, 31), list_21546, int_21547)
        # Adding element type (line 564)
        int_21548 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 564, 34), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 564, 31), list_21546, int_21548)
        # Adding element type (line 564)
        int_21549 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 564, 37), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 564, 31), list_21546, int_21549)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 564, 20), list_21541, list_21546)
        # Adding element type (line 564)
        
        # Obtaining an instance of the builtin type 'list' (line 564)
        list_21550 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 564, 41), 'list')
        # Adding type elements to the builtin type 'list' instance (line 564)
        # Adding element type (line 564)
        int_21551 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 564, 42), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 564, 41), list_21550, int_21551)
        # Adding element type (line 564)
        int_21552 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 564, 44), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 564, 41), list_21550, int_21552)
        # Adding element type (line 564)
        int_21553 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 564, 47), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 564, 41), list_21550, int_21553)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 564, 20), list_21541, list_21550)
        
        # Assigning a type to the variable 'jk_plane1' (line 564)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 564, 8), 'jk_plane1', list_21541)
        
        # Assigning a List to a Name (line 565):
        
        # Obtaining an instance of the builtin type 'list' (line 565)
        list_21554 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 565, 20), 'list')
        # Adding type elements to the builtin type 'list' instance (line 565)
        # Adding element type (line 565)
        
        # Obtaining an instance of the builtin type 'list' (line 565)
        list_21555 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 565, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 565)
        # Adding element type (line 565)
        int_21556 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 565, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 565, 21), list_21555, int_21556)
        # Adding element type (line 565)
        int_21557 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 565, 24), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 565, 21), list_21555, int_21557)
        # Adding element type (line 565)
        int_21558 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 565, 27), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 565, 21), list_21555, int_21558)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 565, 20), list_21554, list_21555)
        # Adding element type (line 565)
        
        # Obtaining an instance of the builtin type 'list' (line 565)
        list_21559 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 565, 31), 'list')
        # Adding type elements to the builtin type 'list' instance (line 565)
        # Adding element type (line 565)
        int_21560 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 565, 32), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 565, 31), list_21559, int_21560)
        # Adding element type (line 565)
        int_21561 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 565, 34), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 565, 31), list_21559, int_21561)
        # Adding element type (line 565)
        int_21562 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 565, 37), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 565, 31), list_21559, int_21562)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 565, 20), list_21554, list_21559)
        # Adding element type (line 565)
        
        # Obtaining an instance of the builtin type 'list' (line 565)
        list_21563 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 565, 41), 'list')
        # Adding type elements to the builtin type 'list' instance (line 565)
        # Adding element type (line 565)
        int_21564 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 565, 42), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 565, 41), list_21563, int_21564)
        # Adding element type (line 565)
        int_21565 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 565, 44), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 565, 41), list_21563, int_21565)
        # Adding element type (line 565)
        int_21566 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 565, 47), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 565, 41), list_21563, int_21566)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 565, 20), list_21554, list_21563)
        
        # Assigning a type to the variable 'jk_plane2' (line 565)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 565, 8), 'jk_plane2', list_21554)
        
        # Assigning a List to a Name (line 566):
        
        # Obtaining an instance of the builtin type 'list' (line 566)
        list_21567 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 566, 20), 'list')
        # Adding type elements to the builtin type 'list' instance (line 566)
        # Adding element type (line 566)
        
        # Obtaining an instance of the builtin type 'list' (line 566)
        list_21568 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 566, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 566)
        # Adding element type (line 566)
        int_21569 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 566, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 566, 21), list_21568, int_21569)
        # Adding element type (line 566)
        int_21570 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 566, 24), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 566, 21), list_21568, int_21570)
        # Adding element type (line 566)
        int_21571 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 566, 27), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 566, 21), list_21568, int_21571)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 566, 20), list_21567, list_21568)
        # Adding element type (line 566)
        
        # Obtaining an instance of the builtin type 'list' (line 566)
        list_21572 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 566, 31), 'list')
        # Adding type elements to the builtin type 'list' instance (line 566)
        # Adding element type (line 566)
        int_21573 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 566, 32), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 566, 31), list_21572, int_21573)
        # Adding element type (line 566)
        int_21574 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 566, 34), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 566, 31), list_21572, int_21574)
        # Adding element type (line 566)
        int_21575 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 566, 37), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 566, 31), list_21572, int_21575)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 566, 20), list_21567, list_21572)
        # Adding element type (line 566)
        
        # Obtaining an instance of the builtin type 'list' (line 566)
        list_21576 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 566, 41), 'list')
        # Adding type elements to the builtin type 'list' instance (line 566)
        # Adding element type (line 566)
        int_21577 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 566, 42), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 566, 41), list_21576, int_21577)
        # Adding element type (line 566)
        int_21578 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 566, 44), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 566, 41), list_21576, int_21578)
        # Adding element type (line 566)
        int_21579 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 566, 47), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 566, 41), list_21576, int_21579)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 566, 20), list_21567, list_21576)
        
        # Assigning a type to the variable 'jk_plane3' (line 566)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 566, 8), 'jk_plane3', list_21567)
        
        # Assigning a List to a Name (line 567):
        
        # Obtaining an instance of the builtin type 'list' (line 567)
        list_21580 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 567, 20), 'list')
        # Adding type elements to the builtin type 'list' instance (line 567)
        # Adding element type (line 567)
        
        # Obtaining an instance of the builtin type 'list' (line 567)
        list_21581 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 567, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 567)
        # Adding element type (line 567)
        int_21582 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 567, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 567, 21), list_21581, int_21582)
        # Adding element type (line 567)
        int_21583 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 567, 24), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 567, 21), list_21581, int_21583)
        # Adding element type (line 567)
        int_21584 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 567, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 567, 21), list_21581, int_21584)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 567, 20), list_21580, list_21581)
        # Adding element type (line 567)
        
        # Obtaining an instance of the builtin type 'list' (line 567)
        list_21585 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 567, 29), 'list')
        # Adding type elements to the builtin type 'list' instance (line 567)
        # Adding element type (line 567)
        int_21586 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 567, 30), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 567, 29), list_21585, int_21586)
        # Adding element type (line 567)
        int_21587 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 567, 33), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 567, 29), list_21585, int_21587)
        # Adding element type (line 567)
        int_21588 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 567, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 567, 29), list_21585, int_21588)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 567, 20), list_21580, list_21585)
        # Adding element type (line 567)
        
        # Obtaining an instance of the builtin type 'list' (line 567)
        list_21589 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 567, 40), 'list')
        # Adding type elements to the builtin type 'list' instance (line 567)
        # Adding element type (line 567)
        int_21590 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 567, 41), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 567, 40), list_21589, int_21590)
        # Adding element type (line 567)
        int_21591 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 567, 44), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 567, 40), list_21589, int_21591)
        # Adding element type (line 567)
        int_21592 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 567, 47), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 567, 40), list_21589, int_21592)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 567, 20), list_21580, list_21589)
        
        # Assigning a type to the variable 'kj_plane1' (line 567)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 567, 8), 'kj_plane1', list_21580)
        
        # Assigning a List to a Name (line 568):
        
        # Obtaining an instance of the builtin type 'list' (line 568)
        list_21593 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 568, 20), 'list')
        # Adding type elements to the builtin type 'list' instance (line 568)
        # Adding element type (line 568)
        
        # Obtaining an instance of the builtin type 'list' (line 568)
        list_21594 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 568, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 568)
        # Adding element type (line 568)
        int_21595 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 568, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 568, 21), list_21594, int_21595)
        # Adding element type (line 568)
        int_21596 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 568, 24), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 568, 21), list_21594, int_21596)
        # Adding element type (line 568)
        int_21597 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 568, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 568, 21), list_21594, int_21597)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 568, 20), list_21593, list_21594)
        # Adding element type (line 568)
        
        # Obtaining an instance of the builtin type 'list' (line 568)
        list_21598 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 568, 29), 'list')
        # Adding type elements to the builtin type 'list' instance (line 568)
        # Adding element type (line 568)
        int_21599 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 568, 30), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 568, 29), list_21598, int_21599)
        # Adding element type (line 568)
        int_21600 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 568, 33), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 568, 29), list_21598, int_21600)
        # Adding element type (line 568)
        int_21601 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 568, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 568, 29), list_21598, int_21601)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 568, 20), list_21593, list_21598)
        # Adding element type (line 568)
        
        # Obtaining an instance of the builtin type 'list' (line 568)
        list_21602 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 568, 40), 'list')
        # Adding type elements to the builtin type 'list' instance (line 568)
        # Adding element type (line 568)
        int_21603 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 568, 41), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 568, 40), list_21602, int_21603)
        # Adding element type (line 568)
        int_21604 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 568, 44), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 568, 40), list_21602, int_21604)
        # Adding element type (line 568)
        int_21605 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 568, 47), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 568, 40), list_21602, int_21605)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 568, 20), list_21593, list_21602)
        
        # Assigning a type to the variable 'kj_plane2' (line 568)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 568, 8), 'kj_plane2', list_21593)
        
        # Assigning a List to a Name (line 569):
        
        # Obtaining an instance of the builtin type 'list' (line 569)
        list_21606 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 569, 20), 'list')
        # Adding type elements to the builtin type 'list' instance (line 569)
        # Adding element type (line 569)
        
        # Obtaining an instance of the builtin type 'list' (line 569)
        list_21607 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 569, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 569)
        # Adding element type (line 569)
        int_21608 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 569, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 569, 21), list_21607, int_21608)
        # Adding element type (line 569)
        int_21609 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 569, 24), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 569, 21), list_21607, int_21609)
        # Adding element type (line 569)
        int_21610 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 569, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 569, 21), list_21607, int_21610)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 569, 20), list_21606, list_21607)
        # Adding element type (line 569)
        
        # Obtaining an instance of the builtin type 'list' (line 569)
        list_21611 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 569, 29), 'list')
        # Adding type elements to the builtin type 'list' instance (line 569)
        # Adding element type (line 569)
        int_21612 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 569, 30), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 569, 29), list_21611, int_21612)
        # Adding element type (line 569)
        int_21613 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 569, 33), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 569, 29), list_21611, int_21613)
        # Adding element type (line 569)
        int_21614 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 569, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 569, 29), list_21611, int_21614)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 569, 20), list_21606, list_21611)
        # Adding element type (line 569)
        
        # Obtaining an instance of the builtin type 'list' (line 569)
        list_21615 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 569, 40), 'list')
        # Adding type elements to the builtin type 'list' instance (line 569)
        # Adding element type (line 569)
        int_21616 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 569, 41), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 569, 40), list_21615, int_21616)
        # Adding element type (line 569)
        int_21617 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 569, 44), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 569, 40), list_21615, int_21617)
        # Adding element type (line 569)
        int_21618 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 569, 47), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 569, 40), list_21615, int_21618)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 569, 20), list_21606, list_21615)
        
        # Assigning a type to the variable 'kj_plane3' (line 569)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 569, 8), 'kj_plane3', list_21606)
        
        # Assigning a List to a Name (line 570):
        
        # Obtaining an instance of the builtin type 'list' (line 570)
        list_21619 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 570, 20), 'list')
        # Adding type elements to the builtin type 'list' instance (line 570)
        # Adding element type (line 570)
        
        # Obtaining an instance of the builtin type 'list' (line 570)
        list_21620 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 570, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 570)
        # Adding element type (line 570)
        int_21621 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 570, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 570, 21), list_21620, int_21621)
        # Adding element type (line 570)
        int_21622 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 570, 24), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 570, 21), list_21620, int_21622)
        # Adding element type (line 570)
        int_21623 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 570, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 570, 21), list_21620, int_21623)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 570, 20), list_21619, list_21620)
        # Adding element type (line 570)
        
        # Obtaining an instance of the builtin type 'list' (line 570)
        list_21624 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 570, 29), 'list')
        # Adding type elements to the builtin type 'list' instance (line 570)
        # Adding element type (line 570)
        int_21625 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 570, 30), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 570, 29), list_21624, int_21625)
        # Adding element type (line 570)
        int_21626 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 570, 32), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 570, 29), list_21624, int_21626)
        # Adding element type (line 570)
        int_21627 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 570, 34), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 570, 29), list_21624, int_21627)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 570, 20), list_21619, list_21624)
        # Adding element type (line 570)
        
        # Obtaining an instance of the builtin type 'list' (line 570)
        list_21628 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 570, 37), 'list')
        # Adding type elements to the builtin type 'list' instance (line 570)
        # Adding element type (line 570)
        int_21629 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 570, 38), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 570, 37), list_21628, int_21629)
        # Adding element type (line 570)
        int_21630 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 570, 40), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 570, 37), list_21628, int_21630)
        # Adding element type (line 570)
        int_21631 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 570, 42), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 570, 37), list_21628, int_21631)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 570, 20), list_21619, list_21628)
        
        # Assigning a type to the variable 'ij_plane1' (line 570)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 570, 8), 'ij_plane1', list_21619)
        
        # Assigning a List to a Name (line 571):
        
        # Obtaining an instance of the builtin type 'list' (line 571)
        list_21632 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 571, 20), 'list')
        # Adding type elements to the builtin type 'list' instance (line 571)
        # Adding element type (line 571)
        
        # Obtaining an instance of the builtin type 'list' (line 571)
        list_21633 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 571, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 571)
        # Adding element type (line 571)
        int_21634 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 571, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 571, 21), list_21633, int_21634)
        # Adding element type (line 571)
        int_21635 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 571, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 571, 21), list_21633, int_21635)
        # Adding element type (line 571)
        int_21636 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 571, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 571, 21), list_21633, int_21636)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 571, 20), list_21632, list_21633)
        # Adding element type (line 571)
        
        # Obtaining an instance of the builtin type 'list' (line 571)
        list_21637 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 571, 32), 'list')
        # Adding type elements to the builtin type 'list' instance (line 571)
        # Adding element type (line 571)
        int_21638 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 571, 33), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 571, 32), list_21637, int_21638)
        # Adding element type (line 571)
        int_21639 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 571, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 571, 32), list_21637, int_21639)
        # Adding element type (line 571)
        int_21640 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 571, 39), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 571, 32), list_21637, int_21640)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 571, 20), list_21632, list_21637)
        # Adding element type (line 571)
        
        # Obtaining an instance of the builtin type 'list' (line 571)
        list_21641 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 571, 43), 'list')
        # Adding type elements to the builtin type 'list' instance (line 571)
        # Adding element type (line 571)
        int_21642 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 571, 44), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 571, 43), list_21641, int_21642)
        # Adding element type (line 571)
        int_21643 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 571, 47), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 571, 43), list_21641, int_21643)
        # Adding element type (line 571)
        int_21644 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 571, 50), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 571, 43), list_21641, int_21644)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 571, 20), list_21632, list_21641)
        
        # Assigning a type to the variable 'ij_plane2' (line 571)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 571, 8), 'ij_plane2', list_21632)
        
        # Assigning a List to a Name (line 572):
        
        # Obtaining an instance of the builtin type 'list' (line 572)
        list_21645 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 572, 20), 'list')
        # Adding type elements to the builtin type 'list' instance (line 572)
        # Adding element type (line 572)
        
        # Obtaining an instance of the builtin type 'list' (line 572)
        list_21646 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 572, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 572)
        # Adding element type (line 572)
        int_21647 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 572, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 572, 21), list_21646, int_21647)
        # Adding element type (line 572)
        int_21648 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 572, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 572, 21), list_21646, int_21648)
        # Adding element type (line 572)
        int_21649 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 572, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 572, 21), list_21646, int_21649)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 572, 20), list_21645, list_21646)
        # Adding element type (line 572)
        
        # Obtaining an instance of the builtin type 'list' (line 572)
        list_21650 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 572, 32), 'list')
        # Adding type elements to the builtin type 'list' instance (line 572)
        # Adding element type (line 572)
        int_21651 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 572, 33), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 572, 32), list_21650, int_21651)
        # Adding element type (line 572)
        int_21652 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 572, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 572, 32), list_21650, int_21652)
        # Adding element type (line 572)
        int_21653 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 572, 39), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 572, 32), list_21650, int_21653)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 572, 20), list_21645, list_21650)
        # Adding element type (line 572)
        
        # Obtaining an instance of the builtin type 'list' (line 572)
        list_21654 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 572, 43), 'list')
        # Adding type elements to the builtin type 'list' instance (line 572)
        # Adding element type (line 572)
        int_21655 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 572, 44), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 572, 43), list_21654, int_21655)
        # Adding element type (line 572)
        int_21656 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 572, 47), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 572, 43), list_21654, int_21656)
        # Adding element type (line 572)
        int_21657 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 572, 50), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 572, 43), list_21654, int_21657)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 572, 20), list_21645, list_21654)
        
        # Assigning a type to the variable 'ij_plane3' (line 572)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 572, 8), 'ij_plane3', list_21645)
        
        # Assigning a List to a Name (line 573):
        
        # Obtaining an instance of the builtin type 'list' (line 573)
        list_21658 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 573, 20), 'list')
        # Adding type elements to the builtin type 'list' instance (line 573)
        # Adding element type (line 573)
        
        # Obtaining an instance of the builtin type 'list' (line 573)
        list_21659 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 573, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 573)
        # Adding element type (line 573)
        int_21660 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 573, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 573, 21), list_21659, int_21660)
        # Adding element type (line 573)
        int_21661 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 573, 24), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 573, 21), list_21659, int_21661)
        # Adding element type (line 573)
        int_21662 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 573, 27), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 573, 21), list_21659, int_21662)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 573, 20), list_21658, list_21659)
        # Adding element type (line 573)
        
        # Obtaining an instance of the builtin type 'list' (line 573)
        list_21663 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 573, 31), 'list')
        # Adding type elements to the builtin type 'list' instance (line 573)
        # Adding element type (line 573)
        int_21664 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 573, 32), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 573, 31), list_21663, int_21664)
        # Adding element type (line 573)
        int_21665 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 573, 34), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 573, 31), list_21663, int_21665)
        # Adding element type (line 573)
        int_21666 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 573, 37), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 573, 31), list_21663, int_21666)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 573, 20), list_21658, list_21663)
        # Adding element type (line 573)
        
        # Obtaining an instance of the builtin type 'list' (line 573)
        list_21667 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 573, 41), 'list')
        # Adding type elements to the builtin type 'list' instance (line 573)
        # Adding element type (line 573)
        int_21668 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 573, 42), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 573, 41), list_21667, int_21668)
        # Adding element type (line 573)
        int_21669 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 573, 44), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 573, 41), list_21667, int_21669)
        # Adding element type (line 573)
        int_21670 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 573, 47), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 573, 41), list_21667, int_21670)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 573, 20), list_21658, list_21667)
        
        # Assigning a type to the variable 'ik_plane1' (line 573)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 573, 8), 'ik_plane1', list_21658)
        
        # Assigning a List to a Name (line 574):
        
        # Obtaining an instance of the builtin type 'list' (line 574)
        list_21671 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 574, 20), 'list')
        # Adding type elements to the builtin type 'list' instance (line 574)
        # Adding element type (line 574)
        
        # Obtaining an instance of the builtin type 'list' (line 574)
        list_21672 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 574, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 574)
        # Adding element type (line 574)
        int_21673 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 574, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 574, 21), list_21672, int_21673)
        # Adding element type (line 574)
        int_21674 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 574, 24), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 574, 21), list_21672, int_21674)
        # Adding element type (line 574)
        int_21675 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 574, 27), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 574, 21), list_21672, int_21675)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 574, 20), list_21671, list_21672)
        # Adding element type (line 574)
        
        # Obtaining an instance of the builtin type 'list' (line 574)
        list_21676 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 574, 31), 'list')
        # Adding type elements to the builtin type 'list' instance (line 574)
        # Adding element type (line 574)
        int_21677 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 574, 32), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 574, 31), list_21676, int_21677)
        # Adding element type (line 574)
        int_21678 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 574, 34), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 574, 31), list_21676, int_21678)
        # Adding element type (line 574)
        int_21679 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 574, 37), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 574, 31), list_21676, int_21679)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 574, 20), list_21671, list_21676)
        # Adding element type (line 574)
        
        # Obtaining an instance of the builtin type 'list' (line 574)
        list_21680 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 574, 41), 'list')
        # Adding type elements to the builtin type 'list' instance (line 574)
        # Adding element type (line 574)
        int_21681 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 574, 42), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 574, 41), list_21680, int_21681)
        # Adding element type (line 574)
        int_21682 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 574, 44), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 574, 41), list_21680, int_21682)
        # Adding element type (line 574)
        int_21683 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 574, 47), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 574, 41), list_21680, int_21683)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 574, 20), list_21671, list_21680)
        
        # Assigning a type to the variable 'ik_plane2' (line 574)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 574, 8), 'ik_plane2', list_21671)
        
        # Assigning a List to a Name (line 575):
        
        # Obtaining an instance of the builtin type 'list' (line 575)
        list_21684 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 575, 20), 'list')
        # Adding type elements to the builtin type 'list' instance (line 575)
        # Adding element type (line 575)
        
        # Obtaining an instance of the builtin type 'list' (line 575)
        list_21685 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 575, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 575)
        # Adding element type (line 575)
        int_21686 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 575, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 575, 21), list_21685, int_21686)
        # Adding element type (line 575)
        int_21687 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 575, 24), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 575, 21), list_21685, int_21687)
        # Adding element type (line 575)
        int_21688 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 575, 27), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 575, 21), list_21685, int_21688)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 575, 20), list_21684, list_21685)
        # Adding element type (line 575)
        
        # Obtaining an instance of the builtin type 'list' (line 575)
        list_21689 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 575, 31), 'list')
        # Adding type elements to the builtin type 'list' instance (line 575)
        # Adding element type (line 575)
        int_21690 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 575, 32), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 575, 31), list_21689, int_21690)
        # Adding element type (line 575)
        int_21691 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 575, 34), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 575, 31), list_21689, int_21691)
        # Adding element type (line 575)
        int_21692 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 575, 37), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 575, 31), list_21689, int_21692)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 575, 20), list_21684, list_21689)
        # Adding element type (line 575)
        
        # Obtaining an instance of the builtin type 'list' (line 575)
        list_21693 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 575, 41), 'list')
        # Adding type elements to the builtin type 'list' instance (line 575)
        # Adding element type (line 575)
        int_21694 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 575, 42), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 575, 41), list_21693, int_21694)
        # Adding element type (line 575)
        int_21695 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 575, 44), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 575, 41), list_21693, int_21695)
        # Adding element type (line 575)
        int_21696 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 575, 47), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 575, 41), list_21693, int_21696)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 575, 20), list_21684, list_21693)
        
        # Assigning a type to the variable 'ik_plane3' (line 575)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 575, 8), 'ik_plane3', list_21684)
        
        # Assigning a List to a Name (line 576):
        
        # Obtaining an instance of the builtin type 'list' (line 576)
        list_21697 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 576, 20), 'list')
        # Adding type elements to the builtin type 'list' instance (line 576)
        # Adding element type (line 576)
        # Getting the type of 'jk_plane1' (line 576)
        jk_plane1_21698 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 576, 21), 'jk_plane1')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 576, 20), list_21697, jk_plane1_21698)
        # Adding element type (line 576)
        # Getting the type of 'jk_plane2' (line 576)
        jk_plane2_21699 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 576, 31), 'jk_plane2')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 576, 20), list_21697, jk_plane2_21699)
        # Adding element type (line 576)
        # Getting the type of 'jk_plane3' (line 576)
        jk_plane3_21700 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 576, 41), 'jk_plane3')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 576, 20), list_21697, jk_plane3_21700)
        
        # Assigning a type to the variable 'ijk_space' (line 576)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 576, 8), 'ijk_space', list_21697)
        
        # Assigning a List to a Name (line 577):
        
        # Obtaining an instance of the builtin type 'list' (line 577)
        list_21701 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 577, 20), 'list')
        # Adding type elements to the builtin type 'list' instance (line 577)
        # Adding element type (line 577)
        # Getting the type of 'kj_plane1' (line 577)
        kj_plane1_21702 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 577, 21), 'kj_plane1')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 577, 20), list_21701, kj_plane1_21702)
        # Adding element type (line 577)
        # Getting the type of 'kj_plane2' (line 577)
        kj_plane2_21703 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 577, 31), 'kj_plane2')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 577, 20), list_21701, kj_plane2_21703)
        # Adding element type (line 577)
        # Getting the type of 'kj_plane3' (line 577)
        kj_plane3_21704 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 577, 41), 'kj_plane3')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 577, 20), list_21701, kj_plane3_21704)
        
        # Assigning a type to the variable 'ikj_space' (line 577)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 577, 8), 'ikj_space', list_21701)
        
        # Assigning a List to a Name (line 578):
        
        # Obtaining an instance of the builtin type 'list' (line 578)
        list_21705 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 578, 20), 'list')
        # Adding type elements to the builtin type 'list' instance (line 578)
        # Adding element type (line 578)
        # Getting the type of 'ik_plane1' (line 578)
        ik_plane1_21706 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 578, 21), 'ik_plane1')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 578, 20), list_21705, ik_plane1_21706)
        # Adding element type (line 578)
        # Getting the type of 'ik_plane2' (line 578)
        ik_plane2_21707 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 578, 31), 'ik_plane2')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 578, 20), list_21705, ik_plane2_21707)
        # Adding element type (line 578)
        # Getting the type of 'ik_plane3' (line 578)
        ik_plane3_21708 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 578, 41), 'ik_plane3')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 578, 20), list_21705, ik_plane3_21708)
        
        # Assigning a type to the variable 'jik_space' (line 578)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 578, 8), 'jik_space', list_21705)
        
        # Assigning a List to a Name (line 579):
        
        # Obtaining an instance of the builtin type 'list' (line 579)
        list_21709 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 579, 20), 'list')
        # Adding type elements to the builtin type 'list' instance (line 579)
        # Adding element type (line 579)
        # Getting the type of 'ki_plane1' (line 579)
        ki_plane1_21710 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 579, 21), 'ki_plane1')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 579, 20), list_21709, ki_plane1_21710)
        # Adding element type (line 579)
        # Getting the type of 'ki_plane2' (line 579)
        ki_plane2_21711 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 579, 31), 'ki_plane2')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 579, 20), list_21709, ki_plane2_21711)
        # Adding element type (line 579)
        # Getting the type of 'ki_plane3' (line 579)
        ki_plane3_21712 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 579, 41), 'ki_plane3')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 579, 20), list_21709, ki_plane3_21712)
        
        # Assigning a type to the variable 'jki_space' (line 579)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 579, 8), 'jki_space', list_21709)
        
        # Assigning a List to a Name (line 580):
        
        # Obtaining an instance of the builtin type 'list' (line 580)
        list_21713 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 580, 20), 'list')
        # Adding type elements to the builtin type 'list' instance (line 580)
        # Adding element type (line 580)
        # Getting the type of 'ij_plane1' (line 580)
        ij_plane1_21714 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 580, 21), 'ij_plane1')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 580, 20), list_21713, ij_plane1_21714)
        # Adding element type (line 580)
        # Getting the type of 'ij_plane2' (line 580)
        ij_plane2_21715 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 580, 31), 'ij_plane2')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 580, 20), list_21713, ij_plane2_21715)
        # Adding element type (line 580)
        # Getting the type of 'ij_plane3' (line 580)
        ij_plane3_21716 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 580, 41), 'ij_plane3')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 580, 20), list_21713, ij_plane3_21716)
        
        # Assigning a type to the variable 'kij_space' (line 580)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 580, 8), 'kij_space', list_21713)
        
        # Assigning a Call to a Name (line 581):
        
        # Call to array(...): (line 581)
        # Processing the call arguments (line 581)
        
        # Obtaining an instance of the builtin type 'list' (line 581)
        list_21718 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 581, 18), 'list')
        # Adding type elements to the builtin type 'list' instance (line 581)
        # Adding element type (line 581)
        # Getting the type of 'plane1' (line 581)
        plane1_21719 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 581, 19), 'plane1', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 581, 18), list_21718, plane1_21719)
        # Adding element type (line 581)
        # Getting the type of 'plane2' (line 581)
        plane2_21720 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 581, 26), 'plane2', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 581, 18), list_21718, plane2_21720)
        # Adding element type (line 581)
        # Getting the type of 'plane3' (line 581)
        plane3_21721 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 581, 33), 'plane3', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 581, 18), list_21718, plane3_21721)
        
        # Processing the call keyword arguments (line 581)
        kwargs_21722 = {}
        # Getting the type of 'array' (line 581)
        array_21717 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 581, 12), 'array', False)
        # Calling array(args, kwargs) (line 581)
        array_call_result_21723 = invoke(stypy.reporting.localization.Localization(__file__, 581, 12), array_21717, *[list_21718], **kwargs_21722)
        
        # Assigning a type to the variable 'x' (line 581)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 581, 8), 'x', array_call_result_21723)
        
        # Call to assert_array_almost_equal(...): (line 583)
        # Processing the call arguments (line 583)
        
        # Call to fftn(...): (line 583)
        # Processing the call arguments (line 583)
        # Getting the type of 'x' (line 583)
        x_21726 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 583, 39), 'x', False)
        # Processing the call keyword arguments (line 583)
        kwargs_21727 = {}
        # Getting the type of 'fftn' (line 583)
        fftn_21725 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 583, 34), 'fftn', False)
        # Calling fftn(args, kwargs) (line 583)
        fftn_call_result_21728 = invoke(stypy.reporting.localization.Localization(__file__, 583, 34), fftn_21725, *[x_21726], **kwargs_21727)
        
        
        # Call to fftn(...): (line 583)
        # Processing the call arguments (line 583)
        # Getting the type of 'x' (line 583)
        x_21730 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 583, 47), 'x', False)
        # Processing the call keyword arguments (line 583)
        
        # Obtaining an instance of the builtin type 'tuple' (line 583)
        tuple_21731 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 583, 55), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 583)
        # Adding element type (line 583)
        int_21732 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 583, 55), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 583, 55), tuple_21731, int_21732)
        # Adding element type (line 583)
        int_21733 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 583, 58), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 583, 55), tuple_21731, int_21733)
        # Adding element type (line 583)
        int_21734 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 583, 61), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 583, 55), tuple_21731, int_21734)
        
        keyword_21735 = tuple_21731
        kwargs_21736 = {'axes': keyword_21735}
        # Getting the type of 'fftn' (line 583)
        fftn_21729 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 583, 42), 'fftn', False)
        # Calling fftn(args, kwargs) (line 583)
        fftn_call_result_21737 = invoke(stypy.reporting.localization.Localization(__file__, 583, 42), fftn_21729, *[x_21730], **kwargs_21736)
        
        # Processing the call keyword arguments (line 583)
        kwargs_21738 = {}
        # Getting the type of 'assert_array_almost_equal' (line 583)
        assert_array_almost_equal_21724 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 583, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 583)
        assert_array_almost_equal_call_result_21739 = invoke(stypy.reporting.localization.Localization(__file__, 583, 8), assert_array_almost_equal_21724, *[fftn_call_result_21728, fftn_call_result_21737], **kwargs_21738)
        
        
        # Call to assert_array_almost_equal(...): (line 584)
        # Processing the call arguments (line 584)
        
        # Call to fftn(...): (line 584)
        # Processing the call arguments (line 584)
        # Getting the type of 'x' (line 584)
        x_21742 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 584, 39), 'x', False)
        # Processing the call keyword arguments (line 584)
        kwargs_21743 = {}
        # Getting the type of 'fftn' (line 584)
        fftn_21741 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 584, 34), 'fftn', False)
        # Calling fftn(args, kwargs) (line 584)
        fftn_call_result_21744 = invoke(stypy.reporting.localization.Localization(__file__, 584, 34), fftn_21741, *[x_21742], **kwargs_21743)
        
        
        # Call to fftn(...): (line 584)
        # Processing the call arguments (line 584)
        # Getting the type of 'x' (line 584)
        x_21746 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 584, 47), 'x', False)
        # Processing the call keyword arguments (line 584)
        
        # Obtaining an instance of the builtin type 'tuple' (line 584)
        tuple_21747 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 584, 55), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 584)
        # Adding element type (line 584)
        int_21748 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 584, 55), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 584, 55), tuple_21747, int_21748)
        # Adding element type (line 584)
        int_21749 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 584, 57), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 584, 55), tuple_21747, int_21749)
        # Adding element type (line 584)
        int_21750 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 584, 59), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 584, 55), tuple_21747, int_21750)
        
        keyword_21751 = tuple_21747
        kwargs_21752 = {'axes': keyword_21751}
        # Getting the type of 'fftn' (line 584)
        fftn_21745 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 584, 42), 'fftn', False)
        # Calling fftn(args, kwargs) (line 584)
        fftn_call_result_21753 = invoke(stypy.reporting.localization.Localization(__file__, 584, 42), fftn_21745, *[x_21746], **kwargs_21752)
        
        # Processing the call keyword arguments (line 584)
        kwargs_21754 = {}
        # Getting the type of 'assert_array_almost_equal' (line 584)
        assert_array_almost_equal_21740 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 584, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 584)
        assert_array_almost_equal_call_result_21755 = invoke(stypy.reporting.localization.Localization(__file__, 584, 8), assert_array_almost_equal_21740, *[fftn_call_result_21744, fftn_call_result_21753], **kwargs_21754)
        
        
        # Call to assert_array_almost_equal(...): (line 585)
        # Processing the call arguments (line 585)
        
        # Call to fftn(...): (line 585)
        # Processing the call arguments (line 585)
        # Getting the type of 'x' (line 585)
        x_21758 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 585, 39), 'x', False)
        # Processing the call keyword arguments (line 585)
        
        # Obtaining an instance of the builtin type 'tuple' (line 585)
        tuple_21759 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 585, 47), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 585)
        # Adding element type (line 585)
        int_21760 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 585, 47), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 585, 47), tuple_21759, int_21760)
        # Adding element type (line 585)
        int_21761 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 585, 50), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 585, 47), tuple_21759, int_21761)
        
        keyword_21762 = tuple_21759
        kwargs_21763 = {'axes': keyword_21762}
        # Getting the type of 'fftn' (line 585)
        fftn_21757 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 585, 34), 'fftn', False)
        # Calling fftn(args, kwargs) (line 585)
        fftn_call_result_21764 = invoke(stypy.reporting.localization.Localization(__file__, 585, 34), fftn_21757, *[x_21758], **kwargs_21763)
        
        
        # Call to fftn(...): (line 585)
        # Processing the call arguments (line 585)
        # Getting the type of 'x' (line 585)
        x_21766 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 585, 59), 'x', False)
        # Processing the call keyword arguments (line 585)
        
        # Obtaining an instance of the builtin type 'tuple' (line 585)
        tuple_21767 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 585, 67), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 585)
        # Adding element type (line 585)
        int_21768 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 585, 67), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 585, 67), tuple_21767, int_21768)
        # Adding element type (line 585)
        int_21769 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 585, 69), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 585, 67), tuple_21767, int_21769)
        
        keyword_21770 = tuple_21767
        kwargs_21771 = {'axes': keyword_21770}
        # Getting the type of 'fftn' (line 585)
        fftn_21765 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 585, 54), 'fftn', False)
        # Calling fftn(args, kwargs) (line 585)
        fftn_call_result_21772 = invoke(stypy.reporting.localization.Localization(__file__, 585, 54), fftn_21765, *[x_21766], **kwargs_21771)
        
        # Processing the call keyword arguments (line 585)
        kwargs_21773 = {}
        # Getting the type of 'assert_array_almost_equal' (line 585)
        assert_array_almost_equal_21756 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 585, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 585)
        assert_array_almost_equal_call_result_21774 = invoke(stypy.reporting.localization.Localization(__file__, 585, 8), assert_array_almost_equal_21756, *[fftn_call_result_21764, fftn_call_result_21772], **kwargs_21773)
        
        
        # Assigning a Call to a Name (line 586):
        
        # Call to fftn(...): (line 586)
        # Processing the call arguments (line 586)
        # Getting the type of 'x' (line 586)
        x_21776 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 586, 17), 'x', False)
        # Processing the call keyword arguments (line 586)
        
        # Obtaining an instance of the builtin type 'tuple' (line 586)
        tuple_21777 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 586, 25), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 586)
        # Adding element type (line 586)
        int_21778 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 586, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 586, 25), tuple_21777, int_21778)
        # Adding element type (line 586)
        int_21779 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 586, 27), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 586, 25), tuple_21777, int_21779)
        # Adding element type (line 586)
        int_21780 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 586, 29), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 586, 25), tuple_21777, int_21780)
        
        keyword_21781 = tuple_21777
        kwargs_21782 = {'axes': keyword_21781}
        # Getting the type of 'fftn' (line 586)
        fftn_21775 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 586, 12), 'fftn', False)
        # Calling fftn(args, kwargs) (line 586)
        fftn_call_result_21783 = invoke(stypy.reporting.localization.Localization(__file__, 586, 12), fftn_21775, *[x_21776], **kwargs_21782)
        
        # Assigning a type to the variable 'y' (line 586)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 586, 8), 'y', fftn_call_result_21783)
        
        # Call to assert_array_almost_equal(...): (line 587)
        # Processing the call arguments (line 587)
        
        # Call to swapaxes(...): (line 587)
        # Processing the call arguments (line 587)
        # Getting the type of 'y' (line 587)
        y_21786 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 587, 43), 'y', False)
        int_21787 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 587, 45), 'int')
        int_21788 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 587, 48), 'int')
        # Processing the call keyword arguments (line 587)
        kwargs_21789 = {}
        # Getting the type of 'swapaxes' (line 587)
        swapaxes_21785 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 587, 34), 'swapaxes', False)
        # Calling swapaxes(args, kwargs) (line 587)
        swapaxes_call_result_21790 = invoke(stypy.reporting.localization.Localization(__file__, 587, 34), swapaxes_21785, *[y_21786, int_21787, int_21788], **kwargs_21789)
        
        
        # Call to fftn(...): (line 587)
        # Processing the call arguments (line 587)
        # Getting the type of 'ijk_space' (line 587)
        ijk_space_21792 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 587, 57), 'ijk_space', False)
        # Processing the call keyword arguments (line 587)
        kwargs_21793 = {}
        # Getting the type of 'fftn' (line 587)
        fftn_21791 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 587, 52), 'fftn', False)
        # Calling fftn(args, kwargs) (line 587)
        fftn_call_result_21794 = invoke(stypy.reporting.localization.Localization(__file__, 587, 52), fftn_21791, *[ijk_space_21792], **kwargs_21793)
        
        # Processing the call keyword arguments (line 587)
        kwargs_21795 = {}
        # Getting the type of 'assert_array_almost_equal' (line 587)
        assert_array_almost_equal_21784 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 587, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 587)
        assert_array_almost_equal_call_result_21796 = invoke(stypy.reporting.localization.Localization(__file__, 587, 8), assert_array_almost_equal_21784, *[swapaxes_call_result_21790, fftn_call_result_21794], **kwargs_21795)
        
        
        # Assigning a Call to a Name (line 588):
        
        # Call to fftn(...): (line 588)
        # Processing the call arguments (line 588)
        # Getting the type of 'x' (line 588)
        x_21798 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 588, 17), 'x', False)
        # Processing the call keyword arguments (line 588)
        
        # Obtaining an instance of the builtin type 'tuple' (line 588)
        tuple_21799 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 588, 25), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 588)
        # Adding element type (line 588)
        int_21800 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 588, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 588, 25), tuple_21799, int_21800)
        # Adding element type (line 588)
        int_21801 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 588, 27), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 588, 25), tuple_21799, int_21801)
        # Adding element type (line 588)
        int_21802 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 588, 29), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 588, 25), tuple_21799, int_21802)
        
        keyword_21803 = tuple_21799
        kwargs_21804 = {'axes': keyword_21803}
        # Getting the type of 'fftn' (line 588)
        fftn_21797 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 588, 12), 'fftn', False)
        # Calling fftn(args, kwargs) (line 588)
        fftn_call_result_21805 = invoke(stypy.reporting.localization.Localization(__file__, 588, 12), fftn_21797, *[x_21798], **kwargs_21804)
        
        # Assigning a type to the variable 'y' (line 588)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 588, 8), 'y', fftn_call_result_21805)
        
        # Call to assert_array_almost_equal(...): (line 589)
        # Processing the call arguments (line 589)
        
        # Call to swapaxes(...): (line 589)
        # Processing the call arguments (line 589)
        
        # Call to swapaxes(...): (line 589)
        # Processing the call arguments (line 589)
        # Getting the type of 'y' (line 589)
        y_21809 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 589, 52), 'y', False)
        int_21810 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 589, 54), 'int')
        int_21811 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 589, 57), 'int')
        # Processing the call keyword arguments (line 589)
        kwargs_21812 = {}
        # Getting the type of 'swapaxes' (line 589)
        swapaxes_21808 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 589, 43), 'swapaxes', False)
        # Calling swapaxes(args, kwargs) (line 589)
        swapaxes_call_result_21813 = invoke(stypy.reporting.localization.Localization(__file__, 589, 43), swapaxes_21808, *[y_21809, int_21810, int_21811], **kwargs_21812)
        
        int_21814 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 590, 51), 'int')
        int_21815 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 590, 54), 'int')
        # Processing the call keyword arguments (line 589)
        kwargs_21816 = {}
        # Getting the type of 'swapaxes' (line 589)
        swapaxes_21807 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 589, 34), 'swapaxes', False)
        # Calling swapaxes(args, kwargs) (line 589)
        swapaxes_call_result_21817 = invoke(stypy.reporting.localization.Localization(__file__, 589, 34), swapaxes_21807, *[swapaxes_call_result_21813, int_21814, int_21815], **kwargs_21816)
        
        
        # Call to fftn(...): (line 591)
        # Processing the call arguments (line 591)
        # Getting the type of 'ikj_space' (line 591)
        ikj_space_21819 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 591, 39), 'ikj_space', False)
        # Processing the call keyword arguments (line 591)
        kwargs_21820 = {}
        # Getting the type of 'fftn' (line 591)
        fftn_21818 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 591, 34), 'fftn', False)
        # Calling fftn(args, kwargs) (line 591)
        fftn_call_result_21821 = invoke(stypy.reporting.localization.Localization(__file__, 591, 34), fftn_21818, *[ikj_space_21819], **kwargs_21820)
        
        # Processing the call keyword arguments (line 589)
        kwargs_21822 = {}
        # Getting the type of 'assert_array_almost_equal' (line 589)
        assert_array_almost_equal_21806 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 589, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 589)
        assert_array_almost_equal_call_result_21823 = invoke(stypy.reporting.localization.Localization(__file__, 589, 8), assert_array_almost_equal_21806, *[swapaxes_call_result_21817, fftn_call_result_21821], **kwargs_21822)
        
        
        # Assigning a Call to a Name (line 592):
        
        # Call to fftn(...): (line 592)
        # Processing the call arguments (line 592)
        # Getting the type of 'x' (line 592)
        x_21825 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 592, 17), 'x', False)
        # Processing the call keyword arguments (line 592)
        
        # Obtaining an instance of the builtin type 'tuple' (line 592)
        tuple_21826 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 592, 25), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 592)
        # Adding element type (line 592)
        int_21827 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 592, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 592, 25), tuple_21826, int_21827)
        # Adding element type (line 592)
        int_21828 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 592, 27), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 592, 25), tuple_21826, int_21828)
        # Adding element type (line 592)
        int_21829 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 592, 29), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 592, 25), tuple_21826, int_21829)
        
        keyword_21830 = tuple_21826
        kwargs_21831 = {'axes': keyword_21830}
        # Getting the type of 'fftn' (line 592)
        fftn_21824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 592, 12), 'fftn', False)
        # Calling fftn(args, kwargs) (line 592)
        fftn_call_result_21832 = invoke(stypy.reporting.localization.Localization(__file__, 592, 12), fftn_21824, *[x_21825], **kwargs_21831)
        
        # Assigning a type to the variable 'y' (line 592)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 592, 8), 'y', fftn_call_result_21832)
        
        # Call to assert_array_almost_equal(...): (line 593)
        # Processing the call arguments (line 593)
        
        # Call to swapaxes(...): (line 593)
        # Processing the call arguments (line 593)
        
        # Call to swapaxes(...): (line 593)
        # Processing the call arguments (line 593)
        # Getting the type of 'y' (line 593)
        y_21836 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 593, 52), 'y', False)
        int_21837 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 593, 54), 'int')
        int_21838 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 593, 57), 'int')
        # Processing the call keyword arguments (line 593)
        kwargs_21839 = {}
        # Getting the type of 'swapaxes' (line 593)
        swapaxes_21835 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 593, 43), 'swapaxes', False)
        # Calling swapaxes(args, kwargs) (line 593)
        swapaxes_call_result_21840 = invoke(stypy.reporting.localization.Localization(__file__, 593, 43), swapaxes_21835, *[y_21836, int_21837, int_21838], **kwargs_21839)
        
        int_21841 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 594, 51), 'int')
        int_21842 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 594, 54), 'int')
        # Processing the call keyword arguments (line 593)
        kwargs_21843 = {}
        # Getting the type of 'swapaxes' (line 593)
        swapaxes_21834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 593, 34), 'swapaxes', False)
        # Calling swapaxes(args, kwargs) (line 593)
        swapaxes_call_result_21844 = invoke(stypy.reporting.localization.Localization(__file__, 593, 34), swapaxes_21834, *[swapaxes_call_result_21840, int_21841, int_21842], **kwargs_21843)
        
        
        # Call to fftn(...): (line 595)
        # Processing the call arguments (line 595)
        # Getting the type of 'jik_space' (line 595)
        jik_space_21846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 595, 39), 'jik_space', False)
        # Processing the call keyword arguments (line 595)
        kwargs_21847 = {}
        # Getting the type of 'fftn' (line 595)
        fftn_21845 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 595, 34), 'fftn', False)
        # Calling fftn(args, kwargs) (line 595)
        fftn_call_result_21848 = invoke(stypy.reporting.localization.Localization(__file__, 595, 34), fftn_21845, *[jik_space_21846], **kwargs_21847)
        
        # Processing the call keyword arguments (line 593)
        kwargs_21849 = {}
        # Getting the type of 'assert_array_almost_equal' (line 593)
        assert_array_almost_equal_21833 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 593, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 593)
        assert_array_almost_equal_call_result_21850 = invoke(stypy.reporting.localization.Localization(__file__, 593, 8), assert_array_almost_equal_21833, *[swapaxes_call_result_21844, fftn_call_result_21848], **kwargs_21849)
        
        
        # Assigning a Call to a Name (line 596):
        
        # Call to fftn(...): (line 596)
        # Processing the call arguments (line 596)
        # Getting the type of 'x' (line 596)
        x_21852 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 596, 17), 'x', False)
        # Processing the call keyword arguments (line 596)
        
        # Obtaining an instance of the builtin type 'tuple' (line 596)
        tuple_21853 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 596, 25), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 596)
        # Adding element type (line 596)
        int_21854 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 596, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 596, 25), tuple_21853, int_21854)
        # Adding element type (line 596)
        int_21855 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 596, 27), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 596, 25), tuple_21853, int_21855)
        # Adding element type (line 596)
        int_21856 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 596, 29), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 596, 25), tuple_21853, int_21856)
        
        keyword_21857 = tuple_21853
        kwargs_21858 = {'axes': keyword_21857}
        # Getting the type of 'fftn' (line 596)
        fftn_21851 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 596, 12), 'fftn', False)
        # Calling fftn(args, kwargs) (line 596)
        fftn_call_result_21859 = invoke(stypy.reporting.localization.Localization(__file__, 596, 12), fftn_21851, *[x_21852], **kwargs_21858)
        
        # Assigning a type to the variable 'y' (line 596)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 596, 8), 'y', fftn_call_result_21859)
        
        # Call to assert_array_almost_equal(...): (line 597)
        # Processing the call arguments (line 597)
        
        # Call to swapaxes(...): (line 597)
        # Processing the call arguments (line 597)
        # Getting the type of 'y' (line 597)
        y_21862 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 597, 43), 'y', False)
        int_21863 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 597, 45), 'int')
        int_21864 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 597, 48), 'int')
        # Processing the call keyword arguments (line 597)
        kwargs_21865 = {}
        # Getting the type of 'swapaxes' (line 597)
        swapaxes_21861 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 597, 34), 'swapaxes', False)
        # Calling swapaxes(args, kwargs) (line 597)
        swapaxes_call_result_21866 = invoke(stypy.reporting.localization.Localization(__file__, 597, 34), swapaxes_21861, *[y_21862, int_21863, int_21864], **kwargs_21865)
        
        
        # Call to fftn(...): (line 597)
        # Processing the call arguments (line 597)
        # Getting the type of 'jki_space' (line 597)
        jki_space_21868 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 597, 57), 'jki_space', False)
        # Processing the call keyword arguments (line 597)
        kwargs_21869 = {}
        # Getting the type of 'fftn' (line 597)
        fftn_21867 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 597, 52), 'fftn', False)
        # Calling fftn(args, kwargs) (line 597)
        fftn_call_result_21870 = invoke(stypy.reporting.localization.Localization(__file__, 597, 52), fftn_21867, *[jki_space_21868], **kwargs_21869)
        
        # Processing the call keyword arguments (line 597)
        kwargs_21871 = {}
        # Getting the type of 'assert_array_almost_equal' (line 597)
        assert_array_almost_equal_21860 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 597, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 597)
        assert_array_almost_equal_call_result_21872 = invoke(stypy.reporting.localization.Localization(__file__, 597, 8), assert_array_almost_equal_21860, *[swapaxes_call_result_21866, fftn_call_result_21870], **kwargs_21871)
        
        
        # Assigning a Call to a Name (line 598):
        
        # Call to fftn(...): (line 598)
        # Processing the call arguments (line 598)
        # Getting the type of 'x' (line 598)
        x_21874 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 598, 17), 'x', False)
        # Processing the call keyword arguments (line 598)
        
        # Obtaining an instance of the builtin type 'tuple' (line 598)
        tuple_21875 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 598, 25), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 598)
        # Adding element type (line 598)
        int_21876 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 598, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 598, 25), tuple_21875, int_21876)
        # Adding element type (line 598)
        int_21877 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 598, 27), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 598, 25), tuple_21875, int_21877)
        # Adding element type (line 598)
        int_21878 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 598, 29), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 598, 25), tuple_21875, int_21878)
        
        keyword_21879 = tuple_21875
        kwargs_21880 = {'axes': keyword_21879}
        # Getting the type of 'fftn' (line 598)
        fftn_21873 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 598, 12), 'fftn', False)
        # Calling fftn(args, kwargs) (line 598)
        fftn_call_result_21881 = invoke(stypy.reporting.localization.Localization(__file__, 598, 12), fftn_21873, *[x_21874], **kwargs_21880)
        
        # Assigning a type to the variable 'y' (line 598)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 598, 8), 'y', fftn_call_result_21881)
        
        # Call to assert_array_almost_equal(...): (line 599)
        # Processing the call arguments (line 599)
        
        # Call to swapaxes(...): (line 599)
        # Processing the call arguments (line 599)
        # Getting the type of 'y' (line 599)
        y_21884 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 599, 43), 'y', False)
        int_21885 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 599, 45), 'int')
        int_21886 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 599, 48), 'int')
        # Processing the call keyword arguments (line 599)
        kwargs_21887 = {}
        # Getting the type of 'swapaxes' (line 599)
        swapaxes_21883 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 599, 34), 'swapaxes', False)
        # Calling swapaxes(args, kwargs) (line 599)
        swapaxes_call_result_21888 = invoke(stypy.reporting.localization.Localization(__file__, 599, 34), swapaxes_21883, *[y_21884, int_21885, int_21886], **kwargs_21887)
        
        
        # Call to fftn(...): (line 600)
        # Processing the call arguments (line 600)
        # Getting the type of 'kij_space' (line 600)
        kij_space_21890 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 600, 39), 'kij_space', False)
        # Processing the call keyword arguments (line 600)
        kwargs_21891 = {}
        # Getting the type of 'fftn' (line 600)
        fftn_21889 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 600, 34), 'fftn', False)
        # Calling fftn(args, kwargs) (line 600)
        fftn_call_result_21892 = invoke(stypy.reporting.localization.Localization(__file__, 600, 34), fftn_21889, *[kij_space_21890], **kwargs_21891)
        
        # Processing the call keyword arguments (line 599)
        kwargs_21893 = {}
        # Getting the type of 'assert_array_almost_equal' (line 599)
        assert_array_almost_equal_21882 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 599, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 599)
        assert_array_almost_equal_call_result_21894 = invoke(stypy.reporting.localization.Localization(__file__, 599, 8), assert_array_almost_equal_21882, *[swapaxes_call_result_21888, fftn_call_result_21892], **kwargs_21893)
        
        
        # Assigning a Call to a Name (line 602):
        
        # Call to fftn(...): (line 602)
        # Processing the call arguments (line 602)
        # Getting the type of 'x' (line 602)
        x_21896 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 602, 17), 'x', False)
        # Processing the call keyword arguments (line 602)
        
        # Obtaining an instance of the builtin type 'tuple' (line 602)
        tuple_21897 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 602, 25), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 602)
        # Adding element type (line 602)
        int_21898 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 602, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 602, 25), tuple_21897, int_21898)
        # Adding element type (line 602)
        int_21899 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 602, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 602, 25), tuple_21897, int_21899)
        
        keyword_21900 = tuple_21897
        kwargs_21901 = {'axes': keyword_21900}
        # Getting the type of 'fftn' (line 602)
        fftn_21895 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 602, 12), 'fftn', False)
        # Calling fftn(args, kwargs) (line 602)
        fftn_call_result_21902 = invoke(stypy.reporting.localization.Localization(__file__, 602, 12), fftn_21895, *[x_21896], **kwargs_21901)
        
        # Assigning a type to the variable 'y' (line 602)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 602, 8), 'y', fftn_call_result_21902)
        
        # Call to assert_array_almost_equal(...): (line 603)
        # Processing the call arguments (line 603)
        
        # Call to fftn(...): (line 603)
        # Processing the call arguments (line 603)
        # Getting the type of 'plane1' (line 603)
        plane1_21905 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 603, 39), 'plane1', False)
        # Processing the call keyword arguments (line 603)
        kwargs_21906 = {}
        # Getting the type of 'fftn' (line 603)
        fftn_21904 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 603, 34), 'fftn', False)
        # Calling fftn(args, kwargs) (line 603)
        fftn_call_result_21907 = invoke(stypy.reporting.localization.Localization(__file__, 603, 34), fftn_21904, *[plane1_21905], **kwargs_21906)
        
        
        # Obtaining the type of the subscript
        int_21908 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 603, 49), 'int')
        # Getting the type of 'y' (line 603)
        y_21909 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 603, 47), 'y', False)
        # Obtaining the member '__getitem__' of a type (line 603)
        getitem___21910 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 603, 47), y_21909, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 603)
        subscript_call_result_21911 = invoke(stypy.reporting.localization.Localization(__file__, 603, 47), getitem___21910, int_21908)
        
        # Processing the call keyword arguments (line 603)
        kwargs_21912 = {}
        # Getting the type of 'assert_array_almost_equal' (line 603)
        assert_array_almost_equal_21903 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 603, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 603)
        assert_array_almost_equal_call_result_21913 = invoke(stypy.reporting.localization.Localization(__file__, 603, 8), assert_array_almost_equal_21903, *[fftn_call_result_21907, subscript_call_result_21911], **kwargs_21912)
        
        
        # Call to assert_array_almost_equal(...): (line 604)
        # Processing the call arguments (line 604)
        
        # Call to fftn(...): (line 604)
        # Processing the call arguments (line 604)
        # Getting the type of 'plane2' (line 604)
        plane2_21916 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 604, 39), 'plane2', False)
        # Processing the call keyword arguments (line 604)
        kwargs_21917 = {}
        # Getting the type of 'fftn' (line 604)
        fftn_21915 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 604, 34), 'fftn', False)
        # Calling fftn(args, kwargs) (line 604)
        fftn_call_result_21918 = invoke(stypy.reporting.localization.Localization(__file__, 604, 34), fftn_21915, *[plane2_21916], **kwargs_21917)
        
        
        # Obtaining the type of the subscript
        int_21919 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 604, 49), 'int')
        # Getting the type of 'y' (line 604)
        y_21920 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 604, 47), 'y', False)
        # Obtaining the member '__getitem__' of a type (line 604)
        getitem___21921 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 604, 47), y_21920, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 604)
        subscript_call_result_21922 = invoke(stypy.reporting.localization.Localization(__file__, 604, 47), getitem___21921, int_21919)
        
        # Processing the call keyword arguments (line 604)
        kwargs_21923 = {}
        # Getting the type of 'assert_array_almost_equal' (line 604)
        assert_array_almost_equal_21914 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 604, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 604)
        assert_array_almost_equal_call_result_21924 = invoke(stypy.reporting.localization.Localization(__file__, 604, 8), assert_array_almost_equal_21914, *[fftn_call_result_21918, subscript_call_result_21922], **kwargs_21923)
        
        
        # Call to assert_array_almost_equal(...): (line 605)
        # Processing the call arguments (line 605)
        
        # Call to fftn(...): (line 605)
        # Processing the call arguments (line 605)
        # Getting the type of 'plane3' (line 605)
        plane3_21927 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 605, 39), 'plane3', False)
        # Processing the call keyword arguments (line 605)
        kwargs_21928 = {}
        # Getting the type of 'fftn' (line 605)
        fftn_21926 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 605, 34), 'fftn', False)
        # Calling fftn(args, kwargs) (line 605)
        fftn_call_result_21929 = invoke(stypy.reporting.localization.Localization(__file__, 605, 34), fftn_21926, *[plane3_21927], **kwargs_21928)
        
        
        # Obtaining the type of the subscript
        int_21930 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 605, 49), 'int')
        # Getting the type of 'y' (line 605)
        y_21931 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 605, 47), 'y', False)
        # Obtaining the member '__getitem__' of a type (line 605)
        getitem___21932 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 605, 47), y_21931, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 605)
        subscript_call_result_21933 = invoke(stypy.reporting.localization.Localization(__file__, 605, 47), getitem___21932, int_21930)
        
        # Processing the call keyword arguments (line 605)
        kwargs_21934 = {}
        # Getting the type of 'assert_array_almost_equal' (line 605)
        assert_array_almost_equal_21925 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 605, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 605)
        assert_array_almost_equal_call_result_21935 = invoke(stypy.reporting.localization.Localization(__file__, 605, 8), assert_array_almost_equal_21925, *[fftn_call_result_21929, subscript_call_result_21933], **kwargs_21934)
        
        
        # Assigning a Call to a Name (line 606):
        
        # Call to fftn(...): (line 606)
        # Processing the call arguments (line 606)
        # Getting the type of 'x' (line 606)
        x_21937 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 606, 17), 'x', False)
        # Processing the call keyword arguments (line 606)
        
        # Obtaining an instance of the builtin type 'tuple' (line 606)
        tuple_21938 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 606, 25), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 606)
        # Adding element type (line 606)
        int_21939 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 606, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 606, 25), tuple_21938, int_21939)
        # Adding element type (line 606)
        int_21940 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 606, 27), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 606, 25), tuple_21938, int_21940)
        
        keyword_21941 = tuple_21938
        kwargs_21942 = {'axes': keyword_21941}
        # Getting the type of 'fftn' (line 606)
        fftn_21936 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 606, 12), 'fftn', False)
        # Calling fftn(args, kwargs) (line 606)
        fftn_call_result_21943 = invoke(stypy.reporting.localization.Localization(__file__, 606, 12), fftn_21936, *[x_21937], **kwargs_21942)
        
        # Assigning a type to the variable 'y' (line 606)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 606, 8), 'y', fftn_call_result_21943)
        
        # Call to assert_array_almost_equal(...): (line 607)
        # Processing the call arguments (line 607)
        
        # Call to fftn(...): (line 607)
        # Processing the call arguments (line 607)
        # Getting the type of 'plane1' (line 607)
        plane1_21946 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 607, 39), 'plane1', False)
        # Processing the call keyword arguments (line 607)
        kwargs_21947 = {}
        # Getting the type of 'fftn' (line 607)
        fftn_21945 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 607, 34), 'fftn', False)
        # Calling fftn(args, kwargs) (line 607)
        fftn_call_result_21948 = invoke(stypy.reporting.localization.Localization(__file__, 607, 34), fftn_21945, *[plane1_21946], **kwargs_21947)
        
        
        # Obtaining the type of the subscript
        int_21949 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 607, 49), 'int')
        # Getting the type of 'y' (line 607)
        y_21950 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 607, 47), 'y', False)
        # Obtaining the member '__getitem__' of a type (line 607)
        getitem___21951 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 607, 47), y_21950, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 607)
        subscript_call_result_21952 = invoke(stypy.reporting.localization.Localization(__file__, 607, 47), getitem___21951, int_21949)
        
        # Processing the call keyword arguments (line 607)
        kwargs_21953 = {}
        # Getting the type of 'assert_array_almost_equal' (line 607)
        assert_array_almost_equal_21944 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 607, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 607)
        assert_array_almost_equal_call_result_21954 = invoke(stypy.reporting.localization.Localization(__file__, 607, 8), assert_array_almost_equal_21944, *[fftn_call_result_21948, subscript_call_result_21952], **kwargs_21953)
        
        
        # Call to assert_array_almost_equal(...): (line 608)
        # Processing the call arguments (line 608)
        
        # Call to fftn(...): (line 608)
        # Processing the call arguments (line 608)
        # Getting the type of 'plane2' (line 608)
        plane2_21957 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 608, 39), 'plane2', False)
        # Processing the call keyword arguments (line 608)
        kwargs_21958 = {}
        # Getting the type of 'fftn' (line 608)
        fftn_21956 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 608, 34), 'fftn', False)
        # Calling fftn(args, kwargs) (line 608)
        fftn_call_result_21959 = invoke(stypy.reporting.localization.Localization(__file__, 608, 34), fftn_21956, *[plane2_21957], **kwargs_21958)
        
        
        # Obtaining the type of the subscript
        int_21960 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 608, 49), 'int')
        # Getting the type of 'y' (line 608)
        y_21961 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 608, 47), 'y', False)
        # Obtaining the member '__getitem__' of a type (line 608)
        getitem___21962 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 608, 47), y_21961, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 608)
        subscript_call_result_21963 = invoke(stypy.reporting.localization.Localization(__file__, 608, 47), getitem___21962, int_21960)
        
        # Processing the call keyword arguments (line 608)
        kwargs_21964 = {}
        # Getting the type of 'assert_array_almost_equal' (line 608)
        assert_array_almost_equal_21955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 608, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 608)
        assert_array_almost_equal_call_result_21965 = invoke(stypy.reporting.localization.Localization(__file__, 608, 8), assert_array_almost_equal_21955, *[fftn_call_result_21959, subscript_call_result_21963], **kwargs_21964)
        
        
        # Call to assert_array_almost_equal(...): (line 609)
        # Processing the call arguments (line 609)
        
        # Call to fftn(...): (line 609)
        # Processing the call arguments (line 609)
        # Getting the type of 'plane3' (line 609)
        plane3_21968 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 609, 39), 'plane3', False)
        # Processing the call keyword arguments (line 609)
        kwargs_21969 = {}
        # Getting the type of 'fftn' (line 609)
        fftn_21967 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 609, 34), 'fftn', False)
        # Calling fftn(args, kwargs) (line 609)
        fftn_call_result_21970 = invoke(stypy.reporting.localization.Localization(__file__, 609, 34), fftn_21967, *[plane3_21968], **kwargs_21969)
        
        
        # Obtaining the type of the subscript
        int_21971 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 609, 49), 'int')
        # Getting the type of 'y' (line 609)
        y_21972 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 609, 47), 'y', False)
        # Obtaining the member '__getitem__' of a type (line 609)
        getitem___21973 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 609, 47), y_21972, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 609)
        subscript_call_result_21974 = invoke(stypy.reporting.localization.Localization(__file__, 609, 47), getitem___21973, int_21971)
        
        # Processing the call keyword arguments (line 609)
        kwargs_21975 = {}
        # Getting the type of 'assert_array_almost_equal' (line 609)
        assert_array_almost_equal_21966 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 609, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 609)
        assert_array_almost_equal_call_result_21976 = invoke(stypy.reporting.localization.Localization(__file__, 609, 8), assert_array_almost_equal_21966, *[fftn_call_result_21970, subscript_call_result_21974], **kwargs_21975)
        
        
        # Assigning a Call to a Name (line 610):
        
        # Call to fftn(...): (line 610)
        # Processing the call arguments (line 610)
        # Getting the type of 'x' (line 610)
        x_21978 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 610, 17), 'x', False)
        # Processing the call keyword arguments (line 610)
        
        # Obtaining an instance of the builtin type 'tuple' (line 610)
        tuple_21979 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 610, 25), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 610)
        # Adding element type (line 610)
        int_21980 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 610, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 610, 25), tuple_21979, int_21980)
        # Adding element type (line 610)
        int_21981 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 610, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 610, 25), tuple_21979, int_21981)
        
        keyword_21982 = tuple_21979
        kwargs_21983 = {'axes': keyword_21982}
        # Getting the type of 'fftn' (line 610)
        fftn_21977 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 610, 12), 'fftn', False)
        # Calling fftn(args, kwargs) (line 610)
        fftn_call_result_21984 = invoke(stypy.reporting.localization.Localization(__file__, 610, 12), fftn_21977, *[x_21978], **kwargs_21983)
        
        # Assigning a type to the variable 'y' (line 610)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 610, 8), 'y', fftn_call_result_21984)
        
        # Call to assert_array_almost_equal(...): (line 611)
        # Processing the call arguments (line 611)
        
        # Call to fftn(...): (line 611)
        # Processing the call arguments (line 611)
        
        # Obtaining the type of the subscript
        slice_21987 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 611, 39), None, None, None)
        slice_21988 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 611, 39), None, None, None)
        int_21989 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 611, 45), 'int')
        # Getting the type of 'x' (line 611)
        x_21990 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 611, 39), 'x', False)
        # Obtaining the member '__getitem__' of a type (line 611)
        getitem___21991 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 611, 39), x_21990, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 611)
        subscript_call_result_21992 = invoke(stypy.reporting.localization.Localization(__file__, 611, 39), getitem___21991, (slice_21987, slice_21988, int_21989))
        
        # Processing the call keyword arguments (line 611)
        kwargs_21993 = {}
        # Getting the type of 'fftn' (line 611)
        fftn_21986 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 611, 34), 'fftn', False)
        # Calling fftn(args, kwargs) (line 611)
        fftn_call_result_21994 = invoke(stypy.reporting.localization.Localization(__file__, 611, 34), fftn_21986, *[subscript_call_result_21992], **kwargs_21993)
        
        
        # Obtaining the type of the subscript
        slice_21995 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 611, 49), None, None, None)
        slice_21996 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 611, 49), None, None, None)
        int_21997 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 611, 55), 'int')
        # Getting the type of 'y' (line 611)
        y_21998 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 611, 49), 'y', False)
        # Obtaining the member '__getitem__' of a type (line 611)
        getitem___21999 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 611, 49), y_21998, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 611)
        subscript_call_result_22000 = invoke(stypy.reporting.localization.Localization(__file__, 611, 49), getitem___21999, (slice_21995, slice_21996, int_21997))
        
        # Processing the call keyword arguments (line 611)
        kwargs_22001 = {}
        # Getting the type of 'assert_array_almost_equal' (line 611)
        assert_array_almost_equal_21985 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 611, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 611)
        assert_array_almost_equal_call_result_22002 = invoke(stypy.reporting.localization.Localization(__file__, 611, 8), assert_array_almost_equal_21985, *[fftn_call_result_21994, subscript_call_result_22000], **kwargs_22001)
        
        
        # Call to assert_array_almost_equal(...): (line 612)
        # Processing the call arguments (line 612)
        
        # Call to fftn(...): (line 612)
        # Processing the call arguments (line 612)
        
        # Obtaining the type of the subscript
        slice_22005 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 612, 39), None, None, None)
        slice_22006 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 612, 39), None, None, None)
        int_22007 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 612, 45), 'int')
        # Getting the type of 'x' (line 612)
        x_22008 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 612, 39), 'x', False)
        # Obtaining the member '__getitem__' of a type (line 612)
        getitem___22009 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 612, 39), x_22008, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 612)
        subscript_call_result_22010 = invoke(stypy.reporting.localization.Localization(__file__, 612, 39), getitem___22009, (slice_22005, slice_22006, int_22007))
        
        # Processing the call keyword arguments (line 612)
        kwargs_22011 = {}
        # Getting the type of 'fftn' (line 612)
        fftn_22004 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 612, 34), 'fftn', False)
        # Calling fftn(args, kwargs) (line 612)
        fftn_call_result_22012 = invoke(stypy.reporting.localization.Localization(__file__, 612, 34), fftn_22004, *[subscript_call_result_22010], **kwargs_22011)
        
        
        # Obtaining the type of the subscript
        slice_22013 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 612, 49), None, None, None)
        slice_22014 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 612, 49), None, None, None)
        int_22015 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 612, 55), 'int')
        # Getting the type of 'y' (line 612)
        y_22016 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 612, 49), 'y', False)
        # Obtaining the member '__getitem__' of a type (line 612)
        getitem___22017 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 612, 49), y_22016, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 612)
        subscript_call_result_22018 = invoke(stypy.reporting.localization.Localization(__file__, 612, 49), getitem___22017, (slice_22013, slice_22014, int_22015))
        
        # Processing the call keyword arguments (line 612)
        kwargs_22019 = {}
        # Getting the type of 'assert_array_almost_equal' (line 612)
        assert_array_almost_equal_22003 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 612, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 612)
        assert_array_almost_equal_call_result_22020 = invoke(stypy.reporting.localization.Localization(__file__, 612, 8), assert_array_almost_equal_22003, *[fftn_call_result_22012, subscript_call_result_22018], **kwargs_22019)
        
        
        # Call to assert_array_almost_equal(...): (line 613)
        # Processing the call arguments (line 613)
        
        # Call to fftn(...): (line 613)
        # Processing the call arguments (line 613)
        
        # Obtaining the type of the subscript
        slice_22023 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 613, 39), None, None, None)
        slice_22024 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 613, 39), None, None, None)
        int_22025 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 613, 45), 'int')
        # Getting the type of 'x' (line 613)
        x_22026 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 613, 39), 'x', False)
        # Obtaining the member '__getitem__' of a type (line 613)
        getitem___22027 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 613, 39), x_22026, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 613)
        subscript_call_result_22028 = invoke(stypy.reporting.localization.Localization(__file__, 613, 39), getitem___22027, (slice_22023, slice_22024, int_22025))
        
        # Processing the call keyword arguments (line 613)
        kwargs_22029 = {}
        # Getting the type of 'fftn' (line 613)
        fftn_22022 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 613, 34), 'fftn', False)
        # Calling fftn(args, kwargs) (line 613)
        fftn_call_result_22030 = invoke(stypy.reporting.localization.Localization(__file__, 613, 34), fftn_22022, *[subscript_call_result_22028], **kwargs_22029)
        
        
        # Obtaining the type of the subscript
        slice_22031 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 613, 49), None, None, None)
        slice_22032 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 613, 49), None, None, None)
        int_22033 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 613, 55), 'int')
        # Getting the type of 'y' (line 613)
        y_22034 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 613, 49), 'y', False)
        # Obtaining the member '__getitem__' of a type (line 613)
        getitem___22035 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 613, 49), y_22034, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 613)
        subscript_call_result_22036 = invoke(stypy.reporting.localization.Localization(__file__, 613, 49), getitem___22035, (slice_22031, slice_22032, int_22033))
        
        # Processing the call keyword arguments (line 613)
        kwargs_22037 = {}
        # Getting the type of 'assert_array_almost_equal' (line 613)
        assert_array_almost_equal_22021 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 613, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 613)
        assert_array_almost_equal_call_result_22038 = invoke(stypy.reporting.localization.Localization(__file__, 613, 8), assert_array_almost_equal_22021, *[fftn_call_result_22030, subscript_call_result_22036], **kwargs_22037)
        
        
        # Assigning a Call to a Name (line 614):
        
        # Call to fftn(...): (line 614)
        # Processing the call arguments (line 614)
        # Getting the type of 'x' (line 614)
        x_22040 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 614, 17), 'x', False)
        # Processing the call keyword arguments (line 614)
        
        # Obtaining an instance of the builtin type 'tuple' (line 614)
        tuple_22041 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 614, 25), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 614)
        # Adding element type (line 614)
        int_22042 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 614, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 614, 25), tuple_22041, int_22042)
        # Adding element type (line 614)
        int_22043 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 614, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 614, 25), tuple_22041, int_22043)
        
        keyword_22044 = tuple_22041
        kwargs_22045 = {'axes': keyword_22044}
        # Getting the type of 'fftn' (line 614)
        fftn_22039 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 614, 12), 'fftn', False)
        # Calling fftn(args, kwargs) (line 614)
        fftn_call_result_22046 = invoke(stypy.reporting.localization.Localization(__file__, 614, 12), fftn_22039, *[x_22040], **kwargs_22045)
        
        # Assigning a type to the variable 'y' (line 614)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 614, 8), 'y', fftn_call_result_22046)
        
        # Call to assert_array_almost_equal(...): (line 615)
        # Processing the call arguments (line 615)
        
        # Call to fftn(...): (line 615)
        # Processing the call arguments (line 615)
        
        # Obtaining the type of the subscript
        slice_22049 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 615, 39), None, None, None)
        int_22050 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 615, 43), 'int')
        slice_22051 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 615, 39), None, None, None)
        # Getting the type of 'x' (line 615)
        x_22052 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 615, 39), 'x', False)
        # Obtaining the member '__getitem__' of a type (line 615)
        getitem___22053 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 615, 39), x_22052, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 615)
        subscript_call_result_22054 = invoke(stypy.reporting.localization.Localization(__file__, 615, 39), getitem___22053, (slice_22049, int_22050, slice_22051))
        
        # Processing the call keyword arguments (line 615)
        kwargs_22055 = {}
        # Getting the type of 'fftn' (line 615)
        fftn_22048 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 615, 34), 'fftn', False)
        # Calling fftn(args, kwargs) (line 615)
        fftn_call_result_22056 = invoke(stypy.reporting.localization.Localization(__file__, 615, 34), fftn_22048, *[subscript_call_result_22054], **kwargs_22055)
        
        
        # Obtaining the type of the subscript
        slice_22057 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 615, 49), None, None, None)
        int_22058 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 615, 53), 'int')
        slice_22059 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 615, 49), None, None, None)
        # Getting the type of 'y' (line 615)
        y_22060 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 615, 49), 'y', False)
        # Obtaining the member '__getitem__' of a type (line 615)
        getitem___22061 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 615, 49), y_22060, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 615)
        subscript_call_result_22062 = invoke(stypy.reporting.localization.Localization(__file__, 615, 49), getitem___22061, (slice_22057, int_22058, slice_22059))
        
        # Processing the call keyword arguments (line 615)
        kwargs_22063 = {}
        # Getting the type of 'assert_array_almost_equal' (line 615)
        assert_array_almost_equal_22047 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 615, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 615)
        assert_array_almost_equal_call_result_22064 = invoke(stypy.reporting.localization.Localization(__file__, 615, 8), assert_array_almost_equal_22047, *[fftn_call_result_22056, subscript_call_result_22062], **kwargs_22063)
        
        
        # Call to assert_array_almost_equal(...): (line 616)
        # Processing the call arguments (line 616)
        
        # Call to fftn(...): (line 616)
        # Processing the call arguments (line 616)
        
        # Obtaining the type of the subscript
        slice_22067 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 616, 39), None, None, None)
        int_22068 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 616, 43), 'int')
        slice_22069 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 616, 39), None, None, None)
        # Getting the type of 'x' (line 616)
        x_22070 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 616, 39), 'x', False)
        # Obtaining the member '__getitem__' of a type (line 616)
        getitem___22071 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 616, 39), x_22070, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 616)
        subscript_call_result_22072 = invoke(stypy.reporting.localization.Localization(__file__, 616, 39), getitem___22071, (slice_22067, int_22068, slice_22069))
        
        # Processing the call keyword arguments (line 616)
        kwargs_22073 = {}
        # Getting the type of 'fftn' (line 616)
        fftn_22066 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 616, 34), 'fftn', False)
        # Calling fftn(args, kwargs) (line 616)
        fftn_call_result_22074 = invoke(stypy.reporting.localization.Localization(__file__, 616, 34), fftn_22066, *[subscript_call_result_22072], **kwargs_22073)
        
        
        # Obtaining the type of the subscript
        slice_22075 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 616, 49), None, None, None)
        int_22076 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 616, 53), 'int')
        slice_22077 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 616, 49), None, None, None)
        # Getting the type of 'y' (line 616)
        y_22078 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 616, 49), 'y', False)
        # Obtaining the member '__getitem__' of a type (line 616)
        getitem___22079 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 616, 49), y_22078, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 616)
        subscript_call_result_22080 = invoke(stypy.reporting.localization.Localization(__file__, 616, 49), getitem___22079, (slice_22075, int_22076, slice_22077))
        
        # Processing the call keyword arguments (line 616)
        kwargs_22081 = {}
        # Getting the type of 'assert_array_almost_equal' (line 616)
        assert_array_almost_equal_22065 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 616, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 616)
        assert_array_almost_equal_call_result_22082 = invoke(stypy.reporting.localization.Localization(__file__, 616, 8), assert_array_almost_equal_22065, *[fftn_call_result_22074, subscript_call_result_22080], **kwargs_22081)
        
        
        # Call to assert_array_almost_equal(...): (line 617)
        # Processing the call arguments (line 617)
        
        # Call to fftn(...): (line 617)
        # Processing the call arguments (line 617)
        
        # Obtaining the type of the subscript
        slice_22085 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 617, 39), None, None, None)
        int_22086 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 617, 43), 'int')
        slice_22087 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 617, 39), None, None, None)
        # Getting the type of 'x' (line 617)
        x_22088 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 617, 39), 'x', False)
        # Obtaining the member '__getitem__' of a type (line 617)
        getitem___22089 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 617, 39), x_22088, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 617)
        subscript_call_result_22090 = invoke(stypy.reporting.localization.Localization(__file__, 617, 39), getitem___22089, (slice_22085, int_22086, slice_22087))
        
        # Processing the call keyword arguments (line 617)
        kwargs_22091 = {}
        # Getting the type of 'fftn' (line 617)
        fftn_22084 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 617, 34), 'fftn', False)
        # Calling fftn(args, kwargs) (line 617)
        fftn_call_result_22092 = invoke(stypy.reporting.localization.Localization(__file__, 617, 34), fftn_22084, *[subscript_call_result_22090], **kwargs_22091)
        
        
        # Obtaining the type of the subscript
        slice_22093 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 617, 49), None, None, None)
        int_22094 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 617, 53), 'int')
        slice_22095 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 617, 49), None, None, None)
        # Getting the type of 'y' (line 617)
        y_22096 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 617, 49), 'y', False)
        # Obtaining the member '__getitem__' of a type (line 617)
        getitem___22097 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 617, 49), y_22096, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 617)
        subscript_call_result_22098 = invoke(stypy.reporting.localization.Localization(__file__, 617, 49), getitem___22097, (slice_22093, int_22094, slice_22095))
        
        # Processing the call keyword arguments (line 617)
        kwargs_22099 = {}
        # Getting the type of 'assert_array_almost_equal' (line 617)
        assert_array_almost_equal_22083 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 617, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 617)
        assert_array_almost_equal_call_result_22100 = invoke(stypy.reporting.localization.Localization(__file__, 617, 8), assert_array_almost_equal_22083, *[fftn_call_result_22092, subscript_call_result_22098], **kwargs_22099)
        
        
        # Assigning a Call to a Name (line 618):
        
        # Call to fftn(...): (line 618)
        # Processing the call arguments (line 618)
        # Getting the type of 'x' (line 618)
        x_22102 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 618, 17), 'x', False)
        # Processing the call keyword arguments (line 618)
        
        # Obtaining an instance of the builtin type 'tuple' (line 618)
        tuple_22103 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 618, 25), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 618)
        # Adding element type (line 618)
        int_22104 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 618, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 618, 25), tuple_22103, int_22104)
        # Adding element type (line 618)
        int_22105 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 618, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 618, 25), tuple_22103, int_22105)
        
        keyword_22106 = tuple_22103
        kwargs_22107 = {'axes': keyword_22106}
        # Getting the type of 'fftn' (line 618)
        fftn_22101 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 618, 12), 'fftn', False)
        # Calling fftn(args, kwargs) (line 618)
        fftn_call_result_22108 = invoke(stypy.reporting.localization.Localization(__file__, 618, 12), fftn_22101, *[x_22102], **kwargs_22107)
        
        # Assigning a type to the variable 'y' (line 618)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 618, 8), 'y', fftn_call_result_22108)
        
        # Call to assert_array_almost_equal(...): (line 619)
        # Processing the call arguments (line 619)
        
        # Call to fftn(...): (line 619)
        # Processing the call arguments (line 619)
        # Getting the type of 'ij_plane1' (line 619)
        ij_plane1_22111 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 619, 39), 'ij_plane1', False)
        # Processing the call keyword arguments (line 619)
        kwargs_22112 = {}
        # Getting the type of 'fftn' (line 619)
        fftn_22110 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 619, 34), 'fftn', False)
        # Calling fftn(args, kwargs) (line 619)
        fftn_call_result_22113 = invoke(stypy.reporting.localization.Localization(__file__, 619, 34), fftn_22110, *[ij_plane1_22111], **kwargs_22112)
        
        
        # Call to swapaxes(...): (line 619)
        # Processing the call arguments (line 619)
        
        # Obtaining the type of the subscript
        int_22115 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 619, 61), 'int')
        # Getting the type of 'y' (line 619)
        y_22116 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 619, 59), 'y', False)
        # Obtaining the member '__getitem__' of a type (line 619)
        getitem___22117 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 619, 59), y_22116, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 619)
        subscript_call_result_22118 = invoke(stypy.reporting.localization.Localization(__file__, 619, 59), getitem___22117, int_22115)
        
        int_22119 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 619, 64), 'int')
        int_22120 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 619, 67), 'int')
        # Processing the call keyword arguments (line 619)
        kwargs_22121 = {}
        # Getting the type of 'swapaxes' (line 619)
        swapaxes_22114 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 619, 50), 'swapaxes', False)
        # Calling swapaxes(args, kwargs) (line 619)
        swapaxes_call_result_22122 = invoke(stypy.reporting.localization.Localization(__file__, 619, 50), swapaxes_22114, *[subscript_call_result_22118, int_22119, int_22120], **kwargs_22121)
        
        # Processing the call keyword arguments (line 619)
        kwargs_22123 = {}
        # Getting the type of 'assert_array_almost_equal' (line 619)
        assert_array_almost_equal_22109 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 619, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 619)
        assert_array_almost_equal_call_result_22124 = invoke(stypy.reporting.localization.Localization(__file__, 619, 8), assert_array_almost_equal_22109, *[fftn_call_result_22113, swapaxes_call_result_22122], **kwargs_22123)
        
        
        # Call to assert_array_almost_equal(...): (line 620)
        # Processing the call arguments (line 620)
        
        # Call to fftn(...): (line 620)
        # Processing the call arguments (line 620)
        # Getting the type of 'ij_plane2' (line 620)
        ij_plane2_22127 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 620, 39), 'ij_plane2', False)
        # Processing the call keyword arguments (line 620)
        kwargs_22128 = {}
        # Getting the type of 'fftn' (line 620)
        fftn_22126 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 620, 34), 'fftn', False)
        # Calling fftn(args, kwargs) (line 620)
        fftn_call_result_22129 = invoke(stypy.reporting.localization.Localization(__file__, 620, 34), fftn_22126, *[ij_plane2_22127], **kwargs_22128)
        
        
        # Call to swapaxes(...): (line 620)
        # Processing the call arguments (line 620)
        
        # Obtaining the type of the subscript
        int_22131 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 620, 61), 'int')
        # Getting the type of 'y' (line 620)
        y_22132 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 620, 59), 'y', False)
        # Obtaining the member '__getitem__' of a type (line 620)
        getitem___22133 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 620, 59), y_22132, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 620)
        subscript_call_result_22134 = invoke(stypy.reporting.localization.Localization(__file__, 620, 59), getitem___22133, int_22131)
        
        int_22135 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 620, 64), 'int')
        int_22136 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 620, 67), 'int')
        # Processing the call keyword arguments (line 620)
        kwargs_22137 = {}
        # Getting the type of 'swapaxes' (line 620)
        swapaxes_22130 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 620, 50), 'swapaxes', False)
        # Calling swapaxes(args, kwargs) (line 620)
        swapaxes_call_result_22138 = invoke(stypy.reporting.localization.Localization(__file__, 620, 50), swapaxes_22130, *[subscript_call_result_22134, int_22135, int_22136], **kwargs_22137)
        
        # Processing the call keyword arguments (line 620)
        kwargs_22139 = {}
        # Getting the type of 'assert_array_almost_equal' (line 620)
        assert_array_almost_equal_22125 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 620, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 620)
        assert_array_almost_equal_call_result_22140 = invoke(stypy.reporting.localization.Localization(__file__, 620, 8), assert_array_almost_equal_22125, *[fftn_call_result_22129, swapaxes_call_result_22138], **kwargs_22139)
        
        
        # Call to assert_array_almost_equal(...): (line 621)
        # Processing the call arguments (line 621)
        
        # Call to fftn(...): (line 621)
        # Processing the call arguments (line 621)
        # Getting the type of 'ij_plane3' (line 621)
        ij_plane3_22143 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 621, 39), 'ij_plane3', False)
        # Processing the call keyword arguments (line 621)
        kwargs_22144 = {}
        # Getting the type of 'fftn' (line 621)
        fftn_22142 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 621, 34), 'fftn', False)
        # Calling fftn(args, kwargs) (line 621)
        fftn_call_result_22145 = invoke(stypy.reporting.localization.Localization(__file__, 621, 34), fftn_22142, *[ij_plane3_22143], **kwargs_22144)
        
        
        # Call to swapaxes(...): (line 621)
        # Processing the call arguments (line 621)
        
        # Obtaining the type of the subscript
        int_22147 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 621, 61), 'int')
        # Getting the type of 'y' (line 621)
        y_22148 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 621, 59), 'y', False)
        # Obtaining the member '__getitem__' of a type (line 621)
        getitem___22149 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 621, 59), y_22148, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 621)
        subscript_call_result_22150 = invoke(stypy.reporting.localization.Localization(__file__, 621, 59), getitem___22149, int_22147)
        
        int_22151 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 621, 64), 'int')
        int_22152 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 621, 67), 'int')
        # Processing the call keyword arguments (line 621)
        kwargs_22153 = {}
        # Getting the type of 'swapaxes' (line 621)
        swapaxes_22146 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 621, 50), 'swapaxes', False)
        # Calling swapaxes(args, kwargs) (line 621)
        swapaxes_call_result_22154 = invoke(stypy.reporting.localization.Localization(__file__, 621, 50), swapaxes_22146, *[subscript_call_result_22150, int_22151, int_22152], **kwargs_22153)
        
        # Processing the call keyword arguments (line 621)
        kwargs_22155 = {}
        # Getting the type of 'assert_array_almost_equal' (line 621)
        assert_array_almost_equal_22141 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 621, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 621)
        assert_array_almost_equal_call_result_22156 = invoke(stypy.reporting.localization.Localization(__file__, 621, 8), assert_array_almost_equal_22141, *[fftn_call_result_22145, swapaxes_call_result_22154], **kwargs_22155)
        
        
        # Assigning a Call to a Name (line 622):
        
        # Call to fftn(...): (line 622)
        # Processing the call arguments (line 622)
        # Getting the type of 'x' (line 622)
        x_22158 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 622, 17), 'x', False)
        # Processing the call keyword arguments (line 622)
        
        # Obtaining an instance of the builtin type 'tuple' (line 622)
        tuple_22159 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 622, 25), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 622)
        # Adding element type (line 622)
        int_22160 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 622, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 622, 25), tuple_22159, int_22160)
        # Adding element type (line 622)
        int_22161 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 622, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 622, 25), tuple_22159, int_22161)
        
        keyword_22162 = tuple_22159
        kwargs_22163 = {'axes': keyword_22162}
        # Getting the type of 'fftn' (line 622)
        fftn_22157 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 622, 12), 'fftn', False)
        # Calling fftn(args, kwargs) (line 622)
        fftn_call_result_22164 = invoke(stypy.reporting.localization.Localization(__file__, 622, 12), fftn_22157, *[x_22158], **kwargs_22163)
        
        # Assigning a type to the variable 'y' (line 622)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 622, 8), 'y', fftn_call_result_22164)
        
        # Call to assert_array_almost_equal(...): (line 623)
        # Processing the call arguments (line 623)
        
        # Call to fftn(...): (line 623)
        # Processing the call arguments (line 623)
        # Getting the type of 'ik_plane1' (line 623)
        ik_plane1_22167 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 623, 39), 'ik_plane1', False)
        # Processing the call keyword arguments (line 623)
        kwargs_22168 = {}
        # Getting the type of 'fftn' (line 623)
        fftn_22166 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 623, 34), 'fftn', False)
        # Calling fftn(args, kwargs) (line 623)
        fftn_call_result_22169 = invoke(stypy.reporting.localization.Localization(__file__, 623, 34), fftn_22166, *[ik_plane1_22167], **kwargs_22168)
        
        
        # Call to swapaxes(...): (line 623)
        # Processing the call arguments (line 623)
        
        # Obtaining the type of the subscript
        slice_22171 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 623, 59), None, None, None)
        int_22172 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 623, 63), 'int')
        slice_22173 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 623, 59), None, None, None)
        # Getting the type of 'y' (line 623)
        y_22174 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 623, 59), 'y', False)
        # Obtaining the member '__getitem__' of a type (line 623)
        getitem___22175 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 623, 59), y_22174, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 623)
        subscript_call_result_22176 = invoke(stypy.reporting.localization.Localization(__file__, 623, 59), getitem___22175, (slice_22171, int_22172, slice_22173))
        
        int_22177 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 623, 68), 'int')
        int_22178 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 623, 71), 'int')
        # Processing the call keyword arguments (line 623)
        kwargs_22179 = {}
        # Getting the type of 'swapaxes' (line 623)
        swapaxes_22170 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 623, 50), 'swapaxes', False)
        # Calling swapaxes(args, kwargs) (line 623)
        swapaxes_call_result_22180 = invoke(stypy.reporting.localization.Localization(__file__, 623, 50), swapaxes_22170, *[subscript_call_result_22176, int_22177, int_22178], **kwargs_22179)
        
        # Processing the call keyword arguments (line 623)
        kwargs_22181 = {}
        # Getting the type of 'assert_array_almost_equal' (line 623)
        assert_array_almost_equal_22165 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 623, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 623)
        assert_array_almost_equal_call_result_22182 = invoke(stypy.reporting.localization.Localization(__file__, 623, 8), assert_array_almost_equal_22165, *[fftn_call_result_22169, swapaxes_call_result_22180], **kwargs_22181)
        
        
        # Call to assert_array_almost_equal(...): (line 624)
        # Processing the call arguments (line 624)
        
        # Call to fftn(...): (line 624)
        # Processing the call arguments (line 624)
        # Getting the type of 'ik_plane2' (line 624)
        ik_plane2_22185 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 624, 39), 'ik_plane2', False)
        # Processing the call keyword arguments (line 624)
        kwargs_22186 = {}
        # Getting the type of 'fftn' (line 624)
        fftn_22184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 624, 34), 'fftn', False)
        # Calling fftn(args, kwargs) (line 624)
        fftn_call_result_22187 = invoke(stypy.reporting.localization.Localization(__file__, 624, 34), fftn_22184, *[ik_plane2_22185], **kwargs_22186)
        
        
        # Call to swapaxes(...): (line 624)
        # Processing the call arguments (line 624)
        
        # Obtaining the type of the subscript
        slice_22189 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 624, 59), None, None, None)
        int_22190 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 624, 63), 'int')
        slice_22191 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 624, 59), None, None, None)
        # Getting the type of 'y' (line 624)
        y_22192 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 624, 59), 'y', False)
        # Obtaining the member '__getitem__' of a type (line 624)
        getitem___22193 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 624, 59), y_22192, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 624)
        subscript_call_result_22194 = invoke(stypy.reporting.localization.Localization(__file__, 624, 59), getitem___22193, (slice_22189, int_22190, slice_22191))
        
        int_22195 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 624, 68), 'int')
        int_22196 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 624, 71), 'int')
        # Processing the call keyword arguments (line 624)
        kwargs_22197 = {}
        # Getting the type of 'swapaxes' (line 624)
        swapaxes_22188 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 624, 50), 'swapaxes', False)
        # Calling swapaxes(args, kwargs) (line 624)
        swapaxes_call_result_22198 = invoke(stypy.reporting.localization.Localization(__file__, 624, 50), swapaxes_22188, *[subscript_call_result_22194, int_22195, int_22196], **kwargs_22197)
        
        # Processing the call keyword arguments (line 624)
        kwargs_22199 = {}
        # Getting the type of 'assert_array_almost_equal' (line 624)
        assert_array_almost_equal_22183 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 624, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 624)
        assert_array_almost_equal_call_result_22200 = invoke(stypy.reporting.localization.Localization(__file__, 624, 8), assert_array_almost_equal_22183, *[fftn_call_result_22187, swapaxes_call_result_22198], **kwargs_22199)
        
        
        # Call to assert_array_almost_equal(...): (line 625)
        # Processing the call arguments (line 625)
        
        # Call to fftn(...): (line 625)
        # Processing the call arguments (line 625)
        # Getting the type of 'ik_plane3' (line 625)
        ik_plane3_22203 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 625, 39), 'ik_plane3', False)
        # Processing the call keyword arguments (line 625)
        kwargs_22204 = {}
        # Getting the type of 'fftn' (line 625)
        fftn_22202 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 625, 34), 'fftn', False)
        # Calling fftn(args, kwargs) (line 625)
        fftn_call_result_22205 = invoke(stypy.reporting.localization.Localization(__file__, 625, 34), fftn_22202, *[ik_plane3_22203], **kwargs_22204)
        
        
        # Call to swapaxes(...): (line 625)
        # Processing the call arguments (line 625)
        
        # Obtaining the type of the subscript
        slice_22207 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 625, 59), None, None, None)
        int_22208 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 625, 63), 'int')
        slice_22209 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 625, 59), None, None, None)
        # Getting the type of 'y' (line 625)
        y_22210 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 625, 59), 'y', False)
        # Obtaining the member '__getitem__' of a type (line 625)
        getitem___22211 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 625, 59), y_22210, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 625)
        subscript_call_result_22212 = invoke(stypy.reporting.localization.Localization(__file__, 625, 59), getitem___22211, (slice_22207, int_22208, slice_22209))
        
        int_22213 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 625, 68), 'int')
        int_22214 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 625, 71), 'int')
        # Processing the call keyword arguments (line 625)
        kwargs_22215 = {}
        # Getting the type of 'swapaxes' (line 625)
        swapaxes_22206 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 625, 50), 'swapaxes', False)
        # Calling swapaxes(args, kwargs) (line 625)
        swapaxes_call_result_22216 = invoke(stypy.reporting.localization.Localization(__file__, 625, 50), swapaxes_22206, *[subscript_call_result_22212, int_22213, int_22214], **kwargs_22215)
        
        # Processing the call keyword arguments (line 625)
        kwargs_22217 = {}
        # Getting the type of 'assert_array_almost_equal' (line 625)
        assert_array_almost_equal_22201 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 625, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 625)
        assert_array_almost_equal_call_result_22218 = invoke(stypy.reporting.localization.Localization(__file__, 625, 8), assert_array_almost_equal_22201, *[fftn_call_result_22205, swapaxes_call_result_22216], **kwargs_22217)
        
        
        # Assigning a Call to a Name (line 626):
        
        # Call to fftn(...): (line 626)
        # Processing the call arguments (line 626)
        # Getting the type of 'x' (line 626)
        x_22220 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 626, 17), 'x', False)
        # Processing the call keyword arguments (line 626)
        
        # Obtaining an instance of the builtin type 'tuple' (line 626)
        tuple_22221 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 626, 25), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 626)
        # Adding element type (line 626)
        int_22222 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 626, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 626, 25), tuple_22221, int_22222)
        # Adding element type (line 626)
        int_22223 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 626, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 626, 25), tuple_22221, int_22223)
        
        keyword_22224 = tuple_22221
        kwargs_22225 = {'axes': keyword_22224}
        # Getting the type of 'fftn' (line 626)
        fftn_22219 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 626, 12), 'fftn', False)
        # Calling fftn(args, kwargs) (line 626)
        fftn_call_result_22226 = invoke(stypy.reporting.localization.Localization(__file__, 626, 12), fftn_22219, *[x_22220], **kwargs_22225)
        
        # Assigning a type to the variable 'y' (line 626)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 626, 8), 'y', fftn_call_result_22226)
        
        # Call to assert_array_almost_equal(...): (line 627)
        # Processing the call arguments (line 627)
        
        # Call to fftn(...): (line 627)
        # Processing the call arguments (line 627)
        # Getting the type of 'jk_plane1' (line 627)
        jk_plane1_22229 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 627, 39), 'jk_plane1', False)
        # Processing the call keyword arguments (line 627)
        kwargs_22230 = {}
        # Getting the type of 'fftn' (line 627)
        fftn_22228 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 627, 34), 'fftn', False)
        # Calling fftn(args, kwargs) (line 627)
        fftn_call_result_22231 = invoke(stypy.reporting.localization.Localization(__file__, 627, 34), fftn_22228, *[jk_plane1_22229], **kwargs_22230)
        
        
        # Call to swapaxes(...): (line 627)
        # Processing the call arguments (line 627)
        
        # Obtaining the type of the subscript
        slice_22233 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 627, 59), None, None, None)
        slice_22234 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 627, 59), None, None, None)
        int_22235 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 627, 65), 'int')
        # Getting the type of 'y' (line 627)
        y_22236 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 627, 59), 'y', False)
        # Obtaining the member '__getitem__' of a type (line 627)
        getitem___22237 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 627, 59), y_22236, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 627)
        subscript_call_result_22238 = invoke(stypy.reporting.localization.Localization(__file__, 627, 59), getitem___22237, (slice_22233, slice_22234, int_22235))
        
        int_22239 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 627, 68), 'int')
        int_22240 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 627, 71), 'int')
        # Processing the call keyword arguments (line 627)
        kwargs_22241 = {}
        # Getting the type of 'swapaxes' (line 627)
        swapaxes_22232 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 627, 50), 'swapaxes', False)
        # Calling swapaxes(args, kwargs) (line 627)
        swapaxes_call_result_22242 = invoke(stypy.reporting.localization.Localization(__file__, 627, 50), swapaxes_22232, *[subscript_call_result_22238, int_22239, int_22240], **kwargs_22241)
        
        # Processing the call keyword arguments (line 627)
        kwargs_22243 = {}
        # Getting the type of 'assert_array_almost_equal' (line 627)
        assert_array_almost_equal_22227 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 627, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 627)
        assert_array_almost_equal_call_result_22244 = invoke(stypy.reporting.localization.Localization(__file__, 627, 8), assert_array_almost_equal_22227, *[fftn_call_result_22231, swapaxes_call_result_22242], **kwargs_22243)
        
        
        # Call to assert_array_almost_equal(...): (line 628)
        # Processing the call arguments (line 628)
        
        # Call to fftn(...): (line 628)
        # Processing the call arguments (line 628)
        # Getting the type of 'jk_plane2' (line 628)
        jk_plane2_22247 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 628, 39), 'jk_plane2', False)
        # Processing the call keyword arguments (line 628)
        kwargs_22248 = {}
        # Getting the type of 'fftn' (line 628)
        fftn_22246 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 628, 34), 'fftn', False)
        # Calling fftn(args, kwargs) (line 628)
        fftn_call_result_22249 = invoke(stypy.reporting.localization.Localization(__file__, 628, 34), fftn_22246, *[jk_plane2_22247], **kwargs_22248)
        
        
        # Call to swapaxes(...): (line 628)
        # Processing the call arguments (line 628)
        
        # Obtaining the type of the subscript
        slice_22251 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 628, 59), None, None, None)
        slice_22252 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 628, 59), None, None, None)
        int_22253 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 628, 65), 'int')
        # Getting the type of 'y' (line 628)
        y_22254 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 628, 59), 'y', False)
        # Obtaining the member '__getitem__' of a type (line 628)
        getitem___22255 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 628, 59), y_22254, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 628)
        subscript_call_result_22256 = invoke(stypy.reporting.localization.Localization(__file__, 628, 59), getitem___22255, (slice_22251, slice_22252, int_22253))
        
        int_22257 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 628, 68), 'int')
        int_22258 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 628, 71), 'int')
        # Processing the call keyword arguments (line 628)
        kwargs_22259 = {}
        # Getting the type of 'swapaxes' (line 628)
        swapaxes_22250 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 628, 50), 'swapaxes', False)
        # Calling swapaxes(args, kwargs) (line 628)
        swapaxes_call_result_22260 = invoke(stypy.reporting.localization.Localization(__file__, 628, 50), swapaxes_22250, *[subscript_call_result_22256, int_22257, int_22258], **kwargs_22259)
        
        # Processing the call keyword arguments (line 628)
        kwargs_22261 = {}
        # Getting the type of 'assert_array_almost_equal' (line 628)
        assert_array_almost_equal_22245 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 628, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 628)
        assert_array_almost_equal_call_result_22262 = invoke(stypy.reporting.localization.Localization(__file__, 628, 8), assert_array_almost_equal_22245, *[fftn_call_result_22249, swapaxes_call_result_22260], **kwargs_22261)
        
        
        # Call to assert_array_almost_equal(...): (line 629)
        # Processing the call arguments (line 629)
        
        # Call to fftn(...): (line 629)
        # Processing the call arguments (line 629)
        # Getting the type of 'jk_plane3' (line 629)
        jk_plane3_22265 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 629, 39), 'jk_plane3', False)
        # Processing the call keyword arguments (line 629)
        kwargs_22266 = {}
        # Getting the type of 'fftn' (line 629)
        fftn_22264 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 629, 34), 'fftn', False)
        # Calling fftn(args, kwargs) (line 629)
        fftn_call_result_22267 = invoke(stypy.reporting.localization.Localization(__file__, 629, 34), fftn_22264, *[jk_plane3_22265], **kwargs_22266)
        
        
        # Call to swapaxes(...): (line 629)
        # Processing the call arguments (line 629)
        
        # Obtaining the type of the subscript
        slice_22269 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 629, 59), None, None, None)
        slice_22270 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 629, 59), None, None, None)
        int_22271 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 629, 65), 'int')
        # Getting the type of 'y' (line 629)
        y_22272 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 629, 59), 'y', False)
        # Obtaining the member '__getitem__' of a type (line 629)
        getitem___22273 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 629, 59), y_22272, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 629)
        subscript_call_result_22274 = invoke(stypy.reporting.localization.Localization(__file__, 629, 59), getitem___22273, (slice_22269, slice_22270, int_22271))
        
        int_22275 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 629, 68), 'int')
        int_22276 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 629, 71), 'int')
        # Processing the call keyword arguments (line 629)
        kwargs_22277 = {}
        # Getting the type of 'swapaxes' (line 629)
        swapaxes_22268 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 629, 50), 'swapaxes', False)
        # Calling swapaxes(args, kwargs) (line 629)
        swapaxes_call_result_22278 = invoke(stypy.reporting.localization.Localization(__file__, 629, 50), swapaxes_22268, *[subscript_call_result_22274, int_22275, int_22276], **kwargs_22277)
        
        # Processing the call keyword arguments (line 629)
        kwargs_22279 = {}
        # Getting the type of 'assert_array_almost_equal' (line 629)
        assert_array_almost_equal_22263 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 629, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 629)
        assert_array_almost_equal_call_result_22280 = invoke(stypy.reporting.localization.Localization(__file__, 629, 8), assert_array_almost_equal_22263, *[fftn_call_result_22267, swapaxes_call_result_22278], **kwargs_22279)
        
        
        # Assigning a Call to a Name (line 631):
        
        # Call to fftn(...): (line 631)
        # Processing the call arguments (line 631)
        # Getting the type of 'x' (line 631)
        x_22282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 631, 17), 'x', False)
        # Processing the call keyword arguments (line 631)
        
        # Obtaining an instance of the builtin type 'tuple' (line 631)
        tuple_22283 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 631, 25), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 631)
        # Adding element type (line 631)
        int_22284 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 631, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 631, 25), tuple_22283, int_22284)
        
        keyword_22285 = tuple_22283
        kwargs_22286 = {'axes': keyword_22285}
        # Getting the type of 'fftn' (line 631)
        fftn_22281 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 631, 12), 'fftn', False)
        # Calling fftn(args, kwargs) (line 631)
        fftn_call_result_22287 = invoke(stypy.reporting.localization.Localization(__file__, 631, 12), fftn_22281, *[x_22282], **kwargs_22286)
        
        # Assigning a type to the variable 'y' (line 631)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 631, 8), 'y', fftn_call_result_22287)
        
        
        # Call to range(...): (line 632)
        # Processing the call arguments (line 632)
        int_22289 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 632, 23), 'int')
        # Processing the call keyword arguments (line 632)
        kwargs_22290 = {}
        # Getting the type of 'range' (line 632)
        range_22288 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 632, 17), 'range', False)
        # Calling range(args, kwargs) (line 632)
        range_call_result_22291 = invoke(stypy.reporting.localization.Localization(__file__, 632, 17), range_22288, *[int_22289], **kwargs_22290)
        
        # Testing the type of a for loop iterable (line 632)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 632, 8), range_call_result_22291)
        # Getting the type of the for loop variable (line 632)
        for_loop_var_22292 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 632, 8), range_call_result_22291)
        # Assigning a type to the variable 'i' (line 632)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 632, 8), 'i', for_loop_var_22292)
        # SSA begins for a for statement (line 632)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        
        # Call to range(...): (line 633)
        # Processing the call arguments (line 633)
        int_22294 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 633, 27), 'int')
        # Processing the call keyword arguments (line 633)
        kwargs_22295 = {}
        # Getting the type of 'range' (line 633)
        range_22293 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 633, 21), 'range', False)
        # Calling range(args, kwargs) (line 633)
        range_call_result_22296 = invoke(stypy.reporting.localization.Localization(__file__, 633, 21), range_22293, *[int_22294], **kwargs_22295)
        
        # Testing the type of a for loop iterable (line 633)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 633, 12), range_call_result_22296)
        # Getting the type of the for loop variable (line 633)
        for_loop_var_22297 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 633, 12), range_call_result_22296)
        # Assigning a type to the variable 'j' (line 633)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 633, 12), 'j', for_loop_var_22297)
        # SSA begins for a for statement (line 633)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to assert_array_almost_equal(...): (line 634)
        # Processing the call arguments (line 634)
        
        # Call to fft(...): (line 634)
        # Processing the call arguments (line 634)
        
        # Obtaining the type of the subscript
        # Getting the type of 'i' (line 634)
        i_22300 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 634, 48), 'i', False)
        # Getting the type of 'j' (line 634)
        j_22301 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 634, 50), 'j', False)
        slice_22302 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 634, 46), None, None, None)
        # Getting the type of 'x' (line 634)
        x_22303 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 634, 46), 'x', False)
        # Obtaining the member '__getitem__' of a type (line 634)
        getitem___22304 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 634, 46), x_22303, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 634)
        subscript_call_result_22305 = invoke(stypy.reporting.localization.Localization(__file__, 634, 46), getitem___22304, (i_22300, j_22301, slice_22302))
        
        # Processing the call keyword arguments (line 634)
        kwargs_22306 = {}
        # Getting the type of 'fft' (line 634)
        fft_22299 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 634, 42), 'fft', False)
        # Calling fft(args, kwargs) (line 634)
        fft_call_result_22307 = invoke(stypy.reporting.localization.Localization(__file__, 634, 42), fft_22299, *[subscript_call_result_22305], **kwargs_22306)
        
        
        # Obtaining the type of the subscript
        # Getting the type of 'i' (line 634)
        i_22308 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 634, 58), 'i', False)
        # Getting the type of 'j' (line 634)
        j_22309 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 634, 60), 'j', False)
        slice_22310 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 634, 56), None, None, None)
        # Getting the type of 'y' (line 634)
        y_22311 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 634, 56), 'y', False)
        # Obtaining the member '__getitem__' of a type (line 634)
        getitem___22312 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 634, 56), y_22311, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 634)
        subscript_call_result_22313 = invoke(stypy.reporting.localization.Localization(__file__, 634, 56), getitem___22312, (i_22308, j_22309, slice_22310))
        
        # Processing the call keyword arguments (line 634)
        kwargs_22314 = {}
        # Getting the type of 'assert_array_almost_equal' (line 634)
        assert_array_almost_equal_22298 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 634, 16), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 634)
        assert_array_almost_equal_call_result_22315 = invoke(stypy.reporting.localization.Localization(__file__, 634, 16), assert_array_almost_equal_22298, *[fft_call_result_22307, subscript_call_result_22313], **kwargs_22314)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 635):
        
        # Call to fftn(...): (line 635)
        # Processing the call arguments (line 635)
        # Getting the type of 'x' (line 635)
        x_22317 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 635, 17), 'x', False)
        # Processing the call keyword arguments (line 635)
        
        # Obtaining an instance of the builtin type 'tuple' (line 635)
        tuple_22318 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 635, 25), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 635)
        # Adding element type (line 635)
        int_22319 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 635, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 635, 25), tuple_22318, int_22319)
        
        keyword_22320 = tuple_22318
        kwargs_22321 = {'axes': keyword_22320}
        # Getting the type of 'fftn' (line 635)
        fftn_22316 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 635, 12), 'fftn', False)
        # Calling fftn(args, kwargs) (line 635)
        fftn_call_result_22322 = invoke(stypy.reporting.localization.Localization(__file__, 635, 12), fftn_22316, *[x_22317], **kwargs_22321)
        
        # Assigning a type to the variable 'y' (line 635)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 635, 8), 'y', fftn_call_result_22322)
        
        
        # Call to range(...): (line 636)
        # Processing the call arguments (line 636)
        int_22324 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 636, 23), 'int')
        # Processing the call keyword arguments (line 636)
        kwargs_22325 = {}
        # Getting the type of 'range' (line 636)
        range_22323 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 636, 17), 'range', False)
        # Calling range(args, kwargs) (line 636)
        range_call_result_22326 = invoke(stypy.reporting.localization.Localization(__file__, 636, 17), range_22323, *[int_22324], **kwargs_22325)
        
        # Testing the type of a for loop iterable (line 636)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 636, 8), range_call_result_22326)
        # Getting the type of the for loop variable (line 636)
        for_loop_var_22327 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 636, 8), range_call_result_22326)
        # Assigning a type to the variable 'i' (line 636)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 636, 8), 'i', for_loop_var_22327)
        # SSA begins for a for statement (line 636)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        
        # Call to range(...): (line 637)
        # Processing the call arguments (line 637)
        int_22329 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 637, 27), 'int')
        # Processing the call keyword arguments (line 637)
        kwargs_22330 = {}
        # Getting the type of 'range' (line 637)
        range_22328 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 637, 21), 'range', False)
        # Calling range(args, kwargs) (line 637)
        range_call_result_22331 = invoke(stypy.reporting.localization.Localization(__file__, 637, 21), range_22328, *[int_22329], **kwargs_22330)
        
        # Testing the type of a for loop iterable (line 637)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 637, 12), range_call_result_22331)
        # Getting the type of the for loop variable (line 637)
        for_loop_var_22332 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 637, 12), range_call_result_22331)
        # Assigning a type to the variable 'j' (line 637)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 637, 12), 'j', for_loop_var_22332)
        # SSA begins for a for statement (line 637)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to assert_array_almost_equal(...): (line 638)
        # Processing the call arguments (line 638)
        
        # Call to fft(...): (line 638)
        # Processing the call arguments (line 638)
        
        # Obtaining the type of the subscript
        # Getting the type of 'i' (line 638)
        i_22335 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 638, 48), 'i', False)
        slice_22336 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 638, 46), None, None, None)
        # Getting the type of 'j' (line 638)
        j_22337 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 638, 52), 'j', False)
        # Getting the type of 'x' (line 638)
        x_22338 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 638, 46), 'x', False)
        # Obtaining the member '__getitem__' of a type (line 638)
        getitem___22339 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 638, 46), x_22338, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 638)
        subscript_call_result_22340 = invoke(stypy.reporting.localization.Localization(__file__, 638, 46), getitem___22339, (i_22335, slice_22336, j_22337))
        
        # Processing the call keyword arguments (line 638)
        kwargs_22341 = {}
        # Getting the type of 'fft' (line 638)
        fft_22334 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 638, 42), 'fft', False)
        # Calling fft(args, kwargs) (line 638)
        fft_call_result_22342 = invoke(stypy.reporting.localization.Localization(__file__, 638, 42), fft_22334, *[subscript_call_result_22340], **kwargs_22341)
        
        
        # Obtaining the type of the subscript
        # Getting the type of 'i' (line 638)
        i_22343 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 638, 58), 'i', False)
        slice_22344 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 638, 56), None, None, None)
        # Getting the type of 'j' (line 638)
        j_22345 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 638, 62), 'j', False)
        # Getting the type of 'y' (line 638)
        y_22346 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 638, 56), 'y', False)
        # Obtaining the member '__getitem__' of a type (line 638)
        getitem___22347 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 638, 56), y_22346, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 638)
        subscript_call_result_22348 = invoke(stypy.reporting.localization.Localization(__file__, 638, 56), getitem___22347, (i_22343, slice_22344, j_22345))
        
        # Processing the call keyword arguments (line 638)
        kwargs_22349 = {}
        # Getting the type of 'assert_array_almost_equal' (line 638)
        assert_array_almost_equal_22333 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 638, 16), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 638)
        assert_array_almost_equal_call_result_22350 = invoke(stypy.reporting.localization.Localization(__file__, 638, 16), assert_array_almost_equal_22333, *[fft_call_result_22342, subscript_call_result_22348], **kwargs_22349)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 639):
        
        # Call to fftn(...): (line 639)
        # Processing the call arguments (line 639)
        # Getting the type of 'x' (line 639)
        x_22352 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 639, 17), 'x', False)
        # Processing the call keyword arguments (line 639)
        
        # Obtaining an instance of the builtin type 'tuple' (line 639)
        tuple_22353 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 639, 25), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 639)
        # Adding element type (line 639)
        int_22354 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 639, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 639, 25), tuple_22353, int_22354)
        
        keyword_22355 = tuple_22353
        kwargs_22356 = {'axes': keyword_22355}
        # Getting the type of 'fftn' (line 639)
        fftn_22351 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 639, 12), 'fftn', False)
        # Calling fftn(args, kwargs) (line 639)
        fftn_call_result_22357 = invoke(stypy.reporting.localization.Localization(__file__, 639, 12), fftn_22351, *[x_22352], **kwargs_22356)
        
        # Assigning a type to the variable 'y' (line 639)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 639, 8), 'y', fftn_call_result_22357)
        
        
        # Call to range(...): (line 640)
        # Processing the call arguments (line 640)
        int_22359 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 640, 23), 'int')
        # Processing the call keyword arguments (line 640)
        kwargs_22360 = {}
        # Getting the type of 'range' (line 640)
        range_22358 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 640, 17), 'range', False)
        # Calling range(args, kwargs) (line 640)
        range_call_result_22361 = invoke(stypy.reporting.localization.Localization(__file__, 640, 17), range_22358, *[int_22359], **kwargs_22360)
        
        # Testing the type of a for loop iterable (line 640)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 640, 8), range_call_result_22361)
        # Getting the type of the for loop variable (line 640)
        for_loop_var_22362 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 640, 8), range_call_result_22361)
        # Assigning a type to the variable 'i' (line 640)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 640, 8), 'i', for_loop_var_22362)
        # SSA begins for a for statement (line 640)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        
        # Call to range(...): (line 641)
        # Processing the call arguments (line 641)
        int_22364 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 641, 27), 'int')
        # Processing the call keyword arguments (line 641)
        kwargs_22365 = {}
        # Getting the type of 'range' (line 641)
        range_22363 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 641, 21), 'range', False)
        # Calling range(args, kwargs) (line 641)
        range_call_result_22366 = invoke(stypy.reporting.localization.Localization(__file__, 641, 21), range_22363, *[int_22364], **kwargs_22365)
        
        # Testing the type of a for loop iterable (line 641)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 641, 12), range_call_result_22366)
        # Getting the type of the for loop variable (line 641)
        for_loop_var_22367 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 641, 12), range_call_result_22366)
        # Assigning a type to the variable 'j' (line 641)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 641, 12), 'j', for_loop_var_22367)
        # SSA begins for a for statement (line 641)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to assert_array_almost_equal(...): (line 642)
        # Processing the call arguments (line 642)
        
        # Call to fft(...): (line 642)
        # Processing the call arguments (line 642)
        
        # Obtaining the type of the subscript
        slice_22370 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 642, 46), None, None, None)
        # Getting the type of 'i' (line 642)
        i_22371 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 642, 50), 'i', False)
        # Getting the type of 'j' (line 642)
        j_22372 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 642, 52), 'j', False)
        # Getting the type of 'x' (line 642)
        x_22373 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 642, 46), 'x', False)
        # Obtaining the member '__getitem__' of a type (line 642)
        getitem___22374 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 642, 46), x_22373, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 642)
        subscript_call_result_22375 = invoke(stypy.reporting.localization.Localization(__file__, 642, 46), getitem___22374, (slice_22370, i_22371, j_22372))
        
        # Processing the call keyword arguments (line 642)
        kwargs_22376 = {}
        # Getting the type of 'fft' (line 642)
        fft_22369 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 642, 42), 'fft', False)
        # Calling fft(args, kwargs) (line 642)
        fft_call_result_22377 = invoke(stypy.reporting.localization.Localization(__file__, 642, 42), fft_22369, *[subscript_call_result_22375], **kwargs_22376)
        
        
        # Obtaining the type of the subscript
        slice_22378 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 642, 56), None, None, None)
        # Getting the type of 'i' (line 642)
        i_22379 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 642, 60), 'i', False)
        # Getting the type of 'j' (line 642)
        j_22380 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 642, 62), 'j', False)
        # Getting the type of 'y' (line 642)
        y_22381 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 642, 56), 'y', False)
        # Obtaining the member '__getitem__' of a type (line 642)
        getitem___22382 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 642, 56), y_22381, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 642)
        subscript_call_result_22383 = invoke(stypy.reporting.localization.Localization(__file__, 642, 56), getitem___22382, (slice_22378, i_22379, j_22380))
        
        # Processing the call keyword arguments (line 642)
        kwargs_22384 = {}
        # Getting the type of 'assert_array_almost_equal' (line 642)
        assert_array_almost_equal_22368 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 642, 16), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 642)
        assert_array_almost_equal_call_result_22385 = invoke(stypy.reporting.localization.Localization(__file__, 642, 16), assert_array_almost_equal_22368, *[fft_call_result_22377, subscript_call_result_22383], **kwargs_22384)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 644):
        
        # Call to fftn(...): (line 644)
        # Processing the call arguments (line 644)
        # Getting the type of 'x' (line 644)
        x_22387 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 644, 17), 'x', False)
        # Processing the call keyword arguments (line 644)
        
        # Obtaining an instance of the builtin type 'tuple' (line 644)
        tuple_22388 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 644, 24), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 644)
        
        keyword_22389 = tuple_22388
        kwargs_22390 = {'axes': keyword_22389}
        # Getting the type of 'fftn' (line 644)
        fftn_22386 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 644, 12), 'fftn', False)
        # Calling fftn(args, kwargs) (line 644)
        fftn_call_result_22391 = invoke(stypy.reporting.localization.Localization(__file__, 644, 12), fftn_22386, *[x_22387], **kwargs_22390)
        
        # Assigning a type to the variable 'y' (line 644)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 644, 8), 'y', fftn_call_result_22391)
        
        # Call to assert_array_almost_equal(...): (line 645)
        # Processing the call arguments (line 645)
        # Getting the type of 'y' (line 645)
        y_22393 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 645, 34), 'y', False)
        # Getting the type of 'x' (line 645)
        x_22394 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 645, 36), 'x', False)
        # Processing the call keyword arguments (line 645)
        kwargs_22395 = {}
        # Getting the type of 'assert_array_almost_equal' (line 645)
        assert_array_almost_equal_22392 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 645, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 645)
        assert_array_almost_equal_call_result_22396 = invoke(stypy.reporting.localization.Localization(__file__, 645, 8), assert_array_almost_equal_22392, *[y_22393, x_22394], **kwargs_22395)
        
        
        # ################# End of 'test_axes_argument(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_axes_argument' in the type store
        # Getting the type of 'stypy_return_type' (line 556)
        stypy_return_type_22397 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 556, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_22397)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_axes_argument'
        return stypy_return_type_22397


    @norecursion
    def test_shape_argument(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_shape_argument'
        module_type_store = module_type_store.open_function_context('test_shape_argument', 647, 4, False)
        # Assigning a type to the variable 'self' (line 648)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 648, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestFftn.test_shape_argument.__dict__.__setitem__('stypy_localization', localization)
        TestFftn.test_shape_argument.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestFftn.test_shape_argument.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestFftn.test_shape_argument.__dict__.__setitem__('stypy_function_name', 'TestFftn.test_shape_argument')
        TestFftn.test_shape_argument.__dict__.__setitem__('stypy_param_names_list', [])
        TestFftn.test_shape_argument.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestFftn.test_shape_argument.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestFftn.test_shape_argument.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestFftn.test_shape_argument.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestFftn.test_shape_argument.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestFftn.test_shape_argument.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFftn.test_shape_argument', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_shape_argument', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_shape_argument(...)' code ##################

        
        # Assigning a List to a Name (line 648):
        
        # Obtaining an instance of the builtin type 'list' (line 648)
        list_22398 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 648, 18), 'list')
        # Adding type elements to the builtin type 'list' instance (line 648)
        # Adding element type (line 648)
        
        # Obtaining an instance of the builtin type 'list' (line 648)
        list_22399 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 648, 19), 'list')
        # Adding type elements to the builtin type 'list' instance (line 648)
        # Adding element type (line 648)
        int_22400 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 648, 20), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 648, 19), list_22399, int_22400)
        # Adding element type (line 648)
        int_22401 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 648, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 648, 19), list_22399, int_22401)
        # Adding element type (line 648)
        int_22402 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 648, 24), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 648, 19), list_22399, int_22402)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 648, 18), list_22398, list_22399)
        # Adding element type (line 648)
        
        # Obtaining an instance of the builtin type 'list' (line 648)
        list_22403 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 648, 27), 'list')
        # Adding type elements to the builtin type 'list' instance (line 648)
        # Adding element type (line 648)
        int_22404 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 648, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 648, 27), list_22403, int_22404)
        # Adding element type (line 648)
        int_22405 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 648, 30), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 648, 27), list_22403, int_22405)
        # Adding element type (line 648)
        int_22406 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 648, 32), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 648, 27), list_22403, int_22406)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 648, 18), list_22398, list_22403)
        
        # Assigning a type to the variable 'small_x' (line 648)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 648, 8), 'small_x', list_22398)
        
        # Assigning a List to a Name (line 649):
        
        # Obtaining an instance of the builtin type 'list' (line 649)
        list_22407 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 649, 19), 'list')
        # Adding type elements to the builtin type 'list' instance (line 649)
        # Adding element type (line 649)
        
        # Obtaining an instance of the builtin type 'list' (line 649)
        list_22408 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 649, 20), 'list')
        # Adding type elements to the builtin type 'list' instance (line 649)
        # Adding element type (line 649)
        int_22409 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 649, 21), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 649, 20), list_22408, int_22409)
        # Adding element type (line 649)
        int_22410 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 649, 23), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 649, 20), list_22408, int_22410)
        # Adding element type (line 649)
        int_22411 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 649, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 649, 20), list_22408, int_22411)
        # Adding element type (line 649)
        int_22412 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 649, 27), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 649, 20), list_22408, int_22412)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 649, 19), list_22407, list_22408)
        # Adding element type (line 649)
        
        # Obtaining an instance of the builtin type 'list' (line 649)
        list_22413 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 649, 30), 'list')
        # Adding type elements to the builtin type 'list' instance (line 649)
        # Adding element type (line 649)
        int_22414 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 649, 31), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 649, 30), list_22413, int_22414)
        # Adding element type (line 649)
        int_22415 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 649, 33), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 649, 30), list_22413, int_22415)
        # Adding element type (line 649)
        int_22416 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 649, 35), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 649, 30), list_22413, int_22416)
        # Adding element type (line 649)
        int_22417 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 649, 37), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 649, 30), list_22413, int_22417)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 649, 19), list_22407, list_22413)
        # Adding element type (line 649)
        
        # Obtaining an instance of the builtin type 'list' (line 649)
        list_22418 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 649, 40), 'list')
        # Adding type elements to the builtin type 'list' instance (line 649)
        # Adding element type (line 649)
        int_22419 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 649, 41), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 649, 40), list_22418, int_22419)
        # Adding element type (line 649)
        int_22420 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 649, 43), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 649, 40), list_22418, int_22420)
        # Adding element type (line 649)
        int_22421 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 649, 45), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 649, 40), list_22418, int_22421)
        # Adding element type (line 649)
        int_22422 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 649, 47), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 649, 40), list_22418, int_22422)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 649, 19), list_22407, list_22418)
        # Adding element type (line 649)
        
        # Obtaining an instance of the builtin type 'list' (line 649)
        list_22423 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 649, 50), 'list')
        # Adding type elements to the builtin type 'list' instance (line 649)
        # Adding element type (line 649)
        int_22424 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 649, 51), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 649, 50), list_22423, int_22424)
        # Adding element type (line 649)
        int_22425 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 649, 53), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 649, 50), list_22423, int_22425)
        # Adding element type (line 649)
        int_22426 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 649, 55), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 649, 50), list_22423, int_22426)
        # Adding element type (line 649)
        int_22427 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 649, 57), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 649, 50), list_22423, int_22427)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 649, 19), list_22407, list_22423)
        
        # Assigning a type to the variable 'large_x1' (line 649)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 649, 8), 'large_x1', list_22407)
        
        # Assigning a Call to a Name (line 650):
        
        # Call to fftn(...): (line 650)
        # Processing the call arguments (line 650)
        # Getting the type of 'small_x' (line 650)
        small_x_22429 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 650, 17), 'small_x', False)
        # Processing the call keyword arguments (line 650)
        
        # Obtaining an instance of the builtin type 'tuple' (line 650)
        tuple_22430 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 650, 32), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 650)
        # Adding element type (line 650)
        int_22431 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 650, 32), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 650, 32), tuple_22430, int_22431)
        # Adding element type (line 650)
        int_22432 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 650, 34), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 650, 32), tuple_22430, int_22432)
        
        keyword_22433 = tuple_22430
        kwargs_22434 = {'shape': keyword_22433}
        # Getting the type of 'fftn' (line 650)
        fftn_22428 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 650, 12), 'fftn', False)
        # Calling fftn(args, kwargs) (line 650)
        fftn_call_result_22435 = invoke(stypy.reporting.localization.Localization(__file__, 650, 12), fftn_22428, *[small_x_22429], **kwargs_22434)
        
        # Assigning a type to the variable 'y' (line 650)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 650, 8), 'y', fftn_call_result_22435)
        
        # Call to assert_array_almost_equal(...): (line 651)
        # Processing the call arguments (line 651)
        # Getting the type of 'y' (line 651)
        y_22437 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 651, 34), 'y', False)
        
        # Call to fftn(...): (line 651)
        # Processing the call arguments (line 651)
        # Getting the type of 'large_x1' (line 651)
        large_x1_22439 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 651, 41), 'large_x1', False)
        # Processing the call keyword arguments (line 651)
        kwargs_22440 = {}
        # Getting the type of 'fftn' (line 651)
        fftn_22438 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 651, 36), 'fftn', False)
        # Calling fftn(args, kwargs) (line 651)
        fftn_call_result_22441 = invoke(stypy.reporting.localization.Localization(__file__, 651, 36), fftn_22438, *[large_x1_22439], **kwargs_22440)
        
        # Processing the call keyword arguments (line 651)
        kwargs_22442 = {}
        # Getting the type of 'assert_array_almost_equal' (line 651)
        assert_array_almost_equal_22436 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 651, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 651)
        assert_array_almost_equal_call_result_22443 = invoke(stypy.reporting.localization.Localization(__file__, 651, 8), assert_array_almost_equal_22436, *[y_22437, fftn_call_result_22441], **kwargs_22442)
        
        
        # Assigning a Call to a Name (line 652):
        
        # Call to fftn(...): (line 652)
        # Processing the call arguments (line 652)
        # Getting the type of 'small_x' (line 652)
        small_x_22445 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 652, 17), 'small_x', False)
        # Processing the call keyword arguments (line 652)
        
        # Obtaining an instance of the builtin type 'tuple' (line 652)
        tuple_22446 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 652, 32), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 652)
        # Adding element type (line 652)
        int_22447 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 652, 32), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 652, 32), tuple_22446, int_22447)
        # Adding element type (line 652)
        int_22448 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 652, 34), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 652, 32), tuple_22446, int_22448)
        
        keyword_22449 = tuple_22446
        kwargs_22450 = {'shape': keyword_22449}
        # Getting the type of 'fftn' (line 652)
        fftn_22444 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 652, 12), 'fftn', False)
        # Calling fftn(args, kwargs) (line 652)
        fftn_call_result_22451 = invoke(stypy.reporting.localization.Localization(__file__, 652, 12), fftn_22444, *[small_x_22445], **kwargs_22450)
        
        # Assigning a type to the variable 'y' (line 652)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 652, 8), 'y', fftn_call_result_22451)
        
        # Call to assert_array_almost_equal(...): (line 653)
        # Processing the call arguments (line 653)
        # Getting the type of 'y' (line 653)
        y_22453 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 653, 34), 'y', False)
        
        # Call to fftn(...): (line 653)
        # Processing the call arguments (line 653)
        
        # Obtaining the type of the subscript
        int_22455 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 653, 51), 'int')
        slice_22456 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 653, 41), None, int_22455, None)
        # Getting the type of 'large_x1' (line 653)
        large_x1_22457 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 653, 41), 'large_x1', False)
        # Obtaining the member '__getitem__' of a type (line 653)
        getitem___22458 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 653, 41), large_x1_22457, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 653)
        subscript_call_result_22459 = invoke(stypy.reporting.localization.Localization(__file__, 653, 41), getitem___22458, slice_22456)
        
        # Processing the call keyword arguments (line 653)
        kwargs_22460 = {}
        # Getting the type of 'fftn' (line 653)
        fftn_22454 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 653, 36), 'fftn', False)
        # Calling fftn(args, kwargs) (line 653)
        fftn_call_result_22461 = invoke(stypy.reporting.localization.Localization(__file__, 653, 36), fftn_22454, *[subscript_call_result_22459], **kwargs_22460)
        
        # Processing the call keyword arguments (line 653)
        kwargs_22462 = {}
        # Getting the type of 'assert_array_almost_equal' (line 653)
        assert_array_almost_equal_22452 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 653, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 653)
        assert_array_almost_equal_call_result_22463 = invoke(stypy.reporting.localization.Localization(__file__, 653, 8), assert_array_almost_equal_22452, *[y_22453, fftn_call_result_22461], **kwargs_22462)
        
        
        # ################# End of 'test_shape_argument(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_shape_argument' in the type store
        # Getting the type of 'stypy_return_type' (line 647)
        stypy_return_type_22464 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 647, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_22464)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_shape_argument'
        return stypy_return_type_22464


    @norecursion
    def test_shape_axes_argument(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_shape_axes_argument'
        module_type_store = module_type_store.open_function_context('test_shape_axes_argument', 655, 4, False)
        # Assigning a type to the variable 'self' (line 656)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 656, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestFftn.test_shape_axes_argument.__dict__.__setitem__('stypy_localization', localization)
        TestFftn.test_shape_axes_argument.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestFftn.test_shape_axes_argument.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestFftn.test_shape_axes_argument.__dict__.__setitem__('stypy_function_name', 'TestFftn.test_shape_axes_argument')
        TestFftn.test_shape_axes_argument.__dict__.__setitem__('stypy_param_names_list', [])
        TestFftn.test_shape_axes_argument.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestFftn.test_shape_axes_argument.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestFftn.test_shape_axes_argument.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestFftn.test_shape_axes_argument.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestFftn.test_shape_axes_argument.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestFftn.test_shape_axes_argument.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFftn.test_shape_axes_argument', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_shape_axes_argument', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_shape_axes_argument(...)' code ##################

        
        # Assigning a List to a Name (line 656):
        
        # Obtaining an instance of the builtin type 'list' (line 656)
        list_22465 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 656, 18), 'list')
        # Adding type elements to the builtin type 'list' instance (line 656)
        # Adding element type (line 656)
        
        # Obtaining an instance of the builtin type 'list' (line 656)
        list_22466 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 656, 19), 'list')
        # Adding type elements to the builtin type 'list' instance (line 656)
        # Adding element type (line 656)
        int_22467 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 656, 20), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 656, 19), list_22466, int_22467)
        # Adding element type (line 656)
        int_22468 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 656, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 656, 19), list_22466, int_22468)
        # Adding element type (line 656)
        int_22469 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 656, 24), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 656, 19), list_22466, int_22469)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 656, 18), list_22465, list_22466)
        # Adding element type (line 656)
        
        # Obtaining an instance of the builtin type 'list' (line 656)
        list_22470 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 656, 27), 'list')
        # Adding type elements to the builtin type 'list' instance (line 656)
        # Adding element type (line 656)
        int_22471 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 656, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 656, 27), list_22470, int_22471)
        # Adding element type (line 656)
        int_22472 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 656, 30), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 656, 27), list_22470, int_22472)
        # Adding element type (line 656)
        int_22473 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 656, 32), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 656, 27), list_22470, int_22473)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 656, 18), list_22465, list_22470)
        # Adding element type (line 656)
        
        # Obtaining an instance of the builtin type 'list' (line 656)
        list_22474 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 656, 35), 'list')
        # Adding type elements to the builtin type 'list' instance (line 656)
        # Adding element type (line 656)
        int_22475 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 656, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 656, 35), list_22474, int_22475)
        # Adding element type (line 656)
        int_22476 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 656, 38), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 656, 35), list_22474, int_22476)
        # Adding element type (line 656)
        int_22477 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 656, 40), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 656, 35), list_22474, int_22477)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 656, 18), list_22465, list_22474)
        
        # Assigning a type to the variable 'small_x' (line 656)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 656, 8), 'small_x', list_22465)
        
        # Assigning a Call to a Name (line 657):
        
        # Call to array(...): (line 657)
        # Processing the call arguments (line 657)
        
        # Obtaining an instance of the builtin type 'list' (line 657)
        list_22479 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 657, 25), 'list')
        # Adding type elements to the builtin type 'list' instance (line 657)
        # Adding element type (line 657)
        
        # Obtaining an instance of the builtin type 'list' (line 657)
        list_22480 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 657, 26), 'list')
        # Adding type elements to the builtin type 'list' instance (line 657)
        # Adding element type (line 657)
        int_22481 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 657, 27), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 657, 26), list_22480, int_22481)
        # Adding element type (line 657)
        int_22482 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 657, 29), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 657, 26), list_22480, int_22482)
        # Adding element type (line 657)
        int_22483 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 657, 31), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 657, 26), list_22480, int_22483)
        # Adding element type (line 657)
        int_22484 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 657, 33), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 657, 26), list_22480, int_22484)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 657, 25), list_22479, list_22480)
        # Adding element type (line 657)
        
        # Obtaining an instance of the builtin type 'list' (line 658)
        list_22485 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 658, 34), 'list')
        # Adding type elements to the builtin type 'list' instance (line 658)
        # Adding element type (line 658)
        int_22486 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 658, 35), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 658, 34), list_22485, int_22486)
        # Adding element type (line 658)
        int_22487 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 658, 37), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 658, 34), list_22485, int_22487)
        # Adding element type (line 658)
        int_22488 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 658, 39), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 658, 34), list_22485, int_22488)
        # Adding element type (line 658)
        int_22489 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 658, 41), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 658, 34), list_22485, int_22489)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 657, 25), list_22479, list_22485)
        # Adding element type (line 657)
        
        # Obtaining an instance of the builtin type 'list' (line 659)
        list_22490 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 659, 34), 'list')
        # Adding type elements to the builtin type 'list' instance (line 659)
        # Adding element type (line 659)
        int_22491 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 659, 35), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 659, 34), list_22490, int_22491)
        # Adding element type (line 659)
        int_22492 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 659, 37), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 659, 34), list_22490, int_22492)
        # Adding element type (line 659)
        int_22493 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 659, 39), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 659, 34), list_22490, int_22493)
        # Adding element type (line 659)
        int_22494 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 659, 41), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 659, 34), list_22490, int_22494)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 657, 25), list_22479, list_22490)
        # Adding element type (line 657)
        
        # Obtaining an instance of the builtin type 'list' (line 660)
        list_22495 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 660, 34), 'list')
        # Adding type elements to the builtin type 'list' instance (line 660)
        # Adding element type (line 660)
        int_22496 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 660, 35), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 660, 34), list_22495, int_22496)
        # Adding element type (line 660)
        int_22497 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 660, 37), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 660, 34), list_22495, int_22497)
        # Adding element type (line 660)
        int_22498 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 660, 39), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 660, 34), list_22495, int_22498)
        # Adding element type (line 660)
        int_22499 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 660, 41), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 660, 34), list_22495, int_22499)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 657, 25), list_22479, list_22495)
        
        # Processing the call keyword arguments (line 657)
        kwargs_22500 = {}
        # Getting the type of 'array' (line 657)
        array_22478 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 657, 19), 'array', False)
        # Calling array(args, kwargs) (line 657)
        array_call_result_22501 = invoke(stypy.reporting.localization.Localization(__file__, 657, 19), array_22478, *[list_22479], **kwargs_22500)
        
        # Assigning a type to the variable 'large_x1' (line 657)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 657, 8), 'large_x1', array_call_result_22501)
        
        # Assigning a Call to a Name (line 668):
        
        # Call to fftn(...): (line 668)
        # Processing the call arguments (line 668)
        # Getting the type of 'small_x' (line 668)
        small_x_22503 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 668, 17), 'small_x', False)
        # Processing the call keyword arguments (line 668)
        
        # Obtaining an instance of the builtin type 'tuple' (line 668)
        tuple_22504 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 668, 32), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 668)
        # Adding element type (line 668)
        int_22505 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 668, 32), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 668, 32), tuple_22504, int_22505)
        # Adding element type (line 668)
        int_22506 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 668, 34), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 668, 32), tuple_22504, int_22506)
        
        keyword_22507 = tuple_22504
        
        # Obtaining an instance of the builtin type 'tuple' (line 668)
        tuple_22508 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 668, 43), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 668)
        # Adding element type (line 668)
        int_22509 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 668, 43), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 668, 43), tuple_22508, int_22509)
        # Adding element type (line 668)
        int_22510 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 668, 46), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 668, 43), tuple_22508, int_22510)
        
        keyword_22511 = tuple_22508
        kwargs_22512 = {'shape': keyword_22507, 'axes': keyword_22511}
        # Getting the type of 'fftn' (line 668)
        fftn_22502 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 668, 12), 'fftn', False)
        # Calling fftn(args, kwargs) (line 668)
        fftn_call_result_22513 = invoke(stypy.reporting.localization.Localization(__file__, 668, 12), fftn_22502, *[small_x_22503], **kwargs_22512)
        
        # Assigning a type to the variable 'y' (line 668)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 668, 8), 'y', fftn_call_result_22513)
        
        # Call to assert_array_almost_equal(...): (line 669)
        # Processing the call arguments (line 669)
        # Getting the type of 'y' (line 669)
        y_22515 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 669, 34), 'y', False)
        
        # Call to fftn(...): (line 669)
        # Processing the call arguments (line 669)
        # Getting the type of 'large_x1' (line 669)
        large_x1_22517 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 669, 41), 'large_x1', False)
        # Processing the call keyword arguments (line 669)
        kwargs_22518 = {}
        # Getting the type of 'fftn' (line 669)
        fftn_22516 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 669, 36), 'fftn', False)
        # Calling fftn(args, kwargs) (line 669)
        fftn_call_result_22519 = invoke(stypy.reporting.localization.Localization(__file__, 669, 36), fftn_22516, *[large_x1_22517], **kwargs_22518)
        
        # Processing the call keyword arguments (line 669)
        kwargs_22520 = {}
        # Getting the type of 'assert_array_almost_equal' (line 669)
        assert_array_almost_equal_22514 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 669, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 669)
        assert_array_almost_equal_call_result_22521 = invoke(stypy.reporting.localization.Localization(__file__, 669, 8), assert_array_almost_equal_22514, *[y_22515, fftn_call_result_22519], **kwargs_22520)
        
        
        # Assigning a Call to a Name (line 670):
        
        # Call to fftn(...): (line 670)
        # Processing the call arguments (line 670)
        # Getting the type of 'small_x' (line 670)
        small_x_22523 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 670, 17), 'small_x', False)
        # Processing the call keyword arguments (line 670)
        
        # Obtaining an instance of the builtin type 'tuple' (line 670)
        tuple_22524 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 670, 32), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 670)
        # Adding element type (line 670)
        int_22525 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 670, 32), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 670, 32), tuple_22524, int_22525)
        # Adding element type (line 670)
        int_22526 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 670, 34), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 670, 32), tuple_22524, int_22526)
        
        keyword_22527 = tuple_22524
        
        # Obtaining an instance of the builtin type 'tuple' (line 670)
        tuple_22528 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 670, 43), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 670)
        # Adding element type (line 670)
        int_22529 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 670, 43), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 670, 43), tuple_22528, int_22529)
        # Adding element type (line 670)
        int_22530 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 670, 46), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 670, 43), tuple_22528, int_22530)
        
        keyword_22531 = tuple_22528
        kwargs_22532 = {'shape': keyword_22527, 'axes': keyword_22531}
        # Getting the type of 'fftn' (line 670)
        fftn_22522 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 670, 12), 'fftn', False)
        # Calling fftn(args, kwargs) (line 670)
        fftn_call_result_22533 = invoke(stypy.reporting.localization.Localization(__file__, 670, 12), fftn_22522, *[small_x_22523], **kwargs_22532)
        
        # Assigning a type to the variable 'y' (line 670)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 670, 8), 'y', fftn_call_result_22533)
        
        # Call to assert_array_almost_equal(...): (line 671)
        # Processing the call arguments (line 671)
        # Getting the type of 'y' (line 671)
        y_22535 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 671, 34), 'y', False)
        
        # Call to swapaxes(...): (line 671)
        # Processing the call arguments (line 671)
        
        # Call to fftn(...): (line 672)
        # Processing the call arguments (line 672)
        
        # Call to swapaxes(...): (line 672)
        # Processing the call arguments (line 672)
        # Getting the type of 'large_x1' (line 672)
        large_x1_22539 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 672, 26), 'large_x1', False)
        int_22540 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 672, 35), 'int')
        int_22541 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 672, 38), 'int')
        # Processing the call keyword arguments (line 672)
        kwargs_22542 = {}
        # Getting the type of 'swapaxes' (line 672)
        swapaxes_22538 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 672, 17), 'swapaxes', False)
        # Calling swapaxes(args, kwargs) (line 672)
        swapaxes_call_result_22543 = invoke(stypy.reporting.localization.Localization(__file__, 672, 17), swapaxes_22538, *[large_x1_22539, int_22540, int_22541], **kwargs_22542)
        
        # Processing the call keyword arguments (line 672)
        kwargs_22544 = {}
        # Getting the type of 'fftn' (line 672)
        fftn_22537 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 672, 12), 'fftn', False)
        # Calling fftn(args, kwargs) (line 672)
        fftn_call_result_22545 = invoke(stypy.reporting.localization.Localization(__file__, 672, 12), fftn_22537, *[swapaxes_call_result_22543], **kwargs_22544)
        
        int_22546 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 672, 43), 'int')
        int_22547 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 672, 46), 'int')
        # Processing the call keyword arguments (line 671)
        kwargs_22548 = {}
        # Getting the type of 'swapaxes' (line 671)
        swapaxes_22536 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 671, 36), 'swapaxes', False)
        # Calling swapaxes(args, kwargs) (line 671)
        swapaxes_call_result_22549 = invoke(stypy.reporting.localization.Localization(__file__, 671, 36), swapaxes_22536, *[fftn_call_result_22545, int_22546, int_22547], **kwargs_22548)
        
        # Processing the call keyword arguments (line 671)
        kwargs_22550 = {}
        # Getting the type of 'assert_array_almost_equal' (line 671)
        assert_array_almost_equal_22534 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 671, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 671)
        assert_array_almost_equal_call_result_22551 = invoke(stypy.reporting.localization.Localization(__file__, 671, 8), assert_array_almost_equal_22534, *[y_22535, swapaxes_call_result_22549], **kwargs_22550)
        
        
        # ################# End of 'test_shape_axes_argument(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_shape_axes_argument' in the type store
        # Getting the type of 'stypy_return_type' (line 655)
        stypy_return_type_22552 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 655, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_22552)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_shape_axes_argument'
        return stypy_return_type_22552


    @norecursion
    def test_shape_axes_argument2(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_shape_axes_argument2'
        module_type_store = module_type_store.open_function_context('test_shape_axes_argument2', 674, 4, False)
        # Assigning a type to the variable 'self' (line 675)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 675, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestFftn.test_shape_axes_argument2.__dict__.__setitem__('stypy_localization', localization)
        TestFftn.test_shape_axes_argument2.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestFftn.test_shape_axes_argument2.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestFftn.test_shape_axes_argument2.__dict__.__setitem__('stypy_function_name', 'TestFftn.test_shape_axes_argument2')
        TestFftn.test_shape_axes_argument2.__dict__.__setitem__('stypy_param_names_list', [])
        TestFftn.test_shape_axes_argument2.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestFftn.test_shape_axes_argument2.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestFftn.test_shape_axes_argument2.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestFftn.test_shape_axes_argument2.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestFftn.test_shape_axes_argument2.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestFftn.test_shape_axes_argument2.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFftn.test_shape_axes_argument2', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_shape_axes_argument2', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_shape_axes_argument2(...)' code ##################

        
        # Assigning a Call to a Name (line 676):
        
        # Call to random(...): (line 676)
        # Processing the call arguments (line 676)
        
        # Obtaining an instance of the builtin type 'tuple' (line 676)
        tuple_22556 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 676, 33), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 676)
        # Adding element type (line 676)
        int_22557 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 676, 33), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 676, 33), tuple_22556, int_22557)
        # Adding element type (line 676)
        int_22558 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 676, 37), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 676, 33), tuple_22556, int_22558)
        # Adding element type (line 676)
        int_22559 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 676, 40), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 676, 33), tuple_22556, int_22559)
        # Adding element type (line 676)
        int_22560 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 676, 43), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 676, 33), tuple_22556, int_22560)
        
        # Processing the call keyword arguments (line 676)
        kwargs_22561 = {}
        # Getting the type of 'numpy' (line 676)
        numpy_22553 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 676, 12), 'numpy', False)
        # Obtaining the member 'random' of a type (line 676)
        random_22554 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 676, 12), numpy_22553, 'random')
        # Obtaining the member 'random' of a type (line 676)
        random_22555 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 676, 12), random_22554, 'random')
        # Calling random(args, kwargs) (line 676)
        random_call_result_22562 = invoke(stypy.reporting.localization.Localization(__file__, 676, 12), random_22555, *[tuple_22556], **kwargs_22561)
        
        # Assigning a type to the variable 'x' (line 676)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 676, 8), 'x', random_call_result_22562)
        
        # Assigning a Call to a Name (line 677):
        
        # Call to fftn(...): (line 677)
        # Processing the call arguments (line 677)
        # Getting the type of 'x' (line 677)
        x_22564 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 677, 17), 'x', False)
        # Processing the call keyword arguments (line 677)
        
        # Obtaining an instance of the builtin type 'tuple' (line 677)
        tuple_22565 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 677, 26), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 677)
        # Adding element type (line 677)
        int_22566 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 677, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 677, 26), tuple_22565, int_22566)
        
        keyword_22567 = tuple_22565
        
        # Obtaining an instance of the builtin type 'tuple' (line 677)
        tuple_22568 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 677, 39), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 677)
        # Adding element type (line 677)
        int_22569 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 677, 39), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 677, 39), tuple_22568, int_22569)
        
        keyword_22570 = tuple_22568
        kwargs_22571 = {'shape': keyword_22570, 'axes': keyword_22567}
        # Getting the type of 'fftn' (line 677)
        fftn_22563 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 677, 12), 'fftn', False)
        # Calling fftn(args, kwargs) (line 677)
        fftn_call_result_22572 = invoke(stypy.reporting.localization.Localization(__file__, 677, 12), fftn_22563, *[x_22564], **kwargs_22571)
        
        # Assigning a type to the variable 'y' (line 677)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 677, 8), 'y', fftn_call_result_22572)
        
        # Call to assert_array_almost_equal(...): (line 678)
        # Processing the call arguments (line 678)
        # Getting the type of 'y' (line 678)
        y_22574 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 678, 34), 'y', False)
        
        # Call to fft(...): (line 678)
        # Processing the call arguments (line 678)
        # Getting the type of 'x' (line 678)
        x_22576 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 678, 41), 'x', False)
        # Processing the call keyword arguments (line 678)
        int_22577 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 678, 49), 'int')
        keyword_22578 = int_22577
        int_22579 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 678, 55), 'int')
        keyword_22580 = int_22579
        kwargs_22581 = {'n': keyword_22580, 'axis': keyword_22578}
        # Getting the type of 'fft' (line 678)
        fft_22575 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 678, 37), 'fft', False)
        # Calling fft(args, kwargs) (line 678)
        fft_call_result_22582 = invoke(stypy.reporting.localization.Localization(__file__, 678, 37), fft_22575, *[x_22576], **kwargs_22581)
        
        # Processing the call keyword arguments (line 678)
        kwargs_22583 = {}
        # Getting the type of 'assert_array_almost_equal' (line 678)
        assert_array_almost_equal_22573 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 678, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 678)
        assert_array_almost_equal_call_result_22584 = invoke(stypy.reporting.localization.Localization(__file__, 678, 8), assert_array_almost_equal_22573, *[y_22574, fft_call_result_22582], **kwargs_22583)
        
        
        # Assigning a Call to a Name (line 681):
        
        # Call to random(...): (line 681)
        # Processing the call arguments (line 681)
        
        # Obtaining an instance of the builtin type 'tuple' (line 681)
        tuple_22588 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 681, 33), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 681)
        # Adding element type (line 681)
        int_22589 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 681, 33), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 681, 33), tuple_22588, int_22589)
        # Adding element type (line 681)
        int_22590 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 681, 37), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 681, 33), tuple_22588, int_22590)
        # Adding element type (line 681)
        int_22591 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 681, 40), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 681, 33), tuple_22588, int_22591)
        # Adding element type (line 681)
        int_22592 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 681, 43), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 681, 33), tuple_22588, int_22592)
        
        # Processing the call keyword arguments (line 681)
        kwargs_22593 = {}
        # Getting the type of 'numpy' (line 681)
        numpy_22585 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 681, 12), 'numpy', False)
        # Obtaining the member 'random' of a type (line 681)
        random_22586 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 681, 12), numpy_22585, 'random')
        # Obtaining the member 'random' of a type (line 681)
        random_22587 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 681, 12), random_22586, 'random')
        # Calling random(args, kwargs) (line 681)
        random_call_result_22594 = invoke(stypy.reporting.localization.Localization(__file__, 681, 12), random_22587, *[tuple_22588], **kwargs_22593)
        
        # Assigning a type to the variable 'x' (line 681)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 681, 8), 'x', random_call_result_22594)
        
        # Assigning a Call to a Name (line 682):
        
        # Call to fftn(...): (line 682)
        # Processing the call arguments (line 682)
        # Getting the type of 'x' (line 682)
        x_22596 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 682, 17), 'x', False)
        # Processing the call keyword arguments (line 682)
        
        # Obtaining an instance of the builtin type 'tuple' (line 682)
        tuple_22597 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 682, 26), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 682)
        # Adding element type (line 682)
        int_22598 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 682, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 682, 26), tuple_22597, int_22598)
        
        keyword_22599 = tuple_22597
        
        # Obtaining an instance of the builtin type 'tuple' (line 682)
        tuple_22600 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 682, 39), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 682)
        # Adding element type (line 682)
        int_22601 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 682, 39), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 682, 39), tuple_22600, int_22601)
        
        keyword_22602 = tuple_22600
        kwargs_22603 = {'shape': keyword_22602, 'axes': keyword_22599}
        # Getting the type of 'fftn' (line 682)
        fftn_22595 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 682, 12), 'fftn', False)
        # Calling fftn(args, kwargs) (line 682)
        fftn_call_result_22604 = invoke(stypy.reporting.localization.Localization(__file__, 682, 12), fftn_22595, *[x_22596], **kwargs_22603)
        
        # Assigning a type to the variable 'y' (line 682)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 682, 8), 'y', fftn_call_result_22604)
        
        # Call to assert_array_almost_equal(...): (line 683)
        # Processing the call arguments (line 683)
        # Getting the type of 'y' (line 683)
        y_22606 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 683, 34), 'y', False)
        
        # Call to fft(...): (line 683)
        # Processing the call arguments (line 683)
        # Getting the type of 'x' (line 683)
        x_22608 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 683, 41), 'x', False)
        # Processing the call keyword arguments (line 683)
        int_22609 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 683, 49), 'int')
        keyword_22610 = int_22609
        int_22611 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 683, 55), 'int')
        keyword_22612 = int_22611
        kwargs_22613 = {'n': keyword_22612, 'axis': keyword_22610}
        # Getting the type of 'fft' (line 683)
        fft_22607 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 683, 37), 'fft', False)
        # Calling fft(args, kwargs) (line 683)
        fft_call_result_22614 = invoke(stypy.reporting.localization.Localization(__file__, 683, 37), fft_22607, *[x_22608], **kwargs_22613)
        
        # Processing the call keyword arguments (line 683)
        kwargs_22615 = {}
        # Getting the type of 'assert_array_almost_equal' (line 683)
        assert_array_almost_equal_22605 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 683, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 683)
        assert_array_almost_equal_call_result_22616 = invoke(stypy.reporting.localization.Localization(__file__, 683, 8), assert_array_almost_equal_22605, *[y_22606, fft_call_result_22614], **kwargs_22615)
        
        
        # Assigning a Call to a Name (line 686):
        
        # Call to random(...): (line 686)
        # Processing the call arguments (line 686)
        
        # Obtaining an instance of the builtin type 'tuple' (line 686)
        tuple_22620 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 686, 33), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 686)
        # Adding element type (line 686)
        int_22621 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 686, 33), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 686, 33), tuple_22620, int_22621)
        # Adding element type (line 686)
        int_22622 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 686, 35), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 686, 33), tuple_22620, int_22622)
        # Adding element type (line 686)
        int_22623 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 686, 37), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 686, 33), tuple_22620, int_22623)
        
        # Processing the call keyword arguments (line 686)
        kwargs_22624 = {}
        # Getting the type of 'numpy' (line 686)
        numpy_22617 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 686, 12), 'numpy', False)
        # Obtaining the member 'random' of a type (line 686)
        random_22618 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 686, 12), numpy_22617, 'random')
        # Obtaining the member 'random' of a type (line 686)
        random_22619 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 686, 12), random_22618, 'random')
        # Calling random(args, kwargs) (line 686)
        random_call_result_22625 = invoke(stypy.reporting.localization.Localization(__file__, 686, 12), random_22619, *[tuple_22620], **kwargs_22624)
        
        # Assigning a type to the variable 'x' (line 686)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 686, 8), 'x', random_call_result_22625)
        
        # Assigning a Call to a Name (line 687):
        
        # Call to fftn(...): (line 687)
        # Processing the call arguments (line 687)
        # Getting the type of 'x' (line 687)
        x_22627 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 687, 17), 'x', False)
        # Processing the call keyword arguments (line 687)
        
        # Obtaining an instance of the builtin type 'tuple' (line 687)
        tuple_22628 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 687, 26), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 687)
        # Adding element type (line 687)
        int_22629 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 687, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 687, 26), tuple_22628, int_22629)
        # Adding element type (line 687)
        int_22630 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 687, 29), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 687, 26), tuple_22628, int_22630)
        
        keyword_22631 = tuple_22628
        
        # Obtaining an instance of the builtin type 'tuple' (line 687)
        tuple_22632 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 687, 41), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 687)
        # Adding element type (line 687)
        int_22633 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 687, 41), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 687, 41), tuple_22632, int_22633)
        # Adding element type (line 687)
        int_22634 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 687, 43), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 687, 41), tuple_22632, int_22634)
        
        keyword_22635 = tuple_22632
        kwargs_22636 = {'shape': keyword_22635, 'axes': keyword_22631}
        # Getting the type of 'fftn' (line 687)
        fftn_22626 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 687, 12), 'fftn', False)
        # Calling fftn(args, kwargs) (line 687)
        fftn_call_result_22637 = invoke(stypy.reporting.localization.Localization(__file__, 687, 12), fftn_22626, *[x_22627], **kwargs_22636)
        
        # Assigning a type to the variable 'y' (line 687)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 687, 8), 'y', fftn_call_result_22637)
        
        # Call to assert_array_almost_equal(...): (line 688)
        # Processing the call arguments (line 688)
        # Getting the type of 'y' (line 688)
        y_22639 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 688, 34), 'y', False)
        
        # Call to fftn(...): (line 688)
        # Processing the call arguments (line 688)
        # Getting the type of 'x' (line 688)
        x_22643 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 688, 52), 'x', False)
        # Processing the call keyword arguments (line 688)
        
        # Obtaining an instance of the builtin type 'tuple' (line 688)
        tuple_22644 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 688, 61), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 688)
        # Adding element type (line 688)
        int_22645 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 688, 61), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 688, 61), tuple_22644, int_22645)
        # Adding element type (line 688)
        int_22646 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 688, 65), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 688, 61), tuple_22644, int_22646)
        
        keyword_22647 = tuple_22644
        
        # Obtaining an instance of the builtin type 'tuple' (line 688)
        tuple_22648 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 688, 73), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 688)
        # Adding element type (line 688)
        int_22649 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 688, 73), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 688, 73), tuple_22648, int_22649)
        # Adding element type (line 688)
        int_22650 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 688, 76), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 688, 73), tuple_22648, int_22650)
        
        keyword_22651 = tuple_22648
        kwargs_22652 = {'s': keyword_22651, 'axes': keyword_22647}
        # Getting the type of 'numpy' (line 688)
        numpy_22640 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 688, 37), 'numpy', False)
        # Obtaining the member 'fft' of a type (line 688)
        fft_22641 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 688, 37), numpy_22640, 'fft')
        # Obtaining the member 'fftn' of a type (line 688)
        fftn_22642 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 688, 37), fft_22641, 'fftn')
        # Calling fftn(args, kwargs) (line 688)
        fftn_call_result_22653 = invoke(stypy.reporting.localization.Localization(__file__, 688, 37), fftn_22642, *[x_22643], **kwargs_22652)
        
        # Processing the call keyword arguments (line 688)
        kwargs_22654 = {}
        # Getting the type of 'assert_array_almost_equal' (line 688)
        assert_array_almost_equal_22638 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 688, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 688)
        assert_array_almost_equal_call_result_22655 = invoke(stypy.reporting.localization.Localization(__file__, 688, 8), assert_array_almost_equal_22638, *[y_22639, fftn_call_result_22653], **kwargs_22654)
        
        
        # ################# End of 'test_shape_axes_argument2(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_shape_axes_argument2' in the type store
        # Getting the type of 'stypy_return_type' (line 674)
        stypy_return_type_22656 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 674, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_22656)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_shape_axes_argument2'
        return stypy_return_type_22656


    @norecursion
    def test_shape_argument_more(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_shape_argument_more'
        module_type_store = module_type_store.open_function_context('test_shape_argument_more', 690, 4, False)
        # Assigning a type to the variable 'self' (line 691)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 691, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestFftn.test_shape_argument_more.__dict__.__setitem__('stypy_localization', localization)
        TestFftn.test_shape_argument_more.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestFftn.test_shape_argument_more.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestFftn.test_shape_argument_more.__dict__.__setitem__('stypy_function_name', 'TestFftn.test_shape_argument_more')
        TestFftn.test_shape_argument_more.__dict__.__setitem__('stypy_param_names_list', [])
        TestFftn.test_shape_argument_more.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestFftn.test_shape_argument_more.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestFftn.test_shape_argument_more.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestFftn.test_shape_argument_more.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestFftn.test_shape_argument_more.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestFftn.test_shape_argument_more.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFftn.test_shape_argument_more', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_shape_argument_more', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_shape_argument_more(...)' code ##################

        str_22657 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 691, 8), 'str', 'Test that fftn raises ValueError when s.shape is longer than x.shape')
        
        # Assigning a Call to a Name (line 692):
        
        # Call to zeros(...): (line 692)
        # Processing the call arguments (line 692)
        
        # Obtaining an instance of the builtin type 'tuple' (line 692)
        tuple_22659 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 692, 19), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 692)
        # Adding element type (line 692)
        int_22660 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 692, 19), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 692, 19), tuple_22659, int_22660)
        # Adding element type (line 692)
        int_22661 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 692, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 692, 19), tuple_22659, int_22661)
        # Adding element type (line 692)
        int_22662 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 692, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 692, 19), tuple_22659, int_22662)
        
        # Processing the call keyword arguments (line 692)
        kwargs_22663 = {}
        # Getting the type of 'zeros' (line 692)
        zeros_22658 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 692, 12), 'zeros', False)
        # Calling zeros(args, kwargs) (line 692)
        zeros_call_result_22664 = invoke(stypy.reporting.localization.Localization(__file__, 692, 12), zeros_22658, *[tuple_22659], **kwargs_22663)
        
        # Assigning a type to the variable 'x' (line 692)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 692, 8), 'x', zeros_call_result_22664)
        
        # Call to assert_raises(...): (line 693)
        # Processing the call arguments (line 693)
        # Getting the type of 'ValueError' (line 693)
        ValueError_22666 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 693, 22), 'ValueError', False)
        # Getting the type of 'fftn' (line 693)
        fftn_22667 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 693, 34), 'fftn', False)
        # Getting the type of 'x' (line 693)
        x_22668 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 693, 40), 'x', False)
        # Processing the call keyword arguments (line 693)
        
        # Obtaining an instance of the builtin type 'tuple' (line 693)
        tuple_22669 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 693, 50), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 693)
        # Adding element type (line 693)
        int_22670 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 693, 50), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 693, 50), tuple_22669, int_22670)
        # Adding element type (line 693)
        int_22671 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 693, 53), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 693, 50), tuple_22669, int_22671)
        # Adding element type (line 693)
        int_22672 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 693, 56), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 693, 50), tuple_22669, int_22672)
        # Adding element type (line 693)
        int_22673 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 693, 59), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 693, 50), tuple_22669, int_22673)
        
        keyword_22674 = tuple_22669
        kwargs_22675 = {'shape': keyword_22674}
        # Getting the type of 'assert_raises' (line 693)
        assert_raises_22665 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 693, 8), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 693)
        assert_raises_call_result_22676 = invoke(stypy.reporting.localization.Localization(__file__, 693, 8), assert_raises_22665, *[ValueError_22666, fftn_22667, x_22668], **kwargs_22675)
        
        
        # ################# End of 'test_shape_argument_more(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_shape_argument_more' in the type store
        # Getting the type of 'stypy_return_type' (line 690)
        stypy_return_type_22677 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 690, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_22677)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_shape_argument_more'
        return stypy_return_type_22677


    @norecursion
    def test_invalid_sizes(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_invalid_sizes'
        module_type_store = module_type_store.open_function_context('test_invalid_sizes', 695, 4, False)
        # Assigning a type to the variable 'self' (line 696)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 696, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestFftn.test_invalid_sizes.__dict__.__setitem__('stypy_localization', localization)
        TestFftn.test_invalid_sizes.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestFftn.test_invalid_sizes.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestFftn.test_invalid_sizes.__dict__.__setitem__('stypy_function_name', 'TestFftn.test_invalid_sizes')
        TestFftn.test_invalid_sizes.__dict__.__setitem__('stypy_param_names_list', [])
        TestFftn.test_invalid_sizes.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestFftn.test_invalid_sizes.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestFftn.test_invalid_sizes.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestFftn.test_invalid_sizes.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestFftn.test_invalid_sizes.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestFftn.test_invalid_sizes.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFftn.test_invalid_sizes', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_invalid_sizes', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_invalid_sizes(...)' code ##################

        
        # Call to assert_raises(...): (line 696)
        # Processing the call arguments (line 696)
        # Getting the type of 'ValueError' (line 696)
        ValueError_22679 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 696, 22), 'ValueError', False)
        # Getting the type of 'fftn' (line 696)
        fftn_22680 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 696, 34), 'fftn', False)
        
        # Obtaining an instance of the builtin type 'list' (line 696)
        list_22681 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 696, 40), 'list')
        # Adding type elements to the builtin type 'list' instance (line 696)
        # Adding element type (line 696)
        
        # Obtaining an instance of the builtin type 'list' (line 696)
        list_22682 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 696, 41), 'list')
        # Adding type elements to the builtin type 'list' instance (line 696)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 696, 40), list_22681, list_22682)
        
        # Processing the call keyword arguments (line 696)
        kwargs_22683 = {}
        # Getting the type of 'assert_raises' (line 696)
        assert_raises_22678 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 696, 8), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 696)
        assert_raises_call_result_22684 = invoke(stypy.reporting.localization.Localization(__file__, 696, 8), assert_raises_22678, *[ValueError_22679, fftn_22680, list_22681], **kwargs_22683)
        
        
        # Call to assert_raises(...): (line 697)
        # Processing the call arguments (line 697)
        # Getting the type of 'ValueError' (line 697)
        ValueError_22686 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 697, 22), 'ValueError', False)
        # Getting the type of 'fftn' (line 697)
        fftn_22687 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 697, 34), 'fftn', False)
        
        # Obtaining an instance of the builtin type 'list' (line 697)
        list_22688 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 697, 40), 'list')
        # Adding type elements to the builtin type 'list' instance (line 697)
        # Adding element type (line 697)
        
        # Obtaining an instance of the builtin type 'list' (line 697)
        list_22689 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 697, 41), 'list')
        # Adding type elements to the builtin type 'list' instance (line 697)
        # Adding element type (line 697)
        int_22690 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 697, 42), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 697, 41), list_22689, int_22690)
        # Adding element type (line 697)
        int_22691 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 697, 44), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 697, 41), list_22689, int_22691)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 697, 40), list_22688, list_22689)
        # Adding element type (line 697)
        
        # Obtaining an instance of the builtin type 'list' (line 697)
        list_22692 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 697, 47), 'list')
        # Adding type elements to the builtin type 'list' instance (line 697)
        # Adding element type (line 697)
        int_22693 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 697, 48), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 697, 47), list_22692, int_22693)
        # Adding element type (line 697)
        int_22694 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 697, 50), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 697, 47), list_22692, int_22694)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 697, 40), list_22688, list_22692)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 697)
        tuple_22695 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 697, 56), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 697)
        # Adding element type (line 697)
        int_22696 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 697, 56), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 697, 56), tuple_22695, int_22696)
        # Adding element type (line 697)
        int_22697 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 697, 59), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 697, 56), tuple_22695, int_22697)
        
        # Processing the call keyword arguments (line 697)
        kwargs_22698 = {}
        # Getting the type of 'assert_raises' (line 697)
        assert_raises_22685 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 697, 8), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 697)
        assert_raises_call_result_22699 = invoke(stypy.reporting.localization.Localization(__file__, 697, 8), assert_raises_22685, *[ValueError_22686, fftn_22687, list_22688, tuple_22695], **kwargs_22698)
        
        
        # ################# End of 'test_invalid_sizes(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_invalid_sizes' in the type store
        # Getting the type of 'stypy_return_type' (line 695)
        stypy_return_type_22700 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 695, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_22700)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_invalid_sizes'
        return stypy_return_type_22700


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 543, 0, False)
        # Assigning a type to the variable 'self' (line 544)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 544, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFftn.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'TestFftn' (line 543)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 543, 0), 'TestFftn', TestFftn)
# Declaration of the '_TestIfftn' class

class _TestIfftn(object, ):

    @norecursion
    def setup_method(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'setup_method'
        module_type_store = module_type_store.open_function_context('setup_method', 704, 4, False)
        # Assigning a type to the variable 'self' (line 705)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 705, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        _TestIfftn.setup_method.__dict__.__setitem__('stypy_localization', localization)
        _TestIfftn.setup_method.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        _TestIfftn.setup_method.__dict__.__setitem__('stypy_type_store', module_type_store)
        _TestIfftn.setup_method.__dict__.__setitem__('stypy_function_name', '_TestIfftn.setup_method')
        _TestIfftn.setup_method.__dict__.__setitem__('stypy_param_names_list', [])
        _TestIfftn.setup_method.__dict__.__setitem__('stypy_varargs_param_name', None)
        _TestIfftn.setup_method.__dict__.__setitem__('stypy_kwargs_param_name', None)
        _TestIfftn.setup_method.__dict__.__setitem__('stypy_call_defaults', defaults)
        _TestIfftn.setup_method.__dict__.__setitem__('stypy_call_varargs', varargs)
        _TestIfftn.setup_method.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        _TestIfftn.setup_method.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, '_TestIfftn.setup_method', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'setup_method', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'setup_method(...)' code ##################

        
        # Call to seed(...): (line 705)
        # Processing the call arguments (line 705)
        int_22704 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 705, 23), 'int')
        # Processing the call keyword arguments (line 705)
        kwargs_22705 = {}
        # Getting the type of 'np' (line 705)
        np_22701 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 705, 8), 'np', False)
        # Obtaining the member 'random' of a type (line 705)
        random_22702 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 705, 8), np_22701, 'random')
        # Obtaining the member 'seed' of a type (line 705)
        seed_22703 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 705, 8), random_22702, 'seed')
        # Calling seed(args, kwargs) (line 705)
        seed_call_result_22706 = invoke(stypy.reporting.localization.Localization(__file__, 705, 8), seed_22703, *[int_22704], **kwargs_22705)
        
        
        # ################# End of 'setup_method(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'setup_method' in the type store
        # Getting the type of 'stypy_return_type' (line 704)
        stypy_return_type_22707 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 704, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_22707)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'setup_method'
        return stypy_return_type_22707


    @norecursion
    def test_definition(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_definition'
        module_type_store = module_type_store.open_function_context('test_definition', 707, 4, False)
        # Assigning a type to the variable 'self' (line 708)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 708, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        _TestIfftn.test_definition.__dict__.__setitem__('stypy_localization', localization)
        _TestIfftn.test_definition.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        _TestIfftn.test_definition.__dict__.__setitem__('stypy_type_store', module_type_store)
        _TestIfftn.test_definition.__dict__.__setitem__('stypy_function_name', '_TestIfftn.test_definition')
        _TestIfftn.test_definition.__dict__.__setitem__('stypy_param_names_list', [])
        _TestIfftn.test_definition.__dict__.__setitem__('stypy_varargs_param_name', None)
        _TestIfftn.test_definition.__dict__.__setitem__('stypy_kwargs_param_name', None)
        _TestIfftn.test_definition.__dict__.__setitem__('stypy_call_defaults', defaults)
        _TestIfftn.test_definition.__dict__.__setitem__('stypy_call_varargs', varargs)
        _TestIfftn.test_definition.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        _TestIfftn.test_definition.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, '_TestIfftn.test_definition', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_definition', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_definition(...)' code ##################

        
        # Assigning a Call to a Name (line 708):
        
        # Call to array(...): (line 708)
        # Processing the call arguments (line 708)
        
        # Obtaining an instance of the builtin type 'list' (line 708)
        list_22710 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 708, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 708)
        # Adding element type (line 708)
        
        # Obtaining an instance of the builtin type 'list' (line 708)
        list_22711 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 708, 22), 'list')
        # Adding type elements to the builtin type 'list' instance (line 708)
        # Adding element type (line 708)
        int_22712 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 708, 23), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 708, 22), list_22711, int_22712)
        # Adding element type (line 708)
        int_22713 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 708, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 708, 22), list_22711, int_22713)
        # Adding element type (line 708)
        int_22714 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 708, 27), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 708, 22), list_22711, int_22714)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 708, 21), list_22710, list_22711)
        # Adding element type (line 708)
        
        # Obtaining an instance of the builtin type 'list' (line 708)
        list_22715 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 708, 30), 'list')
        # Adding type elements to the builtin type 'list' instance (line 708)
        # Adding element type (line 708)
        int_22716 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 708, 31), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 708, 30), list_22715, int_22716)
        # Adding element type (line 708)
        int_22717 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 708, 33), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 708, 30), list_22715, int_22717)
        # Adding element type (line 708)
        int_22718 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 708, 35), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 708, 30), list_22715, int_22718)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 708, 21), list_22710, list_22715)
        # Adding element type (line 708)
        
        # Obtaining an instance of the builtin type 'list' (line 708)
        list_22719 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 708, 38), 'list')
        # Adding type elements to the builtin type 'list' instance (line 708)
        # Adding element type (line 708)
        int_22720 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 708, 39), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 708, 38), list_22719, int_22720)
        # Adding element type (line 708)
        int_22721 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 708, 41), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 708, 38), list_22719, int_22721)
        # Adding element type (line 708)
        int_22722 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 708, 43), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 708, 38), list_22719, int_22722)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 708, 21), list_22710, list_22719)
        
        # Processing the call keyword arguments (line 708)
        # Getting the type of 'self' (line 708)
        self_22723 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 708, 54), 'self', False)
        # Obtaining the member 'dtype' of a type (line 708)
        dtype_22724 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 708, 54), self_22723, 'dtype')
        keyword_22725 = dtype_22724
        kwargs_22726 = {'dtype': keyword_22725}
        # Getting the type of 'np' (line 708)
        np_22708 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 708, 12), 'np', False)
        # Obtaining the member 'array' of a type (line 708)
        array_22709 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 708, 12), np_22708, 'array')
        # Calling array(args, kwargs) (line 708)
        array_call_result_22727 = invoke(stypy.reporting.localization.Localization(__file__, 708, 12), array_22709, *[list_22710], **kwargs_22726)
        
        # Assigning a type to the variable 'x' (line 708)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 708, 8), 'x', array_call_result_22727)
        
        # Assigning a Call to a Name (line 709):
        
        # Call to ifftn(...): (line 709)
        # Processing the call arguments (line 709)
        # Getting the type of 'x' (line 709)
        x_22729 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 709, 18), 'x', False)
        # Processing the call keyword arguments (line 709)
        kwargs_22730 = {}
        # Getting the type of 'ifftn' (line 709)
        ifftn_22728 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 709, 12), 'ifftn', False)
        # Calling ifftn(args, kwargs) (line 709)
        ifftn_call_result_22731 = invoke(stypy.reporting.localization.Localization(__file__, 709, 12), ifftn_22728, *[x_22729], **kwargs_22730)
        
        # Assigning a type to the variable 'y' (line 709)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 709, 8), 'y', ifftn_call_result_22731)
        
        # Call to assert_equal(...): (line 710)
        # Processing the call arguments (line 710)
        # Getting the type of 'y' (line 710)
        y_22733 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 710, 21), 'y', False)
        # Obtaining the member 'dtype' of a type (line 710)
        dtype_22734 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 710, 21), y_22733, 'dtype')
        # Getting the type of 'self' (line 710)
        self_22735 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 710, 30), 'self', False)
        # Obtaining the member 'cdtype' of a type (line 710)
        cdtype_22736 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 710, 30), self_22735, 'cdtype')
        # Processing the call keyword arguments (line 710)
        kwargs_22737 = {}
        # Getting the type of 'assert_equal' (line 710)
        assert_equal_22732 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 710, 8), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 710)
        assert_equal_call_result_22738 = invoke(stypy.reporting.localization.Localization(__file__, 710, 8), assert_equal_22732, *[dtype_22734, cdtype_22736], **kwargs_22737)
        
        
        # Call to assert_array_almost_equal_nulp(...): (line 711)
        # Processing the call arguments (line 711)
        # Getting the type of 'y' (line 711)
        y_22740 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 711, 39), 'y', False)
        
        # Call to direct_idftn(...): (line 711)
        # Processing the call arguments (line 711)
        # Getting the type of 'x' (line 711)
        x_22742 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 711, 54), 'x', False)
        # Processing the call keyword arguments (line 711)
        kwargs_22743 = {}
        # Getting the type of 'direct_idftn' (line 711)
        direct_idftn_22741 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 711, 41), 'direct_idftn', False)
        # Calling direct_idftn(args, kwargs) (line 711)
        direct_idftn_call_result_22744 = invoke(stypy.reporting.localization.Localization(__file__, 711, 41), direct_idftn_22741, *[x_22742], **kwargs_22743)
        
        # Getting the type of 'self' (line 711)
        self_22745 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 711, 57), 'self', False)
        # Obtaining the member 'maxnlp' of a type (line 711)
        maxnlp_22746 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 711, 57), self_22745, 'maxnlp')
        # Processing the call keyword arguments (line 711)
        kwargs_22747 = {}
        # Getting the type of 'assert_array_almost_equal_nulp' (line 711)
        assert_array_almost_equal_nulp_22739 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 711, 8), 'assert_array_almost_equal_nulp', False)
        # Calling assert_array_almost_equal_nulp(args, kwargs) (line 711)
        assert_array_almost_equal_nulp_call_result_22748 = invoke(stypy.reporting.localization.Localization(__file__, 711, 8), assert_array_almost_equal_nulp_22739, *[y_22740, direct_idftn_call_result_22744, maxnlp_22746], **kwargs_22747)
        
        
        # Assigning a Call to a Name (line 712):
        
        # Call to random(...): (line 712)
        # Processing the call arguments (line 712)
        
        # Obtaining an instance of the builtin type 'tuple' (line 712)
        tuple_22750 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 712, 20), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 712)
        # Adding element type (line 712)
        int_22751 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 712, 20), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 712, 20), tuple_22750, int_22751)
        # Adding element type (line 712)
        int_22752 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 712, 23), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 712, 20), tuple_22750, int_22752)
        
        # Processing the call keyword arguments (line 712)
        kwargs_22753 = {}
        # Getting the type of 'random' (line 712)
        random_22749 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 712, 12), 'random', False)
        # Calling random(args, kwargs) (line 712)
        random_call_result_22754 = invoke(stypy.reporting.localization.Localization(__file__, 712, 12), random_22749, *[tuple_22750], **kwargs_22753)
        
        # Assigning a type to the variable 'x' (line 712)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 712, 8), 'x', random_call_result_22754)
        
        # Call to assert_array_almost_equal_nulp(...): (line 713)
        # Processing the call arguments (line 713)
        
        # Call to ifftn(...): (line 713)
        # Processing the call arguments (line 713)
        # Getting the type of 'x' (line 713)
        x_22757 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 713, 45), 'x', False)
        # Processing the call keyword arguments (line 713)
        kwargs_22758 = {}
        # Getting the type of 'ifftn' (line 713)
        ifftn_22756 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 713, 39), 'ifftn', False)
        # Calling ifftn(args, kwargs) (line 713)
        ifftn_call_result_22759 = invoke(stypy.reporting.localization.Localization(__file__, 713, 39), ifftn_22756, *[x_22757], **kwargs_22758)
        
        
        # Call to direct_idftn(...): (line 713)
        # Processing the call arguments (line 713)
        # Getting the type of 'x' (line 713)
        x_22761 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 713, 61), 'x', False)
        # Processing the call keyword arguments (line 713)
        kwargs_22762 = {}
        # Getting the type of 'direct_idftn' (line 713)
        direct_idftn_22760 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 713, 48), 'direct_idftn', False)
        # Calling direct_idftn(args, kwargs) (line 713)
        direct_idftn_call_result_22763 = invoke(stypy.reporting.localization.Localization(__file__, 713, 48), direct_idftn_22760, *[x_22761], **kwargs_22762)
        
        # Getting the type of 'self' (line 713)
        self_22764 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 713, 64), 'self', False)
        # Obtaining the member 'maxnlp' of a type (line 713)
        maxnlp_22765 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 713, 64), self_22764, 'maxnlp')
        # Processing the call keyword arguments (line 713)
        kwargs_22766 = {}
        # Getting the type of 'assert_array_almost_equal_nulp' (line 713)
        assert_array_almost_equal_nulp_22755 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 713, 8), 'assert_array_almost_equal_nulp', False)
        # Calling assert_array_almost_equal_nulp(args, kwargs) (line 713)
        assert_array_almost_equal_nulp_call_result_22767 = invoke(stypy.reporting.localization.Localization(__file__, 713, 8), assert_array_almost_equal_nulp_22755, *[ifftn_call_result_22759, direct_idftn_call_result_22763, maxnlp_22765], **kwargs_22766)
        
        
        # Assigning a Call to a Name (line 714):
        
        # Call to random(...): (line 714)
        # Processing the call arguments (line 714)
        
        # Obtaining an instance of the builtin type 'tuple' (line 714)
        tuple_22769 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 714, 20), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 714)
        # Adding element type (line 714)
        int_22770 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 714, 20), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 714, 20), tuple_22769, int_22770)
        # Adding element type (line 714)
        int_22771 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 714, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 714, 20), tuple_22769, int_22771)
        # Adding element type (line 714)
        int_22772 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 714, 24), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 714, 20), tuple_22769, int_22772)
        # Adding element type (line 714)
        int_22773 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 714, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 714, 20), tuple_22769, int_22773)
        
        # Processing the call keyword arguments (line 714)
        kwargs_22774 = {}
        # Getting the type of 'random' (line 714)
        random_22768 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 714, 12), 'random', False)
        # Calling random(args, kwargs) (line 714)
        random_call_result_22775 = invoke(stypy.reporting.localization.Localization(__file__, 714, 12), random_22768, *[tuple_22769], **kwargs_22774)
        
        # Assigning a type to the variable 'x' (line 714)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 714, 8), 'x', random_call_result_22775)
        
        # Call to assert_array_almost_equal_nulp(...): (line 715)
        # Processing the call arguments (line 715)
        
        # Call to ifftn(...): (line 715)
        # Processing the call arguments (line 715)
        # Getting the type of 'x' (line 715)
        x_22778 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 715, 45), 'x', False)
        # Processing the call keyword arguments (line 715)
        kwargs_22779 = {}
        # Getting the type of 'ifftn' (line 715)
        ifftn_22777 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 715, 39), 'ifftn', False)
        # Calling ifftn(args, kwargs) (line 715)
        ifftn_call_result_22780 = invoke(stypy.reporting.localization.Localization(__file__, 715, 39), ifftn_22777, *[x_22778], **kwargs_22779)
        
        
        # Call to direct_idftn(...): (line 715)
        # Processing the call arguments (line 715)
        # Getting the type of 'x' (line 715)
        x_22782 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 715, 61), 'x', False)
        # Processing the call keyword arguments (line 715)
        kwargs_22783 = {}
        # Getting the type of 'direct_idftn' (line 715)
        direct_idftn_22781 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 715, 48), 'direct_idftn', False)
        # Calling direct_idftn(args, kwargs) (line 715)
        direct_idftn_call_result_22784 = invoke(stypy.reporting.localization.Localization(__file__, 715, 48), direct_idftn_22781, *[x_22782], **kwargs_22783)
        
        # Getting the type of 'self' (line 715)
        self_22785 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 715, 64), 'self', False)
        # Obtaining the member 'maxnlp' of a type (line 715)
        maxnlp_22786 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 715, 64), self_22785, 'maxnlp')
        # Processing the call keyword arguments (line 715)
        kwargs_22787 = {}
        # Getting the type of 'assert_array_almost_equal_nulp' (line 715)
        assert_array_almost_equal_nulp_22776 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 715, 8), 'assert_array_almost_equal_nulp', False)
        # Calling assert_array_almost_equal_nulp(args, kwargs) (line 715)
        assert_array_almost_equal_nulp_call_result_22788 = invoke(stypy.reporting.localization.Localization(__file__, 715, 8), assert_array_almost_equal_nulp_22776, *[ifftn_call_result_22780, direct_idftn_call_result_22784, maxnlp_22786], **kwargs_22787)
        
        
        # ################# End of 'test_definition(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_definition' in the type store
        # Getting the type of 'stypy_return_type' (line 707)
        stypy_return_type_22789 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 707, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_22789)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_definition'
        return stypy_return_type_22789


    @norecursion
    def test_random_complex(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_random_complex'
        module_type_store = module_type_store.open_function_context('test_random_complex', 717, 4, False)
        # Assigning a type to the variable 'self' (line 718)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 718, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        _TestIfftn.test_random_complex.__dict__.__setitem__('stypy_localization', localization)
        _TestIfftn.test_random_complex.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        _TestIfftn.test_random_complex.__dict__.__setitem__('stypy_type_store', module_type_store)
        _TestIfftn.test_random_complex.__dict__.__setitem__('stypy_function_name', '_TestIfftn.test_random_complex')
        _TestIfftn.test_random_complex.__dict__.__setitem__('stypy_param_names_list', [])
        _TestIfftn.test_random_complex.__dict__.__setitem__('stypy_varargs_param_name', None)
        _TestIfftn.test_random_complex.__dict__.__setitem__('stypy_kwargs_param_name', None)
        _TestIfftn.test_random_complex.__dict__.__setitem__('stypy_call_defaults', defaults)
        _TestIfftn.test_random_complex.__dict__.__setitem__('stypy_call_varargs', varargs)
        _TestIfftn.test_random_complex.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        _TestIfftn.test_random_complex.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, '_TestIfftn.test_random_complex', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_random_complex', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_random_complex(...)' code ##################

        
        
        # Obtaining an instance of the builtin type 'list' (line 718)
        list_22790 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 718, 20), 'list')
        # Adding type elements to the builtin type 'list' instance (line 718)
        # Adding element type (line 718)
        int_22791 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 718, 21), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 718, 20), list_22790, int_22791)
        # Adding element type (line 718)
        int_22792 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 718, 23), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 718, 20), list_22790, int_22792)
        # Adding element type (line 718)
        int_22793 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 718, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 718, 20), list_22790, int_22793)
        # Adding element type (line 718)
        int_22794 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 718, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 718, 20), list_22790, int_22794)
        # Adding element type (line 718)
        int_22795 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 718, 31), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 718, 20), list_22790, int_22795)
        # Adding element type (line 718)
        int_22796 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 718, 34), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 718, 20), list_22790, int_22796)
        
        # Testing the type of a for loop iterable (line 718)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 718, 8), list_22790)
        # Getting the type of the for loop variable (line 718)
        for_loop_var_22797 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 718, 8), list_22790)
        # Assigning a type to the variable 'size' (line 718)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 718, 8), 'size', for_loop_var_22797)
        # SSA begins for a for statement (line 718)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a BinOp to a Name (line 719):
        
        # Call to random(...): (line 719)
        # Processing the call arguments (line 719)
        
        # Obtaining an instance of the builtin type 'list' (line 719)
        list_22799 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 719, 23), 'list')
        # Adding type elements to the builtin type 'list' instance (line 719)
        # Adding element type (line 719)
        # Getting the type of 'size' (line 719)
        size_22800 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 719, 24), 'size', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 719, 23), list_22799, size_22800)
        # Adding element type (line 719)
        # Getting the type of 'size' (line 719)
        size_22801 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 719, 29), 'size', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 719, 23), list_22799, size_22801)
        
        # Processing the call keyword arguments (line 719)
        kwargs_22802 = {}
        # Getting the type of 'random' (line 719)
        random_22798 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 719, 16), 'random', False)
        # Calling random(args, kwargs) (line 719)
        random_call_result_22803 = invoke(stypy.reporting.localization.Localization(__file__, 719, 16), random_22798, *[list_22799], **kwargs_22802)
        
        complex_22804 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 719, 38), 'complex')
        
        # Call to random(...): (line 719)
        # Processing the call arguments (line 719)
        
        # Obtaining an instance of the builtin type 'list' (line 719)
        list_22806 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 719, 48), 'list')
        # Adding type elements to the builtin type 'list' instance (line 719)
        # Adding element type (line 719)
        # Getting the type of 'size' (line 719)
        size_22807 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 719, 49), 'size', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 719, 48), list_22806, size_22807)
        # Adding element type (line 719)
        # Getting the type of 'size' (line 719)
        size_22808 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 719, 54), 'size', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 719, 48), list_22806, size_22808)
        
        # Processing the call keyword arguments (line 719)
        kwargs_22809 = {}
        # Getting the type of 'random' (line 719)
        random_22805 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 719, 41), 'random', False)
        # Calling random(args, kwargs) (line 719)
        random_call_result_22810 = invoke(stypy.reporting.localization.Localization(__file__, 719, 41), random_22805, *[list_22806], **kwargs_22809)
        
        # Applying the binary operator '*' (line 719)
        result_mul_22811 = python_operator(stypy.reporting.localization.Localization(__file__, 719, 38), '*', complex_22804, random_call_result_22810)
        
        # Applying the binary operator '+' (line 719)
        result_add_22812 = python_operator(stypy.reporting.localization.Localization(__file__, 719, 16), '+', random_call_result_22803, result_mul_22811)
        
        # Assigning a type to the variable 'x' (line 719)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 719, 12), 'x', result_add_22812)
        
        # Call to assert_array_almost_equal_nulp(...): (line 720)
        # Processing the call arguments (line 720)
        
        # Call to ifftn(...): (line 720)
        # Processing the call arguments (line 720)
        
        # Call to fftn(...): (line 720)
        # Processing the call arguments (line 720)
        # Getting the type of 'x' (line 720)
        x_22816 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 720, 54), 'x', False)
        # Processing the call keyword arguments (line 720)
        kwargs_22817 = {}
        # Getting the type of 'fftn' (line 720)
        fftn_22815 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 720, 49), 'fftn', False)
        # Calling fftn(args, kwargs) (line 720)
        fftn_call_result_22818 = invoke(stypy.reporting.localization.Localization(__file__, 720, 49), fftn_22815, *[x_22816], **kwargs_22817)
        
        # Processing the call keyword arguments (line 720)
        kwargs_22819 = {}
        # Getting the type of 'ifftn' (line 720)
        ifftn_22814 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 720, 43), 'ifftn', False)
        # Calling ifftn(args, kwargs) (line 720)
        ifftn_call_result_22820 = invoke(stypy.reporting.localization.Localization(__file__, 720, 43), ifftn_22814, *[fftn_call_result_22818], **kwargs_22819)
        
        # Getting the type of 'x' (line 720)
        x_22821 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 720, 58), 'x', False)
        # Getting the type of 'self' (line 720)
        self_22822 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 720, 60), 'self', False)
        # Obtaining the member 'maxnlp' of a type (line 720)
        maxnlp_22823 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 720, 60), self_22822, 'maxnlp')
        # Processing the call keyword arguments (line 720)
        kwargs_22824 = {}
        # Getting the type of 'assert_array_almost_equal_nulp' (line 720)
        assert_array_almost_equal_nulp_22813 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 720, 12), 'assert_array_almost_equal_nulp', False)
        # Calling assert_array_almost_equal_nulp(args, kwargs) (line 720)
        assert_array_almost_equal_nulp_call_result_22825 = invoke(stypy.reporting.localization.Localization(__file__, 720, 12), assert_array_almost_equal_nulp_22813, *[ifftn_call_result_22820, x_22821, maxnlp_22823], **kwargs_22824)
        
        
        # Call to assert_array_almost_equal_nulp(...): (line 721)
        # Processing the call arguments (line 721)
        
        # Call to fftn(...): (line 721)
        # Processing the call arguments (line 721)
        
        # Call to ifftn(...): (line 721)
        # Processing the call arguments (line 721)
        # Getting the type of 'x' (line 721)
        x_22829 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 54), 'x', False)
        # Processing the call keyword arguments (line 721)
        kwargs_22830 = {}
        # Getting the type of 'ifftn' (line 721)
        ifftn_22828 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 48), 'ifftn', False)
        # Calling ifftn(args, kwargs) (line 721)
        ifftn_call_result_22831 = invoke(stypy.reporting.localization.Localization(__file__, 721, 48), ifftn_22828, *[x_22829], **kwargs_22830)
        
        # Processing the call keyword arguments (line 721)
        kwargs_22832 = {}
        # Getting the type of 'fftn' (line 721)
        fftn_22827 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 43), 'fftn', False)
        # Calling fftn(args, kwargs) (line 721)
        fftn_call_result_22833 = invoke(stypy.reporting.localization.Localization(__file__, 721, 43), fftn_22827, *[ifftn_call_result_22831], **kwargs_22832)
        
        # Getting the type of 'x' (line 721)
        x_22834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 58), 'x', False)
        # Getting the type of 'self' (line 721)
        self_22835 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 60), 'self', False)
        # Obtaining the member 'maxnlp' of a type (line 721)
        maxnlp_22836 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 721, 60), self_22835, 'maxnlp')
        # Processing the call keyword arguments (line 721)
        kwargs_22837 = {}
        # Getting the type of 'assert_array_almost_equal_nulp' (line 721)
        assert_array_almost_equal_nulp_22826 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 12), 'assert_array_almost_equal_nulp', False)
        # Calling assert_array_almost_equal_nulp(args, kwargs) (line 721)
        assert_array_almost_equal_nulp_call_result_22838 = invoke(stypy.reporting.localization.Localization(__file__, 721, 12), assert_array_almost_equal_nulp_22826, *[fftn_call_result_22833, x_22834, maxnlp_22836], **kwargs_22837)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_random_complex(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_random_complex' in the type store
        # Getting the type of 'stypy_return_type' (line 717)
        stypy_return_type_22839 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 717, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_22839)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_random_complex'
        return stypy_return_type_22839


    @norecursion
    def test_invalid_sizes(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_invalid_sizes'
        module_type_store = module_type_store.open_function_context('test_invalid_sizes', 723, 4, False)
        # Assigning a type to the variable 'self' (line 724)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 724, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        _TestIfftn.test_invalid_sizes.__dict__.__setitem__('stypy_localization', localization)
        _TestIfftn.test_invalid_sizes.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        _TestIfftn.test_invalid_sizes.__dict__.__setitem__('stypy_type_store', module_type_store)
        _TestIfftn.test_invalid_sizes.__dict__.__setitem__('stypy_function_name', '_TestIfftn.test_invalid_sizes')
        _TestIfftn.test_invalid_sizes.__dict__.__setitem__('stypy_param_names_list', [])
        _TestIfftn.test_invalid_sizes.__dict__.__setitem__('stypy_varargs_param_name', None)
        _TestIfftn.test_invalid_sizes.__dict__.__setitem__('stypy_kwargs_param_name', None)
        _TestIfftn.test_invalid_sizes.__dict__.__setitem__('stypy_call_defaults', defaults)
        _TestIfftn.test_invalid_sizes.__dict__.__setitem__('stypy_call_varargs', varargs)
        _TestIfftn.test_invalid_sizes.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        _TestIfftn.test_invalid_sizes.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, '_TestIfftn.test_invalid_sizes', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_invalid_sizes', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_invalid_sizes(...)' code ##################

        
        # Call to assert_raises(...): (line 724)
        # Processing the call arguments (line 724)
        # Getting the type of 'ValueError' (line 724)
        ValueError_22841 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 724, 22), 'ValueError', False)
        # Getting the type of 'ifftn' (line 724)
        ifftn_22842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 724, 34), 'ifftn', False)
        
        # Obtaining an instance of the builtin type 'list' (line 724)
        list_22843 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 724, 41), 'list')
        # Adding type elements to the builtin type 'list' instance (line 724)
        # Adding element type (line 724)
        
        # Obtaining an instance of the builtin type 'list' (line 724)
        list_22844 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 724, 42), 'list')
        # Adding type elements to the builtin type 'list' instance (line 724)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 724, 41), list_22843, list_22844)
        
        # Processing the call keyword arguments (line 724)
        kwargs_22845 = {}
        # Getting the type of 'assert_raises' (line 724)
        assert_raises_22840 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 724, 8), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 724)
        assert_raises_call_result_22846 = invoke(stypy.reporting.localization.Localization(__file__, 724, 8), assert_raises_22840, *[ValueError_22841, ifftn_22842, list_22843], **kwargs_22845)
        
        
        # Call to assert_raises(...): (line 725)
        # Processing the call arguments (line 725)
        # Getting the type of 'ValueError' (line 725)
        ValueError_22848 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 725, 22), 'ValueError', False)
        # Getting the type of 'ifftn' (line 725)
        ifftn_22849 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 725, 34), 'ifftn', False)
        
        # Obtaining an instance of the builtin type 'list' (line 725)
        list_22850 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 725, 41), 'list')
        # Adding type elements to the builtin type 'list' instance (line 725)
        # Adding element type (line 725)
        
        # Obtaining an instance of the builtin type 'list' (line 725)
        list_22851 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 725, 42), 'list')
        # Adding type elements to the builtin type 'list' instance (line 725)
        # Adding element type (line 725)
        int_22852 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 725, 43), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 725, 42), list_22851, int_22852)
        # Adding element type (line 725)
        int_22853 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 725, 45), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 725, 42), list_22851, int_22853)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 725, 41), list_22850, list_22851)
        # Adding element type (line 725)
        
        # Obtaining an instance of the builtin type 'list' (line 725)
        list_22854 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 725, 48), 'list')
        # Adding type elements to the builtin type 'list' instance (line 725)
        # Adding element type (line 725)
        int_22855 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 725, 49), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 725, 48), list_22854, int_22855)
        # Adding element type (line 725)
        int_22856 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 725, 51), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 725, 48), list_22854, int_22856)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 725, 41), list_22850, list_22854)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 725)
        tuple_22857 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 725, 57), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 725)
        # Adding element type (line 725)
        int_22858 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 725, 57), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 725, 57), tuple_22857, int_22858)
        # Adding element type (line 725)
        int_22859 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 725, 60), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 725, 57), tuple_22857, int_22859)
        
        # Processing the call keyword arguments (line 725)
        kwargs_22860 = {}
        # Getting the type of 'assert_raises' (line 725)
        assert_raises_22847 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 725, 8), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 725)
        assert_raises_call_result_22861 = invoke(stypy.reporting.localization.Localization(__file__, 725, 8), assert_raises_22847, *[ValueError_22848, ifftn_22849, list_22850, tuple_22857], **kwargs_22860)
        
        
        # ################# End of 'test_invalid_sizes(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_invalid_sizes' in the type store
        # Getting the type of 'stypy_return_type' (line 723)
        stypy_return_type_22862 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 723, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_22862)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_invalid_sizes'
        return stypy_return_type_22862


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 700, 0, False)
        # Assigning a type to the variable 'self' (line 701)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 701, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, '_TestIfftn.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable '_TestIfftn' (line 700)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 700, 0), '_TestIfftn', _TestIfftn)

# Assigning a Name to a Name (line 701):
# Getting the type of 'None' (line 701)
None_22863 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 701, 12), 'None')
# Getting the type of '_TestIfftn'
_TestIfftn_22864 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), '_TestIfftn')
# Setting the type of the member 'dtype' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), _TestIfftn_22864, 'dtype', None_22863)

# Assigning a Name to a Name (line 702):
# Getting the type of 'None' (line 702)
None_22865 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 702, 13), 'None')
# Getting the type of '_TestIfftn'
_TestIfftn_22866 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), '_TestIfftn')
# Setting the type of the member 'cdtype' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), _TestIfftn_22866, 'cdtype', None_22865)
# Declaration of the 'TestIfftnDouble' class
# Getting the type of '_TestIfftn' (line 728)
_TestIfftn_22867 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 728, 22), '_TestIfftn')

class TestIfftnDouble(_TestIfftn_22867, ):
    pass

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 728, 0, False)
        # Assigning a type to the variable 'self' (line 729)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 729, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestIfftnDouble.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'TestIfftnDouble' (line 728)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 728, 0), 'TestIfftnDouble', TestIfftnDouble)

# Assigning a Attribute to a Name (line 729):
# Getting the type of 'np' (line 729)
np_22868 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 12), 'np')
# Obtaining the member 'float64' of a type (line 729)
float64_22869 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 729, 12), np_22868, 'float64')
# Getting the type of 'TestIfftnDouble'
TestIfftnDouble_22870 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'TestIfftnDouble')
# Setting the type of the member 'dtype' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), TestIfftnDouble_22870, 'dtype', float64_22869)

# Assigning a Attribute to a Name (line 730):
# Getting the type of 'np' (line 730)
np_22871 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 730, 13), 'np')
# Obtaining the member 'complex128' of a type (line 730)
complex128_22872 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 730, 13), np_22871, 'complex128')
# Getting the type of 'TestIfftnDouble'
TestIfftnDouble_22873 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'TestIfftnDouble')
# Setting the type of the member 'cdtype' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), TestIfftnDouble_22873, 'cdtype', complex128_22872)

# Assigning a Num to a Name (line 731):
int_22874 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 731, 13), 'int')
# Getting the type of 'TestIfftnDouble'
TestIfftnDouble_22875 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'TestIfftnDouble')
# Setting the type of the member 'maxnlp' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), TestIfftnDouble_22875, 'maxnlp', int_22874)
# Declaration of the 'TestIfftnSingle' class
# Getting the type of '_TestIfftn' (line 734)
_TestIfftn_22876 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 734, 22), '_TestIfftn')

class TestIfftnSingle(_TestIfftn_22876, ):
    pass

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 734, 0, False)
        # Assigning a type to the variable 'self' (line 735)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 735, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestIfftnSingle.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'TestIfftnSingle' (line 734)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 734, 0), 'TestIfftnSingle', TestIfftnSingle)

# Assigning a Attribute to a Name (line 735):
# Getting the type of 'np' (line 735)
np_22877 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 735, 12), 'np')
# Obtaining the member 'float32' of a type (line 735)
float32_22878 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 735, 12), np_22877, 'float32')
# Getting the type of 'TestIfftnSingle'
TestIfftnSingle_22879 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'TestIfftnSingle')
# Setting the type of the member 'dtype' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), TestIfftnSingle_22879, 'dtype', float32_22878)

# Assigning a Attribute to a Name (line 736):
# Getting the type of 'np' (line 736)
np_22880 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 736, 13), 'np')
# Obtaining the member 'complex64' of a type (line 736)
complex64_22881 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 736, 13), np_22880, 'complex64')
# Getting the type of 'TestIfftnSingle'
TestIfftnSingle_22882 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'TestIfftnSingle')
# Setting the type of the member 'cdtype' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), TestIfftnSingle_22882, 'cdtype', complex64_22881)

# Assigning a Num to a Name (line 737):
int_22883 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 737, 13), 'int')
# Getting the type of 'TestIfftnSingle'
TestIfftnSingle_22884 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'TestIfftnSingle')
# Setting the type of the member 'maxnlp' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), TestIfftnSingle_22884, 'maxnlp', int_22883)
# Declaration of the 'TestLongDoubleFailure' class

class TestLongDoubleFailure(object, ):

    @norecursion
    def setup_method(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'setup_method'
        module_type_store = module_type_store.open_function_context('setup_method', 741, 4, False)
        # Assigning a type to the variable 'self' (line 742)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 742, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestLongDoubleFailure.setup_method.__dict__.__setitem__('stypy_localization', localization)
        TestLongDoubleFailure.setup_method.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestLongDoubleFailure.setup_method.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestLongDoubleFailure.setup_method.__dict__.__setitem__('stypy_function_name', 'TestLongDoubleFailure.setup_method')
        TestLongDoubleFailure.setup_method.__dict__.__setitem__('stypy_param_names_list', [])
        TestLongDoubleFailure.setup_method.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestLongDoubleFailure.setup_method.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestLongDoubleFailure.setup_method.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestLongDoubleFailure.setup_method.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestLongDoubleFailure.setup_method.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestLongDoubleFailure.setup_method.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestLongDoubleFailure.setup_method', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'setup_method', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'setup_method(...)' code ##################

        
        # Call to seed(...): (line 742)
        # Processing the call arguments (line 742)
        int_22888 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 742, 23), 'int')
        # Processing the call keyword arguments (line 742)
        kwargs_22889 = {}
        # Getting the type of 'np' (line 742)
        np_22885 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 742, 8), 'np', False)
        # Obtaining the member 'random' of a type (line 742)
        random_22886 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 742, 8), np_22885, 'random')
        # Obtaining the member 'seed' of a type (line 742)
        seed_22887 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 742, 8), random_22886, 'seed')
        # Calling seed(args, kwargs) (line 742)
        seed_call_result_22890 = invoke(stypy.reporting.localization.Localization(__file__, 742, 8), seed_22887, *[int_22888], **kwargs_22889)
        
        
        # ################# End of 'setup_method(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'setup_method' in the type store
        # Getting the type of 'stypy_return_type' (line 741)
        stypy_return_type_22891 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 741, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_22891)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'setup_method'
        return stypy_return_type_22891


    @norecursion
    def test_complex(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_complex'
        module_type_store = module_type_store.open_function_context('test_complex', 744, 4, False)
        # Assigning a type to the variable 'self' (line 745)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 745, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestLongDoubleFailure.test_complex.__dict__.__setitem__('stypy_localization', localization)
        TestLongDoubleFailure.test_complex.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestLongDoubleFailure.test_complex.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestLongDoubleFailure.test_complex.__dict__.__setitem__('stypy_function_name', 'TestLongDoubleFailure.test_complex')
        TestLongDoubleFailure.test_complex.__dict__.__setitem__('stypy_param_names_list', [])
        TestLongDoubleFailure.test_complex.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestLongDoubleFailure.test_complex.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestLongDoubleFailure.test_complex.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestLongDoubleFailure.test_complex.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestLongDoubleFailure.test_complex.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestLongDoubleFailure.test_complex.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestLongDoubleFailure.test_complex', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_complex', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_complex(...)' code ##################

        
        
        
        # Call to dtype(...): (line 745)
        # Processing the call arguments (line 745)
        # Getting the type of 'np' (line 745)
        np_22894 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 745, 20), 'np', False)
        # Obtaining the member 'longcomplex' of a type (line 745)
        longcomplex_22895 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 745, 20), np_22894, 'longcomplex')
        # Processing the call keyword arguments (line 745)
        kwargs_22896 = {}
        # Getting the type of 'np' (line 745)
        np_22892 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 745, 11), 'np', False)
        # Obtaining the member 'dtype' of a type (line 745)
        dtype_22893 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 745, 11), np_22892, 'dtype')
        # Calling dtype(args, kwargs) (line 745)
        dtype_call_result_22897 = invoke(stypy.reporting.localization.Localization(__file__, 745, 11), dtype_22893, *[longcomplex_22895], **kwargs_22896)
        
        # Obtaining the member 'itemsize' of a type (line 745)
        itemsize_22898 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 745, 11), dtype_call_result_22897, 'itemsize')
        
        # Call to dtype(...): (line 745)
        # Processing the call arguments (line 745)
        # Getting the type of 'complex' (line 745)
        complex_22901 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 745, 57), 'complex', False)
        # Processing the call keyword arguments (line 745)
        kwargs_22902 = {}
        # Getting the type of 'np' (line 745)
        np_22899 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 745, 48), 'np', False)
        # Obtaining the member 'dtype' of a type (line 745)
        dtype_22900 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 745, 48), np_22899, 'dtype')
        # Calling dtype(args, kwargs) (line 745)
        dtype_call_result_22903 = invoke(stypy.reporting.localization.Localization(__file__, 745, 48), dtype_22900, *[complex_22901], **kwargs_22902)
        
        # Obtaining the member 'itemsize' of a type (line 745)
        itemsize_22904 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 745, 48), dtype_call_result_22903, 'itemsize')
        # Applying the binary operator '==' (line 745)
        result_eq_22905 = python_operator(stypy.reporting.localization.Localization(__file__, 745, 11), '==', itemsize_22898, itemsize_22904)
        
        # Testing the type of an if condition (line 745)
        if_condition_22906 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 745, 8), result_eq_22905)
        # Assigning a type to the variable 'if_condition_22906' (line 745)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 745, 8), 'if_condition_22906', if_condition_22906)
        # SSA begins for if statement (line 745)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        # Assigning a type to the variable 'stypy_return_type' (line 747)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 747, 12), 'stypy_return_type', types.NoneType)
        # SSA join for if statement (line 745)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a BinOp to a Name (line 749):
        
        # Call to astype(...): (line 749)
        # Processing the call arguments (line 749)
        # Getting the type of 'np' (line 749)
        np_22914 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 749, 39), 'np', False)
        # Obtaining the member 'longdouble' of a type (line 749)
        longdouble_22915 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 749, 39), np_22914, 'longdouble')
        # Processing the call keyword arguments (line 749)
        kwargs_22916 = {}
        
        # Call to randn(...): (line 749)
        # Processing the call arguments (line 749)
        int_22910 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 749, 28), 'int')
        # Processing the call keyword arguments (line 749)
        kwargs_22911 = {}
        # Getting the type of 'np' (line 749)
        np_22907 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 749, 12), 'np', False)
        # Obtaining the member 'random' of a type (line 749)
        random_22908 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 749, 12), np_22907, 'random')
        # Obtaining the member 'randn' of a type (line 749)
        randn_22909 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 749, 12), random_22908, 'randn')
        # Calling randn(args, kwargs) (line 749)
        randn_call_result_22912 = invoke(stypy.reporting.localization.Localization(__file__, 749, 12), randn_22909, *[int_22910], **kwargs_22911)
        
        # Obtaining the member 'astype' of a type (line 749)
        astype_22913 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 749, 12), randn_call_result_22912, 'astype')
        # Calling astype(args, kwargs) (line 749)
        astype_call_result_22917 = invoke(stypy.reporting.localization.Localization(__file__, 749, 12), astype_22913, *[longdouble_22915], **kwargs_22916)
        
        complex_22918 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 750, 16), 'complex')
        
        # Call to astype(...): (line 750)
        # Processing the call arguments (line 750)
        # Getting the type of 'np' (line 750)
        np_22926 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 750, 48), 'np', False)
        # Obtaining the member 'longdouble' of a type (line 750)
        longdouble_22927 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 750, 48), np_22926, 'longdouble')
        # Processing the call keyword arguments (line 750)
        kwargs_22928 = {}
        
        # Call to randn(...): (line 750)
        # Processing the call arguments (line 750)
        int_22922 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 750, 37), 'int')
        # Processing the call keyword arguments (line 750)
        kwargs_22923 = {}
        # Getting the type of 'np' (line 750)
        np_22919 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 750, 21), 'np', False)
        # Obtaining the member 'random' of a type (line 750)
        random_22920 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 750, 21), np_22919, 'random')
        # Obtaining the member 'randn' of a type (line 750)
        randn_22921 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 750, 21), random_22920, 'randn')
        # Calling randn(args, kwargs) (line 750)
        randn_call_result_22924 = invoke(stypy.reporting.localization.Localization(__file__, 750, 21), randn_22921, *[int_22922], **kwargs_22923)
        
        # Obtaining the member 'astype' of a type (line 750)
        astype_22925 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 750, 21), randn_call_result_22924, 'astype')
        # Calling astype(args, kwargs) (line 750)
        astype_call_result_22929 = invoke(stypy.reporting.localization.Localization(__file__, 750, 21), astype_22925, *[longdouble_22927], **kwargs_22928)
        
        # Applying the binary operator '*' (line 750)
        result_mul_22930 = python_operator(stypy.reporting.localization.Localization(__file__, 750, 16), '*', complex_22918, astype_call_result_22929)
        
        # Applying the binary operator '+' (line 749)
        result_add_22931 = python_operator(stypy.reporting.localization.Localization(__file__, 749, 12), '+', astype_call_result_22917, result_mul_22930)
        
        # Assigning a type to the variable 'x' (line 749)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 749, 8), 'x', result_add_22931)
        
        
        # Obtaining an instance of the builtin type 'list' (line 752)
        list_22932 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 752, 17), 'list')
        # Adding type elements to the builtin type 'list' instance (line 752)
        # Adding element type (line 752)
        # Getting the type of 'fft' (line 752)
        fft_22933 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 752, 18), 'fft')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 752, 17), list_22932, fft_22933)
        # Adding element type (line 752)
        # Getting the type of 'ifft' (line 752)
        ifft_22934 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 752, 23), 'ifft')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 752, 17), list_22932, ifft_22934)
        
        # Testing the type of a for loop iterable (line 752)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 752, 8), list_22932)
        # Getting the type of the for loop variable (line 752)
        for_loop_var_22935 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 752, 8), list_22932)
        # Assigning a type to the variable 'f' (line 752)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 752, 8), 'f', for_loop_var_22935)
        # SSA begins for a for statement (line 752)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        
        # SSA begins for try-except statement (line 753)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
        
        # Call to f(...): (line 754)
        # Processing the call arguments (line 754)
        # Getting the type of 'x' (line 754)
        x_22937 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 754, 18), 'x', False)
        # Processing the call keyword arguments (line 754)
        kwargs_22938 = {}
        # Getting the type of 'f' (line 754)
        f_22936 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 754, 16), 'f', False)
        # Calling f(args, kwargs) (line 754)
        f_call_result_22939 = invoke(stypy.reporting.localization.Localization(__file__, 754, 16), f_22936, *[x_22937], **kwargs_22938)
        
        
        # Call to AssertionError(...): (line 755)
        # Processing the call arguments (line 755)
        str_22941 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 755, 37), 'str', 'Type %r not supported but does not fail')
        # Getting the type of 'np' (line 756)
        np_22942 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 756, 37), 'np', False)
        # Obtaining the member 'longcomplex' of a type (line 756)
        longcomplex_22943 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 756, 37), np_22942, 'longcomplex')
        # Applying the binary operator '%' (line 755)
        result_mod_22944 = python_operator(stypy.reporting.localization.Localization(__file__, 755, 37), '%', str_22941, longcomplex_22943)
        
        # Processing the call keyword arguments (line 755)
        kwargs_22945 = {}
        # Getting the type of 'AssertionError' (line 755)
        AssertionError_22940 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 755, 22), 'AssertionError', False)
        # Calling AssertionError(args, kwargs) (line 755)
        AssertionError_call_result_22946 = invoke(stypy.reporting.localization.Localization(__file__, 755, 22), AssertionError_22940, *[result_mod_22944], **kwargs_22945)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 755, 16), AssertionError_call_result_22946, 'raise parameter', BaseException)
        # SSA branch for the except part of a try statement (line 753)
        # SSA branch for the except 'ValueError' branch of a try statement (line 753)
        module_type_store.open_ssa_branch('except')
        pass
        # SSA join for try-except statement (line 753)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_complex(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_complex' in the type store
        # Getting the type of 'stypy_return_type' (line 744)
        stypy_return_type_22947 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 744, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_22947)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_complex'
        return stypy_return_type_22947


    @norecursion
    def test_real(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_real'
        module_type_store = module_type_store.open_function_context('test_real', 760, 4, False)
        # Assigning a type to the variable 'self' (line 761)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 761, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestLongDoubleFailure.test_real.__dict__.__setitem__('stypy_localization', localization)
        TestLongDoubleFailure.test_real.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestLongDoubleFailure.test_real.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestLongDoubleFailure.test_real.__dict__.__setitem__('stypy_function_name', 'TestLongDoubleFailure.test_real')
        TestLongDoubleFailure.test_real.__dict__.__setitem__('stypy_param_names_list', [])
        TestLongDoubleFailure.test_real.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestLongDoubleFailure.test_real.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestLongDoubleFailure.test_real.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestLongDoubleFailure.test_real.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestLongDoubleFailure.test_real.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestLongDoubleFailure.test_real.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestLongDoubleFailure.test_real', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_real', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_real(...)' code ##################

        
        
        
        # Call to dtype(...): (line 761)
        # Processing the call arguments (line 761)
        # Getting the type of 'np' (line 761)
        np_22950 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 761, 20), 'np', False)
        # Obtaining the member 'longdouble' of a type (line 761)
        longdouble_22951 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 761, 20), np_22950, 'longdouble')
        # Processing the call keyword arguments (line 761)
        kwargs_22952 = {}
        # Getting the type of 'np' (line 761)
        np_22948 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 761, 11), 'np', False)
        # Obtaining the member 'dtype' of a type (line 761)
        dtype_22949 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 761, 11), np_22948, 'dtype')
        # Calling dtype(args, kwargs) (line 761)
        dtype_call_result_22953 = invoke(stypy.reporting.localization.Localization(__file__, 761, 11), dtype_22949, *[longdouble_22951], **kwargs_22952)
        
        # Obtaining the member 'itemsize' of a type (line 761)
        itemsize_22954 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 761, 11), dtype_call_result_22953, 'itemsize')
        
        # Call to dtype(...): (line 761)
        # Processing the call arguments (line 761)
        # Getting the type of 'np' (line 761)
        np_22957 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 761, 56), 'np', False)
        # Obtaining the member 'double' of a type (line 761)
        double_22958 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 761, 56), np_22957, 'double')
        # Processing the call keyword arguments (line 761)
        kwargs_22959 = {}
        # Getting the type of 'np' (line 761)
        np_22955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 761, 47), 'np', False)
        # Obtaining the member 'dtype' of a type (line 761)
        dtype_22956 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 761, 47), np_22955, 'dtype')
        # Calling dtype(args, kwargs) (line 761)
        dtype_call_result_22960 = invoke(stypy.reporting.localization.Localization(__file__, 761, 47), dtype_22956, *[double_22958], **kwargs_22959)
        
        # Obtaining the member 'itemsize' of a type (line 761)
        itemsize_22961 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 761, 47), dtype_call_result_22960, 'itemsize')
        # Applying the binary operator '==' (line 761)
        result_eq_22962 = python_operator(stypy.reporting.localization.Localization(__file__, 761, 11), '==', itemsize_22954, itemsize_22961)
        
        # Testing the type of an if condition (line 761)
        if_condition_22963 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 761, 8), result_eq_22962)
        # Assigning a type to the variable 'if_condition_22963' (line 761)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 761, 8), 'if_condition_22963', if_condition_22963)
        # SSA begins for if statement (line 761)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        # Assigning a type to the variable 'stypy_return_type' (line 763)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 763, 12), 'stypy_return_type', types.NoneType)
        # SSA join for if statement (line 761)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 765):
        
        # Call to astype(...): (line 765)
        # Processing the call arguments (line 765)
        # Getting the type of 'np' (line 765)
        np_22971 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 765, 39), 'np', False)
        # Obtaining the member 'longcomplex' of a type (line 765)
        longcomplex_22972 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 765, 39), np_22971, 'longcomplex')
        # Processing the call keyword arguments (line 765)
        kwargs_22973 = {}
        
        # Call to randn(...): (line 765)
        # Processing the call arguments (line 765)
        int_22967 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 765, 28), 'int')
        # Processing the call keyword arguments (line 765)
        kwargs_22968 = {}
        # Getting the type of 'np' (line 765)
        np_22964 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 765, 12), 'np', False)
        # Obtaining the member 'random' of a type (line 765)
        random_22965 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 765, 12), np_22964, 'random')
        # Obtaining the member 'randn' of a type (line 765)
        randn_22966 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 765, 12), random_22965, 'randn')
        # Calling randn(args, kwargs) (line 765)
        randn_call_result_22969 = invoke(stypy.reporting.localization.Localization(__file__, 765, 12), randn_22966, *[int_22967], **kwargs_22968)
        
        # Obtaining the member 'astype' of a type (line 765)
        astype_22970 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 765, 12), randn_call_result_22969, 'astype')
        # Calling astype(args, kwargs) (line 765)
        astype_call_result_22974 = invoke(stypy.reporting.localization.Localization(__file__, 765, 12), astype_22970, *[longcomplex_22972], **kwargs_22973)
        
        # Assigning a type to the variable 'x' (line 765)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 765, 8), 'x', astype_call_result_22974)
        
        
        # Obtaining an instance of the builtin type 'list' (line 767)
        list_22975 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 767, 17), 'list')
        # Adding type elements to the builtin type 'list' instance (line 767)
        # Adding element type (line 767)
        # Getting the type of 'fft' (line 767)
        fft_22976 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 767, 18), 'fft')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 767, 17), list_22975, fft_22976)
        # Adding element type (line 767)
        # Getting the type of 'ifft' (line 767)
        ifft_22977 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 767, 23), 'ifft')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 767, 17), list_22975, ifft_22977)
        
        # Testing the type of a for loop iterable (line 767)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 767, 8), list_22975)
        # Getting the type of the for loop variable (line 767)
        for_loop_var_22978 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 767, 8), list_22975)
        # Assigning a type to the variable 'f' (line 767)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 767, 8), 'f', for_loop_var_22978)
        # SSA begins for a for statement (line 767)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        
        # SSA begins for try-except statement (line 768)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
        
        # Call to f(...): (line 769)
        # Processing the call arguments (line 769)
        # Getting the type of 'x' (line 769)
        x_22980 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 769, 18), 'x', False)
        # Processing the call keyword arguments (line 769)
        kwargs_22981 = {}
        # Getting the type of 'f' (line 769)
        f_22979 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 769, 16), 'f', False)
        # Calling f(args, kwargs) (line 769)
        f_call_result_22982 = invoke(stypy.reporting.localization.Localization(__file__, 769, 16), f_22979, *[x_22980], **kwargs_22981)
        
        
        # Call to AssertionError(...): (line 770)
        # Processing the call arguments (line 770)
        str_22984 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 770, 37), 'str', 'Type %r not supported but does not fail')
        # Getting the type of 'np' (line 771)
        np_22985 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 771, 37), 'np', False)
        # Obtaining the member 'longcomplex' of a type (line 771)
        longcomplex_22986 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 771, 37), np_22985, 'longcomplex')
        # Applying the binary operator '%' (line 770)
        result_mod_22987 = python_operator(stypy.reporting.localization.Localization(__file__, 770, 37), '%', str_22984, longcomplex_22986)
        
        # Processing the call keyword arguments (line 770)
        kwargs_22988 = {}
        # Getting the type of 'AssertionError' (line 770)
        AssertionError_22983 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 770, 22), 'AssertionError', False)
        # Calling AssertionError(args, kwargs) (line 770)
        AssertionError_call_result_22989 = invoke(stypy.reporting.localization.Localization(__file__, 770, 22), AssertionError_22983, *[result_mod_22987], **kwargs_22988)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 770, 16), AssertionError_call_result_22989, 'raise parameter', BaseException)
        # SSA branch for the except part of a try statement (line 768)
        # SSA branch for the except 'ValueError' branch of a try statement (line 768)
        module_type_store.open_ssa_branch('except')
        pass
        # SSA join for try-except statement (line 768)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_real(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_real' in the type store
        # Getting the type of 'stypy_return_type' (line 760)
        stypy_return_type_22990 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 760, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_22990)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_real'
        return stypy_return_type_22990


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 740, 0, False)
        # Assigning a type to the variable 'self' (line 741)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 741, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestLongDoubleFailure.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'TestLongDoubleFailure' (line 740)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 740, 0), 'TestLongDoubleFailure', TestLongDoubleFailure)
# Declaration of the 'FakeArray' class

class FakeArray(object, ):

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 777, 4, False)
        # Assigning a type to the variable 'self' (line 778)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 778, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FakeArray.__init__', ['data'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['data'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Assigning a Name to a Attribute (line 778):
        # Getting the type of 'data' (line 778)
        data_22991 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 778, 21), 'data')
        # Getting the type of 'self' (line 778)
        self_22992 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 778, 8), 'self')
        # Setting the type of the member '_data' of a type (line 778)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 778, 8), self_22992, '_data', data_22991)
        
        # Assigning a Attribute to a Attribute (line 779):
        # Getting the type of 'data' (line 779)
        data_22993 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 779, 35), 'data')
        # Obtaining the member '__array_interface__' of a type (line 779)
        array_interface___22994 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 779, 35), data_22993, '__array_interface__')
        # Getting the type of 'self' (line 779)
        self_22995 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 779, 8), 'self')
        # Setting the type of the member '__array_interface__' of a type (line 779)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 779, 8), self_22995, '__array_interface__', array_interface___22994)
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'FakeArray' (line 776)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 776, 0), 'FakeArray', FakeArray)
# Declaration of the 'FakeArray2' class

class FakeArray2(object, ):

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 783, 4, False)
        # Assigning a type to the variable 'self' (line 784)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 784, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FakeArray2.__init__', ['data'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['data'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Assigning a Name to a Attribute (line 784):
        # Getting the type of 'data' (line 784)
        data_22996 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 784, 21), 'data')
        # Getting the type of 'self' (line 784)
        self_22997 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 784, 8), 'self')
        # Setting the type of the member '_data' of a type (line 784)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 784, 8), self_22997, '_data', data_22996)
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def __array__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__array__'
        module_type_store = module_type_store.open_function_context('__array__', 786, 4, False)
        # Assigning a type to the variable 'self' (line 787)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 787, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        FakeArray2.__array__.__dict__.__setitem__('stypy_localization', localization)
        FakeArray2.__array__.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        FakeArray2.__array__.__dict__.__setitem__('stypy_type_store', module_type_store)
        FakeArray2.__array__.__dict__.__setitem__('stypy_function_name', 'FakeArray2.__array__')
        FakeArray2.__array__.__dict__.__setitem__('stypy_param_names_list', [])
        FakeArray2.__array__.__dict__.__setitem__('stypy_varargs_param_name', None)
        FakeArray2.__array__.__dict__.__setitem__('stypy_kwargs_param_name', None)
        FakeArray2.__array__.__dict__.__setitem__('stypy_call_defaults', defaults)
        FakeArray2.__array__.__dict__.__setitem__('stypy_call_varargs', varargs)
        FakeArray2.__array__.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        FakeArray2.__array__.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FakeArray2.__array__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '__array__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__array__(...)' code ##################

        # Getting the type of 'self' (line 787)
        self_22998 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 787, 15), 'self')
        # Obtaining the member '_data' of a type (line 787)
        _data_22999 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 787, 15), self_22998, '_data')
        # Assigning a type to the variable 'stypy_return_type' (line 787)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 787, 8), 'stypy_return_type', _data_22999)
        
        # ################# End of '__array__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '__array__' in the type store
        # Getting the type of 'stypy_return_type' (line 786)
        stypy_return_type_23000 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 786, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_23000)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '__array__'
        return stypy_return_type_23000


# Assigning a type to the variable 'FakeArray2' (line 782)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 782, 0), 'FakeArray2', FakeArray2)
# Declaration of the 'TestOverwrite' class

class TestOverwrite(object, ):
    str_23001 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 791, 4), 'str', 'Check input overwrite behavior of the FFT functions ')

    @norecursion
    def _check(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_check'
        module_type_store = module_type_store.open_function_context('_check', 796, 4, False)
        # Assigning a type to the variable 'self' (line 797)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 797, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestOverwrite._check.__dict__.__setitem__('stypy_localization', localization)
        TestOverwrite._check.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestOverwrite._check.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestOverwrite._check.__dict__.__setitem__('stypy_function_name', 'TestOverwrite._check')
        TestOverwrite._check.__dict__.__setitem__('stypy_param_names_list', ['x', 'routine', 'fftsize', 'axis', 'overwrite_x', 'should_overwrite'])
        TestOverwrite._check.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestOverwrite._check.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestOverwrite._check.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestOverwrite._check.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestOverwrite._check.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestOverwrite._check.__dict__.__setitem__('stypy_declared_arg_number', 7)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestOverwrite._check', ['x', 'routine', 'fftsize', 'axis', 'overwrite_x', 'should_overwrite'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_check', localization, ['x', 'routine', 'fftsize', 'axis', 'overwrite_x', 'should_overwrite'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_check(...)' code ##################

        
        # Assigning a Call to a Name (line 797):
        
        # Call to copy(...): (line 797)
        # Processing the call keyword arguments (line 797)
        kwargs_23004 = {}
        # Getting the type of 'x' (line 797)
        x_23002 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 797, 13), 'x', False)
        # Obtaining the member 'copy' of a type (line 797)
        copy_23003 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 797, 13), x_23002, 'copy')
        # Calling copy(args, kwargs) (line 797)
        copy_call_result_23005 = invoke(stypy.reporting.localization.Localization(__file__, 797, 13), copy_23003, *[], **kwargs_23004)
        
        # Assigning a type to the variable 'x2' (line 797)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 797, 8), 'x2', copy_call_result_23005)
        
        
        # Obtaining an instance of the builtin type 'list' (line 798)
        list_23006 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 798, 20), 'list')
        # Adding type elements to the builtin type 'list' instance (line 798)
        # Adding element type (line 798)

        @norecursion
        def _stypy_temp_lambda_2(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_2'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_2', 798, 21, True)
            # Passed parameters checking function
            _stypy_temp_lambda_2.stypy_localization = localization
            _stypy_temp_lambda_2.stypy_type_of_self = None
            _stypy_temp_lambda_2.stypy_type_store = module_type_store
            _stypy_temp_lambda_2.stypy_function_name = '_stypy_temp_lambda_2'
            _stypy_temp_lambda_2.stypy_param_names_list = ['x']
            _stypy_temp_lambda_2.stypy_varargs_param_name = None
            _stypy_temp_lambda_2.stypy_kwargs_param_name = None
            _stypy_temp_lambda_2.stypy_call_defaults = defaults
            _stypy_temp_lambda_2.stypy_call_varargs = varargs
            _stypy_temp_lambda_2.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_2', ['x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_2', ['x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            # Getting the type of 'x' (line 798)
            x_23007 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 798, 31), 'x')
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 798)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 798, 21), 'stypy_return_type', x_23007)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_2' in the type store
            # Getting the type of 'stypy_return_type' (line 798)
            stypy_return_type_23008 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 798, 21), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_23008)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_2'
            return stypy_return_type_23008

        # Assigning a type to the variable '_stypy_temp_lambda_2' (line 798)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 798, 21), '_stypy_temp_lambda_2', _stypy_temp_lambda_2)
        # Getting the type of '_stypy_temp_lambda_2' (line 798)
        _stypy_temp_lambda_2_23009 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 798, 21), '_stypy_temp_lambda_2')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 798, 20), list_23006, _stypy_temp_lambda_2_23009)
        # Adding element type (line 798)
        # Getting the type of 'FakeArray' (line 798)
        FakeArray_23010 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 798, 34), 'FakeArray')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 798, 20), list_23006, FakeArray_23010)
        # Adding element type (line 798)
        # Getting the type of 'FakeArray2' (line 798)
        FakeArray2_23011 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 798, 45), 'FakeArray2')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 798, 20), list_23006, FakeArray2_23011)
        
        # Testing the type of a for loop iterable (line 798)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 798, 8), list_23006)
        # Getting the type of the for loop variable (line 798)
        for_loop_var_23012 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 798, 8), list_23006)
        # Assigning a type to the variable 'fake' (line 798)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 798, 8), 'fake', for_loop_var_23012)
        # SSA begins for a for statement (line 798)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to routine(...): (line 799)
        # Processing the call arguments (line 799)
        
        # Call to fake(...): (line 799)
        # Processing the call arguments (line 799)
        # Getting the type of 'x2' (line 799)
        x2_23015 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 799, 25), 'x2', False)
        # Processing the call keyword arguments (line 799)
        kwargs_23016 = {}
        # Getting the type of 'fake' (line 799)
        fake_23014 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 799, 20), 'fake', False)
        # Calling fake(args, kwargs) (line 799)
        fake_call_result_23017 = invoke(stypy.reporting.localization.Localization(__file__, 799, 20), fake_23014, *[x2_23015], **kwargs_23016)
        
        # Getting the type of 'fftsize' (line 799)
        fftsize_23018 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 799, 30), 'fftsize', False)
        # Getting the type of 'axis' (line 799)
        axis_23019 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 799, 39), 'axis', False)
        # Processing the call keyword arguments (line 799)
        # Getting the type of 'overwrite_x' (line 799)
        overwrite_x_23020 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 799, 57), 'overwrite_x', False)
        keyword_23021 = overwrite_x_23020
        kwargs_23022 = {'overwrite_x': keyword_23021}
        # Getting the type of 'routine' (line 799)
        routine_23013 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 799, 12), 'routine', False)
        # Calling routine(args, kwargs) (line 799)
        routine_call_result_23023 = invoke(stypy.reporting.localization.Localization(__file__, 799, 12), routine_23013, *[fake_call_result_23017, fftsize_23018, axis_23019], **kwargs_23022)
        
        
        # Assigning a BinOp to a Name (line 801):
        str_23024 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 801, 18), 'str', '%s(%s%r, %r, axis=%r, overwrite_x=%r)')
        
        # Obtaining an instance of the builtin type 'tuple' (line 802)
        tuple_23025 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 802, 16), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 802)
        # Adding element type (line 802)
        # Getting the type of 'routine' (line 802)
        routine_23026 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 802, 16), 'routine')
        # Obtaining the member '__name__' of a type (line 802)
        name___23027 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 802, 16), routine_23026, '__name__')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 802, 16), tuple_23025, name___23027)
        # Adding element type (line 802)
        # Getting the type of 'x' (line 802)
        x_23028 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 802, 34), 'x')
        # Obtaining the member 'dtype' of a type (line 802)
        dtype_23029 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 802, 34), x_23028, 'dtype')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 802, 16), tuple_23025, dtype_23029)
        # Adding element type (line 802)
        # Getting the type of 'x' (line 802)
        x_23030 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 802, 43), 'x')
        # Obtaining the member 'shape' of a type (line 802)
        shape_23031 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 802, 43), x_23030, 'shape')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 802, 16), tuple_23025, shape_23031)
        # Adding element type (line 802)
        # Getting the type of 'fftsize' (line 802)
        fftsize_23032 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 802, 52), 'fftsize')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 802, 16), tuple_23025, fftsize_23032)
        # Adding element type (line 802)
        # Getting the type of 'axis' (line 802)
        axis_23033 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 802, 61), 'axis')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 802, 16), tuple_23025, axis_23033)
        # Adding element type (line 802)
        # Getting the type of 'overwrite_x' (line 802)
        overwrite_x_23034 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 802, 67), 'overwrite_x')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 802, 16), tuple_23025, overwrite_x_23034)
        
        # Applying the binary operator '%' (line 801)
        result_mod_23035 = python_operator(stypy.reporting.localization.Localization(__file__, 801, 18), '%', str_23024, tuple_23025)
        
        # Assigning a type to the variable 'sig' (line 801)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 801, 12), 'sig', result_mod_23035)
        
        
        # Getting the type of 'should_overwrite' (line 803)
        should_overwrite_23036 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 803, 19), 'should_overwrite')
        # Applying the 'not' unary operator (line 803)
        result_not__23037 = python_operator(stypy.reporting.localization.Localization(__file__, 803, 15), 'not', should_overwrite_23036)
        
        # Testing the type of an if condition (line 803)
        if_condition_23038 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 803, 12), result_not__23037)
        # Assigning a type to the variable 'if_condition_23038' (line 803)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 803, 12), 'if_condition_23038', if_condition_23038)
        # SSA begins for if statement (line 803)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to assert_equal(...): (line 804)
        # Processing the call arguments (line 804)
        # Getting the type of 'x2' (line 804)
        x2_23040 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 804, 29), 'x2', False)
        # Getting the type of 'x' (line 804)
        x_23041 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 804, 33), 'x', False)
        # Processing the call keyword arguments (line 804)
        str_23042 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 804, 44), 'str', 'spurious overwrite in %s')
        # Getting the type of 'sig' (line 804)
        sig_23043 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 804, 73), 'sig', False)
        # Applying the binary operator '%' (line 804)
        result_mod_23044 = python_operator(stypy.reporting.localization.Localization(__file__, 804, 44), '%', str_23042, sig_23043)
        
        keyword_23045 = result_mod_23044
        kwargs_23046 = {'err_msg': keyword_23045}
        # Getting the type of 'assert_equal' (line 804)
        assert_equal_23039 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 804, 16), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 804)
        assert_equal_call_result_23047 = invoke(stypy.reporting.localization.Localization(__file__, 804, 16), assert_equal_23039, *[x2_23040, x_23041], **kwargs_23046)
        
        # SSA join for if statement (line 803)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of '_check(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_check' in the type store
        # Getting the type of 'stypy_return_type' (line 796)
        stypy_return_type_23048 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 796, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_23048)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_check'
        return stypy_return_type_23048


    @norecursion
    def _check_1d(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_check_1d'
        module_type_store = module_type_store.open_function_context('_check_1d', 806, 4, False)
        # Assigning a type to the variable 'self' (line 807)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 807, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestOverwrite._check_1d.__dict__.__setitem__('stypy_localization', localization)
        TestOverwrite._check_1d.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestOverwrite._check_1d.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestOverwrite._check_1d.__dict__.__setitem__('stypy_function_name', 'TestOverwrite._check_1d')
        TestOverwrite._check_1d.__dict__.__setitem__('stypy_param_names_list', ['routine', 'dtype', 'shape', 'axis', 'overwritable_dtypes'])
        TestOverwrite._check_1d.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestOverwrite._check_1d.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestOverwrite._check_1d.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestOverwrite._check_1d.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestOverwrite._check_1d.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestOverwrite._check_1d.__dict__.__setitem__('stypy_declared_arg_number', 6)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestOverwrite._check_1d', ['routine', 'dtype', 'shape', 'axis', 'overwritable_dtypes'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_check_1d', localization, ['routine', 'dtype', 'shape', 'axis', 'overwritable_dtypes'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_check_1d(...)' code ##################

        
        # Call to seed(...): (line 807)
        # Processing the call arguments (line 807)
        int_23052 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 807, 23), 'int')
        # Processing the call keyword arguments (line 807)
        kwargs_23053 = {}
        # Getting the type of 'np' (line 807)
        np_23049 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 807, 8), 'np', False)
        # Obtaining the member 'random' of a type (line 807)
        random_23050 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 807, 8), np_23049, 'random')
        # Obtaining the member 'seed' of a type (line 807)
        seed_23051 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 807, 8), random_23050, 'seed')
        # Calling seed(args, kwargs) (line 807)
        seed_call_result_23054 = invoke(stypy.reporting.localization.Localization(__file__, 807, 8), seed_23051, *[int_23052], **kwargs_23053)
        
        
        
        # Call to issubdtype(...): (line 808)
        # Processing the call arguments (line 808)
        # Getting the type of 'dtype' (line 808)
        dtype_23057 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 808, 25), 'dtype', False)
        # Getting the type of 'np' (line 808)
        np_23058 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 808, 32), 'np', False)
        # Obtaining the member 'complexfloating' of a type (line 808)
        complexfloating_23059 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 808, 32), np_23058, 'complexfloating')
        # Processing the call keyword arguments (line 808)
        kwargs_23060 = {}
        # Getting the type of 'np' (line 808)
        np_23055 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 808, 11), 'np', False)
        # Obtaining the member 'issubdtype' of a type (line 808)
        issubdtype_23056 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 808, 11), np_23055, 'issubdtype')
        # Calling issubdtype(args, kwargs) (line 808)
        issubdtype_call_result_23061 = invoke(stypy.reporting.localization.Localization(__file__, 808, 11), issubdtype_23056, *[dtype_23057, complexfloating_23059], **kwargs_23060)
        
        # Testing the type of an if condition (line 808)
        if_condition_23062 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 808, 8), issubdtype_call_result_23061)
        # Assigning a type to the variable 'if_condition_23062' (line 808)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 808, 8), 'if_condition_23062', if_condition_23062)
        # SSA begins for if statement (line 808)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a BinOp to a Name (line 809):
        
        # Call to randn(...): (line 809)
        # Getting the type of 'shape' (line 809)
        shape_23066 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 809, 36), 'shape', False)
        # Processing the call keyword arguments (line 809)
        kwargs_23067 = {}
        # Getting the type of 'np' (line 809)
        np_23063 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 809, 19), 'np', False)
        # Obtaining the member 'random' of a type (line 809)
        random_23064 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 809, 19), np_23063, 'random')
        # Obtaining the member 'randn' of a type (line 809)
        randn_23065 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 809, 19), random_23064, 'randn')
        # Calling randn(args, kwargs) (line 809)
        randn_call_result_23068 = invoke(stypy.reporting.localization.Localization(__file__, 809, 19), randn_23065, *[shape_23066], **kwargs_23067)
        
        complex_23069 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 809, 45), 'complex')
        
        # Call to randn(...): (line 809)
        # Getting the type of 'shape' (line 809)
        shape_23073 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 809, 65), 'shape', False)
        # Processing the call keyword arguments (line 809)
        kwargs_23074 = {}
        # Getting the type of 'np' (line 809)
        np_23070 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 809, 48), 'np', False)
        # Obtaining the member 'random' of a type (line 809)
        random_23071 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 809, 48), np_23070, 'random')
        # Obtaining the member 'randn' of a type (line 809)
        randn_23072 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 809, 48), random_23071, 'randn')
        # Calling randn(args, kwargs) (line 809)
        randn_call_result_23075 = invoke(stypy.reporting.localization.Localization(__file__, 809, 48), randn_23072, *[shape_23073], **kwargs_23074)
        
        # Applying the binary operator '*' (line 809)
        result_mul_23076 = python_operator(stypy.reporting.localization.Localization(__file__, 809, 45), '*', complex_23069, randn_call_result_23075)
        
        # Applying the binary operator '+' (line 809)
        result_add_23077 = python_operator(stypy.reporting.localization.Localization(__file__, 809, 19), '+', randn_call_result_23068, result_mul_23076)
        
        # Assigning a type to the variable 'data' (line 809)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 809, 12), 'data', result_add_23077)
        # SSA branch for the else part of an if statement (line 808)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Call to a Name (line 811):
        
        # Call to randn(...): (line 811)
        # Getting the type of 'shape' (line 811)
        shape_23081 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 811, 36), 'shape', False)
        # Processing the call keyword arguments (line 811)
        kwargs_23082 = {}
        # Getting the type of 'np' (line 811)
        np_23078 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 811, 19), 'np', False)
        # Obtaining the member 'random' of a type (line 811)
        random_23079 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 811, 19), np_23078, 'random')
        # Obtaining the member 'randn' of a type (line 811)
        randn_23080 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 811, 19), random_23079, 'randn')
        # Calling randn(args, kwargs) (line 811)
        randn_call_result_23083 = invoke(stypy.reporting.localization.Localization(__file__, 811, 19), randn_23080, *[shape_23081], **kwargs_23082)
        
        # Assigning a type to the variable 'data' (line 811)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 811, 12), 'data', randn_call_result_23083)
        # SSA join for if statement (line 808)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 812):
        
        # Call to astype(...): (line 812)
        # Processing the call arguments (line 812)
        # Getting the type of 'dtype' (line 812)
        dtype_23086 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 812, 27), 'dtype', False)
        # Processing the call keyword arguments (line 812)
        kwargs_23087 = {}
        # Getting the type of 'data' (line 812)
        data_23084 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 812, 15), 'data', False)
        # Obtaining the member 'astype' of a type (line 812)
        astype_23085 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 812, 15), data_23084, 'astype')
        # Calling astype(args, kwargs) (line 812)
        astype_call_result_23088 = invoke(stypy.reporting.localization.Localization(__file__, 812, 15), astype_23085, *[dtype_23086], **kwargs_23087)
        
        # Assigning a type to the variable 'data' (line 812)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 812, 8), 'data', astype_call_result_23088)
        
        
        # Obtaining an instance of the builtin type 'list' (line 814)
        list_23089 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 814, 23), 'list')
        # Adding type elements to the builtin type 'list' instance (line 814)
        # Adding element type (line 814)
        int_23090 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 814, 24), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 814, 23), list_23089, int_23090)
        # Adding element type (line 814)
        int_23091 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 814, 27), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 814, 23), list_23089, int_23091)
        # Adding element type (line 814)
        int_23092 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 814, 31), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 814, 23), list_23089, int_23092)
        
        # Testing the type of a for loop iterable (line 814)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 814, 8), list_23089)
        # Getting the type of the for loop variable (line 814)
        for_loop_var_23093 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 814, 8), list_23089)
        # Assigning a type to the variable 'fftsize' (line 814)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 814, 8), 'fftsize', for_loop_var_23093)
        # SSA begins for a for statement (line 814)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        
        # Obtaining an instance of the builtin type 'list' (line 815)
        list_23094 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 815, 31), 'list')
        # Adding type elements to the builtin type 'list' instance (line 815)
        # Adding element type (line 815)
        # Getting the type of 'True' (line 815)
        True_23095 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 815, 32), 'True')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 815, 31), list_23094, True_23095)
        # Adding element type (line 815)
        # Getting the type of 'False' (line 815)
        False_23096 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 815, 38), 'False')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 815, 31), list_23094, False_23096)
        
        # Testing the type of a for loop iterable (line 815)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 815, 12), list_23094)
        # Getting the type of the for loop variable (line 815)
        for_loop_var_23097 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 815, 12), list_23094)
        # Assigning a type to the variable 'overwrite_x' (line 815)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 815, 12), 'overwrite_x', for_loop_var_23097)
        # SSA begins for a for statement (line 815)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a BoolOp to a Name (line 816):
        
        # Evaluating a boolean operation
        # Getting the type of 'overwrite_x' (line 816)
        overwrite_x_23098 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 816, 36), 'overwrite_x')
        
        # Getting the type of 'dtype' (line 817)
        dtype_23099 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 817, 40), 'dtype')
        # Getting the type of 'overwritable_dtypes' (line 817)
        overwritable_dtypes_23100 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 817, 49), 'overwritable_dtypes')
        # Applying the binary operator 'in' (line 817)
        result_contains_23101 = python_operator(stypy.reporting.localization.Localization(__file__, 817, 40), 'in', dtype_23099, overwritable_dtypes_23100)
        
        # Applying the binary operator 'and' (line 816)
        result_and_keyword_23102 = python_operator(stypy.reporting.localization.Localization(__file__, 816, 36), 'and', overwrite_x_23098, result_contains_23101)
        
        # Getting the type of 'fftsize' (line 818)
        fftsize_23103 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 818, 40), 'fftsize')
        
        # Obtaining the type of the subscript
        # Getting the type of 'axis' (line 818)
        axis_23104 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 818, 57), 'axis')
        # Getting the type of 'shape' (line 818)
        shape_23105 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 818, 51), 'shape')
        # Obtaining the member '__getitem__' of a type (line 818)
        getitem___23106 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 818, 51), shape_23105, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 818)
        subscript_call_result_23107 = invoke(stypy.reporting.localization.Localization(__file__, 818, 51), getitem___23106, axis_23104)
        
        # Applying the binary operator '<=' (line 818)
        result_le_23108 = python_operator(stypy.reporting.localization.Localization(__file__, 818, 40), '<=', fftsize_23103, subscript_call_result_23107)
        
        # Applying the binary operator 'and' (line 816)
        result_and_keyword_23109 = python_operator(stypy.reporting.localization.Localization(__file__, 816, 36), 'and', result_and_keyword_23102, result_le_23108)
        
        # Evaluating a boolean operation
        
        
        # Call to len(...): (line 819)
        # Processing the call arguments (line 819)
        # Getting the type of 'shape' (line 819)
        shape_23111 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 819, 45), 'shape', False)
        # Processing the call keyword arguments (line 819)
        kwargs_23112 = {}
        # Getting the type of 'len' (line 819)
        len_23110 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 819, 41), 'len', False)
        # Calling len(args, kwargs) (line 819)
        len_call_result_23113 = invoke(stypy.reporting.localization.Localization(__file__, 819, 41), len_23110, *[shape_23111], **kwargs_23112)
        
        int_23114 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 819, 55), 'int')
        # Applying the binary operator '==' (line 819)
        result_eq_23115 = python_operator(stypy.reporting.localization.Localization(__file__, 819, 41), '==', len_call_result_23113, int_23114)
        
        
        # Evaluating a boolean operation
        
        # Getting the type of 'axis' (line 820)
        axis_23116 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 820, 42), 'axis')
        
        # Call to len(...): (line 820)
        # Processing the call arguments (line 820)
        # Getting the type of 'shape' (line 820)
        shape_23118 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 820, 53), 'shape', False)
        # Processing the call keyword arguments (line 820)
        kwargs_23119 = {}
        # Getting the type of 'len' (line 820)
        len_23117 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 820, 49), 'len', False)
        # Calling len(args, kwargs) (line 820)
        len_call_result_23120 = invoke(stypy.reporting.localization.Localization(__file__, 820, 49), len_23117, *[shape_23118], **kwargs_23119)
        
        # Applying the binary operator '%' (line 820)
        result_mod_23121 = python_operator(stypy.reporting.localization.Localization(__file__, 820, 42), '%', axis_23116, len_call_result_23120)
        
        
        # Call to len(...): (line 820)
        # Processing the call arguments (line 820)
        # Getting the type of 'shape' (line 820)
        shape_23123 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 820, 67), 'shape', False)
        # Processing the call keyword arguments (line 820)
        kwargs_23124 = {}
        # Getting the type of 'len' (line 820)
        len_23122 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 820, 63), 'len', False)
        # Calling len(args, kwargs) (line 820)
        len_call_result_23125 = invoke(stypy.reporting.localization.Localization(__file__, 820, 63), len_23122, *[shape_23123], **kwargs_23124)
        
        int_23126 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 820, 74), 'int')
        # Applying the binary operator '-' (line 820)
        result_sub_23127 = python_operator(stypy.reporting.localization.Localization(__file__, 820, 63), '-', len_call_result_23125, int_23126)
        
        # Applying the binary operator '==' (line 820)
        result_eq_23128 = python_operator(stypy.reporting.localization.Localization(__file__, 820, 42), '==', result_mod_23121, result_sub_23127)
        
        
        # Getting the type of 'fftsize' (line 821)
        fftsize_23129 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 821, 46), 'fftsize')
        
        # Obtaining the type of the subscript
        # Getting the type of 'axis' (line 821)
        axis_23130 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 821, 63), 'axis')
        # Getting the type of 'shape' (line 821)
        shape_23131 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 821, 57), 'shape')
        # Obtaining the member '__getitem__' of a type (line 821)
        getitem___23132 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 821, 57), shape_23131, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 821)
        subscript_call_result_23133 = invoke(stypy.reporting.localization.Localization(__file__, 821, 57), getitem___23132, axis_23130)
        
        # Applying the binary operator '==' (line 821)
        result_eq_23134 = python_operator(stypy.reporting.localization.Localization(__file__, 821, 46), '==', fftsize_23129, subscript_call_result_23133)
        
        # Applying the binary operator 'and' (line 820)
        result_and_keyword_23135 = python_operator(stypy.reporting.localization.Localization(__file__, 820, 42), 'and', result_eq_23128, result_eq_23134)
        
        # Applying the binary operator 'or' (line 819)
        result_or_keyword_23136 = python_operator(stypy.reporting.localization.Localization(__file__, 819, 41), 'or', result_eq_23115, result_and_keyword_23135)
        
        # Applying the binary operator 'and' (line 816)
        result_and_keyword_23137 = python_operator(stypy.reporting.localization.Localization(__file__, 816, 36), 'and', result_and_keyword_23109, result_or_keyword_23136)
        
        # Assigning a type to the variable 'should_overwrite' (line 816)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 816, 16), 'should_overwrite', result_and_keyword_23137)
        
        # Call to _check(...): (line 822)
        # Processing the call arguments (line 822)
        # Getting the type of 'data' (line 822)
        data_23140 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 822, 28), 'data', False)
        # Getting the type of 'routine' (line 822)
        routine_23141 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 822, 34), 'routine', False)
        # Getting the type of 'fftsize' (line 822)
        fftsize_23142 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 822, 43), 'fftsize', False)
        # Getting the type of 'axis' (line 822)
        axis_23143 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 822, 52), 'axis', False)
        # Processing the call keyword arguments (line 822)
        # Getting the type of 'overwrite_x' (line 823)
        overwrite_x_23144 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 823, 40), 'overwrite_x', False)
        keyword_23145 = overwrite_x_23144
        # Getting the type of 'should_overwrite' (line 824)
        should_overwrite_23146 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 824, 45), 'should_overwrite', False)
        keyword_23147 = should_overwrite_23146
        kwargs_23148 = {'should_overwrite': keyword_23147, 'overwrite_x': keyword_23145}
        # Getting the type of 'self' (line 822)
        self_23138 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 822, 16), 'self', False)
        # Obtaining the member '_check' of a type (line 822)
        _check_23139 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 822, 16), self_23138, '_check')
        # Calling _check(args, kwargs) (line 822)
        _check_call_result_23149 = invoke(stypy.reporting.localization.Localization(__file__, 822, 16), _check_23139, *[data_23140, routine_23141, fftsize_23142, axis_23143], **kwargs_23148)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of '_check_1d(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_check_1d' in the type store
        # Getting the type of 'stypy_return_type' (line 806)
        stypy_return_type_23150 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 806, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_23150)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_check_1d'
        return stypy_return_type_23150


    @norecursion
    def test_fft(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_fft'
        module_type_store = module_type_store.open_function_context('test_fft', 826, 4, False)
        # Assigning a type to the variable 'self' (line 827)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 827, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestOverwrite.test_fft.__dict__.__setitem__('stypy_localization', localization)
        TestOverwrite.test_fft.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestOverwrite.test_fft.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestOverwrite.test_fft.__dict__.__setitem__('stypy_function_name', 'TestOverwrite.test_fft')
        TestOverwrite.test_fft.__dict__.__setitem__('stypy_param_names_list', [])
        TestOverwrite.test_fft.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestOverwrite.test_fft.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestOverwrite.test_fft.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestOverwrite.test_fft.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestOverwrite.test_fft.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestOverwrite.test_fft.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestOverwrite.test_fft', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_fft', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_fft(...)' code ##################

        
        # Assigning a Tuple to a Name (line 827):
        
        # Obtaining an instance of the builtin type 'tuple' (line 827)
        tuple_23151 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 827, 24), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 827)
        # Adding element type (line 827)
        # Getting the type of 'np' (line 827)
        np_23152 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 827, 24), 'np')
        # Obtaining the member 'complex128' of a type (line 827)
        complex128_23153 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 827, 24), np_23152, 'complex128')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 827, 24), tuple_23151, complex128_23153)
        # Adding element type (line 827)
        # Getting the type of 'np' (line 827)
        np_23154 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 827, 39), 'np')
        # Obtaining the member 'complex64' of a type (line 827)
        complex64_23155 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 827, 39), np_23154, 'complex64')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 827, 24), tuple_23151, complex64_23155)
        
        # Assigning a type to the variable 'overwritable' (line 827)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 827, 8), 'overwritable', tuple_23151)
        
        # Getting the type of 'self' (line 828)
        self_23156 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 828, 21), 'self')
        # Obtaining the member 'dtypes' of a type (line 828)
        dtypes_23157 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 828, 21), self_23156, 'dtypes')
        # Testing the type of a for loop iterable (line 828)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 828, 8), dtypes_23157)
        # Getting the type of the for loop variable (line 828)
        for_loop_var_23158 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 828, 8), dtypes_23157)
        # Assigning a type to the variable 'dtype' (line 828)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 828, 8), 'dtype', for_loop_var_23158)
        # SSA begins for a for statement (line 828)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to _check_1d(...): (line 829)
        # Processing the call arguments (line 829)
        # Getting the type of 'fft' (line 829)
        fft_23161 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 829, 27), 'fft', False)
        # Getting the type of 'dtype' (line 829)
        dtype_23162 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 829, 32), 'dtype', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 829)
        tuple_23163 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 829, 40), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 829)
        # Adding element type (line 829)
        int_23164 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 829, 40), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 829, 40), tuple_23163, int_23164)
        
        int_23165 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 829, 46), 'int')
        # Getting the type of 'overwritable' (line 829)
        overwritable_23166 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 829, 50), 'overwritable', False)
        # Processing the call keyword arguments (line 829)
        kwargs_23167 = {}
        # Getting the type of 'self' (line 829)
        self_23159 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 829, 12), 'self', False)
        # Obtaining the member '_check_1d' of a type (line 829)
        _check_1d_23160 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 829, 12), self_23159, '_check_1d')
        # Calling _check_1d(args, kwargs) (line 829)
        _check_1d_call_result_23168 = invoke(stypy.reporting.localization.Localization(__file__, 829, 12), _check_1d_23160, *[fft_23161, dtype_23162, tuple_23163, int_23165, overwritable_23166], **kwargs_23167)
        
        
        # Call to _check_1d(...): (line 830)
        # Processing the call arguments (line 830)
        # Getting the type of 'fft' (line 830)
        fft_23171 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 830, 27), 'fft', False)
        # Getting the type of 'dtype' (line 830)
        dtype_23172 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 830, 32), 'dtype', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 830)
        tuple_23173 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 830, 40), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 830)
        # Adding element type (line 830)
        int_23174 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 830, 40), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 830, 40), tuple_23173, int_23174)
        # Adding element type (line 830)
        int_23175 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 830, 44), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 830, 40), tuple_23173, int_23175)
        
        int_23176 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 830, 48), 'int')
        # Getting the type of 'overwritable' (line 830)
        overwritable_23177 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 830, 51), 'overwritable', False)
        # Processing the call keyword arguments (line 830)
        kwargs_23178 = {}
        # Getting the type of 'self' (line 830)
        self_23169 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 830, 12), 'self', False)
        # Obtaining the member '_check_1d' of a type (line 830)
        _check_1d_23170 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 830, 12), self_23169, '_check_1d')
        # Calling _check_1d(args, kwargs) (line 830)
        _check_1d_call_result_23179 = invoke(stypy.reporting.localization.Localization(__file__, 830, 12), _check_1d_23170, *[fft_23171, dtype_23172, tuple_23173, int_23176, overwritable_23177], **kwargs_23178)
        
        
        # Call to _check_1d(...): (line 831)
        # Processing the call arguments (line 831)
        # Getting the type of 'fft' (line 831)
        fft_23182 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 831, 27), 'fft', False)
        # Getting the type of 'dtype' (line 831)
        dtype_23183 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 831, 32), 'dtype', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 831)
        tuple_23184 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 831, 40), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 831)
        # Adding element type (line 831)
        int_23185 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 831, 40), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 831, 40), tuple_23184, int_23185)
        # Adding element type (line 831)
        int_23186 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 831, 43), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 831, 40), tuple_23184, int_23186)
        
        int_23187 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 831, 48), 'int')
        # Getting the type of 'overwritable' (line 831)
        overwritable_23188 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 831, 51), 'overwritable', False)
        # Processing the call keyword arguments (line 831)
        kwargs_23189 = {}
        # Getting the type of 'self' (line 831)
        self_23180 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 831, 12), 'self', False)
        # Obtaining the member '_check_1d' of a type (line 831)
        _check_1d_23181 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 831, 12), self_23180, '_check_1d')
        # Calling _check_1d(args, kwargs) (line 831)
        _check_1d_call_result_23190 = invoke(stypy.reporting.localization.Localization(__file__, 831, 12), _check_1d_23181, *[fft_23182, dtype_23183, tuple_23184, int_23187, overwritable_23188], **kwargs_23189)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_fft(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_fft' in the type store
        # Getting the type of 'stypy_return_type' (line 826)
        stypy_return_type_23191 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 826, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_23191)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_fft'
        return stypy_return_type_23191


    @norecursion
    def test_ifft(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_ifft'
        module_type_store = module_type_store.open_function_context('test_ifft', 833, 4, False)
        # Assigning a type to the variable 'self' (line 834)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 834, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestOverwrite.test_ifft.__dict__.__setitem__('stypy_localization', localization)
        TestOverwrite.test_ifft.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestOverwrite.test_ifft.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestOverwrite.test_ifft.__dict__.__setitem__('stypy_function_name', 'TestOverwrite.test_ifft')
        TestOverwrite.test_ifft.__dict__.__setitem__('stypy_param_names_list', [])
        TestOverwrite.test_ifft.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestOverwrite.test_ifft.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestOverwrite.test_ifft.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestOverwrite.test_ifft.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestOverwrite.test_ifft.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestOverwrite.test_ifft.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestOverwrite.test_ifft', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_ifft', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_ifft(...)' code ##################

        
        # Assigning a Tuple to a Name (line 834):
        
        # Obtaining an instance of the builtin type 'tuple' (line 834)
        tuple_23192 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 834, 24), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 834)
        # Adding element type (line 834)
        # Getting the type of 'np' (line 834)
        np_23193 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 834, 24), 'np')
        # Obtaining the member 'complex128' of a type (line 834)
        complex128_23194 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 834, 24), np_23193, 'complex128')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 834, 24), tuple_23192, complex128_23194)
        # Adding element type (line 834)
        # Getting the type of 'np' (line 834)
        np_23195 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 834, 39), 'np')
        # Obtaining the member 'complex64' of a type (line 834)
        complex64_23196 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 834, 39), np_23195, 'complex64')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 834, 24), tuple_23192, complex64_23196)
        
        # Assigning a type to the variable 'overwritable' (line 834)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 834, 8), 'overwritable', tuple_23192)
        
        # Getting the type of 'self' (line 835)
        self_23197 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 835, 21), 'self')
        # Obtaining the member 'dtypes' of a type (line 835)
        dtypes_23198 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 835, 21), self_23197, 'dtypes')
        # Testing the type of a for loop iterable (line 835)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 835, 8), dtypes_23198)
        # Getting the type of the for loop variable (line 835)
        for_loop_var_23199 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 835, 8), dtypes_23198)
        # Assigning a type to the variable 'dtype' (line 835)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 835, 8), 'dtype', for_loop_var_23199)
        # SSA begins for a for statement (line 835)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to _check_1d(...): (line 836)
        # Processing the call arguments (line 836)
        # Getting the type of 'ifft' (line 836)
        ifft_23202 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 836, 27), 'ifft', False)
        # Getting the type of 'dtype' (line 836)
        dtype_23203 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 836, 33), 'dtype', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 836)
        tuple_23204 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 836, 41), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 836)
        # Adding element type (line 836)
        int_23205 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 836, 41), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 836, 41), tuple_23204, int_23205)
        
        int_23206 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 836, 47), 'int')
        # Getting the type of 'overwritable' (line 836)
        overwritable_23207 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 836, 51), 'overwritable', False)
        # Processing the call keyword arguments (line 836)
        kwargs_23208 = {}
        # Getting the type of 'self' (line 836)
        self_23200 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 836, 12), 'self', False)
        # Obtaining the member '_check_1d' of a type (line 836)
        _check_1d_23201 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 836, 12), self_23200, '_check_1d')
        # Calling _check_1d(args, kwargs) (line 836)
        _check_1d_call_result_23209 = invoke(stypy.reporting.localization.Localization(__file__, 836, 12), _check_1d_23201, *[ifft_23202, dtype_23203, tuple_23204, int_23206, overwritable_23207], **kwargs_23208)
        
        
        # Call to _check_1d(...): (line 837)
        # Processing the call arguments (line 837)
        # Getting the type of 'ifft' (line 837)
        ifft_23212 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 837, 27), 'ifft', False)
        # Getting the type of 'dtype' (line 837)
        dtype_23213 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 837, 33), 'dtype', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 837)
        tuple_23214 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 837, 41), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 837)
        # Adding element type (line 837)
        int_23215 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 837, 41), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 837, 41), tuple_23214, int_23215)
        # Adding element type (line 837)
        int_23216 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 837, 45), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 837, 41), tuple_23214, int_23216)
        
        int_23217 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 837, 49), 'int')
        # Getting the type of 'overwritable' (line 837)
        overwritable_23218 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 837, 52), 'overwritable', False)
        # Processing the call keyword arguments (line 837)
        kwargs_23219 = {}
        # Getting the type of 'self' (line 837)
        self_23210 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 837, 12), 'self', False)
        # Obtaining the member '_check_1d' of a type (line 837)
        _check_1d_23211 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 837, 12), self_23210, '_check_1d')
        # Calling _check_1d(args, kwargs) (line 837)
        _check_1d_call_result_23220 = invoke(stypy.reporting.localization.Localization(__file__, 837, 12), _check_1d_23211, *[ifft_23212, dtype_23213, tuple_23214, int_23217, overwritable_23218], **kwargs_23219)
        
        
        # Call to _check_1d(...): (line 838)
        # Processing the call arguments (line 838)
        # Getting the type of 'ifft' (line 838)
        ifft_23223 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 838, 27), 'ifft', False)
        # Getting the type of 'dtype' (line 838)
        dtype_23224 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 838, 33), 'dtype', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 838)
        tuple_23225 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 838, 41), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 838)
        # Adding element type (line 838)
        int_23226 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 838, 41), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 838, 41), tuple_23225, int_23226)
        # Adding element type (line 838)
        int_23227 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 838, 44), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 838, 41), tuple_23225, int_23227)
        
        int_23228 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 838, 49), 'int')
        # Getting the type of 'overwritable' (line 838)
        overwritable_23229 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 838, 52), 'overwritable', False)
        # Processing the call keyword arguments (line 838)
        kwargs_23230 = {}
        # Getting the type of 'self' (line 838)
        self_23221 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 838, 12), 'self', False)
        # Obtaining the member '_check_1d' of a type (line 838)
        _check_1d_23222 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 838, 12), self_23221, '_check_1d')
        # Calling _check_1d(args, kwargs) (line 838)
        _check_1d_call_result_23231 = invoke(stypy.reporting.localization.Localization(__file__, 838, 12), _check_1d_23222, *[ifft_23223, dtype_23224, tuple_23225, int_23228, overwritable_23229], **kwargs_23230)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_ifft(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_ifft' in the type store
        # Getting the type of 'stypy_return_type' (line 833)
        stypy_return_type_23232 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 833, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_23232)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_ifft'
        return stypy_return_type_23232


    @norecursion
    def test_rfft(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_rfft'
        module_type_store = module_type_store.open_function_context('test_rfft', 840, 4, False)
        # Assigning a type to the variable 'self' (line 841)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 841, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestOverwrite.test_rfft.__dict__.__setitem__('stypy_localization', localization)
        TestOverwrite.test_rfft.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestOverwrite.test_rfft.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestOverwrite.test_rfft.__dict__.__setitem__('stypy_function_name', 'TestOverwrite.test_rfft')
        TestOverwrite.test_rfft.__dict__.__setitem__('stypy_param_names_list', [])
        TestOverwrite.test_rfft.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestOverwrite.test_rfft.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestOverwrite.test_rfft.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestOverwrite.test_rfft.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestOverwrite.test_rfft.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestOverwrite.test_rfft.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestOverwrite.test_rfft', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_rfft', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_rfft(...)' code ##################

        
        # Assigning a Attribute to a Name (line 841):
        # Getting the type of 'self' (line 841)
        self_23233 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 841, 23), 'self')
        # Obtaining the member 'real_dtypes' of a type (line 841)
        real_dtypes_23234 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 841, 23), self_23233, 'real_dtypes')
        # Assigning a type to the variable 'overwritable' (line 841)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 841, 8), 'overwritable', real_dtypes_23234)
        
        # Getting the type of 'self' (line 842)
        self_23235 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 842, 21), 'self')
        # Obtaining the member 'real_dtypes' of a type (line 842)
        real_dtypes_23236 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 842, 21), self_23235, 'real_dtypes')
        # Testing the type of a for loop iterable (line 842)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 842, 8), real_dtypes_23236)
        # Getting the type of the for loop variable (line 842)
        for_loop_var_23237 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 842, 8), real_dtypes_23236)
        # Assigning a type to the variable 'dtype' (line 842)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 842, 8), 'dtype', for_loop_var_23237)
        # SSA begins for a for statement (line 842)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to _check_1d(...): (line 843)
        # Processing the call arguments (line 843)
        # Getting the type of 'rfft' (line 843)
        rfft_23240 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 843, 27), 'rfft', False)
        # Getting the type of 'dtype' (line 843)
        dtype_23241 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 843, 33), 'dtype', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 843)
        tuple_23242 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 843, 41), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 843)
        # Adding element type (line 843)
        int_23243 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 843, 41), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 843, 41), tuple_23242, int_23243)
        
        int_23244 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 843, 47), 'int')
        # Getting the type of 'overwritable' (line 843)
        overwritable_23245 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 843, 51), 'overwritable', False)
        # Processing the call keyword arguments (line 843)
        kwargs_23246 = {}
        # Getting the type of 'self' (line 843)
        self_23238 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 843, 12), 'self', False)
        # Obtaining the member '_check_1d' of a type (line 843)
        _check_1d_23239 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 843, 12), self_23238, '_check_1d')
        # Calling _check_1d(args, kwargs) (line 843)
        _check_1d_call_result_23247 = invoke(stypy.reporting.localization.Localization(__file__, 843, 12), _check_1d_23239, *[rfft_23240, dtype_23241, tuple_23242, int_23244, overwritable_23245], **kwargs_23246)
        
        
        # Call to _check_1d(...): (line 844)
        # Processing the call arguments (line 844)
        # Getting the type of 'rfft' (line 844)
        rfft_23250 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 844, 27), 'rfft', False)
        # Getting the type of 'dtype' (line 844)
        dtype_23251 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 844, 33), 'dtype', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 844)
        tuple_23252 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 844, 41), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 844)
        # Adding element type (line 844)
        int_23253 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 844, 41), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 844, 41), tuple_23252, int_23253)
        # Adding element type (line 844)
        int_23254 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 844, 45), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 844, 41), tuple_23252, int_23254)
        
        int_23255 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 844, 49), 'int')
        # Getting the type of 'overwritable' (line 844)
        overwritable_23256 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 844, 52), 'overwritable', False)
        # Processing the call keyword arguments (line 844)
        kwargs_23257 = {}
        # Getting the type of 'self' (line 844)
        self_23248 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 844, 12), 'self', False)
        # Obtaining the member '_check_1d' of a type (line 844)
        _check_1d_23249 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 844, 12), self_23248, '_check_1d')
        # Calling _check_1d(args, kwargs) (line 844)
        _check_1d_call_result_23258 = invoke(stypy.reporting.localization.Localization(__file__, 844, 12), _check_1d_23249, *[rfft_23250, dtype_23251, tuple_23252, int_23255, overwritable_23256], **kwargs_23257)
        
        
        # Call to _check_1d(...): (line 845)
        # Processing the call arguments (line 845)
        # Getting the type of 'rfft' (line 845)
        rfft_23261 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 845, 27), 'rfft', False)
        # Getting the type of 'dtype' (line 845)
        dtype_23262 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 845, 33), 'dtype', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 845)
        tuple_23263 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 845, 41), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 845)
        # Adding element type (line 845)
        int_23264 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 845, 41), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 845, 41), tuple_23263, int_23264)
        # Adding element type (line 845)
        int_23265 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 845, 44), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 845, 41), tuple_23263, int_23265)
        
        int_23266 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 845, 49), 'int')
        # Getting the type of 'overwritable' (line 845)
        overwritable_23267 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 845, 52), 'overwritable', False)
        # Processing the call keyword arguments (line 845)
        kwargs_23268 = {}
        # Getting the type of 'self' (line 845)
        self_23259 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 845, 12), 'self', False)
        # Obtaining the member '_check_1d' of a type (line 845)
        _check_1d_23260 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 845, 12), self_23259, '_check_1d')
        # Calling _check_1d(args, kwargs) (line 845)
        _check_1d_call_result_23269 = invoke(stypy.reporting.localization.Localization(__file__, 845, 12), _check_1d_23260, *[rfft_23261, dtype_23262, tuple_23263, int_23266, overwritable_23267], **kwargs_23268)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_rfft(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_rfft' in the type store
        # Getting the type of 'stypy_return_type' (line 840)
        stypy_return_type_23270 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 840, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_23270)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_rfft'
        return stypy_return_type_23270


    @norecursion
    def test_irfft(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_irfft'
        module_type_store = module_type_store.open_function_context('test_irfft', 847, 4, False)
        # Assigning a type to the variable 'self' (line 848)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 848, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestOverwrite.test_irfft.__dict__.__setitem__('stypy_localization', localization)
        TestOverwrite.test_irfft.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestOverwrite.test_irfft.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestOverwrite.test_irfft.__dict__.__setitem__('stypy_function_name', 'TestOverwrite.test_irfft')
        TestOverwrite.test_irfft.__dict__.__setitem__('stypy_param_names_list', [])
        TestOverwrite.test_irfft.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestOverwrite.test_irfft.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestOverwrite.test_irfft.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestOverwrite.test_irfft.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestOverwrite.test_irfft.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestOverwrite.test_irfft.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestOverwrite.test_irfft', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_irfft', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_irfft(...)' code ##################

        
        # Assigning a Attribute to a Name (line 848):
        # Getting the type of 'self' (line 848)
        self_23271 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 848, 23), 'self')
        # Obtaining the member 'real_dtypes' of a type (line 848)
        real_dtypes_23272 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 848, 23), self_23271, 'real_dtypes')
        # Assigning a type to the variable 'overwritable' (line 848)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 848, 8), 'overwritable', real_dtypes_23272)
        
        # Getting the type of 'self' (line 849)
        self_23273 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 849, 21), 'self')
        # Obtaining the member 'real_dtypes' of a type (line 849)
        real_dtypes_23274 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 849, 21), self_23273, 'real_dtypes')
        # Testing the type of a for loop iterable (line 849)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 849, 8), real_dtypes_23274)
        # Getting the type of the for loop variable (line 849)
        for_loop_var_23275 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 849, 8), real_dtypes_23274)
        # Assigning a type to the variable 'dtype' (line 849)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 849, 8), 'dtype', for_loop_var_23275)
        # SSA begins for a for statement (line 849)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to _check_1d(...): (line 850)
        # Processing the call arguments (line 850)
        # Getting the type of 'irfft' (line 850)
        irfft_23278 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 850, 27), 'irfft', False)
        # Getting the type of 'dtype' (line 850)
        dtype_23279 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 850, 34), 'dtype', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 850)
        tuple_23280 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 850, 42), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 850)
        # Adding element type (line 850)
        int_23281 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 850, 42), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 850, 42), tuple_23280, int_23281)
        
        int_23282 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 850, 48), 'int')
        # Getting the type of 'overwritable' (line 850)
        overwritable_23283 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 850, 52), 'overwritable', False)
        # Processing the call keyword arguments (line 850)
        kwargs_23284 = {}
        # Getting the type of 'self' (line 850)
        self_23276 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 850, 12), 'self', False)
        # Obtaining the member '_check_1d' of a type (line 850)
        _check_1d_23277 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 850, 12), self_23276, '_check_1d')
        # Calling _check_1d(args, kwargs) (line 850)
        _check_1d_call_result_23285 = invoke(stypy.reporting.localization.Localization(__file__, 850, 12), _check_1d_23277, *[irfft_23278, dtype_23279, tuple_23280, int_23282, overwritable_23283], **kwargs_23284)
        
        
        # Call to _check_1d(...): (line 851)
        # Processing the call arguments (line 851)
        # Getting the type of 'irfft' (line 851)
        irfft_23288 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 851, 27), 'irfft', False)
        # Getting the type of 'dtype' (line 851)
        dtype_23289 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 851, 34), 'dtype', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 851)
        tuple_23290 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 851, 42), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 851)
        # Adding element type (line 851)
        int_23291 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 851, 42), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 851, 42), tuple_23290, int_23291)
        # Adding element type (line 851)
        int_23292 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 851, 46), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 851, 42), tuple_23290, int_23292)
        
        int_23293 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 851, 50), 'int')
        # Getting the type of 'overwritable' (line 851)
        overwritable_23294 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 851, 53), 'overwritable', False)
        # Processing the call keyword arguments (line 851)
        kwargs_23295 = {}
        # Getting the type of 'self' (line 851)
        self_23286 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 851, 12), 'self', False)
        # Obtaining the member '_check_1d' of a type (line 851)
        _check_1d_23287 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 851, 12), self_23286, '_check_1d')
        # Calling _check_1d(args, kwargs) (line 851)
        _check_1d_call_result_23296 = invoke(stypy.reporting.localization.Localization(__file__, 851, 12), _check_1d_23287, *[irfft_23288, dtype_23289, tuple_23290, int_23293, overwritable_23294], **kwargs_23295)
        
        
        # Call to _check_1d(...): (line 852)
        # Processing the call arguments (line 852)
        # Getting the type of 'irfft' (line 852)
        irfft_23299 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 852, 27), 'irfft', False)
        # Getting the type of 'dtype' (line 852)
        dtype_23300 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 852, 34), 'dtype', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 852)
        tuple_23301 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 852, 42), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 852)
        # Adding element type (line 852)
        int_23302 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 852, 42), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 852, 42), tuple_23301, int_23302)
        # Adding element type (line 852)
        int_23303 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 852, 45), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 852, 42), tuple_23301, int_23303)
        
        int_23304 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 852, 50), 'int')
        # Getting the type of 'overwritable' (line 852)
        overwritable_23305 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 852, 53), 'overwritable', False)
        # Processing the call keyword arguments (line 852)
        kwargs_23306 = {}
        # Getting the type of 'self' (line 852)
        self_23297 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 852, 12), 'self', False)
        # Obtaining the member '_check_1d' of a type (line 852)
        _check_1d_23298 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 852, 12), self_23297, '_check_1d')
        # Calling _check_1d(args, kwargs) (line 852)
        _check_1d_call_result_23307 = invoke(stypy.reporting.localization.Localization(__file__, 852, 12), _check_1d_23298, *[irfft_23299, dtype_23300, tuple_23301, int_23304, overwritable_23305], **kwargs_23306)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_irfft(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_irfft' in the type store
        # Getting the type of 'stypy_return_type' (line 847)
        stypy_return_type_23308 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 847, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_23308)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_irfft'
        return stypy_return_type_23308


    @norecursion
    def _check_nd_one(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_check_nd_one'
        module_type_store = module_type_store.open_function_context('_check_nd_one', 854, 4, False)
        # Assigning a type to the variable 'self' (line 855)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 855, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestOverwrite._check_nd_one.__dict__.__setitem__('stypy_localization', localization)
        TestOverwrite._check_nd_one.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestOverwrite._check_nd_one.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestOverwrite._check_nd_one.__dict__.__setitem__('stypy_function_name', 'TestOverwrite._check_nd_one')
        TestOverwrite._check_nd_one.__dict__.__setitem__('stypy_param_names_list', ['routine', 'dtype', 'shape', 'axes', 'overwritable_dtypes'])
        TestOverwrite._check_nd_one.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestOverwrite._check_nd_one.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestOverwrite._check_nd_one.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestOverwrite._check_nd_one.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestOverwrite._check_nd_one.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestOverwrite._check_nd_one.__dict__.__setitem__('stypy_declared_arg_number', 6)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestOverwrite._check_nd_one', ['routine', 'dtype', 'shape', 'axes', 'overwritable_dtypes'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_check_nd_one', localization, ['routine', 'dtype', 'shape', 'axes', 'overwritable_dtypes'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_check_nd_one(...)' code ##################

        
        # Call to seed(...): (line 855)
        # Processing the call arguments (line 855)
        int_23312 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 855, 23), 'int')
        # Processing the call keyword arguments (line 855)
        kwargs_23313 = {}
        # Getting the type of 'np' (line 855)
        np_23309 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 855, 8), 'np', False)
        # Obtaining the member 'random' of a type (line 855)
        random_23310 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 855, 8), np_23309, 'random')
        # Obtaining the member 'seed' of a type (line 855)
        seed_23311 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 855, 8), random_23310, 'seed')
        # Calling seed(args, kwargs) (line 855)
        seed_call_result_23314 = invoke(stypy.reporting.localization.Localization(__file__, 855, 8), seed_23311, *[int_23312], **kwargs_23313)
        
        
        
        # Call to issubdtype(...): (line 856)
        # Processing the call arguments (line 856)
        # Getting the type of 'dtype' (line 856)
        dtype_23317 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 856, 25), 'dtype', False)
        # Getting the type of 'np' (line 856)
        np_23318 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 856, 32), 'np', False)
        # Obtaining the member 'complexfloating' of a type (line 856)
        complexfloating_23319 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 856, 32), np_23318, 'complexfloating')
        # Processing the call keyword arguments (line 856)
        kwargs_23320 = {}
        # Getting the type of 'np' (line 856)
        np_23315 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 856, 11), 'np', False)
        # Obtaining the member 'issubdtype' of a type (line 856)
        issubdtype_23316 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 856, 11), np_23315, 'issubdtype')
        # Calling issubdtype(args, kwargs) (line 856)
        issubdtype_call_result_23321 = invoke(stypy.reporting.localization.Localization(__file__, 856, 11), issubdtype_23316, *[dtype_23317, complexfloating_23319], **kwargs_23320)
        
        # Testing the type of an if condition (line 856)
        if_condition_23322 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 856, 8), issubdtype_call_result_23321)
        # Assigning a type to the variable 'if_condition_23322' (line 856)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 856, 8), 'if_condition_23322', if_condition_23322)
        # SSA begins for if statement (line 856)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a BinOp to a Name (line 857):
        
        # Call to randn(...): (line 857)
        # Getting the type of 'shape' (line 857)
        shape_23326 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 857, 36), 'shape', False)
        # Processing the call keyword arguments (line 857)
        kwargs_23327 = {}
        # Getting the type of 'np' (line 857)
        np_23323 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 857, 19), 'np', False)
        # Obtaining the member 'random' of a type (line 857)
        random_23324 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 857, 19), np_23323, 'random')
        # Obtaining the member 'randn' of a type (line 857)
        randn_23325 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 857, 19), random_23324, 'randn')
        # Calling randn(args, kwargs) (line 857)
        randn_call_result_23328 = invoke(stypy.reporting.localization.Localization(__file__, 857, 19), randn_23325, *[shape_23326], **kwargs_23327)
        
        complex_23329 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 857, 45), 'complex')
        
        # Call to randn(...): (line 857)
        # Getting the type of 'shape' (line 857)
        shape_23333 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 857, 65), 'shape', False)
        # Processing the call keyword arguments (line 857)
        kwargs_23334 = {}
        # Getting the type of 'np' (line 857)
        np_23330 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 857, 48), 'np', False)
        # Obtaining the member 'random' of a type (line 857)
        random_23331 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 857, 48), np_23330, 'random')
        # Obtaining the member 'randn' of a type (line 857)
        randn_23332 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 857, 48), random_23331, 'randn')
        # Calling randn(args, kwargs) (line 857)
        randn_call_result_23335 = invoke(stypy.reporting.localization.Localization(__file__, 857, 48), randn_23332, *[shape_23333], **kwargs_23334)
        
        # Applying the binary operator '*' (line 857)
        result_mul_23336 = python_operator(stypy.reporting.localization.Localization(__file__, 857, 45), '*', complex_23329, randn_call_result_23335)
        
        # Applying the binary operator '+' (line 857)
        result_add_23337 = python_operator(stypy.reporting.localization.Localization(__file__, 857, 19), '+', randn_call_result_23328, result_mul_23336)
        
        # Assigning a type to the variable 'data' (line 857)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 857, 12), 'data', result_add_23337)
        # SSA branch for the else part of an if statement (line 856)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Call to a Name (line 859):
        
        # Call to randn(...): (line 859)
        # Getting the type of 'shape' (line 859)
        shape_23341 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 859, 36), 'shape', False)
        # Processing the call keyword arguments (line 859)
        kwargs_23342 = {}
        # Getting the type of 'np' (line 859)
        np_23338 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 859, 19), 'np', False)
        # Obtaining the member 'random' of a type (line 859)
        random_23339 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 859, 19), np_23338, 'random')
        # Obtaining the member 'randn' of a type (line 859)
        randn_23340 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 859, 19), random_23339, 'randn')
        # Calling randn(args, kwargs) (line 859)
        randn_call_result_23343 = invoke(stypy.reporting.localization.Localization(__file__, 859, 19), randn_23340, *[shape_23341], **kwargs_23342)
        
        # Assigning a type to the variable 'data' (line 859)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 859, 12), 'data', randn_call_result_23343)
        # SSA join for if statement (line 856)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 860):
        
        # Call to astype(...): (line 860)
        # Processing the call arguments (line 860)
        # Getting the type of 'dtype' (line 860)
        dtype_23346 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 860, 27), 'dtype', False)
        # Processing the call keyword arguments (line 860)
        kwargs_23347 = {}
        # Getting the type of 'data' (line 860)
        data_23344 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 860, 15), 'data', False)
        # Obtaining the member 'astype' of a type (line 860)
        astype_23345 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 860, 15), data_23344, 'astype')
        # Calling astype(args, kwargs) (line 860)
        astype_call_result_23348 = invoke(stypy.reporting.localization.Localization(__file__, 860, 15), astype_23345, *[dtype_23346], **kwargs_23347)
        
        # Assigning a type to the variable 'data' (line 860)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 860, 8), 'data', astype_call_result_23348)

        @norecursion
        def fftshape_iter(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'fftshape_iter'
            module_type_store = module_type_store.open_function_context('fftshape_iter', 862, 8, False)
            
            # Passed parameters checking function
            fftshape_iter.stypy_localization = localization
            fftshape_iter.stypy_type_of_self = None
            fftshape_iter.stypy_type_store = module_type_store
            fftshape_iter.stypy_function_name = 'fftshape_iter'
            fftshape_iter.stypy_param_names_list = ['shp']
            fftshape_iter.stypy_varargs_param_name = None
            fftshape_iter.stypy_kwargs_param_name = None
            fftshape_iter.stypy_call_defaults = defaults
            fftshape_iter.stypy_call_varargs = varargs
            fftshape_iter.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'fftshape_iter', ['shp'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'fftshape_iter', localization, ['shp'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'fftshape_iter(...)' code ##################

            
            
            
            # Call to len(...): (line 863)
            # Processing the call arguments (line 863)
            # Getting the type of 'shp' (line 863)
            shp_23350 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 863, 19), 'shp', False)
            # Processing the call keyword arguments (line 863)
            kwargs_23351 = {}
            # Getting the type of 'len' (line 863)
            len_23349 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 863, 15), 'len', False)
            # Calling len(args, kwargs) (line 863)
            len_call_result_23352 = invoke(stypy.reporting.localization.Localization(__file__, 863, 15), len_23349, *[shp_23350], **kwargs_23351)
            
            int_23353 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 863, 27), 'int')
            # Applying the binary operator '<=' (line 863)
            result_le_23354 = python_operator(stypy.reporting.localization.Localization(__file__, 863, 15), '<=', len_call_result_23352, int_23353)
            
            # Testing the type of an if condition (line 863)
            if_condition_23355 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 863, 12), result_le_23354)
            # Assigning a type to the variable 'if_condition_23355' (line 863)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 863, 12), 'if_condition_23355', if_condition_23355)
            # SSA begins for if statement (line 863)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            # Creating a generator
            
            # Obtaining an instance of the builtin type 'tuple' (line 864)
            tuple_23356 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 864, 22), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 864)
            
            GeneratorType_23357 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 864, 16), 'GeneratorType')
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 864, 16), GeneratorType_23357, tuple_23356)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 864, 16), 'stypy_return_type', GeneratorType_23357)
            # SSA branch for the else part of an if statement (line 863)
            module_type_store.open_ssa_branch('else')
            
            
            # Obtaining an instance of the builtin type 'tuple' (line 866)
            tuple_23358 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 866, 26), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 866)
            # Adding element type (line 866)
            
            # Obtaining the type of the subscript
            int_23359 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 866, 30), 'int')
            # Getting the type of 'shp' (line 866)
            shp_23360 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 866, 26), 'shp')
            # Obtaining the member '__getitem__' of a type (line 866)
            getitem___23361 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 866, 26), shp_23360, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 866)
            subscript_call_result_23362 = invoke(stypy.reporting.localization.Localization(__file__, 866, 26), getitem___23361, int_23359)
            
            int_23363 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 866, 34), 'int')
            # Applying the binary operator '//' (line 866)
            result_floordiv_23364 = python_operator(stypy.reporting.localization.Localization(__file__, 866, 26), '//', subscript_call_result_23362, int_23363)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 866, 26), tuple_23358, result_floordiv_23364)
            # Adding element type (line 866)
            
            # Obtaining the type of the subscript
            int_23365 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 866, 41), 'int')
            # Getting the type of 'shp' (line 866)
            shp_23366 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 866, 37), 'shp')
            # Obtaining the member '__getitem__' of a type (line 866)
            getitem___23367 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 866, 37), shp_23366, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 866)
            subscript_call_result_23368 = invoke(stypy.reporting.localization.Localization(__file__, 866, 37), getitem___23367, int_23365)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 866, 26), tuple_23358, subscript_call_result_23368)
            # Adding element type (line 866)
            
            # Obtaining the type of the subscript
            int_23369 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 866, 49), 'int')
            # Getting the type of 'shp' (line 866)
            shp_23370 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 866, 45), 'shp')
            # Obtaining the member '__getitem__' of a type (line 866)
            getitem___23371 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 866, 45), shp_23370, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 866)
            subscript_call_result_23372 = invoke(stypy.reporting.localization.Localization(__file__, 866, 45), getitem___23371, int_23369)
            
            int_23373 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 866, 52), 'int')
            # Applying the binary operator '*' (line 866)
            result_mul_23374 = python_operator(stypy.reporting.localization.Localization(__file__, 866, 45), '*', subscript_call_result_23372, int_23373)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 866, 26), tuple_23358, result_mul_23374)
            
            # Testing the type of a for loop iterable (line 866)
            is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 866, 16), tuple_23358)
            # Getting the type of the for loop variable (line 866)
            for_loop_var_23375 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 866, 16), tuple_23358)
            # Assigning a type to the variable 'j' (line 866)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 866, 16), 'j', for_loop_var_23375)
            # SSA begins for a for statement (line 866)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
            
            
            # Call to fftshape_iter(...): (line 867)
            # Processing the call arguments (line 867)
            
            # Obtaining the type of the subscript
            int_23377 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 867, 50), 'int')
            slice_23378 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 867, 46), int_23377, None, None)
            # Getting the type of 'shp' (line 867)
            shp_23379 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 867, 46), 'shp', False)
            # Obtaining the member '__getitem__' of a type (line 867)
            getitem___23380 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 867, 46), shp_23379, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 867)
            subscript_call_result_23381 = invoke(stypy.reporting.localization.Localization(__file__, 867, 46), getitem___23380, slice_23378)
            
            # Processing the call keyword arguments (line 867)
            kwargs_23382 = {}
            # Getting the type of 'fftshape_iter' (line 867)
            fftshape_iter_23376 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 867, 32), 'fftshape_iter', False)
            # Calling fftshape_iter(args, kwargs) (line 867)
            fftshape_iter_call_result_23383 = invoke(stypy.reporting.localization.Localization(__file__, 867, 32), fftshape_iter_23376, *[subscript_call_result_23381], **kwargs_23382)
            
            # Testing the type of a for loop iterable (line 867)
            is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 867, 20), fftshape_iter_call_result_23383)
            # Getting the type of the for loop variable (line 867)
            for_loop_var_23384 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 867, 20), fftshape_iter_call_result_23383)
            # Assigning a type to the variable 'rest' (line 867)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 867, 20), 'rest', for_loop_var_23384)
            # SSA begins for a for statement (line 867)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
            # Creating a generator
            
            # Obtaining an instance of the builtin type 'tuple' (line 868)
            tuple_23385 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 868, 31), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 868)
            # Adding element type (line 868)
            # Getting the type of 'j' (line 868)
            j_23386 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 868, 31), 'j')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 868, 31), tuple_23385, j_23386)
            
            # Getting the type of 'rest' (line 868)
            rest_23387 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 868, 37), 'rest')
            # Applying the binary operator '+' (line 868)
            result_add_23388 = python_operator(stypy.reporting.localization.Localization(__file__, 868, 30), '+', tuple_23385, rest_23387)
            
            GeneratorType_23389 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 868, 24), 'GeneratorType')
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 868, 24), GeneratorType_23389, result_add_23388)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 868, 24), 'stypy_return_type', GeneratorType_23389)
            # SSA join for a for statement
            module_type_store = module_type_store.join_ssa_context()
            
            # SSA join for a for statement
            module_type_store = module_type_store.join_ssa_context()
            
            # SSA join for if statement (line 863)
            module_type_store = module_type_store.join_ssa_context()
            
            
            # ################# End of 'fftshape_iter(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'fftshape_iter' in the type store
            # Getting the type of 'stypy_return_type' (line 862)
            stypy_return_type_23390 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 862, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_23390)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'fftshape_iter'
            return stypy_return_type_23390

        # Assigning a type to the variable 'fftshape_iter' (line 862)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 862, 8), 'fftshape_iter', fftshape_iter)
        
        # Type idiom detected: calculating its left and rigth part (line 870)
        # Getting the type of 'axes' (line 870)
        axes_23391 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 870, 11), 'axes')
        # Getting the type of 'None' (line 870)
        None_23392 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 870, 19), 'None')
        
        (may_be_23393, more_types_in_union_23394) = may_be_none(axes_23391, None_23392)

        if may_be_23393:

            if more_types_in_union_23394:
                # Runtime conditional SSA (line 870)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Name to a Name (line 871):
            # Getting the type of 'shape' (line 871)
            shape_23395 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 871, 25), 'shape')
            # Assigning a type to the variable 'part_shape' (line 871)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 871, 12), 'part_shape', shape_23395)

            if more_types_in_union_23394:
                # Runtime conditional SSA for else branch (line 870)
                module_type_store.open_ssa_branch('idiom else')



        if ((not may_be_23393) or more_types_in_union_23394):
            
            # Assigning a Call to a Name (line 873):
            
            # Call to tuple(...): (line 873)
            # Processing the call arguments (line 873)
            
            # Call to take(...): (line 873)
            # Processing the call arguments (line 873)
            # Getting the type of 'shape' (line 873)
            shape_23399 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 873, 39), 'shape', False)
            # Getting the type of 'axes' (line 873)
            axes_23400 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 873, 46), 'axes', False)
            # Processing the call keyword arguments (line 873)
            kwargs_23401 = {}
            # Getting the type of 'np' (line 873)
            np_23397 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 873, 31), 'np', False)
            # Obtaining the member 'take' of a type (line 873)
            take_23398 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 873, 31), np_23397, 'take')
            # Calling take(args, kwargs) (line 873)
            take_call_result_23402 = invoke(stypy.reporting.localization.Localization(__file__, 873, 31), take_23398, *[shape_23399, axes_23400], **kwargs_23401)
            
            # Processing the call keyword arguments (line 873)
            kwargs_23403 = {}
            # Getting the type of 'tuple' (line 873)
            tuple_23396 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 873, 25), 'tuple', False)
            # Calling tuple(args, kwargs) (line 873)
            tuple_call_result_23404 = invoke(stypy.reporting.localization.Localization(__file__, 873, 25), tuple_23396, *[take_call_result_23402], **kwargs_23403)
            
            # Assigning a type to the variable 'part_shape' (line 873)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 873, 12), 'part_shape', tuple_call_result_23404)

            if (may_be_23393 and more_types_in_union_23394):
                # SSA join for if statement (line 870)
                module_type_store = module_type_store.join_ssa_context()


        
        
        
        # Obtaining an instance of the builtin type 'list' (line 875)
        list_23405 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 875, 27), 'list')
        # Adding type elements to the builtin type 'list' instance (line 875)
        # Adding element type (line 875)
        # Getting the type of 'True' (line 875)
        True_23406 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 875, 28), 'True')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 875, 27), list_23405, True_23406)
        # Adding element type (line 875)
        # Getting the type of 'False' (line 875)
        False_23407 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 875, 34), 'False')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 875, 27), list_23405, False_23407)
        
        # Testing the type of a for loop iterable (line 875)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 875, 8), list_23405)
        # Getting the type of the for loop variable (line 875)
        for_loop_var_23408 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 875, 8), list_23405)
        # Assigning a type to the variable 'overwrite_x' (line 875)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 875, 8), 'overwrite_x', for_loop_var_23408)
        # SSA begins for a for statement (line 875)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        
        # Call to fftshape_iter(...): (line 876)
        # Processing the call arguments (line 876)
        # Getting the type of 'part_shape' (line 876)
        part_shape_23410 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 876, 42), 'part_shape', False)
        # Processing the call keyword arguments (line 876)
        kwargs_23411 = {}
        # Getting the type of 'fftshape_iter' (line 876)
        fftshape_iter_23409 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 876, 28), 'fftshape_iter', False)
        # Calling fftshape_iter(args, kwargs) (line 876)
        fftshape_iter_call_result_23412 = invoke(stypy.reporting.localization.Localization(__file__, 876, 28), fftshape_iter_23409, *[part_shape_23410], **kwargs_23411)
        
        # Testing the type of a for loop iterable (line 876)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 876, 12), fftshape_iter_call_result_23412)
        # Getting the type of the for loop variable (line 876)
        for_loop_var_23413 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 876, 12), fftshape_iter_call_result_23412)
        # Assigning a type to the variable 'fftshape' (line 876)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 876, 12), 'fftshape', for_loop_var_23413)
        # SSA begins for a for statement (line 876)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a BoolOp to a Name (line 877):
        
        # Evaluating a boolean operation
        # Getting the type of 'overwrite_x' (line 877)
        overwrite_x_23414 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 877, 36), 'overwrite_x')
        
        # Getting the type of 'data' (line 878)
        data_23415 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 878, 40), 'data')
        # Obtaining the member 'ndim' of a type (line 878)
        ndim_23416 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 878, 40), data_23415, 'ndim')
        int_23417 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 878, 53), 'int')
        # Applying the binary operator '==' (line 878)
        result_eq_23418 = python_operator(stypy.reporting.localization.Localization(__file__, 878, 40), '==', ndim_23416, int_23417)
        
        # Applying the binary operator 'and' (line 877)
        result_and_keyword_23419 = python_operator(stypy.reporting.localization.Localization(__file__, 877, 36), 'and', overwrite_x_23414, result_eq_23418)
        
        # Call to all(...): (line 879)
        # Processing the call arguments (line 879)
        # Calculating list comprehension
        # Calculating comprehension expression
        
        # Call to zip(...): (line 879)
        # Processing the call arguments (line 879)
        # Getting the type of 'fftshape' (line 879)
        fftshape_23426 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 879, 70), 'fftshape', False)
        # Getting the type of 'part_shape' (line 879)
        part_shape_23427 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 879, 80), 'part_shape', False)
        # Processing the call keyword arguments (line 879)
        kwargs_23428 = {}
        # Getting the type of 'zip' (line 879)
        zip_23425 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 879, 66), 'zip', False)
        # Calling zip(args, kwargs) (line 879)
        zip_call_result_23429 = invoke(stypy.reporting.localization.Localization(__file__, 879, 66), zip_23425, *[fftshape_23426, part_shape_23427], **kwargs_23428)
        
        comprehension_23430 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 879, 48), zip_call_result_23429)
        # Assigning a type to the variable 'x' (line 879)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 879, 48), 'x', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 879, 48), comprehension_23430))
        # Assigning a type to the variable 'y' (line 879)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 879, 48), 'y', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 879, 48), comprehension_23430))
        
        # Getting the type of 'x' (line 879)
        x_23422 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 879, 48), 'x', False)
        # Getting the type of 'y' (line 879)
        y_23423 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 879, 52), 'y', False)
        # Applying the binary operator '<' (line 879)
        result_lt_23424 = python_operator(stypy.reporting.localization.Localization(__file__, 879, 48), '<', x_23422, y_23423)
        
        list_23431 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 879, 48), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 879, 48), list_23431, result_lt_23424)
        # Processing the call keyword arguments (line 879)
        kwargs_23432 = {}
        # Getting the type of 'np' (line 879)
        np_23420 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 879, 40), 'np', False)
        # Obtaining the member 'all' of a type (line 879)
        all_23421 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 879, 40), np_23420, 'all')
        # Calling all(args, kwargs) (line 879)
        all_call_result_23433 = invoke(stypy.reporting.localization.Localization(__file__, 879, 40), all_23421, *[list_23431], **kwargs_23432)
        
        # Applying the binary operator 'and' (line 877)
        result_and_keyword_23434 = python_operator(stypy.reporting.localization.Localization(__file__, 877, 36), 'and', result_and_keyword_23419, all_call_result_23433)
        
        # Getting the type of 'dtype' (line 880)
        dtype_23435 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 880, 40), 'dtype')
        # Getting the type of 'overwritable_dtypes' (line 880)
        overwritable_dtypes_23436 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 880, 49), 'overwritable_dtypes')
        # Applying the binary operator 'in' (line 880)
        result_contains_23437 = python_operator(stypy.reporting.localization.Localization(__file__, 880, 40), 'in', dtype_23435, overwritable_dtypes_23436)
        
        # Applying the binary operator 'and' (line 877)
        result_and_keyword_23438 = python_operator(stypy.reporting.localization.Localization(__file__, 877, 36), 'and', result_and_keyword_23434, result_contains_23437)
        
        # Assigning a type to the variable 'should_overwrite' (line 877)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 877, 16), 'should_overwrite', result_and_keyword_23438)
        
        # Call to _check(...): (line 881)
        # Processing the call arguments (line 881)
        # Getting the type of 'data' (line 881)
        data_23441 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 881, 28), 'data', False)
        # Getting the type of 'routine' (line 881)
        routine_23442 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 881, 34), 'routine', False)
        # Getting the type of 'fftshape' (line 881)
        fftshape_23443 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 881, 43), 'fftshape', False)
        # Getting the type of 'axes' (line 881)
        axes_23444 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 881, 53), 'axes', False)
        # Processing the call keyword arguments (line 881)
        # Getting the type of 'overwrite_x' (line 882)
        overwrite_x_23445 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 882, 40), 'overwrite_x', False)
        keyword_23446 = overwrite_x_23445
        # Getting the type of 'should_overwrite' (line 883)
        should_overwrite_23447 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 883, 45), 'should_overwrite', False)
        keyword_23448 = should_overwrite_23447
        kwargs_23449 = {'should_overwrite': keyword_23448, 'overwrite_x': keyword_23446}
        # Getting the type of 'self' (line 881)
        self_23439 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 881, 16), 'self', False)
        # Obtaining the member '_check' of a type (line 881)
        _check_23440 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 881, 16), self_23439, '_check')
        # Calling _check(args, kwargs) (line 881)
        _check_call_result_23450 = invoke(stypy.reporting.localization.Localization(__file__, 881, 16), _check_23440, *[data_23441, routine_23442, fftshape_23443, axes_23444], **kwargs_23449)
        
        
        
        # Getting the type of 'data' (line 884)
        data_23451 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 884, 19), 'data')
        # Obtaining the member 'ndim' of a type (line 884)
        ndim_23452 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 884, 19), data_23451, 'ndim')
        int_23453 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 884, 31), 'int')
        # Applying the binary operator '>' (line 884)
        result_gt_23454 = python_operator(stypy.reporting.localization.Localization(__file__, 884, 19), '>', ndim_23452, int_23453)
        
        # Testing the type of an if condition (line 884)
        if_condition_23455 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 884, 16), result_gt_23454)
        # Assigning a type to the variable 'if_condition_23455' (line 884)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 884, 16), 'if_condition_23455', if_condition_23455)
        # SSA begins for if statement (line 884)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to _check(...): (line 886)
        # Processing the call arguments (line 886)
        # Getting the type of 'data' (line 886)
        data_23458 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 886, 32), 'data', False)
        # Obtaining the member 'T' of a type (line 886)
        T_23459 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 886, 32), data_23458, 'T')
        # Getting the type of 'routine' (line 886)
        routine_23460 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 886, 40), 'routine', False)
        # Getting the type of 'fftshape' (line 886)
        fftshape_23461 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 886, 49), 'fftshape', False)
        # Getting the type of 'axes' (line 886)
        axes_23462 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 886, 59), 'axes', False)
        # Processing the call keyword arguments (line 886)
        # Getting the type of 'overwrite_x' (line 887)
        overwrite_x_23463 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 887, 44), 'overwrite_x', False)
        keyword_23464 = overwrite_x_23463
        # Getting the type of 'False' (line 888)
        False_23465 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 888, 49), 'False', False)
        keyword_23466 = False_23465
        kwargs_23467 = {'should_overwrite': keyword_23466, 'overwrite_x': keyword_23464}
        # Getting the type of 'self' (line 886)
        self_23456 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 886, 20), 'self', False)
        # Obtaining the member '_check' of a type (line 886)
        _check_23457 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 886, 20), self_23456, '_check')
        # Calling _check(args, kwargs) (line 886)
        _check_call_result_23468 = invoke(stypy.reporting.localization.Localization(__file__, 886, 20), _check_23457, *[T_23459, routine_23460, fftshape_23461, axes_23462], **kwargs_23467)
        
        # SSA join for if statement (line 884)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of '_check_nd_one(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_check_nd_one' in the type store
        # Getting the type of 'stypy_return_type' (line 854)
        stypy_return_type_23469 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 854, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_23469)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_check_nd_one'
        return stypy_return_type_23469


    @norecursion
    def _check_nd(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_check_nd'
        module_type_store = module_type_store.open_function_context('_check_nd', 890, 4, False)
        # Assigning a type to the variable 'self' (line 891)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 891, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestOverwrite._check_nd.__dict__.__setitem__('stypy_localization', localization)
        TestOverwrite._check_nd.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestOverwrite._check_nd.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestOverwrite._check_nd.__dict__.__setitem__('stypy_function_name', 'TestOverwrite._check_nd')
        TestOverwrite._check_nd.__dict__.__setitem__('stypy_param_names_list', ['routine', 'dtype', 'overwritable'])
        TestOverwrite._check_nd.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestOverwrite._check_nd.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestOverwrite._check_nd.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestOverwrite._check_nd.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestOverwrite._check_nd.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestOverwrite._check_nd.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestOverwrite._check_nd', ['routine', 'dtype', 'overwritable'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_check_nd', localization, ['routine', 'dtype', 'overwritable'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_check_nd(...)' code ##################

        
        # Call to _check_nd_one(...): (line 891)
        # Processing the call arguments (line 891)
        # Getting the type of 'routine' (line 891)
        routine_23472 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 891, 27), 'routine', False)
        # Getting the type of 'dtype' (line 891)
        dtype_23473 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 891, 36), 'dtype', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 891)
        tuple_23474 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 891, 44), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 891)
        # Adding element type (line 891)
        int_23475 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 891, 44), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 891, 44), tuple_23474, int_23475)
        
        # Getting the type of 'None' (line 891)
        None_23476 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 891, 50), 'None', False)
        # Getting the type of 'overwritable' (line 891)
        overwritable_23477 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 891, 56), 'overwritable', False)
        # Processing the call keyword arguments (line 891)
        kwargs_23478 = {}
        # Getting the type of 'self' (line 891)
        self_23470 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 891, 8), 'self', False)
        # Obtaining the member '_check_nd_one' of a type (line 891)
        _check_nd_one_23471 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 891, 8), self_23470, '_check_nd_one')
        # Calling _check_nd_one(args, kwargs) (line 891)
        _check_nd_one_call_result_23479 = invoke(stypy.reporting.localization.Localization(__file__, 891, 8), _check_nd_one_23471, *[routine_23472, dtype_23473, tuple_23474, None_23476, overwritable_23477], **kwargs_23478)
        
        
        # Call to _check_nd_one(...): (line 892)
        # Processing the call arguments (line 892)
        # Getting the type of 'routine' (line 892)
        routine_23482 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 892, 27), 'routine', False)
        # Getting the type of 'dtype' (line 892)
        dtype_23483 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 892, 36), 'dtype', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 892)
        tuple_23484 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 892, 44), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 892)
        # Adding element type (line 892)
        int_23485 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 892, 44), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 892, 44), tuple_23484, int_23485)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 892)
        tuple_23486 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 892, 51), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 892)
        # Adding element type (line 892)
        int_23487 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 892, 51), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 892, 51), tuple_23486, int_23487)
        
        # Getting the type of 'overwritable' (line 892)
        overwritable_23488 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 892, 56), 'overwritable', False)
        # Processing the call keyword arguments (line 892)
        kwargs_23489 = {}
        # Getting the type of 'self' (line 892)
        self_23480 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 892, 8), 'self', False)
        # Obtaining the member '_check_nd_one' of a type (line 892)
        _check_nd_one_23481 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 892, 8), self_23480, '_check_nd_one')
        # Calling _check_nd_one(args, kwargs) (line 892)
        _check_nd_one_call_result_23490 = invoke(stypy.reporting.localization.Localization(__file__, 892, 8), _check_nd_one_23481, *[routine_23482, dtype_23483, tuple_23484, tuple_23486, overwritable_23488], **kwargs_23489)
        
        
        # Call to _check_nd_one(...): (line 893)
        # Processing the call arguments (line 893)
        # Getting the type of 'routine' (line 893)
        routine_23493 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 893, 27), 'routine', False)
        # Getting the type of 'dtype' (line 893)
        dtype_23494 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 893, 36), 'dtype', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 893)
        tuple_23495 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 893, 44), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 893)
        # Adding element type (line 893)
        int_23496 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 893, 44), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 893, 44), tuple_23495, int_23496)
        # Adding element type (line 893)
        int_23497 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 893, 48), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 893, 44), tuple_23495, int_23497)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 893)
        tuple_23498 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 893, 53), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 893)
        # Adding element type (line 893)
        int_23499 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 893, 53), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 893, 53), tuple_23498, int_23499)
        
        # Getting the type of 'overwritable' (line 893)
        overwritable_23500 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 893, 58), 'overwritable', False)
        # Processing the call keyword arguments (line 893)
        kwargs_23501 = {}
        # Getting the type of 'self' (line 893)
        self_23491 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 893, 8), 'self', False)
        # Obtaining the member '_check_nd_one' of a type (line 893)
        _check_nd_one_23492 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 893, 8), self_23491, '_check_nd_one')
        # Calling _check_nd_one(args, kwargs) (line 893)
        _check_nd_one_call_result_23502 = invoke(stypy.reporting.localization.Localization(__file__, 893, 8), _check_nd_one_23492, *[routine_23493, dtype_23494, tuple_23495, tuple_23498, overwritable_23500], **kwargs_23501)
        
        
        # Call to _check_nd_one(...): (line 894)
        # Processing the call arguments (line 894)
        # Getting the type of 'routine' (line 894)
        routine_23505 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 894, 27), 'routine', False)
        # Getting the type of 'dtype' (line 894)
        dtype_23506 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 894, 36), 'dtype', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 894)
        tuple_23507 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 894, 44), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 894)
        # Adding element type (line 894)
        int_23508 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 894, 44), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 894, 44), tuple_23507, int_23508)
        # Adding element type (line 894)
        int_23509 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 894, 47), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 894, 44), tuple_23507, int_23509)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 894)
        tuple_23510 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 894, 53), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 894)
        # Adding element type (line 894)
        int_23511 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 894, 53), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 894, 53), tuple_23510, int_23511)
        
        # Getting the type of 'overwritable' (line 894)
        overwritable_23512 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 894, 58), 'overwritable', False)
        # Processing the call keyword arguments (line 894)
        kwargs_23513 = {}
        # Getting the type of 'self' (line 894)
        self_23503 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 894, 8), 'self', False)
        # Obtaining the member '_check_nd_one' of a type (line 894)
        _check_nd_one_23504 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 894, 8), self_23503, '_check_nd_one')
        # Calling _check_nd_one(args, kwargs) (line 894)
        _check_nd_one_call_result_23514 = invoke(stypy.reporting.localization.Localization(__file__, 894, 8), _check_nd_one_23504, *[routine_23505, dtype_23506, tuple_23507, tuple_23510, overwritable_23512], **kwargs_23513)
        
        
        # Call to _check_nd_one(...): (line 895)
        # Processing the call arguments (line 895)
        # Getting the type of 'routine' (line 895)
        routine_23517 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 895, 27), 'routine', False)
        # Getting the type of 'dtype' (line 895)
        dtype_23518 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 895, 36), 'dtype', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 895)
        tuple_23519 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 895, 44), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 895)
        # Adding element type (line 895)
        int_23520 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 895, 44), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 895, 44), tuple_23519, int_23520)
        # Adding element type (line 895)
        int_23521 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 895, 47), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 895, 44), tuple_23519, int_23521)
        
        # Getting the type of 'None' (line 895)
        None_23522 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 895, 52), 'None', False)
        # Getting the type of 'overwritable' (line 895)
        overwritable_23523 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 895, 58), 'overwritable', False)
        # Processing the call keyword arguments (line 895)
        kwargs_23524 = {}
        # Getting the type of 'self' (line 895)
        self_23515 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 895, 8), 'self', False)
        # Obtaining the member '_check_nd_one' of a type (line 895)
        _check_nd_one_23516 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 895, 8), self_23515, '_check_nd_one')
        # Calling _check_nd_one(args, kwargs) (line 895)
        _check_nd_one_call_result_23525 = invoke(stypy.reporting.localization.Localization(__file__, 895, 8), _check_nd_one_23516, *[routine_23517, dtype_23518, tuple_23519, None_23522, overwritable_23523], **kwargs_23524)
        
        
        # Call to _check_nd_one(...): (line 896)
        # Processing the call arguments (line 896)
        # Getting the type of 'routine' (line 896)
        routine_23528 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 896, 27), 'routine', False)
        # Getting the type of 'dtype' (line 896)
        dtype_23529 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 896, 36), 'dtype', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 896)
        tuple_23530 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 896, 44), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 896)
        # Adding element type (line 896)
        int_23531 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 896, 44), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 896, 44), tuple_23530, int_23531)
        # Adding element type (line 896)
        int_23532 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 896, 47), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 896, 44), tuple_23530, int_23532)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 896)
        tuple_23533 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 896, 53), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 896)
        # Adding element type (line 896)
        int_23534 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 896, 53), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 896, 53), tuple_23533, int_23534)
        # Adding element type (line 896)
        int_23535 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 896, 56), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 896, 53), tuple_23533, int_23535)
        
        # Getting the type of 'overwritable' (line 896)
        overwritable_23536 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 896, 60), 'overwritable', False)
        # Processing the call keyword arguments (line 896)
        kwargs_23537 = {}
        # Getting the type of 'self' (line 896)
        self_23526 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 896, 8), 'self', False)
        # Obtaining the member '_check_nd_one' of a type (line 896)
        _check_nd_one_23527 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 896, 8), self_23526, '_check_nd_one')
        # Calling _check_nd_one(args, kwargs) (line 896)
        _check_nd_one_call_result_23538 = invoke(stypy.reporting.localization.Localization(__file__, 896, 8), _check_nd_one_23527, *[routine_23528, dtype_23529, tuple_23530, tuple_23533, overwritable_23536], **kwargs_23537)
        
        
        # Call to _check_nd_one(...): (line 897)
        # Processing the call arguments (line 897)
        # Getting the type of 'routine' (line 897)
        routine_23541 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 897, 27), 'routine', False)
        # Getting the type of 'dtype' (line 897)
        dtype_23542 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 897, 36), 'dtype', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 897)
        tuple_23543 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 897, 44), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 897)
        # Adding element type (line 897)
        int_23544 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 897, 44), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 897, 44), tuple_23543, int_23544)
        # Adding element type (line 897)
        int_23545 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 897, 47), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 897, 44), tuple_23543, int_23545)
        # Adding element type (line 897)
        int_23546 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 897, 51), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 897, 44), tuple_23543, int_23546)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 897)
        tuple_23547 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 897, 56), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 897)
        # Adding element type (line 897)
        int_23548 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 897, 56), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 897, 56), tuple_23547, int_23548)
        # Adding element type (line 897)
        int_23549 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 897, 59), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 897, 56), tuple_23547, int_23549)
        
        # Getting the type of 'overwritable' (line 897)
        overwritable_23550 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 897, 63), 'overwritable', False)
        # Processing the call keyword arguments (line 897)
        kwargs_23551 = {}
        # Getting the type of 'self' (line 897)
        self_23539 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 897, 8), 'self', False)
        # Obtaining the member '_check_nd_one' of a type (line 897)
        _check_nd_one_23540 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 897, 8), self_23539, '_check_nd_one')
        # Calling _check_nd_one(args, kwargs) (line 897)
        _check_nd_one_call_result_23552 = invoke(stypy.reporting.localization.Localization(__file__, 897, 8), _check_nd_one_23540, *[routine_23541, dtype_23542, tuple_23543, tuple_23547, overwritable_23550], **kwargs_23551)
        
        
        # Call to _check_nd_one(...): (line 898)
        # Processing the call arguments (line 898)
        # Getting the type of 'routine' (line 898)
        routine_23555 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 898, 27), 'routine', False)
        # Getting the type of 'dtype' (line 898)
        dtype_23556 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 898, 36), 'dtype', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 898)
        tuple_23557 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 898, 44), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 898)
        # Adding element type (line 898)
        int_23558 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 898, 44), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 898, 44), tuple_23557, int_23558)
        # Adding element type (line 898)
        int_23559 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 898, 47), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 898, 44), tuple_23557, int_23559)
        # Adding element type (line 898)
        int_23560 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 898, 51), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 898, 44), tuple_23557, int_23560)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 898)
        tuple_23561 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 898, 56), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 898)
        # Adding element type (line 898)
        int_23562 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 898, 56), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 898, 56), tuple_23561, int_23562)
        # Adding element type (line 898)
        int_23563 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 898, 59), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 898, 56), tuple_23561, int_23563)
        
        # Getting the type of 'overwritable' (line 898)
        overwritable_23564 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 898, 63), 'overwritable', False)
        # Processing the call keyword arguments (line 898)
        kwargs_23565 = {}
        # Getting the type of 'self' (line 898)
        self_23553 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 898, 8), 'self', False)
        # Obtaining the member '_check_nd_one' of a type (line 898)
        _check_nd_one_23554 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 898, 8), self_23553, '_check_nd_one')
        # Calling _check_nd_one(args, kwargs) (line 898)
        _check_nd_one_call_result_23566 = invoke(stypy.reporting.localization.Localization(__file__, 898, 8), _check_nd_one_23554, *[routine_23555, dtype_23556, tuple_23557, tuple_23561, overwritable_23564], **kwargs_23565)
        
        
        # Call to _check_nd_one(...): (line 899)
        # Processing the call arguments (line 899)
        # Getting the type of 'routine' (line 899)
        routine_23569 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 899, 27), 'routine', False)
        # Getting the type of 'dtype' (line 899)
        dtype_23570 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 899, 36), 'dtype', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 899)
        tuple_23571 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 899, 44), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 899)
        # Adding element type (line 899)
        int_23572 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 899, 44), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 899, 44), tuple_23571, int_23572)
        # Adding element type (line 899)
        int_23573 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 899, 47), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 899, 44), tuple_23571, int_23573)
        # Adding element type (line 899)
        int_23574 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 899, 51), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 899, 44), tuple_23571, int_23574)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 899)
        tuple_23575 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 899, 56), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 899)
        # Adding element type (line 899)
        int_23576 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 899, 56), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 899, 56), tuple_23575, int_23576)
        
        # Getting the type of 'overwritable' (line 899)
        overwritable_23577 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 899, 61), 'overwritable', False)
        # Processing the call keyword arguments (line 899)
        kwargs_23578 = {}
        # Getting the type of 'self' (line 899)
        self_23567 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 899, 8), 'self', False)
        # Obtaining the member '_check_nd_one' of a type (line 899)
        _check_nd_one_23568 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 899, 8), self_23567, '_check_nd_one')
        # Calling _check_nd_one(args, kwargs) (line 899)
        _check_nd_one_call_result_23579 = invoke(stypy.reporting.localization.Localization(__file__, 899, 8), _check_nd_one_23568, *[routine_23569, dtype_23570, tuple_23571, tuple_23575, overwritable_23577], **kwargs_23578)
        
        
        # Call to _check_nd_one(...): (line 900)
        # Processing the call arguments (line 900)
        # Getting the type of 'routine' (line 900)
        routine_23582 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 900, 27), 'routine', False)
        # Getting the type of 'dtype' (line 900)
        dtype_23583 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 900, 36), 'dtype', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 900)
        tuple_23584 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 900, 44), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 900)
        # Adding element type (line 900)
        int_23585 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 900, 44), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 900, 44), tuple_23584, int_23585)
        # Adding element type (line 900)
        int_23586 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 900, 47), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 900, 44), tuple_23584, int_23586)
        # Adding element type (line 900)
        int_23587 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 900, 51), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 900, 44), tuple_23584, int_23587)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 900)
        tuple_23588 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 900, 56), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 900)
        # Adding element type (line 900)
        int_23589 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 900, 56), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 900, 56), tuple_23588, int_23589)
        
        # Getting the type of 'overwritable' (line 900)
        overwritable_23590 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 900, 61), 'overwritable', False)
        # Processing the call keyword arguments (line 900)
        kwargs_23591 = {}
        # Getting the type of 'self' (line 900)
        self_23580 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 900, 8), 'self', False)
        # Obtaining the member '_check_nd_one' of a type (line 900)
        _check_nd_one_23581 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 900, 8), self_23580, '_check_nd_one')
        # Calling _check_nd_one(args, kwargs) (line 900)
        _check_nd_one_call_result_23592 = invoke(stypy.reporting.localization.Localization(__file__, 900, 8), _check_nd_one_23581, *[routine_23582, dtype_23583, tuple_23584, tuple_23588, overwritable_23590], **kwargs_23591)
        
        
        # Call to _check_nd_one(...): (line 901)
        # Processing the call arguments (line 901)
        # Getting the type of 'routine' (line 901)
        routine_23595 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 901, 27), 'routine', False)
        # Getting the type of 'dtype' (line 901)
        dtype_23596 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 901, 36), 'dtype', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 901)
        tuple_23597 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 901, 44), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 901)
        # Adding element type (line 901)
        int_23598 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 901, 44), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 901, 44), tuple_23597, int_23598)
        # Adding element type (line 901)
        int_23599 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 901, 47), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 901, 44), tuple_23597, int_23599)
        # Adding element type (line 901)
        int_23600 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 901, 51), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 901, 44), tuple_23597, int_23600)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 901)
        tuple_23601 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 901, 56), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 901)
        # Adding element type (line 901)
        int_23602 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 901, 56), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 901, 56), tuple_23601, int_23602)
        
        # Getting the type of 'overwritable' (line 901)
        overwritable_23603 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 901, 61), 'overwritable', False)
        # Processing the call keyword arguments (line 901)
        kwargs_23604 = {}
        # Getting the type of 'self' (line 901)
        self_23593 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 901, 8), 'self', False)
        # Obtaining the member '_check_nd_one' of a type (line 901)
        _check_nd_one_23594 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 901, 8), self_23593, '_check_nd_one')
        # Calling _check_nd_one(args, kwargs) (line 901)
        _check_nd_one_call_result_23605 = invoke(stypy.reporting.localization.Localization(__file__, 901, 8), _check_nd_one_23594, *[routine_23595, dtype_23596, tuple_23597, tuple_23601, overwritable_23603], **kwargs_23604)
        
        
        # Call to _check_nd_one(...): (line 902)
        # Processing the call arguments (line 902)
        # Getting the type of 'routine' (line 902)
        routine_23608 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 902, 27), 'routine', False)
        # Getting the type of 'dtype' (line 902)
        dtype_23609 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 902, 36), 'dtype', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 902)
        tuple_23610 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 902, 44), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 902)
        # Adding element type (line 902)
        int_23611 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 902, 44), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 902, 44), tuple_23610, int_23611)
        # Adding element type (line 902)
        int_23612 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 902, 47), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 902, 44), tuple_23610, int_23612)
        # Adding element type (line 902)
        int_23613 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 902, 51), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 902, 44), tuple_23610, int_23613)
        
        # Getting the type of 'None' (line 902)
        None_23614 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 902, 55), 'None', False)
        # Getting the type of 'overwritable' (line 902)
        overwritable_23615 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 902, 61), 'overwritable', False)
        # Processing the call keyword arguments (line 902)
        kwargs_23616 = {}
        # Getting the type of 'self' (line 902)
        self_23606 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 902, 8), 'self', False)
        # Obtaining the member '_check_nd_one' of a type (line 902)
        _check_nd_one_23607 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 902, 8), self_23606, '_check_nd_one')
        # Calling _check_nd_one(args, kwargs) (line 902)
        _check_nd_one_call_result_23617 = invoke(stypy.reporting.localization.Localization(__file__, 902, 8), _check_nd_one_23607, *[routine_23608, dtype_23609, tuple_23610, None_23614, overwritable_23615], **kwargs_23616)
        
        
        # Call to _check_nd_one(...): (line 903)
        # Processing the call arguments (line 903)
        # Getting the type of 'routine' (line 903)
        routine_23620 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 903, 27), 'routine', False)
        # Getting the type of 'dtype' (line 903)
        dtype_23621 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 903, 36), 'dtype', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 903)
        tuple_23622 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 903, 44), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 903)
        # Adding element type (line 903)
        int_23623 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 903, 44), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 903, 44), tuple_23622, int_23623)
        # Adding element type (line 903)
        int_23624 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 903, 47), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 903, 44), tuple_23622, int_23624)
        # Adding element type (line 903)
        int_23625 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 903, 51), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 903, 44), tuple_23622, int_23625)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 903)
        tuple_23626 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 903, 56), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 903)
        # Adding element type (line 903)
        int_23627 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 903, 56), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 903, 56), tuple_23626, int_23627)
        # Adding element type (line 903)
        int_23628 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 903, 58), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 903, 56), tuple_23626, int_23628)
        # Adding element type (line 903)
        int_23629 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 903, 60), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 903, 56), tuple_23626, int_23629)
        
        # Getting the type of 'overwritable' (line 903)
        overwritable_23630 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 903, 64), 'overwritable', False)
        # Processing the call keyword arguments (line 903)
        kwargs_23631 = {}
        # Getting the type of 'self' (line 903)
        self_23618 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 903, 8), 'self', False)
        # Obtaining the member '_check_nd_one' of a type (line 903)
        _check_nd_one_23619 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 903, 8), self_23618, '_check_nd_one')
        # Calling _check_nd_one(args, kwargs) (line 903)
        _check_nd_one_call_result_23632 = invoke(stypy.reporting.localization.Localization(__file__, 903, 8), _check_nd_one_23619, *[routine_23620, dtype_23621, tuple_23622, tuple_23626, overwritable_23630], **kwargs_23631)
        
        
        # ################# End of '_check_nd(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_check_nd' in the type store
        # Getting the type of 'stypy_return_type' (line 890)
        stypy_return_type_23633 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 890, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_23633)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_check_nd'
        return stypy_return_type_23633


    @norecursion
    def test_fftn(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_fftn'
        module_type_store = module_type_store.open_function_context('test_fftn', 905, 4, False)
        # Assigning a type to the variable 'self' (line 906)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 906, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestOverwrite.test_fftn.__dict__.__setitem__('stypy_localization', localization)
        TestOverwrite.test_fftn.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestOverwrite.test_fftn.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestOverwrite.test_fftn.__dict__.__setitem__('stypy_function_name', 'TestOverwrite.test_fftn')
        TestOverwrite.test_fftn.__dict__.__setitem__('stypy_param_names_list', [])
        TestOverwrite.test_fftn.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestOverwrite.test_fftn.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestOverwrite.test_fftn.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestOverwrite.test_fftn.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestOverwrite.test_fftn.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestOverwrite.test_fftn.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestOverwrite.test_fftn', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_fftn', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_fftn(...)' code ##################

        
        # Assigning a Tuple to a Name (line 906):
        
        # Obtaining an instance of the builtin type 'tuple' (line 906)
        tuple_23634 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 906, 24), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 906)
        # Adding element type (line 906)
        # Getting the type of 'np' (line 906)
        np_23635 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 906, 24), 'np')
        # Obtaining the member 'complex128' of a type (line 906)
        complex128_23636 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 906, 24), np_23635, 'complex128')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 906, 24), tuple_23634, complex128_23636)
        # Adding element type (line 906)
        # Getting the type of 'np' (line 906)
        np_23637 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 906, 39), 'np')
        # Obtaining the member 'complex64' of a type (line 906)
        complex64_23638 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 906, 39), np_23637, 'complex64')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 906, 24), tuple_23634, complex64_23638)
        
        # Assigning a type to the variable 'overwritable' (line 906)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 906, 8), 'overwritable', tuple_23634)
        
        # Getting the type of 'self' (line 907)
        self_23639 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 907, 21), 'self')
        # Obtaining the member 'dtypes' of a type (line 907)
        dtypes_23640 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 907, 21), self_23639, 'dtypes')
        # Testing the type of a for loop iterable (line 907)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 907, 8), dtypes_23640)
        # Getting the type of the for loop variable (line 907)
        for_loop_var_23641 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 907, 8), dtypes_23640)
        # Assigning a type to the variable 'dtype' (line 907)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 907, 8), 'dtype', for_loop_var_23641)
        # SSA begins for a for statement (line 907)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to _check_nd(...): (line 908)
        # Processing the call arguments (line 908)
        # Getting the type of 'fftn' (line 908)
        fftn_23644 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 908, 27), 'fftn', False)
        # Getting the type of 'dtype' (line 908)
        dtype_23645 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 908, 33), 'dtype', False)
        # Getting the type of 'overwritable' (line 908)
        overwritable_23646 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 908, 40), 'overwritable', False)
        # Processing the call keyword arguments (line 908)
        kwargs_23647 = {}
        # Getting the type of 'self' (line 908)
        self_23642 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 908, 12), 'self', False)
        # Obtaining the member '_check_nd' of a type (line 908)
        _check_nd_23643 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 908, 12), self_23642, '_check_nd')
        # Calling _check_nd(args, kwargs) (line 908)
        _check_nd_call_result_23648 = invoke(stypy.reporting.localization.Localization(__file__, 908, 12), _check_nd_23643, *[fftn_23644, dtype_23645, overwritable_23646], **kwargs_23647)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_fftn(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_fftn' in the type store
        # Getting the type of 'stypy_return_type' (line 905)
        stypy_return_type_23649 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 905, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_23649)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_fftn'
        return stypy_return_type_23649


    @norecursion
    def test_ifftn(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_ifftn'
        module_type_store = module_type_store.open_function_context('test_ifftn', 910, 4, False)
        # Assigning a type to the variable 'self' (line 911)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 911, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestOverwrite.test_ifftn.__dict__.__setitem__('stypy_localization', localization)
        TestOverwrite.test_ifftn.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestOverwrite.test_ifftn.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestOverwrite.test_ifftn.__dict__.__setitem__('stypy_function_name', 'TestOverwrite.test_ifftn')
        TestOverwrite.test_ifftn.__dict__.__setitem__('stypy_param_names_list', [])
        TestOverwrite.test_ifftn.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestOverwrite.test_ifftn.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestOverwrite.test_ifftn.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestOverwrite.test_ifftn.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestOverwrite.test_ifftn.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestOverwrite.test_ifftn.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestOverwrite.test_ifftn', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_ifftn', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_ifftn(...)' code ##################

        
        # Assigning a Tuple to a Name (line 911):
        
        # Obtaining an instance of the builtin type 'tuple' (line 911)
        tuple_23650 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 911, 24), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 911)
        # Adding element type (line 911)
        # Getting the type of 'np' (line 911)
        np_23651 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 911, 24), 'np')
        # Obtaining the member 'complex128' of a type (line 911)
        complex128_23652 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 911, 24), np_23651, 'complex128')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 911, 24), tuple_23650, complex128_23652)
        # Adding element type (line 911)
        # Getting the type of 'np' (line 911)
        np_23653 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 911, 39), 'np')
        # Obtaining the member 'complex64' of a type (line 911)
        complex64_23654 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 911, 39), np_23653, 'complex64')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 911, 24), tuple_23650, complex64_23654)
        
        # Assigning a type to the variable 'overwritable' (line 911)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 911, 8), 'overwritable', tuple_23650)
        
        # Getting the type of 'self' (line 912)
        self_23655 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 912, 21), 'self')
        # Obtaining the member 'dtypes' of a type (line 912)
        dtypes_23656 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 912, 21), self_23655, 'dtypes')
        # Testing the type of a for loop iterable (line 912)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 912, 8), dtypes_23656)
        # Getting the type of the for loop variable (line 912)
        for_loop_var_23657 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 912, 8), dtypes_23656)
        # Assigning a type to the variable 'dtype' (line 912)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 912, 8), 'dtype', for_loop_var_23657)
        # SSA begins for a for statement (line 912)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to _check_nd(...): (line 913)
        # Processing the call arguments (line 913)
        # Getting the type of 'ifftn' (line 913)
        ifftn_23660 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 913, 27), 'ifftn', False)
        # Getting the type of 'dtype' (line 913)
        dtype_23661 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 913, 34), 'dtype', False)
        # Getting the type of 'overwritable' (line 913)
        overwritable_23662 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 913, 41), 'overwritable', False)
        # Processing the call keyword arguments (line 913)
        kwargs_23663 = {}
        # Getting the type of 'self' (line 913)
        self_23658 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 913, 12), 'self', False)
        # Obtaining the member '_check_nd' of a type (line 913)
        _check_nd_23659 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 913, 12), self_23658, '_check_nd')
        # Calling _check_nd(args, kwargs) (line 913)
        _check_nd_call_result_23664 = invoke(stypy.reporting.localization.Localization(__file__, 913, 12), _check_nd_23659, *[ifftn_23660, dtype_23661, overwritable_23662], **kwargs_23663)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_ifftn(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_ifftn' in the type store
        # Getting the type of 'stypy_return_type' (line 910)
        stypy_return_type_23665 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 910, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_23665)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_ifftn'
        return stypy_return_type_23665


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 790, 0, False)
        # Assigning a type to the variable 'self' (line 791)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 791, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestOverwrite.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'TestOverwrite' (line 790)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 790, 0), 'TestOverwrite', TestOverwrite)

# Assigning a List to a Name (line 793):

# Obtaining an instance of the builtin type 'list' (line 793)
list_23666 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 793, 18), 'list')
# Adding type elements to the builtin type 'list' instance (line 793)
# Adding element type (line 793)
# Getting the type of 'np' (line 793)
np_23667 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 793, 19), 'np')
# Obtaining the member 'float32' of a type (line 793)
float32_23668 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 793, 19), np_23667, 'float32')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 793, 18), list_23666, float32_23668)
# Adding element type (line 793)
# Getting the type of 'np' (line 793)
np_23669 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 793, 31), 'np')
# Obtaining the member 'float64' of a type (line 793)
float64_23670 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 793, 31), np_23669, 'float64')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 793, 18), list_23666, float64_23670)

# Getting the type of 'TestOverwrite'
TestOverwrite_23671 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'TestOverwrite')
# Setting the type of the member 'real_dtypes' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), TestOverwrite_23671, 'real_dtypes', list_23666)

# Assigning a BinOp to a Name (line 794):
# Getting the type of 'TestOverwrite'
TestOverwrite_23672 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'TestOverwrite')
# Obtaining the member 'real_dtypes' of a type
real_dtypes_23673 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), TestOverwrite_23672, 'real_dtypes')

# Obtaining an instance of the builtin type 'list' (line 794)
list_23674 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 794, 27), 'list')
# Adding type elements to the builtin type 'list' instance (line 794)
# Adding element type (line 794)
# Getting the type of 'np' (line 794)
np_23675 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 794, 28), 'np')
# Obtaining the member 'complex64' of a type (line 794)
complex64_23676 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 794, 28), np_23675, 'complex64')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 794, 27), list_23674, complex64_23676)
# Adding element type (line 794)
# Getting the type of 'np' (line 794)
np_23677 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 794, 42), 'np')
# Obtaining the member 'complex128' of a type (line 794)
complex128_23678 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 794, 42), np_23677, 'complex128')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 794, 27), list_23674, complex128_23678)

# Applying the binary operator '+' (line 794)
result_add_23679 = python_operator(stypy.reporting.localization.Localization(__file__, 794, 13), '+', real_dtypes_23673, list_23674)

# Getting the type of 'TestOverwrite'
TestOverwrite_23680 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'TestOverwrite')
# Setting the type of the member 'dtypes' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), TestOverwrite_23680, 'dtypes', result_add_23679)

# ################# End of the type inference program ##################

module_errors = stypy.errors.type_error.StypyTypeError.get_error_msgs()
module_warnings = stypy.errors.type_warning.TypeWarning.get_warning_msgs()
